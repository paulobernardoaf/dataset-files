<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\libtomcrypt-analysis\_cppstats\libtomcrypt\src\ciphers\safer\saferp.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tomcrypt_private.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LTC_SAFERP</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__LTC_SAFER_TAB_C__</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"safer_tab.c"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>ltc_cipher_descriptor</name></name></type> <name>saferp_desc</name> <init>=

<expr><block>{

<expr><literal type="string">"safer+"</literal></expr>,

<expr><literal type="number">4</literal></expr>,

<expr><literal type="number">16</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">8</literal></expr>,

<expr><operator>&amp;</operator><name>saferp_setup</name></expr>,

<expr><operator>&amp;</operator><name>saferp_ecb_encrypt</name></expr>,

<expr><operator>&amp;</operator><name>saferp_ecb_decrypt</name></expr>,

<expr><operator>&amp;</operator><name>saferp_test</name></expr>,

<expr><operator>&amp;</operator><name>saferp_done</name></expr>,

<expr><operator>&amp;</operator><name>saferp_keysize</name></expr>,

<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>

}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ROUND</name><parameter_list>(<parameter><type><name>b</name></type></parameter>, <parameter><type><name>i</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { b[0] = (safer_ebox[(b[0] ^ skey-&gt;saferp.K[i][0]) &amp; 255] + skey-&gt;saferp.K[i+1][0]) &amp; 255; b[1] = safer_lbox[(b[1] + skey-&gt;saferp.K[i][1]) &amp; 255] ^ skey-&gt;saferp.K[i+1][1]; b[2] = safer_lbox[(b[2] + skey-&gt;saferp.K[i][2]) &amp; 255] ^ skey-&gt;saferp.K[i+1][2]; b[3] = (safer_ebox[(b[3] ^ skey-&gt;saferp.K[i][3]) &amp; 255] + skey-&gt;saferp.K[i+1][3]) &amp; 255; b[4] = (safer_ebox[(b[4] ^ skey-&gt;saferp.K[i][4]) &amp; 255] + skey-&gt;saferp.K[i+1][4]) &amp; 255; b[5] = safer_lbox[(b[5] + skey-&gt;saferp.K[i][5]) &amp; 255] ^ skey-&gt;saferp.K[i+1][5]; b[6] = safer_lbox[(b[6] + skey-&gt;saferp.K[i][6]) &amp; 255] ^ skey-&gt;saferp.K[i+1][6]; b[7] = (safer_ebox[(b[7] ^ skey-&gt;saferp.K[i][7]) &amp; 255] + skey-&gt;saferp.K[i+1][7]) &amp; 255; b[8] = (safer_ebox[(b[8] ^ skey-&gt;saferp.K[i][8]) &amp; 255] + skey-&gt;saferp.K[i+1][8]) &amp; 255; b[9] = safer_lbox[(b[9] + skey-&gt;saferp.K[i][9]) &amp; 255] ^ skey-&gt;saferp.K[i+1][9]; b[10] = safer_lbox[(b[10] + skey-&gt;saferp.K[i][10]) &amp; 255] ^ skey-&gt;saferp.K[i+1][10]; b[11] = (safer_ebox[(b[11] ^ skey-&gt;saferp.K[i][11]) &amp; 255] + skey-&gt;saferp.K[i+1][11]) &amp; 255; b[12] = (safer_ebox[(b[12] ^ skey-&gt;saferp.K[i][12]) &amp; 255] + skey-&gt;saferp.K[i+1][12]) &amp; 255; b[13] = safer_lbox[(b[13] + skey-&gt;saferp.K[i][13]) &amp; 255] ^ skey-&gt;saferp.K[i+1][13]; b[14] = safer_lbox[(b[14] + skey-&gt;saferp.K[i][14]) &amp; 255] ^ skey-&gt;saferp.K[i+1][14]; b[15] = (safer_ebox[(b[15] ^ skey-&gt;saferp.K[i][15]) &amp; 255] + skey-&gt;saferp.K[i+1][15]) &amp; 255; } while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>iROUND</name><parameter_list>(<parameter><type><name>b</name></type></parameter>, <parameter><type><name>i</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { b[0] = safer_lbox[(b[0] - skey-&gt;saferp.K[i+1][0]) &amp; 255] ^ skey-&gt;saferp.K[i][0]; b[1] = (safer_ebox[(b[1] ^ skey-&gt;saferp.K[i+1][1]) &amp; 255] - skey-&gt;saferp.K[i][1]) &amp; 255; b[2] = (safer_ebox[(b[2] ^ skey-&gt;saferp.K[i+1][2]) &amp; 255] - skey-&gt;saferp.K[i][2]) &amp; 255; b[3] = safer_lbox[(b[3] - skey-&gt;saferp.K[i+1][3]) &amp; 255] ^ skey-&gt;saferp.K[i][3]; b[4] = safer_lbox[(b[4] - skey-&gt;saferp.K[i+1][4]) &amp; 255] ^ skey-&gt;saferp.K[i][4]; b[5] = (safer_ebox[(b[5] ^ skey-&gt;saferp.K[i+1][5]) &amp; 255] - skey-&gt;saferp.K[i][5]) &amp; 255; b[6] = (safer_ebox[(b[6] ^ skey-&gt;saferp.K[i+1][6]) &amp; 255] - skey-&gt;saferp.K[i][6]) &amp; 255; b[7] = safer_lbox[(b[7] - skey-&gt;saferp.K[i+1][7]) &amp; 255] ^ skey-&gt;saferp.K[i][7]; b[8] = safer_lbox[(b[8] - skey-&gt;saferp.K[i+1][8]) &amp; 255] ^ skey-&gt;saferp.K[i][8]; b[9] = (safer_ebox[(b[9] ^ skey-&gt;saferp.K[i+1][9]) &amp; 255] - skey-&gt;saferp.K[i][9]) &amp; 255; b[10] = (safer_ebox[(b[10] ^ skey-&gt;saferp.K[i+1][10]) &amp; 255] - skey-&gt;saferp.K[i][10]) &amp; 255; b[11] = safer_lbox[(b[11] - skey-&gt;saferp.K[i+1][11]) &amp; 255] ^ skey-&gt;saferp.K[i][11]; b[12] = safer_lbox[(b[12] - skey-&gt;saferp.K[i+1][12]) &amp; 255] ^ skey-&gt;saferp.K[i][12]; b[13] = (safer_ebox[(b[13] ^ skey-&gt;saferp.K[i+1][13]) &amp; 255] - skey-&gt;saferp.K[i][13]) &amp; 255; b[14] = (safer_ebox[(b[14] ^ skey-&gt;saferp.K[i+1][14]) &amp; 255] - skey-&gt;saferp.K[i][14]) &amp; 255; b[15] = safer_lbox[(b[15] - skey-&gt;saferp.K[i+1][15]) &amp; 255] ^ skey-&gt;saferp.K[i][15]; } while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PHT</name><parameter_list>(<parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { b[0] = (b[0] + (b[1] = (b[0] + b[1]) &amp; 255)) &amp; 255; b[2] = (b[2] + (b[3] = (b[3] + b[2]) &amp; 255)) &amp; 255; b[4] = (b[4] + (b[5] = (b[5] + b[4]) &amp; 255)) &amp; 255; b[6] = (b[6] + (b[7] = (b[7] + b[6]) &amp; 255)) &amp; 255; b[8] = (b[8] + (b[9] = (b[9] + b[8]) &amp; 255)) &amp; 255; b[10] = (b[10] + (b[11] = (b[11] + b[10]) &amp; 255)) &amp; 255; b[12] = (b[12] + (b[13] = (b[13] + b[12]) &amp; 255)) &amp; 255; b[14] = (b[14] + (b[15] = (b[15] + b[14]) &amp; 255)) &amp; 255; } while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>iPHT</name><parameter_list>(<parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { b[15] = (b[15] - (b[14] = (b[14] - b[15]) &amp; 255)) &amp; 255; b[13] = (b[13] - (b[12] = (b[12] - b[13]) &amp; 255)) &amp; 255; b[11] = (b[11] - (b[10] = (b[10] - b[11]) &amp; 255)) &amp; 255; b[9] = (b[9] - (b[8] = (b[8] - b[9]) &amp; 255)) &amp; 255; b[7] = (b[7] - (b[6] = (b[6] - b[7]) &amp; 255)) &amp; 255; b[5] = (b[5] - (b[4] = (b[4] - b[5]) &amp; 255)) &amp; 255; b[3] = (b[3] - (b[2] = (b[2] - b[3]) &amp; 255)) &amp; 255; b[1] = (b[1] - (b[0] = (b[0] - b[1]) &amp; 255)) &amp; 255; } while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHUF</name><parameter_list>(<parameter><type><name>b</name></type></parameter>, <parameter><type><name>b2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { b2[0] = b[8]; b2[1] = b[11]; b2[2] = b[12]; b2[3] = b[15]; b2[4] = b[2]; b2[5] = b[1]; b2[6] = b[6]; b2[7] = b[5]; b2[8] = b[10]; b2[9] = b[9]; b2[10] = b[14]; b2[11] = b[13]; b2[12] = b[0]; b2[13] = b[7]; b2[14] = b[4]; b2[15] = b[3]; } while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>iSHUF</name><parameter_list>(<parameter><type><name>b</name></type></parameter>, <parameter><type><name>b2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { b2[0] = b[12]; b2[1] = b[5]; b2[2] = b[4]; b2[3] = b[15]; b2[4] = b[14]; b2[5] = b[7]; b2[6] = b[6]; b2[7] = b[13]; b2[8] = b[0]; b2[9] = b[9]; b2[10] = b[8]; b2[11] = b[1]; b2[12] = b[2]; b2[13] = b[11]; b2[14] = b[10]; b2[15] = b[3]; } while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LT</name><parameter_list>(<parameter><type><name>b</name></type></parameter>, <parameter><type><name>b2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { PHT(b); SHUF(b, b2); PHT(b2); SHUF(b2, b); PHT(b); SHUF(b, b2); PHT(b2); } while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>iLT</name><parameter_list>(<parameter><type><name>b</name></type></parameter>, <parameter><type><name>b2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { iPHT(b); iSHUF(b, b2); iPHT(b2); iSHUF(b2, b); iPHT(b); iSHUF(b, b2); iPHT(b2); } while (0)</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LTC_SMALL_CODE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function><type><specifier>static</specifier> <name>void</name></type> <name>_round</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>symmetric_key</name> <modifier>*</modifier></type><name>skey</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>_iround</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>symmetric_key</name> <modifier>*</modifier></type><name>skey</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>iROUND</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>_lt</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>b2</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>LT</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>b2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>_ilt</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>b2</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>iLT</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>b2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>ROUND</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ROUND</name><parameter_list>(<parameter><type><name>b</name></type></parameter>, <parameter><type><name>i</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_round(b, i, skey)</cpp:value></cpp:define>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>iROUND</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>iROUND</name><parameter_list>(<parameter><type><name>b</name></type></parameter>, <parameter><type><name>i</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_iround(b, i, skey)</cpp:value></cpp:define>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>LT</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LT</name><parameter_list>(<parameter><type><name>b</name></type></parameter>, <parameter><type><name>b2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_lt(b, b2)</cpp:value></cpp:define>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>iLT</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>iLT</name><parameter_list>(<parameter><type><name>b</name></type></parameter>, <parameter><type><name>b2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_ilt(b, b2)</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name></type> <name><name>safer_bias</name><index>[<expr><literal type="number">33</literal></expr>]</index><index>[<expr><literal type="number">16</literal></expr>]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><literal type="number">70</literal></expr>, <expr><literal type="number">151</literal></expr>, <expr><literal type="number">177</literal></expr>, <expr><literal type="number">186</literal></expr>, <expr><literal type="number">163</literal></expr>, <expr><literal type="number">183</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">197</literal></expr>, <expr><literal type="number">55</literal></expr>, <expr><literal type="number">179</literal></expr>, <expr><literal type="number">201</literal></expr>, <expr><literal type="number">90</literal></expr>, <expr><literal type="number">40</literal></expr>, <expr><literal type="number">172</literal></expr>, <expr><literal type="number">100</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">236</literal></expr>, <expr><literal type="number">171</literal></expr>, <expr><literal type="number">170</literal></expr>, <expr><literal type="number">198</literal></expr>, <expr><literal type="number">103</literal></expr>, <expr><literal type="number">149</literal></expr>, <expr><literal type="number">88</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">248</literal></expr>, <expr><literal type="number">154</literal></expr>, <expr><literal type="number">246</literal></expr>, <expr><literal type="number">110</literal></expr>, <expr><literal type="number">102</literal></expr>, <expr><literal type="number">220</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">61</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">138</literal></expr>, <expr><literal type="number">195</literal></expr>, <expr><literal type="number">216</literal></expr>, <expr><literal type="number">137</literal></expr>, <expr><literal type="number">106</literal></expr>, <expr><literal type="number">233</literal></expr>, <expr><literal type="number">54</literal></expr>, <expr><literal type="number">73</literal></expr>, <expr><literal type="number">67</literal></expr>, <expr><literal type="number">191</literal></expr>, <expr><literal type="number">235</literal></expr>, <expr><literal type="number">212</literal></expr>, <expr><literal type="number">150</literal></expr>, <expr><literal type="number">155</literal></expr>, <expr><literal type="number">104</literal></expr>, <expr><literal type="number">160</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">93</literal></expr>, <expr><literal type="number">87</literal></expr>, <expr><literal type="number">146</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">213</literal></expr>, <expr><literal type="number">113</literal></expr>, <expr><literal type="number">92</literal></expr>, <expr><literal type="number">187</literal></expr>, <expr><literal type="number">34</literal></expr>, <expr><literal type="number">193</literal></expr>, <expr><literal type="number">190</literal></expr>, <expr><literal type="number">123</literal></expr>, <expr><literal type="number">188</literal></expr>, <expr><literal type="number">153</literal></expr>, <expr><literal type="number">99</literal></expr>, <expr><literal type="number">148</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">42</literal></expr>, <expr><literal type="number">97</literal></expr>, <expr><literal type="number">184</literal></expr>, <expr><literal type="number">52</literal></expr>, <expr><literal type="number">50</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">253</literal></expr>, <expr><literal type="number">251</literal></expr>, <expr><literal type="number">23</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">230</literal></expr>, <expr><literal type="number">81</literal></expr>, <expr><literal type="number">29</literal></expr>, <expr><literal type="number">65</literal></expr>, <expr><literal type="number">68</literal></expr>, <expr><literal type="number">143</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">221</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">128</literal></expr>, <expr><literal type="number">222</literal></expr>, <expr><literal type="number">231</literal></expr>, <expr><literal type="number">49</literal></expr>, <expr><literal type="number">214</literal></expr>, <expr><literal type="number">127</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">162</literal></expr>, <expr><literal type="number">247</literal></expr>, <expr><literal type="number">57</literal></expr>, <expr><literal type="number">218</literal></expr>, <expr><literal type="number">111</literal></expr>, <expr><literal type="number">35</literal></expr>, <expr><literal type="number">202</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">58</literal></expr>, <expr><literal type="number">208</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">209</literal></expr>, <expr><literal type="number">48</literal></expr>, <expr><literal type="number">62</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">161</literal></expr>, <expr><literal type="number">205</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">224</literal></expr>, <expr><literal type="number">168</literal></expr>, <expr><literal type="number">175</literal></expr>, <expr><literal type="number">130</literal></expr>, <expr><literal type="number">89</literal></expr>, <expr><literal type="number">44</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">125</literal></expr>, <expr><literal type="number">173</literal></expr>, <expr><literal type="number">178</literal></expr>, <expr><literal type="number">239</literal></expr>, <expr><literal type="number">194</literal></expr>, <expr><literal type="number">135</literal></expr>, <expr><literal type="number">206</literal></expr>, <expr><literal type="number">117</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">144</literal></expr>, <expr><literal type="number">79</literal></expr>, <expr><literal type="number">46</literal></expr>, <expr><literal type="number">114</literal></expr>, <expr><literal type="number">51</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">192</literal></expr>, <expr><literal type="number">141</literal></expr>, <expr><literal type="number">207</literal></expr>, <expr><literal type="number">169</literal></expr>, <expr><literal type="number">129</literal></expr>, <expr><literal type="number">226</literal></expr>, <expr><literal type="number">196</literal></expr>, <expr><literal type="number">39</literal></expr>, <expr><literal type="number">47</literal></expr>, <expr><literal type="number">108</literal></expr>, <expr><literal type="number">122</literal></expr>, <expr><literal type="number">159</literal></expr>, <expr><literal type="number">82</literal></expr>, <expr><literal type="number">225</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">56</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">252</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">66</literal></expr>, <expr><literal type="number">199</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">228</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">85</literal></expr>, <expr><literal type="number">94</literal></expr>, <expr><literal type="number">140</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">118</literal></expr>, <expr><literal type="number">96</literal></expr>, <expr><literal type="number">255</literal></expr>, <expr><literal type="number">223</literal></expr>, <expr><literal type="number">215</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">250</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">33</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">249</literal></expr>, <expr><literal type="number">166</literal></expr>, <expr><literal type="number">185</literal></expr>, <expr><literal type="number">232</literal></expr>, <expr><literal type="number">158</literal></expr>, <expr><literal type="number">98</literal></expr>, <expr><literal type="number">76</literal></expr>, <expr><literal type="number">217</literal></expr>, <expr><literal type="number">145</literal></expr>, <expr><literal type="number">80</literal></expr>, <expr><literal type="number">210</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">24</literal></expr>, <expr><literal type="number">180</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">132</literal></expr>, <expr><literal type="number">234</literal></expr>, <expr><literal type="number">91</literal></expr>, <expr><literal type="number">164</literal></expr>, <expr><literal type="number">200</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">203</literal></expr>, <expr><literal type="number">72</literal></expr>, <expr><literal type="number">105</literal></expr>, <expr><literal type="number">75</literal></expr>, <expr><literal type="number">78</literal></expr>, <expr><literal type="number">156</literal></expr>, <expr><literal type="number">53</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">69</literal></expr>, <expr><literal type="number">77</literal></expr>, <expr><literal type="number">84</literal></expr>, <expr><literal type="number">229</literal></expr>, <expr><literal type="number">37</literal></expr>, <expr><literal type="number">60</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">74</literal></expr>, <expr><literal type="number">139</literal></expr>, <expr><literal type="number">63</literal></expr>, <expr><literal type="number">204</literal></expr>, <expr><literal type="number">167</literal></expr>, <expr><literal type="number">219</literal></expr>, <expr><literal type="number">107</literal></expr>, <expr><literal type="number">174</literal></expr>, <expr><literal type="number">244</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">45</literal></expr>, <expr><literal type="number">243</literal></expr>, <expr><literal type="number">124</literal></expr>, <expr><literal type="number">109</literal></expr>, <expr><literal type="number">157</literal></expr>, <expr><literal type="number">181</literal></expr>, <expr><literal type="number">38</literal></expr>, <expr><literal type="number">116</literal></expr>, <expr><literal type="number">242</literal></expr>, <expr><literal type="number">147</literal></expr>, <expr><literal type="number">83</literal></expr>, <expr><literal type="number">176</literal></expr>, <expr><literal type="number">240</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">237</literal></expr>, <expr><literal type="number">131</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">182</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">115</literal></expr>, <expr><literal type="number">59</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">142</literal></expr>, <expr><literal type="number">112</literal></expr>, <expr><literal type="number">189</literal></expr>, <expr><literal type="number">134</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">71</literal></expr>, <expr><literal type="number">126</literal></expr>, <expr><literal type="number">36</literal></expr>, <expr><literal type="number">86</literal></expr>, <expr><literal type="number">241</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">136</literal></expr>, <expr><literal type="number">70</literal></expr>, <expr><literal type="number">151</literal></expr>, <expr><literal type="number">177</literal></expr>, <expr><literal type="number">186</literal></expr>, <expr><literal type="number">163</literal></expr>, <expr><literal type="number">183</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">197</literal></expr>, <expr><literal type="number">55</literal></expr>, <expr><literal type="number">179</literal></expr>, <expr><literal type="number">201</literal></expr>, <expr><literal type="number">90</literal></expr>, <expr><literal type="number">40</literal></expr>, <expr><literal type="number">172</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">220</literal></expr>, <expr><literal type="number">134</literal></expr>, <expr><literal type="number">119</literal></expr>, <expr><literal type="number">215</literal></expr>, <expr><literal type="number">166</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">251</literal></expr>, <expr><literal type="number">244</literal></expr>, <expr><literal type="number">186</literal></expr>, <expr><literal type="number">146</literal></expr>, <expr><literal type="number">145</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">131</literal></expr>, <expr><literal type="number">241</literal></expr>, <expr><literal type="number">51</literal></expr>, <expr><literal type="number">239</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">44</literal></expr>, <expr><literal type="number">181</literal></expr>, <expr><literal type="number">178</literal></expr>, <expr><literal type="number">43</literal></expr>, <expr><literal type="number">136</literal></expr>, <expr><literal type="number">209</literal></expr>, <expr><literal type="number">153</literal></expr>, <expr><literal type="number">203</literal></expr>, <expr><literal type="number">140</literal></expr>, <expr><literal type="number">132</literal></expr>, <expr><literal type="number">29</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">129</literal></expr>, <expr><literal type="number">151</literal></expr>, <expr><literal type="number">113</literal></expr>, <expr><literal type="number">202</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">163</literal></expr>, <expr><literal type="number">139</literal></expr>, <expr><literal type="number">87</literal></expr>, <expr><literal type="number">60</literal></expr>, <expr><literal type="number">130</literal></expr>, <expr><literal type="number">196</literal></expr>, <expr><literal type="number">82</literal></expr>, <expr><literal type="number">92</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">232</literal></expr>, <expr><literal type="number">160</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">180</literal></expr>, <expr><literal type="number">133</literal></expr>, <expr><literal type="number">74</literal></expr>, <expr><literal type="number">246</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">84</literal></expr>, <expr><literal type="number">182</literal></expr>, <expr><literal type="number">223</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">142</literal></expr>, <expr><literal type="number">222</literal></expr>, <expr><literal type="number">224</literal></expr>, <expr><literal type="number">57</literal></expr>, <expr><literal type="number">252</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">155</literal></expr>, <expr><literal type="number">36</literal></expr>, <expr><literal type="number">78</literal></expr>, <expr><literal type="number">169</literal></expr>, <expr><literal type="number">152</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">171</literal></expr>, <expr><literal type="number">242</literal></expr>, <expr><literal type="number">96</literal></expr>, <expr><literal type="number">208</literal></expr>, <expr><literal type="number">108</literal></expr>, <expr><literal type="number">234</literal></expr>, <expr><literal type="number">250</literal></expr>, <expr><literal type="number">199</literal></expr>, <expr><literal type="number">217</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">212</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">110</literal></expr>, <expr><literal type="number">67</literal></expr>, <expr><literal type="number">188</literal></expr>, <expr><literal type="number">236</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">137</literal></expr>, <expr><literal type="number">254</literal></expr>, <expr><literal type="number">122</literal></expr>, <expr><literal type="number">93</literal></expr>, <expr><literal type="number">73</literal></expr>, <expr><literal type="number">201</literal></expr>, <expr><literal type="number">50</literal></expr>, <expr><literal type="number">194</literal></expr>, <expr><literal type="number">249</literal></expr>, <expr><literal type="number">154</literal></expr>, <expr><literal type="number">248</literal></expr>, <expr><literal type="number">109</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">219</literal></expr>, <expr><literal type="number">89</literal></expr>, <expr><literal type="number">150</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">233</literal></expr>, <expr><literal type="number">205</literal></expr>, <expr><literal type="number">230</literal></expr>, <expr><literal type="number">70</literal></expr>, <expr><literal type="number">66</literal></expr>, <expr><literal type="number">143</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">193</literal></expr>, <expr><literal type="number">204</literal></expr>, <expr><literal type="number">185</literal></expr>, <expr><literal type="number">101</literal></expr>, <expr><literal type="number">176</literal></expr>, <expr><literal type="number">210</literal></expr>, <expr><literal type="number">198</literal></expr>, <expr><literal type="number">172</literal></expr>, <expr><literal type="number">30</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">98</literal></expr>, <expr><literal type="number">41</literal></expr>, <expr><literal type="number">46</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">116</literal></expr>, <expr><literal type="number">80</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">90</literal></expr>, <expr><literal type="number">195</literal></expr>, <expr><literal type="number">37</literal></expr>, <expr><literal type="number">123</literal></expr>, <expr><literal type="number">138</literal></expr>, <expr><literal type="number">42</literal></expr>, <expr><literal type="number">91</literal></expr>, <expr><literal type="number">240</literal></expr>, <expr><literal type="number">6</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">71</literal></expr>, <expr><literal type="number">111</literal></expr>, <expr><literal type="number">112</literal></expr>, <expr><literal type="number">157</literal></expr>, <expr><literal type="number">126</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">206</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">39</literal></expr>, <expr><literal type="number">213</literal></expr>, <expr><literal type="number">76</literal></expr>, <expr><literal type="number">79</literal></expr>, <expr><literal type="number">214</literal></expr>, <expr><literal type="number">121</literal></expr>, <expr><literal type="number">48</literal></expr>, <expr><literal type="number">104</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">117</literal></expr>, <expr><literal type="number">125</literal></expr>, <expr><literal type="number">228</literal></expr>, <expr><literal type="number">237</literal></expr>, <expr><literal type="number">128</literal></expr>, <expr><literal type="number">106</literal></expr>, <expr><literal type="number">144</literal></expr>, <expr><literal type="number">55</literal></expr>, <expr><literal type="number">162</literal></expr>, <expr><literal type="number">94</literal></expr>, <expr><literal type="number">118</literal></expr>, <expr><literal type="number">170</literal></expr>, <expr><literal type="number">197</literal></expr>, <expr><literal type="number">127</literal></expr>, <expr><literal type="number">61</literal></expr>, <expr><literal type="number">175</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">229</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">97</literal></expr>, <expr><literal type="number">253</literal></expr>, <expr><literal type="number">77</literal></expr>, <expr><literal type="number">124</literal></expr>, <expr><literal type="number">183</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">238</literal></expr>, <expr><literal type="number">173</literal></expr>, <expr><literal type="number">75</literal></expr>, <expr><literal type="number">34</literal></expr>, <expr><literal type="number">245</literal></expr>, <expr><literal type="number">231</literal></expr>, <expr><literal type="number">115</literal></expr>, <expr><literal type="number">35</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">200</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">225</literal></expr>, <expr><literal type="number">102</literal></expr>, <expr><literal type="number">221</literal></expr>, <expr><literal type="number">179</literal></expr>, <expr><literal type="number">88</literal></expr>, <expr><literal type="number">105</literal></expr>, <expr><literal type="number">99</literal></expr>, <expr><literal type="number">86</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">161</literal></expr>, <expr><literal type="number">49</literal></expr>, <expr><literal type="number">149</literal></expr>, <expr><literal type="number">23</literal></expr>, <expr><literal type="number">7</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">40</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">45</literal></expr>, <expr><literal type="number">226</literal></expr>, <expr><literal type="number">147</literal></expr>, <expr><literal type="number">190</literal></expr>, <expr><literal type="number">69</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">174</literal></expr>, <expr><literal type="number">120</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">135</literal></expr>, <expr><literal type="number">164</literal></expr>, <expr><literal type="number">184</literal></expr>, <expr><literal type="number">56</literal></expr>, <expr><literal type="number">207</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">8</literal></expr>, <expr><literal type="number">103</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">148</literal></expr>, <expr><literal type="number">235</literal></expr>, <expr><literal type="number">38</literal></expr>, <expr><literal type="number">168</literal></expr>, <expr><literal type="number">107</literal></expr>, <expr><literal type="number">189</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">52</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">187</literal></expr>, <expr><literal type="number">191</literal></expr>, <expr><literal type="number">114</literal></expr>, <expr><literal type="number">247</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">53</literal></expr>, <expr><literal type="number">72</literal></expr>, <expr><literal type="number">156</literal></expr>, <expr><literal type="number">81</literal></expr>, <expr><literal type="number">47</literal></expr>, <expr><literal type="number">59</literal></expr>, <expr><literal type="number">85</literal></expr>, <expr><literal type="number">227</literal></expr>, <expr><literal type="number">192</literal></expr>, <expr><literal type="number">159</literal></expr>, <expr><literal type="number">216</literal></expr>, <expr><literal type="number">211</literal></expr>, <expr><literal type="number">243</literal></expr>, <expr><literal type="number">141</literal></expr>, <expr><literal type="number">177</literal></expr>, <expr><literal type="number">255</literal></expr>}</block></expr>,

<expr><block>{ <expr><literal type="number">62</literal></expr>, <expr><literal type="number">220</literal></expr>, <expr><literal type="number">134</literal></expr>, <expr><literal type="number">119</literal></expr>, <expr><literal type="number">215</literal></expr>, <expr><literal type="number">166</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">251</literal></expr>, <expr><literal type="number">244</literal></expr>, <expr><literal type="number">186</literal></expr>, <expr><literal type="number">146</literal></expr>, <expr><literal type="number">145</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">131</literal></expr>, <expr><literal type="number">241</literal></expr>, <expr><literal type="number">51</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>saferp_setup</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>keylen</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>num_rounds</name></decl></parameter>, <parameter><decl><type><name>symmetric_key</name> <modifier>*</modifier></type><name>skey</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name></type> <name>x</name></decl>, <decl><type ref="prev"/><name>y</name></decl>, <decl><type ref="prev"/><name>z</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>t</name><index>[<expr><literal type="number">33</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>rounds</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">8</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">16</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>key</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>skey</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>keylen</name> <operator>!=</operator> <literal type="number">16</literal> <operator>&amp;&amp;</operator> <name>keylen</name> <operator>!=</operator> <literal type="number">24</literal> <operator>&amp;&amp;</operator> <name>keylen</name> <operator>!=</operator> <literal type="number">32</literal></expr>)</condition> <block>{<block_content>

<return>return <expr><name>CRYPT_INVALID_KEYSIZE</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>num_rounds</name> <operator>!=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>num_rounds</name> <operator>!=</operator> <name><name>rounds</name><index>[<expr><operator>(</operator><name>keylen</name><operator>/</operator><literal type="number">8</literal><operator>)</operator><operator>-</operator><literal type="number">2</literal></expr>]</index></name></expr>)</condition> <block>{<block_content>

<return>return <expr><name>CRYPT_INVALID_ROUNDS</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>keylen</name> <operator>==</operator> <literal type="number">16</literal></expr>)</condition> <block>{<block_content>

<for>for <control>(<init><expr><name>x</name> <operator>=</operator> <name>y</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>x</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>t</name><index>[<expr><name>x</name></expr>]</index></name> <operator>=</operator> <name><name>key</name><index>[<expr><name>x</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>y</name> <operator>^=</operator> <name><name>key</name><index>[<expr><name>x</name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">16</literal></expr>]</index></name> <operator>=</operator> <name>y</name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>x</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>x</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>x</name></expr>]</index></name> <operator>=</operator> <name><name>t</name><index>[<expr><name>x</name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

<for>for <control>(<init><expr><name>x</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>x</name> <operator>&lt;</operator> <literal type="number">17</literal></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<for>for <control>(<init><expr><name>y</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>y</name> <operator>&lt;</operator> <literal type="number">17</literal></expr>;</condition> <incr><expr><name>y</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>t</name><index>[<expr><name>y</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><name><name>t</name><index>[<expr><name>y</name></expr>]</index></name><operator>&lt;&lt;</operator><literal type="number">3</literal><operator>)</operator><operator>|</operator><operator>(</operator><name><name>t</name><index>[<expr><name>y</name></expr>]</index></name><operator>&gt;&gt;</operator><literal type="number">5</literal><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name>z</name> <operator>=</operator> <name>x</name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>y</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>y</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><name>y</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name>x</name></expr>]</index><index>[<expr><name>y</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>t</name><index>[<expr><name>z</name></expr>]</index></name> <operator>+</operator> <name><name>safer_bias</name><index>[<expr><name>x</name><operator>-</operator><literal type="number">1</literal></expr>]</index><index>[<expr><name>y</name></expr>]</index></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>++</operator><name>z</name> <operator>==</operator> <literal type="number">17</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><name>z</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>

</block_content>}</block></for>

</block_content>}</block></for>

<expr_stmt><expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name> <operator>=</operator> <literal type="number">8</literal></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>keylen</name> <operator>==</operator> <literal type="number">24</literal></expr>)</condition> <block>{<block_content>

<for>for <control>(<init><expr><name>x</name> <operator>=</operator> <name>y</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>x</name> <operator>&lt;</operator> <literal type="number">24</literal></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>t</name><index>[<expr><name>x</name></expr>]</index></name> <operator>=</operator> <name><name>key</name><index>[<expr><name>x</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>y</name> <operator>^=</operator> <name><name>key</name><index>[<expr><name>x</name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">24</literal></expr>]</index></name> <operator>=</operator> <name>y</name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>x</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>x</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>x</name></expr>]</index></name> <operator>=</operator> <name><name>t</name><index>[<expr><name>x</name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

<for>for <control>(<init><expr><name>x</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>x</name> <operator>&lt;</operator> <literal type="number">25</literal></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<for>for <control>(<init><expr><name>y</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>y</name> <operator>&lt;</operator> <literal type="number">25</literal></expr>;</condition> <incr><expr><name>y</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>t</name><index>[<expr><name>y</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><name><name>t</name><index>[<expr><name>y</name></expr>]</index></name><operator>&lt;&lt;</operator><literal type="number">3</literal><operator>)</operator><operator>|</operator><operator>(</operator><name><name>t</name><index>[<expr><name>y</name></expr>]</index></name><operator>&gt;&gt;</operator><literal type="number">5</literal><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name>z</name> <operator>=</operator> <name>x</name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>y</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>y</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><name>y</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name>x</name></expr>]</index><index>[<expr><name>y</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>t</name><index>[<expr><name>z</name></expr>]</index></name> <operator>+</operator> <name><name>safer_bias</name><index>[<expr><name>x</name><operator>-</operator><literal type="number">1</literal></expr>]</index><index>[<expr><name>y</name></expr>]</index></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>++</operator><name>z</name> <operator>==</operator> <literal type="number">25</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><name>z</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>

</block_content>}</block></for>

</block_content>}</block></for>

<expr_stmt><expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name> <operator>=</operator> <literal type="number">12</literal></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<for>for <control>(<init><expr><name>x</name> <operator>=</operator> <name>y</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>x</name> <operator>&lt;</operator> <literal type="number">32</literal></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>t</name><index>[<expr><name>x</name></expr>]</index></name> <operator>=</operator> <name><name>key</name><index>[<expr><name>x</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>y</name> <operator>^=</operator> <name><name>key</name><index>[<expr><name>x</name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name><name>t</name><index>[<expr><literal type="number">32</literal></expr>]</index></name> <operator>=</operator> <name>y</name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>x</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>x</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>x</name></expr>]</index></name> <operator>=</operator> <name><name>t</name><index>[<expr><name>x</name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

<for>for <control>(<init><expr><name>x</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>x</name> <operator>&lt;</operator> <literal type="number">33</literal></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<for>for <control>(<init><expr><name>y</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>y</name> <operator>&lt;</operator> <literal type="number">33</literal></expr>;</condition> <incr><expr><name>y</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>t</name><index>[<expr><name>y</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><name><name>t</name><index>[<expr><name>y</name></expr>]</index></name><operator>&lt;&lt;</operator><literal type="number">3</literal><operator>)</operator><operator>|</operator><operator>(</operator><name><name>t</name><index>[<expr><name>y</name></expr>]</index></name><operator>&gt;&gt;</operator><literal type="number">5</literal><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name>z</name> <operator>=</operator> <name>x</name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>y</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>y</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><name>y</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name>x</name></expr>]</index><index>[<expr><name>y</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>t</name><index>[<expr><name>z</name></expr>]</index></name> <operator>+</operator> <name><name>safer_bias</name><index>[<expr><name>x</name><operator>-</operator><literal type="number">1</literal></expr>]</index><index>[<expr><name>y</name></expr>]</index></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>++</operator><name>z</name> <operator>==</operator> <literal type="number">33</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><name>z</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>

</block_content>}</block></for>

</block_content>}</block></for>

<expr_stmt><expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name> <operator>=</operator> <literal type="number">16</literal></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LTC_CLEAN_STACK</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>zeromem</name><argument_list>(<argument><expr><name>t</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<return>return <expr><name>CRYPT_OK</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>saferp_ecb_encrypt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>pt</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>ct</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>symmetric_key</name> <modifier>*</modifier></type><name>skey</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>pt</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>ct</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>skey</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name> <operator>&lt;</operator> <literal type="number">8</literal> <operator>||</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name> <operator>&gt;</operator> <literal type="number">16</literal></expr>)</condition> <block>{<block_content>

<return>return <expr><name>CRYPT_INVALID_ROUNDS</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<for>for <control>(<init><expr><name>x</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>x</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>b</name><index>[<expr><name>x</name></expr>]</index></name> <operator>=</operator> <name><name>pt</name><index>[<expr><name>x</name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>LT</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>ct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><name>ct</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>LT</name><argument_list>(<argument><expr><name>ct</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>LT</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>ct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><name>ct</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>LT</name><argument_list>(<argument><expr><name>ct</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>LT</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>ct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><name>ct</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>LT</name><argument_list>(<argument><expr><name>ct</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>LT</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>ct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><name>ct</name></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>LT</name><argument_list>(<argument><expr><name>ct</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name> <operator>&gt;</operator> <literal type="number">8</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>LT</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>ct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><name>ct</name></expr></argument>, <argument><expr><literal type="number">18</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>LT</name><argument_list>(<argument><expr><name>ct</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>LT</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>ct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><name>ct</name></expr></argument>, <argument><expr><literal type="number">22</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>LT</name><argument_list>(<argument><expr><name>ct</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name> <operator>&gt;</operator> <literal type="number">12</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>LT</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>ct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><name>ct</name></expr></argument>, <argument><expr><literal type="number">26</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>LT</name><argument_list>(<argument><expr><name>ct</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">28</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>LT</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>ct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ROUND</name><argument_list>(<argument><expr><name>ct</name></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>LT</name><argument_list>(<argument><expr><name>ct</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>ct</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>b</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ct</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>b</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ct</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>b</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>+</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ct</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>b</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ct</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <name><name>b</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ct</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>b</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>+</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">5</literal></expr>]</index></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ct</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>b</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>+</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">6</literal></expr>]</index></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ct</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>=</operator> <name><name>b</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ct</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <operator>=</operator> <name><name>b</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">8</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ct</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>b</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <operator>+</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">9</literal></expr>]</index></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ct</name><index>[<expr><literal type="number">10</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>b</name><index>[<expr><literal type="number">10</literal></expr>]</index></name> <operator>+</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">10</literal></expr>]</index></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ct</name><index>[<expr><literal type="number">11</literal></expr>]</index></name> <operator>=</operator> <name><name>b</name><index>[<expr><literal type="number">11</literal></expr>]</index></name> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ct</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <operator>=</operator> <name><name>b</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ct</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>b</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <operator>+</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">13</literal></expr>]</index></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ct</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>b</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <operator>+</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">14</literal></expr>]</index></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ct</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <operator>=</operator> <name><name>b</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LTC_CLEAN_STACK</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>zeromem</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>b</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<return>return <expr><name>CRYPT_OK</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>saferp_ecb_decrypt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>ct</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>pt</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>symmetric_key</name> <modifier>*</modifier></type><name>skey</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>pt</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>ct</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>skey</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name> <operator>&lt;</operator> <literal type="number">8</literal> <operator>||</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name> <operator>&gt;</operator> <literal type="number">16</literal></expr>)</condition> <block>{<block_content>

<return>return <expr><name>CRYPT_INVALID_ROUNDS</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>ct</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>ct</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>-</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>ct</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>-</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>ct</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <name><name>ct</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>ct</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>-</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">5</literal></expr>]</index></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>ct</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>-</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">6</literal></expr>]</index></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>=</operator> <name><name>ct</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <operator>=</operator> <name><name>ct</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">8</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>ct</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <operator>-</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">9</literal></expr>]</index></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">10</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>ct</name><index>[<expr><literal type="number">10</literal></expr>]</index></name> <operator>-</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">10</literal></expr>]</index></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">11</literal></expr>]</index></name> <operator>=</operator> <name><name>ct</name><index>[<expr><literal type="number">11</literal></expr>]</index></name> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <operator>=</operator> <name><name>ct</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>ct</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <operator>-</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">13</literal></expr>]</index></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>ct</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <operator>-</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">14</literal></expr>]</index></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <operator>=</operator> <name><name>ct</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>K</name><index>[<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name><operator>*</operator><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name> <operator>&gt;</operator> <literal type="number">12</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>iLT</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>pt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>iROUND</name><argument_list>(<argument><expr><name>pt</name></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>iLT</name><argument_list>(<argument><expr><name>pt</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>iROUND</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">28</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>iLT</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>pt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>iROUND</name><argument_list>(<argument><expr><name>pt</name></expr></argument>, <argument><expr><literal type="number">26</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>iLT</name><argument_list>(<argument><expr><name>pt</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>iROUND</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>skey</name><operator>-&gt;</operator><name>saferp</name><operator>.</operator><name>rounds</name></name> <operator>&gt;</operator> <literal type="number">8</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>iLT</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>pt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>iROUND</name><argument_list>(<argument><expr><name>pt</name></expr></argument>, <argument><expr><literal type="number">22</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>iLT</name><argument_list>(<argument><expr><name>pt</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>iROUND</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>iLT</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>pt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>iROUND</name><argument_list>(<argument><expr><name>pt</name></expr></argument>, <argument><expr><literal type="number">18</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>iLT</name><argument_list>(<argument><expr><name>pt</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>iROUND</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>iLT</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>pt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>iROUND</name><argument_list>(<argument><expr><name>pt</name></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>iLT</name><argument_list>(<argument><expr><name>pt</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>iROUND</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>iLT</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>pt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>iROUND</name><argument_list>(<argument><expr><name>pt</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>iLT</name><argument_list>(<argument><expr><name>pt</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>iROUND</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>iLT</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>pt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>iROUND</name><argument_list>(<argument><expr><name>pt</name></expr></argument>,<argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>iLT</name><argument_list>(<argument><expr><name>pt</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>iROUND</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>iLT</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>pt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>iROUND</name><argument_list>(<argument><expr><name>pt</name></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>iLT</name><argument_list>(<argument><expr><name>pt</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>iROUND</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>x</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>x</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>pt</name><index>[<expr><name>x</name></expr>]</index></name> <operator>=</operator> <name><name>b</name><index>[<expr><name>x</name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LTC_CLEAN_STACK</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>zeromem</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>b</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<return>return <expr><name>CRYPT_OK</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>saferp_test</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LTC_TEST</name></expr></argument>)</argument_list></call></expr></cpp:if>
<return>return <expr><name>CRYPT_NOP</name></expr>;</return>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<struct><specifier>static</specifier> <specifier>const</specifier> struct <block>{

<decl_stmt><decl><type><name>int</name></type> <name>keylen</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>key</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>pt</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>ct</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

}</block> <decl><name><name>tests</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{

<expr><literal type="number">16</literal></expr>,

<expr><block>{ <expr><literal type="number">41</literal></expr>, <expr><literal type="number">35</literal></expr>, <expr><literal type="number">190</literal></expr>, <expr><literal type="number">132</literal></expr>, <expr><literal type="number">225</literal></expr>, <expr><literal type="number">108</literal></expr>, <expr><literal type="number">214</literal></expr>, <expr><literal type="number">174</literal></expr>,

<expr><literal type="number">82</literal></expr>, <expr><literal type="number">144</literal></expr>, <expr><literal type="number">73</literal></expr>, <expr><literal type="number">241</literal></expr>, <expr><literal type="number">241</literal></expr>, <expr><literal type="number">187</literal></expr>, <expr><literal type="number">233</literal></expr>, <expr><literal type="number">235</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">179</literal></expr>, <expr><literal type="number">166</literal></expr>, <expr><literal type="number">219</literal></expr>, <expr><literal type="number">60</literal></expr>, <expr><literal type="number">135</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">62</literal></expr>, <expr><literal type="number">153</literal></expr>,

<expr><literal type="number">36</literal></expr>, <expr><literal type="number">94</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">183</literal></expr>, <expr><literal type="number">71</literal></expr>, <expr><literal type="number">222</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">224</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">182</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">255</literal></expr>, <expr><literal type="number">84</literal></expr>, <expr><literal type="number">70</literal></expr>,

<expr><literal type="number">127</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">89</literal></expr>, <expr><literal type="number">249</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">57</literal></expr>, <expr><literal type="number">165</literal></expr>, <expr><literal type="number">220</literal></expr> }</block></expr>

}</block></expr>, <expr><block>{

<expr><literal type="number">24</literal></expr>,

<expr><block>{ <expr><literal type="number">72</literal></expr>, <expr><literal type="number">211</literal></expr>, <expr><literal type="number">143</literal></expr>, <expr><literal type="number">117</literal></expr>, <expr><literal type="number">230</literal></expr>, <expr><literal type="number">217</literal></expr>, <expr><literal type="number">29</literal></expr>, <expr><literal type="number">42</literal></expr>,

<expr><literal type="number">229</literal></expr>, <expr><literal type="number">192</literal></expr>, <expr><literal type="number">247</literal></expr>, <expr><literal type="number">43</literal></expr>, <expr><literal type="number">120</literal></expr>, <expr><literal type="number">129</literal></expr>, <expr><literal type="number">135</literal></expr>, <expr><literal type="number">68</literal></expr>,

<expr><literal type="number">14</literal></expr>, <expr><literal type="number">95</literal></expr>, <expr><literal type="number">80</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">212</literal></expr>, <expr><literal type="number">97</literal></expr>, <expr><literal type="number">141</literal></expr>, <expr><literal type="number">190</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">123</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">59</literal></expr>, <expr><literal type="number">51</literal></expr>, <expr><literal type="number">130</literal></expr>, <expr><literal type="number">31</literal></expr>,

<expr><literal type="number">24</literal></expr>, <expr><literal type="number">112</literal></expr>, <expr><literal type="number">146</literal></expr>, <expr><literal type="number">218</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">84</literal></expr>, <expr><literal type="number">206</literal></expr>, <expr><literal type="number">177</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">92</literal></expr>, <expr><literal type="number">136</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">63</literal></expr>, <expr><literal type="number">57</literal></expr>, <expr><literal type="number">95</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">0</literal></expr>,

<expr><literal type="number">150</literal></expr>, <expr><literal type="number">130</literal></expr>, <expr><literal type="number">130</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">193</literal></expr>, <expr><literal type="number">111</literal></expr>, <expr><literal type="number">219</literal></expr>, <expr><literal type="number">133</literal></expr> }</block></expr>

}</block></expr>, <expr><block>{

<expr><literal type="number">32</literal></expr>,

<expr><block>{ <expr><literal type="number">243</literal></expr>, <expr><literal type="number">168</literal></expr>, <expr><literal type="number">141</literal></expr>, <expr><literal type="number">254</literal></expr>, <expr><literal type="number">190</literal></expr>, <expr><literal type="number">242</literal></expr>, <expr><literal type="number">235</literal></expr>, <expr><literal type="number">113</literal></expr>,

<expr><literal type="number">255</literal></expr>, <expr><literal type="number">160</literal></expr>, <expr><literal type="number">208</literal></expr>, <expr><literal type="number">59</literal></expr>, <expr><literal type="number">117</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">140</literal></expr>, <expr><literal type="number">126</literal></expr>,

<expr><literal type="number">135</literal></expr>, <expr><literal type="number">120</literal></expr>, <expr><literal type="number">115</literal></expr>, <expr><literal type="number">77</literal></expr>, <expr><literal type="number">208</literal></expr>, <expr><literal type="number">190</literal></expr>, <expr><literal type="number">130</literal></expr>, <expr><literal type="number">190</literal></expr>,

<expr><literal type="number">219</literal></expr>, <expr><literal type="number">194</literal></expr>, <expr><literal type="number">70</literal></expr>, <expr><literal type="number">65</literal></expr>, <expr><literal type="number">43</literal></expr>, <expr><literal type="number">140</literal></expr>, <expr><literal type="number">250</literal></expr>, <expr><literal type="number">48</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">127</literal></expr>, <expr><literal type="number">112</literal></expr>, <expr><literal type="number">240</literal></expr>, <expr><literal type="number">167</literal></expr>, <expr><literal type="number">84</literal></expr>, <expr><literal type="number">134</literal></expr>, <expr><literal type="number">50</literal></expr>, <expr><literal type="number">149</literal></expr>,

<expr><literal type="number">170</literal></expr>, <expr><literal type="number">91</literal></expr>, <expr><literal type="number">104</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">230</literal></expr>, <expr><literal type="number">252</literal></expr>, <expr><literal type="number">245</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">88</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">36</literal></expr>, <expr><literal type="number">172</literal></expr>, <expr><literal type="number">229</literal></expr>, <expr><literal type="number">202</literal></expr>, <expr><literal type="number">213</literal></expr>,

<expr><literal type="number">170</literal></expr>, <expr><literal type="number">65</literal></expr>, <expr><literal type="number">105</literal></expr>, <expr><literal type="number">153</literal></expr>, <expr><literal type="number">220</literal></expr>, <expr><literal type="number">104</literal></expr>, <expr><literal type="number">153</literal></expr>, <expr><literal type="number">138</literal></expr> }</block></expr>

}</block></expr>

}</block></expr></init></decl>;</struct>

<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>tmp</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>symmetric_key</name></type> <name>skey</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>err</name></decl>, <decl><type ref="prev"/><name>i</name></decl>, <decl><type ref="prev"/><name>y</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <operator>(</operator><name>int</name><operator>)</operator><operator>(</operator><sizeof>sizeof<argument_list>(<argument><expr><name>tests</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>tests</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof><operator>)</operator></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>err</name> <operator>=</operator> <call><name>saferp_setup</name><argument_list>(<argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>key</name></expr></argument>, <argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>keylen</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>skey</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>CRYPT_OK</name></expr>)</condition> <block>{<block_content>

<return>return <expr><name>err</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>saferp_ecb_encrypt</name><argument_list>(<argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>pt</name></expr></argument>, <argument><expr><name><name>tmp</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>skey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>saferp_ecb_decrypt</name><argument_list>(<argument><expr><name><name>tmp</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>tmp</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>skey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>compare_testvector</name><argument_list>(<argument><expr><name><name>tmp</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>ct</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="string">"Safer+ Encrypt"</literal></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call> <operator>||</operator>

<call><name>compare_testvector</name><argument_list>(<argument><expr><name><name>tmp</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>pt</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="string">"Safer+ Decrypt"</literal></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<return>return <expr><name>CRYPT_FAIL_TESTVECTOR</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<for>for <control>(<init><expr><name>y</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>y</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><name>y</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content> <expr_stmt><expr><name><name>tmp</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>y</name></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></for>

<for>for <control>(<init><expr><name>y</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>y</name> <operator>&lt;</operator> <literal type="number">1000</literal></expr>;</condition> <incr><expr><name>y</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content> <expr_stmt><expr><call><name>saferp_ecb_encrypt</name><argument_list>(<argument><expr><name><name>tmp</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>tmp</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>skey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<for>for <control>(<init><expr><name>y</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>y</name> <operator>&lt;</operator> <literal type="number">1000</literal></expr>;</condition> <incr><expr><name>y</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content> <expr_stmt><expr><call><name>saferp_ecb_decrypt</name><argument_list>(<argument><expr><name><name>tmp</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>tmp</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>skey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<for>for <control>(<init><expr><name>y</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>y</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><name>y</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content> <if_stmt><if>if <condition>(<expr><name><name>tmp</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>y</name></expr>]</index></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>CRYPT_FAIL_TESTVECTOR</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>

</block_content>}</block></for>

<return>return <expr><name>CRYPT_OK</name></expr>;</return>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>saferp_done</name><parameter_list>(<parameter><decl><type><name>symmetric_key</name> <modifier>*</modifier></type><name>skey</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>LTC_UNUSED_PARAM</name><argument_list>(<argument><expr><name>skey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>saferp_keysize</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>keysize</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>keysize</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>*</operator><name>keysize</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>)</condition> <block>{<block_content>

<return>return <expr><name>CRYPT_INVALID_KEYSIZE</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>*</operator><name>keysize</name> <operator>&lt;</operator> <literal type="number">24</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>keysize</name> <operator>=</operator> <literal type="number">16</literal></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><operator>*</operator><name>keysize</name> <operator>&lt;</operator> <literal type="number">32</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>keysize</name> <operator>=</operator> <literal type="number">24</literal></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>keysize</name> <operator>=</operator> <literal type="number">32</literal></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<return>return <expr><name>CRYPT_OK</name></expr>;</return>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
