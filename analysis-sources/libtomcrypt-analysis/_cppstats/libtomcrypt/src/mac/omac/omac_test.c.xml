<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\libtomcrypt-analysis\_cppstats\libtomcrypt\src\mac\omac\omac_test.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tomcrypt_private.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LTC_OMAC</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function><type><name>int</name></type> <name>omac_test</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LTC_TEST</name></expr></argument>)</argument_list></call></expr></cpp:if>

<return>return <expr><name>CRYPT_NOP</name></expr>;</return>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<struct><specifier>static</specifier> <specifier>const</specifier> struct <block>{

<decl_stmt><decl><type><name>int</name></type> <name>keylen</name></decl>, <decl><type ref="prev"/><name>msglen</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>key</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>msg</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>tag</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

}</block> <decl><name><name>tests</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><literal type="number">16</literal></expr>, <expr><literal type="number">0</literal></expr>,

<expr><block>{ <expr><literal type="number">0x2b</literal></expr>, <expr><literal type="number">0x7e</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0x16</literal></expr>, <expr><literal type="number">0x28</literal></expr>, <expr><literal type="number">0xae</literal></expr>, <expr><literal type="number">0xd2</literal></expr>, <expr><literal type="number">0xa6</literal></expr>,

<expr><literal type="number">0xab</literal></expr>, <expr><literal type="number">0xf7</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0x88</literal></expr>, <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">0xcf</literal></expr>, <expr><literal type="number">0x4f</literal></expr>, <expr><literal type="number">0x3c</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">0x00</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">0xbb</literal></expr>, <expr><literal type="number">0x1d</literal></expr>, <expr><literal type="number">0x69</literal></expr>, <expr><literal type="number">0x29</literal></expr>, <expr><literal type="number">0xe9</literal></expr>, <expr><literal type="number">0x59</literal></expr>, <expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0x28</literal></expr>,

<expr><literal type="number">0x7f</literal></expr>, <expr><literal type="number">0xa3</literal></expr>, <expr><literal type="number">0x7d</literal></expr>, <expr><literal type="number">0x12</literal></expr>, <expr><literal type="number">0x9b</literal></expr>, <expr><literal type="number">0x75</literal></expr>, <expr><literal type="number">0x67</literal></expr>, <expr><literal type="number">0x46</literal></expr> }</block></expr>

}</block></expr>,

<expr><block>{ <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>,

<expr><block>{ <expr><literal type="number">0x2b</literal></expr>, <expr><literal type="number">0x7e</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0x16</literal></expr>, <expr><literal type="number">0x28</literal></expr>, <expr><literal type="number">0xae</literal></expr>, <expr><literal type="number">0xd2</literal></expr>, <expr><literal type="number">0xa6</literal></expr>,

<expr><literal type="number">0xab</literal></expr>, <expr><literal type="number">0xf7</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0x88</literal></expr>, <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">0xcf</literal></expr>, <expr><literal type="number">0x4f</literal></expr>, <expr><literal type="number">0x3c</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">0x6b</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xbe</literal></expr>, <expr><literal type="number">0xe2</literal></expr>, <expr><literal type="number">0x2e</literal></expr>, <expr><literal type="number">0x40</literal></expr>, <expr><literal type="number">0x9f</literal></expr>, <expr><literal type="number">0x96</literal></expr>,

<expr><literal type="number">0xe9</literal></expr>, <expr><literal type="number">0x3d</literal></expr>, <expr><literal type="number">0x7e</literal></expr>, <expr><literal type="number">0x11</literal></expr>, <expr><literal type="number">0x73</literal></expr>, <expr><literal type="number">0x93</literal></expr>, <expr><literal type="number">0x17</literal></expr>, <expr><literal type="number">0x2a</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">0x07</literal></expr>, <expr><literal type="number">0x0a</literal></expr>, <expr><literal type="number">0x16</literal></expr>, <expr><literal type="number">0xb4</literal></expr>, <expr><literal type="number">0x6b</literal></expr>, <expr><literal type="number">0x4d</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x44</literal></expr>,

<expr><literal type="number">0xf7</literal></expr>, <expr><literal type="number">0x9b</literal></expr>, <expr><literal type="number">0xdd</literal></expr>, <expr><literal type="number">0x9d</literal></expr>, <expr><literal type="number">0xd0</literal></expr>, <expr><literal type="number">0x4a</literal></expr>, <expr><literal type="number">0x28</literal></expr>, <expr><literal type="number">0x7c</literal></expr> }</block></expr>

}</block></expr>,

<expr><block>{ <expr><literal type="number">16</literal></expr>, <expr><literal type="number">40</literal></expr>,

<expr><block>{ <expr><literal type="number">0x2b</literal></expr>, <expr><literal type="number">0x7e</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0x16</literal></expr>, <expr><literal type="number">0x28</literal></expr>, <expr><literal type="number">0xae</literal></expr>, <expr><literal type="number">0xd2</literal></expr>, <expr><literal type="number">0xa6</literal></expr>,

<expr><literal type="number">0xab</literal></expr>, <expr><literal type="number">0xf7</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0x88</literal></expr>, <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">0xcf</literal></expr>, <expr><literal type="number">0x4f</literal></expr>, <expr><literal type="number">0x3c</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">0x6b</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xbe</literal></expr>, <expr><literal type="number">0xe2</literal></expr>, <expr><literal type="number">0x2e</literal></expr>, <expr><literal type="number">0x40</literal></expr>, <expr><literal type="number">0x9f</literal></expr>, <expr><literal type="number">0x96</literal></expr>,

<expr><literal type="number">0xe9</literal></expr>, <expr><literal type="number">0x3d</literal></expr>, <expr><literal type="number">0x7e</literal></expr>, <expr><literal type="number">0x11</literal></expr>, <expr><literal type="number">0x73</literal></expr>, <expr><literal type="number">0x93</literal></expr>, <expr><literal type="number">0x17</literal></expr>, <expr><literal type="number">0x2a</literal></expr>,

<expr><literal type="number">0xae</literal></expr>, <expr><literal type="number">0x2d</literal></expr>, <expr><literal type="number">0x8a</literal></expr>, <expr><literal type="number">0x57</literal></expr>, <expr><literal type="number">0x1e</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0xac</literal></expr>, <expr><literal type="number">0x9c</literal></expr>,

<expr><literal type="number">0x9e</literal></expr>, <expr><literal type="number">0xb7</literal></expr>, <expr><literal type="number">0x6f</literal></expr>, <expr><literal type="number">0xac</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0xaf</literal></expr>, <expr><literal type="number">0x8e</literal></expr>, <expr><literal type="number">0x51</literal></expr>,

<expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0xc8</literal></expr>, <expr><literal type="number">0x1c</literal></expr>, <expr><literal type="number">0x46</literal></expr>, <expr><literal type="number">0xa3</literal></expr>, <expr><literal type="number">0x5c</literal></expr>, <expr><literal type="number">0xe4</literal></expr>, <expr><literal type="number">0x11</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">0xdf</literal></expr>, <expr><literal type="number">0xa6</literal></expr>, <expr><literal type="number">0x67</literal></expr>, <expr><literal type="number">0x47</literal></expr>, <expr><literal type="number">0xde</literal></expr>, <expr><literal type="number">0x9a</literal></expr>, <expr><literal type="number">0xe6</literal></expr>, <expr><literal type="number">0x30</literal></expr>,

<expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0xca</literal></expr>, <expr><literal type="number">0x32</literal></expr>, <expr><literal type="number">0x61</literal></expr>, <expr><literal type="number">0x14</literal></expr>, <expr><literal type="number">0x97</literal></expr>, <expr><literal type="number">0xc8</literal></expr>, <expr><literal type="number">0x27</literal></expr> }</block></expr>

}</block></expr>,

<expr><block>{ <expr><literal type="number">16</literal></expr>, <expr><literal type="number">64</literal></expr>,

<expr><block>{ <expr><literal type="number">0x2b</literal></expr>, <expr><literal type="number">0x7e</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0x16</literal></expr>, <expr><literal type="number">0x28</literal></expr>, <expr><literal type="number">0xae</literal></expr>, <expr><literal type="number">0xd2</literal></expr>, <expr><literal type="number">0xa6</literal></expr>,

<expr><literal type="number">0xab</literal></expr>, <expr><literal type="number">0xf7</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0x88</literal></expr>, <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">0xcf</literal></expr>, <expr><literal type="number">0x4f</literal></expr>, <expr><literal type="number">0x3c</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">0x6b</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0xbe</literal></expr>, <expr><literal type="number">0xe2</literal></expr>, <expr><literal type="number">0x2e</literal></expr>, <expr><literal type="number">0x40</literal></expr>, <expr><literal type="number">0x9f</literal></expr>, <expr><literal type="number">0x96</literal></expr>,

<expr><literal type="number">0xe9</literal></expr>, <expr><literal type="number">0x3d</literal></expr>, <expr><literal type="number">0x7e</literal></expr>, <expr><literal type="number">0x11</literal></expr>, <expr><literal type="number">0x73</literal></expr>, <expr><literal type="number">0x93</literal></expr>, <expr><literal type="number">0x17</literal></expr>, <expr><literal type="number">0x2a</literal></expr>,

<expr><literal type="number">0xae</literal></expr>, <expr><literal type="number">0x2d</literal></expr>, <expr><literal type="number">0x8a</literal></expr>, <expr><literal type="number">0x57</literal></expr>, <expr><literal type="number">0x1e</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0xac</literal></expr>, <expr><literal type="number">0x9c</literal></expr>,

<expr><literal type="number">0x9e</literal></expr>, <expr><literal type="number">0xb7</literal></expr>, <expr><literal type="number">0x6f</literal></expr>, <expr><literal type="number">0xac</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0xaf</literal></expr>, <expr><literal type="number">0x8e</literal></expr>, <expr><literal type="number">0x51</literal></expr>,

<expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0xc8</literal></expr>, <expr><literal type="number">0x1c</literal></expr>, <expr><literal type="number">0x46</literal></expr>, <expr><literal type="number">0xa3</literal></expr>, <expr><literal type="number">0x5c</literal></expr>, <expr><literal type="number">0xe4</literal></expr>, <expr><literal type="number">0x11</literal></expr>,

<expr><literal type="number">0xe5</literal></expr>, <expr><literal type="number">0xfb</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0x19</literal></expr>, <expr><literal type="number">0x1a</literal></expr>, <expr><literal type="number">0x0a</literal></expr>, <expr><literal type="number">0x52</literal></expr>, <expr><literal type="number">0xef</literal></expr>,

<expr><literal type="number">0xf6</literal></expr>, <expr><literal type="number">0x9f</literal></expr>, <expr><literal type="number">0x24</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0xdf</literal></expr>, <expr><literal type="number">0x4f</literal></expr>, <expr><literal type="number">0x9b</literal></expr>, <expr><literal type="number">0x17</literal></expr>,

<expr><literal type="number">0xad</literal></expr>, <expr><literal type="number">0x2b</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x7b</literal></expr>, <expr><literal type="number">0xe6</literal></expr>, <expr><literal type="number">0x6c</literal></expr>, <expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0x10</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">0x51</literal></expr>, <expr><literal type="number">0xf0</literal></expr>, <expr><literal type="number">0xbe</literal></expr>, <expr><literal type="number">0xbf</literal></expr>, <expr><literal type="number">0x7e</literal></expr>, <expr><literal type="number">0x3b</literal></expr>, <expr><literal type="number">0x9d</literal></expr>, <expr><literal type="number">0x92</literal></expr>,

<expr><literal type="number">0xfc</literal></expr>, <expr><literal type="number">0x49</literal></expr>, <expr><literal type="number">0x74</literal></expr>, <expr><literal type="number">0x17</literal></expr>, <expr><literal type="number">0x79</literal></expr>, <expr><literal type="number">0x36</literal></expr>, <expr><literal type="number">0x3c</literal></expr>, <expr><literal type="number">0xfe</literal></expr> }</block></expr>

}</block></expr>

}</block></expr></init></decl>;</struct>

<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>out</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>, <decl><type ref="prev"/><name>err</name></decl>, <decl><type ref="prev"/><name>idx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name>len</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>idx</name> <operator>=</operator> <call><name>find_cipher</name><argument_list>(<argument><expr><literal type="string">"aes"</literal></expr></argument>)</argument_list></call><operator>)</operator> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>idx</name> <operator>=</operator> <call><name>find_cipher</name><argument_list>(<argument><expr><literal type="string">"rijndael"</literal></expr></argument>)</argument_list></call><operator>)</operator> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<return>return <expr><name>CRYPT_NOP</name></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<for>for <control>(<init><expr><name>x</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>x</name> <operator>&lt;</operator> <operator>(</operator><name>int</name><operator>)</operator><operator>(</operator><sizeof>sizeof<argument_list>(<argument><expr><name>tests</name></expr></argument>)</argument_list></sizeof><operator>/</operator><sizeof>sizeof<argument_list>(<argument><expr><name><name>tests</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof><operator>)</operator></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>len</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>err</name> <operator>=</operator> <call><name>omac_memory</name><argument_list>(<argument><expr><name>idx</name></expr></argument>, <argument><expr><name><name>tests</name><index>[<expr><name>x</name></expr>]</index></name><operator>.</operator><name>key</name></expr></argument>, <argument><expr><name><name>tests</name><index>[<expr><name>x</name></expr>]</index></name><operator>.</operator><name>keylen</name></expr></argument>, <argument><expr><name><name>tests</name><index>[<expr><name>x</name></expr>]</index></name><operator>.</operator><name>msg</name></expr></argument>, <argument><expr><name><name>tests</name><index>[<expr><name>x</name></expr>]</index></name><operator>.</operator><name>msglen</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>len</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>CRYPT_OK</name></expr>)</condition> <block>{<block_content>

<return>return <expr><name>err</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>compare_testvector</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>len</name></expr></argument>, <argument><expr><name><name>tests</name><index>[<expr><name>x</name></expr>]</index></name><operator>.</operator><name>tag</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>tests</name><index>[<expr><name>x</name></expr>]</index></name><operator>.</operator><name>tag</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"OMAC"</literal></expr></argument>, <argument><expr><name>x</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<return>return <expr><name>CRYPT_FAIL_TESTVECTOR</name></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<return>return <expr><name>CRYPT_OK</name></expr>;</return>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
