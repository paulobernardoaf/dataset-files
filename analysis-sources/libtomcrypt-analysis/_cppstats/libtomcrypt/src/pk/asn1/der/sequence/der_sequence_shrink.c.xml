<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\libtomcrypt-analysis\_cppstats\libtomcrypt\src\pk\asn1\der\sequence\der_sequence_shrink.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tomcrypt_private.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LTC_DER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function><type><name>void</name></type> <name>der_sequence_shrink</name><parameter_list>(<parameter><decl><type><name>ltc_asn1_list</name> <modifier>*</modifier></type><name>in</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>in</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<while>while <condition>(<expr><name>in</name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>in</name><operator>-&gt;</operator><name>child</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>der_sequence_shrink</name><argument_list>(<argument><expr><name><name>in</name><operator>-&gt;</operator><name>child</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<switch>switch <condition>(<expr><name><name>in</name><operator>-&gt;</operator><name>type</name></name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>LTC_ASN1_CUSTOM_TYPE</name></expr>:</case>

<case>case <expr><name>LTC_ASN1_SET</name></expr>:</case>

<case>case <expr><name>LTC_ASN1_SEQUENCE</name></expr> :</case> <if_stmt><if>if <condition>(<expr><name><name>in</name><operator>-&gt;</operator><name>data</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>XFREE</name><argument_list>(<argument><expr><name><name>in</name><operator>-&gt;</operator><name>data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name><name>in</name><operator>-&gt;</operator><name>data</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt> </block_content>}</block></if></if_stmt> <break>break;</break>

<default>default:</default> <break>break;</break>

</block_content>}</block></switch>

<expr_stmt><expr><name>in</name> <operator>=</operator> <name><name>in</name><operator>-&gt;</operator><name>next</name></name></expr>;</expr_stmt>

</block_content>}</block></while>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
