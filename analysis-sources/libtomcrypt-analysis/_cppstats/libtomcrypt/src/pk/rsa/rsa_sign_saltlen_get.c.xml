<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\libtomcrypt-analysis\_cppstats\libtomcrypt\src\pk\rsa\rsa_sign_saltlen_get.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tomcrypt_private.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LTC_MRSA</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function><type><name>int</name></type> <name>rsa_sign_saltlen_get_max_ex</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>padding</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>hash_idx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>rsa_key</name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><name>INT_MAX</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>key</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><call><name>hash_is_valid</name><argument_list>(<argument><expr><name>hash_idx</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>CRYPT_OK</name><operator>)</operator> <operator>&amp;&amp;</operator>

<operator>(</operator><name>padding</name> <operator>==</operator> <name>LTC_PKCS_1_PSS</name><operator>)</operator></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>rsa_get_size</name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <name>INT_MAX</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name>ret</name> <operator>-=</operator> <operator>(</operator><name><name>hash_descriptor</name><index>[<expr><name>hash_idx</name></expr>]</index></name><operator>.</operator><name>hashsize</name> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt> 

</block_content>}</block></if></if_stmt> 

<return>return <expr><name>ret</name></expr>;</return>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
