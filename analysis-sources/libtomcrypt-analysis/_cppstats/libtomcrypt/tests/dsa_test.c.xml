<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\libtomcrypt-analysis\_cppstats\libtomcrypt\tests\dsa_test.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;tomcrypt_test.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LTC_MDSA</name></expr></argument>)</argument_list></call></expr></cpp:if>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name></type> <name><name>openssl_priv_dsa</name><index>[]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x82</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0xbb</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xc5</literal></expr>,

<expr><literal type="number">0x0a</literal></expr>, <expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0x51</literal></expr>, <expr><literal type="number">0x5c</literal></expr>, <expr><literal type="number">0xab</literal></expr>, <expr><literal type="number">0xd6</literal></expr>, <expr><literal type="number">0x18</literal></expr>, <expr><literal type="number">0xd5</literal></expr>, <expr><literal type="number">0xa2</literal></expr>, <expr><literal type="number">0x70</literal></expr>, <expr><literal type="number">0xbd</literal></expr>, <expr><literal type="number">0x4a</literal></expr>,

<expr><literal type="number">0x6f</literal></expr>, <expr><literal type="number">0x6b</literal></expr>, <expr><literal type="number">0x4a</literal></expr>, <expr><literal type="number">0xf9</literal></expr>, <expr><literal type="number">0xe1</literal></expr>, <expr><literal type="number">0x39</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0x0f</literal></expr>, <expr><literal type="number">0x2b</literal></expr>, <expr><literal type="number">0x99</literal></expr>, <expr><literal type="number">0x38</literal></expr>, <expr><literal type="number">0x7d</literal></expr>,

<expr><literal type="number">0x9a</literal></expr>, <expr><literal type="number">0x64</literal></expr>, <expr><literal type="number">0xd6</literal></expr>, <expr><literal type="number">0x4c</literal></expr>, <expr><literal type="number">0xb5</literal></expr>, <expr><literal type="number">0x96</literal></expr>, <expr><literal type="number">0x7a</literal></expr>, <expr><literal type="number">0xdc</literal></expr>, <expr><literal type="number">0xed</literal></expr>, <expr><literal type="number">0xac</literal></expr>, <expr><literal type="number">0xa8</literal></expr>, <expr><literal type="number">0xac</literal></expr>,

<expr><literal type="number">0xc6</literal></expr>, <expr><literal type="number">0x1b</literal></expr>, <expr><literal type="number">0x65</literal></expr>, <expr><literal type="number">0x5a</literal></expr>, <expr><literal type="number">0xde</literal></expr>, <expr><literal type="number">0xdb</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x61</literal></expr>, <expr><literal type="number">0x25</literal></expr>, <expr><literal type="number">0x1a</literal></expr>, <expr><literal type="number">0x18</literal></expr>, <expr><literal type="number">0x2c</literal></expr>,

<expr><literal type="number">0xee</literal></expr>, <expr><literal type="number">0xa1</literal></expr>, <expr><literal type="number">0x07</literal></expr>, <expr><literal type="number">0x90</literal></expr>, <expr><literal type="number">0x62</literal></expr>, <expr><literal type="number">0x5e</literal></expr>, <expr><literal type="number">0x4d</literal></expr>, <expr><literal type="number">0x12</literal></expr>, <expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">0x90</literal></expr>, <expr><literal type="number">0xc7</literal></expr>, <expr><literal type="number">0x03</literal></expr>,

<expr><literal type="number">0x21</literal></expr>, <expr><literal type="number">0xfa</literal></expr>, <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">0xe7</literal></expr>, <expr><literal type="number">0xb1</literal></expr>, <expr><literal type="number">0x73</literal></expr>, <expr><literal type="number">0xd7</literal></expr>, <expr><literal type="number">0x8e</literal></expr>, <expr><literal type="number">0xaf</literal></expr>, <expr><literal type="number">0xdb</literal></expr>, <expr><literal type="number">0xfd</literal></expr>, <expr><literal type="number">0xbf</literal></expr>,

<expr><literal type="number">0xb3</literal></expr>, <expr><literal type="number">0xef</literal></expr>, <expr><literal type="number">0xad</literal></expr>, <expr><literal type="number">0xd1</literal></expr>, <expr><literal type="number">0xa1</literal></expr>, <expr><literal type="number">0x2a</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x6d</literal></expr>, <expr><literal type="number">0xe7</literal></expr>, <expr><literal type="number">0x06</literal></expr>, <expr><literal type="number">0x92</literal></expr>, <expr><literal type="number">0x4a</literal></expr>,

<expr><literal type="number">0x85</literal></expr>, <expr><literal type="number">0x2a</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x7a</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x66</literal></expr>, <expr><literal type="number">0x53</literal></expr>, <expr><literal type="number">0x1f</literal></expr>, <expr><literal type="number">0xea</literal></expr>, <expr><literal type="number">0xc6</literal></expr>, <expr><literal type="number">0x67</literal></expr>, <expr><literal type="number">0x41</literal></expr>,

<expr><literal type="number">0x84</literal></expr>, <expr><literal type="number">0x5a</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0x6c</literal></expr>, <expr><literal type="number">0xed</literal></expr>, <expr><literal type="number">0x62</literal></expr>, <expr><literal type="number">0xf9</literal></expr>, <expr><literal type="number">0xc2</literal></expr>, <expr><literal type="number">0x62</literal></expr>, <expr><literal type="number">0x62</literal></expr>, <expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0xa4</literal></expr>,

<expr><literal type="number">0xfa</literal></expr>, <expr><literal type="number">0x48</literal></expr>, <expr><literal type="number">0xa0</literal></expr>, <expr><literal type="number">0x66</literal></expr>, <expr><literal type="number">0xec</literal></expr>, <expr><literal type="number">0x35</literal></expr>, <expr><literal type="number">0xc9</literal></expr>, <expr><literal type="number">0xa8</literal></expr>, <expr><literal type="number">0x11</literal></expr>, <expr><literal type="number">0xfe</literal></expr>, <expr><literal type="number">0xb9</literal></expr>, <expr><literal type="number">0x81</literal></expr>,

<expr><literal type="number">0xab</literal></expr>, <expr><literal type="number">0xee</literal></expr>, <expr><literal type="number">0xbe</literal></expr>, <expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">0xb6</literal></expr>, <expr><literal type="number">0xbf</literal></expr>, <expr><literal type="number">0xcf</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x5b</literal></expr>,

<expr><literal type="number">0xd7</literal></expr>, <expr><literal type="number">0xf4</literal></expr>, <expr><literal type="number">0xe5</literal></expr>, <expr><literal type="number">0x06</literal></expr>, <expr><literal type="number">0x24</literal></expr>, <expr><literal type="number">0x13</literal></expr>, <expr><literal type="number">0xe5</literal></expr>, <expr><literal type="number">0x88</literal></expr>, <expr><literal type="number">0x35</literal></expr>, <expr><literal type="number">0xca</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xc7</literal></expr>,

<expr><literal type="number">0xa6</literal></expr>, <expr><literal type="number">0x35</literal></expr>, <expr><literal type="number">0x71</literal></expr>, <expr><literal type="number">0x61</literal></expr>, <expr><literal type="number">0x94</literal></expr>, <expr><literal type="number">0xc5</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x3b</literal></expr>, <expr><literal type="number">0x92</literal></expr>, <expr><literal type="number">0xe4</literal></expr>,

<expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x59</literal></expr>, <expr><literal type="number">0x29</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0x0b</literal></expr>, <expr><literal type="number">0x08</literal></expr>, <expr><literal type="number">0x99</literal></expr>, <expr><literal type="number">0x5a</literal></expr>, <expr><literal type="number">0x7b</literal></expr>, <expr><literal type="number">0xf2</literal></expr>, <expr><literal type="number">0xad</literal></expr>, <expr><literal type="number">0x14</literal></expr>,

<expr><literal type="number">0x40</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x6f</literal></expr>, <expr><literal type="number">0xa0</literal></expr>, <expr><literal type="number">0x47</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x90</literal></expr>, <expr><literal type="number">0x99</literal></expr>, <expr><literal type="number">0xb3</literal></expr>, <expr><literal type="number">0x44</literal></expr>, <expr><literal type="number">0xb3</literal></expr>, <expr><literal type="number">0xd4</literal></expr>,

<expr><literal type="number">0xfc</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0xae</literal></expr>, <expr><literal type="number">0x67</literal></expr>, <expr><literal type="number">0x22</literal></expr>, <expr><literal type="number">0x43</literal></expr>, <expr><literal type="number">0x9c</literal></expr>, <expr><literal type="number">0xba</literal></expr>, <expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0x10</literal></expr>,

<expr><literal type="number">0xa5</literal></expr>, <expr><literal type="number">0x89</literal></expr>, <expr><literal type="number">0x47</literal></expr>, <expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0xec</literal></expr>, <expr><literal type="number">0xcc</literal></expr>, <expr><literal type="number">0xf5</literal></expr>, <expr><literal type="number">0xae</literal></expr>, <expr><literal type="number">0xad</literal></expr>, <expr><literal type="number">0xa8</literal></expr>, <expr><literal type="number">0xb4</literal></expr>, <expr><literal type="number">0x7a</literal></expr>,

<expr><literal type="number">0x35</literal></expr>, <expr><literal type="number">0xcb</literal></expr>, <expr><literal type="number">0x9d</literal></expr>, <expr><literal type="number">0x93</literal></expr>, <expr><literal type="number">0x5c</literal></expr>, <expr><literal type="number">0xed</literal></expr>, <expr><literal type="number">0xe6</literal></expr>, <expr><literal type="number">0xb0</literal></expr>, <expr><literal type="number">0x7e</literal></expr>, <expr><literal type="number">0x96</literal></expr>, <expr><literal type="number">0x94</literal></expr>, <expr><literal type="number">0xc4</literal></expr>,

<expr><literal type="number">0xa6</literal></expr>, <expr><literal type="number">0x0c</literal></expr>, <expr><literal type="number">0x7d</literal></expr>, <expr><literal type="number">0xd6</literal></expr>, <expr><literal type="number">0x70</literal></expr>, <expr><literal type="number">0x8a</literal></expr>, <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">0x4f</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0x4a</literal></expr>, <expr><literal type="number">0x0e</literal></expr>, <expr><literal type="number">0xc2</literal></expr>,

<expr><literal type="number">0x13</literal></expr>, <expr><literal type="number">0xfb</literal></expr>, <expr><literal type="number">0xeb</literal></expr>, <expr><literal type="number">0x16</literal></expr>, <expr><literal type="number">0xbf</literal></expr>, <expr><literal type="number">0xea</literal></expr>, <expr><literal type="number">0xa4</literal></expr>, <expr><literal type="number">0xf4</literal></expr>, <expr><literal type="number">0x56</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x72</literal></expr>, <expr><literal type="number">0x30</literal></expr>,

<expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0xde</literal></expr>, <expr><literal type="number">0x8a</literal></expr>, <expr><literal type="number">0x44</literal></expr>, <expr><literal type="number">0x3f</literal></expr>, <expr><literal type="number">0xbe</literal></expr>, <expr><literal type="number">0xc6</literal></expr>, <expr><literal type="number">0x85</literal></expr>, <expr><literal type="number">0x26</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xd6</literal></expr>, <expr><literal type="number">0x2d</literal></expr>,

<expr><literal type="number">0x1d</literal></expr>, <expr><literal type="number">0x1e</literal></expr>, <expr><literal type="number">0xdb</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0xda</literal></expr>, <expr><literal type="number">0xa4</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0x83</literal></expr>, <expr><literal type="number">0x3c</literal></expr>, <expr><literal type="number">0x17</literal></expr>, <expr><literal type="number">0x97</literal></expr>, <expr><literal type="number">0x98</literal></expr>,

<expr><literal type="number">0x0b</literal></expr>, <expr><literal type="number">0x8d</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xf3</literal></expr>, <expr><literal type="number">0x49</literal></expr>, <expr><literal type="number">0x0d</literal></expr>, <expr><literal type="number">0x90</literal></expr>, <expr><literal type="number">0xbd</literal></expr>, <expr><literal type="number">0xa9</literal></expr>, <expr><literal type="number">0xab</literal></expr>, <expr><literal type="number">0x67</literal></expr>, <expr><literal type="number">0x6e</literal></expr>,

<expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0x68</literal></expr>, <expr><literal type="number">0x72</literal></expr>, <expr><literal type="number">0x23</literal></expr>, <expr><literal type="number">0xdc</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x53</literal></expr>, <expr><literal type="number">0x16</literal></expr>, <expr><literal type="number">0xb0</literal></expr>, <expr><literal type="number">0xfb</literal></expr>,

<expr><literal type="number">0xbf</literal></expr>, <expr><literal type="number">0x59</literal></expr>, <expr><literal type="number">0x8a</literal></expr>, <expr><literal type="number">0x5e</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0x4f</literal></expr>, <expr><literal type="number">0xac</literal></expr>, <expr><literal type="number">0x43</literal></expr>, <expr><literal type="number">0xb8</literal></expr>, <expr><literal type="number">0x08</literal></expr>,

<expr><literal type="number">0x53</literal></expr>, <expr><literal type="number">0xe6</literal></expr>, <expr><literal type="number">0xcf</literal></expr>, <expr><literal type="number">0x0d</literal></expr>, <expr><literal type="number">0x92</literal></expr>, <expr><literal type="number">0x23</literal></expr>, <expr><literal type="number">0xfa</literal></expr>, <expr><literal type="number">0xb1</literal></expr>, <expr><literal type="number">0x84</literal></expr>, <expr><literal type="number">0x59</literal></expr>, <expr><literal type="number">0x52</literal></expr>, <expr><literal type="number">0x39</literal></expr>,

<expr><literal type="number">0xbf</literal></expr>, <expr><literal type="number">0xcb</literal></expr>, <expr><literal type="number">0xf2</literal></expr>, <expr><literal type="number">0x2d</literal></expr>, <expr><literal type="number">0x38</literal></expr>, <expr><literal type="number">0x3a</literal></expr>, <expr><literal type="number">0xdd</literal></expr>, <expr><literal type="number">0x93</literal></expr>, <expr><literal type="number">0x52</literal></expr>, <expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0x49</literal></expr>, <expr><literal type="number">0x7e</literal></expr>,

<expr><literal type="number">0x2b</literal></expr>, <expr><literal type="number">0x12</literal></expr>, <expr><literal type="number">0xc4</literal></expr>, <expr><literal type="number">0x61</literal></expr>, <expr><literal type="number">0x73</literal></expr>, <expr><literal type="number">0xe3</literal></expr>, <expr><literal type="number">0x6f</literal></expr>, <expr><literal type="number">0x54</literal></expr>, <expr><literal type="number">0xbd</literal></expr>, <expr><literal type="number">0x96</literal></expr>, <expr><literal type="number">0xe5</literal></expr>, <expr><literal type="number">0xa7</literal></expr>,

<expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xa9</literal></expr>, <expr><literal type="number">0x5a</literal></expr>, <expr><literal type="number">0x58</literal></expr>, <expr><literal type="number">0xa4</literal></expr>, <expr><literal type="number">0xb7</literal></expr>, <expr><literal type="number">0x67</literal></expr>, <expr><literal type="number">0xd2</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0xbd</literal></expr>, <expr><literal type="number">0xc8</literal></expr>, <expr><literal type="number">0x1e</literal></expr>,

<expr><literal type="number">0xb1</literal></expr>, <expr><literal type="number">0x3a</literal></expr>, <expr><literal type="number">0x12</literal></expr>, <expr><literal type="number">0x4f</literal></expr>, <expr><literal type="number">0x98</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0xef</literal></expr>, <expr><literal type="number">0x39</literal></expr>, <expr><literal type="number">0x5d</literal></expr>, <expr><literal type="number">0x6a</literal></expr>, <expr><literal type="number">0xba</literal></expr>,

<expr><literal type="number">0xb7</literal></expr>, <expr><literal type="number">0x0b</literal></expr>, <expr><literal type="number">0x3b</literal></expr>, <expr><literal type="number">0xd8</literal></expr>, <expr><literal type="number">0xb7</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xdd</literal></expr>, <expr><literal type="number">0x79</literal></expr>, <expr><literal type="number">0x6e</literal></expr>, <expr><literal type="number">0xa2</literal></expr>, <expr><literal type="number">0xd2</literal></expr>, <expr><literal type="number">0x84</literal></expr>,

<expr><literal type="number">0x73</literal></expr>, <expr><literal type="number">0x47</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x88</literal></expr>, <expr><literal type="number">0xb4</literal></expr>, <expr><literal type="number">0x64</literal></expr>, <expr><literal type="number">0xd9</literal></expr>, <expr><literal type="number">0xb9</literal></expr>, <expr><literal type="number">0xb8</literal></expr>, <expr><literal type="number">0x4f</literal></expr>, <expr><literal type="number">0xf1</literal></expr>, <expr><literal type="number">0xc9</literal></expr>,

<expr><literal type="number">0x34</literal></expr>, <expr><literal type="number">0xbb</literal></expr>, <expr><literal type="number">0xf9</literal></expr>, <expr><literal type="number">0x73</literal></expr>, <expr><literal type="number">0x66</literal></expr>, <expr><literal type="number">0xf5</literal></expr>, <expr><literal type="number">0x7c</literal></expr>, <expr><literal type="number">0x2e</literal></expr>, <expr><literal type="number">0x11</literal></expr>, <expr><literal type="number">0xfe</literal></expr>, <expr><literal type="number">0xc3</literal></expr>, <expr><literal type="number">0x31</literal></expr>,

<expr><literal type="number">0xe6</literal></expr>, <expr><literal type="number">0x08</literal></expr>, <expr><literal type="number">0x38</literal></expr>, <expr><literal type="number">0x59</literal></expr>, <expr><literal type="number">0x67</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0xeb</literal></expr>, <expr><literal type="number">0x6d</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x27</literal></expr>, <expr><literal type="number">0xd7</literal></expr>, <expr><literal type="number">0x0d</literal></expr>,

<expr><literal type="number">0x74</literal></expr>, <expr><literal type="number">0xaf</literal></expr>, <expr><literal type="number">0xa0</literal></expr>, <expr><literal type="number">0x35</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x99</literal></expr>, <expr><literal type="number">0x36</literal></expr>, <expr><literal type="number">0xe5</literal></expr>, <expr><literal type="number">0xe4</literal></expr>, <expr><literal type="number">0xe9</literal></expr>,

<expr><literal type="number">0xfb</literal></expr>, <expr><literal type="number">0x28</literal></expr>, <expr><literal type="number">0xbe</literal></expr>, <expr><literal type="number">0x91</literal></expr>, <expr><literal type="number">0xf5</literal></expr>, <expr><literal type="number">0x06</literal></expr>, <expr><literal type="number">0x5f</literal></expr>, <expr><literal type="number">0xe8</literal></expr>, <expr><literal type="number">0xc9</literal></expr>, <expr><literal type="number">0x35</literal></expr>, <expr><literal type="number">0xb3</literal></expr>, <expr><literal type="number">0xf5</literal></expr>,

<expr><literal type="number">0xd8</literal></expr>, <expr><literal type="number">0x1f</literal></expr>, <expr><literal type="number">0xc5</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>hex_g</name> <init>= <expr><literal type="string">"3B92E4FF5929150B08995A7BF2AD1440556FA047FF9099B344B3D4FC451505AE6722439CBA3710A5894737ECCCF5AEADA8B47A35CB9D935CEDE6B07E9694C4A60C7DD6708A094F814A0EC213FBEB16BFEAA4F456FF723005DE8A443FBEC6852655D62D1D1EDB15DAA445833C1797980B8D87F3490D90BDA9AB676E87687223DC"</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>hex_p</name> <init>= <expr><literal type="string">"C50A37515CABD618D5A270BD4A6F6B4AF9E139950F2B99387D9A64D64CB5967ADCEDACA8ACC61B655ADEDB0061251A182CEEA10790625E4D123190C70321FA09E7B173D78EAFDBFDBFB3EFADD1A12A036DE706924A852AFF7A0166531FEAC66741845AC06CED62F9C2626205A4FA48A066EC35C9A811FEB981ABEEBE31B6BFCF"</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>hex_q</name> <init>= <expr><literal type="string">"AA5BD7F4E5062413E58835CA00C7A635716194C5"</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>hex_x</name> <init>= <expr><literal type="string">"9936E5E4E9FB28BE91F5065FE8C935B3F5D81FC5"</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>hex_y</name> <init>= <expr><literal type="string">"5316B0FBBF598A5E5595C14FAC43B80853E6CF0D9223FAB184595239BFCBF22D383ADD935205497E2B12C46173E36F54BD96E5A7AAA95A58A4B767D2C0BDC81EB13A124F98C005EF395D6ABAB70B3BD8B795DD796EA2D28473470388B464D9B9B84FF1C934BBF97366F57C2E11FEC331E60838596781EB6D4127D70D74AFA035"</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name></type> <name><name>openssl_pub_dsa</name><index>[]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x82</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0xb6</literal></expr>, <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x82</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x2b</literal></expr>, <expr><literal type="number">0x06</literal></expr>, <expr><literal type="number">0x07</literal></expr>, <expr><literal type="number">0x2a</literal></expr>, <expr><literal type="number">0x86</literal></expr>,

<expr><literal type="number">0x48</literal></expr>, <expr><literal type="number">0xce</literal></expr>, <expr><literal type="number">0x38</literal></expr>, <expr><literal type="number">0x04</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x82</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x1e</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0x81</literal></expr>,

<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xc5</literal></expr>, <expr><literal type="number">0x0a</literal></expr>, <expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0x51</literal></expr>, <expr><literal type="number">0x5c</literal></expr>, <expr><literal type="number">0xab</literal></expr>, <expr><literal type="number">0xd6</literal></expr>, <expr><literal type="number">0x18</literal></expr>, <expr><literal type="number">0xd5</literal></expr>, <expr><literal type="number">0xa2</literal></expr>, <expr><literal type="number">0x70</literal></expr>,

<expr><literal type="number">0xbd</literal></expr>, <expr><literal type="number">0x4a</literal></expr>, <expr><literal type="number">0x6f</literal></expr>, <expr><literal type="number">0x6b</literal></expr>, <expr><literal type="number">0x4a</literal></expr>, <expr><literal type="number">0xf9</literal></expr>, <expr><literal type="number">0xe1</literal></expr>, <expr><literal type="number">0x39</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0x0f</literal></expr>, <expr><literal type="number">0x2b</literal></expr>, <expr><literal type="number">0x99</literal></expr>,

<expr><literal type="number">0x38</literal></expr>, <expr><literal type="number">0x7d</literal></expr>, <expr><literal type="number">0x9a</literal></expr>, <expr><literal type="number">0x64</literal></expr>, <expr><literal type="number">0xd6</literal></expr>, <expr><literal type="number">0x4c</literal></expr>, <expr><literal type="number">0xb5</literal></expr>, <expr><literal type="number">0x96</literal></expr>, <expr><literal type="number">0x7a</literal></expr>, <expr><literal type="number">0xdc</literal></expr>, <expr><literal type="number">0xed</literal></expr>, <expr><literal type="number">0xac</literal></expr>,

<expr><literal type="number">0xa8</literal></expr>, <expr><literal type="number">0xac</literal></expr>, <expr><literal type="number">0xc6</literal></expr>, <expr><literal type="number">0x1b</literal></expr>, <expr><literal type="number">0x65</literal></expr>, <expr><literal type="number">0x5a</literal></expr>, <expr><literal type="number">0xde</literal></expr>, <expr><literal type="number">0xdb</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x61</literal></expr>, <expr><literal type="number">0x25</literal></expr>, <expr><literal type="number">0x1a</literal></expr>,

<expr><literal type="number">0x18</literal></expr>, <expr><literal type="number">0x2c</literal></expr>, <expr><literal type="number">0xee</literal></expr>, <expr><literal type="number">0xa1</literal></expr>, <expr><literal type="number">0x07</literal></expr>, <expr><literal type="number">0x90</literal></expr>, <expr><literal type="number">0x62</literal></expr>, <expr><literal type="number">0x5e</literal></expr>, <expr><literal type="number">0x4d</literal></expr>, <expr><literal type="number">0x12</literal></expr>, <expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">0x90</literal></expr>,

<expr><literal type="number">0xc7</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x21</literal></expr>, <expr><literal type="number">0xfa</literal></expr>, <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">0xe7</literal></expr>, <expr><literal type="number">0xb1</literal></expr>, <expr><literal type="number">0x73</literal></expr>, <expr><literal type="number">0xd7</literal></expr>, <expr><literal type="number">0x8e</literal></expr>, <expr><literal type="number">0xaf</literal></expr>, <expr><literal type="number">0xdb</literal></expr>,

<expr><literal type="number">0xfd</literal></expr>, <expr><literal type="number">0xbf</literal></expr>, <expr><literal type="number">0xb3</literal></expr>, <expr><literal type="number">0xef</literal></expr>, <expr><literal type="number">0xad</literal></expr>, <expr><literal type="number">0xd1</literal></expr>, <expr><literal type="number">0xa1</literal></expr>, <expr><literal type="number">0x2a</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x6d</literal></expr>, <expr><literal type="number">0xe7</literal></expr>, <expr><literal type="number">0x06</literal></expr>,

<expr><literal type="number">0x92</literal></expr>, <expr><literal type="number">0x4a</literal></expr>, <expr><literal type="number">0x85</literal></expr>, <expr><literal type="number">0x2a</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x7a</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x66</literal></expr>, <expr><literal type="number">0x53</literal></expr>, <expr><literal type="number">0x1f</literal></expr>, <expr><literal type="number">0xea</literal></expr>, <expr><literal type="number">0xc6</literal></expr>,

<expr><literal type="number">0x67</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x84</literal></expr>, <expr><literal type="number">0x5a</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0x6c</literal></expr>, <expr><literal type="number">0xed</literal></expr>, <expr><literal type="number">0x62</literal></expr>, <expr><literal type="number">0xf9</literal></expr>, <expr><literal type="number">0xc2</literal></expr>, <expr><literal type="number">0x62</literal></expr>, <expr><literal type="number">0x62</literal></expr>,

<expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0xa4</literal></expr>, <expr><literal type="number">0xfa</literal></expr>, <expr><literal type="number">0x48</literal></expr>, <expr><literal type="number">0xa0</literal></expr>, <expr><literal type="number">0x66</literal></expr>, <expr><literal type="number">0xec</literal></expr>, <expr><literal type="number">0x35</literal></expr>, <expr><literal type="number">0xc9</literal></expr>, <expr><literal type="number">0xa8</literal></expr>, <expr><literal type="number">0x11</literal></expr>, <expr><literal type="number">0xfe</literal></expr>,

<expr><literal type="number">0xb9</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0xab</literal></expr>, <expr><literal type="number">0xee</literal></expr>, <expr><literal type="number">0xbe</literal></expr>, <expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">0xb6</literal></expr>, <expr><literal type="number">0xbf</literal></expr>, <expr><literal type="number">0xcf</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0x00</literal></expr>,

<expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x5b</literal></expr>, <expr><literal type="number">0xd7</literal></expr>, <expr><literal type="number">0xf4</literal></expr>, <expr><literal type="number">0xe5</literal></expr>, <expr><literal type="number">0x06</literal></expr>, <expr><literal type="number">0x24</literal></expr>, <expr><literal type="number">0x13</literal></expr>, <expr><literal type="number">0xe5</literal></expr>, <expr><literal type="number">0x88</literal></expr>, <expr><literal type="number">0x35</literal></expr>, <expr><literal type="number">0xca</literal></expr>,

<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xc7</literal></expr>, <expr><literal type="number">0xa6</literal></expr>, <expr><literal type="number">0x35</literal></expr>, <expr><literal type="number">0x71</literal></expr>, <expr><literal type="number">0x61</literal></expr>, <expr><literal type="number">0x94</literal></expr>, <expr><literal type="number">0xc5</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x3b</literal></expr>,

<expr><literal type="number">0x92</literal></expr>, <expr><literal type="number">0xe4</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x59</literal></expr>, <expr><literal type="number">0x29</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0x0b</literal></expr>, <expr><literal type="number">0x08</literal></expr>, <expr><literal type="number">0x99</literal></expr>, <expr><literal type="number">0x5a</literal></expr>, <expr><literal type="number">0x7b</literal></expr>, <expr><literal type="number">0xf2</literal></expr>,

<expr><literal type="number">0xad</literal></expr>, <expr><literal type="number">0x14</literal></expr>, <expr><literal type="number">0x40</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x6f</literal></expr>, <expr><literal type="number">0xa0</literal></expr>, <expr><literal type="number">0x47</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x90</literal></expr>, <expr><literal type="number">0x99</literal></expr>, <expr><literal type="number">0xb3</literal></expr>, <expr><literal type="number">0x44</literal></expr>,

<expr><literal type="number">0xb3</literal></expr>, <expr><literal type="number">0xd4</literal></expr>, <expr><literal type="number">0xfc</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0xae</literal></expr>, <expr><literal type="number">0x67</literal></expr>, <expr><literal type="number">0x22</literal></expr>, <expr><literal type="number">0x43</literal></expr>, <expr><literal type="number">0x9c</literal></expr>, <expr><literal type="number">0xba</literal></expr>,

<expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0x10</literal></expr>, <expr><literal type="number">0xa5</literal></expr>, <expr><literal type="number">0x89</literal></expr>, <expr><literal type="number">0x47</literal></expr>, <expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0xec</literal></expr>, <expr><literal type="number">0xcc</literal></expr>, <expr><literal type="number">0xf5</literal></expr>, <expr><literal type="number">0xae</literal></expr>, <expr><literal type="number">0xad</literal></expr>, <expr><literal type="number">0xa8</literal></expr>,

<expr><literal type="number">0xb4</literal></expr>, <expr><literal type="number">0x7a</literal></expr>, <expr><literal type="number">0x35</literal></expr>, <expr><literal type="number">0xcb</literal></expr>, <expr><literal type="number">0x9d</literal></expr>, <expr><literal type="number">0x93</literal></expr>, <expr><literal type="number">0x5c</literal></expr>, <expr><literal type="number">0xed</literal></expr>, <expr><literal type="number">0xe6</literal></expr>, <expr><literal type="number">0xb0</literal></expr>, <expr><literal type="number">0x7e</literal></expr>, <expr><literal type="number">0x96</literal></expr>,

<expr><literal type="number">0x94</literal></expr>, <expr><literal type="number">0xc4</literal></expr>, <expr><literal type="number">0xa6</literal></expr>, <expr><literal type="number">0x0c</literal></expr>, <expr><literal type="number">0x7d</literal></expr>, <expr><literal type="number">0xd6</literal></expr>, <expr><literal type="number">0x70</literal></expr>, <expr><literal type="number">0x8a</literal></expr>, <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">0x4f</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0x4a</literal></expr>,

<expr><literal type="number">0x0e</literal></expr>, <expr><literal type="number">0xc2</literal></expr>, <expr><literal type="number">0x13</literal></expr>, <expr><literal type="number">0xfb</literal></expr>, <expr><literal type="number">0xeb</literal></expr>, <expr><literal type="number">0x16</literal></expr>, <expr><literal type="number">0xbf</literal></expr>, <expr><literal type="number">0xea</literal></expr>, <expr><literal type="number">0xa4</literal></expr>, <expr><literal type="number">0xf4</literal></expr>, <expr><literal type="number">0x56</literal></expr>, <expr><literal type="number">0xff</literal></expr>,

<expr><literal type="number">0x72</literal></expr>, <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0xde</literal></expr>, <expr><literal type="number">0x8a</literal></expr>, <expr><literal type="number">0x44</literal></expr>, <expr><literal type="number">0x3f</literal></expr>, <expr><literal type="number">0xbe</literal></expr>, <expr><literal type="number">0xc6</literal></expr>, <expr><literal type="number">0x85</literal></expr>, <expr><literal type="number">0x26</literal></expr>, <expr><literal type="number">0x55</literal></expr>,

<expr><literal type="number">0xd6</literal></expr>, <expr><literal type="number">0x2d</literal></expr>, <expr><literal type="number">0x1d</literal></expr>, <expr><literal type="number">0x1e</literal></expr>, <expr><literal type="number">0xdb</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0xda</literal></expr>, <expr><literal type="number">0xa4</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0x83</literal></expr>, <expr><literal type="number">0x3c</literal></expr>, <expr><literal type="number">0x17</literal></expr>,

<expr><literal type="number">0x97</literal></expr>, <expr><literal type="number">0x98</literal></expr>, <expr><literal type="number">0x0b</literal></expr>, <expr><literal type="number">0x8d</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xf3</literal></expr>, <expr><literal type="number">0x49</literal></expr>, <expr><literal type="number">0x0d</literal></expr>, <expr><literal type="number">0x90</literal></expr>, <expr><literal type="number">0xbd</literal></expr>, <expr><literal type="number">0xa9</literal></expr>, <expr><literal type="number">0xab</literal></expr>,

<expr><literal type="number">0x67</literal></expr>, <expr><literal type="number">0x6e</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0x68</literal></expr>, <expr><literal type="number">0x72</literal></expr>, <expr><literal type="number">0x23</literal></expr>, <expr><literal type="number">0xdc</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0x84</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x02</literal></expr>,

<expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x53</literal></expr>, <expr><literal type="number">0x16</literal></expr>, <expr><literal type="number">0xb0</literal></expr>, <expr><literal type="number">0xfb</literal></expr>, <expr><literal type="number">0xbf</literal></expr>, <expr><literal type="number">0x59</literal></expr>, <expr><literal type="number">0x8a</literal></expr>, <expr><literal type="number">0x5e</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x95</literal></expr>,

<expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0x4f</literal></expr>, <expr><literal type="number">0xac</literal></expr>, <expr><literal type="number">0x43</literal></expr>, <expr><literal type="number">0xb8</literal></expr>, <expr><literal type="number">0x08</literal></expr>, <expr><literal type="number">0x53</literal></expr>, <expr><literal type="number">0xe6</literal></expr>, <expr><literal type="number">0xcf</literal></expr>, <expr><literal type="number">0x0d</literal></expr>, <expr><literal type="number">0x92</literal></expr>, <expr><literal type="number">0x23</literal></expr>,

<expr><literal type="number">0xfa</literal></expr>, <expr><literal type="number">0xb1</literal></expr>, <expr><literal type="number">0x84</literal></expr>, <expr><literal type="number">0x59</literal></expr>, <expr><literal type="number">0x52</literal></expr>, <expr><literal type="number">0x39</literal></expr>, <expr><literal type="number">0xbf</literal></expr>, <expr><literal type="number">0xcb</literal></expr>, <expr><literal type="number">0xf2</literal></expr>, <expr><literal type="number">0x2d</literal></expr>, <expr><literal type="number">0x38</literal></expr>, <expr><literal type="number">0x3a</literal></expr>,

<expr><literal type="number">0xdd</literal></expr>, <expr><literal type="number">0x93</literal></expr>, <expr><literal type="number">0x52</literal></expr>, <expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0x49</literal></expr>, <expr><literal type="number">0x7e</literal></expr>, <expr><literal type="number">0x2b</literal></expr>, <expr><literal type="number">0x12</literal></expr>, <expr><literal type="number">0xc4</literal></expr>, <expr><literal type="number">0x61</literal></expr>, <expr><literal type="number">0x73</literal></expr>, <expr><literal type="number">0xe3</literal></expr>,

<expr><literal type="number">0x6f</literal></expr>, <expr><literal type="number">0x54</literal></expr>, <expr><literal type="number">0xbd</literal></expr>, <expr><literal type="number">0x96</literal></expr>, <expr><literal type="number">0xe5</literal></expr>, <expr><literal type="number">0xa7</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xa9</literal></expr>, <expr><literal type="number">0x5a</literal></expr>, <expr><literal type="number">0x58</literal></expr>, <expr><literal type="number">0xa4</literal></expr>, <expr><literal type="number">0xb7</literal></expr>,

<expr><literal type="number">0x67</literal></expr>, <expr><literal type="number">0xd2</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0xbd</literal></expr>, <expr><literal type="number">0xc8</literal></expr>, <expr><literal type="number">0x1e</literal></expr>, <expr><literal type="number">0xb1</literal></expr>, <expr><literal type="number">0x3a</literal></expr>, <expr><literal type="number">0x12</literal></expr>, <expr><literal type="number">0x4f</literal></expr>, <expr><literal type="number">0x98</literal></expr>, <expr><literal type="number">0xc0</literal></expr>,

<expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0xef</literal></expr>, <expr><literal type="number">0x39</literal></expr>, <expr><literal type="number">0x5d</literal></expr>, <expr><literal type="number">0x6a</literal></expr>, <expr><literal type="number">0xba</literal></expr>, <expr><literal type="number">0xb7</literal></expr>, <expr><literal type="number">0x0b</literal></expr>, <expr><literal type="number">0x3b</literal></expr>, <expr><literal type="number">0xd8</literal></expr>, <expr><literal type="number">0xb7</literal></expr>, <expr><literal type="number">0x95</literal></expr>,

<expr><literal type="number">0xdd</literal></expr>, <expr><literal type="number">0x79</literal></expr>, <expr><literal type="number">0x6e</literal></expr>, <expr><literal type="number">0xa2</literal></expr>, <expr><literal type="number">0xd2</literal></expr>, <expr><literal type="number">0x84</literal></expr>, <expr><literal type="number">0x73</literal></expr>, <expr><literal type="number">0x47</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x88</literal></expr>, <expr><literal type="number">0xb4</literal></expr>, <expr><literal type="number">0x64</literal></expr>,

<expr><literal type="number">0xd9</literal></expr>, <expr><literal type="number">0xb9</literal></expr>, <expr><literal type="number">0xb8</literal></expr>, <expr><literal type="number">0x4f</literal></expr>, <expr><literal type="number">0xf1</literal></expr>, <expr><literal type="number">0xc9</literal></expr>, <expr><literal type="number">0x34</literal></expr>, <expr><literal type="number">0xbb</literal></expr>, <expr><literal type="number">0xf9</literal></expr>, <expr><literal type="number">0x73</literal></expr>, <expr><literal type="number">0x66</literal></expr>, <expr><literal type="number">0xf5</literal></expr>,

<expr><literal type="number">0x7c</literal></expr>, <expr><literal type="number">0x2e</literal></expr>, <expr><literal type="number">0x11</literal></expr>, <expr><literal type="number">0xfe</literal></expr>, <expr><literal type="number">0xc3</literal></expr>, <expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">0xe6</literal></expr>, <expr><literal type="number">0x08</literal></expr>, <expr><literal type="number">0x38</literal></expr>, <expr><literal type="number">0x59</literal></expr>, <expr><literal type="number">0x67</literal></expr>, <expr><literal type="number">0x81</literal></expr>,

<expr><literal type="number">0xeb</literal></expr>, <expr><literal type="number">0x6d</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x27</literal></expr>, <expr><literal type="number">0xd7</literal></expr>, <expr><literal type="number">0x0d</literal></expr>, <expr><literal type="number">0x74</literal></expr>, <expr><literal type="number">0xaf</literal></expr>, <expr><literal type="number">0xa0</literal></expr>, <expr><literal type="number">0x35</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>unsigned</name> <name>char</name></type> <name><name>dsaparam_der</name><index>[]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x82</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x1e</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xc5</literal></expr>, <expr><literal type="number">0x0a</literal></expr>, <expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0x51</literal></expr>,

<expr><literal type="number">0x5c</literal></expr>, <expr><literal type="number">0xab</literal></expr>, <expr><literal type="number">0xd6</literal></expr>, <expr><literal type="number">0x18</literal></expr>, <expr><literal type="number">0xd5</literal></expr>, <expr><literal type="number">0xa2</literal></expr>, <expr><literal type="number">0x70</literal></expr>, <expr><literal type="number">0xbd</literal></expr>, <expr><literal type="number">0x4a</literal></expr>, <expr><literal type="number">0x6f</literal></expr>, <expr><literal type="number">0x6b</literal></expr>, <expr><literal type="number">0x4a</literal></expr>,

<expr><literal type="number">0xf9</literal></expr>, <expr><literal type="number">0xe1</literal></expr>, <expr><literal type="number">0x39</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0x0f</literal></expr>, <expr><literal type="number">0x2b</literal></expr>, <expr><literal type="number">0x99</literal></expr>, <expr><literal type="number">0x38</literal></expr>, <expr><literal type="number">0x7d</literal></expr>, <expr><literal type="number">0x9a</literal></expr>, <expr><literal type="number">0x64</literal></expr>, <expr><literal type="number">0xd6</literal></expr>,

<expr><literal type="number">0x4c</literal></expr>, <expr><literal type="number">0xb5</literal></expr>, <expr><literal type="number">0x96</literal></expr>, <expr><literal type="number">0x7a</literal></expr>, <expr><literal type="number">0xdc</literal></expr>, <expr><literal type="number">0xed</literal></expr>, <expr><literal type="number">0xac</literal></expr>, <expr><literal type="number">0xa8</literal></expr>, <expr><literal type="number">0xac</literal></expr>, <expr><literal type="number">0xc6</literal></expr>, <expr><literal type="number">0x1b</literal></expr>, <expr><literal type="number">0x65</literal></expr>,

<expr><literal type="number">0x5a</literal></expr>, <expr><literal type="number">0xde</literal></expr>, <expr><literal type="number">0xdb</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x61</literal></expr>, <expr><literal type="number">0x25</literal></expr>, <expr><literal type="number">0x1a</literal></expr>, <expr><literal type="number">0x18</literal></expr>, <expr><literal type="number">0x2c</literal></expr>, <expr><literal type="number">0xee</literal></expr>, <expr><literal type="number">0xa1</literal></expr>, <expr><literal type="number">0x07</literal></expr>,

<expr><literal type="number">0x90</literal></expr>, <expr><literal type="number">0x62</literal></expr>, <expr><literal type="number">0x5e</literal></expr>, <expr><literal type="number">0x4d</literal></expr>, <expr><literal type="number">0x12</literal></expr>, <expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">0x90</literal></expr>, <expr><literal type="number">0xc7</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x21</literal></expr>, <expr><literal type="number">0xfa</literal></expr>, <expr><literal type="number">0x09</literal></expr>,

<expr><literal type="number">0xe7</literal></expr>, <expr><literal type="number">0xb1</literal></expr>, <expr><literal type="number">0x73</literal></expr>, <expr><literal type="number">0xd7</literal></expr>, <expr><literal type="number">0x8e</literal></expr>, <expr><literal type="number">0xaf</literal></expr>, <expr><literal type="number">0xdb</literal></expr>, <expr><literal type="number">0xfd</literal></expr>, <expr><literal type="number">0xbf</literal></expr>, <expr><literal type="number">0xb3</literal></expr>, <expr><literal type="number">0xef</literal></expr>, <expr><literal type="number">0xad</literal></expr>,

<expr><literal type="number">0xd1</literal></expr>, <expr><literal type="number">0xa1</literal></expr>, <expr><literal type="number">0x2a</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x6d</literal></expr>, <expr><literal type="number">0xe7</literal></expr>, <expr><literal type="number">0x06</literal></expr>, <expr><literal type="number">0x92</literal></expr>, <expr><literal type="number">0x4a</literal></expr>, <expr><literal type="number">0x85</literal></expr>, <expr><literal type="number">0x2a</literal></expr>, <expr><literal type="number">0xff</literal></expr>,

<expr><literal type="number">0x7a</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x66</literal></expr>, <expr><literal type="number">0x53</literal></expr>, <expr><literal type="number">0x1f</literal></expr>, <expr><literal type="number">0xea</literal></expr>, <expr><literal type="number">0xc6</literal></expr>, <expr><literal type="number">0x67</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x84</literal></expr>, <expr><literal type="number">0x5a</literal></expr>, <expr><literal type="number">0xc0</literal></expr>,

<expr><literal type="number">0x6c</literal></expr>, <expr><literal type="number">0xed</literal></expr>, <expr><literal type="number">0x62</literal></expr>, <expr><literal type="number">0xf9</literal></expr>, <expr><literal type="number">0xc2</literal></expr>, <expr><literal type="number">0x62</literal></expr>, <expr><literal type="number">0x62</literal></expr>, <expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0xa4</literal></expr>, <expr><literal type="number">0xfa</literal></expr>, <expr><literal type="number">0x48</literal></expr>, <expr><literal type="number">0xa0</literal></expr>,

<expr><literal type="number">0x66</literal></expr>, <expr><literal type="number">0xec</literal></expr>, <expr><literal type="number">0x35</literal></expr>, <expr><literal type="number">0xc9</literal></expr>, <expr><literal type="number">0xa8</literal></expr>, <expr><literal type="number">0x11</literal></expr>, <expr><literal type="number">0xfe</literal></expr>, <expr><literal type="number">0xb9</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0xab</literal></expr>, <expr><literal type="number">0xee</literal></expr>, <expr><literal type="number">0xbe</literal></expr>,

<expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">0xb6</literal></expr>, <expr><literal type="number">0xbf</literal></expr>, <expr><literal type="number">0xcf</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x5b</literal></expr>, <expr><literal type="number">0xd7</literal></expr>, <expr><literal type="number">0xf4</literal></expr>, <expr><literal type="number">0xe5</literal></expr>,

<expr><literal type="number">0x06</literal></expr>, <expr><literal type="number">0x24</literal></expr>, <expr><literal type="number">0x13</literal></expr>, <expr><literal type="number">0xe5</literal></expr>, <expr><literal type="number">0x88</literal></expr>, <expr><literal type="number">0x35</literal></expr>, <expr><literal type="number">0xca</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xc7</literal></expr>, <expr><literal type="number">0xa6</literal></expr>, <expr><literal type="number">0x35</literal></expr>, <expr><literal type="number">0x71</literal></expr>,

<expr><literal type="number">0x61</literal></expr>, <expr><literal type="number">0x94</literal></expr>, <expr><literal type="number">0xc5</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x3b</literal></expr>, <expr><literal type="number">0x92</literal></expr>, <expr><literal type="number">0xe4</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x59</literal></expr>, <expr><literal type="number">0x29</literal></expr>,

<expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0x0b</literal></expr>, <expr><literal type="number">0x08</literal></expr>, <expr><literal type="number">0x99</literal></expr>, <expr><literal type="number">0x5a</literal></expr>, <expr><literal type="number">0x7b</literal></expr>, <expr><literal type="number">0xf2</literal></expr>, <expr><literal type="number">0xad</literal></expr>, <expr><literal type="number">0x14</literal></expr>, <expr><literal type="number">0x40</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x6f</literal></expr>,

<expr><literal type="number">0xa0</literal></expr>, <expr><literal type="number">0x47</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x90</literal></expr>, <expr><literal type="number">0x99</literal></expr>, <expr><literal type="number">0xb3</literal></expr>, <expr><literal type="number">0x44</literal></expr>, <expr><literal type="number">0xb3</literal></expr>, <expr><literal type="number">0xd4</literal></expr>, <expr><literal type="number">0xfc</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0x15</literal></expr>,

<expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0xae</literal></expr>, <expr><literal type="number">0x67</literal></expr>, <expr><literal type="number">0x22</literal></expr>, <expr><literal type="number">0x43</literal></expr>, <expr><literal type="number">0x9c</literal></expr>, <expr><literal type="number">0xba</literal></expr>, <expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0x10</literal></expr>, <expr><literal type="number">0xa5</literal></expr>, <expr><literal type="number">0x89</literal></expr>, <expr><literal type="number">0x47</literal></expr>,

<expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0xec</literal></expr>, <expr><literal type="number">0xcc</literal></expr>, <expr><literal type="number">0xf5</literal></expr>, <expr><literal type="number">0xae</literal></expr>, <expr><literal type="number">0xad</literal></expr>, <expr><literal type="number">0xa8</literal></expr>, <expr><literal type="number">0xb4</literal></expr>, <expr><literal type="number">0x7a</literal></expr>, <expr><literal type="number">0x35</literal></expr>, <expr><literal type="number">0xcb</literal></expr>, <expr><literal type="number">0x9d</literal></expr>,

<expr><literal type="number">0x93</literal></expr>, <expr><literal type="number">0x5c</literal></expr>, <expr><literal type="number">0xed</literal></expr>, <expr><literal type="number">0xe6</literal></expr>, <expr><literal type="number">0xb0</literal></expr>, <expr><literal type="number">0x7e</literal></expr>, <expr><literal type="number">0x96</literal></expr>, <expr><literal type="number">0x94</literal></expr>, <expr><literal type="number">0xc4</literal></expr>, <expr><literal type="number">0xa6</literal></expr>, <expr><literal type="number">0x0c</literal></expr>, <expr><literal type="number">0x7d</literal></expr>,

<expr><literal type="number">0xd6</literal></expr>, <expr><literal type="number">0x70</literal></expr>, <expr><literal type="number">0x8a</literal></expr>, <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">0x4f</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0x4a</literal></expr>, <expr><literal type="number">0x0e</literal></expr>, <expr><literal type="number">0xc2</literal></expr>, <expr><literal type="number">0x13</literal></expr>, <expr><literal type="number">0xfb</literal></expr>, <expr><literal type="number">0xeb</literal></expr>,

<expr><literal type="number">0x16</literal></expr>, <expr><literal type="number">0xbf</literal></expr>, <expr><literal type="number">0xea</literal></expr>, <expr><literal type="number">0xa4</literal></expr>, <expr><literal type="number">0xf4</literal></expr>, <expr><literal type="number">0x56</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x72</literal></expr>, <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0xde</literal></expr>, <expr><literal type="number">0x8a</literal></expr>,

<expr><literal type="number">0x44</literal></expr>, <expr><literal type="number">0x3f</literal></expr>, <expr><literal type="number">0xbe</literal></expr>, <expr><literal type="number">0xc6</literal></expr>, <expr><literal type="number">0x85</literal></expr>, <expr><literal type="number">0x26</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xd6</literal></expr>, <expr><literal type="number">0x2d</literal></expr>, <expr><literal type="number">0x1d</literal></expr>, <expr><literal type="number">0x1e</literal></expr>, <expr><literal type="number">0xdb</literal></expr>,

<expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0xda</literal></expr>, <expr><literal type="number">0xa4</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0x83</literal></expr>, <expr><literal type="number">0x3c</literal></expr>, <expr><literal type="number">0x17</literal></expr>, <expr><literal type="number">0x97</literal></expr>, <expr><literal type="number">0x98</literal></expr>, <expr><literal type="number">0x0b</literal></expr>, <expr><literal type="number">0x8d</literal></expr>, <expr><literal type="number">0x87</literal></expr>,

<expr><literal type="number">0xf3</literal></expr>, <expr><literal type="number">0x49</literal></expr>, <expr><literal type="number">0x0d</literal></expr>, <expr><literal type="number">0x90</literal></expr>, <expr><literal type="number">0xbd</literal></expr>, <expr><literal type="number">0xa9</literal></expr>, <expr><literal type="number">0xab</literal></expr>, <expr><literal type="number">0x67</literal></expr>, <expr><literal type="number">0x6e</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0x68</literal></expr>, <expr><literal type="number">0x72</literal></expr>,

<expr><literal type="number">0x23</literal></expr>, <expr><literal type="number">0xdc</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>int</name></type> <name>_dsa_compat_test</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>dsa_key</name></type> <name>key</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>tmp</name><index>[<expr><literal type="number">1024</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>buf</name><index>[<expr><literal type="number">1024</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name>x</name></decl>, <decl><type ref="prev"/><name>len</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>key_parts</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name><name>key_lens</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>stat</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_import</name><argument_list>(<argument><expr><name>openssl_priv_dsa</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>openssl_priv_dsa</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_export</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>x</name></expr></argument>, <argument><expr><name>PK_PRIVATE</name> <operator>|</operator> <name>PK_STD</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>do_compare_testvector</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>openssl_priv_dsa</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>openssl_priv_dsa</name></expr></argument>)</argument_list></sizeof></expr></argument>,

<argument><expr><literal type="string">"DSA private export failed from dsa_import(priv_key)\n"</literal></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_export</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>x</name></expr></argument>, <argument><expr><name>PK_PUBLIC</name> <operator>|</operator> <name>PK_STD</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>do_compare_testvector</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>openssl_pub_dsa</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>openssl_pub_dsa</name></expr></argument>)</argument_list></sizeof></expr></argument>,

<argument><expr><literal type="string">"DSA public export failed from dsa_import(priv_key)\n"</literal></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dsa_free</name><argument_list>(<argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_import</name><argument_list>(<argument><expr><name>openssl_pub_dsa</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>openssl_pub_dsa</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_export</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>x</name></expr></argument>, <argument><expr><name>PK_PUBLIC</name> <operator>|</operator> <name>PK_STD</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>do_compare_testvector</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>openssl_pub_dsa</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>openssl_pub_dsa</name></expr></argument>)</argument_list></sizeof></expr></argument>,

<argument><expr><literal type="string">"DSA public export failed from dsa_import(pub_key)\n"</literal></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dsa_free</name><argument_list>(<argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>x</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>x</name> <operator>&lt;</operator> <literal type="number">5</literal></expr>;</condition> <incr><expr><operator>++</operator><name>x</name></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>key_lens</name><index>[<expr><name>x</name></expr>]</index></name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>key_parts</name><index>[<expr><name>x</name></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>radix_to_bin</name><argument_list>(<argument><expr><name>hex_p</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name><name>key_parts</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>key_lens</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>radix_to_bin</name><argument_list>(<argument><expr><name>hex_q</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name><name>key_parts</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>key_lens</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>radix_to_bin</name><argument_list>(<argument><expr><name>hex_g</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name><name>key_parts</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>key_lens</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>radix_to_bin</name><argument_list>(<argument><expr><name>hex_y</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name><name>key_parts</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>key_lens</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>radix_to_bin</name><argument_list>(<argument><expr><name>hex_x</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name><name>key_parts</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>key_lens</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_set_pqg</name><argument_list>(<argument><expr><name><name>key_parts</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>key_lens</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>,

<argument><expr><name><name>key_parts</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>key_lens</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>,

<argument><expr><name><name>key_parts</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>key_lens</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_set_key</name><argument_list>(<argument><expr><name><name>key_parts</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>key_lens</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>,

<argument><expr><name>PK_PRIVATE</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>len</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_export</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>len</name></expr></argument>, <argument><expr><name>PK_PRIVATE</name> <operator>|</operator> <name>PK_STD</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>do_compare_testvector</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><name>len</name></expr></argument>, <argument><expr><name>openssl_priv_dsa</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>openssl_priv_dsa</name></expr></argument>)</argument_list></sizeof></expr></argument>,

<argument><expr><literal type="string">"DSA private export failed from dsa_set_pqg() &amp; dsa_set_key()\n"</literal></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dsa_free</name><argument_list>(<argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_set_pqg</name><argument_list>(<argument><expr><name><name>key_parts</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>key_lens</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>,

<argument><expr><name><name>key_parts</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>key_lens</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>,

<argument><expr><name><name>key_parts</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>key_lens</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_set_key</name><argument_list>(<argument><expr><name><name>key_parts</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>key_lens</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>,

<argument><expr><name>PK_PUBLIC</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>len</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_export</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>len</name></expr></argument>, <argument><expr><name>PK_PUBLIC</name> <operator>|</operator> <name>PK_STD</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>do_compare_testvector</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><name>len</name></expr></argument>, <argument><expr><name>openssl_pub_dsa</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>openssl_pub_dsa</name></expr></argument>)</argument_list></sizeof></expr></argument>,

<argument><expr><literal type="string">"DSA public export failed from dsa_set_pqg() &amp; dsa_set_key()\n"</literal></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dsa_free</name><argument_list>(<argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_set_pqg_dsaparam</name><argument_list>(<argument><expr><name>dsaparam_der</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>dsaparam_der</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_generate_key</name><argument_list>(<argument><expr><operator>&amp;</operator><name>yarrow_prng</name></expr></argument>, <argument><expr><call><name>find_prng</name><argument_list>(<argument><expr><literal type="string">"yarrow"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_verify_key</name><argument_list>(<argument><expr><operator>&amp;</operator><name>key</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>stat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>stat</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"dsa_verify_key after dsa_set_pqg_dsaparam()"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>CRYPT_FAIL_TESTVECTOR</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>dsa_free</name><argument_list>(<argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_set_pqg_dsaparam</name><argument_list>(<argument><expr><name>dsaparam_der</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>dsaparam_der</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_set_key</name><argument_list>(<argument><expr><name><name>key_parts</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>key_lens</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>,

<argument><expr><name>PK_PUBLIC</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>len</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_export</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>len</name></expr></argument>, <argument><expr><name>PK_PUBLIC</name> <operator>|</operator> <name>PK_STD</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>do_compare_testvector</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><name>len</name></expr></argument>, <argument><expr><name>openssl_pub_dsa</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>openssl_pub_dsa</name></expr></argument>)</argument_list></sizeof></expr></argument>,

<argument><expr><literal type="string">"DSA public export failed from dsa_set_pqg_dsaparam()\n"</literal></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dsa_free</name><argument_list>(<argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_set_pqg_dsaparam</name><argument_list>(<argument><expr><name>dsaparam_der</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>dsaparam_der</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_set_key</name><argument_list>(<argument><expr><name><name>key_parts</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>key_lens</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>,

<argument><expr><name>PK_PRIVATE</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>len</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_export</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>len</name></expr></argument>, <argument><expr><name>PK_PRIVATE</name> <operator>|</operator> <name>PK_STD</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>do_compare_testvector</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><name>len</name></expr></argument>, <argument><expr><name>openssl_priv_dsa</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>openssl_priv_dsa</name></expr></argument>)</argument_list></sizeof></expr></argument>,

<argument><expr><literal type="string">"DSA private export failed from dsa_set_pqg_dsaparam()\n"</literal></expr></argument>, <argument><expr><name>__LINE__</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dsa_free</name><argument_list>(<argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>CRYPT_OK</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>_dsa_wycheproof_test</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>msg</name><index>[]</index></name> <init>= <expr><block>{ <expr><literal type="number">0x48</literal></expr>, <expr><literal type="number">0x65</literal></expr>, <expr><literal type="number">0x6c</literal></expr>, <expr><literal type="number">0x6c</literal></expr>, <expr><literal type="number">0x6f</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>sig</name><index>[]</index></name> <init>= <expr><block>{ <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x3d</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x1c</literal></expr>, <expr><literal type="number">0x1e</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0xb4</literal></expr>, <expr><literal type="number">0x79</literal></expr>, <expr><literal type="number">0xad</literal></expr>, <expr><literal type="number">0x57</literal></expr>, <expr><literal type="number">0x69</literal></expr>, <expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0xb9</literal></expr>, <expr><literal type="number">0x60</literal></expr>, <expr><literal type="number">0xfe</literal></expr>,

<expr><literal type="number">0x14</literal></expr>, <expr><literal type="number">0xea</literal></expr>, <expr><literal type="number">0xdb</literal></expr>, <expr><literal type="number">0x91</literal></expr>, <expr><literal type="number">0xb0</literal></expr>, <expr><literal type="number">0xcc</literal></expr>, <expr><literal type="number">0xf3</literal></expr>, <expr><literal type="number">0x48</literal></expr>, <expr><literal type="number">0x43</literal></expr>, <expr><literal type="number">0xda</literal></expr>, <expr><literal type="number">0xb9</literal></expr>, <expr><literal type="number">0x16</literal></expr>, <expr><literal type="number">0x17</literal></expr>, <expr><literal type="number">0x3b</literal></expr>, <expr><literal type="number">0xb8</literal></expr>,

<expr><literal type="number">0xc9</literal></expr>, <expr><literal type="number">0xcd</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x1d</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xad</literal></expr>, <expr><literal type="number">0xe6</literal></expr>, <expr><literal type="number">0x59</literal></expr>, <expr><literal type="number">0x88</literal></expr>, <expr><literal type="number">0xd2</literal></expr>, <expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0xd3</literal></expr>, <expr><literal type="number">0x0f</literal></expr>, <expr><literal type="number">0x9e</literal></expr>, <expr><literal type="number">0xf4</literal></expr>,

<expr><literal type="number">0x1d</literal></expr>, <expr><literal type="number">0xd4</literal></expr>, <expr><literal type="number">0x24</literal></expr>, <expr><literal type="number">0xa4</literal></expr>, <expr><literal type="number">0xe1</literal></expr>, <expr><literal type="number">0xc8</literal></expr>, <expr><literal type="number">0xf1</literal></expr>, <expr><literal type="number">0x69</literal></expr>, <expr><literal type="number">0x67</literal></expr>, <expr><literal type="number">0xcf</literal></expr>, <expr><literal type="number">0x33</literal></expr>, <expr><literal type="number">0x65</literal></expr>, <expr><literal type="number">0x81</literal></expr>, <expr><literal type="number">0x3f</literal></expr>, <expr><literal type="number">0xe8</literal></expr>,

<expr><literal type="number">0x78</literal></expr>, <expr><literal type="number">0x62</literal></expr>, <expr><literal type="number">0x36</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>b64key</name> <init>=

<expr><literal type="string">"MIIDQjCCAjUGByqGSM44BAEwggIoAoIBAQCPeTXZuarpv6vtiHrPSVG28y7FnjuvNxjo6sSWHz79"</literal>

<literal type="string">"NgbnQ1GpxBgzObgJ58KuHFObp0dbhdARrbi0eYd1SYRpXKwOjxSzNggooi/6JxEKPWKpk0U0CaD+"</literal>

<literal type="string">"aWxGWPhL3SCBnDcJoBBXsZWtzQAjPbpUhLYpH51kjviDRIZ3l5zsBLQ0pqwudemYXeI9sCkvwRGM"</literal>

<literal type="string">"n/qdgYHnM423krcw17njSVkvaAmYchU5Feo9a4tGU8YzRY+AOzKkwuDycpAlbk4/ijsIOKHEUOTh"</literal>

<literal type="string">"jBopo33fXqFD3ktm/wSQPtXPFiPhWNSHxgjpfyEc2B3KI8tuOAdl+CLjQr5ITAV2OTlgHNZnAh0A"</literal>

<literal type="string">"uvaWpoV499/e5/pnyXfHhe8ysjO65YDAvNVpXQKCAQAWplxYIEhQcE51AqOXVwQNNNo6NHjBVNTk"</literal>

<literal type="string">"pcAtJC7gT5bmHkvQkEq9rI837rHgnzGC0jyQQ8tkL4gAQWDt+coJsyB2p5wypifyRz6Rh5uixOdE"</literal>

<literal type="string">"vSCBVEy1W4AsNo0fqD7UielOD6BojjJCilx4xHjGjQUntxyaOrsLC+EsRGiWOefTznTbEBplqiuH"</literal>

<literal type="string">"9kxoJts+xy9LVZmDS7TtsC98kOmkltOlXVNb6/xF1PYZ9j897buHOSXC8iTgdzEpbaiH7B5HSPh+"</literal>

<literal type="string">"+1/et1SEMWsiMt7lU92vAhErDR8C2jCXMiT+J67ai51LKSLZuovjntnhA6Y8UoELxoi34u1DFuHv"</literal>

<literal type="string">"F9veA4IBBQACggEAHnf4QrGuD82ZKdOUFh1B4UYU/3UHqaMfSh8U0i4qYnofTllmJIg/GlsWjpQl"</literal>

<literal type="string">"FG8i1fbuKHV0FHFLuZS6ESnwFdbgSnF+35tTCl1cq5TxRjHotM95rrNYzHQYRVU4QeisRhYw6ASm"</literal>

<literal type="string">"L0Nna6Z5SvZomcN3uGnqYSp7n+ZhGqlr5S64tiyXkRe7vMqKfsHh/6scffz8cEhwDTrjhYE26Jdw"</literal>

<literal type="string">"HXwpIbXf7x0fiX9Q2WyhtcLtxYytoYkZ41ZC8IB+6/oAyZoy9NCVwxiPeO1UcRvgMlxLUyrszWVA"</literal>

<literal type="string">"pWfDJyJUQOoVMZveBlEEeaGGF5niW1fezHPANtdaBwK9NzyiMTSZMQ=="</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>derkey</name><index>[<expr><literal type="number">838</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name>derlen</name> <init>= <expr><sizeof>sizeof<argument_list>(<argument><expr><name>derkey</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>hash</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name>hashlen</name> <init>= <expr><sizeof>sizeof<argument_list>(<argument><expr><name>hash</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>dsa_key</name></type> <name>key</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>stat</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>base64_decode</name><argument_list>(<argument><expr><name>b64key</name></expr></argument>, <argument><expr><call><name>XSTRLEN</name><argument_list>(<argument><expr><name>b64key</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>derkey</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>derlen</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>derlen</name> <operator>!=</operator> <literal type="number">838</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"base64_decode failed, derlen=%lu (expected 838)\n"</literal></expr></argument>, <argument><expr><name>derlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>CRYPT_FAIL_TESTVECTOR</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_import</name><argument_list>(<argument><expr><name>derkey</name></expr></argument>, <argument><expr><name>derlen</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>hash_memory</name><argument_list>(<argument><expr><call><name>find_hash</name><argument_list>(<argument><expr><literal type="string">"sha224"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>msg</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>msg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>hash</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>hashlen</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>hashlen</name> <operator>!=</operator> <literal type="number">28</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"hash_memory failed, hashlen=%lu (expected 32)\n"</literal></expr></argument>, <argument><expr><name>hashlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>CRYPT_FAIL_TESTVECTOR</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>stat</name> <operator>=</operator> <literal type="number">666</literal></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_verify_hash</name><argument_list>(<argument><expr><name>sig</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sig</name></expr></argument>)</argument_list></sizeof><operator>-</operator><literal type="number">2</literal></expr></argument>, <argument><expr><name>hash</name></expr></argument>, <argument><expr><name>hashlen</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>stat</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>stat</name> <operator>!=</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"dsa_verify_hash rejected valid signature\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>CRYPT_FAIL_TESTVECTOR</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>stat</name> <operator>=</operator> <literal type="number">666</literal></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>DOX</name><argument_list>(<argument><expr><ternary><condition><expr><call><name>dsa_verify_hash</name><argument_list>(<argument><expr><name>sig</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sig</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>hash</name></expr></argument>, <argument><expr><name>hashlen</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>stat</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call>

<operator>==</operator> <name>CRYPT_INPUT_TOO_LONG</name></expr> ?</condition><then> <expr><name>CRYPT_OK</name></expr></then><else>:<expr><name>CRYPT_INVALID_PACKET</name></expr></else></ternary></expr></argument>, <argument><expr><literal type="string">"should be too long"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>stat</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"dsa_verify_hash did not reject invalid signature\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>CRYPT_FAIL_TESTVECTOR</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>dsa_free</name><argument_list>(<argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>CRYPT_OK</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>dsa_test</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>msg</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>out</name><index>[<expr><literal type="number">1024</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>out2</name><index>[<expr><literal type="number">1024</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name>ch</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name>x</name></decl>, <decl><type ref="prev"/><name>y</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>stat1</name></decl>, <decl><type ref="prev"/><name>stat2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>dsa_key</name></type> <name>key</name></decl>, <decl><type ref="prev"/><name>key2</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>ltc_mp</name><operator>.</operator><name>name</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>CRYPT_NOP</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>_dsa_compat_test</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>_dsa_wycheproof_test</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_generate_pqg</name><argument_list>(<argument><expr><operator>&amp;</operator><name>yarrow_prng</name></expr></argument>, <argument><expr><call><name>find_prng</name><argument_list>(<argument><expr><literal type="string">"yarrow"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_generate_key</name><argument_list>(<argument><expr><operator>&amp;</operator><name>yarrow_prng</name></expr></argument>, <argument><expr><call><name>find_prng</name><argument_list>(<argument><expr><literal type="string">"yarrow"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_verify_key</name><argument_list>(<argument><expr><operator>&amp;</operator><name>key</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>stat1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>stat1</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"dsa_verify_key "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <return>return <expr><literal type="number">1</literal></expr>;</return> </block_content>}</block></if></if_stmt>

<for>for <control>(<init><expr><name>ch</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>ch</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><name>ch</name><operator>++</operator></expr></incr>)</control> <block>{<block_content> <expr_stmt><expr><name><name>msg</name><index>[<expr><name>ch</name></expr>]</index></name> <operator>=</operator> <name>ch</name></expr>;</expr_stmt> </block_content>}</block></for>

<expr_stmt><expr><name>x</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_encrypt_key</name><argument_list>(<argument><expr><name>msg</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>x</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>yarrow_prng</name></expr></argument>, <argument><expr><call><name>find_prng</name><argument_list>(<argument><expr><literal type="string">"yarrow"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>find_hash</name><argument_list>(<argument><expr><literal type="string">"sha1"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>out2</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_decrypt_key</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>y</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>y</name> <operator>!=</operator> <literal type="number">16</literal> <operator>||</operator> <call><name>memcmp</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>msg</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"dsa_decrypt failed, y == %lu\n"</literal></expr></argument>, <argument><expr><name>y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">1</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>x</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_sign_hash</name><argument_list>(<argument><expr><name>msg</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>msg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>x</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>yarrow_prng</name></expr></argument>, <argument><expr><call><name>find_prng</name><argument_list>(<argument><expr><literal type="string">"yarrow"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_verify_hash</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>msg</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>msg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><operator>&amp;</operator><name>stat1</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>msg</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>^=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_verify_hash</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>msg</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>msg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><operator>&amp;</operator><name>stat2</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>msg</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>^=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>stat1</name> <operator>==</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <name>stat2</name> <operator>==</operator> <literal type="number">0</literal><operator>)</operator></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"dsa_verify %d %d"</literal></expr></argument>, <argument><expr><name>stat1</name></expr></argument>, <argument><expr><name>stat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <return>return <expr><literal type="number">1</literal></expr>;</return> </block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>y</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>out2</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_export</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>y</name></expr></argument>, <argument><expr><name>PK_PRIVATE</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_import</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>y</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>key2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_verify_hash</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>msg</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>msg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><operator>&amp;</operator><name>stat1</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>key2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>stat1</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"dsa_verify (import private) %d "</literal></expr></argument>, <argument><expr><name>stat1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <return>return <expr><literal type="number">1</literal></expr>;</return> </block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>dsa_free</name><argument_list>(<argument><expr><operator>&amp;</operator><name>key2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>out2</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_export</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>y</name></expr></argument>, <argument><expr><name>PK_PUBLIC</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_import</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>y</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>key2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DO</name><argument_list>(<argument><expr><call><name>dsa_verify_hash</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>msg</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>msg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><operator>&amp;</operator><name>stat1</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>key2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>stat1</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"dsa_verify (import public) %d "</literal></expr></argument>, <argument><expr><name>stat1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <return>return <expr><literal type="number">1</literal></expr>;</return> </block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>dsa_free</name><argument_list>(<argument><expr><operator>&amp;</operator><name>key2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dsa_free</name><argument_list>(<argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<function><type><name>int</name></type> <name>dsa_test</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><name>CRYPT_NOP</name></expr>;</return>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
