<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats_featurelocations\git\notes-cache.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>NOTES_CACHE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NOTES_CACHE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"notes.h"</cpp:file></cpp:include>

<struct_decl>struct <name>repository</name>;</struct_decl>

<struct>struct <name>notes_cache</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>notes_tree</name></name></type> <name>tree</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>validity</name></decl>;</decl_stmt>
}</block>;</struct>

<function_decl><type><name>void</name></type> <name>notes_cache_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>notes_cache</name></name> <modifier>*</modifier></type><name>c</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>validity</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>notes_cache_write</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>notes_cache</name></name> <modifier>*</modifier></type><name>c</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>char</name> <modifier>*</modifier></type><name>notes_cache_get</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>notes_cache</name></name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type><name>oid</name></decl></parameter>, <parameter><decl><type><name>size_t</name>
<modifier>*</modifier></type><name>outsize</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>notes_cache_put</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>notes_cache</name></name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type><name>oid</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
