<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats_featurelocations\git\sub-process.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>SUBPROCESS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBPROCESS_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"git-compat-util.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"hashmap.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"run-command.h"</cpp:file></cpp:include>



















<struct>struct <name>subprocess_entry</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>hashmap_entry</name></name></type> <name>ent</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cmd</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>child_process</name></name></type> <name>process</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>subprocess_capability</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>flag</name></decl>;</decl_stmt>
}</block>;</struct>




<function_decl><type><name>int</name></type> <name>cmd2process_cmp</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>unused_cmp_data</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>hashmap_entry</name></name> <modifier>*</modifier></type><name>e</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>hashmap_entry</name></name> <modifier>*</modifier></type><name>entry_or_key</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>unused_keydata</name></decl></parameter>)</parameter_list>;</function_decl>





<typedef>typedef <function_decl><type><name>int</name></type>(<modifier>*</modifier><name>subprocess_start_fn</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>subprocess_entry</name></name> <modifier>*</modifier></type><name>entry</name></decl></parameter>)</parameter_list>;</function_decl></typedef>


<function_decl><type><name>int</name></type> <name>subprocess_start</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>hashmap</name></name> <modifier>*</modifier></type><name>hashmap</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>subprocess_entry</name></name> <modifier>*</modifier></type><name>entry</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cmd</name></decl></parameter>,
<parameter><decl><type><name>subprocess_start_fn</name></type> <name>startfn</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type> <name>subprocess_stop</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>hashmap</name></name> <modifier>*</modifier></type><name>hashmap</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>subprocess_entry</name></name> <modifier>*</modifier></type><name>entry</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name><name>struct</name> <name>subprocess_entry</name></name> <modifier>*</modifier></type><name>subprocess_find_entry</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>hashmap</name></name> <modifier>*</modifier></type><name>hashmap</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cmd</name></decl></parameter>)</parameter_list>;</function_decl>




<function><type><specifier>static</specifier> <specifier>inline</specifier> <name><name>struct</name> <name>child_process</name></name> <modifier>*</modifier></type><name>subprocess_get_child_process</name><parameter_list>(
<parameter><decl><type><name><name>struct</name> <name>subprocess_entry</name></name> <modifier>*</modifier></type><name>entry</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>&amp;</operator><name><name>entry</name><operator>-&gt;</operator><name>process</name></name></expr>;</return>
</block_content>}</block></function>










<function_decl><type><name>int</name></type> <name>subprocess_handshake</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>subprocess_entry</name></name> <modifier>*</modifier></type><name>entry</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>welcome_prefix</name></decl></parameter>,
<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>versions</name></decl></parameter>,
<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>chosen_version</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>subprocess_capability</name></name> <modifier>*</modifier></type><name>capabilities</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>supported_capabilities</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>int</name></type> <name>subprocess_read_status</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>strbuf</name></name> <modifier>*</modifier></type><name>status</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
