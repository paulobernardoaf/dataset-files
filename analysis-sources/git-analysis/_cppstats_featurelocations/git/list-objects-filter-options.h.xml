<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats_featurelocations\git\list-objects-filter-options.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LIST_OBJECTS_FILTER_OPTIONS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LIST_OBJECTS_FILTER_OPTIONS_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"parse-options.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"string-list.h"</cpp:file></cpp:include>




<enum>enum <name>list_objects_filter_choice</name> <block>{
<decl><name>LOFC_DISABLED</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>LOFC_BLOB_NONE</name></decl>,
<decl><name>LOFC_BLOB_LIMIT</name></decl>,
<decl><name>LOFC_TREE_DEPTH</name></decl>,
<decl><name>LOFC_SPARSE_OID</name></decl>,
<decl><name>LOFC_COMBINE</name></decl>,
<decl><name>LOFC__COUNT</name></decl> 
}</block>;</enum>

<struct>struct <name>list_objects_filter_options</name> <block>{









<decl_stmt><decl><type><name><name>struct</name> <name>string_list</name></name></type> <name>filter_spec</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name><name>enum</name> <name>list_objects_filter_choice</name></name></type> <name>choice</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>no_filter</name> <range>: <expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>






<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>sparse_oid_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name>blob_limit_value</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name>tree_exclude_depth</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>size_t</name></type> <name>sub_nr</name></decl>, <decl><type ref="prev"/><name>sub_alloc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>list_objects_filter_options</name></name> <modifier>*</modifier></type><name>sub</name></decl>;</decl_stmt>




}</block>;</struct>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CL_ARG__FILTER</name></cpp:macro> <cpp:value>"filter"</cpp:value></cpp:define>

<function_decl><type><name>void</name></type> <name>list_objects_filter_die_if_populated</name><parameter_list>(
<parameter><decl><type><name><name>struct</name> <name>list_objects_filter_options</name></name> <modifier>*</modifier></type><name>filter_options</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>parse_list_objects_filter</name><parameter_list>(
<parameter><decl><type><name><name>struct</name> <name>list_objects_filter_options</name></name> <modifier>*</modifier></type><name>filter_options</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>opt_parse_list_objects_filter</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>option</name></name> <modifier>*</modifier></type><name>opt</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>unset</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPT_PARSE_LIST_OBJECTS_FILTER</name><parameter_list>(<parameter><type><name>fo</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ OPTION_CALLBACK, 0, CL_ARG__FILTER, fo, N_("args"), N_("object filtering"), 0, opt_parse_list_objects_filter }</cpp:value></cpp:define>












<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>expand_list_objects_filter_spec</name><parameter_list>(
<parameter><decl><type><name><name>struct</name> <name>list_objects_filter_options</name></name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>list_objects_filter_spec</name><parameter_list>(
<parameter><decl><type><name><name>struct</name> <name>list_objects_filter_options</name></name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>list_objects_filter_release</name><parameter_list>(
<parameter><decl><type><name><name>struct</name> <name>list_objects_filter_options</name></name> <modifier>*</modifier></type><name>filter_options</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>list_objects_filter_set_no_filter</name><parameter_list>(
<parameter><decl><type><name><name>struct</name> <name>list_objects_filter_options</name></name> <modifier>*</modifier></type><name>filter_options</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>list_objects_filter_release</name><argument_list>(<argument><expr><name>filter_options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>filter_options</name><operator>-&gt;</operator><name>no_filter</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></function>

<function_decl><type><name>void</name></type> <name>partial_clone_register</name><parameter_list>(
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>remote</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>list_objects_filter_options</name></name> <modifier>*</modifier></type><name>filter_options</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>partial_clone_get_default_filter_spec</name><parameter_list>(
<parameter><decl><type><name><name>struct</name> <name>list_objects_filter_options</name></name> <modifier>*</modifier></type><name>filter_options</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>remote</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
