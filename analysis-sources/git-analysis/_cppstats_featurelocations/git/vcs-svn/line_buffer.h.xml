<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats_featurelocations\git\vcs-svn\line_buffer.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LINE_BUFFER_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LINE_BUFFER_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"strbuf.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LINE_BUFFER_LEN</name></cpp:macro> <cpp:value>10000</cpp:value></cpp:define>

<struct>struct <name>line_buffer</name> <block>{
<decl_stmt><decl><type><name>char</name></type> <name><name>line_buffer</name><index>[<expr><name>LINE_BUFFER_LEN</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>FILE</name> <modifier>*</modifier></type><name>infile</name></decl>;</decl_stmt>
}</block>;</struct>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LINE_BUFFER_INIT</name></cpp:macro> <cpp:value>{ "", NULL }</cpp:value></cpp:define>

<function_decl><type><name>int</name></type> <name>buffer_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>line_buffer</name></name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>buffer_fdinit</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>line_buffer</name></name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>buffer_deinit</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>line_buffer</name></name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>buffer_tmpfile_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>line_buffer</name></name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>FILE</name> <modifier>*</modifier></type><name>buffer_tmpfile_rewind</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>line_buffer</name></name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl> 
<function_decl><type><name>long</name></type> <name>buffer_tmpfile_prepare_to_read</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>line_buffer</name></name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>buffer_ferror</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>line_buffer</name></name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>buffer_read_line</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>line_buffer</name></name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>buffer_read_char</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>line_buffer</name></name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>size_t</name></type> <name>buffer_read_binary</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>line_buffer</name></name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>strbuf</name></name> <modifier>*</modifier></type><name>sb</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>off_t</name></type> <name>buffer_copy_bytes</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>line_buffer</name></name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>off_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>off_t</name></type> <name>buffer_skip_bytes</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>line_buffer</name></name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>off_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
