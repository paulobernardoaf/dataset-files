<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats_featurelocations\git\compat\sha1-chunked.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cache.h"</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>git_SHA1_Update_Chunked</name><parameter_list>(<parameter><decl><type><name>platform_SHA_CTX</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>nr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>total</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cdata</name> <init>= <expr><operator>(</operator><specifier>const</specifier> <name>char</name><operator>*</operator><operator>)</operator><name>data</name></expr></init></decl>;</decl_stmt>

<while>while <condition>(<expr><name>len</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>nr</name> <operator>=</operator> <name>len</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>nr</name> <operator>&gt;</operator> <name>SHA1_MAX_BLOCK_SIZE</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>nr</name> <operator>=</operator> <name>SHA1_MAX_BLOCK_SIZE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>platform_SHA1_Update</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>cdata</name></expr></argument>, <argument><expr><name>nr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>total</name> <operator>+=</operator> <name>nr</name></expr>;</expr_stmt>
<expr_stmt><expr><name>cdata</name> <operator>+=</operator> <name>nr</name></expr>;</expr_stmt>
<expr_stmt><expr><name>len</name> <operator>-=</operator> <name>nr</name></expr>;</expr_stmt>
</block_content>}</block></while>
<return>return <expr><name>total</name></expr>;</return>
</block_content>}</block></function>
</unit>
