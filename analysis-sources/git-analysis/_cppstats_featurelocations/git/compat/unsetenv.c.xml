<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats_featurelocations\git\compat\unsetenv.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../git-compat-util.h"</cpp:file></cpp:include>

<function><type><name>void</name></type> <name>gitunsetenv</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__MINGW32__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>environ</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<decl_stmt><decl><type><name>int</name></type> <name>src</name></decl>, <decl><type ref="prev"/><name>dst</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>nmln</name></decl>;</decl_stmt>

<expr_stmt><expr><name>nmln</name> <operator>=</operator> <call><name>strlen</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>src</name> <operator>=</operator> <name>dst</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name><name>environ</name><index>[<expr><name>src</name></expr>]</index></name></expr>;</condition> <incr><expr><operator>++</operator><name>src</name></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>enln</name></decl>;</decl_stmt>
<expr_stmt><expr><name>enln</name> <operator>=</operator> <call><name>strlen</name><argument_list>(<argument><expr><name><name>environ</name><index>[<expr><name>src</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>enln</name> <operator>&gt;</operator> <name>nmln</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <call><name>strncmp</name> <argument_list>(<argument><expr><name><name>environ</name><index>[<expr><name>src</name></expr>]</index></name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>nmln</name></expr></argument>)</argument_list></call>
<operator>&amp;&amp;</operator> <literal type="char">'='</literal> <operator>==</operator> <name><name>environ</name><index>[<expr><name>src</name></expr>]</index><index>[<expr><name>nmln</name></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>environ</name><index>[<expr><name>dst</name></expr>]</index></name> <operator>=</operator> <name><name>environ</name><index>[<expr><name>src</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>dst</name></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><name><name>environ</name><index>[<expr><name>dst</name></expr>]</index></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
