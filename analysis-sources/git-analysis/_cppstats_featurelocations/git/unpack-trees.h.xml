<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats_featurelocations\git\unpack-trees.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>UNPACK_TREES_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>UNPACK_TREES_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cache.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"argv-array.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"string-list.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tree-walk.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_UNPACK_TREES</name></cpp:macro> <cpp:value>MAX_TRAVERSE_TREES</cpp:value></cpp:define>

<struct_decl>struct <name>cache_entry</name>;</struct_decl>
<struct_decl>struct <name>unpack_trees_options</name>;</struct_decl>
<struct_decl>struct <name>pattern_list</name>;</struct_decl>

<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>merge_fn_t</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>cache_entry</name></name> <modifier>*</modifier> <specifier>const</specifier> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>unpack_trees_options</name></name> <modifier>*</modifier></type><name>options</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<enum>enum <name>unpack_trees_error_types</name> <block>{
<decl><name>ERROR_WOULD_OVERWRITE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>ERROR_NOT_UPTODATE_FILE</name></decl>,
<decl><name>ERROR_NOT_UPTODATE_DIR</name></decl>,
<decl><name>ERROR_WOULD_LOSE_UNTRACKED_OVERWRITTEN</name></decl>,
<decl><name>ERROR_WOULD_LOSE_UNTRACKED_REMOVED</name></decl>,
<decl><name>ERROR_BIND_OVERLAP</name></decl>,
<decl><name>ERROR_SPARSE_NOT_UPTODATE_FILE</name></decl>,
<decl><name>ERROR_WOULD_LOSE_ORPHANED_OVERWRITTEN</name></decl>,
<decl><name>ERROR_WOULD_LOSE_ORPHANED_REMOVED</name></decl>,
<decl><name>ERROR_WOULD_LOSE_SUBMODULE</name></decl>,
<decl><name>NB_UNPACK_TREES_ERROR_TYPES</name></decl>
}</block>;</enum>





<function_decl><type><name>void</name></type> <name>setup_unpack_trees_porcelain</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>unpack_trees_options</name></name> <modifier>*</modifier></type><name>opts</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cmd</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>clear_unpack_trees_porcelain</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>unpack_trees_options</name></name> <modifier>*</modifier></type><name>opts</name></decl></parameter>)</parameter_list>;</function_decl>

<struct>struct <name>unpack_trees_options</name> <block>{
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>reset</name></decl>,
<decl><type ref="prev"/><name>merge</name></decl>,
<decl><type ref="prev"/><name>update</name></decl>,
<decl><type ref="prev"/><name>clone</name></decl>,
<decl><type ref="prev"/><name>index_only</name></decl>,
<decl><type ref="prev"/><name>nontrivial_merge</name></decl>,
<decl><type ref="prev"/><name>trivial_merges_only</name></decl>,
<decl><type ref="prev"/><name>verbose_update</name></decl>,
<decl><type ref="prev"/><name>aggressive</name></decl>,
<decl><type ref="prev"/><name>skip_unmerged</name></decl>,
<decl><type ref="prev"/><name>initial_checkout</name></decl>,
<decl><type ref="prev"/><name>diff_index_cached</name></decl>,
<decl><type ref="prev"/><name>debug_unpack</name></decl>,
<decl><type ref="prev"/><name>skip_sparse_checkout</name></decl>,
<decl><type ref="prev"/><name>quiet</name></decl>,
<decl><type ref="prev"/><name>exiting_early</name></decl>,
<decl><type ref="prev"/><name>show_all_errors</name></decl>,
<decl><type ref="prev"/><name>dry_run</name></decl>,
<decl><type ref="prev"/><name>keep_pattern_list</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>prefix</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>cache_bottom</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>dir_struct</name></name> <modifier>*</modifier></type><name>dir</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>pathspec</name></name> <modifier>*</modifier></type><name>pathspec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>merge_fn_t</name></type> <name>fn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>msgs</name><index>[<expr><name>NB_UNPACK_TREES_ERROR_TYPES</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>argv_array</name></name></type> <name>msgs_to_free</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name><name>struct</name> <name>string_list</name></name></type> <name><name>unpack_rejects</name><index>[<expr><name>NB_UNPACK_TREES_ERROR_TYPES</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>head_idx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>merge_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>cache_entry</name></name> <modifier>*</modifier></type><name>df_conflict_entry</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>unpack_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>index_state</name></name> <modifier>*</modifier></type><name>dst_index</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>index_state</name></name> <modifier>*</modifier></type><name>src_index</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>index_state</name></name></type> <name>result</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>pattern_list</name></name> <modifier>*</modifier></type><name>pl</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name><name>struct</name> <name>checkout_metadata</name></name></type> <name>meta</name></decl>;</decl_stmt>
}</block>;</struct>

<function_decl><type><name>int</name></type> <name>unpack_trees</name><parameter_list>(<parameter><decl><type><name>unsigned</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>tree_desc</name></name> <modifier>*</modifier></type><name>t</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>unpack_trees_options</name></name> <modifier>*</modifier></type><name>options</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>verify_uptodate</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>cache_entry</name></name> <modifier>*</modifier></type><name>ce</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>unpack_trees_options</name></name> <modifier>*</modifier></type><name>o</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>threeway_merge</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>cache_entry</name></name> <modifier>*</modifier> <specifier>const</specifier> <modifier>*</modifier></type><name>stages</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>unpack_trees_options</name></name> <modifier>*</modifier></type><name>o</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>twoway_merge</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>cache_entry</name></name> <modifier>*</modifier> <specifier>const</specifier> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>unpack_trees_options</name></name> <modifier>*</modifier></type><name>o</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>bind_merge</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>cache_entry</name></name> <modifier>*</modifier> <specifier>const</specifier> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>unpack_trees_options</name></name> <modifier>*</modifier></type><name>o</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>oneway_merge</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>cache_entry</name></name> <modifier>*</modifier> <specifier>const</specifier> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>unpack_trees_options</name></name> <modifier>*</modifier></type><name>o</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
