<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats_featurelocations\git\urlmatch.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>URL_MATCH_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>URL_MATCH_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"string-list.h"</cpp:file></cpp:include>

<struct>struct <name>url_info</name> <block>{

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>url</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>err</name></decl>;</decl_stmt>



<decl_stmt><decl><type><name>size_t</name></type> <name>url_len</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>size_t</name></type> <name>scheme_len</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>size_t</name></type> <name>user_off</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>size_t</name></type> <name>user_len</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>size_t</name></type> <name>passwd_off</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>size_t</name></type> <name>passwd_len</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>size_t</name></type> <name>host_off</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>size_t</name></type> <name>host_len</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>size_t</name></type> <name>port_off</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>size_t</name></type> <name>port_len</name></decl>;</decl_stmt> 


<decl_stmt><decl><type><name>size_t</name></type> <name>path_off</name></decl>;</decl_stmt> 


<decl_stmt><decl><type><name>size_t</name></type> <name>path_len</name></decl>;</decl_stmt> 

}</block>;</struct>

<function_decl><type><name>char</name> <modifier>*</modifier></type><name>url_normalize</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>url_info</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<struct>struct <name>urlmatch_item</name> <block>{
<decl_stmt><decl><type><name>size_t</name></type> <name>hostmatch_len</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>pathmatch_len</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name>user_matched</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>urlmatch_config</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>string_list</name></name></type> <name>vars</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>url_info</name></name></type> <name>url</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>section</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>cb</name></decl>;</decl_stmt>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>collect_fn</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>var</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cb</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>cascade_fn</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>var</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cb</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>select_fn</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>urlmatch_item</name></name> <modifier>*</modifier></type><name>found</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>urlmatch_item</name></name> <modifier>*</modifier></type><name>existing</name></decl></parameter>)</parameter_list>;</function_decl>
}</block>;</struct>

<function_decl><type><name>int</name></type> <name>urlmatch_config_entry</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>var</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cb</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
