<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats_featurelocations\git\branch.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BRANCH_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BRANCH_H</name></cpp:macro></cpp:define>

<struct_decl>struct <name>repository</name>;</struct_decl>
<struct_decl>struct <name>strbuf</name>;</struct_decl>

<enum>enum <name>branch_track</name> <block>{
<decl><name>BRANCH_TRACK_UNSPECIFIED</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>,
<decl><name>BRANCH_TRACK_NEVER</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>BRANCH_TRACK_REMOTE</name></decl>,
<decl><name>BRANCH_TRACK_ALWAYS</name></decl>,
<decl><name>BRANCH_TRACK_EXPLICIT</name></decl>,
<decl><name>BRANCH_TRACK_OVERRIDE</name></decl>
}</block>;</enum>

<decl_stmt><decl><type><specifier>extern</specifier> <name><name>enum</name> <name>branch_track</name></name></type> <name>git_branch_track</name></decl>;</decl_stmt>


























<function_decl><type><name>void</name></type> <name>create_branch</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>start_name</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>force</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>clobber_head_ok</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>reflog</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>quiet</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>branch_track</name></name></type> <name>track</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>int</name></type> <name>validate_branchname</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>strbuf</name></name> <modifier>*</modifier></type><name>ref</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>int</name></type> <name>validate_new_branchname</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>strbuf</name></name> <modifier>*</modifier></type><name>ref</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>force</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>remove_merge_branch_state</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>remove_branch_state</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>verbose</name></decl></parameter>)</parameter_list>;</function_decl>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BRANCH_CONFIG_VERBOSE</name></cpp:macro> <cpp:value>01</cpp:value></cpp:define>
<function_decl><type><name>int</name></type> <name>install_branch_config</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>flag</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>local</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>origin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>remote</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>int</name></type> <name>read_branch_desc</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>strbuf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>branch_name</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>die_if_checked_out</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>branch</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>ignore_current_worktree</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>int</name></type> <name>replace_each_worktree_head_symref</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>oldref</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>newref</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>logmsg</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
