<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats_featurelocations\git\credential.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CREDENTIAL_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CREDENTIAL_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"string-list.h"</cpp:file></cpp:include>





































































































<struct>struct <name>credential</name> <block>{









<decl_stmt><decl><type><name><name>struct</name> <name>string_list</name></name></type> <name>helpers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>approved</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,
<decl><type ref="prev"/><name>configured</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,
<decl><type ref="prev"/><name>quit</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,
<decl><type ref="prev"/><name>use_http_path</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,
<decl><type ref="prev"/><name>username_from_proto</name><range>:<expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>username</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>password</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>protocol</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>host</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>path</name></decl>;</decl_stmt>
}</block>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CREDENTIAL_INIT</name></cpp:macro> <cpp:value>{ STRING_LIST_INIT_DUP }</cpp:value></cpp:define>


<function_decl><type><name>void</name></type> <name>credential_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>credential</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>credential_clear</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>credential</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>credential_fill</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>credential</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>void</name></type> <name>credential_approve</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>credential</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>void</name></type> <name>credential_reject</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>credential</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>credential_read</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>credential</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>FILE</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>credential_write</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>credential</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>FILE</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type> <name>credential_from_url</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>credential</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>url</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>credential_match</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>credential</name></name> <modifier>*</modifier></type><name>have</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>credential</name></name> <modifier>*</modifier></type><name>want</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
