<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats_featurelocations\git\bisect.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BISECT_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BISECT_H</name></cpp:macro></cpp:define>

<struct_decl>struct <name>commit_list</name>;</struct_decl>
<struct_decl>struct <name>repository</name>;</struct_decl>








<function_decl><type><name>void</name></type> <name>find_bisection</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>commit_list</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>list</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>reaches</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>all</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>find_all</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>commit_list</name></name> <modifier>*</modifier></type><name>filter_skipped</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>commit_list</name></name> <modifier>*</modifier></type><name>list</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>commit_list</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>tried</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>show_all</name></decl></parameter>,
<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>count</name></decl></parameter>,
<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>skipped_first</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BISECT_SHOW_ALL</name></cpp:macro> <cpp:value>(1&lt;&lt;0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REV_LIST_QUIET</name></cpp:macro> <cpp:value>(1&lt;&lt;1)</cpp:value></cpp:define>

<struct>struct <name>rev_list_info</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type><name>revs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>show_timestamp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>hdr_termination</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>header_prefix</name></decl>;</decl_stmt>
}</block>;</struct>


















<enum>enum <name>bisect_error</name> <block>{
<decl><name>BISECT_OK</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>BISECT_FAILED</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>,
<decl><name>BISECT_ONLY_SKIPPED_LEFT</name> <init>= <expr><operator>-</operator><literal type="number">2</literal></expr></init></decl>,
<decl><name>BISECT_MERGE_BASE_CHECK</name> <init>= <expr><operator>-</operator><literal type="number">3</literal></expr></init></decl>,
<decl><name>BISECT_NO_TESTABLE_COMMIT</name> <init>= <expr><operator>-</operator><literal type="number">4</literal></expr></init></decl>,
<decl><name>BISECT_INTERNAL_SUCCESS_1ST_BAD_FOUND</name> <init>= <expr><operator>-</operator><literal type="number">10</literal></expr></init></decl>,
<decl><name>BISECT_INTERNAL_SUCCESS_MERGE_BASE</name> <init>= <expr><operator>-</operator><literal type="number">11</literal></expr></init></decl>
}</block>;</enum>

<function_decl><type><name><name>enum</name> <name>bisect_error</name></name></type> <name>bisect_next_all</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>prefix</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>no_checkout</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>estimate_bisect_steps</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>all</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>read_bisect_terms</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>bad</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>good</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>bisect_clean_state</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
