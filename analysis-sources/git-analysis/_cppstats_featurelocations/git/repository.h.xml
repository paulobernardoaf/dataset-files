<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats_featurelocations\git\repository.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>REPOSITORY_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REPOSITORY_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"path.h"</cpp:file></cpp:include>

<struct_decl>struct <name>config_set</name>;</struct_decl>
<struct_decl>struct <name>git_hash_algo</name>;</struct_decl>
<struct_decl>struct <name>index_state</name>;</struct_decl>
<struct_decl>struct <name>lock_file</name>;</struct_decl>
<struct_decl>struct <name>pathspec</name>;</struct_decl>
<struct_decl>struct <name>raw_object_store</name>;</struct_decl>
<struct_decl>struct <name>submodule_cache</name>;</struct_decl>

<enum>enum <name>untracked_cache_setting</name> <block>{
<decl><name>UNTRACKED_CACHE_UNSET</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>,
<decl><name>UNTRACKED_CACHE_REMOVE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>UNTRACKED_CACHE_KEEP</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>UNTRACKED_CACHE_WRITE</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>
}</block>;</enum>

<enum>enum <name>fetch_negotiation_setting</name> <block>{
<decl><name>FETCH_NEGOTIATION_UNSET</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>,
<decl><name>FETCH_NEGOTIATION_NONE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>FETCH_NEGOTIATION_DEFAULT</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>FETCH_NEGOTIATION_SKIPPING</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
}</block>;</enum>

<struct>struct <name>repo_settings</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>initialized</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>core_commit_graph</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>gc_write_commit_graph</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>fetch_write_commit_graph</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>index_version</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>untracked_cache_setting</name></name></type> <name>core_untracked_cache</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>pack_use_sparse</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>fetch_negotiation_setting</name></name></type> <name>fetch_negotiation_algorithm</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>repository</name> <block>{





<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>gitdir</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>commondir</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name><name>struct</name> <name>raw_object_store</name></name> <modifier>*</modifier></type><name>objects</name></decl>;</decl_stmt>








<decl_stmt><decl><type><name><name>struct</name> <name>parsed_object_pool</name></name> <modifier>*</modifier></type><name>parsed_objects</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name><name>struct</name> <name>ref_store</name></name> <modifier>*</modifier></type><name>refs</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name><name>struct</name> <name>path_cache</name></name></type> <name>cached_paths</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>graft_file</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>index_file</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>worktree</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>submodule_prefix</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>repo_settings</name></name></type> <name>settings</name></decl>;</decl_stmt>







<decl_stmt><decl><type><name><name>struct</name> <name>config_set</name></name> <modifier>*</modifier></type><name>config</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name><name>struct</name> <name>submodule_cache</name></name> <modifier>*</modifier></type><name>submodule_cache</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name><name>struct</name> <name>index_state</name></name> <modifier>*</modifier></type><name>index</name></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>git_hash_algo</name></name> <modifier>*</modifier></type><name>hash_algo</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>trace2_repo_id</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>commit_graph_disabled</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>unsigned</name></type> <name>different_commondir</name><range>:<expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>
}</block>;</struct>

<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>the_repository</name></decl>;</decl_stmt>





<struct>struct <name>set_gitdir_args</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>commondir</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>object_dir</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>graft_file</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>index_file</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>alternate_db</name></decl>;</decl_stmt>
}</block>;</struct>

<function_decl><type><name>void</name></type> <name>repo_set_gitdir</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>repo</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>root</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>set_gitdir_args</name></name> <modifier>*</modifier></type><name>extra_args</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>repo_set_worktree</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>repo</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>repo_set_hash_algo</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>repo</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>algo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>initialize_the_repository</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>repo_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>gitdir</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>worktree</name></decl></parameter>)</parameter_list>;</function_decl>







<struct_decl>struct <name>submodule</name>;</struct_decl>
<function_decl><type><name>int</name></type> <name>repo_submodule_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>subrepo</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>superproject</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>submodule</name></name> <modifier>*</modifier></type><name>sub</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>repo_clear</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>repo</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>int</name></type> <name>repo_read_index</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>repo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>repo_hold_locked_index</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>repo</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>lock_file</name></name> <modifier>*</modifier></type><name>lf</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>repo_read_index_preload</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>pathspec</name></name> <modifier>*</modifier></type><name>pathspec</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>refresh_flags</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>repo_read_index_unmerged</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>repo_update_index_if_able</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>lock_file</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>prepare_repo_settings</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
