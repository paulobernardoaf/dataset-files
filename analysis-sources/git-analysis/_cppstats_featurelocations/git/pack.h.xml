<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats_featurelocations\git\pack.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>PACK_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACK_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"object.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"csum-file.h"</cpp:file></cpp:include>

<struct_decl>struct <name>repository</name>;</struct_decl>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACK_SIGNATURE</name></cpp:macro> <cpp:value>0x5041434b</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACK_VERSION</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pack_version_ok</name><parameter_list>(<parameter><type><name>v</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((v) == htonl(2) || (v) == htonl(3))</cpp:value></cpp:define>
<struct>struct <name>pack_header</name> <block>{
<decl_stmt><decl><type><name>uint32_t</name></type> <name>hdr_signature</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>hdr_version</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>hdr_entries</name></decl>;</decl_stmt>
}</block>;</struct>


















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACK_IDX_SIGNATURE</name></cpp:macro> <cpp:value>0xff744f63</cpp:value></cpp:define> 

<struct>struct <name>pack_idx_option</name> <block>{
<decl_stmt><decl><type><name>unsigned</name></type> <name>flags</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WRITE_IDX_VERIFY</name></cpp:macro> <cpp:value>01</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WRITE_IDX_STRICT</name></cpp:macro> <cpp:value>02</cpp:value></cpp:define>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>version</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>off32_limit</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>int</name></type> <name>anomaly_alloc</name></decl>, <decl><type ref="prev"/><name>anomaly_nr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>anomaly</name></decl>;</decl_stmt>
}</block>;</struct>

<function_decl><type><name>void</name></type> <name>reset_pack_idx_option</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>pack_idx_option</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>




<struct>struct <name>pack_idx_header</name> <block>{
<decl_stmt><decl><type><name>uint32_t</name></type> <name>idx_signature</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>idx_version</name></decl>;</decl_stmt>
}</block>;</struct>




<struct>struct <name>pack_idx_entry</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>object_id</name></name></type> <name>oid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>crc32</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>off_t</name></type> <name>offset</name></decl>;</decl_stmt>
}</block>;</struct>


<struct_decl>struct <name>progress</name>;</struct_decl>

<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>verify_fn</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>object_type</name></name></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>long</name></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>write_idx_file</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>index_name</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>pack_idx_entry</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>objects</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nr_objects</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>pack_idx_option</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>sha1</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>check_pack_crc</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>packed_git</name></name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>pack_window</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>w_curs</name></decl></parameter>, <parameter><decl><type><name>off_t</name></type> <name>offset</name></decl></parameter>, <parameter><decl><type><name>off_t</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>nr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>verify_pack_index</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>packed_git</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>verify_pack</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>packed_git</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>verify_fn</name></type> <name>fn</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>progress</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>off_t</name></type> <name>write_pack_header</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>hashfile</name></name> <modifier>*</modifier></type><name>f</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>fixup_pack_header_footer</name><parameter_list>(<parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>off_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>index_pack_lockfile</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>)</parameter_list>;</function_decl>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_PACK_OBJECT_HEADER</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define>
<function_decl><type><name>int</name></type> <name>encode_in_pack_object_header</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>hdr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>hdr_len</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>object_type</name></name></type></decl></parameter>, <parameter><decl><type><name>uintmax_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PH_ERROR_EOF</name></cpp:macro> <cpp:value>(-1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PH_ERROR_PACK_SIGNATURE</name></cpp:macro> <cpp:value>(-2)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PH_ERROR_PROTOCOL</name></cpp:macro> <cpp:value>(-3)</cpp:value></cpp:define>
<function_decl><type><name>int</name></type> <name>read_pack_header</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>pack_header</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>hashfile</name></name> <modifier>*</modifier></type><name>create_tmp_packfile</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>pack_tmp_name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>finish_tmp_packfile</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>strbuf</name></name> <modifier>*</modifier></type><name>name_buffer</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>pack_tmp_name</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>pack_idx_entry</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>written_list</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>nr_written</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>pack_idx_option</name></name> <modifier>*</modifier></type><name>pack_idx_opts</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name></type> <name><name>sha1</name><index>[]</index></name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
