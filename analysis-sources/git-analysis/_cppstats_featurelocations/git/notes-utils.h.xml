<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats_featurelocations\git\notes-utils.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>NOTES_UTILS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NOTES_UTILS_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"notes.h"</cpp:file></cpp:include>

<struct_decl>struct <name>commit_list</name>;</struct_decl>
<struct_decl>struct <name>object_id</name>;</struct_decl>
<struct_decl>struct <name>repository</name>;</struct_decl>












<function_decl><type><name>void</name></type> <name>create_notes_commit</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>notes_tree</name></name> <modifier>*</modifier></type><name>t</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>commit_list</name></name> <modifier>*</modifier></type><name>parents</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>msg</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>msg_len</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type><name>result_oid</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>commit_notes</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>notes_tree</name></name> <modifier>*</modifier></type><name>t</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>msg</name></decl></parameter>)</parameter_list>;</function_decl>

<enum>enum <name>notes_merge_strategy</name> <block>{
<decl><name>NOTES_MERGE_RESOLVE_MANUAL</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>NOTES_MERGE_RESOLVE_OURS</name></decl>,
<decl><name>NOTES_MERGE_RESOLVE_THEIRS</name></decl>,
<decl><name>NOTES_MERGE_RESOLVE_UNION</name></decl>,
<decl><name>NOTES_MERGE_RESOLVE_CAT_SORT_UNIQ</name></decl>
}</block>;</enum>

<struct>struct <name>notes_rewrite_cfg</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>notes_tree</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>trees</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cmd</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>enabled</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>combine_notes_fn</name></type> <name>combine</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>string_list</name></name> <modifier>*</modifier></type><name>refs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>refs_from_env</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>mode_from_env</name></decl>;</decl_stmt>
}</block>;</struct>

<function_decl><type><name>int</name></type> <name>parse_notes_merge_strategy</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>v</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>notes_merge_strategy</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>struct</name> <name>notes_rewrite_cfg</name></name> <modifier>*</modifier></type><name>init_copy_notes_for_rewrite</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cmd</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>copy_note_for_rewrite</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>notes_rewrite_cfg</name></name> <modifier>*</modifier></type><name>c</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type><name>from_obj</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type><name>to_obj</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>finish_copy_notes_for_rewrite</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>notes_rewrite_cfg</name></name> <modifier>*</modifier></type><name>c</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>msg</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
