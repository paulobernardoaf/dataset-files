<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats_featurelocations\git\prio-queue.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>PRIO_QUEUE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRIO_QUEUE_H</name></cpp:macro></cpp:define>



















<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>prio_queue_compare_fn</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>one</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>two</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cb_data</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<struct>struct <name>prio_queue_entry</name> <block>{
<decl_stmt><decl><type><name>unsigned</name></type> <name>ctr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>prio_queue</name> <block>{
<decl_stmt><decl><type><name>prio_queue_compare_fn</name></type> <name>compare</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>insertion_ctr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>cb_data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>alloc</name></decl>, <decl><type ref="prev"/><name>nr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>prio_queue_entry</name></name> <modifier>*</modifier></type><name>array</name></decl>;</decl_stmt>
}</block>;</struct>




<function_decl><type><name>void</name></type> <name>prio_queue_put</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>prio_queue</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>thing</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name> <modifier>*</modifier></type><name>prio_queue_get</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>prio_queue</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name> <modifier>*</modifier></type><name>prio_queue_peek</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>prio_queue</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>clear_prio_queue</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>prio_queue</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type> <name>prio_queue_reverse</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>prio_queue</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
