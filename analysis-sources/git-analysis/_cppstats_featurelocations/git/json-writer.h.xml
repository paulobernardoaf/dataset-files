<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats_featurelocations\git\json-writer.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>JSON_WRITER_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JSON_WRITER_H</name></cpp:macro></cpp:define>










































<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"strbuf.h"</cpp:file></cpp:include>

<struct>struct <name>json_writer</name>
<block>{



<decl_stmt><decl><type><name><name>struct</name> <name>strbuf</name></name></type> <name>json</name></decl>;</decl_stmt>








<decl_stmt><decl><type><name><name>struct</name> <name>strbuf</name></name></type> <name>open_stack</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>need_comma</name><range>:<expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>pretty</name><range>:<expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>
}</block>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JSON_WRITER_INIT</name></cpp:macro> <cpp:value>{ STRBUF_INIT, STRBUF_INIT, 0, 0 }</cpp:value></cpp:define>

<function_decl><type><name>void</name></type> <name>jw_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>jw_release</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>jw_object_begin</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>pretty</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>jw_array_begin</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>pretty</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>jw_object_string</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>jw_object_intmax</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>intmax_t</name></type> <name>value</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>jw_object_double</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>precision</name></decl></parameter>,
<parameter><decl><type><name>double</name></type> <name>value</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>jw_object_true</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>jw_object_false</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>jw_object_bool</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>value</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>jw_object_null</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>jw_object_sub_jw</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>value</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>jw_object_inline_begin_object</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>jw_object_inline_begin_array</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>jw_array_string</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>jw_array_intmax</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>, <parameter><decl><type><name>intmax_t</name></type> <name>value</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>jw_array_double</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>precision</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>value</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>jw_array_true</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>jw_array_false</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>jw_array_bool</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>value</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>jw_array_null</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>jw_array_sub_jw</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>value</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>jw_array_argc_argv</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>argv</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>jw_array_argv</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>argv</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>jw_array_inline_begin_object</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>jw_array_inline_begin_array</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>jw_is_terminated</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>jw_end</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>json_writer</name></name> <modifier>*</modifier></type><name>jw</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
