FILE,Start,FUNCTION_SIGNATURE,ABSmell,LocationSmell,ConstantsSmell,NestingSmell,LOC,LOAC,LOFC,NOFL,NOFC_Dup,NOFC_NonDup,NONEST,NONEG,Smelly
git\sha1dc\sha1.c,1303,"static void sha1_recompression_step(uint32_t step, uint32_t ihvin[5], uint32_t ihvout[5], const uint32_t me2[80], const uint32_t state[5])",79.43137,78.43137,1.0,0.0,408,400,400,80,80,80,0,0,false
git\sha1dc\sha1.c,385,"void sha1_compression_states(uint32_t ihv[5], const uint32_t m[16], uint32_t W[80], uint32_t states[80][5])",59.895706,58.895706,1.0,0.0,326,240,240,80,80,80,0,0,false
git\thread-utils.c,21,int online_cpus(void),12.9,7.4,2.75,2.75,40,37,257,8,22,10,22,6,true
git\http.c,857,static CURL * get_curl_handle(void),10.710526,9.5,1.2105263,0.0,200,100,115,19,23,6,0,3,false
git\compat\nedmalloc\nedmalloc.c,202,static FORCEINLINE unsigned int size2binidx(size_t _size) THROWSPEC,8.375,4.375,3.0,1.0,40,35,235,5,15,3,5,6,true
git\builtin\gc.c,239,static uint64_t total_ram(void),8.059259,4.259259,3.2,0.6,27,23,126,5,16,6,3,4,true
git\compat\poll\poll.c,304,"int poll(struct pollfd * pfd, nfds_t nfd, int timeout)",7.32,4.92,1.4,1.0,250,246,431,5,7,4,5,4,true
git\http.c,1472,void run_active_slot(struct active_request_slot * slot),6.01,3.76,1.5,0.75,50,47,75,4,6,3,3,2,true
git\packfile.c,452,static unsigned int get_max_fd_limit(void),4.7045455,3.4545455,1.25,0.0,22,19,23,4,5,4,0,1,false
git\http.c,1109,"void http_init(struct remote * remote, const char * url, int proactive_auth)",3.7692308,2.7692308,1.0,0.0,104,48,48,6,6,3,0,1,false
git\sha1-file.c,1029,"int git_open_cloexec(const char * name, int flags)",3.4761906,0.47619048,3.0,0.0,21,10,30,1,3,3,0,0,false
git\setup.c,1309,int daemonize(void),3.2391305,1.7391304,1.5,0.0,23,20,38,2,3,2,0,1,false
git\daemon.c,676,static void lookup_hostname(struct hostinfo * hi),3.2333333,1.7333333,1.5,0.0,45,39,58,2,3,2,0,3,false
git\http.c,525,static void set_proxyauth_name_password(CURL * result),3.1666665,1.6666666,1.5,0.0,18,15,26,2,3,2,0,1,false
git\thread-utils.c,68,int init_recursive_mutex(pthread_mutex_t * m),3.147059,1.6470588,1.5,0.0,17,14,18,2,3,2,0,3,false
git\ident.c,98,"static int canonical_name(const char * host, struct strbuf * out)",3.0652175,1.5652174,1.5,0.0,23,18,26,2,3,2,0,3,false
git\compat\poll\poll.c,250,"static int compute_revents(int fd, int sought, fd_set * rfds, fd_set * wfds, fd_set * efds)",3.0555556,0.5555556,2.5,0.0,36,10,27,2,5,3,0,1,false
git\run-command.c,524,static void atfork_parent(struct atfork_state * as),3.0,1.5,1.5,0.0,12,9,16,2,3,2,0,1,false
git\run-command.c,1289,int finish_async(struct async * async),2.9545455,1.4545455,1.5,0.0,11,8,15,2,3,2,0,1,false
git\http-push.c,1677,static void run_request_queue(void),2.9411764,1.9411765,1.0,0.0,17,11,11,3,3,1,0,0,false
git\exec-cmd.c,170,"static int git_get_exec_path(struct strbuf * buf, const char * argv0)",2.92,1.92,1.0,0.0,25,12,12,4,4,4,0,0,false
git\http.c,293,"static int http_options(const char * var, const char * value, void * cb)",2.8938355,1.6438357,1.25,0.0,146,30,40,8,10,4,0,3,false
git\grep.c,658,"static void compile_regexp(struct grep_pat * p, struct grep_opt * opt)",2.8095238,1.4761904,1.3333334,0.0,63,31,35,3,4,2,0,1,false
git\daemon.c,966,"static const char * ip2str(int family, struct sockaddr * sin, socklen_t len)",2.7619047,1.4285715,1.3333334,0.0,21,10,14,3,4,2,0,2,false
git\compat\strtoimax.c,3,"intmax_t gitstrtoimax(const char * nptr, char * * endptr, int base)",2.75,1.25,1.5,0.0,8,5,9,2,3,2,0,1,false
git\compat\strtoumax.c,3,"uintmax_t gitstrtoumax(const char * nptr, char * * endptr, int base)",2.75,1.25,1.5,0.0,8,5,9,2,3,2,0,1,false
git\ident.c,492,static int ident_is_sufficient(int user_ident_explicitly_given),2.75,1.25,1.5,0.0,8,5,9,2,3,2,0,3,false
git\run-command.c,1302,int async_with_fork(void),2.75,1.25,1.5,0.0,8,5,9,2,3,2,0,1,false
git\run-command.c,667,int start_command(struct child_process * cmd),2.7345679,1.2345679,1.5,0.0,243,150,197,2,3,2,0,3,false
git\run-command.c,507,static void atfork_prepare(struct atfork_state * as),2.7,1.2,1.5,0.0,15,9,16,2,3,2,0,1,false
git\http.c,486,static void init_curl_http_auth(CURL * result),2.642857,1.1428572,1.5,0.0,21,12,22,2,3,2,0,1,false
git\read-cache.c,332,"static int is_racy_stat(const struct index_state * istate, const struct stat_data * sd)",2.5769231,1.0769231,1.5,0.0,13,7,11,2,3,2,0,1,false
git\http.c,1300,struct active_request_slot * get_active_slot(void),2.557143,1.3571429,1.2,0.0,70,19,23,5,6,5,0,1,false
git\http.c,459,static int curl_empty_auth_enabled(void),2.5,1.0,1.5,0.0,12,6,12,2,3,2,0,3,false
git\run-command.c,1174,int start_async(struct async * async),2.4896908,0.9896907,1.5,0.0,97,48,72,2,3,2,0,1,false
git\imap-send.c,1535,"int cmd_main(int argc, const char * * argv)",2.4848485,0.8181819,1.6666666,0.0,55,15,28,3,5,3,0,3,false
git\compat\mingw.c,2296,int mingw_raise(int sig),2.4142857,0.9142857,1.5,0.0,35,16,21,2,3,2,0,1,false
git\compat\nedmalloc\nedmalloc.c,375,"static void * threadcache_malloc(nedpool * p, threadcache * tc, size_t * size) THROWSPEC",2.402439,1.402439,1.0,0.0,82,23,23,5,5,3,0,1,false
git\imap-send.c,958,"static struct imap_store * imap_open_store(struct imap_server_conf * srvc, char * folder)",2.3865247,1.0531914,1.3333334,0.0,188,66,89,3,4,3,0,4,false
git\compat\mingw.c,2770,"int wmain(int argc, const wchar_t * * wargv)",2.2520325,0.58536583,1.0,0.6666667,41,8,14,3,3,3,2,0,false
git\grep.c,409,"static void compile_pcre1_regexp(struct grep_pat * p, const struct grep_opt * opt) #1",2.25,0.25,2.0,0.0,28,7,14,1,2,2,0,1,false
git\compat\nedmalloc\nedmalloc.c,473,"static void threadcache_free(nedpool * p, threadcache * tc, int mymspace, void * mem, size_t size) THROWSPEC",2.169231,1.1692308,1.0,0.0,65,19,19,4,4,2,0,0,false
git\entry.c,405,"static void mark_colliding_entries(const struct checkout * state, struct cache_entry * ce, struct stat * st)",2.142857,0.14285715,2.0,0.0,21,3,6,1,2,2,0,0,false
git\http.c,228,static void finish_active_slot(struct active_request_slot * slot),2.0714285,0.5714286,1.5,0.0,21,6,10,2,3,2,0,1,false
git\run-command.c,266,"static const char * * prepare_shell_cmd(struct argv_array * out, const char * * argv)",2.0263157,0.5263158,1.5,0.0,19,5,9,2,3,2,0,3,false
git\run-command.c,221,"int sane_execvp(const char * file, char * const argv[])",2.0,1.0,1.0,0.0,20,10,10,2,2,1,0,2,false
git\grep.c,218,"static void grep_set_pattern_type_option(enum grep_pattern_type pattern_type, struct grep_opt * opt)",1.9166666,0.41666666,1.5,0.0,24,5,9,2,3,2,0,1,false
git\imap-send.c,1411,"static CURL * setup_curl(struct imap_server_conf * srvc, struct credential * cred)",1.8829787,0.38297874,1.5,0.0,47,9,17,2,3,2,0,1,false
git\sha1dc\sha1.c,1821,"void SHA1DCUpdate(SHA1_CTX * ctx, const char * buf, size_t len)",1.8529412,0.3529412,1.5,0.0,34,6,11,2,3,2,0,1,false
git\imap-send.c,276,"static int ssl_socket_connect(struct imap_socket * sock, int use_tls_only, int verify) #2",1.8172044,0.48387095,1.3333334,0.0,62,10,14,3,4,3,0,1,false
git\gettext.c,211,int is_utf8_locale(void),1.7777778,0.7777778,1.0,0.0,18,14,14,1,1,1,0,0,false
git\http.c,1387,int start_active_slot(struct active_request_slot * slot),1.7647059,0.7647059,1.0,0.0,17,13,13,1,1,1,0,0,false
git\compat\nedmalloc\nedmalloc.c,286,"static NOINLINE void RemoveCacheEntries(nedpool * p, threadcache * tc, unsigned int age) THROWSPEC",1.75,0.75,1.0,0.0,36,9,9,3,3,1,0,0,false
git\read-cache.c,151,"int match_stat_data(const struct stat_data * sd, struct stat * st)",1.7333333,0.73333335,1.0,0.0,30,11,11,2,2,2,0,0,false
git\imap-send.c,1473,"static int curl_append_msgs_to_imap(struct imap_server_conf * server, struct strbuf * all_msgs, int total)",1.7083334,0.20833333,1.5,0.0,48,5,9,2,3,2,0,1,false
git\http.c,1636,static int handle_curl_result(struct slot_results * results),1.7027028,0.7027027,1.0,0.0,37,13,13,2,2,2,0,0,false
git\http-walker.c,484,"static int fetch_object(struct walker * walker, unsigned char * hash)",1.7,0.2,1.5,0.0,60,6,10,2,3,2,0,1,false
git\run-command.c,122,int is_executable(const char * name),1.6800001,0.68,1.0,0.0,25,17,17,1,1,1,0,0,false
git\http.c,545,static void init_curl_proxy_auth(CURL * result),1.6785715,0.6785714,1.0,0.0,28,19,19,1,1,1,0,0,false
git\compat\nedmalloc\nedmalloc.c,134,size_t nedblksize(void * mem) THROWSPEC,1.6666667,0.6666667,1.0,0.0,15,10,10,1,1,1,0,1,false
git\imap-send.c,195,"static void socket_perror(const char * func, struct imap_socket * sock, int ret)",1.625,0.625,1.0,0.0,24,15,15,1,1,1,0,1,false
git\refs\files-backend.c,1788,"static int create_ref_symlink(struct ref_lock * lock, const char * target)",1.6153846,0.61538464,1.0,0.0,13,8,8,1,1,1,0,1,false
git\grep.c,173,"void grep_init(struct grep_opt * opt, struct repository * repo, const char * prefix)",1.5625,0.5625,1.0,0.0,32,9,9,2,2,2,0,0,false
git\imap-send.c,392,static void socket_shutdown(struct imap_socket * sock),1.5454545,0.54545456,1.0,0.0,11,6,6,1,1,1,0,1,false
git\compat\nedmalloc\nedmalloc.c,814,"void * nedprealloc(nedpool * p, void * mem, size_t size) THROWSPEC",1.5357143,0.53571427,1.0,0.0,28,15,15,1,1,1,0,0,false
git\grep.c,211,void grep_destroy(void),1.5,0.5,1.0,0.0,6,3,3,1,1,1,0,0,false
git\http.c,256,static void xmulti_remove_handle(struct active_request_slot * slot),1.5,0.5,1.0,0.0,6,3,3,1,1,1,0,0,false
git\repository.c,89,"void repo_set_hash_algo(struct repository * repo, int hash_algo)",1.5,0.5,1.0,0.0,8,4,4,1,1,1,0,1,false
git\gettext.c,49,const char * get_preferred_languages(void),1.4666667,0.46666667,1.0,0.0,15,7,7,1,1,1,0,1,false
git\grep.c,466,static void free_pcre1_regexp(struct grep_pat * p) #1,1.4545455,0.45454547,1.0,0.0,11,5,5,1,1,1,0,0,false
git\compat\nedmalloc\nedmalloc.c,843,"void nedpfree(nedpool * p, void * mem) THROWSPEC",1.4375,0.4375,1.0,0.0,16,7,7,1,1,1,0,0,false
git\pager.c,154,int term_columns(void),1.35,0.35,1.0,0.0,20,7,7,1,1,1,0,0,false
git\compat\nedmalloc\nedmalloc.c,793,"void * nedpcalloc(nedpool * p, size_t no, size_t size) THROWSPEC",1.3333334,0.33333334,1.0,0.0,21,7,7,1,1,1,0,0,false
git\compat\nedmalloc\nedmalloc.c,774,"void * nedpmalloc(nedpool * p, size_t size) THROWSPEC",1.3157895,0.31578946,1.0,0.0,19,6,6,1,1,1,0,0,false
git\daemon.c,808,"static int addrcmp(const struct sockaddr_storage * s1, const struct sockaddr_storage * s2)",1.3157895,0.31578946,1.0,0.0,19,6,6,1,1,1,0,1,false
git\abspath.c,52,"static void get_root_part(struct strbuf * resolved, struct strbuf * remaining)",1.3,0.3,1.0,0.0,10,3,3,1,1,1,0,0,false
git\cache-tree.c,453,"static void write_one(struct strbuf * buffer, struct cache_tree * it, const char * path, int pathlen)",1.3,0.3,1.0,0.0,30,9,9,1,1,1,0,0,false
git\imap-send.c,356,"static int socket_read(struct imap_socket * sock, char * buf, int len)",1.2941177,0.29411766,1.0,0.0,17,5,5,1,1,1,0,1,false
git\imap-send.c,374,"static int socket_write(struct imap_socket * sock, const char * buf, int len)",1.2941177,0.29411766,1.0,0.0,17,5,5,1,1,1,0,1,false
git\compat\inet_ntop.c,170,"const char * inet_ntop(int af, const void * src, char * dst, size_t size)",1.2666667,0.26666668,1.0,0.0,15,4,4,1,1,1,0,1,false
git\compat\inet_pton.c,200,"int inet_pton(int af, const char * src, void * dst)",1.2666667,0.26666668,1.0,0.0,15,4,4,1,1,1,0,1,false
git\http.c,1237,void http_cleanup(void),1.244898,0.24489796,1.0,0.0,49,6,6,2,2,2,0,1,false
git\run-command.c,1311,const char * find_hook(const char * name),1.2413793,0.2413793,1.0,0.0,29,7,7,1,1,1,0,0,false
git\daemon.c,897,"static void handle(int incoming, struct sockaddr * addr, socklen_t addrlen)",1.2368422,0.23684211,1.0,0.0,38,9,9,1,1,1,0,1,false
git\builtin\init-db.c,181,void initialize_repository_version(int hash_algo),1.2352941,0.23529412,1.0,0.0,17,4,4,1,1,1,0,1,false
git\diff-no-index.c,44,"static int get_mode(const char * path, int * mode)",1.2352941,0.23529412,1.0,0.0,17,4,4,1,1,1,0,0,false
git\http-walker.c,151,"static void prefetch(struct walker * walker, unsigned char * sha1)",1.2352941,0.23529412,1.0,0.0,17,4,4,1,1,1,0,0,false
git\http-push.c,196,"static void curl_setup_http(CURL * curl, const char * url, const char * custom_req, struct buffer * buffer, curl_write_callback write_fn)",1.2222222,0.22222222,1.0,0.0,18,4,4,1,1,1,0,1,false
git\utf8.c,540,"char * reencode_string_len(const char * in, size_t insz, const char * out_encoding, const char * in_encoding, size_t * outsz)",1.2222222,0.22222222,1.0,0.0,45,10,10,1,1,1,0,0,false
git\trace.c,80,"static int prepare_trace_line(const char * file, int line, struct trace_key * key, struct strbuf * buf)",1.2173913,0.2173913,1.0,0.0,23,5,5,1,1,1,0,0,false
git\compat\nedmalloc\nedmalloc.c,730,"static FORCEINLINE void GetThreadCache(nedpool * * p, threadcache * * tc, int * mymspace, size_t * size) THROWSPEC",1.2093023,0.20930232,1.0,0.0,43,9,9,1,1,1,0,0,false
git\http.c,1533,static void release_active_slot(struct active_request_slot * slot),1.2,0.2,1.0,0.0,15,3,3,1,1,1,0,0,false
git\abspath.c,237,"char * prefix_filename(const char * pfx, const char * arg)",1.1875,0.1875,1.0,0.0,16,3,3,1,1,1,0,0,false
git\http-push.c,632,static void add_fetch_request(struct object * obj),1.1818182,0.18181819,1.0,0.0,22,4,4,1,1,1,0,0,false
git\ident.c,36,static struct passwd * xgetpwuid_self(int * is_bogus),1.1764706,0.1764706,1.0,0.0,17,3,3,1,1,1,0,1,false
git\compat\nedmalloc\nedmalloc.c,346,static NOINLINE threadcache * AllocCache(nedpool * p) THROWSPEC,1.1428572,0.14285715,1.0,0.0,28,4,4,1,1,1,0,0,false
git\compat\unsetenv.c,3,void gitunsetenv(const char * name),1.1428572,0.14285715,1.0,0.0,21,3,3,1,1,1,0,1,false
git\compat\winansi.c,608,void winansi_init(void),1.1428572,0.14285715,1.0,0.0,35,5,5,1,1,1,0,0,false
git\http-push.c,663,"static int add_send_request(struct object * obj, struct remote_lock * lock)",1.137931,0.13793103,1.0,0.0,29,4,4,1,1,1,0,0,false
git\http-walker.c,347,"static void fetch_alternates(struct walker * walker, const char * base)",1.1351352,0.13513513,1.0,0.0,37,5,5,1,1,1,0,0,false
git\compat\nedmalloc\nedmalloc.c,683,void neddisablethreadcache(nedpool * p) THROWSPEC,1.1333333,0.13333334,1.0,0.0,30,4,4,1,1,1,0,0,false
git\wrapper.c,35,"static void * do_xmalloc(size_t size, int gentle)",1.1304348,0.13043478,1.0,0.0,23,3,3,1,1,1,0,0,false
git\cache-tree.c,498,"static struct cache_tree * read_one(const char * * buffer, unsigned long * size_p)",1.1285714,0.12857144,1.0,0.0,70,9,9,1,1,1,0,0,false
git\http-walker.c,602,struct walker * get_http_walker(const char * url),1.125,0.125,1.0,0.0,24,3,3,1,1,1,0,0,false
git\t\helper\test-chmtime.c,69,"int cmd__chmtime(int argc, const char * * argv)",1.1230769,0.12307692,1.0,0.0,65,8,8,1,1,1,0,0,false
git\cache-tree.c,238,"static int update_one(struct cache_tree * it, struct cache_entry * * cache, int entries, const char * base, int baselen, int * skip_count, int flags)",1.1224489,0.12244898,1.0,0.0,147,9,9,2,2,1,0,0,false
git\trace2\tr2_dst.c,311,int tr2_dst_get_trace_fd(struct tr2_dst * dst),1.117647,0.11764706,1.0,0.0,34,4,4,1,1,1,0,1,false
git\daemon.c,991,"static int setup_named_sock(char * listen_addr, int listen_port, struct socketlist * socklist) #1",1.1076924,0.10769231,1.0,0.0,65,7,7,1,1,1,0,0,false
git\cache-tree.c,102,"static int do_invalidate_path(struct cache_tree * it, const char * path)",1.1,0.1,1.0,0.0,30,3,3,1,1,1,0,0,false
git\compat\mingw.c,1729,"static int try_shell_exec(const char * cmd, char * const * argv)",1.0857143,0.08571429,1.0,0.0,35,3,3,1,1,1,0,1,false
git\path.c,728,"char * expand_user_path(const char * path, int real_home)",1.0857143,0.08571429,1.0,0.0,35,3,3,1,1,1,0,0,false
git\read-cache.c,960,"int verify_path(const char * path, unsigned mode)",1.0833334,0.083333336,1.0,0.0,48,4,4,1,1,1,0,0,false
git\remote-curl.c,49,"static int set_option(const char * name, const char * value)",1.0816326,0.08163265,1.0,0.0,147,12,12,1,1,1,0,0,false
git\daemon.c,1146,static int service_loop(struct socketlist * socklist),1.0638298,0.06382979,1.0,0.0,47,3,3,1,1,1,0,1,false
git\unpack-trees.c,2159,"int threeway_merge(const struct cache_entry * const * stages, struct unpack_trees_options * o)",1.0619469,0.061946902,1.0,0.0,113,7,7,1,1,1,0,0,false
git\http-push.c,1696,"int cmd_main(int argc, const char * * argv)",1.05,0.05,1.0,0.0,240,6,6,2,2,1,0,1,false
git\remote-curl.c,781,"static int post_rpc(struct rpc_state * rpc, int flush_received)",1.0338984,0.033898305,1.0,0.0,118,4,4,1,1,1,0,1,false
git\wildmatch.c,55,"static int dowild(const uchar * p, const uchar * text, unsigned int flags)",1.021978,0.021978023,1.0,0.0,182,4,4,1,1,1,0,0,false
