<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats\git\sha1dc\ubc_check.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>

<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>SHA1DC_NO_STANDARD_INCLUDES</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DVMASKSIZE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <block>{ <decl_stmt><decl><type><name>int</name></type> <name>dvType</name></decl>;</decl_stmt> <decl_stmt><decl><type><name>int</name></type> <name>dvK</name></decl>;</decl_stmt> <decl_stmt><decl><type><name>int</name></type> <name>dvB</name></decl>;</decl_stmt> <decl_stmt><decl><type><name>int</name></type> <name>testt</name></decl>;</decl_stmt> <decl_stmt><decl><type><name>int</name></type> <name>maski</name></decl>;</decl_stmt> <decl_stmt><decl><type><name>int</name></type> <name>maskb</name></decl>;</decl_stmt> <decl_stmt><decl><type><name>uint32_t</name></type> <name><name>dm</name><index>[<expr><literal type="number">80</literal></expr>]</index></name></decl>;</decl_stmt> }</block></struct></type> <name>dv_info_t</name>;</typedef>

<decl_stmt><decl><type><specifier>extern</specifier> <name>dv_info_t</name></type> <name><name>sha1_dvs</name><index>[]</index></name></decl>;</decl_stmt>

<function_decl><type><name>void</name></type> <name>ubc_check</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint32_t</name></type> <name><name>W</name><index>[<expr><literal type="number">80</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name><name>dvmask</name><index>[<expr><name>DVMASKSIZE</name></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DOSTORESTATE58</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DOSTORESTATE65</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CHECK_DVMASK</name><parameter_list>(<parameter><type><name>_DVMASK</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(0 != _DVMASK[0])</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>

</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>SHA1DC_CUSTOM_TRAILING_INCLUDE_UBC_CHECK_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> SHA1DC_CUSTOM_TRAILING_INCLUDE_UBC_CHECK_H</cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
