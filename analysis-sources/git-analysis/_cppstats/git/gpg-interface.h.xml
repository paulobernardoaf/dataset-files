<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats\git\gpg-interface.h"><struct_decl>struct <name>strbuf</name>;</struct_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GPG_VERIFY_VERBOSE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GPG_VERIFY_RAW</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GPG_VERIFY_OMIT_STATUS</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<enum>enum <name>signature_trust_level</name> <block>{

<decl><name>TRUST_UNDEFINED</name></decl>,

<decl><name>TRUST_NEVER</name></decl>,

<decl><name>TRUST_MARGINAL</name></decl>,

<decl><name>TRUST_FULLY</name></decl>,

<decl><name>TRUST_ULTIMATE</name></decl>,

}</block>;</enum>

<struct>struct <name>signature_check</name> <block>{

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>payload</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>gpg_output</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>gpg_status</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name>result</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>signer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>key</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>fingerprint</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>primary_key_fingerprint</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>signature_trust_level</name></name></type> <name>trust_level</name></decl>;</decl_stmt>

}</block>;</struct>

<function_decl><type><name>void</name></type> <name>signature_check_clear</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>signature_check</name></name> <modifier>*</modifier></type><name>sigc</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>size_t</name></type> <name>parse_signature</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>sign_buffer</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>strbuf</name></name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>strbuf</name></name> <modifier>*</modifier></type><name>signature</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>signing_key</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>git_gpg_config</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>set_signing_key</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>get_signing_key</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>check_signature</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>payload</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>plen</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>signature</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>slen</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>signature_check</name></name> <modifier>*</modifier></type><name>sigc</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>print_signature_buffer</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>signature_check</name></name> <modifier>*</modifier></type><name>sigc</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
