<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats\git\compat\hstrerror.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;netdb.h&gt;</cpp:file></cpp:include>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>githstrerror</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>err</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>static</specifier> <name>char</name></type> <name><name>buffer</name><index>[<expr><literal type="number">48</literal></expr>]</index></name></decl>;</decl_stmt>

<switch>switch <condition>(<expr><name>err</name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>HOST_NOT_FOUND</name></expr>:</case>

<return>return <expr><literal type="string">"Authoritative answer: host not found"</literal></expr>;</return>

<case>case <expr><name>NO_DATA</name></expr>:</case>

<return>return <expr><literal type="string">"Valid name, no data record of requested type"</literal></expr>;</return>

<case>case <expr><name>NO_RECOVERY</name></expr>:</case>

<return>return <expr><literal type="string">"Non recoverable errors, FORMERR, REFUSED, NOTIMP"</literal></expr>;</return>

<case>case <expr><name>TRY_AGAIN</name></expr>:</case>

<return>return <expr><literal type="string">"Non-authoritative \"host not found\", or SERVERFAIL"</literal></expr>;</return>

</block_content>}</block></switch>

<expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name>buffer</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"Name resolution error %d"</literal></expr></argument>, <argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>buffer</name></expr>;</return>

</block_content>}</block></function>

</unit>
