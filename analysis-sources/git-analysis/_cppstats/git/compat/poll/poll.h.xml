<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats\git\compat\poll\poll.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32_WINNT</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name>_WIN32_WINNT</name> <operator>&gt;=</operator> <literal type="number">0x600</literal></expr></cpp:if>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>POLLIN</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>POLLPRI</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>POLLOUT</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>POLLERR</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>POLLHUP</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>POLLNVAL</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>POLLRDNORM</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>POLLRDBAND</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>POLLWRNORM</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>POLLWRBAND</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pollfd</name></cpp:macro> <cpp:value>compat_pollfd</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>POLLIN</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>POLLPRI</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>POLLOUT</name></cpp:macro> <cpp:value>0x0004</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>POLLERR</name></cpp:macro> <cpp:value>0x0008</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>POLLHUP</name></cpp:macro> <cpp:value>0x0010</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>POLLNVAL</name></cpp:macro> <cpp:value>0x0020</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>POLLRDNORM</name></cpp:macro> <cpp:value>0x0040</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>POLLRDBAND</name></cpp:macro> <cpp:value>0x0080</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>POLLWRNORM</name></cpp:macro> <cpp:value>0x0100</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>POLLWRBAND</name></cpp:macro> <cpp:value>0x0200</cpp:value></cpp:define>

<struct>struct <name>pollfd</name>

<block>{

<decl_stmt><decl><type><name>int</name></type> <name>fd</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>short</name></type> <name>events</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>short</name></type> <name>revents</name></decl>;</decl_stmt> 

}</block>;</struct>

<typedef>typedef <type><name>unsigned</name> <name>long</name></type> <name>nfds_t</name>;</typedef>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>poll</name> <parameter_list>(<parameter><decl><type><name><name>struct</name> <name>pollfd</name></name> <modifier>*</modifier></type><name>pfd</name></decl></parameter>, <parameter><decl><type><name>nfds_t</name></type> <name>nfd</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>timeout</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name> <argument_list>(<argument><expr><name>_POSIX_C_SOURCE</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>defined</name> <argument_list>(<argument><expr><name>_XOPEN_SOURCE</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INFTIM</name></cpp:macro> <cpp:value>(-1)</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
