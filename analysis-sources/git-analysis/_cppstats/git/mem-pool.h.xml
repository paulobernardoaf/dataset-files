<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats\git\mem-pool.h"><struct>struct <name>mp_block</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>mp_block</name></name> <modifier>*</modifier></type><name>next_block</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>next_free</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>end</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uintmax_t</name></type> <name><name>space</name><index>[<expr><name>FLEX_ARRAY</name></expr>]</index></name></decl>;</decl_stmt> 

}</block>;</struct>

<struct>struct <name>mem_pool</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>mp_block</name></name> <modifier>*</modifier></type><name>mp_block</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>block_alloc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>pool_alloc</name></decl>;</decl_stmt>

}</block>;</struct>

<function_decl><type><name>void</name></type> <name>mem_pool_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>mem_pool</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>mem_pool</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>initial_size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>mem_pool_discard</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>mem_pool</name></name> <modifier>*</modifier></type><name>mem_pool</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>invalidate_memory</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name> <modifier>*</modifier></type><name>mem_pool_alloc</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>mem_pool</name></name> <modifier>*</modifier></type><name>pool</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name> <modifier>*</modifier></type><name>mem_pool_calloc</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>mem_pool</name></name> <modifier>*</modifier></type><name>pool</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>count</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>mem_pool_combine</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>mem_pool</name></name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>mem_pool</name></name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>mem_pool_contains</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>mem_pool</name></name> <modifier>*</modifier></type><name>mem_pool</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>mem</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
