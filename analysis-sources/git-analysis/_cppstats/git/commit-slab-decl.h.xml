<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats\git\commit-slab-decl.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>COMMIT_SLAB_SIZE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMMIT_SLAB_SIZE</name></cpp:macro> <cpp:value>(512*1024-32)</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>declare_commit_slab</name><parameter_list>(<parameter><type><name>slabname</name></type></parameter>, <parameter><type><name>elemtype</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>struct slabname { unsigned slab_size; unsigned stride; unsigned slab_count; elemtype **slab; }</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMMIT_SLAB_INIT</name><parameter_list>(<parameter><type><name>stride</name></type></parameter>, <parameter><type><name>var</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ COMMIT_SLAB_SIZE / sizeof(**((var).slab)) / (stride), (stride), 0, NULL }</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>declare_commit_slab_prototypes</name><parameter_list>(<parameter><type><name>slabname</name></type></parameter>, <parameter><type><name>elemtype</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void init_ ##slabname##_with_stride(struct slabname *s, unsigned stride); void init_ ##slabname(struct slabname *s); void clear_ ##slabname(struct slabname *s); elemtype *slabname##_at_peek(struct slabname *s, const struct commit *c, int add_if_missing); elemtype *slabname##_at(struct slabname *s, const struct commit *c); elemtype *slabname##_peek(struct slabname *s, const struct commit *c)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>define_shared_commit_slab</name><parameter_list>(<parameter><type><name>slabname</name></type></parameter>, <parameter><type><name>elemtype</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>declare_commit_slab(slabname, elemtype); declare_commit_slab_prototypes(slabname, elemtype)</cpp:value></cpp:define>

</unit>
