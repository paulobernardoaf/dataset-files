<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats\git\refs\ref-cache.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cache.h"</cpp:file></cpp:include>

<struct_decl>struct <name>ref_dir</name>;</struct_decl>

<struct_decl>struct <name>ref_store</name>;</struct_decl>

<typedef>typedef <function_decl><type><name>void</name></type> <name>fill_ref_dir_fn</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ref_store</name></name> <modifier>*</modifier></type><name>ref_store</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>ref_dir</name></name> <modifier>*</modifier></type><name>dir</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dirname</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<struct>struct <name>ref_cache</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>ref_entry</name></name> <modifier>*</modifier></type><name>root</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>ref_store</name></name> <modifier>*</modifier></type><name>ref_store</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>fill_ref_dir_fn</name> <modifier>*</modifier></type><name>fill_ref_dir</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>ref_value</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>object_id</name></name></type> <name>oid</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>ref_dir</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>nr</name></decl>, <decl><type ref="prev"/><name>alloc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>sorted</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>ref_cache</name></name> <modifier>*</modifier></type><name>cache</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>ref_entry</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>entries</name></decl>;</decl_stmt>

}</block>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REF_DIR</name></cpp:macro> <cpp:value>0x10</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REF_INCOMPLETE</name></cpp:macro> <cpp:value>0x20</cpp:value></cpp:define>

<struct>struct <name>ref_entry</name> <block>{

<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name>flag</name></decl>;</decl_stmt> 

<union>union <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>ref_value</name></name></type> <name>value</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name><name>struct</name> <name>ref_dir</name></name></type> <name>subdir</name></decl>;</decl_stmt> 

}</block> <decl><name>u</name></decl>;</union>

<decl_stmt><decl><type><name>char</name></type> <name><name>name</name><index>[<expr><name>FLEX_ARRAY</name></expr>]</index></name></decl>;</decl_stmt>

}</block>;</struct>

<function_decl><type><name>int</name></type> <name>search_ref_dir</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ref_dir</name></name> <modifier>*</modifier></type><name>dir</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>refname</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>ref_dir</name></name> <modifier>*</modifier></type><name>get_ref_dir</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ref_entry</name></name> <modifier>*</modifier></type><name>entry</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>ref_entry</name></name> <modifier>*</modifier></type><name>create_dir_entry</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ref_cache</name></name> <modifier>*</modifier></type><name>cache</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dirname</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>incomplete</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>ref_entry</name></name> <modifier>*</modifier></type><name>create_ref_entry</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>refname</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type><name>oid</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flag</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>ref_cache</name></name> <modifier>*</modifier></type><name>create_ref_cache</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ref_store</name></name> <modifier>*</modifier></type><name>refs</name></decl></parameter>,

<parameter><decl><type><name>fill_ref_dir_fn</name> <modifier>*</modifier></type><name>fill_ref_dir</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>free_ref_cache</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ref_cache</name></name> <modifier>*</modifier></type><name>cache</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>add_entry_to_dir</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ref_dir</name></name> <modifier>*</modifier></type><name>dir</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>ref_entry</name></name> <modifier>*</modifier></type><name>entry</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>remove_entry_from_dir</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ref_dir</name></name> <modifier>*</modifier></type><name>dir</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>refname</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>add_ref_entry</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ref_dir</name></name> <modifier>*</modifier></type><name>dir</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>ref_entry</name></name> <modifier>*</modifier></type><name>ref</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>ref_entry</name></name> <modifier>*</modifier></type><name>find_ref_entry</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ref_dir</name></name> <modifier>*</modifier></type><name>dir</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>refname</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>ref_iterator</name></name> <modifier>*</modifier></type><name>cache_ref_iterator_begin</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ref_cache</name></name> <modifier>*</modifier></type><name>cache</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>prefix</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>prime_dir</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
