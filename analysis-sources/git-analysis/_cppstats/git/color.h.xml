<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats\git\color.h"><struct_decl>struct <name>strbuf</name>;</struct_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COLOR_MAXLEN</name></cpp:macro> <cpp:value>75</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_NORMAL</name></cpp:macro> <cpp:value>""</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_RESET</name></cpp:macro> <cpp:value>"\033[m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_BOLD</name></cpp:macro> <cpp:value>"\033[1m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_RED</name></cpp:macro> <cpp:value>"\033[31m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_GREEN</name></cpp:macro> <cpp:value>"\033[32m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_YELLOW</name></cpp:macro> <cpp:value>"\033[33m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_BLUE</name></cpp:macro> <cpp:value>"\033[34m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_MAGENTA</name></cpp:macro> <cpp:value>"\033[35m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_CYAN</name></cpp:macro> <cpp:value>"\033[36m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_BOLD_RED</name></cpp:macro> <cpp:value>"\033[1;31m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_BOLD_GREEN</name></cpp:macro> <cpp:value>"\033[1;32m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_BOLD_YELLOW</name></cpp:macro> <cpp:value>"\033[1;33m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_BOLD_BLUE</name></cpp:macro> <cpp:value>"\033[1;34m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_BOLD_MAGENTA</name></cpp:macro> <cpp:value>"\033[1;35m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_BOLD_CYAN</name></cpp:macro> <cpp:value>"\033[1;36m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_FAINT_RED</name></cpp:macro> <cpp:value>"\033[2;31m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_FAINT_GREEN</name></cpp:macro> <cpp:value>"\033[2;32m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_FAINT_YELLOW</name></cpp:macro> <cpp:value>"\033[2;33m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_FAINT_BLUE</name></cpp:macro> <cpp:value>"\033[2;34m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_FAINT_MAGENTA</name></cpp:macro> <cpp:value>"\033[2;35m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_FAINT_CYAN</name></cpp:macro> <cpp:value>"\033[2;36m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_BG_RED</name></cpp:macro> <cpp:value>"\033[41m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_BG_GREEN</name></cpp:macro> <cpp:value>"\033[42m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_BG_YELLOW</name></cpp:macro> <cpp:value>"\033[43m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_BG_BLUE</name></cpp:macro> <cpp:value>"\033[44m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_BG_MAGENTA</name></cpp:macro> <cpp:value>"\033[45m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_BG_CYAN</name></cpp:macro> <cpp:value>"\033[46m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_FAINT</name></cpp:macro> <cpp:value>"\033[2m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_FAINT_ITALIC</name></cpp:macro> <cpp:value>"\033[2;3m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_REVERSE</name></cpp:macro> <cpp:value>"\033[7m"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_NIL</name></cpp:macro> <cpp:value>"NIL"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_UNKNOWN</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_NEVER</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_ALWAYS</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GIT_COLOR_AUTO</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>column_colors_ansi</name><index>[]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>int</name></type> <name>column_colors_ansi_max</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>color_stdout_is_tty</name></decl>;</decl_stmt>

<function_decl><type><name>int</name></type> <name>git_color_config</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>var</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cb</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>git_color_default_config</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>var</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cb</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>git_config_colorbool</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>var</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>want_color_fd</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>var</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>want_color</name><parameter_list>(<parameter><type><name>colorbool</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>want_color_fd(1, (colorbool))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>want_color_stderr</name><parameter_list>(<parameter><type><name>colorbool</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>want_color_fd(2, (colorbool))</cpp:value></cpp:define>

<function_decl><type><name>int</name></type> <name>color_parse</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>color_parse_mem</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>;</function_decl>

<macro><name>__attribute__</name><argument_list>(<argument>(format (printf, <literal type="number">3</literal>, <literal type="number">4</literal>))</argument>)</argument_list></macro>

<function_decl><type><name>int</name></type> <name>color_fprintf</name><parameter_list>(<parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>fp</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>color</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<macro><name>__attribute__</name><argument_list>(<argument>(format (printf, <literal type="number">3</literal>, <literal type="number">4</literal>))</argument>)</argument_list></macro>

<function_decl><type><name>int</name></type> <name>color_fprintf_ln</name><parameter_list>(<parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>fp</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>color</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>color_print_strbuf</name><parameter_list>(<parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>fp</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>color</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>strbuf</name></name> <modifier>*</modifier></type><name>sb</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>color_is_nil</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>color</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
