<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats\git\revision.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"commit.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"parse-options.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"grep.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"notes.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"pretty.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"diff.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"commit-slab-decl.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SEEN</name></cpp:macro> <cpp:value>(1u&lt;&lt;0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>UNINTERESTING</name></cpp:macro> <cpp:value>(1u&lt;&lt;1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TREESAME</name></cpp:macro> <cpp:value>(1u&lt;&lt;2)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHOWN</name></cpp:macro> <cpp:value>(1u&lt;&lt;3)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TMP_MARK</name></cpp:macro> <cpp:value>(1u&lt;&lt;4)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BOUNDARY</name></cpp:macro> <cpp:value>(1u&lt;&lt;5)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CHILD_SHOWN</name></cpp:macro> <cpp:value>(1u&lt;&lt;6)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ADDED</name></cpp:macro> <cpp:value>(1u&lt;&lt;7)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SYMMETRIC_LEFT</name></cpp:macro> <cpp:value>(1u&lt;&lt;8)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PATCHSAME</name></cpp:macro> <cpp:value>(1u&lt;&lt;9)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BOTTOM</name></cpp:macro> <cpp:value>(1u&lt;&lt;10)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NOT_USER_GIVEN</name></cpp:macro> <cpp:value>(1u&lt;&lt;25)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TRACK_LINEAR</name></cpp:macro> <cpp:value>(1u&lt;&lt;26)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALL_REV_FLAGS</name></cpp:macro> <cpp:value>(((1u&lt;&lt;11)-1) | NOT_USER_GIVEN | TRACK_LINEAR)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TOPO_WALK_EXPLORED</name></cpp:macro> <cpp:value>(1u&lt;&lt;27)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TOPO_WALK_INDEGREE</name></cpp:macro> <cpp:value>(1u&lt;&lt;28)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DECORATE_SHORT_REFS</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DECORATE_FULL_REFS</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<struct_decl>struct <name>log_info</name>;</struct_decl>

<struct_decl>struct <name>repository</name>;</struct_decl>

<struct_decl>struct <name>rev_info</name>;</struct_decl>

<struct_decl>struct <name>string_list</name>;</struct_decl>

<struct_decl>struct <name>saved_parents</name>;</struct_decl>

<expr_stmt><expr><call><name>define_shared_commit_slab</name><argument_list>(<argument><expr><name>revision_sources</name></expr></argument>, <argument><expr><name>char</name> <operator>*</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<struct>struct <name>rev_cmdline_info</name> <block>{

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>nr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>alloc</name></decl>;</decl_stmt>

<struct>struct <name>rev_cmdline_entry</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>object</name></name> <modifier>*</modifier></type><name>item</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>

<enum>enum <block>{

<decl><name>REV_CMD_REF</name></decl>,

<decl><name>REV_CMD_PARENTS_ONLY</name></decl>,

<decl><name>REV_CMD_LEFT</name></decl>,

<decl><name>REV_CMD_RIGHT</name></decl>,

<decl><name>REV_CMD_MERGE_BASE</name></decl>,

<decl><name>REV_CMD_REV</name></decl>

}</block> <decl><name>whence</name></decl>;</enum>

<decl_stmt><decl><type><name>unsigned</name></type> <name>flags</name></decl>;</decl_stmt>

}</block> <decl><modifier>*</modifier><name>rev</name></decl>;</struct>

}</block>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REVISION_WALK_WALK</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REVISION_WALK_NO_WALK_SORTED</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REVISION_WALK_NO_WALK_UNSORTED</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<struct_decl>struct <name>oidset</name>;</struct_decl>

<struct_decl>struct <name>topo_walk_info</name>;</struct_decl>

<struct>struct <name>rev_info</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>commit_list</name></name> <modifier>*</modifier></type><name>commits</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>object_array</name></name></type> <name>pending</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>repo</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>object_array</name></name></type> <name>boundary_commits</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>rev_cmdline_info</name></name></type> <name>cmdline</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>string_list</name></name> <modifier>*</modifier></type><name>ref_excludes</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>prefix</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>def</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>pathspec</name></name></type> <name>prune_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>rev_input_given</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>read_from_stdin</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>rev_sort_order</name></name></type> <name>sort_order</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>early_output</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>ignore_missing</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>ignore_missing_links</name><range>:<expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>dense</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>prune</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>no_walk</name><range>:<expr><literal type="number">2</literal></expr></range></decl>,

<decl><type ref="prev"/><name>remove_empty_trees</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>simplify_history</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>topo_order</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>simplify_merges</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>simplify_by_decoration</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>single_worktree</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>tag_objects</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>tree_objects</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>blob_objects</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>verify_objects</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>edge_hint</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>edge_hint_aggressive</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>limited</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>unpacked</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>boundary</name><range>:<expr><literal type="number">2</literal></expr></range></decl>,

<decl><type ref="prev"/><name>count</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>left_right</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>left_only</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>right_only</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>rewrite_parents</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>print_parents</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>show_decorations</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>reverse</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>reverse_output_stage</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>cherry_pick</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>cherry_mark</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>bisect</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>ancestry_path</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>first_parent_only</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>line_level_traverse</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>tree_blobs_in_commit_order</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>do_not_die_on_missing_tree</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>exclude_promisor_objects</name><range>:<expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>diff</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>full_diff</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>show_root_diff</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>no_commit_id</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>verbose_header</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>ignore_merges</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>combine_merges</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>combined_all_paths</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>dense_combined_merges</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>always_show_header</name><range>:<expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>show_notes</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>shown_one</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>shown_dashes</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>show_merge</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>show_notes_given</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>show_signature</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>pretty_given</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>abbrev_commit</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>abbrev_commit_given</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>zero_commit</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>use_terminator</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>missing_newline</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>date_mode_explicit</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>preserve_subject</name><range>:<expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>disable_stdin</name><range>:<expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>track_linear</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>track_first_time</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>linear</name><range>:<expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>date_mode</name></name></type> <name>date_mode</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>expand_tabs_in_log</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>expand_tabs_in_log_default</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>abbrev</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>cmit_fmt</name></name></type> <name>commit_format</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>log_info</name></name> <modifier>*</modifier></type><name>loginfo</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>nr</name></decl>, <decl><type ref="prev"/><name>total</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>mime_boundary</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>patch_suffix</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>numbered_files</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>reroll_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>message_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>ident_split</name></name></type> <name>from_ident</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>string_list</name></name> <modifier>*</modifier></type><name>ref_message_ids</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>add_signoff</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>extra_headers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>log_reencode</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>subject_prefix</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>no_inline</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>show_log_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>string_list</name></name> <modifier>*</modifier></type><name>mailmap</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>grep_opt</name></name></type> <name>grep_filter</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>invert_grep</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>git_graph</name></name> <modifier>*</modifier></type><name>graph</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>skip_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>max_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>timestamp_t</name></type> <name>max_age</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>timestamp_t</name></type> <name>min_age</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>min_parents</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>max_parents</name></decl>;</decl_stmt>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>include_check</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>commit</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>include_check_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>diff_options</name></name></type> <name>diffopt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>diff_options</name></name></type> <name>pruning</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>reflog_walk_info</name></name> <modifier>*</modifier></type><name>reflog_info</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>decoration</name></name></type> <name>children</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>decoration</name></name></type> <name>merge_simplification</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>decoration</name></name></type> <name>treesame</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>display_notes_opt</name></name></type> <name>notes_opt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type><name>idiff_oid1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type><name>idiff_oid2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>idiff_title</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>rdiff1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>rdiff2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>creation_factor</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>rdiff_title</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>count_left</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>count_right</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>count_same</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>decoration</name></name></type> <name>line_log_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>saved_parents</name></name> <modifier>*</modifier></type><name>saved_parents_slab</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>commit_list</name></name> <modifier>*</modifier></type><name>previous_parents</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>break_bar</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>revision_sources</name></name> <modifier>*</modifier></type><name>sources</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>topo_walk_info</name></name> <modifier>*</modifier></type><name>topo_walk_info</name></decl>;</decl_stmt>

}</block>;</struct>

<function_decl><type><name>int</name></type> <name>ref_excluded</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>string_list</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>clear_ref_exclusion</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>string_list</name></name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>add_ref_exclusion</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>string_list</name></name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>exclude</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REV_TREE_SAME</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REV_TREE_NEW</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REV_TREE_OLD</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REV_TREE_DIFFERENT</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define> 

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>show_early_output_fn_t</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>commit_list</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>volatile</specifier> <name>show_early_output_fn_t</name></type> <name>show_early_output</name></decl>;</decl_stmt>

<struct>struct <name>setup_revision_opt</name> <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>def</name></decl>;</decl_stmt>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>tweak</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>setup_revision_opt</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>submodule</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>assume_dashdash</name><range>:<expr><literal type="number">1</literal></expr></range></decl>,

<decl><type ref="prev"/><name>allow_exclude_promisor_objects</name><range>:<expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>revarg_opt</name></decl>;</decl_stmt>

}</block>;</struct>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>NO_THE_REPOSITORY_COMPATIBILITY_MACROS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>init_revisions</name><parameter_list>(<parameter><type><name>revs</name></type></parameter>, <parameter><type><name>prefix</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>repo_init_revisions(the_repository, revs, prefix)</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>void</name></type> <name>repo_init_revisions</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type><name>revs</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>prefix</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>setup_revisions</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>argv</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type><name>revs</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>setup_revision_opt</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>parse_revision_opt</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type><name>revs</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>parse_opt_ctx_t</name></name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>option</name></name> <modifier>*</modifier></type><name>options</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>usagestr</name><index>[]</index></name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REVARG_CANNOT_BE_FILENAME</name></cpp:macro> <cpp:value>01</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REVARG_COMMITTISH</name></cpp:macro> <cpp:value>02</cpp:value></cpp:define>

<function_decl><type><name>int</name></type> <name>handle_revision_arg</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type><name>revs</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>revarg_opt</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>reset_revision_walk</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>prepare_revision_walk</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type><name>revs</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>commit</name></name> <modifier>*</modifier></type><name>get_revision</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type><name>revs</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>get_revision_mark</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type><name>revs</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>commit</name></name> <modifier>*</modifier></type><name>commit</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>put_revision_mark</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type><name>revs</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>commit</name></name> <modifier>*</modifier></type><name>commit</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>mark_parents_uninteresting</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>commit</name></name> <modifier>*</modifier></type><name>commit</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>mark_tree_uninteresting</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>tree</name></name> <modifier>*</modifier></type><name>tree</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>mark_trees_uninteresting_sparse</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>oidset</name></name> <modifier>*</modifier></type><name>trees</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>show_object_with_name</name><parameter_list>(<parameter><decl><type><name>FILE</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>object</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>add_pending_object</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type><name>revs</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>object</name></name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>add_pending_oid</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type><name>revs</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type><name>oid</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>add_head_to_pending</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>add_reflogs_to_pending</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>add_index_objects_to_pending</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<enum>enum <name>commit_action</name> <block>{

<decl><name>commit_ignore</name></decl>,

<decl><name>commit_show</name></decl>,

<decl><name>commit_error</name></decl>

}</block>;</enum>

<function_decl><type><name><name>enum</name> <name>commit_action</name></name></type> <name>get_commit_action</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type><name>revs</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>commit</name></name> <modifier>*</modifier></type><name>commit</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>commit_action</name></name></type> <name>simplify_commit</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type><name>revs</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>commit</name></name> <modifier>*</modifier></type><name>commit</name></decl></parameter>)</parameter_list>;</function_decl>

<enum>enum <name>rewrite_result</name> <block>{

<decl><name>rewrite_one_ok</name></decl>,

<decl><name>rewrite_one_noparents</name></decl>,

<decl><name>rewrite_one_error</name></decl>

}</block>;</enum>

<typedef>typedef <function_decl><type><name><name>enum</name> <name>rewrite_result</name></name></type> (<modifier>*</modifier><name>rewrite_parent_fn_t</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type><name>revs</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>commit</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>pp</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><name>int</name></type> <name>rewrite_parents</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type><name>revs</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>commit</name></name> <modifier>*</modifier></type><name>commit</name></decl></parameter>,

<parameter><decl><type><name>rewrite_parent_fn_t</name></type> <name>rewrite_parent</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>commit_list</name></name> <modifier>*</modifier></type><name>get_saved_parents</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type><name>revs</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>commit</name></name> <modifier>*</modifier></type><name>commit</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
