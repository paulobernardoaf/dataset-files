#ifndef PACK_H
#define PACK_H

#include "object.h"
#include "csum-file.h"

struct repository;




#define PACK_SIGNATURE 0x5041434b	
#define PACK_VERSION 2
#define pack_version_ok(v) ((v) == htonl(2) || (v) == htonl(3))
struct pack_header {
	uint32_t hdr_signature;
	uint32_t hdr_version;
	uint32_t hdr_entries;
};


















#define PACK_IDX_SIGNATURE 0xff744f63	

struct pack_idx_option {
	unsigned flags;
	
#define WRITE_IDX_VERIFY 01 
#define WRITE_IDX_STRICT 02

	uint32_t version;
	uint32_t off32_limit;

	




	int anomaly_alloc, anomaly_nr;
	uint32_t *anomaly;
};

void reset_pack_idx_option(struct pack_idx_option *);




struct pack_idx_header {
	uint32_t idx_signature;
	uint32_t idx_version;
};




struct pack_idx_entry {
	struct object_id oid;
	uint32_t crc32;
	off_t offset;
};


struct progress;

typedef int (*verify_fn)(const struct object_id *, enum object_type, unsigned long, void*, int*);

const char *write_idx_file(const char *index_name, struct pack_idx_entry **objects, int nr_objects, const struct pack_idx_option *, const unsigned char *sha1);
int check_pack_crc(struct packed_git *p, struct pack_window **w_curs, off_t offset, off_t len, unsigned int nr);
int verify_pack_index(struct packed_git *);
int verify_pack(struct repository *, struct packed_git *, verify_fn fn, struct progress *, uint32_t);
off_t write_pack_header(struct hashfile *f, uint32_t);
void fixup_pack_header_footer(int, unsigned char *, const char *, uint32_t, unsigned char *, off_t);
char *index_pack_lockfile(int fd);





#define MAX_PACK_OBJECT_HEADER 10
int encode_in_pack_object_header(unsigned char *hdr, int hdr_len,
				 enum object_type, uintmax_t);

#define PH_ERROR_EOF		(-1)
#define PH_ERROR_PACK_SIGNATURE	(-2)
#define PH_ERROR_PROTOCOL	(-3)
int read_pack_header(int fd, struct pack_header *);

struct hashfile *create_tmp_packfile(char **pack_tmp_name);
void finish_tmp_packfile(struct strbuf *name_buffer, const char *pack_tmp_name, struct pack_idx_entry **written_list, uint32_t nr_written, struct pack_idx_option *pack_idx_opts, unsigned char sha1[]);

#endif
