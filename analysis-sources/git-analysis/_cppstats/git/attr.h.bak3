#ifndef ATTR_H
#define ATTR_H











































































































struct index_state;








struct git_attr;


struct all_attrs_item;
struct attr_stack;
struct index_state;





const struct git_attr *git_attr(const char *);


extern const char git_attr__true[];
extern const char git_attr__false[];












#define ATTR_TRUE(v) ((v) == git_attr__true)


#define ATTR_FALSE(v) ((v) == git_attr__false)


#define ATTR_UNSET(v) ((v) == NULL)


struct attr_check_item {
const struct git_attr *attr;
const char *value;
};






struct attr_check {
int nr;
int alloc;
struct attr_check_item *items;
int all_attrs_nr;
struct all_attrs_item *all_attrs;
struct attr_stack *stack;
};

struct attr_check *attr_check_alloc(void);
struct attr_check *attr_check_initl(const char *, ...);
struct attr_check *attr_check_dup(const struct attr_check *check);

struct attr_check_item *attr_check_append(struct attr_check *check,
const struct git_attr *attr);

void attr_check_reset(struct attr_check *check);
void attr_check_clear(struct attr_check *check);
void attr_check_free(struct attr_check *check);






const char *git_attr_name(const struct git_attr *);

void git_check_attr(const struct index_state *istate,
const char *path, struct attr_check *check);





void git_all_attrs(const struct index_state *istate,
const char *path, struct attr_check *check);

enum git_attr_direction {
GIT_ATTR_CHECKIN,
GIT_ATTR_CHECKOUT,
GIT_ATTR_INDEX
};
void git_attr_set_direction(enum git_attr_direction new_direction);

void attr_start(void);

#endif 
