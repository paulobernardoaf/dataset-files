<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats\git\diff.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tree-walk.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"pathspec.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"object.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"oidset.h"</cpp:file></cpp:include>

<struct_decl>struct <name>combine_diff_path</name>;</struct_decl>

<struct_decl>struct <name>commit</name>;</struct_decl>

<struct_decl>struct <name>diff_filespec</name>;</struct_decl>

<struct_decl>struct <name>diff_options</name>;</struct_decl>

<struct_decl>struct <name>diff_queue_struct</name>;</struct_decl>

<struct_decl>struct <name>oid_array</name>;</struct_decl>

<struct_decl>struct <name>option</name>;</struct_decl>

<struct_decl>struct <name>repository</name>;</struct_decl>

<struct_decl>struct <name>rev_info</name>;</struct_decl>

<struct_decl>struct <name>strbuf</name>;</struct_decl>

<struct_decl>struct <name>userdiff_driver</name>;</struct_decl>

<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>pathchange_fn_t</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type><name>options</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>combine_diff_path</name></name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>change_fn_t</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type><name>options</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name></type> <name>old_mode</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>new_mode</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type><name>old_oid</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type><name>new_oid</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>old_oid_valid</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>new_oid_valid</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fullpath</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name></type> <name>old_dirty_submodule</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>new_dirty_submodule</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>add_remove_fn_t</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type><name>options</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>addremove</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>mode</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type><name>oid</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>oid_valid</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fullpath</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>dirty_submodule</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>diff_format_fn_t</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_queue_struct</name></name> <modifier>*</modifier></type><name>q</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type><name>options</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name><name>struct</name> <name>strbuf</name></name> <modifier>*</modifier></type>(<modifier>*</modifier><name>diff_prefix_fn_t</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type><name>opt</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_FORMAT_RAW</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_FORMAT_DIFFSTAT</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_FORMAT_NUMSTAT</name></cpp:macro> <cpp:value>0x0004</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_FORMAT_SUMMARY</name></cpp:macro> <cpp:value>0x0008</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_FORMAT_PATCH</name></cpp:macro> <cpp:value>0x0010</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_FORMAT_SHORTSTAT</name></cpp:macro> <cpp:value>0x0020</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_FORMAT_DIRSTAT</name></cpp:macro> <cpp:value>0x0040</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_FORMAT_NAME</name></cpp:macro> <cpp:value>0x0100</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_FORMAT_NAME_STATUS</name></cpp:macro> <cpp:value>0x0200</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_FORMAT_CHECKDIFF</name></cpp:macro> <cpp:value>0x0400</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_FORMAT_NO_OUTPUT</name></cpp:macro> <cpp:value>0x0800</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_FORMAT_CALLBACK</name></cpp:macro> <cpp:value>0x1000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_FLAGS_INIT</name></cpp:macro> <cpp:value>{ 0 }</cpp:value></cpp:define>

<struct>struct <name>diff_flags</name> <block>{

<decl_stmt><decl><type><name>unsigned</name></type> <name>recursive</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>tree_in_recursive</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>binary</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>text</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>full_index</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>silent_on_remove</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>find_copies_harder</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>follow_renames</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>rename_empty</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>has_changes</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>quick</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>no_index</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>allow_external</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>exit_with_status</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>reverse_diff</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>check_failed</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>relative_name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>ignore_submodules</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>dirstat_cumulative</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>dirstat_by_file</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>allow_textconv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>textconv_set_via_cmdline</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>diff_from_contents</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>dirty_submodules</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>ignore_untracked_in_submodules</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>ignore_dirty_submodules</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>override_submodule_config</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>dirstat_by_line</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>funccontext</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>default_follow_renames</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>stat_with_summary</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>suppress_diff_headers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>dual_color_diffed_diffs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>suppress_hunk_header_line_count</name></decl>;</decl_stmt>

}</block>;</struct>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>diff_flags_or</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_flags</name></name> <modifier>*</modifier></type><name>a</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>diff_flags</name></name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>tmp_a</name> <init>= <expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><name>a</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>tmp_b</name> <init>= <expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><name>b</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <sizeof>sizeof<argument_list>(<argument><expr>struct <name>diff_flags</name></expr></argument>)</argument_list></sizeof></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>tmp_a</name><index>[<expr><name>i</name></expr>]</index></name> <operator>|=</operator> <name><name>tmp_b</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_XDL_TST</name><parameter_list>(<parameter><type><name>opts</name></type></parameter>, <parameter><type><name>flag</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((opts)-&gt;xdl_opts &amp; XDF_##flag)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_XDL_SET</name><parameter_list>(<parameter><type><name>opts</name></type></parameter>, <parameter><type><name>flag</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((opts)-&gt;xdl_opts |= XDF_##flag)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_XDL_CLR</name><parameter_list>(<parameter><type><name>opts</name></type></parameter>, <parameter><type><name>flag</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((opts)-&gt;xdl_opts &amp;= ~XDF_##flag)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_WITH_ALG</name><parameter_list>(<parameter><type><name>opts</name></type></parameter>, <parameter><type><name>flag</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((opts)-&gt;xdl_opts &amp; ~XDF_DIFF_ALGORITHM_MASK) | XDF_##flag)</cpp:value></cpp:define>

<enum>enum <name>diff_words_type</name> <block>{

<decl><name>DIFF_WORDS_NONE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>DIFF_WORDS_PORCELAIN</name></decl>,

<decl><name>DIFF_WORDS_PLAIN</name></decl>,

<decl><name>DIFF_WORDS_COLOR</name></decl>

}</block>;</enum>

<enum>enum <name>diff_submodule_format</name> <block>{

<decl><name>DIFF_SUBMODULE_SHORT</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>DIFF_SUBMODULE_LOG</name></decl>,

<decl><name>DIFF_SUBMODULE_INLINE_DIFF</name></decl>

}</block>;</enum>

<struct>struct <name>diff_options</name> <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>orderfile</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>pickaxe</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>single_follow</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>a_prefix</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>b_prefix</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>line_prefix</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>line_prefix_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>diff_flags</name></name></type> <name>flags</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>filter</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>use_color</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>context</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>interhunkcontext</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>break_opt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>detect_rename</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>irreversible_delete</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>skip_stat_unmatch</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>line_termination</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>output_format</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>pickaxe_opts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>rename_score</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>rename_limit</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>needed_rename_limit</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>degraded_cc_to_c</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>show_rename_progress</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>dirstat_permille</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>setup</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>abbrev</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ita_invisible_in_index</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WSEH_NEW</name></cpp:macro> <cpp:value>(1&lt;&lt;12)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WSEH_CONTEXT</name></cpp:macro> <cpp:value>(1&lt;&lt;13)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WSEH_OLD</name></cpp:macro> <cpp:value>(1&lt;&lt;14)</cpp:value></cpp:define>

<decl_stmt><decl><type><name>unsigned</name></type> <name>ws_error_highlight</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>prefix</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>prefix_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>stat_sep</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>xdl_opts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>anchors</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>anchors_nr</name></decl>, <decl><type ref="prev"/><name>anchors_alloc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>stat_width</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>stat_name_width</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>stat_graph_width</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>stat_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>word_regex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>diff_words_type</name></name></type> <name>word_diff</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>diff_submodule_format</name></name></type> <name>submodule_format</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>oidset</name></name> <modifier>*</modifier></type><name>objfind</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>found_changes</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>found_follow</name></decl>;</decl_stmt>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>set_default</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><name>FILE</name> <modifier>*</modifier></type><name>file</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>close_file</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OUTPUT_INDICATOR_NEW</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OUTPUT_INDICATOR_OLD</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OUTPUT_INDICATOR_CONTEXT</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<decl_stmt><decl><type><name>char</name></type> <name><name>output_indicators</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>pathspec</name></name></type> <name>pathspec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>pathchange_fn_t</name></type> <name>pathchange</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>change_fn_t</name></type> <name>change</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>add_remove_fn_t</name></type> <name>add_remove</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>change_fn_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>diff_format_fn_t</name></type> <name>format_callback</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>format_callback_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>diff_prefix_fn_t</name></type> <name>output_prefix</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>output_prefix_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>diff_path_counter</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>emitted_diff_symbols</name></name> <modifier>*</modifier></type><name>emitted_symbols</name></decl>;</decl_stmt>

<enum>enum <block>{

<decl><name>COLOR_MOVED_NO</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>COLOR_MOVED_PLAIN</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>COLOR_MOVED_BLOCKS</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>COLOR_MOVED_ZEBRA</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

<decl><name>COLOR_MOVED_ZEBRA_DIM</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

}</block> <decl><name>color_moved</name></decl>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COLOR_MOVED_DEFAULT</name></cpp:macro> <cpp:value>COLOR_MOVED_ZEBRA</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COLOR_MOVED_MIN_ALNUM_COUNT</name></cpp:macro> <cpp:value>20</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COLOR_MOVED_WS_ALLOW_INDENTATION_CHANGE</name></cpp:macro> <cpp:value>(1&lt;&lt;5)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COLOR_MOVED_WS_ERROR</name></cpp:macro> <cpp:value>(1&lt;&lt;0)</cpp:value></cpp:define>

<decl_stmt><decl><type><name>unsigned</name></type> <name>color_moved_ws_handling</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>repo</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>option</name></name> <modifier>*</modifier></type><name>parseopts</name></decl>;</decl_stmt>

}</block>;</struct>

<function_decl><type><name>unsigned</name></type> <name>diff_filter_bit</name><parameter_list>(<parameter><decl><type><name>char</name></type> <name>status</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>diff_emit_submodule_del</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type><name>o</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>line</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>diff_emit_submodule_add</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type><name>o</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>line</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>diff_emit_submodule_untracked</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type><name>o</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>diff_emit_submodule_modified</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type><name>o</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>diff_emit_submodule_header</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type><name>o</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>header</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>diff_emit_submodule_error</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type><name>o</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>err</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>diff_emit_submodule_pipethrough</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type><name>o</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>line</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>

<struct>struct <name>diffstat_t</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>nr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>alloc</name></decl>;</decl_stmt>

<struct>struct <name>diffstat_file</name> <block>{

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>from_name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>print_name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>comments</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>is_unmerged</name><range>:<expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>is_binary</name><range>:<expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>is_renamed</name><range>:<expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>is_interesting</name><range>:<expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uintmax_t</name></type> <name>added</name></decl>, <decl><type ref="prev"/><name>deleted</name></decl>;</decl_stmt>

}</block> <decl><modifier>*</modifier><modifier>*</modifier><name>files</name></decl>;</struct>

}</block>;</struct>

<enum>enum <name>color_diff</name> <block>{

<decl><name>DIFF_RESET</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>DIFF_CONTEXT</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>DIFF_METAINFO</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>DIFF_FRAGINFO</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

<decl><name>DIFF_FILE_OLD</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

<decl><name>DIFF_FILE_NEW</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,

<decl><name>DIFF_COMMIT</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,

<decl><name>DIFF_WHITESPACE</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>,

<decl><name>DIFF_FUNCINFO</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,

<decl><name>DIFF_FILE_OLD_MOVED</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>,

<decl><name>DIFF_FILE_OLD_MOVED_ALT</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>,

<decl><name>DIFF_FILE_OLD_MOVED_DIM</name> <init>= <expr><literal type="number">11</literal></expr></init></decl>,

<decl><name>DIFF_FILE_OLD_MOVED_ALT_DIM</name> <init>= <expr><literal type="number">12</literal></expr></init></decl>,

<decl><name>DIFF_FILE_NEW_MOVED</name> <init>= <expr><literal type="number">13</literal></expr></init></decl>,

<decl><name>DIFF_FILE_NEW_MOVED_ALT</name> <init>= <expr><literal type="number">14</literal></expr></init></decl>,

<decl><name>DIFF_FILE_NEW_MOVED_DIM</name> <init>= <expr><literal type="number">15</literal></expr></init></decl>,

<decl><name>DIFF_FILE_NEW_MOVED_ALT_DIM</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>,

<decl><name>DIFF_CONTEXT_DIM</name> <init>= <expr><literal type="number">17</literal></expr></init></decl>,

<decl><name>DIFF_FILE_OLD_DIM</name> <init>= <expr><literal type="number">18</literal></expr></init></decl>,

<decl><name>DIFF_FILE_NEW_DIM</name> <init>= <expr><literal type="number">19</literal></expr></init></decl>,

<decl><name>DIFF_CONTEXT_BOLD</name> <init>= <expr><literal type="number">20</literal></expr></init></decl>,

<decl><name>DIFF_FILE_OLD_BOLD</name> <init>= <expr><literal type="number">21</literal></expr></init></decl>,

<decl><name>DIFF_FILE_NEW_BOLD</name> <init>= <expr><literal type="number">22</literal></expr></init></decl>,

}</block>;</enum>

<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>diff_get_color</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>diff_use_color</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>color_diff</name></name></type> <name>ix</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>diff_get_color_opt</name><parameter_list>(<parameter><type><name>o</name></type></parameter>, <parameter><type><name>ix</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>diff_get_color((o)-&gt;use_color, ix)</cpp:value></cpp:define>

<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>diff_line_prefix</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name></type> <name><name>mime_boundary_leader</name><index>[]</index></name></decl>;</decl_stmt>

<function_decl><type><name><name>struct</name> <name>combine_diff_path</name></name> <modifier>*</modifier></type><name>diff_tree_paths</name><parameter_list>(

<parameter><decl><type><name><name>struct</name> <name>combine_diff_path</name></name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type><name>oid</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>parents_oid</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nparent</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>strbuf</name></name> <modifier>*</modifier></type><name>base</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type><name>opt</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>diff_tree_oid</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type><name>old_oid</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type><name>new_oid</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>base</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type><name>opt</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>diff_root_tree_oid</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type><name>new_oid</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>base</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type><name>opt</name></decl></parameter>)</parameter_list>;</function_decl>

<struct>struct <name>combine_diff_path</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>combine_diff_path</name></name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>path</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>mode</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>object_id</name></name></type> <name>oid</name></decl>;</decl_stmt>

<struct>struct <name>combine_diff_parent</name> <block>{

<decl_stmt><decl><type><name>char</name></type> <name>status</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>mode</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>object_id</name></name></type> <name>oid</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>strbuf</name></name></type> <name>path</name></decl>;</decl_stmt>

}</block> <decl><name><name>parent</name><index>[<expr><name>FLEX_ARRAY</name></expr>]</index></name></decl>;</struct>

}</block>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>combine_diff_path_size</name><parameter_list>(<parameter><type><name>n</name></type></parameter>, <parameter><type><name>l</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>st_add4(sizeof(struct combine_diff_path), (l), 1, st_mult(sizeof(struct combine_diff_parent), (n)))</cpp:value></cpp:define>

<function_decl><type><name>void</name></type> <name>show_combined_diff</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>combine_diff_path</name></name> <modifier>*</modifier></type><name>elem</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>num_parent</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>dense</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>diff_tree_combined</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type><name>oid</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>oid_array</name></name> <modifier>*</modifier></type><name>parents</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dense</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type><name>rev</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>diff_tree_combined_merge</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>commit</name></name> <modifier>*</modifier></type><name>commit</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dense</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type><name>rev</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>diff_set_mnemonic_prefix</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type><name>options</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>diff_can_quit_early</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>diff_addremove</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>addremove</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name></type> <name>mode</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type><name>oid</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>oid_valid</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fullpath</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>dirty_submodule</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>diff_change</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><name>unsigned</name></type> <name>mode1</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>mode2</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type><name>old_oid</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type><name>new_oid</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>old_oid_valid</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>new_oid_valid</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fullpath</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name></type> <name>dirty_submodule1</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>dirty_submodule2</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>diff_filepair</name></name> <modifier>*</modifier></type><name>diff_unmerge</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>compute_diffstat</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type><name>options</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>diffstat_t</name></name> <modifier>*</modifier></type><name>diffstat</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>diff_queue_struct</name></name> <modifier>*</modifier></type><name>q</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>free_diffstat_info</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diffstat_t</name></name> <modifier>*</modifier></type><name>diffstat</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_SETUP_REVERSE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_SETUP_USE_SIZE_CACHE</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<function_decl><type><name>int</name></type> <name>parse_long_opt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>opt</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>argv</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>optarg</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>git_diff_basic_config</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>var</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cb</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>git_diff_heuristic_config</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>var</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cb</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>init_diff_ui_defaults</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>git_diff_ui_config</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>var</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cb</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>NO_THE_REPOSITORY_COMPATIBILITY_MACROS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>diff_setup</name><parameter_list>(<parameter><type><name>diffopts</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>repo_diff_setup(the_repository, diffopts)</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>void</name></type> <name>repo_diff_setup</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>diff_opt_parse</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>diff_setup_done</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>git_config_rename</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>var</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_DETECT_RENAME</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_DETECT_COPY</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_PICKAXE_ALL</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_PICKAXE_REGEX</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_PICKAXE_KIND_S</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_PICKAXE_KIND_G</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_PICKAXE_KIND_OBJFIND</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_PICKAXE_KINDS_MASK</name></cpp:macro> <cpp:value>(DIFF_PICKAXE_KIND_S | DIFF_PICKAXE_KIND_G | DIFF_PICKAXE_KIND_OBJFIND)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_PICKAXE_IGNORE_CASE</name></cpp:macro> <cpp:value>32</cpp:value></cpp:define>

<function_decl><type><name>void</name></type> <name>diffcore_std</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>diffcore_fix_diff_index</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMMON_DIFF_OPTIONS_HELP</name></cpp:macro> <cpp:value>"\ncommon diff options:\n" " -z output diff-raw with lines terminated with NUL.\n" " -p output patch format.\n" " -u synonym for -p.\n" " --patch-with-raw\n" " output both a patch and the diff-raw format.\n" " --stat show diffstat instead of patch.\n" " --numstat show numeric diffstat instead of patch.\n" " --patch-with-stat\n" " output a patch and prepend its diffstat.\n" " --name-only show only names of changed files.\n" " --name-status show names and status of changed files.\n" " --full-index show full object name on index lines.\n" " --abbrev=&lt;n&gt; abbreviate object names in diff-tree header and diff-raw.\n" " -R swap input file pairs.\n" " -B detect complete rewrites.\n" " -M detect renames.\n" " -C detect copies.\n" " --find-copies-harder\n" " try unchanged files as candidate for copy detection.\n" " -l&lt;n&gt; limit rename attempts up to &lt;n&gt; paths.\n" " -O&lt;file&gt; reorder diffs according to the &lt;file&gt;.\n" " -S&lt;string&gt; find filepair whose only one side contains the string.\n" " --pickaxe-all\n" " show all files diff when -S is used and hit is found.\n" " -a --text treat all files as text.\n"</cpp:value></cpp:define>

<function_decl><type><name>int</name></type> <name>diff_queue_is_empty</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>diff_flush</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>diff_warn_rename_limit</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>varname</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>needed</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>degraded_cc</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_STATUS_ADDED</name></cpp:macro> <cpp:value>'A'</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_STATUS_COPIED</name></cpp:macro> <cpp:value>'C'</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_STATUS_DELETED</name></cpp:macro> <cpp:value>'D'</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_STATUS_MODIFIED</name></cpp:macro> <cpp:value>'M'</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_STATUS_RENAMED</name></cpp:macro> <cpp:value>'R'</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_STATUS_TYPE_CHANGED</name></cpp:macro> <cpp:value>'T'</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_STATUS_UNKNOWN</name></cpp:macro> <cpp:value>'X'</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_STATUS_UNMERGED</name></cpp:macro> <cpp:value>'U'</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_STATUS_FILTER_AON</name></cpp:macro> <cpp:value>'*'</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_STATUS_FILTER_BROKEN</name></cpp:macro> <cpp:value>'B'</cpp:value></cpp:define>

<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>diff_aligned_abbrev</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type><name>sha1</name></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_SILENT_ON_REMOVED</name></cpp:macro> <cpp:value>01</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIFF_RACY_IS_MODIFIED</name></cpp:macro> <cpp:value>02</cpp:value></cpp:define>

<function_decl><type><name>int</name></type> <name>run_diff_files</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type><name>revs</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>option</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>run_diff_index</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type><name>revs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>cached</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>do_diff_cache</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>diff_flush_patch_id</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>flush_one_hunk</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type><name>result</name></decl></parameter>, <parameter><decl><type><name>git_hash_ctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>diff_result_code</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>diff_no_index</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rev_info</name></name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>implicit_no_index</name></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>index_differs_from</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>def</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>diff_flags</name></name> <modifier>*</modifier></type><name>flags</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>ita_invisible_in_index</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>size_t</name></type> <name>fill_textconv</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>userdiff_driver</name></name> <modifier>*</modifier></type><name>driver</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>diff_filespec</name></name> <modifier>*</modifier></type><name>df</name></decl></parameter>,

<parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>outbuf</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>userdiff_driver</name></name> <modifier>*</modifier></type><name>get_textconv</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>diff_filespec</name></name> <modifier>*</modifier></type><name>one</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>textconv_object</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>repo</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name></type> <name>mode</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type><name>oid</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>oid_valid</name></decl></parameter>,

<parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>long</name> <modifier>*</modifier></type><name>buf_size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>parse_rename_score</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>cp_p</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>long</name></type> <name>parse_algorithm_value</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>print_stat_summary</name><parameter_list>(<parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>fp</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>files</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>insertions</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>deletions</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>setup_diff_pager</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>diff_options</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

</unit>
