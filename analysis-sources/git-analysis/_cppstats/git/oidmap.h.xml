<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats\git\oidmap.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cache.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"hashmap.h"</cpp:file></cpp:include>

<struct>struct <name>oidmap_entry</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>hashmap_entry</name></name></type> <name>internal_entry</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>object_id</name></name></type> <name>oid</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>oidmap</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>hashmap</name></name></type> <name>map</name></decl>;</decl_stmt>

}</block>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OIDMAP_INIT</name></cpp:macro> <cpp:value>{ { NULL } }</cpp:value></cpp:define>

<function_decl><type><name>void</name></type> <name>oidmap_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>oidmap</name></name> <modifier>*</modifier></type><name>map</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>initial_size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>oidmap_free</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>oidmap</name></name> <modifier>*</modifier></type><name>map</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>free_entries</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name> <modifier>*</modifier></type><name>oidmap_get</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>oidmap</name></name> <modifier>*</modifier></type><name>map</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name> <modifier>*</modifier></type><name>oidmap_put</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>oidmap</name></name> <modifier>*</modifier></type><name>map</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>entry</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name> <modifier>*</modifier></type><name>oidmap_remove</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>oidmap</name></name> <modifier>*</modifier></type><name>map</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>object_id</name></name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>;</function_decl>

<struct>struct <name>oidmap_iter</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>hashmap_iter</name></name></type> <name>h_iter</name></decl>;</decl_stmt>

}</block>;</struct>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>oidmap_iter_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>oidmap</name></name> <modifier>*</modifier></type><name>map</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>oidmap_iter</name></name> <modifier>*</modifier></type><name>iter</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>hashmap_iter_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>map</name><operator>-&gt;</operator><name>map</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>iter</name><operator>-&gt;</operator><name>h_iter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name> <modifier>*</modifier></type><name>oidmap_iter_next</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>oidmap_iter</name></name> <modifier>*</modifier></type><name>iter</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><call><name>hashmap_iter_next</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>iter</name><operator>-&gt;</operator><name>h_iter</name></name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name> <modifier>*</modifier></type><name>oidmap_iter_first</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>oidmap</name></name> <modifier>*</modifier></type><name>map</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>oidmap_iter</name></name> <modifier>*</modifier></type><name>iter</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>oidmap_iter_init</name><argument_list>(<argument><expr><name>map</name></expr></argument>, <argument><expr><name>iter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><call><name>oidmap_iter_next</name><argument_list>(<argument><expr><name>iter</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

</unit>
