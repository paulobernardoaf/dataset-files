<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats\git\column.h"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COL_LAYOUT_MASK</name></cpp:macro> <cpp:value>0x000F</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COL_ENABLE_MASK</name></cpp:macro> <cpp:value>0x0030</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COL_PARSEOPT</name></cpp:macro> <cpp:value>0x0040</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COL_DENSE</name></cpp:macro> <cpp:value>0x0080</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COL_DISABLED</name></cpp:macro> <cpp:value>0x0000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COL_ENABLED</name></cpp:macro> <cpp:value>0x0010</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COL_AUTO</name></cpp:macro> <cpp:value>0x0020</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COL_LAYOUT</name><parameter_list>(<parameter><type><name>c</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((c) &amp; COL_LAYOUT_MASK)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COL_COLUMN</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COL_ROW</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COL_PLAIN</name></cpp:macro> <cpp:value>15</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>explicitly_enable_column</name><parameter_list>(<parameter><type><name>c</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((c) &amp; COL_PARSEOPT) &amp;&amp; column_active(c))</cpp:value></cpp:define>

<struct>struct <name>column_options</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>width</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>padding</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>indent</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>nl</name></decl>;</decl_stmt>

}</block>;</struct>

<struct_decl>struct <name>option</name>;</struct_decl>

<function_decl><type><name>int</name></type> <name>parseopt_column_callback</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>option</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>git_column_config</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>var</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>command</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>colopts</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>finalize_colopts</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>colopts</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stdout_is_tty</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>column_active</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>colopts</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><operator>(</operator><name>colopts</name> <operator>&amp;</operator> <name>COL_ENABLE_MASK</name><operator>)</operator> <operator>==</operator> <name>COL_ENABLED</name></expr>;</return>

</block_content>}</block></function>

<struct_decl>struct <name>string_list</name>;</struct_decl>

<function_decl><type><name>void</name></type> <name>print_columns</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>string_list</name></name> <modifier>*</modifier></type><name>list</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>colopts</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>column_options</name></name> <modifier>*</modifier></type><name>opts</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>run_column_filter</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>colopts</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>column_options</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>stop_column_filter</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

</unit>
