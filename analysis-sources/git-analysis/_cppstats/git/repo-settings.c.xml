<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats\git\repo-settings.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cache.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"repository.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>UPDATE_DEFAULT_BOOL</name><parameter_list>(<parameter><type><name>s</name></type></parameter>,<parameter><type><name>v</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { if (s == -1) { s = v; } } while(0)</cpp:value></cpp:define>

<function><type><name>void</name></type> <name>prepare_repo_settings</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>repository</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>value</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>strval</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>r</name><operator>-&gt;</operator><name>settings</name><operator>.</operator><name>initialized</name></name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>r</name><operator>-&gt;</operator><name>settings</name></name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>r</name><operator>-&gt;</operator><name>settings</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>repo_config_get_bool</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="string">"core.commitgraph"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>value</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>settings</name><operator>.</operator><name>core_commit_graph</name></name> <operator>=</operator> <name>value</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>repo_config_get_bool</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="string">"gc.writecommitgraph"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>value</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>settings</name><operator>.</operator><name>gc_write_commit_graph</name></name> <operator>=</operator> <name>value</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>UPDATE_DEFAULT_BOOL</name><argument_list>(<argument><expr><name><name>r</name><operator>-&gt;</operator><name>settings</name><operator>.</operator><name>core_commit_graph</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UPDATE_DEFAULT_BOOL</name><argument_list>(<argument><expr><name><name>r</name><operator>-&gt;</operator><name>settings</name><operator>.</operator><name>gc_write_commit_graph</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>repo_config_get_int</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="string">"index.version"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>value</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>settings</name><operator>.</operator><name>index_version</name></name> <operator>=</operator> <name>value</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>repo_config_get_maybe_bool</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="string">"core.untrackedcache"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>value</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>value</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>settings</name><operator>.</operator><name>core_untracked_cache</name></name> <operator>=</operator> <name>UNTRACKED_CACHE_REMOVE</name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>settings</name><operator>.</operator><name>core_untracked_cache</name></name> <operator>=</operator> <name>UNTRACKED_CACHE_WRITE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><operator>!</operator><call><name>repo_config_get_string</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="string">"core.untrackedcache"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>strval</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>strcasecmp</name><argument_list>(<argument><expr><name>strval</name></expr></argument>, <argument><expr><literal type="string">"keep"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>settings</name><operator>.</operator><name>core_untracked_cache</name></name> <operator>=</operator> <name>UNTRACKED_CACHE_KEEP</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>strval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>repo_config_get_string</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="string">"fetch.negotiationalgorithm"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>strval</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>strcasecmp</name><argument_list>(<argument><expr><name>strval</name></expr></argument>, <argument><expr><literal type="string">"skipping"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>settings</name><operator>.</operator><name>fetch_negotiation_algorithm</name></name> <operator>=</operator> <name>FETCH_NEGOTIATION_SKIPPING</name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>settings</name><operator>.</operator><name>fetch_negotiation_algorithm</name></name> <operator>=</operator> <name>FETCH_NEGOTIATION_DEFAULT</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>repo_config_get_bool</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="string">"pack.usesparse"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>value</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>settings</name><operator>.</operator><name>pack_use_sparse</name></name> <operator>=</operator> <name>value</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>UPDATE_DEFAULT_BOOL</name><argument_list>(<argument><expr><name><name>r</name><operator>-&gt;</operator><name>settings</name><operator>.</operator><name>pack_use_sparse</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>repo_config_get_bool</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="string">"feature.manyfiles"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>value</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name>value</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>UPDATE_DEFAULT_BOOL</name><argument_list>(<argument><expr><name><name>r</name><operator>-&gt;</operator><name>settings</name><operator>.</operator><name>index_version</name></name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UPDATE_DEFAULT_BOOL</name><argument_list>(<argument><expr><name><name>r</name><operator>-&gt;</operator><name>settings</name><operator>.</operator><name>core_untracked_cache</name></name></expr></argument>, <argument><expr><name>UNTRACKED_CACHE_WRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>repo_config_get_bool</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="string">"fetch.writecommitgraph"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>value</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>settings</name><operator>.</operator><name>fetch_write_commit_graph</name></name> <operator>=</operator> <name>value</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>repo_config_get_bool</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="string">"feature.experimental"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>value</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name>value</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>UPDATE_DEFAULT_BOOL</name><argument_list>(<argument><expr><name><name>r</name><operator>-&gt;</operator><name>settings</name><operator>.</operator><name>fetch_negotiation_algorithm</name></name></expr></argument>, <argument><expr><name>FETCH_NEGOTIATION_SKIPPING</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UPDATE_DEFAULT_BOOL</name><argument_list>(<argument><expr><name><name>r</name><operator>-&gt;</operator><name>settings</name><operator>.</operator><name>fetch_write_commit_graph</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>UPDATE_DEFAULT_BOOL</name><argument_list>(<argument><expr><name><name>r</name><operator>-&gt;</operator><name>settings</name><operator>.</operator><name>fetch_write_commit_graph</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>ignore_untracked_cache_config</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>settings</name><operator>.</operator><name>core_untracked_cache</name></name> <operator>=</operator> <name>UNTRACKED_CACHE_KEEP</name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><call><name>UPDATE_DEFAULT_BOOL</name><argument_list>(<argument><expr><name><name>r</name><operator>-&gt;</operator><name>settings</name><operator>.</operator><name>core_untracked_cache</name></name></expr></argument>, <argument><expr><name>UNTRACKED_CACHE_KEEP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><call><name>UPDATE_DEFAULT_BOOL</name><argument_list>(<argument><expr><name><name>r</name><operator>-&gt;</operator><name>settings</name><operator>.</operator><name>fetch_negotiation_algorithm</name></name></expr></argument>, <argument><expr><name>FETCH_NEGOTIATION_DEFAULT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
