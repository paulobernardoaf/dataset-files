<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats\git\trailer.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"list.h"</cpp:file></cpp:include>

<struct_decl>struct <name>strbuf</name>;</struct_decl>

<enum>enum <name>trailer_where</name> <block>{

<decl><name>WHERE_DEFAULT</name></decl>,

<decl><name>WHERE_END</name></decl>,

<decl><name>WHERE_AFTER</name></decl>,

<decl><name>WHERE_BEFORE</name></decl>,

<decl><name>WHERE_START</name></decl>

}</block>;</enum>

<enum>enum <name>trailer_if_exists</name> <block>{

<decl><name>EXISTS_DEFAULT</name></decl>,

<decl><name>EXISTS_ADD_IF_DIFFERENT_NEIGHBOR</name></decl>,

<decl><name>EXISTS_ADD_IF_DIFFERENT</name></decl>,

<decl><name>EXISTS_ADD</name></decl>,

<decl><name>EXISTS_REPLACE</name></decl>,

<decl><name>EXISTS_DO_NOTHING</name></decl>

}</block>;</enum>

<enum>enum <name>trailer_if_missing</name> <block>{

<decl><name>MISSING_DEFAULT</name></decl>,

<decl><name>MISSING_ADD</name></decl>,

<decl><name>MISSING_DO_NOTHING</name></decl>

}</block>;</enum>

<function_decl><type><name>int</name></type> <name>trailer_set_where</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>trailer_where</name></name> <modifier>*</modifier></type><name>item</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>trailer_set_if_exists</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>trailer_if_exists</name></name> <modifier>*</modifier></type><name>item</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>trailer_set_if_missing</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>trailer_if_missing</name></name> <modifier>*</modifier></type><name>item</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>)</parameter_list>;</function_decl>

<struct>struct <name>trailer_info</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>blank_line_before_trailer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>trailer_start</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>trailer_end</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>trailers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>trailer_nr</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>new_trailer_item</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>list_head</name></name></type> <name>list</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>text</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>trailer_where</name></name></type> <name>where</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>trailer_if_exists</name></name></type> <name>if_exists</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>trailer_if_missing</name></name></type> <name>if_missing</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>process_trailer_options</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>in_place</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>trim_empty</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>only_trailers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>only_input</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>unfold</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>no_divider</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>value_only</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>strbuf</name></name> <modifier>*</modifier></type><name>separator</name></decl>;</decl_stmt>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>filter</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>strbuf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>filter_data</name></decl>;</decl_stmt>

}</block>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROCESS_TRAILER_OPTIONS_INIT</name></cpp:macro> <cpp:value>{0}</cpp:value></cpp:define>

<function_decl><type><name>void</name></type> <name>process_trailers</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>process_trailer_options</name></name> <modifier>*</modifier></type><name>opts</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>list_head</name></name> <modifier>*</modifier></type><name>new_trailer_head</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>trailer_info_get</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>trailer_info</name></name> <modifier>*</modifier></type><name>info</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>process_trailer_options</name></name> <modifier>*</modifier></type><name>opts</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>trailer_info_release</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>trailer_info</name></name> <modifier>*</modifier></type><name>info</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>format_trailers_from_commit</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>strbuf</name></name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>msg</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>process_trailer_options</name></name> <modifier>*</modifier></type><name>opts</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
