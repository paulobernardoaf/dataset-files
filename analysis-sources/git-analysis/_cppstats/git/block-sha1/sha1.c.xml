<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats\git\block-sha1\sha1.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../git-compat-util.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"sha1.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__GNUC__</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>(</operator><call><name>defined</name><argument_list>(<argument><expr><name>__i386__</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>__x86_64__</name></expr></argument>)</argument_list></call><operator>)</operator></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHA_ASM</name><parameter_list>(<parameter><type><name>op</name></type></parameter>, <parameter><type><name>x</name></type></parameter>, <parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>({ unsigned int __res; __asm__(op " %1,%0":"=r" (__res):"i" (n), "0" (x)); __res; })</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHA_ROL</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SHA_ASM("rol", x, n)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHA_ROR</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SHA_ASM("ror", x, n)</cpp:value></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHA_ROT</name><parameter_list>(<parameter><type><name>X</name></type></parameter>,<parameter><type><name>l</name></type></parameter>,<parameter><type><name>r</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((X) &lt;&lt; (l)) | ((X) &gt;&gt; (r)))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHA_ROL</name><parameter_list>(<parameter><type><name>X</name></type></parameter>,<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SHA_ROT(X,n,32-(n))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHA_ROR</name><parameter_list>(<parameter><type><name>X</name></type></parameter>,<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SHA_ROT(X,32-(n),n)</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__i386__</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>__x86_64__</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>setW</name><parameter_list>(<parameter><type><name>x</name></type></parameter>, <parameter><type><name>val</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(*(volatile unsigned int *)&amp;W(x) = (val))</cpp:value></cpp:define>

<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__GNUC__</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name>defined</name><argument_list>(<argument><expr><name>__arm__</name></expr></argument>)</argument_list></call></expr></cpp:elif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>setW</name><parameter_list>(<parameter><type><name>x</name></type></parameter>, <parameter><type><name>val</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { W(x) = (val); __asm__("":::"memory"); } while (0)</cpp:value></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>setW</name><parameter_list>(<parameter><type><name>x</name></type></parameter>, <parameter><type><name>val</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(W(x) = (val))</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>W</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(array[(x)&amp;15])</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHA_SRC</name><parameter_list>(<parameter><type><name>t</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>get_be32((unsigned char *) block + (t)*4)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHA_MIX</name><parameter_list>(<parameter><type><name>t</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SHA_ROL(W((t)+13) ^ W((t)+8) ^ W((t)+2) ^ W(t), 1);</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHA_ROUND</name><parameter_list>(<parameter><type><name>t</name></type></parameter>, <parameter><type><name>input</name></type></parameter>, <parameter><type><name>fn</name></type></parameter>, <parameter><type><name>constant</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>D</name></type></parameter>, <parameter><type><name>E</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { unsigned int TEMP = input(t); setW(t, TEMP); E += TEMP + SHA_ROL(A,5) + (fn) + (constant); B = SHA_ROR(B, 2); } while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_0_15</name><parameter_list>(<parameter><type><name>t</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>D</name></type></parameter>, <parameter><type><name>E</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SHA_ROUND(t, SHA_SRC, (((C^D)&amp;B)^D) , 0x5a827999, A, B, C, D, E )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_16_19</name><parameter_list>(<parameter><type><name>t</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>D</name></type></parameter>, <parameter><type><name>E</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SHA_ROUND(t, SHA_MIX, (((C^D)&amp;B)^D) , 0x5a827999, A, B, C, D, E )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_20_39</name><parameter_list>(<parameter><type><name>t</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>D</name></type></parameter>, <parameter><type><name>E</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SHA_ROUND(t, SHA_MIX, (B^C^D) , 0x6ed9eba1, A, B, C, D, E )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_40_59</name><parameter_list>(<parameter><type><name>t</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>D</name></type></parameter>, <parameter><type><name>E</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SHA_ROUND(t, SHA_MIX, ((B&amp;C)+(D&amp;(B^C))) , 0x8f1bbcdc, A, B, C, D, E )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_60_79</name><parameter_list>(<parameter><type><name>t</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>D</name></type></parameter>, <parameter><type><name>E</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SHA_ROUND(t, SHA_MIX, (B^C^D) , 0xca62c1d6, A, B, C, D, E )</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>void</name></type> <name>blk_SHA1_Block</name><parameter_list>(<parameter><decl><type><name>blk_SHA_CTX</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>block</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>A</name></decl>,<decl><type ref="prev"/><name>B</name></decl>,<decl><type ref="prev"/><name>C</name></decl>,<decl><type ref="prev"/><name>D</name></decl>,<decl><type ref="prev"/><name>E</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name><name>array</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><name>A</name> <operator>=</operator> <name><name>ctx</name><operator>-&gt;</operator><name>H</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>B</name> <operator>=</operator> <name><name>ctx</name><operator>-&gt;</operator><name>H</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>C</name> <operator>=</operator> <name><name>ctx</name><operator>-&gt;</operator><name>H</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>D</name> <operator>=</operator> <name><name>ctx</name><operator>-&gt;</operator><name>H</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>E</name> <operator>=</operator> <name><name>ctx</name><operator>-&gt;</operator><name>H</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_0_15</name><argument_list>( <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_0_15</name><argument_list>( <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_0_15</name><argument_list>( <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_0_15</name><argument_list>( <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_0_15</name><argument_list>( <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_0_15</name><argument_list>( <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_0_15</name><argument_list>( <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_0_15</name><argument_list>( <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_0_15</name><argument_list>( <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_0_15</name><argument_list>( <argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_0_15</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_0_15</name><argument_list>(<argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_0_15</name><argument_list>(<argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_0_15</name><argument_list>(<argument><expr><literal type="number">13</literal></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_0_15</name><argument_list>(<argument><expr><literal type="number">14</literal></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_0_15</name><argument_list>(<argument><expr><literal type="number">15</literal></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_16_19</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_16_19</name><argument_list>(<argument><expr><literal type="number">17</literal></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_16_19</name><argument_list>(<argument><expr><literal type="number">18</literal></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_16_19</name><argument_list>(<argument><expr><literal type="number">19</literal></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_20_39</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_20_39</name><argument_list>(<argument><expr><literal type="number">21</literal></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_20_39</name><argument_list>(<argument><expr><literal type="number">22</literal></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_20_39</name><argument_list>(<argument><expr><literal type="number">23</literal></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_20_39</name><argument_list>(<argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_20_39</name><argument_list>(<argument><expr><literal type="number">25</literal></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_20_39</name><argument_list>(<argument><expr><literal type="number">26</literal></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_20_39</name><argument_list>(<argument><expr><literal type="number">27</literal></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_20_39</name><argument_list>(<argument><expr><literal type="number">28</literal></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_20_39</name><argument_list>(<argument><expr><literal type="number">29</literal></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_20_39</name><argument_list>(<argument><expr><literal type="number">30</literal></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_20_39</name><argument_list>(<argument><expr><literal type="number">31</literal></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_20_39</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_20_39</name><argument_list>(<argument><expr><literal type="number">33</literal></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_20_39</name><argument_list>(<argument><expr><literal type="number">34</literal></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_20_39</name><argument_list>(<argument><expr><literal type="number">35</literal></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_20_39</name><argument_list>(<argument><expr><literal type="number">36</literal></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_20_39</name><argument_list>(<argument><expr><literal type="number">37</literal></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_20_39</name><argument_list>(<argument><expr><literal type="number">38</literal></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_20_39</name><argument_list>(<argument><expr><literal type="number">39</literal></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_40_59</name><argument_list>(<argument><expr><literal type="number">40</literal></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_40_59</name><argument_list>(<argument><expr><literal type="number">41</literal></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_40_59</name><argument_list>(<argument><expr><literal type="number">42</literal></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_40_59</name><argument_list>(<argument><expr><literal type="number">43</literal></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_40_59</name><argument_list>(<argument><expr><literal type="number">44</literal></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_40_59</name><argument_list>(<argument><expr><literal type="number">45</literal></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_40_59</name><argument_list>(<argument><expr><literal type="number">46</literal></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_40_59</name><argument_list>(<argument><expr><literal type="number">47</literal></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_40_59</name><argument_list>(<argument><expr><literal type="number">48</literal></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_40_59</name><argument_list>(<argument><expr><literal type="number">49</literal></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_40_59</name><argument_list>(<argument><expr><literal type="number">50</literal></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_40_59</name><argument_list>(<argument><expr><literal type="number">51</literal></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_40_59</name><argument_list>(<argument><expr><literal type="number">52</literal></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_40_59</name><argument_list>(<argument><expr><literal type="number">53</literal></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_40_59</name><argument_list>(<argument><expr><literal type="number">54</literal></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_40_59</name><argument_list>(<argument><expr><literal type="number">55</literal></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_40_59</name><argument_list>(<argument><expr><literal type="number">56</literal></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_40_59</name><argument_list>(<argument><expr><literal type="number">57</literal></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_40_59</name><argument_list>(<argument><expr><literal type="number">58</literal></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_40_59</name><argument_list>(<argument><expr><literal type="number">59</literal></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_60_79</name><argument_list>(<argument><expr><literal type="number">60</literal></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_60_79</name><argument_list>(<argument><expr><literal type="number">61</literal></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_60_79</name><argument_list>(<argument><expr><literal type="number">62</literal></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_60_79</name><argument_list>(<argument><expr><literal type="number">63</literal></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_60_79</name><argument_list>(<argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_60_79</name><argument_list>(<argument><expr><literal type="number">65</literal></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_60_79</name><argument_list>(<argument><expr><literal type="number">66</literal></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_60_79</name><argument_list>(<argument><expr><literal type="number">67</literal></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_60_79</name><argument_list>(<argument><expr><literal type="number">68</literal></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_60_79</name><argument_list>(<argument><expr><literal type="number">69</literal></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_60_79</name><argument_list>(<argument><expr><literal type="number">70</literal></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_60_79</name><argument_list>(<argument><expr><literal type="number">71</literal></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_60_79</name><argument_list>(<argument><expr><literal type="number">72</literal></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_60_79</name><argument_list>(<argument><expr><literal type="number">73</literal></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_60_79</name><argument_list>(<argument><expr><literal type="number">74</literal></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_60_79</name><argument_list>(<argument><expr><literal type="number">75</literal></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_60_79</name><argument_list>(<argument><expr><literal type="number">76</literal></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_60_79</name><argument_list>(<argument><expr><literal type="number">77</literal></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_60_79</name><argument_list>(<argument><expr><literal type="number">78</literal></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>, <argument><expr><name>B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>T_60_79</name><argument_list>(<argument><expr><literal type="number">79</literal></expr></argument>, <argument><expr><name>B</name></expr></argument>, <argument><expr><name>C</name></expr></argument>, <argument><expr><name>D</name></expr></argument>, <argument><expr><name>E</name></expr></argument>, <argument><expr><name>A</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>H</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+=</operator> <name>A</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>H</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+=</operator> <name>B</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>H</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>+=</operator> <name>C</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>H</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>+=</operator> <name>D</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>H</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>+=</operator> <name>E</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>blk_SHA1_Init</name><parameter_list>(<parameter><decl><type><name>blk_SHA_CTX</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>size</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>H</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0x67452301</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>H</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0xefcdab89</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>H</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0x98badcfe</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>H</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0x10325476</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>H</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0xc3d2e1f0</literal></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>blk_SHA1_Update</name><parameter_list>(<parameter><decl><type><name>blk_SHA_CTX</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>long</name></type> <name>len</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>lenW</name> <init>= <expr><name><name>ctx</name><operator>-&gt;</operator><name>size</name></name> <operator>&amp;</operator> <literal type="number">63</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>size</name></name> <operator>+=</operator> <name>len</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>lenW</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>left</name> <init>= <expr><literal type="number">64</literal> <operator>-</operator> <name>lenW</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>len</name> <operator>&lt;</operator> <name>left</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>left</name> <operator>=</operator> <name>len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>lenW</name> <operator>+</operator> <operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><name><name>ctx</name><operator>-&gt;</operator><name>W</name></name></expr></argument>, <argument><expr><name>data</name></expr></argument>, <argument><expr><name>left</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>lenW</name> <operator>=</operator> <operator>(</operator><name>lenW</name> <operator>+</operator> <name>left</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">63</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>len</name> <operator>-=</operator> <name>left</name></expr>;</expr_stmt>

<expr_stmt><expr><name>data</name> <operator>=</operator> <operator>(</operator><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><name>data</name> <operator>+</operator> <name>left</name><operator>)</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>lenW</name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>blk_SHA1_Block</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name><name>ctx</name><operator>-&gt;</operator><name>W</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<while>while <condition>(<expr><name>len</name> <operator>&gt;=</operator> <literal type="number">64</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>blk_SHA1_Block</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>data</name> <operator>=</operator> <operator>(</operator><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><name>data</name> <operator>+</operator> <literal type="number">64</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>len</name> <operator>-=</operator> <literal type="number">64</literal></expr>;</expr_stmt>

</block_content>}</block></while>

<if_stmt><if>if <condition>(<expr><name>len</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name><name>ctx</name><operator>-&gt;</operator><name>W</name></name></expr></argument>, <argument><expr><name>data</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>blk_SHA1_Final</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name></type> <name><name>hashout</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>blk_SHA_CTX</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name></type> <name><name>pad</name><index>[<expr><literal type="number">64</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0x80</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name><name>padlen</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>padlen</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <call><name>htonl</name><argument_list>(<argument><expr><operator>(</operator><name>uint32_t</name><operator>)</operator><operator>(</operator><name><name>ctx</name><operator>-&gt;</operator><name>size</name></name> <operator>&gt;&gt;</operator> <literal type="number">29</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>padlen</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <call><name>htonl</name><argument_list>(<argument><expr><operator>(</operator><name>uint32_t</name><operator>)</operator><operator>(</operator><name><name>ctx</name><operator>-&gt;</operator><name>size</name></name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i</name> <operator>=</operator> <name><name>ctx</name><operator>-&gt;</operator><name>size</name></name> <operator>&amp;</operator> <literal type="number">63</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>blk_SHA1_Update</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>pad</name></expr></argument>, <argument><expr><literal type="number">1</literal> <operator>+</operator> <operator>(</operator><literal type="number">63</literal> <operator>&amp;</operator> <operator>(</operator><literal type="number">55</literal> <operator>-</operator> <name>i</name><operator>)</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>blk_SHA1_Update</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>padlen</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">5</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>put_be32</name><argument_list>(<argument><expr><name>hashout</name> <operator>+</operator> <name>i</name> <operator>*</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name><name>ctx</name><operator>-&gt;</operator><name>H</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

</block_content>}</block></function>

</unit>
