<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\git-analysis\_cppstats\git\attr.h"><struct_decl>struct <name>index_state</name>;</struct_decl>

<struct_decl>struct <name>git_attr</name>;</struct_decl>

<struct_decl>struct <name>all_attrs_item</name>;</struct_decl>

<struct_decl>struct <name>attr_stack</name>;</struct_decl>

<struct_decl>struct <name>index_state</name>;</struct_decl>

<function_decl><type><specifier>const</specifier> <name><name>struct</name> <name>git_attr</name></name> <modifier>*</modifier></type><name>git_attr</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name></type> <name><name>git_attr__true</name><index>[]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name></type> <name><name>git_attr__false</name><index>[]</index></name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ATTR_TRUE</name><parameter_list>(<parameter><type><name>v</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((v) == git_attr__true)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ATTR_FALSE</name><parameter_list>(<parameter><type><name>v</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((v) == git_attr__false)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ATTR_UNSET</name><parameter_list>(<parameter><type><name>v</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((v) == NULL)</cpp:value></cpp:define>

<struct>struct <name>attr_check_item</name> <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>git_attr</name></name> <modifier>*</modifier></type><name>attr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>attr_check</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>nr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>alloc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>attr_check_item</name></name> <modifier>*</modifier></type><name>items</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>all_attrs_nr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>all_attrs_item</name></name> <modifier>*</modifier></type><name>all_attrs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>attr_stack</name></name> <modifier>*</modifier></type><name>stack</name></decl>;</decl_stmt>

}</block>;</struct>

<function_decl><type><name><name>struct</name> <name>attr_check</name></name> <modifier>*</modifier></type><name>attr_check_alloc</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>attr_check</name></name> <modifier>*</modifier></type><name>attr_check_initl</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>attr_check</name></name> <modifier>*</modifier></type><name>attr_check_dup</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>attr_check</name></name> <modifier>*</modifier></type><name>check</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>attr_check_item</name></name> <modifier>*</modifier></type><name>attr_check_append</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>attr_check</name></name> <modifier>*</modifier></type><name>check</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>git_attr</name></name> <modifier>*</modifier></type><name>attr</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>attr_check_reset</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>attr_check</name></name> <modifier>*</modifier></type><name>check</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>attr_check_clear</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>attr_check</name></name> <modifier>*</modifier></type><name>check</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>attr_check_free</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>attr_check</name></name> <modifier>*</modifier></type><name>check</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>git_attr_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>git_attr</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>git_check_attr</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>index_state</name></name> <modifier>*</modifier></type><name>istate</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>attr_check</name></name> <modifier>*</modifier></type><name>check</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>git_all_attrs</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>index_state</name></name> <modifier>*</modifier></type><name>istate</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>attr_check</name></name> <modifier>*</modifier></type><name>check</name></decl></parameter>)</parameter_list>;</function_decl>

<enum>enum <name>git_attr_direction</name> <block>{

<decl><name>GIT_ATTR_CHECKIN</name></decl>,

<decl><name>GIT_ATTR_CHECKOUT</name></decl>,

<decl><name>GIT_ATTR_INDEX</name></decl>

}</block>;</enum>

<function_decl><type><name>void</name></type> <name>git_attr_set_direction</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>git_attr_direction</name></name></type> <name>new_direction</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>attr_start</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

</unit>
