


#include "cache.h"
#include "dir.h"

extern struct trace_key trace_fsmonitor;





int read_fsmonitor_extension(struct index_state *istate, const void *data, unsigned long sz);





void fill_fsmonitor_bitmap(struct index_state *istate);





void write_fsmonitor_extension(struct strbuf *sb, struct index_state *istate);




void add_fsmonitor(struct index_state *istate);
void remove_fsmonitor(struct index_state *istate);





void tweak_fsmonitor(struct index_state *istate);







void refresh_fsmonitor(struct index_state *istate);






static inline void mark_fsmonitor_valid(struct index_state *istate, struct cache_entry *ce)
{
if (core_fsmonitor && !(ce->ce_flags & CE_FSMONITOR_VALID)) {
istate->cache_changed = 1;
ce->ce_flags |= CE_FSMONITOR_VALID;
trace_printf_key(&trace_fsmonitor, "mark_fsmonitor_clean '%s'", ce->name);
}
}








static inline void mark_fsmonitor_invalid(struct index_state *istate, struct cache_entry *ce)
{
if (core_fsmonitor) {
ce->ce_flags &= ~CE_FSMONITOR_VALID;
untracked_cache_invalidate_path(istate, ce->name, 1);
trace_printf_key(&trace_fsmonitor, "mark_fsmonitor_invalid '%s'", ce->name);
}
}


