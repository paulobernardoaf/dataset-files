<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\_cppstats\vim\src\term.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>SASC</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name>SASC</name> <operator>&lt;</operator> <literal type="number">658</literal></expr></cpp:if>

<typedef>typedef <type><name>unsigned</name> <name>char</name></type> <name>char_u</name>;</typedef>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<enum>enum <name>SpecialKey</name>

<block>{

<decl><name>KS_NAME</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>KS_CE</name></decl>, 

<decl><name>KS_AL</name></decl>, 

<decl><name>KS_CAL</name></decl>, 

<decl><name>KS_DL</name></decl>, 

<decl><name>KS_CDL</name></decl>, 

<decl><name>KS_CS</name></decl>, 

<decl><name>KS_CL</name></decl>, 

<decl><name>KS_CD</name></decl>, 

<decl><name>KS_UT</name></decl>, 

<decl><name>KS_DA</name></decl>, 

<decl><name>KS_DB</name></decl>, 

<decl><name>KS_VI</name></decl>, 

<decl><name>KS_VE</name></decl>, 

<decl><name>KS_VS</name></decl>, 

<decl><name>KS_CVS</name></decl>, 

<decl><name>KS_CSH</name></decl>, 

<decl><name>KS_CRC</name></decl>, 

<decl><name>KS_CRS</name></decl>, 

<decl><name>KS_ME</name></decl>, 

<decl><name>KS_MR</name></decl>, 

<decl><name>KS_MD</name></decl>, 

<decl><name>KS_SE</name></decl>, 

<decl><name>KS_SO</name></decl>, 

<decl><name>KS_CZH</name></decl>, 

<decl><name>KS_CZR</name></decl>, 

<decl><name>KS_UE</name></decl>, 

<decl><name>KS_US</name></decl>, 

<decl><name>KS_UCE</name></decl>, 

<decl><name>KS_UCS</name></decl>, 

<decl><name>KS_STE</name></decl>, 

<decl><name>KS_STS</name></decl>, 

<decl><name>KS_MS</name></decl>, 

<decl><name>KS_CM</name></decl>, 

<decl><name>KS_SR</name></decl>, 

<decl><name>KS_CRI</name></decl>, 

<decl><name>KS_VB</name></decl>, 

<decl><name>KS_KS</name></decl>, 

<decl><name>KS_KE</name></decl>, 

<decl><name>KS_TI</name></decl>, 

<decl><name>KS_CTI</name></decl>, 

<decl><name>KS_TE</name></decl>, 

<decl><name>KS_CTE</name></decl>, 

<decl><name>KS_BC</name></decl>, 

<decl><name>KS_CCS</name></decl>, 

<decl><name>KS_CCO</name></decl>, 

<decl><name>KS_CSF</name></decl>, 

<decl><name>KS_CSB</name></decl>, 

<decl><name>KS_XS</name></decl>, 

<decl><name>KS_XN</name></decl>, 

<decl><name>KS_MB</name></decl>, 

<decl><name>KS_CAF</name></decl>, 

<decl><name>KS_CAB</name></decl>, 

<decl><name>KS_LE</name></decl>, 

<decl><name>KS_ND</name></decl>, 

<decl><name>KS_CIS</name></decl>, 

<decl><name>KS_CIE</name></decl>, 

<decl><name>KS_CSC</name></decl>, 

<decl><name>KS_CEC</name></decl>, 

<decl><name>KS_TS</name></decl>, 

<decl><name>KS_FS</name></decl>, 

<decl><name>KS_CWP</name></decl>, 

<decl><name>KS_CGP</name></decl>, 

<decl><name>KS_CWS</name></decl>, 

<decl><name>KS_CRV</name></decl>, 

<decl><name>KS_RFG</name></decl>, 

<decl><name>KS_RBG</name></decl>, 

<decl><name>KS_CSI</name></decl>, 

<decl><name>KS_CEI</name></decl>, 

<decl><name>KS_CSR</name></decl>, 

<decl><name>KS_CSV</name></decl>, 

<decl><name>KS_OP</name></decl>, 

<decl><name>KS_U7</name></decl>, 

<decl><name>KS_8F</name></decl>, 

<decl><name>KS_8B</name></decl>, 

<decl><name>KS_CBE</name></decl>, 

<decl><name>KS_CBD</name></decl>, 

<decl><name>KS_CPS</name></decl>, 

<decl><name>KS_CPE</name></decl>, 

<decl><name>KS_CST</name></decl>, 

<decl><name>KS_CRT</name></decl>, 

<decl><name>KS_SSI</name></decl>, 

<decl><name>KS_SRI</name></decl> 

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KS_LAST</name></cpp:macro> <cpp:value>KS_SRI</cpp:value></cpp:define>

<extern>extern char_u *(term_strings[]</extern>)<empty_stmt>;</empty_stmt> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_NAME</name></cpp:macro> <cpp:value>(TERM_STR(KS_NAME))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CE</name></cpp:macro> <cpp:value>(TERM_STR(KS_CE))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_AL</name></cpp:macro> <cpp:value>(TERM_STR(KS_AL))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CAL</name></cpp:macro> <cpp:value>(TERM_STR(KS_CAL))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_DL</name></cpp:macro> <cpp:value>(TERM_STR(KS_DL))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CDL</name></cpp:macro> <cpp:value>(TERM_STR(KS_CDL))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CS</name></cpp:macro> <cpp:value>(TERM_STR(KS_CS))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CSV</name></cpp:macro> <cpp:value>(TERM_STR(KS_CSV))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CL</name></cpp:macro> <cpp:value>(TERM_STR(KS_CL))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CD</name></cpp:macro> <cpp:value>(TERM_STR(KS_CD))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_UT</name></cpp:macro> <cpp:value>(TERM_STR(KS_UT))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_DA</name></cpp:macro> <cpp:value>(TERM_STR(KS_DA))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_DB</name></cpp:macro> <cpp:value>(TERM_STR(KS_DB))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_VI</name></cpp:macro> <cpp:value>(TERM_STR(KS_VI))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_VE</name></cpp:macro> <cpp:value>(TERM_STR(KS_VE))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_VS</name></cpp:macro> <cpp:value>(TERM_STR(KS_VS))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CVS</name></cpp:macro> <cpp:value>(TERM_STR(KS_CVS))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CSH</name></cpp:macro> <cpp:value>(TERM_STR(KS_CSH))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CRC</name></cpp:macro> <cpp:value>(TERM_STR(KS_CRC))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CRS</name></cpp:macro> <cpp:value>(TERM_STR(KS_CRS))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_ME</name></cpp:macro> <cpp:value>(TERM_STR(KS_ME))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_MR</name></cpp:macro> <cpp:value>(TERM_STR(KS_MR))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_MD</name></cpp:macro> <cpp:value>(TERM_STR(KS_MD))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_SE</name></cpp:macro> <cpp:value>(TERM_STR(KS_SE))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_SO</name></cpp:macro> <cpp:value>(TERM_STR(KS_SO))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CZH</name></cpp:macro> <cpp:value>(TERM_STR(KS_CZH))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CZR</name></cpp:macro> <cpp:value>(TERM_STR(KS_CZR))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_UE</name></cpp:macro> <cpp:value>(TERM_STR(KS_UE))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_US</name></cpp:macro> <cpp:value>(TERM_STR(KS_US))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_UCE</name></cpp:macro> <cpp:value>(TERM_STR(KS_UCE))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_UCS</name></cpp:macro> <cpp:value>(TERM_STR(KS_UCS))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_STE</name></cpp:macro> <cpp:value>(TERM_STR(KS_STE))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_STS</name></cpp:macro> <cpp:value>(TERM_STR(KS_STS))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_MS</name></cpp:macro> <cpp:value>(TERM_STR(KS_MS))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CM</name></cpp:macro> <cpp:value>(TERM_STR(KS_CM))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_SR</name></cpp:macro> <cpp:value>(TERM_STR(KS_SR))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CRI</name></cpp:macro> <cpp:value>(TERM_STR(KS_CRI))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_VB</name></cpp:macro> <cpp:value>(TERM_STR(KS_VB))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_KS</name></cpp:macro> <cpp:value>(TERM_STR(KS_KS))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_KE</name></cpp:macro> <cpp:value>(TERM_STR(KS_KE))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_TI</name></cpp:macro> <cpp:value>(TERM_STR(KS_TI))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CTI</name></cpp:macro> <cpp:value>(TERM_STR(KS_CTI))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_TE</name></cpp:macro> <cpp:value>(TERM_STR(KS_TE))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CTE</name></cpp:macro> <cpp:value>(TERM_STR(KS_CTE))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_BC</name></cpp:macro> <cpp:value>(TERM_STR(KS_BC))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CCS</name></cpp:macro> <cpp:value>(TERM_STR(KS_CCS))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CCO</name></cpp:macro> <cpp:value>(TERM_STR(KS_CCO))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CSF</name></cpp:macro> <cpp:value>(TERM_STR(KS_CSF))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CSB</name></cpp:macro> <cpp:value>(TERM_STR(KS_CSB))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_XS</name></cpp:macro> <cpp:value>(TERM_STR(KS_XS))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_XN</name></cpp:macro> <cpp:value>(TERM_STR(KS_XN))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_MB</name></cpp:macro> <cpp:value>(TERM_STR(KS_MB))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CAF</name></cpp:macro> <cpp:value>(TERM_STR(KS_CAF))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CAB</name></cpp:macro> <cpp:value>(TERM_STR(KS_CAB))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_LE</name></cpp:macro> <cpp:value>(TERM_STR(KS_LE))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_ND</name></cpp:macro> <cpp:value>(TERM_STR(KS_ND))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CIS</name></cpp:macro> <cpp:value>(TERM_STR(KS_CIS))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CIE</name></cpp:macro> <cpp:value>(TERM_STR(KS_CIE))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_TS</name></cpp:macro> <cpp:value>(TERM_STR(KS_TS))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_FS</name></cpp:macro> <cpp:value>(TERM_STR(KS_FS))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CSC</name></cpp:macro> <cpp:value>(TERM_STR(KS_CSC))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CEC</name></cpp:macro> <cpp:value>(TERM_STR(KS_CEC))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CWP</name></cpp:macro> <cpp:value>(TERM_STR(KS_CWP))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CGP</name></cpp:macro> <cpp:value>(TERM_STR(KS_CGP))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CWS</name></cpp:macro> <cpp:value>(TERM_STR(KS_CWS))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CSI</name></cpp:macro> <cpp:value>(TERM_STR(KS_CSI))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CEI</name></cpp:macro> <cpp:value>(TERM_STR(KS_CEI))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CSR</name></cpp:macro> <cpp:value>(TERM_STR(KS_CSR))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CRV</name></cpp:macro> <cpp:value>(TERM_STR(KS_CRV))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_RFG</name></cpp:macro> <cpp:value>(TERM_STR(KS_RFG))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_RBG</name></cpp:macro> <cpp:value>(TERM_STR(KS_RBG))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_OP</name></cpp:macro> <cpp:value>(TERM_STR(KS_OP))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_U7</name></cpp:macro> <cpp:value>(TERM_STR(KS_U7))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_8F</name></cpp:macro> <cpp:value>(TERM_STR(KS_8F))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_8B</name></cpp:macro> <cpp:value>(TERM_STR(KS_8B))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_BE</name></cpp:macro> <cpp:value>(TERM_STR(KS_CBE))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_BD</name></cpp:macro> <cpp:value>(TERM_STR(KS_CBD))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_PS</name></cpp:macro> <cpp:value>(TERM_STR(KS_CPS))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_PE</name></cpp:macro> <cpp:value>(TERM_STR(KS_CPE))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CST</name></cpp:macro> <cpp:value>(TERM_STR(KS_CST))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_CRT</name></cpp:macro> <cpp:value>(TERM_STR(KS_CRT))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_SSI</name></cpp:macro> <cpp:value>(TERM_STR(KS_SSI))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T_SRI</name></cpp:macro> <cpp:value>(TERM_STR(KS_SRI))</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TMODE_COOK</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TMODE_SLEEP</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TMODE_RAW</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 

</unit>
