<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\_cppstats\vim\src\xpm_w32.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>WIN32_LEAN_AND_MEAN</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WIN32_LEAN_AND_MEAN</name></cpp:macro></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;windows.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"xpm_w32.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FOR_MSW</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"xpm.h"</cpp:file></cpp:include>

<function><type><name>int</name></type>

<name>LoadXpmImage</name><parameter_list>(

<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>,

<parameter><decl><type><name>HBITMAP</name> <modifier>*</modifier></type><name>hImage</name></decl></parameter>,

<parameter><decl><type><name>HBITMAP</name> <modifier>*</modifier></type><name>hShape</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>XImage</name> <modifier>*</modifier></type><name>img</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>XImage</name> <modifier>*</modifier></type><name>shp</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>XpmAttributes</name></type> <name>attr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>res</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>HDC</name></type> <name>hdc</name> <init>= <expr><call><name>CreateCompatibleDC</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>attr</name><operator>.</operator><name>valuemask</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>XpmReadFileToImage</name><argument_list>(<argument><expr><operator>&amp;</operator><name>hdc</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>img</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>shp</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>attr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DeleteDC</name><argument_list>(<argument><expr><name>hdc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>res</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>shp</name> <operator>==</operator> <name>NULL</name></expr>)</condition>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>img</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>XDestroyImage</name><argument_list>(<argument><expr><name>img</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><operator>*</operator><name>hImage</name> <operator>=</operator> <name><name>img</name><operator>-&gt;</operator><name>bitmap</name></name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>hShape</name> <operator>=</operator> <name><name>shp</name><operator>-&gt;</operator><name>bitmap</name></name></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

</unit>
