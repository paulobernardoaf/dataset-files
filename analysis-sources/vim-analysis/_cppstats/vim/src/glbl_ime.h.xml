<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\_cppstats\vim\src\glbl_ime.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>GLOBAL_IME</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_INC_GLOBAL_IME</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_INC_GLOBAL_IME</name></cpp:macro></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>void</name></type> <name>global_ime_init</name><parameter_list>(<parameter><decl><type><name>ATOM</name></type></decl></parameter>, <parameter><decl><type><name>HWND</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>global_ime_end</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>LRESULT</name> <name>WINAPI</name></type> <name>global_ime_DefWindowProc</name><parameter_list>(<parameter><decl><type><name>HWND</name></type></decl></parameter>, <parameter><decl><type><name>UINT</name></type></decl></parameter>, <parameter><decl><type><name>WPARAM</name></type></decl></parameter>, <parameter><decl><type><name>LPARAM</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>BOOL</name> <name>WINAPI</name></type> <name>global_ime_TranslateMessage</name><parameter_list>(<parameter><decl><type><name>CONST</name> <name>MSG</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name> <name>WINAPI</name></type> <name>global_ime_set_position</name><parameter_list>(<parameter><decl><type><name>POINT</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name> <name>WINAPI</name></type> <name>global_ime_set_font</name><parameter_list>(<parameter><decl><type><name>LOGFONT</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>

void WINAPI global_ime_status_evacuate(void);

void WINAPI global_ime_status_restore(void);

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>void</name> <name>WINAPI</name></type> <name>global_ime_set_status</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>status</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name> <name>WINAPI</name></type> <name>global_ime_get_status</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

</unit>
