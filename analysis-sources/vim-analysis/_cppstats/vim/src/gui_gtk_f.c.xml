<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\_cppstats\vim\src\gui_gtk_f.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vim.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;gtk/gtk.h&gt;</cpp:file></cpp:include> 

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gui_gtk_f.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;gtk/gtksignal.h&gt;</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>MSWIN</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;gdk/gdkwin32.h&gt;</cpp:file></cpp:include>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;gdk/gdkx.h&gt;</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><name><name>struct</name> <name>_GtkFormChild</name></name></type> <name>GtkFormChild</name>;</typedef>

<struct>struct <name>_GtkFormChild</name>

<block>{

<decl_stmt><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GdkWindow</name> <modifier>*</modifier></type><name>window</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>gint</name></type> <name>x</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>gint</name></type> <name>y</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>gint</name></type> <name>mapped</name></decl>;</decl_stmt>

}</block>;</struct>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>gtk_form_class_init</name><parameter_list>(<parameter><decl><type><name>GtkFormClass</name> <modifier>*</modifier></type><name>klass</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>gtk_form_init</name><parameter_list>(<parameter><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>gtk_form_realize</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>gtk_form_unrealize</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>gtk_form_map</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>gtk_form_size_request</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>,

<parameter><decl><type><name>GtkRequisition</name> <modifier>*</modifier></type><name>requisition</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>gtk_form_get_preferred_width</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>,

<parameter><decl><type><name>gint</name> <modifier>*</modifier></type><name>minimal_width</name></decl></parameter>,

<parameter><decl><type><name>gint</name> <modifier>*</modifier></type><name>natural_width</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>gtk_form_get_preferred_height</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>,

<parameter><decl><type><name>gint</name> <modifier>*</modifier></type><name>minimal_height</name></decl></parameter>,

<parameter><decl><type><name>gint</name> <modifier>*</modifier></type><name>natural_height</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>gtk_form_size_allocate</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>,

<parameter><decl><type><name>GtkAllocation</name> <modifier>*</modifier></type><name>allocation</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<function_decl><type><specifier>static</specifier> <name>gboolean</name></type> <name>gtk_form_draw</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>,

<parameter><decl><type><name>cairo_t</name> <modifier>*</modifier></type><name>cr</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<function_decl><type><specifier>static</specifier> <name>gint</name></type> <name>gtk_form_expose</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>,

<parameter><decl><type><name>GdkEventExpose</name> <modifier>*</modifier></type><name>event</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>gtk_form_remove</name><parameter_list>(<parameter><decl><type><name>GtkContainer</name> <modifier>*</modifier></type><name>container</name></decl></parameter>,

<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>gtk_form_forall</name><parameter_list>(<parameter><decl><type><name>GtkContainer</name> <modifier>*</modifier></type><name>container</name></decl></parameter>,

<parameter><decl><type><name>gboolean</name></type> <name>include_internals</name></decl></parameter>,

<parameter><decl><type><name>GtkCallback</name></type> <name>callback</name></decl></parameter>,

<parameter><decl><type><name>gpointer</name></type> <name>callback_data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>gtk_form_attach_child_window</name><parameter_list>(<parameter><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name></decl></parameter>,

<parameter><decl><type><name>GtkFormChild</name> <modifier>*</modifier></type><name>child</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>gtk_form_realize_child</name><parameter_list>(<parameter><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name></decl></parameter>,

<parameter><decl><type><name>GtkFormChild</name> <modifier>*</modifier></type><name>child</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>gtk_form_position_child</name><parameter_list>(<parameter><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name></decl></parameter>,

<parameter><decl><type><name>GtkFormChild</name> <modifier>*</modifier></type><name>child</name></decl></parameter>,

<parameter><decl><type><name>gboolean</name></type> <name>force_allocate</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>gtk_form_position_children</name><parameter_list>(<parameter><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>gtk_form_send_configure</name><parameter_list>(<parameter><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>gtk_form_child_map</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>, <parameter><decl><type><name>gpointer</name></type> <name>user_data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>gtk_form_child_unmap</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>, <parameter><decl><type><name>gpointer</name></type> <name>user_data</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<decl_stmt><decl><type><specifier>static</specifier> <name>GtkWidgetClass</name> <modifier>*</modifier></type><name>parent_class</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><name>GtkWidget</name> <modifier>*</modifier></type>

<name>gtk_form_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><name>form</name> <operator>=</operator> <call><name>g_object_new</name><argument_list>(<argument><expr><name>GTK_TYPE_FORM</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<expr_stmt><expr><name>form</name> <operator>=</operator> <call><name>gtk_type_new</name><argument_list>(<argument><expr><call><name>gtk_form_get_type</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<return>return <expr><call><name>GTK_WIDGET</name><argument_list>(<argument><expr><name>form</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type>

<name>gtk_form_put</name><parameter_list>(<parameter><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name></decl></parameter>,

<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>child_widget</name></decl></parameter>,

<parameter><decl><type><name>gint</name></type> <name>x</name></decl></parameter>,

<parameter><decl><type><name>gint</name></type> <name>y</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GtkFormChild</name> <modifier>*</modifier></type><name>child</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>g_return_if_fail</name><argument_list>(<argument><expr><call><name>GTK_IS_FORM</name><argument_list>(<argument><expr><name>form</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>child</name> <operator>=</operator> <call><name>g_new</name><argument_list>(<argument><expr><name>GtkFormChild</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>child</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name> <operator>=</operator> <name>child_widget</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>child</name><operator>-&gt;</operator><name>window</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>child</name><operator>-&gt;</operator><name>x</name></name> <operator>=</operator> <name>x</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>child</name><operator>-&gt;</operator><name>y</name></name> <operator>=</operator> <name>y</name></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>gtk_widget_set_size_request</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<expr_stmt><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name><operator>-&gt;</operator><name>requisition</name><operator>.</operator><name>width</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name><operator>-&gt;</operator><name>requisition</name><operator>.</operator><name>height</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><name><name>child</name><operator>-&gt;</operator><name>mapped</name></name> <operator>=</operator> <name>FALSE</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>form</name><operator>-&gt;</operator><name>children</name></name> <operator>=</operator> <call><name>g_list_append</name><argument_list>(<argument><expr><name><name>form</name><operator>-&gt;</operator><name>children</name></name></expr></argument>, <argument><expr><name>child</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>gtk_widget_get_realized</name><argument_list>(<argument><expr><call><name>GTK_WIDGET</name><argument_list>(<argument><expr><name>form</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>gtk_form_attach_child_window</name><argument_list>(<argument><expr><name>form</name></expr></argument>, <argument><expr><name>child</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>gtk_widget_set_parent</name><argument_list>(<argument><expr><name>child_widget</name></expr></argument>, <argument><expr><call><name>GTK_WIDGET</name><argument_list>(<argument><expr><name>form</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>gtk_widget_get_realized</name><argument_list>(<argument><expr><call><name>GTK_WIDGET</name><argument_list>(<argument><expr><name>form</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>

<operator>&amp;&amp;</operator> <operator>!</operator><call><name>gtk_widget_get_realized</name><argument_list>(<argument><expr><name>child_widget</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>gtk_form_realize_child</name><argument_list>(<argument><expr><name>form</name></expr></argument>, <argument><expr><name>child</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>gtk_form_position_child</name><argument_list>(<argument><expr><name>form</name></expr></argument>, <argument><expr><name>child</name></expr></argument>, <argument><expr><name>TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type>

<name>gtk_form_move</name><parameter_list>(<parameter><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name></decl></parameter>,

<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>child_widget</name></decl></parameter>,

<parameter><decl><type><name>gint</name></type> <name>x</name></decl></parameter>,

<parameter><decl><type><name>gint</name></type> <name>y</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GList</name> <modifier>*</modifier></type><name>tmp_list</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GtkFormChild</name> <modifier>*</modifier></type><name>child</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>g_return_if_fail</name><argument_list>(<argument><expr><call><name>GTK_IS_FORM</name><argument_list>(<argument><expr><name>form</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>tmp_list</name> <operator>=</operator> <name><name>form</name><operator>-&gt;</operator><name>children</name></name></expr>;</init> <condition><expr><name>tmp_list</name></expr>;</condition> <incr><expr><name>tmp_list</name> <operator>=</operator> <name><name>tmp_list</name><operator>-&gt;</operator><name>next</name></name></expr></incr>)</control>

<block>{<block_content>

<expr_stmt><expr><name>child</name> <operator>=</operator> <name><name>tmp_list</name><operator>-&gt;</operator><name>data</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name> <operator>==</operator> <name>child_widget</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>child</name><operator>-&gt;</operator><name>x</name></name> <operator>=</operator> <name>x</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>child</name><operator>-&gt;</operator><name>y</name></name> <operator>=</operator> <name>y</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_form_position_child</name><argument_list>(<argument><expr><name>form</name></expr></argument>, <argument><expr><name>child</name></expr></argument>, <argument><expr><name>TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><name>void</name></type>

<name>gtk_form_freeze</name><parameter_list>(<parameter><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>g_return_if_fail</name><argument_list>(<argument><expr><call><name>GTK_IS_FORM</name><argument_list>(<argument><expr><name>form</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>++</operator><name><name>form</name><operator>-&gt;</operator><name>freeze_count</name></name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type>

<name>gtk_form_thaw</name><parameter_list>(<parameter><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>g_return_if_fail</name><argument_list>(<argument><expr><call><name>GTK_IS_FORM</name><argument_list>(<argument><expr><name>form</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>form</name><operator>-&gt;</operator><name>freeze_count</name></name></expr>)</condition>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><operator>--</operator><name><name>form</name><operator>-&gt;</operator><name>freeze_count</name></name><operator>)</operator></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>gtk_form_position_children</name><argument_list>(<argument><expr><name>form</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_widget_queue_draw</name><argument_list>(<argument><expr><call><name>GTK_WIDGET</name><argument_list>(<argument><expr><name>form</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<macro><name>G_DEFINE_TYPE</name><argument_list>(<argument>GtkForm</argument>, <argument>gtk_form</argument>, <argument>GTK_TYPE_CONTAINER</argument>)</argument_list></macro>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<function><type><name>GtkType</name></type>

<name>gtk_form_get_type</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>static</specifier> <name>GtkType</name></type> <name>form_type</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>form_type</name></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>GtkTypeInfo</name></type> <name>form_info</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vim_memset</name><argument_list>(<argument><expr><operator>&amp;</operator><name>form_info</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>form_info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>form_info</name><operator>.</operator><name>type_name</name></name> <operator>=</operator> <literal type="string">"GtkForm"</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>form_info</name><operator>.</operator><name>object_size</name></name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>GtkForm</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<expr_stmt><expr><name><name>form_info</name><operator>.</operator><name>class_size</name></name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>GtkFormClass</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<expr_stmt><expr><name><name>form_info</name><operator>.</operator><name>class_init_func</name></name> <operator>=</operator> <operator>(</operator><name>GtkClassInitFunc</name><operator>)</operator><name>gtk_form_class_init</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>form_info</name><operator>.</operator><name>object_init_func</name></name> <operator>=</operator> <operator>(</operator><name>GtkObjectInitFunc</name><operator>)</operator><name>gtk_form_init</name></expr>;</expr_stmt>

<expr_stmt><expr><name>form_type</name> <operator>=</operator> <call><name>gtk_type_unique</name><argument_list>(<argument><expr><name>GTK_TYPE_CONTAINER</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>form_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>form_type</name></expr>;</return>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<function><type><specifier>static</specifier> <name>void</name></type>

<name>gtk_form_class_init</name><parameter_list>(<parameter><decl><type><name>GtkFormClass</name> <modifier>*</modifier></type><name>klass</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GtkWidgetClass</name> <modifier>*</modifier></type><name>widget_class</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GtkContainerClass</name> <modifier>*</modifier></type><name>container_class</name></decl>;</decl_stmt>

<expr_stmt><expr><name>widget_class</name> <operator>=</operator> <operator>(</operator><name>GtkWidgetClass</name> <operator>*</operator><operator>)</operator> <name>klass</name></expr>;</expr_stmt>

<expr_stmt><expr><name>container_class</name> <operator>=</operator> <operator>(</operator><name>GtkContainerClass</name> <operator>*</operator><operator>)</operator> <name>klass</name></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><name>parent_class</name> <operator>=</operator> <call><name>gtk_type_class</name><argument_list>(<argument><expr><call><name>gtk_container_get_type</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><name><name>widget_class</name><operator>-&gt;</operator><name>realize</name></name> <operator>=</operator> <name>gtk_form_realize</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>widget_class</name><operator>-&gt;</operator><name>unrealize</name></name> <operator>=</operator> <name>gtk_form_unrealize</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>widget_class</name><operator>-&gt;</operator><name>map</name></name> <operator>=</operator> <name>gtk_form_map</name></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><name><name>widget_class</name><operator>-&gt;</operator><name>get_preferred_width</name></name> <operator>=</operator> <name>gtk_form_get_preferred_width</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>widget_class</name><operator>-&gt;</operator><name>get_preferred_height</name></name> <operator>=</operator> <name>gtk_form_get_preferred_height</name></expr>;</expr_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<expr_stmt><expr><name><name>widget_class</name><operator>-&gt;</operator><name>size_request</name></name> <operator>=</operator> <name>gtk_form_size_request</name></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><name><name>widget_class</name><operator>-&gt;</operator><name>size_allocate</name></name> <operator>=</operator> <name>gtk_form_size_allocate</name></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><name><name>widget_class</name><operator>-&gt;</operator><name>draw</name></name> <operator>=</operator> <name>gtk_form_draw</name></expr>;</expr_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<expr_stmt><expr><name><name>widget_class</name><operator>-&gt;</operator><name>expose_event</name></name> <operator>=</operator> <name>gtk_form_expose</name></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><name><name>container_class</name><operator>-&gt;</operator><name>remove</name></name> <operator>=</operator> <name>gtk_form_remove</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>container_class</name><operator>-&gt;</operator><name>forall</name></name> <operator>=</operator> <name>gtk_form_forall</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>

<name>gtk_form_init</name><parameter_list>(<parameter><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>gtk_widget_set_has_window</name><argument_list>(<argument><expr><call><name>GTK_WIDGET</name><argument_list>(<argument><expr><name>form</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><name><name>form</name><operator>-&gt;</operator><name>children</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>form</name><operator>-&gt;</operator><name>bin_window</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>form</name><operator>-&gt;</operator><name>freeze_count</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>

<name>gtk_form_realize</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GList</name> <modifier>*</modifier></type><name>tmp_list</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GdkWindowAttr</name></type> <name>attributes</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>gint</name></type> <name>attributes_mask</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GtkAllocation</name></type> <name>allocation</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>g_return_if_fail</name><argument_list>(<argument><expr><call><name>GTK_IS_FORM</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>form</name> <operator>=</operator> <call><name>GTK_FORM</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_widget_set_realized</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_widget_get_allocation</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>allocation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>attributes</name><operator>.</operator><name>window_type</name></name> <operator>=</operator> <name>GDK_WINDOW_CHILD</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>attributes</name><operator>.</operator><name>x</name></name> <operator>=</operator> <name><name>allocation</name><operator>.</operator><name>x</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>attributes</name><operator>.</operator><name>y</name></name> <operator>=</operator> <name><name>allocation</name><operator>.</operator><name>y</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>attributes</name><operator>.</operator><name>width</name></name> <operator>=</operator> <name><name>allocation</name><operator>.</operator><name>width</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>attributes</name><operator>.</operator><name>height</name></name> <operator>=</operator> <name><name>allocation</name><operator>.</operator><name>height</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>attributes</name><operator>.</operator><name>wclass</name></name> <operator>=</operator> <name>GDK_INPUT_OUTPUT</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>attributes</name><operator>.</operator><name>visual</name></name> <operator>=</operator> <call><name>gtk_widget_get_visual</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><name><name>attributes</name><operator>.</operator><name>event_mask</name></name> <operator>=</operator> <name>GDK_EXPOSURE_MASK</name></expr>;</expr_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<expr_stmt><expr><name><name>attributes</name><operator>.</operator><name>colormap</name></name> <operator>=</operator> <call><name>gtk_widget_get_colormap</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>attributes</name><operator>.</operator><name>event_mask</name></name> <operator>=</operator> <name>GDK_VISIBILITY_NOTIFY_MASK</name></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><name>attributes_mask</name> <operator>=</operator> <name>GDK_WA_X</name> <operator>|</operator> <name>GDK_WA_Y</name> <operator>|</operator> <name>GDK_WA_VISUAL</name></expr>;</expr_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<expr_stmt><expr><name>attributes_mask</name> <operator>=</operator> <name>GDK_WA_X</name> <operator>|</operator> <name>GDK_WA_Y</name> <operator>|</operator> <name>GDK_WA_VISUAL</name> <operator>|</operator> <name>GDK_WA_COLORMAP</name></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>gtk_widget_set_window</name><argument_list>(<argument><expr><name>widget</name></expr></argument>,

<argument><expr><call><name>gdk_window_new</name><argument_list>(<argument><expr><call><name>gtk_widget_get_parent_window</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><operator>&amp;</operator><name>attributes</name></expr></argument>, <argument><expr><name>attributes_mask</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gdk_window_set_user_data</name><argument_list>(<argument><expr><call><name>gtk_widget_get_window</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>attributes</name><operator>.</operator><name>x</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>attributes</name><operator>.</operator><name>y</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>attributes</name><operator>.</operator><name>event_mask</name></name> <operator>=</operator> <call><name>gtk_widget_get_events</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>form</name><operator>-&gt;</operator><name>bin_window</name></name> <operator>=</operator> <call><name>gdk_window_new</name><argument_list>(<argument><expr><call><name>gtk_widget_get_window</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><operator>&amp;</operator><name>attributes</name></expr></argument>, <argument><expr><name>attributes_mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gdk_window_set_user_data</name><argument_list>(<argument><expr><name><name>form</name><operator>-&gt;</operator><name>bin_window</name></name></expr></argument>, <argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<block>{<block_content>

<decl_stmt><decl><type><name>GtkStyleContext</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sctx</name> <init>= <expr><call><name>gtk_widget_get_style_context</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>gtk_style_context_add_class</name><argument_list>(<argument><expr><name>sctx</name></expr></argument>, <argument><expr><literal type="string">"gtk-form"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_style_context_set_state</name><argument_list>(<argument><expr><name>sctx</name></expr></argument>, <argument><expr><name>GTK_STATE_FLAG_NORMAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">18</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>gtk_style_context_set_background</name><argument_list>(<argument><expr><name>sctx</name></expr></argument>, <argument><expr><call><name>gtk_widget_get_window</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_style_context_set_background</name><argument_list>(<argument><expr><name>sctx</name></expr></argument>, <argument><expr><name><name>form</name><operator>-&gt;</operator><name>bin_window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</block_content>}</block>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<expr_stmt><expr><name><name>widget</name><operator>-&gt;</operator><name>style</name></name> <operator>=</operator> <call><name>gtk_style_attach</name><argument_list>(<argument><expr><name><name>widget</name><operator>-&gt;</operator><name>style</name></name></expr></argument>, <argument><expr><name><name>widget</name><operator>-&gt;</operator><name>window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_style_set_background</name><argument_list>(<argument><expr><name><name>widget</name><operator>-&gt;</operator><name>style</name></name></expr></argument>, <argument><expr><name><name>widget</name><operator>-&gt;</operator><name>window</name></name></expr></argument>, <argument><expr><name>GTK_STATE_NORMAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_style_set_background</name><argument_list>(<argument><expr><name><name>widget</name><operator>-&gt;</operator><name>style</name></name></expr></argument>, <argument><expr><name><name>form</name><operator>-&gt;</operator><name>bin_window</name></name></expr></argument>, <argument><expr><name>GTK_STATE_NORMAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<for>for <control>(<init><expr><name>tmp_list</name> <operator>=</operator> <name><name>form</name><operator>-&gt;</operator><name>children</name></name></expr>;</init> <condition><expr><name>tmp_list</name></expr>;</condition> <incr><expr><name>tmp_list</name> <operator>=</operator> <name><name>tmp_list</name><operator>-&gt;</operator><name>next</name></name></expr></incr>)</control>

<block>{<block_content>

<decl_stmt><decl><type><name>GtkFormChild</name> <modifier>*</modifier></type><name>child</name> <init>= <expr><name><name>tmp_list</name><operator>-&gt;</operator><name>data</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>gtk_form_attach_child_window</name><argument_list>(<argument><expr><name>form</name></expr></argument>, <argument><expr><name>child</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>gtk_widget_get_visible</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>gtk_form_realize_child</name><argument_list>(<argument><expr><name>form</name></expr></argument>, <argument><expr><name>child</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>

<name>gtk_form_map</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GList</name> <modifier>*</modifier></type><name>tmp_list</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>g_return_if_fail</name><argument_list>(<argument><expr><call><name>GTK_IS_FORM</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>form</name> <operator>=</operator> <call><name>GTK_FORM</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_widget_set_mapped</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gdk_window_show</name><argument_list>(<argument><expr><call><name>gtk_widget_get_window</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gdk_window_show</name><argument_list>(<argument><expr><name><name>form</name><operator>-&gt;</operator><name>bin_window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>tmp_list</name> <operator>=</operator> <name><name>form</name><operator>-&gt;</operator><name>children</name></name></expr>;</init> <condition><expr><name>tmp_list</name></expr>;</condition> <incr><expr><name>tmp_list</name> <operator>=</operator> <name><name>tmp_list</name><operator>-&gt;</operator><name>next</name></name></expr></incr>)</control>

<block>{<block_content>

<decl_stmt><decl><type><name>GtkFormChild</name> <modifier>*</modifier></type><name>child</name> <init>= <expr><name><name>tmp_list</name><operator>-&gt;</operator><name>data</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>gtk_widget_get_visible</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>)</argument_list></call>

<operator>&amp;&amp;</operator> <operator>!</operator><call><name>gtk_widget_get_mapped</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>gtk_widget_map</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>

<name>gtk_form_unrealize</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GList</name> <modifier>*</modifier></type><name>tmp_list</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>g_return_if_fail</name><argument_list>(<argument><expr><call><name>GTK_IS_FORM</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>form</name> <operator>=</operator> <call><name>GTK_FORM</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp_list</name> <operator>=</operator> <name><name>form</name><operator>-&gt;</operator><name>children</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gdk_window_set_user_data</name><argument_list>(<argument><expr><name><name>form</name><operator>-&gt;</operator><name>bin_window</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gdk_window_destroy</name><argument_list>(<argument><expr><name><name>form</name><operator>-&gt;</operator><name>bin_window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>form</name><operator>-&gt;</operator><name>bin_window</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<while>while <condition>(<expr><name>tmp_list</name></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>GtkFormChild</name> <modifier>*</modifier></type><name>child</name> <init>= <expr><name><name>tmp_list</name><operator>-&gt;</operator><name>data</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>child</name><operator>-&gt;</operator><name>window</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>g_signal_handlers_disconnect_by_func</name><argument_list>(<argument><expr><call><name>G_OBJECT</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><call><name>FUNC2GENERIC</name><argument_list>(<argument><expr><name>gtk_form_child_map</name></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><name>child</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>g_signal_handlers_disconnect_by_func</name><argument_list>(<argument><expr><call><name>G_OBJECT</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><call><name>FUNC2GENERIC</name><argument_list>(<argument><expr><name>gtk_form_child_unmap</name></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><name>child</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gdk_window_set_user_data</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>window</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gdk_window_destroy</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>child</name><operator>-&gt;</operator><name>window</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>tmp_list</name> <operator>=</operator> <name><name>tmp_list</name><operator>-&gt;</operator><name>next</name></name></expr>;</expr_stmt>

</block_content>}</block></while>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<if_stmt><if>if <condition>(<expr><call><name>GTK_WIDGET_CLASS</name> <argument_list>(<argument><expr><name>gtk_form_parent_class</name></expr></argument>)</argument_list></call><operator>-&gt;</operator><name>unrealize</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><operator>(</operator><operator>*</operator> <call><name>GTK_WIDGET_CLASS</name> <argument_list>(<argument><expr><name>gtk_form_parent_class</name></expr></argument>)</argument_list></call><operator>-&gt;</operator><name>unrealize</name><operator>)</operator> <operator>(</operator><name>widget</name><operator>)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<if_stmt><if>if <condition>(<expr><call><name>GTK_WIDGET_CLASS</name> <argument_list>(<argument><expr><name>parent_class</name></expr></argument>)</argument_list></call><operator>-&gt;</operator><name>unrealize</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><operator>(</operator><operator>*</operator> <call><name>GTK_WIDGET_CLASS</name> <argument_list>(<argument><expr><name>parent_class</name></expr></argument>)</argument_list></call><operator>-&gt;</operator><name>unrealize</name><operator>)</operator> <operator>(</operator><name>widget</name><operator>)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>

<name>gtk_form_size_request</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>, <parameter><decl><type><name>GtkRequisition</name> <modifier>*</modifier></type><name>requisition</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>g_return_if_fail</name><argument_list>(<argument><expr><call><name>GTK_IS_FORM</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>g_return_if_fail</name><argument_list>(<argument><expr><name>requisition</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>requisition</name><operator>-&gt;</operator><name>width</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>requisition</name><operator>-&gt;</operator><name>height</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<function><type><specifier>static</specifier> <name>void</name></type>

<name>gtk_form_get_preferred_width</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>,

<parameter><decl><type><name>gint</name> <modifier>*</modifier></type><name>minimal_width</name></decl></parameter>,

<parameter><decl><type><name>gint</name> <modifier>*</modifier></type><name>natural_width</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GtkRequisition</name></type> <name>requisition</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>gtk_form_size_request</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>requisition</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>minimal_width</name> <operator>=</operator> <name><name>requisition</name><operator>.</operator><name>width</name></name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>natural_width</name> <operator>=</operator> <name><name>requisition</name><operator>.</operator><name>width</name></name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>

<name>gtk_form_get_preferred_height</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>,

<parameter><decl><type><name>gint</name> <modifier>*</modifier></type><name>minimal_height</name></decl></parameter>,

<parameter><decl><type><name>gint</name> <modifier>*</modifier></type><name>natural_height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GtkRequisition</name></type> <name>requisition</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>gtk_form_size_request</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>requisition</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>minimal_height</name> <operator>=</operator> <name><name>requisition</name><operator>.</operator><name>height</name></name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>natural_height</name> <operator>=</operator> <name><name>requisition</name><operator>.</operator><name>height</name></name></expr>;</expr_stmt>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<function><type><specifier>static</specifier> <name>void</name></type>

<name>gtk_form_size_allocate</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>, <parameter><decl><type><name>GtkAllocation</name> <modifier>*</modifier></type><name>allocation</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GList</name> <modifier>*</modifier></type><name>tmp_list</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>gboolean</name></type> <name>need_reposition</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GtkAllocation</name></type> <name>cur_alloc</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>g_return_if_fail</name><argument_list>(<argument><expr><call><name>GTK_IS_FORM</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_widget_get_allocation</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>cur_alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>cur_alloc</name><operator>.</operator><name>x</name></name> <operator>==</operator> <name><name>allocation</name><operator>-&gt;</operator><name>x</name></name>

<operator>&amp;&amp;</operator> <name><name>cur_alloc</name><operator>.</operator><name>y</name></name> <operator>==</operator> <name><name>allocation</name><operator>-&gt;</operator><name>y</name></name>

<operator>&amp;&amp;</operator> <name><name>cur_alloc</name><operator>.</operator><name>width</name></name> <operator>==</operator> <name><name>allocation</name><operator>-&gt;</operator><name>width</name></name>

<operator>&amp;&amp;</operator> <name><name>cur_alloc</name><operator>.</operator><name>height</name></name> <operator>==</operator> <name><name>allocation</name><operator>-&gt;</operator><name>height</name></name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>need_reposition</name> <operator>=</operator> <name><name>cur_alloc</name><operator>.</operator><name>width</name></name> <operator>!=</operator> <name><name>allocation</name><operator>-&gt;</operator><name>width</name></name>

<operator>||</operator> <name><name>cur_alloc</name><operator>.</operator><name>height</name></name> <operator>!=</operator> <name><name>allocation</name><operator>-&gt;</operator><name>height</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>form</name> <operator>=</operator> <call><name>GTK_FORM</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>need_reposition</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name>tmp_list</name> <operator>=</operator> <name><name>form</name><operator>-&gt;</operator><name>children</name></name></expr>;</expr_stmt>

<while>while <condition>(<expr><name>tmp_list</name></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>GtkFormChild</name> <modifier>*</modifier></type><name>child</name> <init>= <expr><name><name>tmp_list</name><operator>-&gt;</operator><name>data</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>gtk_form_position_child</name><argument_list>(<argument><expr><name>form</name></expr></argument>, <argument><expr><name>child</name></expr></argument>, <argument><expr><name>TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp_list</name> <operator>=</operator> <name><name>tmp_list</name><operator>-&gt;</operator><name>next</name></name></expr>;</expr_stmt>

</block_content>}</block></while>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>gtk_widget_get_realized</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>gdk_window_move_resize</name><argument_list>(<argument><expr><call><name>gtk_widget_get_window</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><name><name>allocation</name><operator>-&gt;</operator><name>x</name></name></expr></argument>, <argument><expr><name><name>allocation</name><operator>-&gt;</operator><name>y</name></name></expr></argument>,

<argument><expr><name><name>allocation</name><operator>-&gt;</operator><name>width</name></name></expr></argument>, <argument><expr><name><name>allocation</name><operator>-&gt;</operator><name>height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gdk_window_move_resize</name><argument_list>(<argument><expr><call><name>GTK_FORM</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call><operator>-&gt;</operator><name>bin_window</name></expr></argument>,

<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,

<argument><expr><name><name>allocation</name><operator>-&gt;</operator><name>width</name></name></expr></argument>, <argument><expr><name><name>allocation</name><operator>-&gt;</operator><name>height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>gtk_widget_set_allocation</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>allocation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>need_reposition</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>gtk_form_send_configure</name><argument_list>(<argument><expr><name>form</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<function><type><specifier>static</specifier> <name>void</name></type>

<name>gtk_form_render_background</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>, <parameter><decl><type><name>cairo_t</name> <modifier>*</modifier></type><name>cr</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>gtk_render_background</name><argument_list>(<argument><expr><call><name>gtk_widget_get_style_context</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>cr</name></expr></argument>,

<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,

<argument><expr><call><name>gtk_widget_get_allocated_width</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><call><name>gtk_widget_get_allocated_height</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>gboolean</name></type>

<name>gtk_form_draw</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>, <parameter><decl><type><name>cairo_t</name> <modifier>*</modifier></type><name>cr</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GList</name> <modifier>*</modifier></type><name>tmp_list</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>g_return_val_if_fail</name><argument_list>(<argument><expr><call><name>GTK_IS_FORM</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_form_render_background</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>cr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>form</name> <operator>=</operator> <call><name>GTK_FORM</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>tmp_list</name> <operator>=</operator> <name><name>form</name><operator>-&gt;</operator><name>children</name></name></expr>;</init> <condition><expr><name>tmp_list</name></expr>;</condition> <incr><expr><name>tmp_list</name> <operator>=</operator> <name><name>tmp_list</name><operator>-&gt;</operator><name>next</name></name></expr></incr>)</control>

<block>{<block_content>

<decl_stmt><decl><type><name>GtkFormChild</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>formchild</name> <init>= <expr><name><name>tmp_list</name><operator>-&gt;</operator><name>data</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>gtk_widget_get_has_window</name><argument_list>(<argument><expr><name><name>formchild</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>

<call><name>gtk_cairo_should_draw_window</name><argument_list>(<argument><expr><name>cr</name></expr></argument>, <argument><expr><name><name>formchild</name><operator>-&gt;</operator><name>window</name></name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>gtk_form_position_child</name><argument_list>(<argument><expr><name>form</name></expr></argument>, <argument><expr><name>formchild</name></expr></argument>, <argument><expr><name>TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_form_render_background</name><argument_list>(<argument><expr><name><name>formchild</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>, <argument><expr><name>cr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<return>return <expr><call><name>GTK_WIDGET_CLASS</name><argument_list>(<argument><expr><name>gtk_form_parent_class</name></expr></argument>)</argument_list></call><operator>-&gt;</operator><call><name>draw</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>cr</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else> 

<function><type><specifier>static</specifier> <name>gint</name></type>

<name>gtk_form_expose</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>, <parameter><decl><type><name>GdkEventExpose</name> <modifier>*</modifier></type><name>event</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GList</name> <modifier>*</modifier></type><name>tmp_list</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>g_return_val_if_fail</name><argument_list>(<argument><expr><call><name>GTK_IS_FORM</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>form</name> <operator>=</operator> <call><name>GTK_FORM</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>event</name><operator>-&gt;</operator><name>window</name></name> <operator>==</operator> <name><name>form</name><operator>-&gt;</operator><name>bin_window</name></name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>FALSE</name></expr>;</return></block_content></block></if></if_stmt>

<for>for <control>(<init><expr><name>tmp_list</name> <operator>=</operator> <name><name>form</name><operator>-&gt;</operator><name>children</name></name></expr>;</init> <condition><expr><name>tmp_list</name></expr>;</condition> <incr><expr><name>tmp_list</name> <operator>=</operator> <name><name>tmp_list</name><operator>-&gt;</operator><name>next</name></name></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>gtk_container_propagate_expose</name><argument_list>(<argument><expr><call><name>GTK_CONTAINER</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><call><name>GTK_WIDGET</name><argument_list>(<argument><expr><operator>(</operator><operator>(</operator><name>GtkFormChild</name> <operator>*</operator><operator>)</operator><name><name>tmp_list</name><operator>-&gt;</operator><name>data</name></name><operator>)</operator><operator>-&gt;</operator><name>widget</name></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><name>event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<return>return <expr><name>FALSE</name></expr>;</return>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<function><type><specifier>static</specifier> <name>void</name></type>

<name>gtk_form_remove</name><parameter_list>(<parameter><decl><type><name>GtkContainer</name> <modifier>*</modifier></type><name>container</name></decl></parameter>, <parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GList</name> <modifier>*</modifier></type><name>tmp_list</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GtkFormChild</name> <modifier>*</modifier></type><name>child</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt> 

<expr_stmt><expr><call><name>g_return_if_fail</name><argument_list>(<argument><expr><call><name>GTK_IS_FORM</name><argument_list>(<argument><expr><name>container</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>form</name> <operator>=</operator> <call><name>GTK_FORM</name><argument_list>(<argument><expr><name>container</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp_list</name> <operator>=</operator> <name><name>form</name><operator>-&gt;</operator><name>children</name></name></expr>;</expr_stmt>

<while>while <condition>(<expr><name>tmp_list</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name>child</name> <operator>=</operator> <name><name>tmp_list</name><operator>-&gt;</operator><name>data</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name> <operator>==</operator> <name>widget</name></expr>)</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

<expr_stmt><expr><name>tmp_list</name> <operator>=</operator> <name><name>tmp_list</name><operator>-&gt;</operator><name>next</name></name></expr>;</expr_stmt>

</block_content>}</block></while>

<if_stmt><if>if <condition>(<expr><name>tmp_list</name></expr>)</condition>

<block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<decl_stmt><decl><type><specifier>const</specifier> <name>gboolean</name></type> <name>was_visible</name> <init>= <expr><call><name>gtk_widget_get_visible</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<if_stmt><if>if <condition>(<expr><name><name>child</name><operator>-&gt;</operator><name>window</name></name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>g_signal_handlers_disconnect_by_func</name><argument_list>(<argument><expr><call><name>G_OBJECT</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><call><name>FUNC2GENERIC</name><argument_list>(<argument><expr><operator>&amp;</operator><name>gtk_form_child_map</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>child</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>g_signal_handlers_disconnect_by_func</name><argument_list>(<argument><expr><call><name>G_OBJECT</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><call><name>FUNC2GENERIC</name><argument_list>(<argument><expr><operator>&amp;</operator><name>gtk_form_child_unmap</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>child</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gdk_window_set_user_data</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>window</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gdk_window_destroy</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>gtk_widget_unparent</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<if_stmt><if>if <condition>(<expr><name>was_visible</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>gtk_widget_queue_resize</name><argument_list>(<argument><expr><call><name>GTK_WIDGET</name><argument_list>(<argument><expr><name>container</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><name><name>form</name><operator>-&gt;</operator><name>children</name></name> <operator>=</operator> <call><name>g_list_remove_link</name><argument_list>(<argument><expr><name><name>form</name><operator>-&gt;</operator><name>children</name></name></expr></argument>, <argument><expr><name>tmp_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>g_list_free_1</name><argument_list>(<argument><expr><name>tmp_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>g_free</name><argument_list>(<argument><expr><name>child</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>

<name>gtk_form_forall</name><parameter_list>(<parameter><decl><type><name>GtkContainer</name> <modifier>*</modifier></type><name>container</name></decl></parameter>,

<parameter><decl><type><name>gboolean</name> <name>include_internals</name></type> <name>UNUSED</name></decl></parameter>,

<parameter><decl><type><name>GtkCallback</name></type> <name>callback</name></decl></parameter>,

<parameter><decl><type><name>gpointer</name></type> <name>callback_data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GtkFormChild</name> <modifier>*</modifier></type><name>child</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GList</name> <modifier>*</modifier></type><name>tmp_list</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>g_return_if_fail</name><argument_list>(<argument><expr><call><name>GTK_IS_FORM</name><argument_list>(<argument><expr><name>container</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>g_return_if_fail</name><argument_list>(<argument><expr><name>callback</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>form</name> <operator>=</operator> <call><name>GTK_FORM</name><argument_list>(<argument><expr><name>container</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp_list</name> <operator>=</operator> <name><name>form</name><operator>-&gt;</operator><name>children</name></name></expr>;</expr_stmt>

<while>while <condition>(<expr><name>tmp_list</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name>child</name> <operator>=</operator> <name><name>tmp_list</name><operator>-&gt;</operator><name>data</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp_list</name> <operator>=</operator> <name><name>tmp_list</name><operator>-&gt;</operator><name>next</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call>(<modifier>*</modifier><name>callback</name>) <argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>, <argument><expr><name>callback_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></while>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>

<name>gtk_form_attach_child_window</name><parameter_list>(<parameter><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name></decl></parameter>, <parameter><decl><type><name>GtkFormChild</name> <modifier>*</modifier></type><name>child</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>child</name><operator>-&gt;</operator><name>window</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt> 

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>gtk_widget_get_has_window</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GdkWindowAttr</name></type> <name>attributes</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>gint</name></type> <name>attributes_mask</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GtkRequisition</name></type> <name>requisition</name></decl>;</decl_stmt>

<expr_stmt><expr><name>widget</name> <operator>=</operator> <call><name>GTK_WIDGET</name><argument_list>(<argument><expr><name>form</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>gtk_widget_get_preferred_size</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>requisition</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<expr_stmt><expr><name>requisition</name> <operator>=</operator> <name><name>child</name><operator>-&gt;</operator><name>widget</name><operator>-&gt;</operator><name>requisition</name></name></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><name><name>attributes</name><operator>.</operator><name>window_type</name></name> <operator>=</operator> <name>GDK_WINDOW_CHILD</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>attributes</name><operator>.</operator><name>x</name></name> <operator>=</operator> <name><name>child</name><operator>-&gt;</operator><name>x</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>attributes</name><operator>.</operator><name>y</name></name> <operator>=</operator> <name><name>child</name><operator>-&gt;</operator><name>y</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>attributes</name><operator>.</operator><name>width</name></name> <operator>=</operator> <name><name>requisition</name><operator>.</operator><name>width</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>attributes</name><operator>.</operator><name>height</name></name> <operator>=</operator> <name><name>requisition</name><operator>.</operator><name>height</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>attributes</name><operator>.</operator><name>wclass</name></name> <operator>=</operator> <name>GDK_INPUT_OUTPUT</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>attributes</name><operator>.</operator><name>visual</name></name> <operator>=</operator> <call><name>gtk_widget_get_visual</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><name><name>attributes</name><operator>.</operator><name>colormap</name></name> <operator>=</operator> <call><name>gtk_widget_get_colormap</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><name><name>attributes</name><operator>.</operator><name>event_mask</name></name> <operator>=</operator> <name>GDK_EXPOSURE_MASK</name></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><name>attributes_mask</name> <operator>=</operator> <name>GDK_WA_X</name> <operator>|</operator> <name>GDK_WA_Y</name> <operator>|</operator> <name>GDK_WA_VISUAL</name></expr>;</expr_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<expr_stmt><expr><name>attributes_mask</name> <operator>=</operator> <name>GDK_WA_X</name> <operator>|</operator> <name>GDK_WA_Y</name> <operator>|</operator> <name>GDK_WA_VISUAL</name> <operator>|</operator> <name>GDK_WA_COLORMAP</name></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><name><name>child</name><operator>-&gt;</operator><name>window</name></name> <operator>=</operator> <call><name>gdk_window_new</name><argument_list>(<argument><expr><name><name>form</name><operator>-&gt;</operator><name>bin_window</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>attributes</name></expr></argument>, <argument><expr><name>attributes_mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gdk_window_set_user_data</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>window</name></name></expr></argument>, <argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<block>{<block_content>

<decl_stmt><decl><type><name>GtkStyleContext</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sctx</name> <init>= <expr><call><name>gtk_widget_get_style_context</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>gtk_style_context_set_state</name><argument_list>(<argument><expr><name>sctx</name></expr></argument>, <argument><expr><name>GTK_STATE_FLAG_NORMAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">18</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>gtk_style_context_set_background</name><argument_list>(<argument><expr><name>sctx</name></expr></argument>, <argument><expr><name><name>child</name><operator>-&gt;</operator><name>window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</block_content>}</block>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<expr_stmt><expr><call><name>gtk_style_set_background</name><argument_list>(<argument><expr><name><name>widget</name><operator>-&gt;</operator><name>style</name></name></expr></argument>,

<argument><expr><name><name>child</name><operator>-&gt;</operator><name>window</name></name></expr></argument>,

<argument><expr><name>GTK_STATE_NORMAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>gtk_widget_set_parent_window</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>, <argument><expr><name><name>child</name><operator>-&gt;</operator><name>window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>g_signal_connect</name><argument_list>(<argument><expr><call><name>G_OBJECT</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"map"</literal></expr></argument>,

<argument><expr><call><name>G_CALLBACK</name><argument_list>(<argument><expr><operator>&amp;</operator><name>gtk_form_child_map</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>child</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>g_signal_connect</name><argument_list>(<argument><expr><call><name>G_OBJECT</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"unmap"</literal></expr></argument>,

<argument><expr><call><name>G_CALLBACK</name><argument_list>(<argument><expr><operator>&amp;</operator><name>gtk_form_child_unmap</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>child</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if <condition>(<expr><operator>!</operator><call><name>gtk_widget_get_realized</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>gtk_widget_set_parent_window</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>, <argument><expr><name><name>form</name><operator>-&gt;</operator><name>bin_window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>

<name>gtk_form_realize_child</name><parameter_list>(<parameter><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name></decl></parameter>, <parameter><decl><type><name>GtkFormChild</name> <modifier>*</modifier></type><name>child</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>gtk_form_attach_child_window</name><argument_list>(<argument><expr><name>form</name></expr></argument>, <argument><expr><name>child</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_widget_realize</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>

<name>gtk_form_position_child</name><parameter_list>(<parameter><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name></decl></parameter>, <parameter><decl><type><name>GtkFormChild</name> <modifier>*</modifier></type><name>child</name></decl></parameter>,

<parameter><decl><type><name>gboolean</name></type> <name>force_allocate</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>gint</name></type> <name>x</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>gint</name></type> <name>y</name></decl>;</decl_stmt>

<expr_stmt><expr><name>x</name> <operator>=</operator> <name><name>child</name><operator>-&gt;</operator><name>x</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>y</name> <operator>=</operator> <name><name>child</name><operator>-&gt;</operator><name>y</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>x</name> <operator>&gt;=</operator> <name>G_MINSHORT</name><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><name>x</name> <operator>&lt;=</operator> <name>G_MAXSHORT</name><operator>)</operator> <operator>&amp;&amp;</operator>

<operator>(</operator><name>y</name> <operator>&gt;=</operator> <name>G_MINSHORT</name><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><name>y</name> <operator>&lt;=</operator> <name>G_MAXSHORT</name><operator>)</operator></expr>)</condition>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>child</name><operator>-&gt;</operator><name>mapped</name></name></expr>)</condition>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>gtk_widget_get_mapped</name><argument_list>(<argument><expr><call><name>GTK_WIDGET</name><argument_list>(<argument><expr><name>form</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>

<operator>&amp;&amp;</operator> <call><name>gtk_widget_get_visible</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>gtk_widget_get_mapped</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>gtk_widget_map</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>child</name><operator>-&gt;</operator><name>mapped</name></name> <operator>=</operator> <name>TRUE</name></expr>;</expr_stmt>

<expr_stmt><expr><name>force_allocate</name> <operator>=</operator> <name>TRUE</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>force_allocate</name></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>GtkAllocation</name></type> <name>allocation</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GtkRequisition</name></type> <name>requisition</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>gtk_widget_get_preferred_size</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>requisition</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<expr_stmt><expr><name>requisition</name> <operator>=</operator> <name><name>child</name><operator>-&gt;</operator><name>widget</name><operator>-&gt;</operator><name>requisition</name></name></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>gtk_widget_get_has_window</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>child</name><operator>-&gt;</operator><name>window</name></name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>gdk_window_move_resize</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>window</name></name></expr></argument>,

<argument><expr><name>x</name></expr></argument>, <argument><expr><name>y</name></expr></argument>,

<argument><expr><name><name>requisition</name><operator>.</operator><name>width</name></name></expr></argument>,

<argument><expr><name><name>requisition</name><operator>.</operator><name>height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>allocation</name><operator>.</operator><name>x</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>allocation</name><operator>.</operator><name>y</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><name><name>allocation</name><operator>.</operator><name>x</name></name> <operator>=</operator> <name>x</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>allocation</name><operator>.</operator><name>y</name></name> <operator>=</operator> <name>y</name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name><name>allocation</name><operator>.</operator><name>width</name></name> <operator>=</operator> <name><name>requisition</name><operator>.</operator><name>width</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>allocation</name><operator>.</operator><name>height</name></name> <operator>=</operator> <name><name>requisition</name><operator>.</operator><name>height</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_widget_size_allocate</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>allocation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>child</name><operator>-&gt;</operator><name>mapped</name></name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>child</name><operator>-&gt;</operator><name>mapped</name></name> <operator>=</operator> <name>FALSE</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>gtk_widget_get_mapped</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>gtk_widget_unmap</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>widget</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>

<name>gtk_form_position_children</name><parameter_list>(<parameter><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GList</name> <modifier>*</modifier></type><name>tmp_list</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>tmp_list</name> <operator>=</operator> <name><name>form</name><operator>-&gt;</operator><name>children</name></name></expr>;</init> <condition><expr><name>tmp_list</name></expr>;</condition> <incr><expr><name>tmp_list</name> <operator>=</operator> <name><name>tmp_list</name><operator>-&gt;</operator><name>next</name></name></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>gtk_form_position_child</name><argument_list>(<argument><expr><name>form</name></expr></argument>, <argument><expr><name><name>tmp_list</name><operator>-&gt;</operator><name>data</name></name></expr></argument>, <argument><expr><name>FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

</block_content>}</block></function>

<function><type><name>void</name></type>

<name>gtk_form_move_resize</name><parameter_list>(<parameter><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name></decl></parameter>, <parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>,

<parameter><decl><type><name>gint</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>gint</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>gint</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>gint</name></type> <name>h</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>GTK_CHECK_VERSION</name><argument_list>(<argument><expr><literal type="number">3</literal><operator>,</operator><literal type="number">0</literal><operator>,</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>gtk_widget_set_size_request</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<expr_stmt><expr><name><name>widget</name><operator>-&gt;</operator><name>requisition</name><operator>.</operator><name>width</name></name> <operator>=</operator> <name>w</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>widget</name><operator>-&gt;</operator><name>requisition</name><operator>.</operator><name>height</name></name> <operator>=</operator> <name>h</name></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>gtk_form_move</name><argument_list>(<argument><expr><name>form</name></expr></argument>, <argument><expr><name>widget</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>

<name>gtk_form_send_configure</name><parameter_list>(<parameter><decl><type><name>GtkForm</name> <modifier>*</modifier></type><name>form</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GdkEventConfigure</name></type> <name>event</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GtkAllocation</name></type> <name>allocation</name></decl>;</decl_stmt>

<expr_stmt><expr><name>widget</name> <operator>=</operator> <call><name>GTK_WIDGET</name><argument_list>(<argument><expr><name>form</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_widget_get_allocation</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>allocation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>GDK_CONFIGURE</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>window</name></name> <operator>=</operator> <call><name>gtk_widget_get_window</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>x</name></name> <operator>=</operator> <name><name>allocation</name><operator>.</operator><name>x</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>y</name></name> <operator>=</operator> <name><name>allocation</name><operator>.</operator><name>y</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>width</name></name> <operator>=</operator> <name><name>allocation</name><operator>.</operator><name>width</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>height</name></name> <operator>=</operator> <name><name>allocation</name><operator>.</operator><name>height</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_main_do_event</name><argument_list>(<argument><expr><operator>(</operator><name>GdkEvent</name><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>

<name>gtk_form_child_map</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier><name>widget</name></type> <name>UNUSED</name></decl></parameter>, <parameter><decl><type><name>gpointer</name></type> <name>user_data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GtkFormChild</name> <modifier>*</modifier></type><name>child</name></decl>;</decl_stmt>

<expr_stmt><expr><name>child</name> <operator>=</operator> <operator>(</operator><name>GtkFormChild</name> <operator>*</operator><operator>)</operator><name>user_data</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>child</name><operator>-&gt;</operator><name>mapped</name></name> <operator>=</operator> <name>TRUE</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gdk_window_show</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>

<name>gtk_form_child_unmap</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier><name>widget</name></type> <name>UNUSED</name></decl></parameter>, <parameter><decl><type><name>gpointer</name></type> <name>user_data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GtkFormChild</name> <modifier>*</modifier></type><name>child</name></decl>;</decl_stmt>

<expr_stmt><expr><name>child</name> <operator>=</operator> <operator>(</operator><name>GtkFormChild</name> <operator>*</operator><operator>)</operator><name>user_data</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>child</name><operator>-&gt;</operator><name>mapped</name></name> <operator>=</operator> <name>FALSE</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gdk_window_hide</name><argument_list>(<argument><expr><name><name>child</name><operator>-&gt;</operator><name>window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
