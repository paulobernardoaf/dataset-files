<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\_cppstats\vim\src\blowfish.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vim.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>FEAT_CRYPT</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>PROTO</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ARRAY_LENGTH</name><parameter_list>(<parameter><type><name>A</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(sizeof(A)/sizeof(A[0]))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BF_BLOCK</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BF_BLOCK_MASK</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BF_MAX_CFB_LEN</name></cpp:macro> <cpp:value>(8 * BF_BLOCK)</cpp:value></cpp:define>

<typedef>typedef <type><union>union <block>{

<decl_stmt><decl><type><name>UINT32_T</name></type> <name><name>ul</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char_u</name></type> <name><name>uc</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>

}</block></union></type> <name>block8</name>;</typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>MSWIN</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:error>#<cpp:directive>error</cpp:directive> Please change this code to define WORDS_BIGENDIAN for big-endian machines.</cpp:error>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>UINT32_T</name></type> <name><name>pax</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>UINT32_T</name></type> <name><name>sbx</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>randbyte_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>update_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char_u</name></type> <name><name>cfb_buffer</name><index>[<expr><name>BF_MAX_CFB_LEN</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>cfb_len</name></decl>;</decl_stmt> 

}</block></struct></type> <name>bf_state_T</name>;</typedef>

<decl_stmt><decl><type><specifier>static</specifier> <name>UINT32_T</name></type> <name><name>pax_init</name><index>[<expr><literal type="number">18</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x243f6a88u</literal></expr>, <expr><literal type="number">0x85a308d3u</literal></expr>, <expr><literal type="number">0x13198a2eu</literal></expr>,

<expr><literal type="number">0x03707344u</literal></expr>, <expr><literal type="number">0xa4093822u</literal></expr>, <expr><literal type="number">0x299f31d0u</literal></expr>,

<expr><literal type="number">0x082efa98u</literal></expr>, <expr><literal type="number">0xec4e6c89u</literal></expr>, <expr><literal type="number">0x452821e6u</literal></expr>,

<expr><literal type="number">0x38d01377u</literal></expr>, <expr><literal type="number">0xbe5466cfu</literal></expr>, <expr><literal type="number">0x34e90c6cu</literal></expr>,

<expr><literal type="number">0xc0ac29b7u</literal></expr>, <expr><literal type="number">0xc97c50ddu</literal></expr>, <expr><literal type="number">0x3f84d5b5u</literal></expr>,

<expr><literal type="number">0xb5470917u</literal></expr>, <expr><literal type="number">0x9216d5d9u</literal></expr>, <expr><literal type="number">0x8979fb1bu</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>UINT32_T</name></type> <name><name>sbx_init</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">256</literal></expr>]</index></name> <init>= <expr><block>{

<expr><block>{<expr><literal type="number">0xd1310ba6u</literal></expr>, <expr><literal type="number">0x98dfb5acu</literal></expr>, <expr><literal type="number">0x2ffd72dbu</literal></expr>, <expr><literal type="number">0xd01adfb7u</literal></expr>,

<expr><literal type="number">0xb8e1afedu</literal></expr>, <expr><literal type="number">0x6a267e96u</literal></expr>, <expr><literal type="number">0xba7c9045u</literal></expr>, <expr><literal type="number">0xf12c7f99u</literal></expr>,

<expr><literal type="number">0x24a19947u</literal></expr>, <expr><literal type="number">0xb3916cf7u</literal></expr>, <expr><literal type="number">0x0801f2e2u</literal></expr>, <expr><literal type="number">0x858efc16u</literal></expr>,

<expr><literal type="number">0x636920d8u</literal></expr>, <expr><literal type="number">0x71574e69u</literal></expr>, <expr><literal type="number">0xa458fea3u</literal></expr>, <expr><literal type="number">0xf4933d7eu</literal></expr>,

<expr><literal type="number">0x0d95748fu</literal></expr>, <expr><literal type="number">0x728eb658u</literal></expr>, <expr><literal type="number">0x718bcd58u</literal></expr>, <expr><literal type="number">0x82154aeeu</literal></expr>,

<expr><literal type="number">0x7b54a41du</literal></expr>, <expr><literal type="number">0xc25a59b5u</literal></expr>, <expr><literal type="number">0x9c30d539u</literal></expr>, <expr><literal type="number">0x2af26013u</literal></expr>,

<expr><literal type="number">0xc5d1b023u</literal></expr>, <expr><literal type="number">0x286085f0u</literal></expr>, <expr><literal type="number">0xca417918u</literal></expr>, <expr><literal type="number">0xb8db38efu</literal></expr>,

<expr><literal type="number">0x8e79dcb0u</literal></expr>, <expr><literal type="number">0x603a180eu</literal></expr>, <expr><literal type="number">0x6c9e0e8bu</literal></expr>, <expr><literal type="number">0xb01e8a3eu</literal></expr>,

<expr><literal type="number">0xd71577c1u</literal></expr>, <expr><literal type="number">0xbd314b27u</literal></expr>, <expr><literal type="number">0x78af2fdau</literal></expr>, <expr><literal type="number">0x55605c60u</literal></expr>,

<expr><literal type="number">0xe65525f3u</literal></expr>, <expr><literal type="number">0xaa55ab94u</literal></expr>, <expr><literal type="number">0x57489862u</literal></expr>, <expr><literal type="number">0x63e81440u</literal></expr>,

<expr><literal type="number">0x55ca396au</literal></expr>, <expr><literal type="number">0x2aab10b6u</literal></expr>, <expr><literal type="number">0xb4cc5c34u</literal></expr>, <expr><literal type="number">0x1141e8ceu</literal></expr>,

<expr><literal type="number">0xa15486afu</literal></expr>, <expr><literal type="number">0x7c72e993u</literal></expr>, <expr><literal type="number">0xb3ee1411u</literal></expr>, <expr><literal type="number">0x636fbc2au</literal></expr>,

<expr><literal type="number">0x2ba9c55du</literal></expr>, <expr><literal type="number">0x741831f6u</literal></expr>, <expr><literal type="number">0xce5c3e16u</literal></expr>, <expr><literal type="number">0x9b87931eu</literal></expr>,

<expr><literal type="number">0xafd6ba33u</literal></expr>, <expr><literal type="number">0x6c24cf5cu</literal></expr>, <expr><literal type="number">0x7a325381u</literal></expr>, <expr><literal type="number">0x28958677u</literal></expr>,

<expr><literal type="number">0x3b8f4898u</literal></expr>, <expr><literal type="number">0x6b4bb9afu</literal></expr>, <expr><literal type="number">0xc4bfe81bu</literal></expr>, <expr><literal type="number">0x66282193u</literal></expr>,

<expr><literal type="number">0x61d809ccu</literal></expr>, <expr><literal type="number">0xfb21a991u</literal></expr>, <expr><literal type="number">0x487cac60u</literal></expr>, <expr><literal type="number">0x5dec8032u</literal></expr>,

<expr><literal type="number">0xef845d5du</literal></expr>, <expr><literal type="number">0xe98575b1u</literal></expr>, <expr><literal type="number">0xdc262302u</literal></expr>, <expr><literal type="number">0xeb651b88u</literal></expr>,

<expr><literal type="number">0x23893e81u</literal></expr>, <expr><literal type="number">0xd396acc5u</literal></expr>, <expr><literal type="number">0x0f6d6ff3u</literal></expr>, <expr><literal type="number">0x83f44239u</literal></expr>,

<expr><literal type="number">0x2e0b4482u</literal></expr>, <expr><literal type="number">0xa4842004u</literal></expr>, <expr><literal type="number">0x69c8f04au</literal></expr>, <expr><literal type="number">0x9e1f9b5eu</literal></expr>,

<expr><literal type="number">0x21c66842u</literal></expr>, <expr><literal type="number">0xf6e96c9au</literal></expr>, <expr><literal type="number">0x670c9c61u</literal></expr>, <expr><literal type="number">0xabd388f0u</literal></expr>,

<expr><literal type="number">0x6a51a0d2u</literal></expr>, <expr><literal type="number">0xd8542f68u</literal></expr>, <expr><literal type="number">0x960fa728u</literal></expr>, <expr><literal type="number">0xab5133a3u</literal></expr>,

<expr><literal type="number">0x6eef0b6cu</literal></expr>, <expr><literal type="number">0x137a3be4u</literal></expr>, <expr><literal type="number">0xba3bf050u</literal></expr>, <expr><literal type="number">0x7efb2a98u</literal></expr>,

<expr><literal type="number">0xa1f1651du</literal></expr>, <expr><literal type="number">0x39af0176u</literal></expr>, <expr><literal type="number">0x66ca593eu</literal></expr>, <expr><literal type="number">0x82430e88u</literal></expr>,

<expr><literal type="number">0x8cee8619u</literal></expr>, <expr><literal type="number">0x456f9fb4u</literal></expr>, <expr><literal type="number">0x7d84a5c3u</literal></expr>, <expr><literal type="number">0x3b8b5ebeu</literal></expr>,

<expr><literal type="number">0xe06f75d8u</literal></expr>, <expr><literal type="number">0x85c12073u</literal></expr>, <expr><literal type="number">0x401a449fu</literal></expr>, <expr><literal type="number">0x56c16aa6u</literal></expr>,

<expr><literal type="number">0x4ed3aa62u</literal></expr>, <expr><literal type="number">0x363f7706u</literal></expr>, <expr><literal type="number">0x1bfedf72u</literal></expr>, <expr><literal type="number">0x429b023du</literal></expr>,

<expr><literal type="number">0x37d0d724u</literal></expr>, <expr><literal type="number">0xd00a1248u</literal></expr>, <expr><literal type="number">0xdb0fead3u</literal></expr>, <expr><literal type="number">0x49f1c09bu</literal></expr>,

<expr><literal type="number">0x075372c9u</literal></expr>, <expr><literal type="number">0x80991b7bu</literal></expr>, <expr><literal type="number">0x25d479d8u</literal></expr>, <expr><literal type="number">0xf6e8def7u</literal></expr>,

<expr><literal type="number">0xe3fe501au</literal></expr>, <expr><literal type="number">0xb6794c3bu</literal></expr>, <expr><literal type="number">0x976ce0bdu</literal></expr>, <expr><literal type="number">0x04c006bau</literal></expr>,

<expr><literal type="number">0xc1a94fb6u</literal></expr>, <expr><literal type="number">0x409f60c4u</literal></expr>, <expr><literal type="number">0x5e5c9ec2u</literal></expr>, <expr><literal type="number">0x196a2463u</literal></expr>,

<expr><literal type="number">0x68fb6fafu</literal></expr>, <expr><literal type="number">0x3e6c53b5u</literal></expr>, <expr><literal type="number">0x1339b2ebu</literal></expr>, <expr><literal type="number">0x3b52ec6fu</literal></expr>,

<expr><literal type="number">0x6dfc511fu</literal></expr>, <expr><literal type="number">0x9b30952cu</literal></expr>, <expr><literal type="number">0xcc814544u</literal></expr>, <expr><literal type="number">0xaf5ebd09u</literal></expr>,

<expr><literal type="number">0xbee3d004u</literal></expr>, <expr><literal type="number">0xde334afdu</literal></expr>, <expr><literal type="number">0x660f2807u</literal></expr>, <expr><literal type="number">0x192e4bb3u</literal></expr>,

<expr><literal type="number">0xc0cba857u</literal></expr>, <expr><literal type="number">0x45c8740fu</literal></expr>, <expr><literal type="number">0xd20b5f39u</literal></expr>, <expr><literal type="number">0xb9d3fbdbu</literal></expr>,

<expr><literal type="number">0x5579c0bdu</literal></expr>, <expr><literal type="number">0x1a60320au</literal></expr>, <expr><literal type="number">0xd6a100c6u</literal></expr>, <expr><literal type="number">0x402c7279u</literal></expr>,

<expr><literal type="number">0x679f25feu</literal></expr>, <expr><literal type="number">0xfb1fa3ccu</literal></expr>, <expr><literal type="number">0x8ea5e9f8u</literal></expr>, <expr><literal type="number">0xdb3222f8u</literal></expr>,

<expr><literal type="number">0x3c7516dfu</literal></expr>, <expr><literal type="number">0xfd616b15u</literal></expr>, <expr><literal type="number">0x2f501ec8u</literal></expr>, <expr><literal type="number">0xad0552abu</literal></expr>,

<expr><literal type="number">0x323db5fau</literal></expr>, <expr><literal type="number">0xfd238760u</literal></expr>, <expr><literal type="number">0x53317b48u</literal></expr>, <expr><literal type="number">0x3e00df82u</literal></expr>,

<expr><literal type="number">0x9e5c57bbu</literal></expr>, <expr><literal type="number">0xca6f8ca0u</literal></expr>, <expr><literal type="number">0x1a87562eu</literal></expr>, <expr><literal type="number">0xdf1769dbu</literal></expr>,

<expr><literal type="number">0xd542a8f6u</literal></expr>, <expr><literal type="number">0x287effc3u</literal></expr>, <expr><literal type="number">0xac6732c6u</literal></expr>, <expr><literal type="number">0x8c4f5573u</literal></expr>,

<expr><literal type="number">0x695b27b0u</literal></expr>, <expr><literal type="number">0xbbca58c8u</literal></expr>, <expr><literal type="number">0xe1ffa35du</literal></expr>, <expr><literal type="number">0xb8f011a0u</literal></expr>,

<expr><literal type="number">0x10fa3d98u</literal></expr>, <expr><literal type="number">0xfd2183b8u</literal></expr>, <expr><literal type="number">0x4afcb56cu</literal></expr>, <expr><literal type="number">0x2dd1d35bu</literal></expr>,

<expr><literal type="number">0x9a53e479u</literal></expr>, <expr><literal type="number">0xb6f84565u</literal></expr>, <expr><literal type="number">0xd28e49bcu</literal></expr>, <expr><literal type="number">0x4bfb9790u</literal></expr>,

<expr><literal type="number">0xe1ddf2dau</literal></expr>, <expr><literal type="number">0xa4cb7e33u</literal></expr>, <expr><literal type="number">0x62fb1341u</literal></expr>, <expr><literal type="number">0xcee4c6e8u</literal></expr>,

<expr><literal type="number">0xef20cadau</literal></expr>, <expr><literal type="number">0x36774c01u</literal></expr>, <expr><literal type="number">0xd07e9efeu</literal></expr>, <expr><literal type="number">0x2bf11fb4u</literal></expr>,

<expr><literal type="number">0x95dbda4du</literal></expr>, <expr><literal type="number">0xae909198u</literal></expr>, <expr><literal type="number">0xeaad8e71u</literal></expr>, <expr><literal type="number">0x6b93d5a0u</literal></expr>,

<expr><literal type="number">0xd08ed1d0u</literal></expr>, <expr><literal type="number">0xafc725e0u</literal></expr>, <expr><literal type="number">0x8e3c5b2fu</literal></expr>, <expr><literal type="number">0x8e7594b7u</literal></expr>,

<expr><literal type="number">0x8ff6e2fbu</literal></expr>, <expr><literal type="number">0xf2122b64u</literal></expr>, <expr><literal type="number">0x8888b812u</literal></expr>, <expr><literal type="number">0x900df01cu</literal></expr>,

<expr><literal type="number">0x4fad5ea0u</literal></expr>, <expr><literal type="number">0x688fc31cu</literal></expr>, <expr><literal type="number">0xd1cff191u</literal></expr>, <expr><literal type="number">0xb3a8c1adu</literal></expr>,

<expr><literal type="number">0x2f2f2218u</literal></expr>, <expr><literal type="number">0xbe0e1777u</literal></expr>, <expr><literal type="number">0xea752dfeu</literal></expr>, <expr><literal type="number">0x8b021fa1u</literal></expr>,

<expr><literal type="number">0xe5a0cc0fu</literal></expr>, <expr><literal type="number">0xb56f74e8u</literal></expr>, <expr><literal type="number">0x18acf3d6u</literal></expr>, <expr><literal type="number">0xce89e299u</literal></expr>,

<expr><literal type="number">0xb4a84fe0u</literal></expr>, <expr><literal type="number">0xfd13e0b7u</literal></expr>, <expr><literal type="number">0x7cc43b81u</literal></expr>, <expr><literal type="number">0xd2ada8d9u</literal></expr>,

<expr><literal type="number">0x165fa266u</literal></expr>, <expr><literal type="number">0x80957705u</literal></expr>, <expr><literal type="number">0x93cc7314u</literal></expr>, <expr><literal type="number">0x211a1477u</literal></expr>,

<expr><literal type="number">0xe6ad2065u</literal></expr>, <expr><literal type="number">0x77b5fa86u</literal></expr>, <expr><literal type="number">0xc75442f5u</literal></expr>, <expr><literal type="number">0xfb9d35cfu</literal></expr>,

<expr><literal type="number">0xebcdaf0cu</literal></expr>, <expr><literal type="number">0x7b3e89a0u</literal></expr>, <expr><literal type="number">0xd6411bd3u</literal></expr>, <expr><literal type="number">0xae1e7e49u</literal></expr>,

<expr><literal type="number">0x00250e2du</literal></expr>, <expr><literal type="number">0x2071b35eu</literal></expr>, <expr><literal type="number">0x226800bbu</literal></expr>, <expr><literal type="number">0x57b8e0afu</literal></expr>,

<expr><literal type="number">0x2464369bu</literal></expr>, <expr><literal type="number">0xf009b91eu</literal></expr>, <expr><literal type="number">0x5563911du</literal></expr>, <expr><literal type="number">0x59dfa6aau</literal></expr>,

<expr><literal type="number">0x78c14389u</literal></expr>, <expr><literal type="number">0xd95a537fu</literal></expr>, <expr><literal type="number">0x207d5ba2u</literal></expr>, <expr><literal type="number">0x02e5b9c5u</literal></expr>,

<expr><literal type="number">0x83260376u</literal></expr>, <expr><literal type="number">0x6295cfa9u</literal></expr>, <expr><literal type="number">0x11c81968u</literal></expr>, <expr><literal type="number">0x4e734a41u</literal></expr>,

<expr><literal type="number">0xb3472dcau</literal></expr>, <expr><literal type="number">0x7b14a94au</literal></expr>, <expr><literal type="number">0x1b510052u</literal></expr>, <expr><literal type="number">0x9a532915u</literal></expr>,

<expr><literal type="number">0xd60f573fu</literal></expr>, <expr><literal type="number">0xbc9bc6e4u</literal></expr>, <expr><literal type="number">0x2b60a476u</literal></expr>, <expr><literal type="number">0x81e67400u</literal></expr>,

<expr><literal type="number">0x08ba6fb5u</literal></expr>, <expr><literal type="number">0x571be91fu</literal></expr>, <expr><literal type="number">0xf296ec6bu</literal></expr>, <expr><literal type="number">0x2a0dd915u</literal></expr>,

<expr><literal type="number">0xb6636521u</literal></expr>, <expr><literal type="number">0xe7b9f9b6u</literal></expr>, <expr><literal type="number">0xff34052eu</literal></expr>, <expr><literal type="number">0xc5855664u</literal></expr>,

<expr><literal type="number">0x53b02d5du</literal></expr>, <expr><literal type="number">0xa99f8fa1u</literal></expr>, <expr><literal type="number">0x08ba4799u</literal></expr>, <expr><literal type="number">0x6e85076au</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">0x4b7a70e9u</literal></expr>, <expr><literal type="number">0xb5b32944u</literal></expr>, <expr><literal type="number">0xdb75092eu</literal></expr>, <expr><literal type="number">0xc4192623u</literal></expr>,

<expr><literal type="number">0xad6ea6b0u</literal></expr>, <expr><literal type="number">0x49a7df7du</literal></expr>, <expr><literal type="number">0x9cee60b8u</literal></expr>, <expr><literal type="number">0x8fedb266u</literal></expr>,

<expr><literal type="number">0xecaa8c71u</literal></expr>, <expr><literal type="number">0x699a17ffu</literal></expr>, <expr><literal type="number">0x5664526cu</literal></expr>, <expr><literal type="number">0xc2b19ee1u</literal></expr>,

<expr><literal type="number">0x193602a5u</literal></expr>, <expr><literal type="number">0x75094c29u</literal></expr>, <expr><literal type="number">0xa0591340u</literal></expr>, <expr><literal type="number">0xe4183a3eu</literal></expr>,

<expr><literal type="number">0x3f54989au</literal></expr>, <expr><literal type="number">0x5b429d65u</literal></expr>, <expr><literal type="number">0x6b8fe4d6u</literal></expr>, <expr><literal type="number">0x99f73fd6u</literal></expr>,

<expr><literal type="number">0xa1d29c07u</literal></expr>, <expr><literal type="number">0xefe830f5u</literal></expr>, <expr><literal type="number">0x4d2d38e6u</literal></expr>, <expr><literal type="number">0xf0255dc1u</literal></expr>,

<expr><literal type="number">0x4cdd2086u</literal></expr>, <expr><literal type="number">0x8470eb26u</literal></expr>, <expr><literal type="number">0x6382e9c6u</literal></expr>, <expr><literal type="number">0x021ecc5eu</literal></expr>,

<expr><literal type="number">0x09686b3fu</literal></expr>, <expr><literal type="number">0x3ebaefc9u</literal></expr>, <expr><literal type="number">0x3c971814u</literal></expr>, <expr><literal type="number">0x6b6a70a1u</literal></expr>,

<expr><literal type="number">0x687f3584u</literal></expr>, <expr><literal type="number">0x52a0e286u</literal></expr>, <expr><literal type="number">0xb79c5305u</literal></expr>, <expr><literal type="number">0xaa500737u</literal></expr>,

<expr><literal type="number">0x3e07841cu</literal></expr>, <expr><literal type="number">0x7fdeae5cu</literal></expr>, <expr><literal type="number">0x8e7d44ecu</literal></expr>, <expr><literal type="number">0x5716f2b8u</literal></expr>,

<expr><literal type="number">0xb03ada37u</literal></expr>, <expr><literal type="number">0xf0500c0du</literal></expr>, <expr><literal type="number">0xf01c1f04u</literal></expr>, <expr><literal type="number">0x0200b3ffu</literal></expr>,

<expr><literal type="number">0xae0cf51au</literal></expr>, <expr><literal type="number">0x3cb574b2u</literal></expr>, <expr><literal type="number">0x25837a58u</literal></expr>, <expr><literal type="number">0xdc0921bdu</literal></expr>,

<expr><literal type="number">0xd19113f9u</literal></expr>, <expr><literal type="number">0x7ca92ff6u</literal></expr>, <expr><literal type="number">0x94324773u</literal></expr>, <expr><literal type="number">0x22f54701u</literal></expr>,

<expr><literal type="number">0x3ae5e581u</literal></expr>, <expr><literal type="number">0x37c2dadcu</literal></expr>, <expr><literal type="number">0xc8b57634u</literal></expr>, <expr><literal type="number">0x9af3dda7u</literal></expr>,

<expr><literal type="number">0xa9446146u</literal></expr>, <expr><literal type="number">0x0fd0030eu</literal></expr>, <expr><literal type="number">0xecc8c73eu</literal></expr>, <expr><literal type="number">0xa4751e41u</literal></expr>,

<expr><literal type="number">0xe238cd99u</literal></expr>, <expr><literal type="number">0x3bea0e2fu</literal></expr>, <expr><literal type="number">0x3280bba1u</literal></expr>, <expr><literal type="number">0x183eb331u</literal></expr>,

<expr><literal type="number">0x4e548b38u</literal></expr>, <expr><literal type="number">0x4f6db908u</literal></expr>, <expr><literal type="number">0x6f420d03u</literal></expr>, <expr><literal type="number">0xf60a04bfu</literal></expr>,

<expr><literal type="number">0x2cb81290u</literal></expr>, <expr><literal type="number">0x24977c79u</literal></expr>, <expr><literal type="number">0x5679b072u</literal></expr>, <expr><literal type="number">0xbcaf89afu</literal></expr>,

<expr><literal type="number">0xde9a771fu</literal></expr>, <expr><literal type="number">0xd9930810u</literal></expr>, <expr><literal type="number">0xb38bae12u</literal></expr>, <expr><literal type="number">0xdccf3f2eu</literal></expr>,

<expr><literal type="number">0x5512721fu</literal></expr>, <expr><literal type="number">0x2e6b7124u</literal></expr>, <expr><literal type="number">0x501adde6u</literal></expr>, <expr><literal type="number">0x9f84cd87u</literal></expr>,

<expr><literal type="number">0x7a584718u</literal></expr>, <expr><literal type="number">0x7408da17u</literal></expr>, <expr><literal type="number">0xbc9f9abcu</literal></expr>, <expr><literal type="number">0xe94b7d8cu</literal></expr>,

<expr><literal type="number">0xec7aec3au</literal></expr>, <expr><literal type="number">0xdb851dfau</literal></expr>, <expr><literal type="number">0x63094366u</literal></expr>, <expr><literal type="number">0xc464c3d2u</literal></expr>,

<expr><literal type="number">0xef1c1847u</literal></expr>, <expr><literal type="number">0x3215d908u</literal></expr>, <expr><literal type="number">0xdd433b37u</literal></expr>, <expr><literal type="number">0x24c2ba16u</literal></expr>,

<expr><literal type="number">0x12a14d43u</literal></expr>, <expr><literal type="number">0x2a65c451u</literal></expr>, <expr><literal type="number">0x50940002u</literal></expr>, <expr><literal type="number">0x133ae4ddu</literal></expr>,

<expr><literal type="number">0x71dff89eu</literal></expr>, <expr><literal type="number">0x10314e55u</literal></expr>, <expr><literal type="number">0x81ac77d6u</literal></expr>, <expr><literal type="number">0x5f11199bu</literal></expr>,

<expr><literal type="number">0x043556f1u</literal></expr>, <expr><literal type="number">0xd7a3c76bu</literal></expr>, <expr><literal type="number">0x3c11183bu</literal></expr>, <expr><literal type="number">0x5924a509u</literal></expr>,

<expr><literal type="number">0xf28fe6edu</literal></expr>, <expr><literal type="number">0x97f1fbfau</literal></expr>, <expr><literal type="number">0x9ebabf2cu</literal></expr>, <expr><literal type="number">0x1e153c6eu</literal></expr>,

<expr><literal type="number">0x86e34570u</literal></expr>, <expr><literal type="number">0xeae96fb1u</literal></expr>, <expr><literal type="number">0x860e5e0au</literal></expr>, <expr><literal type="number">0x5a3e2ab3u</literal></expr>,

<expr><literal type="number">0x771fe71cu</literal></expr>, <expr><literal type="number">0x4e3d06fau</literal></expr>, <expr><literal type="number">0x2965dcb9u</literal></expr>, <expr><literal type="number">0x99e71d0fu</literal></expr>,

<expr><literal type="number">0x803e89d6u</literal></expr>, <expr><literal type="number">0x5266c825u</literal></expr>, <expr><literal type="number">0x2e4cc978u</literal></expr>, <expr><literal type="number">0x9c10b36au</literal></expr>,

<expr><literal type="number">0xc6150ebau</literal></expr>, <expr><literal type="number">0x94e2ea78u</literal></expr>, <expr><literal type="number">0xa5fc3c53u</literal></expr>, <expr><literal type="number">0x1e0a2df4u</literal></expr>,

<expr><literal type="number">0xf2f74ea7u</literal></expr>, <expr><literal type="number">0x361d2b3du</literal></expr>, <expr><literal type="number">0x1939260fu</literal></expr>, <expr><literal type="number">0x19c27960u</literal></expr>,

<expr><literal type="number">0x5223a708u</literal></expr>, <expr><literal type="number">0xf71312b6u</literal></expr>, <expr><literal type="number">0xebadfe6eu</literal></expr>, <expr><literal type="number">0xeac31f66u</literal></expr>,

<expr><literal type="number">0xe3bc4595u</literal></expr>, <expr><literal type="number">0xa67bc883u</literal></expr>, <expr><literal type="number">0xb17f37d1u</literal></expr>, <expr><literal type="number">0x018cff28u</literal></expr>,

<expr><literal type="number">0xc332ddefu</literal></expr>, <expr><literal type="number">0xbe6c5aa5u</literal></expr>, <expr><literal type="number">0x65582185u</literal></expr>, <expr><literal type="number">0x68ab9802u</literal></expr>,

<expr><literal type="number">0xeecea50fu</literal></expr>, <expr><literal type="number">0xdb2f953bu</literal></expr>, <expr><literal type="number">0x2aef7dadu</literal></expr>, <expr><literal type="number">0x5b6e2f84u</literal></expr>,

<expr><literal type="number">0x1521b628u</literal></expr>, <expr><literal type="number">0x29076170u</literal></expr>, <expr><literal type="number">0xecdd4775u</literal></expr>, <expr><literal type="number">0x619f1510u</literal></expr>,

<expr><literal type="number">0x13cca830u</literal></expr>, <expr><literal type="number">0xeb61bd96u</literal></expr>, <expr><literal type="number">0x0334fe1eu</literal></expr>, <expr><literal type="number">0xaa0363cfu</literal></expr>,

<expr><literal type="number">0xb5735c90u</literal></expr>, <expr><literal type="number">0x4c70a239u</literal></expr>, <expr><literal type="number">0xd59e9e0bu</literal></expr>, <expr><literal type="number">0xcbaade14u</literal></expr>,

<expr><literal type="number">0xeecc86bcu</literal></expr>, <expr><literal type="number">0x60622ca7u</literal></expr>, <expr><literal type="number">0x9cab5cabu</literal></expr>, <expr><literal type="number">0xb2f3846eu</literal></expr>,

<expr><literal type="number">0x648b1eafu</literal></expr>, <expr><literal type="number">0x19bdf0cau</literal></expr>, <expr><literal type="number">0xa02369b9u</literal></expr>, <expr><literal type="number">0x655abb50u</literal></expr>,

<expr><literal type="number">0x40685a32u</literal></expr>, <expr><literal type="number">0x3c2ab4b3u</literal></expr>, <expr><literal type="number">0x319ee9d5u</literal></expr>, <expr><literal type="number">0xc021b8f7u</literal></expr>,

<expr><literal type="number">0x9b540b19u</literal></expr>, <expr><literal type="number">0x875fa099u</literal></expr>, <expr><literal type="number">0x95f7997eu</literal></expr>, <expr><literal type="number">0x623d7da8u</literal></expr>,

<expr><literal type="number">0xf837889au</literal></expr>, <expr><literal type="number">0x97e32d77u</literal></expr>, <expr><literal type="number">0x11ed935fu</literal></expr>, <expr><literal type="number">0x16681281u</literal></expr>,

<expr><literal type="number">0x0e358829u</literal></expr>, <expr><literal type="number">0xc7e61fd6u</literal></expr>, <expr><literal type="number">0x96dedfa1u</literal></expr>, <expr><literal type="number">0x7858ba99u</literal></expr>,

<expr><literal type="number">0x57f584a5u</literal></expr>, <expr><literal type="number">0x1b227263u</literal></expr>, <expr><literal type="number">0x9b83c3ffu</literal></expr>, <expr><literal type="number">0x1ac24696u</literal></expr>,

<expr><literal type="number">0xcdb30aebu</literal></expr>, <expr><literal type="number">0x532e3054u</literal></expr>, <expr><literal type="number">0x8fd948e4u</literal></expr>, <expr><literal type="number">0x6dbc3128u</literal></expr>,

<expr><literal type="number">0x58ebf2efu</literal></expr>, <expr><literal type="number">0x34c6ffeau</literal></expr>, <expr><literal type="number">0xfe28ed61u</literal></expr>, <expr><literal type="number">0xee7c3c73u</literal></expr>,

<expr><literal type="number">0x5d4a14d9u</literal></expr>, <expr><literal type="number">0xe864b7e3u</literal></expr>, <expr><literal type="number">0x42105d14u</literal></expr>, <expr><literal type="number">0x203e13e0u</literal></expr>,

<expr><literal type="number">0x45eee2b6u</literal></expr>, <expr><literal type="number">0xa3aaabeau</literal></expr>, <expr><literal type="number">0xdb6c4f15u</literal></expr>, <expr><literal type="number">0xfacb4fd0u</literal></expr>,

<expr><literal type="number">0xc742f442u</literal></expr>, <expr><literal type="number">0xef6abbb5u</literal></expr>, <expr><literal type="number">0x654f3b1du</literal></expr>, <expr><literal type="number">0x41cd2105u</literal></expr>,

<expr><literal type="number">0xd81e799eu</literal></expr>, <expr><literal type="number">0x86854dc7u</literal></expr>, <expr><literal type="number">0xe44b476au</literal></expr>, <expr><literal type="number">0x3d816250u</literal></expr>,

<expr><literal type="number">0xcf62a1f2u</literal></expr>, <expr><literal type="number">0x5b8d2646u</literal></expr>, <expr><literal type="number">0xfc8883a0u</literal></expr>, <expr><literal type="number">0xc1c7b6a3u</literal></expr>,

<expr><literal type="number">0x7f1524c3u</literal></expr>, <expr><literal type="number">0x69cb7492u</literal></expr>, <expr><literal type="number">0x47848a0bu</literal></expr>, <expr><literal type="number">0x5692b285u</literal></expr>,

<expr><literal type="number">0x095bbf00u</literal></expr>, <expr><literal type="number">0xad19489du</literal></expr>, <expr><literal type="number">0x1462b174u</literal></expr>, <expr><literal type="number">0x23820e00u</literal></expr>,

<expr><literal type="number">0x58428d2au</literal></expr>, <expr><literal type="number">0x0c55f5eau</literal></expr>, <expr><literal type="number">0x1dadf43eu</literal></expr>, <expr><literal type="number">0x233f7061u</literal></expr>,

<expr><literal type="number">0x3372f092u</literal></expr>, <expr><literal type="number">0x8d937e41u</literal></expr>, <expr><literal type="number">0xd65fecf1u</literal></expr>, <expr><literal type="number">0x6c223bdbu</literal></expr>,

<expr><literal type="number">0x7cde3759u</literal></expr>, <expr><literal type="number">0xcbee7460u</literal></expr>, <expr><literal type="number">0x4085f2a7u</literal></expr>, <expr><literal type="number">0xce77326eu</literal></expr>,

<expr><literal type="number">0xa6078084u</literal></expr>, <expr><literal type="number">0x19f8509eu</literal></expr>, <expr><literal type="number">0xe8efd855u</literal></expr>, <expr><literal type="number">0x61d99735u</literal></expr>,

<expr><literal type="number">0xa969a7aau</literal></expr>, <expr><literal type="number">0xc50c06c2u</literal></expr>, <expr><literal type="number">0x5a04abfcu</literal></expr>, <expr><literal type="number">0x800bcadcu</literal></expr>,

<expr><literal type="number">0x9e447a2eu</literal></expr>, <expr><literal type="number">0xc3453484u</literal></expr>, <expr><literal type="number">0xfdd56705u</literal></expr>, <expr><literal type="number">0x0e1e9ec9u</literal></expr>,

<expr><literal type="number">0xdb73dbd3u</literal></expr>, <expr><literal type="number">0x105588cdu</literal></expr>, <expr><literal type="number">0x675fda79u</literal></expr>, <expr><literal type="number">0xe3674340u</literal></expr>,

<expr><literal type="number">0xc5c43465u</literal></expr>, <expr><literal type="number">0x713e38d8u</literal></expr>, <expr><literal type="number">0x3d28f89eu</literal></expr>, <expr><literal type="number">0xf16dff20u</literal></expr>,

<expr><literal type="number">0x153e21e7u</literal></expr>, <expr><literal type="number">0x8fb03d4au</literal></expr>, <expr><literal type="number">0xe6e39f2bu</literal></expr>, <expr><literal type="number">0xdb83adf7u</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">0xe93d5a68u</literal></expr>, <expr><literal type="number">0x948140f7u</literal></expr>, <expr><literal type="number">0xf64c261cu</literal></expr>, <expr><literal type="number">0x94692934u</literal></expr>,

<expr><literal type="number">0x411520f7u</literal></expr>, <expr><literal type="number">0x7602d4f7u</literal></expr>, <expr><literal type="number">0xbcf46b2eu</literal></expr>, <expr><literal type="number">0xd4a20068u</literal></expr>,

<expr><literal type="number">0xd4082471u</literal></expr>, <expr><literal type="number">0x3320f46au</literal></expr>, <expr><literal type="number">0x43b7d4b7u</literal></expr>, <expr><literal type="number">0x500061afu</literal></expr>,

<expr><literal type="number">0x1e39f62eu</literal></expr>, <expr><literal type="number">0x97244546u</literal></expr>, <expr><literal type="number">0x14214f74u</literal></expr>, <expr><literal type="number">0xbf8b8840u</literal></expr>,

<expr><literal type="number">0x4d95fc1du</literal></expr>, <expr><literal type="number">0x96b591afu</literal></expr>, <expr><literal type="number">0x70f4ddd3u</literal></expr>, <expr><literal type="number">0x66a02f45u</literal></expr>,

<expr><literal type="number">0xbfbc09ecu</literal></expr>, <expr><literal type="number">0x03bd9785u</literal></expr>, <expr><literal type="number">0x7fac6dd0u</literal></expr>, <expr><literal type="number">0x31cb8504u</literal></expr>,

<expr><literal type="number">0x96eb27b3u</literal></expr>, <expr><literal type="number">0x55fd3941u</literal></expr>, <expr><literal type="number">0xda2547e6u</literal></expr>, <expr><literal type="number">0xabca0a9au</literal></expr>,

<expr><literal type="number">0x28507825u</literal></expr>, <expr><literal type="number">0x530429f4u</literal></expr>, <expr><literal type="number">0x0a2c86dau</literal></expr>, <expr><literal type="number">0xe9b66dfbu</literal></expr>,

<expr><literal type="number">0x68dc1462u</literal></expr>, <expr><literal type="number">0xd7486900u</literal></expr>, <expr><literal type="number">0x680ec0a4u</literal></expr>, <expr><literal type="number">0x27a18deeu</literal></expr>,

<expr><literal type="number">0x4f3ffea2u</literal></expr>, <expr><literal type="number">0xe887ad8cu</literal></expr>, <expr><literal type="number">0xb58ce006u</literal></expr>, <expr><literal type="number">0x7af4d6b6u</literal></expr>,

<expr><literal type="number">0xaace1e7cu</literal></expr>, <expr><literal type="number">0xd3375fecu</literal></expr>, <expr><literal type="number">0xce78a399u</literal></expr>, <expr><literal type="number">0x406b2a42u</literal></expr>,

<expr><literal type="number">0x20fe9e35u</literal></expr>, <expr><literal type="number">0xd9f385b9u</literal></expr>, <expr><literal type="number">0xee39d7abu</literal></expr>, <expr><literal type="number">0x3b124e8bu</literal></expr>,

<expr><literal type="number">0x1dc9faf7u</literal></expr>, <expr><literal type="number">0x4b6d1856u</literal></expr>, <expr><literal type="number">0x26a36631u</literal></expr>, <expr><literal type="number">0xeae397b2u</literal></expr>,

<expr><literal type="number">0x3a6efa74u</literal></expr>, <expr><literal type="number">0xdd5b4332u</literal></expr>, <expr><literal type="number">0x6841e7f7u</literal></expr>, <expr><literal type="number">0xca7820fbu</literal></expr>,

<expr><literal type="number">0xfb0af54eu</literal></expr>, <expr><literal type="number">0xd8feb397u</literal></expr>, <expr><literal type="number">0x454056acu</literal></expr>, <expr><literal type="number">0xba489527u</literal></expr>,

<expr><literal type="number">0x55533a3au</literal></expr>, <expr><literal type="number">0x20838d87u</literal></expr>, <expr><literal type="number">0xfe6ba9b7u</literal></expr>, <expr><literal type="number">0xd096954bu</literal></expr>,

<expr><literal type="number">0x55a867bcu</literal></expr>, <expr><literal type="number">0xa1159a58u</literal></expr>, <expr><literal type="number">0xcca92963u</literal></expr>, <expr><literal type="number">0x99e1db33u</literal></expr>,

<expr><literal type="number">0xa62a4a56u</literal></expr>, <expr><literal type="number">0x3f3125f9u</literal></expr>, <expr><literal type="number">0x5ef47e1cu</literal></expr>, <expr><literal type="number">0x9029317cu</literal></expr>,

<expr><literal type="number">0xfdf8e802u</literal></expr>, <expr><literal type="number">0x04272f70u</literal></expr>, <expr><literal type="number">0x80bb155cu</literal></expr>, <expr><literal type="number">0x05282ce3u</literal></expr>,

<expr><literal type="number">0x95c11548u</literal></expr>, <expr><literal type="number">0xe4c66d22u</literal></expr>, <expr><literal type="number">0x48c1133fu</literal></expr>, <expr><literal type="number">0xc70f86dcu</literal></expr>,

<expr><literal type="number">0x07f9c9eeu</literal></expr>, <expr><literal type="number">0x41041f0fu</literal></expr>, <expr><literal type="number">0x404779a4u</literal></expr>, <expr><literal type="number">0x5d886e17u</literal></expr>,

<expr><literal type="number">0x325f51ebu</literal></expr>, <expr><literal type="number">0xd59bc0d1u</literal></expr>, <expr><literal type="number">0xf2bcc18fu</literal></expr>, <expr><literal type="number">0x41113564u</literal></expr>,

<expr><literal type="number">0x257b7834u</literal></expr>, <expr><literal type="number">0x602a9c60u</literal></expr>, <expr><literal type="number">0xdff8e8a3u</literal></expr>, <expr><literal type="number">0x1f636c1bu</literal></expr>,

<expr><literal type="number">0x0e12b4c2u</literal></expr>, <expr><literal type="number">0x02e1329eu</literal></expr>, <expr><literal type="number">0xaf664fd1u</literal></expr>, <expr><literal type="number">0xcad18115u</literal></expr>,

<expr><literal type="number">0x6b2395e0u</literal></expr>, <expr><literal type="number">0x333e92e1u</literal></expr>, <expr><literal type="number">0x3b240b62u</literal></expr>, <expr><literal type="number">0xeebeb922u</literal></expr>,

<expr><literal type="number">0x85b2a20eu</literal></expr>, <expr><literal type="number">0xe6ba0d99u</literal></expr>, <expr><literal type="number">0xde720c8cu</literal></expr>, <expr><literal type="number">0x2da2f728u</literal></expr>,

<expr><literal type="number">0xd0127845u</literal></expr>, <expr><literal type="number">0x95b794fdu</literal></expr>, <expr><literal type="number">0x647d0862u</literal></expr>, <expr><literal type="number">0xe7ccf5f0u</literal></expr>,

<expr><literal type="number">0x5449a36fu</literal></expr>, <expr><literal type="number">0x877d48fau</literal></expr>, <expr><literal type="number">0xc39dfd27u</literal></expr>, <expr><literal type="number">0xf33e8d1eu</literal></expr>,

<expr><literal type="number">0x0a476341u</literal></expr>, <expr><literal type="number">0x992eff74u</literal></expr>, <expr><literal type="number">0x3a6f6eabu</literal></expr>, <expr><literal type="number">0xf4f8fd37u</literal></expr>,

<expr><literal type="number">0xa812dc60u</literal></expr>, <expr><literal type="number">0xa1ebddf8u</literal></expr>, <expr><literal type="number">0x991be14cu</literal></expr>, <expr><literal type="number">0xdb6e6b0du</literal></expr>,

<expr><literal type="number">0xc67b5510u</literal></expr>, <expr><literal type="number">0x6d672c37u</literal></expr>, <expr><literal type="number">0x2765d43bu</literal></expr>, <expr><literal type="number">0xdcd0e804u</literal></expr>,

<expr><literal type="number">0xf1290dc7u</literal></expr>, <expr><literal type="number">0xcc00ffa3u</literal></expr>, <expr><literal type="number">0xb5390f92u</literal></expr>, <expr><literal type="number">0x690fed0bu</literal></expr>,

<expr><literal type="number">0x667b9ffbu</literal></expr>, <expr><literal type="number">0xcedb7d9cu</literal></expr>, <expr><literal type="number">0xa091cf0bu</literal></expr>, <expr><literal type="number">0xd9155ea3u</literal></expr>,

<expr><literal type="number">0xbb132f88u</literal></expr>, <expr><literal type="number">0x515bad24u</literal></expr>, <expr><literal type="number">0x7b9479bfu</literal></expr>, <expr><literal type="number">0x763bd6ebu</literal></expr>,

<expr><literal type="number">0x37392eb3u</literal></expr>, <expr><literal type="number">0xcc115979u</literal></expr>, <expr><literal type="number">0x8026e297u</literal></expr>, <expr><literal type="number">0xf42e312du</literal></expr>,

<expr><literal type="number">0x6842ada7u</literal></expr>, <expr><literal type="number">0xc66a2b3bu</literal></expr>, <expr><literal type="number">0x12754cccu</literal></expr>, <expr><literal type="number">0x782ef11cu</literal></expr>,

<expr><literal type="number">0x6a124237u</literal></expr>, <expr><literal type="number">0xb79251e7u</literal></expr>, <expr><literal type="number">0x06a1bbe6u</literal></expr>, <expr><literal type="number">0x4bfb6350u</literal></expr>,

<expr><literal type="number">0x1a6b1018u</literal></expr>, <expr><literal type="number">0x11caedfau</literal></expr>, <expr><literal type="number">0x3d25bdd8u</literal></expr>, <expr><literal type="number">0xe2e1c3c9u</literal></expr>,

<expr><literal type="number">0x44421659u</literal></expr>, <expr><literal type="number">0x0a121386u</literal></expr>, <expr><literal type="number">0xd90cec6eu</literal></expr>, <expr><literal type="number">0xd5abea2au</literal></expr>,

<expr><literal type="number">0x64af674eu</literal></expr>, <expr><literal type="number">0xda86a85fu</literal></expr>, <expr><literal type="number">0xbebfe988u</literal></expr>, <expr><literal type="number">0x64e4c3feu</literal></expr>,

<expr><literal type="number">0x9dbc8057u</literal></expr>, <expr><literal type="number">0xf0f7c086u</literal></expr>, <expr><literal type="number">0x60787bf8u</literal></expr>, <expr><literal type="number">0x6003604du</literal></expr>,

<expr><literal type="number">0xd1fd8346u</literal></expr>, <expr><literal type="number">0xf6381fb0u</literal></expr>, <expr><literal type="number">0x7745ae04u</literal></expr>, <expr><literal type="number">0xd736fcccu</literal></expr>,

<expr><literal type="number">0x83426b33u</literal></expr>, <expr><literal type="number">0xf01eab71u</literal></expr>, <expr><literal type="number">0xb0804187u</literal></expr>, <expr><literal type="number">0x3c005e5fu</literal></expr>,

<expr><literal type="number">0x77a057beu</literal></expr>, <expr><literal type="number">0xbde8ae24u</literal></expr>, <expr><literal type="number">0x55464299u</literal></expr>, <expr><literal type="number">0xbf582e61u</literal></expr>,

<expr><literal type="number">0x4e58f48fu</literal></expr>, <expr><literal type="number">0xf2ddfda2u</literal></expr>, <expr><literal type="number">0xf474ef38u</literal></expr>, <expr><literal type="number">0x8789bdc2u</literal></expr>,

<expr><literal type="number">0x5366f9c3u</literal></expr>, <expr><literal type="number">0xc8b38e74u</literal></expr>, <expr><literal type="number">0xb475f255u</literal></expr>, <expr><literal type="number">0x46fcd9b9u</literal></expr>,

<expr><literal type="number">0x7aeb2661u</literal></expr>, <expr><literal type="number">0x8b1ddf84u</literal></expr>, <expr><literal type="number">0x846a0e79u</literal></expr>, <expr><literal type="number">0x915f95e2u</literal></expr>,

<expr><literal type="number">0x466e598eu</literal></expr>, <expr><literal type="number">0x20b45770u</literal></expr>, <expr><literal type="number">0x8cd55591u</literal></expr>, <expr><literal type="number">0xc902de4cu</literal></expr>,

<expr><literal type="number">0xb90bace1u</literal></expr>, <expr><literal type="number">0xbb8205d0u</literal></expr>, <expr><literal type="number">0x11a86248u</literal></expr>, <expr><literal type="number">0x7574a99eu</literal></expr>,

<expr><literal type="number">0xb77f19b6u</literal></expr>, <expr><literal type="number">0xe0a9dc09u</literal></expr>, <expr><literal type="number">0x662d09a1u</literal></expr>, <expr><literal type="number">0xc4324633u</literal></expr>,

<expr><literal type="number">0xe85a1f02u</literal></expr>, <expr><literal type="number">0x09f0be8cu</literal></expr>, <expr><literal type="number">0x4a99a025u</literal></expr>, <expr><literal type="number">0x1d6efe10u</literal></expr>,

<expr><literal type="number">0x1ab93d1du</literal></expr>, <expr><literal type="number">0x0ba5a4dfu</literal></expr>, <expr><literal type="number">0xa186f20fu</literal></expr>, <expr><literal type="number">0x2868f169u</literal></expr>,

<expr><literal type="number">0xdcb7da83u</literal></expr>, <expr><literal type="number">0x573906feu</literal></expr>, <expr><literal type="number">0xa1e2ce9bu</literal></expr>, <expr><literal type="number">0x4fcd7f52u</literal></expr>,

<expr><literal type="number">0x50115e01u</literal></expr>, <expr><literal type="number">0xa70683fau</literal></expr>, <expr><literal type="number">0xa002b5c4u</literal></expr>, <expr><literal type="number">0x0de6d027u</literal></expr>,

<expr><literal type="number">0x9af88c27u</literal></expr>, <expr><literal type="number">0x773f8641u</literal></expr>, <expr><literal type="number">0xc3604c06u</literal></expr>, <expr><literal type="number">0x61a806b5u</literal></expr>,

<expr><literal type="number">0xf0177a28u</literal></expr>, <expr><literal type="number">0xc0f586e0u</literal></expr>, <expr><literal type="number">0x006058aau</literal></expr>, <expr><literal type="number">0x30dc7d62u</literal></expr>,

<expr><literal type="number">0x11e69ed7u</literal></expr>, <expr><literal type="number">0x2338ea63u</literal></expr>, <expr><literal type="number">0x53c2dd94u</literal></expr>, <expr><literal type="number">0xc2c21634u</literal></expr>,

<expr><literal type="number">0xbbcbee56u</literal></expr>, <expr><literal type="number">0x90bcb6deu</literal></expr>, <expr><literal type="number">0xebfc7da1u</literal></expr>, <expr><literal type="number">0xce591d76u</literal></expr>,

<expr><literal type="number">0x6f05e409u</literal></expr>, <expr><literal type="number">0x4b7c0188u</literal></expr>, <expr><literal type="number">0x39720a3du</literal></expr>, <expr><literal type="number">0x7c927c24u</literal></expr>,

<expr><literal type="number">0x86e3725fu</literal></expr>, <expr><literal type="number">0x724d9db9u</literal></expr>, <expr><literal type="number">0x1ac15bb4u</literal></expr>, <expr><literal type="number">0xd39eb8fcu</literal></expr>,

<expr><literal type="number">0xed545578u</literal></expr>, <expr><literal type="number">0x08fca5b5u</literal></expr>, <expr><literal type="number">0xd83d7cd3u</literal></expr>, <expr><literal type="number">0x4dad0fc4u</literal></expr>,

<expr><literal type="number">0x1e50ef5eu</literal></expr>, <expr><literal type="number">0xb161e6f8u</literal></expr>, <expr><literal type="number">0xa28514d9u</literal></expr>, <expr><literal type="number">0x6c51133cu</literal></expr>,

<expr><literal type="number">0x6fd5c7e7u</literal></expr>, <expr><literal type="number">0x56e14ec4u</literal></expr>, <expr><literal type="number">0x362abfceu</literal></expr>, <expr><literal type="number">0xddc6c837u</literal></expr>,

<expr><literal type="number">0xd79a3234u</literal></expr>, <expr><literal type="number">0x92638212u</literal></expr>, <expr><literal type="number">0x670efa8eu</literal></expr>, <expr><literal type="number">0x406000e0u</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">0x3a39ce37u</literal></expr>, <expr><literal type="number">0xd3faf5cfu</literal></expr>, <expr><literal type="number">0xabc27737u</literal></expr>, <expr><literal type="number">0x5ac52d1bu</literal></expr>,

<expr><literal type="number">0x5cb0679eu</literal></expr>, <expr><literal type="number">0x4fa33742u</literal></expr>, <expr><literal type="number">0xd3822740u</literal></expr>, <expr><literal type="number">0x99bc9bbeu</literal></expr>,

<expr><literal type="number">0xd5118e9du</literal></expr>, <expr><literal type="number">0xbf0f7315u</literal></expr>, <expr><literal type="number">0xd62d1c7eu</literal></expr>, <expr><literal type="number">0xc700c47bu</literal></expr>,

<expr><literal type="number">0xb78c1b6bu</literal></expr>, <expr><literal type="number">0x21a19045u</literal></expr>, <expr><literal type="number">0xb26eb1beu</literal></expr>, <expr><literal type="number">0x6a366eb4u</literal></expr>,

<expr><literal type="number">0x5748ab2fu</literal></expr>, <expr><literal type="number">0xbc946e79u</literal></expr>, <expr><literal type="number">0xc6a376d2u</literal></expr>, <expr><literal type="number">0x6549c2c8u</literal></expr>,

<expr><literal type="number">0x530ff8eeu</literal></expr>, <expr><literal type="number">0x468dde7du</literal></expr>, <expr><literal type="number">0xd5730a1du</literal></expr>, <expr><literal type="number">0x4cd04dc6u</literal></expr>,

<expr><literal type="number">0x2939bbdbu</literal></expr>, <expr><literal type="number">0xa9ba4650u</literal></expr>, <expr><literal type="number">0xac9526e8u</literal></expr>, <expr><literal type="number">0xbe5ee304u</literal></expr>,

<expr><literal type="number">0xa1fad5f0u</literal></expr>, <expr><literal type="number">0x6a2d519au</literal></expr>, <expr><literal type="number">0x63ef8ce2u</literal></expr>, <expr><literal type="number">0x9a86ee22u</literal></expr>,

<expr><literal type="number">0xc089c2b8u</literal></expr>, <expr><literal type="number">0x43242ef6u</literal></expr>, <expr><literal type="number">0xa51e03aau</literal></expr>, <expr><literal type="number">0x9cf2d0a4u</literal></expr>,

<expr><literal type="number">0x83c061bau</literal></expr>, <expr><literal type="number">0x9be96a4du</literal></expr>, <expr><literal type="number">0x8fe51550u</literal></expr>, <expr><literal type="number">0xba645bd6u</literal></expr>,

<expr><literal type="number">0x2826a2f9u</literal></expr>, <expr><literal type="number">0xa73a3ae1u</literal></expr>, <expr><literal type="number">0x4ba99586u</literal></expr>, <expr><literal type="number">0xef5562e9u</literal></expr>,

<expr><literal type="number">0xc72fefd3u</literal></expr>, <expr><literal type="number">0xf752f7dau</literal></expr>, <expr><literal type="number">0x3f046f69u</literal></expr>, <expr><literal type="number">0x77fa0a59u</literal></expr>,

<expr><literal type="number">0x80e4a915u</literal></expr>, <expr><literal type="number">0x87b08601u</literal></expr>, <expr><literal type="number">0x9b09e6adu</literal></expr>, <expr><literal type="number">0x3b3ee593u</literal></expr>,

<expr><literal type="number">0xe990fd5au</literal></expr>, <expr><literal type="number">0x9e34d797u</literal></expr>, <expr><literal type="number">0x2cf0b7d9u</literal></expr>, <expr><literal type="number">0x022b8b51u</literal></expr>,

<expr><literal type="number">0x96d5ac3au</literal></expr>, <expr><literal type="number">0x017da67du</literal></expr>, <expr><literal type="number">0xd1cf3ed6u</literal></expr>, <expr><literal type="number">0x7c7d2d28u</literal></expr>,

<expr><literal type="number">0x1f9f25cfu</literal></expr>, <expr><literal type="number">0xadf2b89bu</literal></expr>, <expr><literal type="number">0x5ad6b472u</literal></expr>, <expr><literal type="number">0x5a88f54cu</literal></expr>,

<expr><literal type="number">0xe029ac71u</literal></expr>, <expr><literal type="number">0xe019a5e6u</literal></expr>, <expr><literal type="number">0x47b0acfdu</literal></expr>, <expr><literal type="number">0xed93fa9bu</literal></expr>,

<expr><literal type="number">0xe8d3c48du</literal></expr>, <expr><literal type="number">0x283b57ccu</literal></expr>, <expr><literal type="number">0xf8d56629u</literal></expr>, <expr><literal type="number">0x79132e28u</literal></expr>,

<expr><literal type="number">0x785f0191u</literal></expr>, <expr><literal type="number">0xed756055u</literal></expr>, <expr><literal type="number">0xf7960e44u</literal></expr>, <expr><literal type="number">0xe3d35e8cu</literal></expr>,

<expr><literal type="number">0x15056dd4u</literal></expr>, <expr><literal type="number">0x88f46dbau</literal></expr>, <expr><literal type="number">0x03a16125u</literal></expr>, <expr><literal type="number">0x0564f0bdu</literal></expr>,

<expr><literal type="number">0xc3eb9e15u</literal></expr>, <expr><literal type="number">0x3c9057a2u</literal></expr>, <expr><literal type="number">0x97271aecu</literal></expr>, <expr><literal type="number">0xa93a072au</literal></expr>,

<expr><literal type="number">0x1b3f6d9bu</literal></expr>, <expr><literal type="number">0x1e6321f5u</literal></expr>, <expr><literal type="number">0xf59c66fbu</literal></expr>, <expr><literal type="number">0x26dcf319u</literal></expr>,

<expr><literal type="number">0x7533d928u</literal></expr>, <expr><literal type="number">0xb155fdf5u</literal></expr>, <expr><literal type="number">0x03563482u</literal></expr>, <expr><literal type="number">0x8aba3cbbu</literal></expr>,

<expr><literal type="number">0x28517711u</literal></expr>, <expr><literal type="number">0xc20ad9f8u</literal></expr>, <expr><literal type="number">0xabcc5167u</literal></expr>, <expr><literal type="number">0xccad925fu</literal></expr>,

<expr><literal type="number">0x4de81751u</literal></expr>, <expr><literal type="number">0x3830dc8eu</literal></expr>, <expr><literal type="number">0x379d5862u</literal></expr>, <expr><literal type="number">0x9320f991u</literal></expr>,

<expr><literal type="number">0xea7a90c2u</literal></expr>, <expr><literal type="number">0xfb3e7bceu</literal></expr>, <expr><literal type="number">0x5121ce64u</literal></expr>, <expr><literal type="number">0x774fbe32u</literal></expr>,

<expr><literal type="number">0xa8b6e37eu</literal></expr>, <expr><literal type="number">0xc3293d46u</literal></expr>, <expr><literal type="number">0x48de5369u</literal></expr>, <expr><literal type="number">0x6413e680u</literal></expr>,

<expr><literal type="number">0xa2ae0810u</literal></expr>, <expr><literal type="number">0xdd6db224u</literal></expr>, <expr><literal type="number">0x69852dfdu</literal></expr>, <expr><literal type="number">0x09072166u</literal></expr>,

<expr><literal type="number">0xb39a460au</literal></expr>, <expr><literal type="number">0x6445c0ddu</literal></expr>, <expr><literal type="number">0x586cdecfu</literal></expr>, <expr><literal type="number">0x1c20c8aeu</literal></expr>,

<expr><literal type="number">0x5bbef7ddu</literal></expr>, <expr><literal type="number">0x1b588d40u</literal></expr>, <expr><literal type="number">0xccd2017fu</literal></expr>, <expr><literal type="number">0x6bb4e3bbu</literal></expr>,

<expr><literal type="number">0xdda26a7eu</literal></expr>, <expr><literal type="number">0x3a59ff45u</literal></expr>, <expr><literal type="number">0x3e350a44u</literal></expr>, <expr><literal type="number">0xbcb4cdd5u</literal></expr>,

<expr><literal type="number">0x72eacea8u</literal></expr>, <expr><literal type="number">0xfa6484bbu</literal></expr>, <expr><literal type="number">0x8d6612aeu</literal></expr>, <expr><literal type="number">0xbf3c6f47u</literal></expr>,

<expr><literal type="number">0xd29be463u</literal></expr>, <expr><literal type="number">0x542f5d9eu</literal></expr>, <expr><literal type="number">0xaec2771bu</literal></expr>, <expr><literal type="number">0xf64e6370u</literal></expr>,

<expr><literal type="number">0x740e0d8du</literal></expr>, <expr><literal type="number">0xe75b1357u</literal></expr>, <expr><literal type="number">0xf8721671u</literal></expr>, <expr><literal type="number">0xaf537d5du</literal></expr>,

<expr><literal type="number">0x4040cb08u</literal></expr>, <expr><literal type="number">0x4eb4e2ccu</literal></expr>, <expr><literal type="number">0x34d2466au</literal></expr>, <expr><literal type="number">0x0115af84u</literal></expr>,

<expr><literal type="number">0xe1b00428u</literal></expr>, <expr><literal type="number">0x95983a1du</literal></expr>, <expr><literal type="number">0x06b89fb4u</literal></expr>, <expr><literal type="number">0xce6ea048u</literal></expr>,

<expr><literal type="number">0x6f3f3b82u</literal></expr>, <expr><literal type="number">0x3520ab82u</literal></expr>, <expr><literal type="number">0x011a1d4bu</literal></expr>, <expr><literal type="number">0x277227f8u</literal></expr>,

<expr><literal type="number">0x611560b1u</literal></expr>, <expr><literal type="number">0xe7933fdcu</literal></expr>, <expr><literal type="number">0xbb3a792bu</literal></expr>, <expr><literal type="number">0x344525bdu</literal></expr>,

<expr><literal type="number">0xa08839e1u</literal></expr>, <expr><literal type="number">0x51ce794bu</literal></expr>, <expr><literal type="number">0x2f32c9b7u</literal></expr>, <expr><literal type="number">0xa01fbac9u</literal></expr>,

<expr><literal type="number">0xe01cc87eu</literal></expr>, <expr><literal type="number">0xbcc7d1f6u</literal></expr>, <expr><literal type="number">0xcf0111c3u</literal></expr>, <expr><literal type="number">0xa1e8aac7u</literal></expr>,

<expr><literal type="number">0x1a908749u</literal></expr>, <expr><literal type="number">0xd44fbd9au</literal></expr>, <expr><literal type="number">0xd0dadecbu</literal></expr>, <expr><literal type="number">0xd50ada38u</literal></expr>,

<expr><literal type="number">0x0339c32au</literal></expr>, <expr><literal type="number">0xc6913667u</literal></expr>, <expr><literal type="number">0x8df9317cu</literal></expr>, <expr><literal type="number">0xe0b12b4fu</literal></expr>,

<expr><literal type="number">0xf79e59b7u</literal></expr>, <expr><literal type="number">0x43f5bb3au</literal></expr>, <expr><literal type="number">0xf2d519ffu</literal></expr>, <expr><literal type="number">0x27d9459cu</literal></expr>,

<expr><literal type="number">0xbf97222cu</literal></expr>, <expr><literal type="number">0x15e6fc2au</literal></expr>, <expr><literal type="number">0x0f91fc71u</literal></expr>, <expr><literal type="number">0x9b941525u</literal></expr>,

<expr><literal type="number">0xfae59361u</literal></expr>, <expr><literal type="number">0xceb69cebu</literal></expr>, <expr><literal type="number">0xc2a86459u</literal></expr>, <expr><literal type="number">0x12baa8d1u</literal></expr>,

<expr><literal type="number">0xb6c1075eu</literal></expr>, <expr><literal type="number">0xe3056a0cu</literal></expr>, <expr><literal type="number">0x10d25065u</literal></expr>, <expr><literal type="number">0xcb03a442u</literal></expr>,

<expr><literal type="number">0xe0ec6e0eu</literal></expr>, <expr><literal type="number">0x1698db3bu</literal></expr>, <expr><literal type="number">0x4c98a0beu</literal></expr>, <expr><literal type="number">0x3278e964u</literal></expr>,

<expr><literal type="number">0x9f1f9532u</literal></expr>, <expr><literal type="number">0xe0d392dfu</literal></expr>, <expr><literal type="number">0xd3a0342bu</literal></expr>, <expr><literal type="number">0x8971f21eu</literal></expr>,

<expr><literal type="number">0x1b0a7441u</literal></expr>, <expr><literal type="number">0x4ba3348cu</literal></expr>, <expr><literal type="number">0xc5be7120u</literal></expr>, <expr><literal type="number">0xc37632d8u</literal></expr>,

<expr><literal type="number">0xdf359f8du</literal></expr>, <expr><literal type="number">0x9b992f2eu</literal></expr>, <expr><literal type="number">0xe60b6f47u</literal></expr>, <expr><literal type="number">0x0fe3f11du</literal></expr>,

<expr><literal type="number">0xe54cda54u</literal></expr>, <expr><literal type="number">0x1edad891u</literal></expr>, <expr><literal type="number">0xce6279cfu</literal></expr>, <expr><literal type="number">0xcd3e7e6fu</literal></expr>,

<expr><literal type="number">0x1618b166u</literal></expr>, <expr><literal type="number">0xfd2c1d05u</literal></expr>, <expr><literal type="number">0x848fd2c5u</literal></expr>, <expr><literal type="number">0xf6fb2299u</literal></expr>,

<expr><literal type="number">0xf523f357u</literal></expr>, <expr><literal type="number">0xa6327623u</literal></expr>, <expr><literal type="number">0x93a83531u</literal></expr>, <expr><literal type="number">0x56cccd02u</literal></expr>,

<expr><literal type="number">0xacf08162u</literal></expr>, <expr><literal type="number">0x5a75ebb5u</literal></expr>, <expr><literal type="number">0x6e163697u</literal></expr>, <expr><literal type="number">0x88d273ccu</literal></expr>,

<expr><literal type="number">0xde966292u</literal></expr>, <expr><literal type="number">0x81b949d0u</literal></expr>, <expr><literal type="number">0x4c50901bu</literal></expr>, <expr><literal type="number">0x71c65614u</literal></expr>,

<expr><literal type="number">0xe6c6c7bdu</literal></expr>, <expr><literal type="number">0x327a140au</literal></expr>, <expr><literal type="number">0x45e1d006u</literal></expr>, <expr><literal type="number">0xc3f27b9au</literal></expr>,

<expr><literal type="number">0xc9aa53fdu</literal></expr>, <expr><literal type="number">0x62a80f00u</literal></expr>, <expr><literal type="number">0xbb25bfe2u</literal></expr>, <expr><literal type="number">0x35bdd2f6u</literal></expr>,

<expr><literal type="number">0x71126905u</literal></expr>, <expr><literal type="number">0xb2040222u</literal></expr>, <expr><literal type="number">0xb6cbcf7cu</literal></expr>, <expr><literal type="number">0xcd769c2bu</literal></expr>,

<expr><literal type="number">0x53113ec0u</literal></expr>, <expr><literal type="number">0x1640e3d3u</literal></expr>, <expr><literal type="number">0x38abbd60u</literal></expr>, <expr><literal type="number">0x2547adf0u</literal></expr>,

<expr><literal type="number">0xba38209cu</literal></expr>, <expr><literal type="number">0xf746ce76u</literal></expr>, <expr><literal type="number">0x77afa1c5u</literal></expr>, <expr><literal type="number">0x20756060u</literal></expr>,

<expr><literal type="number">0x85cbfe4eu</literal></expr>, <expr><literal type="number">0x8ae88dd8u</literal></expr>, <expr><literal type="number">0x7aaaf9b0u</literal></expr>, <expr><literal type="number">0x4cf9aa7eu</literal></expr>,

<expr><literal type="number">0x1948c25cu</literal></expr>, <expr><literal type="number">0x02fb8a8cu</literal></expr>, <expr><literal type="number">0x01c36ae4u</literal></expr>, <expr><literal type="number">0xd6ebe1f9u</literal></expr>,

<expr><literal type="number">0x90d4f869u</literal></expr>, <expr><literal type="number">0xa65cdea0u</literal></expr>, <expr><literal type="number">0x3f09252du</literal></expr>, <expr><literal type="number">0xc208e69fu</literal></expr>,

<expr><literal type="number">0xb74e6132u</literal></expr>, <expr><literal type="number">0xce77e25bu</literal></expr>, <expr><literal type="number">0x578fdfe3u</literal></expr>, <expr><literal type="number">0x3ac372e6u</literal></expr>

}</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>F1</name><parameter_list>(<parameter><type><name>i</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>xl ^= bfs-&gt;pax[i]; xr ^= ((bfs-&gt;sbx[0][xl &gt;&gt; 24] + bfs-&gt;sbx[1][(xl &amp; 0xFF0000) &gt;&gt; 16]) ^ bfs-&gt;sbx[2][(xl &amp; 0xFF00) &gt;&gt; 8]) + bfs-&gt;sbx[3][xl &amp; 0xFF];</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>F2</name><parameter_list>(<parameter><type><name>i</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>xr ^= bfs-&gt;pax[i]; xl ^= ((bfs-&gt;sbx[0][xr &gt;&gt; 24] + bfs-&gt;sbx[1][(xr &amp; 0xFF0000) &gt;&gt; 16]) ^ bfs-&gt;sbx[2][(xr &amp; 0xFF00) &gt;&gt; 8]) + bfs-&gt;sbx[3][xr &amp; 0xFF];</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>void</name></type>

<name>bf_e_block</name><parameter_list>(

<parameter><decl><type><name>bf_state_T</name> <modifier>*</modifier></type><name>bfs</name></decl></parameter>,

<parameter><decl><type><name>UINT32_T</name> <modifier>*</modifier></type><name>p_xl</name></decl></parameter>,

<parameter><decl><type><name>UINT32_T</name> <modifier>*</modifier></type><name>p_xr</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>UINT32_T</name></type> <name>temp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>UINT32_T</name></type> <name>xl</name> <init>= <expr><operator>*</operator><name>p_xl</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>UINT32_T</name></type> <name>xr</name> <init>= <expr><operator>*</operator><name>p_xr</name></expr></init></decl>;</decl_stmt>

<macro><name>F1</name><argument_list>(<argument><literal type="number">0</literal></argument>)</argument_list></macro> <macro><name>F2</name><argument_list>(<argument><literal type="number">1</literal></argument>)</argument_list></macro>

<macro><name>F1</name><argument_list>(<argument><literal type="number">2</literal></argument>)</argument_list></macro> <macro><name>F2</name><argument_list>(<argument><literal type="number">3</literal></argument>)</argument_list></macro>

<macro><name>F1</name><argument_list>(<argument><literal type="number">4</literal></argument>)</argument_list></macro> <macro><name>F2</name><argument_list>(<argument><literal type="number">5</literal></argument>)</argument_list></macro>

<macro><name>F1</name><argument_list>(<argument><literal type="number">6</literal></argument>)</argument_list></macro> <macro><name>F2</name><argument_list>(<argument><literal type="number">7</literal></argument>)</argument_list></macro>

<macro><name>F1</name><argument_list>(<argument><literal type="number">8</literal></argument>)</argument_list></macro> <macro><name>F2</name><argument_list>(<argument><literal type="number">9</literal></argument>)</argument_list></macro>

<macro><name>F1</name><argument_list>(<argument><literal type="number">10</literal></argument>)</argument_list></macro> <macro><name>F2</name><argument_list>(<argument><literal type="number">11</literal></argument>)</argument_list></macro>

<macro><name>F1</name><argument_list>(<argument><literal type="number">12</literal></argument>)</argument_list></macro> <macro><name>F2</name><argument_list>(<argument><literal type="number">13</literal></argument>)</argument_list></macro>

<macro><name>F1</name><argument_list>(<argument><literal type="number">14</literal></argument>)</argument_list></macro> <macro><name>F2</name><argument_list>(<argument><literal type="number">15</literal></argument>)</argument_list></macro>

<expr_stmt><expr><name>xl</name> <operator>^=</operator> <name><name>bfs</name><operator>-&gt;</operator><name>pax</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>xr</name> <operator>^=</operator> <name><name>bfs</name><operator>-&gt;</operator><name>pax</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>temp</name> <operator>=</operator> <name>xl</name></expr>;</expr_stmt>

<expr_stmt><expr><name>xl</name> <operator>=</operator> <name>xr</name></expr>;</expr_stmt>

<expr_stmt><expr><name>xr</name> <operator>=</operator> <name>temp</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>p_xl</name> <operator>=</operator> <name>xl</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>p_xr</name> <operator>=</operator> <name>xr</name></expr>;</expr_stmt>

</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>WORDS_BIGENDIAN</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>htonl2</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>x = ((((x) &amp; 0xffL) &lt;&lt; 24) | (((x) &amp; 0xff00L) &lt;&lt; 8) | (((x) &amp; 0xff0000L) &gt;&gt; 8) | (((x) &amp; 0xff000000L) &gt;&gt; 24))</cpp:value></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>htonl2</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><specifier>static</specifier> <name>void</name></type>

<name>bf_e_cblock</name><parameter_list>(

<parameter><decl><type><name>bf_state_T</name> <modifier>*</modifier></type><name>bfs</name></decl></parameter>,

<parameter><decl><type><name>char_u</name> <modifier>*</modifier></type><name>block</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>block8</name></type> <name>bk</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name><name>bk</name><operator>.</operator><name>uc</name></name></expr></argument>, <argument><expr><name>block</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>htonl2</name><argument_list>(<argument><expr><name><name>bk</name><operator>.</operator><name>ul</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>htonl2</name><argument_list>(<argument><expr><name><name>bk</name><operator>.</operator><name>ul</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>bf_e_block</name><argument_list>(<argument><expr><name>bfs</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>bk</name><operator>.</operator><name>ul</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>bk</name><operator>.</operator><name>ul</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>htonl2</name><argument_list>(<argument><expr><name><name>bk</name><operator>.</operator><name>ul</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>htonl2</name><argument_list>(<argument><expr><name><name>bk</name><operator>.</operator><name>ul</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>block</name></expr></argument>, <argument><expr><name><name>bk</name><operator>.</operator><name>uc</name></name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>

<name>bf_key_init</name><parameter_list>(

<parameter><decl><type><name>bf_state_T</name> <modifier>*</modifier></type><name>bfs</name></decl></parameter>,

<parameter><decl><type><name>char_u</name> <modifier>*</modifier></type><name>password</name></decl></parameter>,

<parameter><decl><type><name>char_u</name> <modifier>*</modifier></type><name>salt</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>salt_len</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>j</name></decl>, <decl><type ref="prev"/><name>keypos</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>u</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>UINT32_T</name></type> <name>val</name></decl>, <decl><type ref="prev"/><name>data_l</name></decl>, <decl><type ref="prev"/><name>data_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char_u</name> <modifier>*</modifier></type><name>key</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>keylen</name></decl>;</decl_stmt>

<expr_stmt><expr><name>key</name> <operator>=</operator> <call><name>sha256_key</name><argument_list>(<argument><expr><name>password</name></expr></argument>, <argument><expr><name>salt</name></expr></argument>, <argument><expr><name>salt_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">1000</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name>key</name> <operator>=</operator> <call><name>sha256_key</name><argument_list>(<argument><expr><name>key</name></expr></argument>, <argument><expr><name>salt</name></expr></argument>, <argument><expr><name>salt_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><name>keylen</name> <operator>=</operator> <operator>(</operator><name>int</name><operator>)</operator><call><name>STRLEN</name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call> <operator>/</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>keylen</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>iemsg</name><argument_list>(<argument><expr><call><name>_</name><argument_list>(<argument><expr><literal type="string">"E831: bf_key_init() called with empty password"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>keylen</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>

<block>{<block_content>

<expr_stmt><expr><call><name>sscanf</name><argument_list>(<argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><operator>&amp;</operator><name><name>key</name><index>[<expr><name>i</name> <operator>*</operator> <literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="string">"%2x"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>key</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>u</name></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>mch_memmove</name><argument_list>(<argument><expr><name><name>bfs</name><operator>-&gt;</operator><name>sbx</name></name></expr></argument>, <argument><expr><name>sbx_init</name></expr></argument>, <argument><expr><literal type="number">4</literal> <operator>*</operator> <literal type="number">4</literal> <operator>*</operator> <literal type="number">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">18</literal></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>

<block>{<block_content>

<expr_stmt><expr><name>val</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><operator>++</operator><name>j</name></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name>val</name> <operator>=</operator> <operator>(</operator><name>val</name> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>|</operator> <name><name>key</name><index>[<expr><name>keypos</name><operator>++</operator> <operator>%</operator> <name>keylen</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><name><name>bfs</name><operator>-&gt;</operator><name>pax</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>pax_init</name><index>[<expr><name>i</name></expr>]</index></name> <operator>^</operator> <name>val</name></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name>data_l</name> <operator>=</operator> <name>data_r</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">18</literal></expr>;</condition> <incr><expr><name>i</name> <operator>+=</operator> <literal type="number">2</literal></expr></incr>)</control>

<block>{<block_content>

<expr_stmt><expr><call><name>bf_e_block</name><argument_list>(<argument><expr><name>bfs</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>data_l</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>data_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>bfs</name><operator>-&gt;</operator><name>pax</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>data_l</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>bfs</name><operator>-&gt;</operator><name>pax</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>data_r</name></expr>;</expr_stmt>

</block_content>}</block></for>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>

<block>{<block_content>

<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <literal type="number">256</literal></expr>;</condition> <incr><expr><name>j</name> <operator>+=</operator> <literal type="number">2</literal></expr></incr>)</control>

<block>{<block_content>

<expr_stmt><expr><call><name>bf_e_block</name><argument_list>(<argument><expr><name>bfs</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>data_l</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>data_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>bfs</name><operator>-&gt;</operator><name>sbx</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>data_l</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>bfs</name><operator>-&gt;</operator><name>sbx</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>data_r</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type>

<name>bf_check_tables</name><parameter_list>(

<parameter><decl><type><name>UINT32_T</name></type> <name><name>pax</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></decl></parameter>,

<parameter><decl><type><name>UINT32_T</name></type> <name><name>sbx</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl></parameter>,

<parameter><decl><type><name>UINT32_T</name></type> <name>val</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>j</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>UINT32_T</name></type> <name>c</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">18</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name>c</name> <operator>^=</operator> <name><name>pax</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <literal type="number">256</literal></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name>c</name> <operator>^=</operator> <name><name>sbx</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

<return>return <expr><name>c</name> <operator>==</operator> <name>val</name></expr>;</return>

</block_content>}</block></function>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>char_u</name></type> <name><name>password</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char_u</name></type> <name><name>salt</name><index>[<expr><literal type="number">9</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char_u</name></type> <name><name>plaintxt</name><index>[<expr><literal type="number">9</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char_u</name></type> <name><name>cryptxt</name><index>[<expr><literal type="number">9</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char_u</name></type> <name><name>badcryptxt</name><index>[<expr><literal type="number">9</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>UINT32_T</name></type> <name>keysum</name></decl>;</decl_stmt>

}</block></struct></type> <name>struct_bf_test_data</name>;</typedef>

<decl_stmt><decl><type><specifier>static</specifier> <name>struct_bf_test_data</name></type> <name><name>bf_test_data</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{

<expr><literal type="string">"password"</literal></expr>,

<expr><literal type="string">"salt"</literal></expr>,

<expr><literal type="string">"plaintxt"</literal></expr>,

<expr><literal type="string">"\xad\x3d\xfa\x7f\xe8\xea\x40\xf6"</literal></expr>, 

<expr><literal type="string">"\x72\x50\x3b\x38\x10\x60\x22\xa7"</literal></expr>, 

<expr><literal type="number">0x56701b5du</literal></expr> 

}</block></expr>,

}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>int</name></type>

<name>bf_self_test</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>bn</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>err</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>block8</name></type> <name>bk</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>UINT32_T</name></type> <name>ui</name> <init>= <expr><literal type="number">0xffffffffUL</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bf_state_T</name></type> <name>state</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vim_memset</name><argument_list>(<argument><expr><operator>&amp;</operator><name>state</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>bf_state_T</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>state</name><operator>.</operator><name>cfb_len</name></name> <operator>=</operator> <name>BF_MAX_CFB_LEN</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>ui</name> <operator>!=</operator> <literal type="number">0xffffffffUL</literal> <operator>||</operator> <name>ui</name> <operator>+</operator> <literal type="number">1</literal> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>emsg</name><argument_list>(<argument><expr><call><name>_</name><argument_list>(<argument><expr><literal type="string">"E820: sizeof(uint32_t) != 4"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>bf_check_tables</name><argument_list>(<argument><expr><name>pax_init</name></expr></argument>, <argument><expr><name>sbx_init</name></expr></argument>, <argument><expr><literal type="number">0x6ffa520a</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>bn</name> <operator>=</operator> <call><name>ARRAY_LENGTH</name><argument_list>(<argument><expr><name>bf_test_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>bn</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>

<block>{<block_content>

<expr_stmt><expr><call><name>bf_key_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name>state</name></expr></argument>, <argument><expr><operator>(</operator><name>char_u</name> <operator>*</operator><operator>)</operator><operator>(</operator><name><name>bf_test_data</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>password</name><operator>)</operator></expr></argument>,

<argument><expr><name><name>bf_test_data</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>salt</name></expr></argument>,

<argument><expr><operator>(</operator><name>int</name><operator>)</operator><call><name>STRLEN</name><argument_list>(<argument><expr><name><name>bf_test_data</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>salt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>bf_check_tables</name><argument_list>(<argument><expr><name><name>state</name><operator>.</operator><name>pax</name></name></expr></argument>, <argument><expr><name><name>state</name><operator>.</operator><name>sbx</name></name></expr></argument>, <argument><expr><name><name>bf_test_data</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>keysum</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name><name>bk</name><operator>.</operator><name>uc</name></name></expr></argument>, <argument><expr><name><name>bf_test_data</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>plaintxt</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>bf_e_cblock</name><argument_list>(<argument><expr><operator>&amp;</operator><name>state</name></expr></argument>, <argument><expr><name><name>bk</name><operator>.</operator><name>uc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>memcmp</name><argument_list>(<argument><expr><name><name>bk</name><operator>.</operator><name>uc</name></name></expr></argument>, <argument><expr><name><name>bf_test_data</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>cryptxt</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>err</name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <call><name>memcmp</name><argument_list>(<argument><expr><name><name>bk</name><operator>.</operator><name>uc</name></name></expr></argument>, <argument><expr><name><name>bf_test_data</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>badcryptxt</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>emsg</name><argument_list>(<argument><expr><call><name>_</name><argument_list>(<argument><expr><literal type="string">"E817: Blowfish big/little endian use wrong"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<return>return <expr><ternary><condition><expr><name>err</name> <operator>&gt;</operator> <literal type="number">0</literal></expr> ?</condition><then> <expr><name>FAIL</name></expr> </then><else>: <expr><name>OK</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>

<name>bf_cfb_init</name><parameter_list>(

<parameter><decl><type><name>bf_state_T</name> <modifier>*</modifier></type><name>bfs</name></decl></parameter>,

<parameter><decl><type><name>char_u</name> <modifier>*</modifier></type><name>seed</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>seed_len</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>mi</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>bfs</name><operator>-&gt;</operator><name>randbyte_offset</name></name> <operator>=</operator> <name><name>bfs</name><operator>-&gt;</operator><name>update_offset</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vim_memset</name><argument_list>(<argument><expr><name><name>bfs</name><operator>-&gt;</operator><name>cfb_buffer</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>bfs</name><operator>-&gt;</operator><name>cfb_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>seed_len</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name>mi</name> <operator>=</operator> <ternary><condition><expr><name>seed_len</name> <operator>&gt;</operator> <name><name>bfs</name><operator>-&gt;</operator><name>cfb_len</name></name></expr> ?</condition><then> <expr><name>seed_len</name></expr> </then><else>: <expr><name><name>bfs</name><operator>-&gt;</operator><name>cfb_len</name></name></expr></else></ternary></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>mi</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>bfs</name><operator>-&gt;</operator><name>cfb_buffer</name><index>[<expr><name>i</name> <operator>%</operator> <name><name>bfs</name><operator>-&gt;</operator><name>cfb_len</name></name></expr>]</index></name> <operator>^=</operator> <name><name>seed</name><index>[<expr><name>i</name> <operator>%</operator> <name>seed_len</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BF_CFB_UPDATE</name><parameter_list>(<parameter><type><name>bfs</name></type></parameter>, <parameter><type><name>c</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ bfs-&gt;cfb_buffer[bfs-&gt;update_offset] ^= (char_u)c; if (++bfs-&gt;update_offset == bfs-&gt;cfb_len) bfs-&gt;update_offset = 0; }</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BF_RANBYTE</name><parameter_list>(<parameter><type><name>bfs</name></type></parameter>, <parameter><type><name>t</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ if ((bfs-&gt;randbyte_offset &amp; BF_BLOCK_MASK) == 0) bf_e_cblock(bfs, &amp;(bfs-&gt;cfb_buffer[bfs-&gt;randbyte_offset])); t = bfs-&gt;cfb_buffer[bfs-&gt;randbyte_offset]; if (++bfs-&gt;randbyte_offset == bfs-&gt;cfb_len) bfs-&gt;randbyte_offset = 0; }</cpp:value></cpp:define>

<function><type><name>void</name></type>

<name>crypt_blowfish_encode</name><parameter_list>(

<parameter><decl><type><name>cryptstate_T</name> <modifier>*</modifier></type><name>state</name></decl></parameter>,

<parameter><decl><type><name>char_u</name> <modifier>*</modifier></type><name>from</name></decl></parameter>,

<parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>,

<parameter><decl><type><name>char_u</name> <modifier>*</modifier></type><name>to</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>bf_state_T</name> <modifier>*</modifier></type><name>bfs</name> <init>= <expr><name><name>state</name><operator>-&gt;</operator><name>method_state</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ztemp</name></decl>, <decl><type ref="prev"/><name>t</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>len</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>

<block>{<block_content>

<expr_stmt><expr><name>ztemp</name> <operator>=</operator> <name><name>from</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>BF_RANBYTE</name><argument_list>(<argument><expr><name>bfs</name></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>BF_CFB_UPDATE</name><argument_list>(<argument><expr><name>bfs</name></expr></argument>, <argument><expr><name>ztemp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>to</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>t</name> <operator>^</operator> <name>ztemp</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><name>void</name></type>

<name>crypt_blowfish_decode</name><parameter_list>(

<parameter><decl><type><name>cryptstate_T</name> <modifier>*</modifier></type><name>state</name></decl></parameter>,

<parameter><decl><type><name>char_u</name> <modifier>*</modifier></type><name>from</name></decl></parameter>,

<parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>,

<parameter><decl><type><name>char_u</name> <modifier>*</modifier></type><name>to</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>bf_state_T</name> <modifier>*</modifier></type><name>bfs</name> <init>= <expr><name><name>state</name><operator>-&gt;</operator><name>method_state</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>t</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>len</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>

<block>{<block_content>

<expr_stmt><expr><call><name>BF_RANBYTE</name><argument_list>(<argument><expr><name>bfs</name></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>to</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>from</name><index>[<expr><name>i</name></expr>]</index></name> <operator>^</operator> <name>t</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>BF_CFB_UPDATE</name><argument_list>(<argument><expr><name>bfs</name></expr></argument>, <argument><expr><name><name>to</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><name>int</name></type>

<name>crypt_blowfish_init</name><parameter_list>(

<parameter><decl><type><name>cryptstate_T</name> <modifier>*</modifier></type><name>state</name></decl></parameter>,

<parameter><decl><type><name>char_u</name><modifier>*</modifier></type> <name>key</name></decl></parameter>,

<parameter><decl><type><name>char_u</name><modifier>*</modifier></type> <name>salt</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>salt_len</name></decl></parameter>,

<parameter><decl><type><name>char_u</name><modifier>*</modifier></type> <name>seed</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>seed_len</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>bf_state_T</name> <modifier>*</modifier></type><name>bfs</name> <init>= <expr><call><name>ALLOC_CLEAR_ONE</name><argument_list>(<argument><expr><name>bf_state_T</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>bfs</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>FAIL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>state</name><operator>-&gt;</operator><name>method_state</name></name> <operator>=</operator> <name>bfs</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>bfs</name><operator>-&gt;</operator><name>cfb_len</name></name> <operator>=</operator> <ternary><condition><expr><name><name>state</name><operator>-&gt;</operator><name>method_nr</name></name> <operator>==</operator> <name>CRYPT_M_BF</name></expr> ?</condition><then> <expr><name>BF_MAX_CFB_LEN</name></expr> </then><else>: <expr><name>BF_BLOCK</name></expr></else></ternary></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>blowfish_self_test</name><argument_list>()</argument_list></call> <operator>==</operator> <name>FAIL</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>FAIL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>bf_key_init</name><argument_list>(<argument><expr><name>bfs</name></expr></argument>, <argument><expr><name>key</name></expr></argument>, <argument><expr><name>salt</name></expr></argument>, <argument><expr><name>salt_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>bf_cfb_init</name><argument_list>(<argument><expr><name>bfs</name></expr></argument>, <argument><expr><name>seed</name></expr></argument>, <argument><expr><name>seed_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>OK</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type>

<name>blowfish_self_test</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>sha256_self_test</name><argument_list>()</argument_list></call> <operator>==</operator> <name>FAIL</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>emsg</name><argument_list>(<argument><expr><call><name>_</name><argument_list>(<argument><expr><literal type="string">"E818: sha256 test failed"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>FAIL</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>bf_self_test</name><argument_list>()</argument_list></call> <operator>==</operator> <name>FAIL</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>emsg</name><argument_list>(<argument><expr><call><name>_</name><argument_list>(<argument><expr><literal type="string">"E819: Blowfish test failed"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>FAIL</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>OK</name></expr>;</return>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

</unit>
