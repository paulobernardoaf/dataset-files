<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\_cppstats_featurelocations\vim\runtime\macros\maze\mazeansi.c"><decl_stmt><decl><type><name>char</name><modifier>*</modifier></type><name>M</name></decl>,<decl><type ref="prev"/><name>A</name></decl>,<decl><type ref="prev"/><name>Z</name></decl>,<decl><type ref="prev"/><name>E</name><init>=<expr><literal type="number">40</literal></expr></init></decl>,<decl><type ref="prev"/><name><name>J</name><index>[<expr><literal type="number">80</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>T</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt><function><name>main</name><parameter_list>(<parameter><decl><type><name>C</name></type></decl></parameter>)</parameter_list><block>{<block_content><for>for<control>(<init><expr><name>M</name><operator>=</operator><name>J</name><operator>+</operator><name>E</name></expr><operator>,</operator><expr><operator>*</operator><name>J</name><operator>=</operator><name>A</name><operator>=</operator><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator>
<name>C</name></expr></argument>)</argument_list></call></expr> ;</init><condition><expr><operator>--</operator> <name>E</name></expr>;</condition><incr><expr><name><name>J</name> <index>[<expr><name>E</name></expr> ]</index></name><operator>=</operator><name><name>M</name>
<index>[<expr><name>E</name></expr> ]</index></name><operator>=</operator> <name>E</name></expr></incr>)</control><block type="pseudo"><block_content> <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"._"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for> <for>for<control>(<init>;</init><condition><expr><operator>(</operator><name>A</name><operator>-=</operator><name>Z</name><operator>=</operator><operator>!</operator><name>Z</name><operator>)</operator> <operator>||</operator> <operator>(</operator><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"\n|"</literal></expr></argument>
)</argument_list></call> <operator>,</operator> <name>A</name> <operator>=</operator> <literal type="number">39</literal> <operator>,</operator><name>C</name> <operator>--</operator>
<operator>)</operator></expr> ;</condition> <incr><expr><name>Z</name> <operator>||</operator> <call><name>printf</name> <argument_list>(<argument><expr><name>T</name></expr></argument> )</argument_list></call></expr></incr>)</control><block type="pseudo"><block_content><expr_stmt><expr><name><name>T</name><index>[<expr><name>Z</name></expr>]</index></name><operator>=</operator><name><name>Z</name><index>[<expr><ternary><condition><expr><name>A</name><operator>-</operator><operator>(</operator><name>E</name> <operator>=</operator><name><name>A</name><index>[<expr><name>J</name><operator>-</operator><name>Z</name></expr>]</index></name><operator>)</operator><operator>&amp;&amp;</operator><operator>!</operator><name>C</name>
<operator>&amp;</operator> <name>A</name> <operator>==</operator> <name><name>M</name><index>[ <expr><name>A</name></expr>]</index></name>
<operator>|</operator><literal type="number">6</literal><operator>&lt;&lt;</operator><literal type="number">27</literal><operator>&lt;</operator><call><name>rand</name><argument_list>()</argument_list></call><operator>||</operator><operator>!</operator><name>C</name><operator>&amp;</operator><operator>!</operator><name>Z</name></expr>?</condition><then><expr><name><name>J</name><index>[<expr><name><name>M</name><index>[<expr><name>E</name></expr>]</index></name><operator>=</operator><name><name>M</name><index>[<expr><name>A</name></expr>]</index></name></expr>]</index></name><operator>=</operator><name>E</name></expr></then></ternary></expr><operator>,</operator><name><name>J</name><index>[<expr><name><name>M</name><index>[<expr><name>A</name></expr>]</index></name><operator>=</operator><name>A</name><operator>-</operator><name>Z</name></expr>]</index></name><operator>=</operator><name>A</name><operator>,</operator><literal type="string">"_."</literal><operator>:</operator><literal type="string">" |"</literal>]</index></name></expr>;</expr_stmt></block_content></block></for></block_content>}</block></function>
</unit>
