<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\_cppstats_featurelocations\vim\src\keymap.h">

















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_NUL</name></cpp:macro> <cpp:value>(0xce)</cpp:value></cpp:define> 









<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_SPECIAL</name></cpp:macro> <cpp:value>(0x80)</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IS_SPECIAL</name><parameter_list>(<parameter><type><name>c</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((c) &lt; 0)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ABBR_OFF</name></cpp:macro> <cpp:value>0x100</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KS_ZERO</name></cpp:macro> <cpp:value>255</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KS_SPECIAL</name></cpp:macro> <cpp:value>254</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KS_EXTRA</name></cpp:macro> <cpp:value>253</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KS_MODIFIER</name></cpp:macro> <cpp:value>252</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KS_MOUSE</name></cpp:macro> <cpp:value>251</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KS_MENU</name></cpp:macro> <cpp:value>250</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KS_VER_SCROLLBAR</name></cpp:macro> <cpp:value>249</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KS_HOR_SCROLLBAR</name></cpp:macro> <cpp:value>248</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KS_NETTERM_MOUSE</name></cpp:macro> <cpp:value>247</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KS_DEC_MOUSE</name></cpp:macro> <cpp:value>246</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KS_SELECT</name></cpp:macro> <cpp:value>245</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_SELECT_STRING</name></cpp:macro> <cpp:value>(char_u *)"\200\365X"</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KS_TEAROFF</name></cpp:macro> <cpp:value>244</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KS_JSBTERM_MOUSE</name></cpp:macro> <cpp:value>243</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KS_KEY</name></cpp:macro> <cpp:value>242</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KS_PTERM_MOUSE</name></cpp:macro> <cpp:value>241</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KS_TABLINE</name></cpp:macro> <cpp:value>240</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KS_TABMENU</name></cpp:macro> <cpp:value>239</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KS_URXVT_MOUSE</name></cpp:macro> <cpp:value>238</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KS_SGR_MOUSE</name></cpp:macro> <cpp:value>237</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KS_SGR_MOUSE_RELEASE</name></cpp:macro> <cpp:value>236</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KS_GPM_MOUSE</name></cpp:macro> <cpp:value>235</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KE_FILLER</name></cpp:macro> <cpp:value>('X')</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TERMCAP2KEY</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(-((a) + ((int)(b) &lt;&lt; 8)))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY2TERMCAP0</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((-(x)) &amp; 0xff)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY2TERMCAP1</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((unsigned)(-(x)) &gt;&gt; 8) &amp; 0xff)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_SECOND</name><parameter_list>(<parameter><type><name>c</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((c) == K_SPECIAL ? KS_SPECIAL : (c) == NUL ? KS_ZERO : KEY2TERMCAP0(c))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_THIRD</name><parameter_list>(<parameter><type><name>c</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((c) == K_SPECIAL || (c) == NUL) ? KE_FILLER : KEY2TERMCAP1(c))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TO_SPECIAL</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((a) == KS_SPECIAL ? K_SPECIAL : (a) == KS_ZERO ? K_ZERO : TERMCAP2KEY(a, b))</cpp:value></cpp:define>








<enum>enum <name>key_extra</name>
<block>{
<decl><name>KE_NAME</name> <init>= <expr><literal type="number">3</literal></expr></init></decl> 

, <decl><name>KE_S_UP</name> <init>= <expr><literal type="number">4</literal></expr></init></decl> 
, <decl><name>KE_S_DOWN</name> <init>= <expr><literal type="number">5</literal></expr></init></decl> 

, <decl><name>KE_S_F1</name> <init>= <expr><literal type="number">6</literal></expr></init></decl> 
, <decl><name>KE_S_F2</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>
, <decl><name>KE_S_F3</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>
, <decl><name>KE_S_F4</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>
, <decl><name>KE_S_F5</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>
, <decl><name>KE_S_F6</name> <init>= <expr><literal type="number">11</literal></expr></init></decl>
, <decl><name>KE_S_F7</name> <init>= <expr><literal type="number">12</literal></expr></init></decl>
, <decl><name>KE_S_F8</name> <init>= <expr><literal type="number">13</literal></expr></init></decl>
, <decl><name>KE_S_F9</name> <init>= <expr><literal type="number">14</literal></expr></init></decl>
, <decl><name>KE_S_F10</name> <init>= <expr><literal type="number">15</literal></expr></init></decl>

, <decl><name>KE_S_F11</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>
, <decl><name>KE_S_F12</name> <init>= <expr><literal type="number">17</literal></expr></init></decl>
, <decl><name>KE_S_F13</name> <init>= <expr><literal type="number">18</literal></expr></init></decl>
, <decl><name>KE_S_F14</name> <init>= <expr><literal type="number">19</literal></expr></init></decl>
, <decl><name>KE_S_F15</name> <init>= <expr><literal type="number">20</literal></expr></init></decl>
, <decl><name>KE_S_F16</name> <init>= <expr><literal type="number">21</literal></expr></init></decl>
, <decl><name>KE_S_F17</name> <init>= <expr><literal type="number">22</literal></expr></init></decl>
, <decl><name>KE_S_F18</name> <init>= <expr><literal type="number">23</literal></expr></init></decl>
, <decl><name>KE_S_F19</name> <init>= <expr><literal type="number">24</literal></expr></init></decl>
, <decl><name>KE_S_F20</name> <init>= <expr><literal type="number">25</literal></expr></init></decl>

, <decl><name>KE_S_F21</name> <init>= <expr><literal type="number">26</literal></expr></init></decl>
, <decl><name>KE_S_F22</name> <init>= <expr><literal type="number">27</literal></expr></init></decl>
, <decl><name>KE_S_F23</name> <init>= <expr><literal type="number">28</literal></expr></init></decl>
, <decl><name>KE_S_F24</name> <init>= <expr><literal type="number">29</literal></expr></init></decl>
, <decl><name>KE_S_F25</name> <init>= <expr><literal type="number">30</literal></expr></init></decl>
, <decl><name>KE_S_F26</name> <init>= <expr><literal type="number">31</literal></expr></init></decl>
, <decl><name>KE_S_F27</name> <init>= <expr><literal type="number">32</literal></expr></init></decl>
, <decl><name>KE_S_F28</name> <init>= <expr><literal type="number">33</literal></expr></init></decl>
, <decl><name>KE_S_F29</name> <init>= <expr><literal type="number">34</literal></expr></init></decl>
, <decl><name>KE_S_F30</name> <init>= <expr><literal type="number">35</literal></expr></init></decl>

, <decl><name>KE_S_F31</name> <init>= <expr><literal type="number">36</literal></expr></init></decl>
, <decl><name>KE_S_F32</name> <init>= <expr><literal type="number">37</literal></expr></init></decl>
, <decl><name>KE_S_F33</name> <init>= <expr><literal type="number">38</literal></expr></init></decl>
, <decl><name>KE_S_F34</name> <init>= <expr><literal type="number">39</literal></expr></init></decl>
, <decl><name>KE_S_F35</name> <init>= <expr><literal type="number">40</literal></expr></init></decl>
, <decl><name>KE_S_F36</name> <init>= <expr><literal type="number">41</literal></expr></init></decl>
, <decl><name>KE_S_F37</name> <init>= <expr><literal type="number">42</literal></expr></init></decl>

, <decl><name>KE_MOUSE</name> <init>= <expr><literal type="number">43</literal></expr></init></decl> 





, <decl><name>KE_LEFTMOUSE</name> <init>= <expr><literal type="number">44</literal></expr></init></decl> 
, <decl><name>KE_LEFTDRAG</name> <init>= <expr><literal type="number">45</literal></expr></init></decl> 
, <decl><name>KE_LEFTRELEASE</name> <init>= <expr><literal type="number">46</literal></expr></init></decl> 
, <decl><name>KE_MIDDLEMOUSE</name> <init>= <expr><literal type="number">47</literal></expr></init></decl> 
, <decl><name>KE_MIDDLEDRAG</name> <init>= <expr><literal type="number">48</literal></expr></init></decl> 
, <decl><name>KE_MIDDLERELEASE</name> <init>= <expr><literal type="number">49</literal></expr></init></decl> 
, <decl><name>KE_RIGHTMOUSE</name> <init>= <expr><literal type="number">50</literal></expr></init></decl> 
, <decl><name>KE_RIGHTDRAG</name> <init>= <expr><literal type="number">51</literal></expr></init></decl> 
, <decl><name>KE_RIGHTRELEASE</name> <init>= <expr><literal type="number">52</literal></expr></init></decl> 

, <decl><name>KE_IGNORE</name> <init>= <expr><literal type="number">53</literal></expr></init></decl> 

, <decl><name>KE_TAB</name> <init>= <expr><literal type="number">54</literal></expr></init></decl> 
, <decl><name>KE_S_TAB_OLD</name> <init>= <expr><literal type="number">55</literal></expr></init></decl> 

, <decl><name>KE_SNIFF_UNUSED</name> <init>= <expr><literal type="number">56</literal></expr></init></decl> 
, <decl><name>KE_XF1</name> <init>= <expr><literal type="number">57</literal></expr></init></decl> 
, <decl><name>KE_XF2</name> <init>= <expr><literal type="number">58</literal></expr></init></decl>
, <decl><name>KE_XF3</name> <init>= <expr><literal type="number">59</literal></expr></init></decl>
, <decl><name>KE_XF4</name> <init>= <expr><literal type="number">60</literal></expr></init></decl>
, <decl><name>KE_XEND</name> <init>= <expr><literal type="number">61</literal></expr></init></decl> 
, <decl><name>KE_ZEND</name> <init>= <expr><literal type="number">62</literal></expr></init></decl> 
, <decl><name>KE_XHOME</name> <init>= <expr><literal type="number">63</literal></expr></init></decl> 
, <decl><name>KE_ZHOME</name> <init>= <expr><literal type="number">64</literal></expr></init></decl> 
, <decl><name>KE_XUP</name> <init>= <expr><literal type="number">65</literal></expr></init></decl> 
, <decl><name>KE_XDOWN</name> <init>= <expr><literal type="number">66</literal></expr></init></decl>
, <decl><name>KE_XLEFT</name> <init>= <expr><literal type="number">67</literal></expr></init></decl>
, <decl><name>KE_XRIGHT</name> <init>= <expr><literal type="number">68</literal></expr></init></decl>

, <decl><name>KE_LEFTMOUSE_NM</name> <init>= <expr><literal type="number">69</literal></expr></init></decl> 
, <decl><name>KE_LEFTRELEASE_NM</name> <init>= <expr><literal type="number">70</literal></expr></init></decl> 

, <decl><name>KE_S_XF1</name> <init>= <expr><literal type="number">71</literal></expr></init></decl> 
, <decl><name>KE_S_XF2</name> <init>= <expr><literal type="number">72</literal></expr></init></decl>
, <decl><name>KE_S_XF3</name> <init>= <expr><literal type="number">73</literal></expr></init></decl>
, <decl><name>KE_S_XF4</name> <init>= <expr><literal type="number">74</literal></expr></init></decl>




, <decl><name>KE_MOUSEDOWN</name> <init>= <expr><literal type="number">75</literal></expr></init></decl> 
, <decl><name>KE_MOUSEUP</name> <init>= <expr><literal type="number">76</literal></expr></init></decl> 
, <decl><name>KE_MOUSELEFT</name> <init>= <expr><literal type="number">77</literal></expr></init></decl> 
, <decl><name>KE_MOUSERIGHT</name> <init>= <expr><literal type="number">78</literal></expr></init></decl> 

, <decl><name>KE_KINS</name> <init>= <expr><literal type="number">79</literal></expr></init></decl> 
, <decl><name>KE_KDEL</name> <init>= <expr><literal type="number">80</literal></expr></init></decl> 

, <decl><name>KE_CSI</name> <init>= <expr><literal type="number">81</literal></expr></init></decl> 
, <decl><name>KE_SNR</name> <init>= <expr><literal type="number">82</literal></expr></init></decl> 
, <decl><name>KE_PLUG</name> <init>= <expr><literal type="number">83</literal></expr></init></decl> 
, <decl><name>KE_CMDWIN</name> <init>= <expr><literal type="number">84</literal></expr></init></decl> 

, <decl><name>KE_C_LEFT</name> <init>= <expr><literal type="number">85</literal></expr></init></decl> 
, <decl><name>KE_C_RIGHT</name> <init>= <expr><literal type="number">86</literal></expr></init></decl> 
, <decl><name>KE_C_HOME</name> <init>= <expr><literal type="number">87</literal></expr></init></decl> 
, <decl><name>KE_C_END</name> <init>= <expr><literal type="number">88</literal></expr></init></decl> 

, <decl><name>KE_X1MOUSE</name> <init>= <expr><literal type="number">89</literal></expr></init></decl> 
, <decl><name>KE_X1DRAG</name> <init>= <expr><literal type="number">90</literal></expr></init></decl>
, <decl><name>KE_X1RELEASE</name> <init>= <expr><literal type="number">91</literal></expr></init></decl>
, <decl><name>KE_X2MOUSE</name> <init>= <expr><literal type="number">92</literal></expr></init></decl>
, <decl><name>KE_X2DRAG</name> <init>= <expr><literal type="number">93</literal></expr></init></decl>
, <decl><name>KE_X2RELEASE</name> <init>= <expr><literal type="number">94</literal></expr></init></decl>

, <decl><name>KE_DROP</name> <init>= <expr><literal type="number">95</literal></expr></init></decl> 
, <decl><name>KE_CURSORHOLD</name> <init>= <expr><literal type="number">96</literal></expr></init></decl> 
, <decl><name>KE_NOP</name> <init>= <expr><literal type="number">97</literal></expr></init></decl> 
, <decl><name>KE_FOCUSGAINED</name> <init>= <expr><literal type="number">98</literal></expr></init></decl> 
, <decl><name>KE_FOCUSLOST</name> <init>= <expr><literal type="number">99</literal></expr></init></decl> 
, <decl><name>KE_MOUSEMOVE</name> <init>= <expr><literal type="number">100</literal></expr></init></decl> 
, <decl><name>KE_CANCEL</name> <init>= <expr><literal type="number">101</literal></expr></init></decl> 
}</block>;</enum>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_ZERO</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_ZERO, KE_FILLER)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_UP</name></cpp:macro> <cpp:value>TERMCAP2KEY('k', 'u')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_DOWN</name></cpp:macro> <cpp:value>TERMCAP2KEY('k', 'd')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_LEFT</name></cpp:macro> <cpp:value>TERMCAP2KEY('k', 'l')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_RIGHT</name></cpp:macro> <cpp:value>TERMCAP2KEY('k', 'r')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_S_UP</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_S_UP)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_S_DOWN</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_S_DOWN)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_S_LEFT</name></cpp:macro> <cpp:value>TERMCAP2KEY('#', '4')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_C_LEFT</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_C_LEFT)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_S_RIGHT</name></cpp:macro> <cpp:value>TERMCAP2KEY('%', 'i')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_C_RIGHT</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_C_RIGHT)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_S_HOME</name></cpp:macro> <cpp:value>TERMCAP2KEY('#', '2')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_C_HOME</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_C_HOME)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_S_END</name></cpp:macro> <cpp:value>TERMCAP2KEY('*', '7')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_C_END</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_C_END)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_TAB</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_TAB)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_S_TAB</name></cpp:macro> <cpp:value>TERMCAP2KEY('k', 'B')</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_XF1</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_XF1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_XF2</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_XF2)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_XF3</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_XF3)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_XF4</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_XF4)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_XUP</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_XUP)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_XDOWN</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_XDOWN)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_XLEFT</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_XLEFT)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_XRIGHT</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_XRIGHT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F1</name></cpp:macro> <cpp:value>TERMCAP2KEY('k', '1')</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F2</name></cpp:macro> <cpp:value>TERMCAP2KEY('k', '2')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F3</name></cpp:macro> <cpp:value>TERMCAP2KEY('k', '3')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F4</name></cpp:macro> <cpp:value>TERMCAP2KEY('k', '4')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F5</name></cpp:macro> <cpp:value>TERMCAP2KEY('k', '5')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F6</name></cpp:macro> <cpp:value>TERMCAP2KEY('k', '6')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F7</name></cpp:macro> <cpp:value>TERMCAP2KEY('k', '7')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F8</name></cpp:macro> <cpp:value>TERMCAP2KEY('k', '8')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F9</name></cpp:macro> <cpp:value>TERMCAP2KEY('k', '9')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F10</name></cpp:macro> <cpp:value>TERMCAP2KEY('k', ';')</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F11</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', '1')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F12</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', '2')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F13</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', '3')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F14</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', '4')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F15</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', '5')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F16</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', '6')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F17</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', '7')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F18</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', '8')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F19</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', '9')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F20</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', 'A')</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F21</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', 'B')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F22</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', 'C')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F23</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', 'D')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F24</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', 'E')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F25</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', 'F')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F26</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', 'G')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F27</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', 'H')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F28</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', 'I')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F29</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', 'J')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F30</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', 'K')</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F31</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', 'L')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F32</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', 'M')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F33</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', 'N')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F34</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', 'O')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F35</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', 'P')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F36</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', 'Q')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_F37</name></cpp:macro> <cpp:value>TERMCAP2KEY('F', 'R')</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_S_XF1</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_S_XF1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_S_XF2</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_S_XF2)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_S_XF3</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_S_XF3)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_S_XF4</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_S_XF4)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_S_F1</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_S_F1)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_S_F2</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_S_F2)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_S_F3</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_S_F3)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_S_F4</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_S_F4)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_S_F5</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_S_F5)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_S_F6</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_S_F6)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_S_F7</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_S_F7)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_S_F8</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_S_F8)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_S_F9</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_S_F9)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_S_F10</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_S_F10)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_S_F11</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_S_F11)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_S_F12</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_S_F12)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_HELP</name></cpp:macro> <cpp:value>TERMCAP2KEY('%', '1')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_UNDO</name></cpp:macro> <cpp:value>TERMCAP2KEY('&amp;', '8')</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_BS</name></cpp:macro> <cpp:value>TERMCAP2KEY('k', 'b')</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_INS</name></cpp:macro> <cpp:value>TERMCAP2KEY('k', 'I')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_KINS</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_KINS)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_DEL</name></cpp:macro> <cpp:value>TERMCAP2KEY('k', 'D')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_KDEL</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_KDEL)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_HOME</name></cpp:macro> <cpp:value>TERMCAP2KEY('k', 'h')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_KHOME</name></cpp:macro> <cpp:value>TERMCAP2KEY('K', '1')</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_XHOME</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_XHOME)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_ZHOME</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_ZHOME)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_END</name></cpp:macro> <cpp:value>TERMCAP2KEY('@', '7')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_KEND</name></cpp:macro> <cpp:value>TERMCAP2KEY('K', '4')</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_XEND</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_XEND)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_ZEND</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_ZEND)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_PAGEUP</name></cpp:macro> <cpp:value>TERMCAP2KEY('k', 'P')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_PAGEDOWN</name></cpp:macro> <cpp:value>TERMCAP2KEY('k', 'N')</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_KPAGEUP</name></cpp:macro> <cpp:value>TERMCAP2KEY('K', '3')</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_KPAGEDOWN</name></cpp:macro> <cpp:value>TERMCAP2KEY('K', '5')</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_KPLUS</name></cpp:macro> <cpp:value>TERMCAP2KEY('K', '6')</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_KMINUS</name></cpp:macro> <cpp:value>TERMCAP2KEY('K', '7')</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_KDIVIDE</name></cpp:macro> <cpp:value>TERMCAP2KEY('K', '8')</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_KMULTIPLY</name></cpp:macro> <cpp:value>TERMCAP2KEY('K', '9')</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_KENTER</name></cpp:macro> <cpp:value>TERMCAP2KEY('K', 'A')</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_KPOINT</name></cpp:macro> <cpp:value>TERMCAP2KEY('K', 'B')</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_PS</name></cpp:macro> <cpp:value>TERMCAP2KEY('P', 'S')</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_PE</name></cpp:macro> <cpp:value>TERMCAP2KEY('P', 'E')</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_K0</name></cpp:macro> <cpp:value>TERMCAP2KEY('K', 'C')</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_K1</name></cpp:macro> <cpp:value>TERMCAP2KEY('K', 'D')</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_K2</name></cpp:macro> <cpp:value>TERMCAP2KEY('K', 'E')</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_K3</name></cpp:macro> <cpp:value>TERMCAP2KEY('K', 'F')</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_K4</name></cpp:macro> <cpp:value>TERMCAP2KEY('K', 'G')</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_K5</name></cpp:macro> <cpp:value>TERMCAP2KEY('K', 'H')</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_K6</name></cpp:macro> <cpp:value>TERMCAP2KEY('K', 'I')</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_K7</name></cpp:macro> <cpp:value>TERMCAP2KEY('K', 'J')</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_K8</name></cpp:macro> <cpp:value>TERMCAP2KEY('K', 'K')</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_K9</name></cpp:macro> <cpp:value>TERMCAP2KEY('K', 'L')</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_MOUSE</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_MOUSE, KE_FILLER)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_MENU</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_MENU, KE_FILLER)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_VER_SCROLLBAR</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_VER_SCROLLBAR, KE_FILLER)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_HOR_SCROLLBAR</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_HOR_SCROLLBAR, KE_FILLER)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_NETTERM_MOUSE</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_NETTERM_MOUSE, KE_FILLER)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_DEC_MOUSE</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_DEC_MOUSE, KE_FILLER)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_JSBTERM_MOUSE</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_JSBTERM_MOUSE, KE_FILLER)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_PTERM_MOUSE</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_PTERM_MOUSE, KE_FILLER)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_URXVT_MOUSE</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_URXVT_MOUSE, KE_FILLER)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_SGR_MOUSE</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_SGR_MOUSE, KE_FILLER)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_SGR_MOUSERELEASE</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_SGR_MOUSE_RELEASE, KE_FILLER)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_SELECT</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_SELECT, KE_FILLER)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_TEAROFF</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_TEAROFF, KE_FILLER)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_TABLINE</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_TABLINE, KE_FILLER)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_TABMENU</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_TABMENU, KE_FILLER)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_LEFTMOUSE</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_LEFTMOUSE)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_LEFTMOUSE_NM</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_LEFTMOUSE_NM)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_LEFTDRAG</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_LEFTDRAG)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_LEFTRELEASE</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_LEFTRELEASE)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_LEFTRELEASE_NM</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_LEFTRELEASE_NM)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_MOUSEMOVE</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_MOUSEMOVE)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_MIDDLEMOUSE</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_MIDDLEMOUSE)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_MIDDLEDRAG</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_MIDDLEDRAG)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_MIDDLERELEASE</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_MIDDLERELEASE)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_RIGHTMOUSE</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_RIGHTMOUSE)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_RIGHTDRAG</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_RIGHTDRAG)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_RIGHTRELEASE</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_RIGHTRELEASE)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_X1MOUSE</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_X1MOUSE)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_X1MOUSE</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_X1MOUSE)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_X1DRAG</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_X1DRAG)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_X1RELEASE</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_X1RELEASE)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_X2MOUSE</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_X2MOUSE)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_X2DRAG</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_X2DRAG)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_X2RELEASE</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_X2RELEASE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_IGNORE</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_IGNORE)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_NOP</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_NOP)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_CANCEL</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_CANCEL)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_MOUSEDOWN</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_MOUSEDOWN)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_MOUSEUP</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_MOUSEUP)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_MOUSELEFT</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_MOUSELEFT)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_MOUSERIGHT</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_MOUSERIGHT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_CSI</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_CSI)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_SNR</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_SNR)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_PLUG</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_PLUG)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_CMDWIN</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_CMDWIN)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_DROP</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_DROP)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_FOCUSGAINED</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_FOCUSGAINED)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_FOCUSLOST</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_FOCUSLOST)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>K_CURSORHOLD</name></cpp:macro> <cpp:value>TERMCAP2KEY(KS_EXTRA, KE_CURSORHOLD)</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOD_MASK_SHIFT</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOD_MASK_CTRL</name></cpp:macro> <cpp:value>0x04</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOD_MASK_ALT</name></cpp:macro> <cpp:value>0x08</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOD_MASK_META</name></cpp:macro> <cpp:value>0x10</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOD_MASK_2CLICK</name></cpp:macro> <cpp:value>0x20</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOD_MASK_3CLICK</name></cpp:macro> <cpp:value>0x40</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOD_MASK_4CLICK</name></cpp:macro> <cpp:value>0x60</cpp:value></cpp:define> 
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>MACOS_X</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOD_MASK_CMD</name></cpp:macro> <cpp:value>0x80</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOD_MASK_MULTI_CLICK</name></cpp:macro> <cpp:value>(MOD_MASK_2CLICK|MOD_MASK_3CLICK|MOD_MASK_4CLICK)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_KEY_NAME_LEN</name></cpp:macro> <cpp:value>32</cpp:value></cpp:define>










<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_KEY_CODE_LEN</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define>
</unit>
