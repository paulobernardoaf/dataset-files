<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\_cppstats_featurelocations\vim\src\gui_dwrite.h">











<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>GUI_DWRITE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GUI_DWRITE_H</name></cpp:macro></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><name><name>struct</name> <name>DWriteContext</name></name></type> <name>DWriteContext</name>;</typedef>

<typedef>typedef <type><struct>struct <name>DWriteRenderingParams</name> <block>{
<decl_stmt><decl><type><name>float</name></type> <name>gamma</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>enhancedContrast</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>clearTypeLevel</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>int</name></type> <name>pixelGeometry</name></decl>;</decl_stmt>










<decl_stmt><decl><type><name>int</name></type> <name>renderingMode</name></decl>;</decl_stmt>







<decl_stmt><decl><type><name>int</name></type> <name>textAntialiasMode</name></decl>;</decl_stmt>
}</block></struct></type> <name>DWriteRenderingParams</name>;</typedef>

<function_decl><type><name>void</name></type> <name>DWrite_Init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>DWrite_Final</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>DWriteContext</name> <modifier>*</modifier></type><name>DWriteContext_Open</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>DWriteContext_BindDC</name><parameter_list>(<parameter><decl><type><name>DWriteContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>HDC</name></type> <name>hdc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>RECT</name> <modifier>*</modifier></type><name>rect</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>DWriteContext_SetFont</name><parameter_list>(<parameter><decl><type><name>DWriteContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>HFONT</name></type> <name>hFont</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>DWriteContext_DrawText</name><parameter_list>(
<parameter><decl><type><name>DWriteContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>WCHAR</name> <modifier>*</modifier></type><name>text</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>h</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>cellWidth</name></decl></parameter>,
<parameter><decl><type><name>COLORREF</name></type> <name>color</name></decl></parameter>,
<parameter><decl><type><name>UINT</name></type> <name>fuOptions</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>RECT</name> <modifier>*</modifier></type><name>lprc</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>INT</name> <modifier>*</modifier></type><name>lpDx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>DWriteContext_FillRect</name><parameter_list>(<parameter><decl><type><name>DWriteContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>RECT</name> <modifier>*</modifier></type><name>rc</name></decl></parameter>, <parameter><decl><type><name>COLORREF</name></type> <name>color</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>DWriteContext_DrawLine</name><parameter_list>(<parameter><decl><type><name>DWriteContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x1</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y1</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x2</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y2</name></decl></parameter>,
<parameter><decl><type><name>COLORREF</name></type> <name>color</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>DWriteContext_SetPixel</name><parameter_list>(<parameter><decl><type><name>DWriteContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>COLORREF</name></type> <name>color</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>DWriteContext_Scroll</name><parameter_list>(<parameter><decl><type><name>DWriteContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>RECT</name> <modifier>*</modifier></type><name>rc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>DWriteContext_Flush</name><parameter_list>(<parameter><decl><type><name>DWriteContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>DWriteContext_Close</name><parameter_list>(<parameter><decl><type><name>DWriteContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>DWriteContext_SetRenderingParams</name><parameter_list>(
<parameter><decl><type><name>DWriteContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>DWriteRenderingParams</name> <modifier>*</modifier></type><name>params</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>DWriteRenderingParams</name> <modifier>*</modifier></type><name>DWriteContext_GetRenderingParams</name><parameter_list>(
<parameter><decl><type><name>DWriteContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>DWriteRenderingParams</name> <modifier>*</modifier></type><name>params</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
