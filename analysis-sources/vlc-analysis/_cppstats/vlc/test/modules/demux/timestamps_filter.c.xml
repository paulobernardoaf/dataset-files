<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\test\modules\demux\timestamps_filter.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>NDEBUG</name></cpp:undef>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_es.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_block.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../../modules/demux/moving_avg.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEBUG_TIMESTAMPS_FILTER</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../../modules/demux/timestamps_filter.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TRASH_ID</name></cpp:macro> <cpp:value>0xfeca1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ESID</name><parameter_list>(<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((void *)(INT64_C(0)+TRASH_ID+n))</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>int</name></type> <name>trash_es_out_Control</name><parameter_list>(<parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>input_source_t</name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_query</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>va_list</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>i_query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>va_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>trash_es_out_Send</name><parameter_list>(<parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>es_out_id_t</name> <modifier>*</modifier></type><name>id</name></decl></parameter>, <parameter><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_block</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>p_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>trash_es_out_Delete</name><parameter_list>(<parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>es_out_id_t</name> <modifier>*</modifier></type><name>trash_es_out_Add</name><parameter_list>(<parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>input_source_t</name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>ESID</name><argument_list>(<argument><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_id</name></name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>trash_es_out_Del</name><parameter_list>(<parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>es_out_id_t</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name><name>struct</name> <name>es_out_callbacks</name></name></type> <name>trash_es_out_cbs</name> <init>=

<expr><block>{

<expr><name>trash_es_out_Add</name></expr>,

<expr><name>trash_es_out_Send</name></expr>,

<expr><name>trash_es_out_Del</name></expr>,

<expr><name>trash_es_out_Control</name></expr>,

<expr><name>trash_es_out_Delete</name></expr>,

<expr><name>NULL</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TIMELINE_0</name></cpp:macro> <cpp:value>(CLOCK_FREQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TIMELINE_1</name></cpp:macro> <cpp:value>(CLOCK_FREQ * 10)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TIMELINE_2</name></cpp:macro> <cpp:value>(CLOCK_FREQ * 5)</cpp:value></cpp:define>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>es_out_t</name></type> <name>trash_es_out</name> <init>= <expr><block>{ <expr><operator>.</operator><name>cbs</name> <operator>=</operator> <operator>&amp;</operator><name>trash_es_out_cbs</name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>out</name> <init>= <expr><call><name>timestamps_filter_es_out_New</name><argument_list>(<argument><expr><operator>&amp;</operator><name>trash_es_out</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>out</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_block</name> <init>= <expr><call><name>block_Alloc</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>p_block</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>timestamps_filter_es_out_Delete</name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">1</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>es_format_t</name></type> <name>fmt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_pcrtime</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>es_format_Init</name><argument_list>(<argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>, <argument><expr><name>VIDEO_ES</name></expr></argument>, <argument><expr><call><name>VLC_FOURCC</name><argument_list>(<argument><expr><literal type="char">'V'</literal></expr></argument>,<argument><expr><literal type="char">'I'</literal></expr></argument>,<argument><expr><literal type="char">'D'</literal></expr></argument>,<argument><expr><literal type="char">'E'</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_id</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>es_out_Add</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>)</argument_list></call> <operator>==</operator> <call><name>ESID</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>=</operator> <name>TIMELINE_0</name> <operator>+</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_Send</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><call><name>ESID</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>p_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>==</operator> <name>TIMELINE_0</name> <operator>+</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>=</operator> <name>TIMELINE_0</name> <operator>+</operator> <literal type="number">100</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_Send</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><call><name>ESID</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>p_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>==</operator> <name>TIMELINE_0</name> <operator>+</operator> <literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>=</operator> <name>TIMELINE_0</name> <operator>+</operator><literal type="number">200</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_Send</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><call><name>ESID</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>p_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>=</operator> <name>TIMELINE_0</name> <operator>+</operator><literal type="number">300</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_Send</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><call><name>ESID</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>p_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_SetPCR</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>TIMELINE_0</name> <operator>+</operator><literal type="number">300</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>es_out_Control</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>ES_OUT_TF_FILTER_GET_TIME</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_pcrtime</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>VLC_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>i_pcrtime</name> <operator>==</operator> <name>TIMELINE_0</name> <operator>+</operator> <literal type="number">300</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>=</operator> <name>TIMELINE_1</name> <operator>+</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_SetPCR</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>es_out_Control</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>ES_OUT_TF_FILTER_GET_TIME</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_pcrtime</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>VLC_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>i_pcrtime</name> <operator>==</operator> <name>TIMELINE_0</name> <operator>+</operator> <literal type="number">300</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_Send</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><call><name>ESID</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>p_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>==</operator> <name>TIMELINE_0</name> <operator>+</operator> <literal type="number">400</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>=</operator> <name>TIMELINE_1</name> <operator>+</operator> <literal type="number">100</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_Send</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><call><name>ESID</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>p_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>==</operator> <name>TIMELINE_0</name> <operator>+</operator> <literal type="number">500</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>=</operator> <name>TIMELINE_2</name> <operator>+</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_SetPCR</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>es_out_Control</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>ES_OUT_TF_FILTER_GET_TIME</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_pcrtime</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>VLC_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>i_pcrtime</name> <operator>==</operator> <name>TIMELINE_0</name> <operator>+</operator> <literal type="number">300</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_Send</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><call><name>ESID</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>p_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>==</operator> <name>TIMELINE_0</name> <operator>+</operator> <literal type="number">600</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_format_Init</name><argument_list>(<argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>, <argument><expr><name>VIDEO_ES</name></expr></argument>, <argument><expr><call><name>VLC_FOURCC</name><argument_list>(<argument><expr><literal type="char">'V'</literal></expr></argument>,<argument><expr><literal type="char">'I'</literal></expr></argument>,<argument><expr><literal type="char">'D'</literal></expr></argument>,<argument><expr><literal type="char">'2'</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_id</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>es_out_Add</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>)</argument_list></call> <operator>==</operator> <call><name>ESID</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>=</operator> <name>TIMELINE_2</name> <operator>+</operator> <literal type="number">333</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_Send</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><call><name>ESID</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>p_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>==</operator> <name>i_pcrtime</name> <operator>+</operator> <literal type="number">333</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>MVA_PACKETS</name> <operator>+</operator> <literal type="number">2</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>

<block>{<block_content>

<expr_stmt><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>=</operator> <name>TIMELINE_2</name> <operator>+</operator> <name>i</name> <operator>*</operator> <literal type="number">333</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_Send</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><call><name>ESID</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>p_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>==</operator> <name>i_pcrtime</name> <operator>+</operator> <name>i</name> <operator>*</operator> <literal type="number">333</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>es_format_Init</name><argument_list>(<argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>, <argument><expr><name>SPU_ES</name></expr></argument>, <argument><expr><call><name>VLC_FOURCC</name><argument_list>(<argument><expr><literal type="char">'S'</literal></expr></argument>,<argument><expr><literal type="char">'P'</literal></expr></argument>,<argument><expr><literal type="char">'U'</literal></expr></argument>,<argument><expr><literal type="char">'0'</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_id</name></name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>es_out_Add</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>)</argument_list></call> <operator>==</operator> <call><name>ESID</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>=</operator> <name>TIMELINE_2</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_Send</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><call><name>ESID</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>p_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>==</operator> <name>i_pcrtime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>=</operator> <name>TIMELINE_2</name> <operator>+</operator> <name>CLOCK_FREQ</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_Send</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><call><name>ESID</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>p_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>==</operator> <name>i_pcrtime</name> <operator>+</operator> <name>CLOCK_FREQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>es_out_Control</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>ES_OUT_TF_FILTER_RESET</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>VLC_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>es_out_Control</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>ES_OUT_TF_FILTER_GET_TIME</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_pcrtime</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>VLC_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>i_pcrtime</name> <operator>==</operator> <name>VLC_TICK_INVALID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_format_Init</name><argument_list>(<argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>, <argument><expr><name>VIDEO_ES</name></expr></argument>, <argument><expr><call><name>VLC_FOURCC</name><argument_list>(<argument><expr><literal type="char">'V'</literal></expr></argument>,<argument><expr><literal type="char">'I'</literal></expr></argument>,<argument><expr><literal type="char">'D'</literal></expr></argument>,<argument><expr><literal type="char">'E'</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_id</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>es_out_Add</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>)</argument_list></call> <operator>==</operator> <call><name>ESID</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>=</operator> <name>TIMELINE_0</name> <operator>+</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_Send</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><call><name>ESID</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>p_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>==</operator> <name>TIMELINE_0</name> <operator>+</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_SetPCR</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>TIMELINE_0</name> <operator>+</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>=</operator> <name>TIMELINE_0</name> <operator>+</operator> <literal type="number">100</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_Send</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><call><name>ESID</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>p_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>==</operator> <name>TIMELINE_0</name> <operator>+</operator> <literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_SetPCR</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>TIMELINE_0</name> <operator>+</operator><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_SetPCR</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>TIMELINE_0</name> <operator>+</operator><literal type="number">200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_SetPCR</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>TIMELINE_0</name> <operator>+</operator><literal type="number">300</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_SetPCR</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>TIMELINE_0</name> <operator>+</operator><literal type="number">400</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_SetPCR</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>TIMELINE_0</name> <operator>+</operator><literal type="number">500</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>es_out_Control</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>ES_OUT_TF_FILTER_GET_TIME</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_pcrtime</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>VLC_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>i_pcrtime</name> <operator>==</operator> <name>TIMELINE_0</name> <operator>+</operator><literal type="number">500</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>es_out_Control</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>ES_OUT_TF_FILTER_DISCONTINUITY</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>VLC_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>es_out_Control</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>ES_OUT_TF_FILTER_GET_TIME</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_pcrtime</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>VLC_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>i_pcrtime</name> <operator>==</operator> <name>TIMELINE_0</name> <operator>+</operator><literal type="number">500</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_SetPCR</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>TIMELINE_1</name> <operator>+</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>es_out_Control</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>ES_OUT_TF_FILTER_GET_TIME</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_pcrtime</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>VLC_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>i_pcrtime</name> <operator>==</operator> <name>TIMELINE_0</name> <operator>+</operator><literal type="number">600</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_format_Init</name><argument_list>(<argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>, <argument><expr><name>SPU_ES</name></expr></argument>, <argument><expr><call><name>VLC_FOURCC</name><argument_list>(<argument><expr><literal type="char">'S'</literal></expr></argument>,<argument><expr><literal type="char">'P'</literal></expr></argument>,<argument><expr><literal type="char">'U'</literal></expr></argument>,<argument><expr><literal type="char">'0'</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_id</name></name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>es_out_Add</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>)</argument_list></call> <operator>==</operator> <call><name>ESID</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>=</operator> <name>TIMELINE_1</name> <operator>+</operator> <literal type="number">100</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_Send</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><call><name>ESID</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>p_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>==</operator> <name>TIMELINE_0</name> <operator>+</operator> <literal type="number">700</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_SetPCR</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>TIMELINE_2</name> <operator>+</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>es_out_Control</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>ES_OUT_TF_FILTER_GET_TIME</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_pcrtime</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>VLC_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>i_pcrtime</name> <operator>==</operator> <name>TIMELINE_0</name> <operator>+</operator><literal type="number">700</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>=</operator> <name>TIMELINE_2</name> <operator>+</operator> <literal type="number">300</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_Send</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><call><name>ESID</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>p_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>==</operator> <name>TIMELINE_0</name> <operator>+</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>=</operator> <name>TIMELINE_2</name> <operator>+</operator> <literal type="number">5300</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_Send</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><call><name>ESID</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>p_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>==</operator> <name>TIMELINE_0</name> <operator>+</operator> <literal type="number">6000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>block_Release</name><argument_list>(<argument><expr><name>p_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_Delete</name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

</unit>
