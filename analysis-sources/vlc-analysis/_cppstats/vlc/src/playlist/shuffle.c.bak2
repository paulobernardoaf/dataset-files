



















#ifdef HAVE_CONFIG_H
# include "config.h"
#endif

#include <vlc_common.h>
#include <vlc_rand.h>
#include "control.h"
#include "item.h"
#include "notify.h"
#include "playlist.h"

void
vlc_playlist_Shuffle(vlc_playlist_t *playlist)
{
    vlc_playlist_AssertLocked(playlist);
    if (playlist->items.size < 2)
        
        return;

    vlc_playlist_item_t *current = playlist->current != -1
                                 ? playlist->items.data[playlist->current]
                                 : NULL;

    

    unsigned short xsubi[3];
    vlc_rand_bytes(xsubi, sizeof(xsubi));

    
    for (size_t i = playlist->items.size - 1; i != 0; --i)
    {
        size_t selected = (size_t) (nrand48(xsubi) % (i + 1));

        
        vlc_playlist_item_t *tmp = playlist->items.data[i];
        playlist->items.data[i] = playlist->items.data[selected];
        playlist->items.data[selected] = tmp;
    }

    struct vlc_playlist_state state;
    if (current)
    {
        
        vlc_playlist_state_Save(playlist, &state);
        playlist->current = vlc_playlist_IndexOf(playlist, current);
        playlist->has_prev = vlc_playlist_ComputeHasPrev(playlist);
        playlist->has_next = vlc_playlist_ComputeHasNext(playlist);
    }

    vlc_playlist_Notify(playlist, on_items_reset, playlist->items.data,
                        playlist->items.size);
    if (current)
        vlc_playlist_state_NotifyChanges(playlist, &state);
}
