<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\src\playlist\notify.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"notify.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"item.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"playlist.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>void</name></type>

<name>vlc_playlist_NotifyCurrentState</name><parameter_list>(<parameter><decl><type><name>vlc_playlist_t</name> <modifier>*</modifier></type><name>playlist</name></decl></parameter>,

<parameter><decl><type><name>vlc_playlist_listener_id</name> <modifier>*</modifier></type><name>listener</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_playlist_NotifyListener</name><argument_list>(<argument><expr><name>playlist</name></expr></argument>, <argument><expr><name>listener</name></expr></argument>, <argument><expr><name>on_items_reset</name></expr></argument>,

<argument><expr><name><name>playlist</name><operator>-&gt;</operator><name>items</name><operator>.</operator><name>data</name></name></expr></argument>, <argument><expr><name><name>playlist</name><operator>-&gt;</operator><name>items</name><operator>.</operator><name>size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_playlist_NotifyListener</name><argument_list>(<argument><expr><name>playlist</name></expr></argument>, <argument><expr><name>listener</name></expr></argument>, <argument><expr><name>on_playback_repeat_changed</name></expr></argument>,

<argument><expr><name><name>playlist</name><operator>-&gt;</operator><name>repeat</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_playlist_NotifyListener</name><argument_list>(<argument><expr><name>playlist</name></expr></argument>, <argument><expr><name>listener</name></expr></argument>, <argument><expr><name>on_playback_order_changed</name></expr></argument>,

<argument><expr><name><name>playlist</name><operator>-&gt;</operator><name>order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_playlist_NotifyListener</name><argument_list>(<argument><expr><name>playlist</name></expr></argument>, <argument><expr><name>listener</name></expr></argument>, <argument><expr><name>on_current_index_changed</name></expr></argument>,

<argument><expr><name><name>playlist</name><operator>-&gt;</operator><name>current</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_playlist_NotifyListener</name><argument_list>(<argument><expr><name>playlist</name></expr></argument>, <argument><expr><name>listener</name></expr></argument>, <argument><expr><name>on_has_prev_changed</name></expr></argument>,

<argument><expr><name><name>playlist</name><operator>-&gt;</operator><name>has_prev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_playlist_NotifyListener</name><argument_list>(<argument><expr><name>playlist</name></expr></argument>, <argument><expr><name>listener</name></expr></argument>, <argument><expr><name>on_has_next_changed</name></expr></argument>,

<argument><expr><name><name>playlist</name><operator>-&gt;</operator><name>has_next</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>vlc_playlist_listener_id</name> <modifier>*</modifier></type>

<name>vlc_playlist_AddListener</name><parameter_list>(<parameter><decl><type><name>vlc_playlist_t</name> <modifier>*</modifier></type><name>playlist</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_playlist_callbacks</name></name> <modifier>*</modifier></type><name>cbs</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>userdata</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>notify_current_state</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_playlist_AssertLocked</name><argument_list>(<argument><expr><name>playlist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>vlc_playlist_listener_id</name> <modifier>*</modifier></type><name>listener</name> <init>= <expr><call><name>malloc</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>listener</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><operator>!</operator><name>listener</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>listener</name><operator>-&gt;</operator><name>cbs</name></name> <operator>=</operator> <name>cbs</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>listener</name><operator>-&gt;</operator><name>userdata</name></name> <operator>=</operator> <name>userdata</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_list_append</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>listener</name><operator>-&gt;</operator><name>node</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>playlist</name><operator>-&gt;</operator><name>listeners</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>notify_current_state</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>vlc_playlist_NotifyCurrentState</name><argument_list>(<argument><expr><name>playlist</name></expr></argument>, <argument><expr><name>listener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>listener</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type>

<name>vlc_playlist_RemoveListener</name><parameter_list>(<parameter><decl><type><name>vlc_playlist_t</name> <modifier>*</modifier></type><name>playlist</name></decl></parameter>,

<parameter><decl><type><name>vlc_playlist_listener_id</name> <modifier>*</modifier></type><name>listener</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_playlist_AssertLocked</name><argument_list>(<argument><expr><name>playlist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>playlist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_list_remove</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>listener</name><operator>-&gt;</operator><name>node</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>listener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type>

<name>vlc_playlist_state_Save</name><parameter_list>(<parameter><decl><type><name>vlc_playlist_t</name> <modifier>*</modifier></type><name>playlist</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>vlc_playlist_state</name></name> <modifier>*</modifier></type><name>state</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><name><name>state</name><operator>-&gt;</operator><name>current</name></name> <operator>=</operator> <name><name>playlist</name><operator>-&gt;</operator><name>current</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>state</name><operator>-&gt;</operator><name>has_prev</name></name> <operator>=</operator> <name><name>playlist</name><operator>-&gt;</operator><name>has_prev</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>state</name><operator>-&gt;</operator><name>has_next</name></name> <operator>=</operator> <name><name>playlist</name><operator>-&gt;</operator><name>has_next</name></name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type>

<name>vlc_playlist_state_NotifyChanges</name><parameter_list>(<parameter><decl><type><name>vlc_playlist_t</name> <modifier>*</modifier></type><name>playlist</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>vlc_playlist_state</name></name> <modifier>*</modifier></type><name>saved_state</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>saved_state</name><operator>-&gt;</operator><name>current</name></name> <operator>!=</operator> <name><name>playlist</name><operator>-&gt;</operator><name>current</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>vlc_playlist_Notify</name><argument_list>(<argument><expr><name>playlist</name></expr></argument>, <argument><expr><name>on_current_index_changed</name></expr></argument>, <argument><expr><name><name>playlist</name><operator>-&gt;</operator><name>current</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>saved_state</name><operator>-&gt;</operator><name>has_prev</name></name> <operator>!=</operator> <name><name>playlist</name><operator>-&gt;</operator><name>has_prev</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>vlc_playlist_Notify</name><argument_list>(<argument><expr><name>playlist</name></expr></argument>, <argument><expr><name>on_has_prev_changed</name></expr></argument>, <argument><expr><name><name>playlist</name><operator>-&gt;</operator><name>has_prev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>saved_state</name><operator>-&gt;</operator><name>has_next</name></name> <operator>!=</operator> <name><name>playlist</name><operator>-&gt;</operator><name>has_next</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>vlc_playlist_Notify</name><argument_list>(<argument><expr><name>playlist</name></expr></argument>, <argument><expr><name>on_has_next_changed</name></expr></argument>, <argument><expr><name><name>playlist</name><operator>-&gt;</operator><name>has_next</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type>

<name>vlc_playlist_HasItemUpdatedListeners</name><parameter_list>(<parameter><decl><type><name>vlc_playlist_t</name> <modifier>*</modifier></type><name>playlist</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vlc_playlist_listener_id</name> <modifier>*</modifier></type><name>listener</name></decl>;</decl_stmt>

<macro><name>vlc_playlist_listener_foreach</name><argument_list>(<argument>listener</argument>, <argument>playlist</argument>)</argument_list></macro>

<if_stmt><if>if <condition>(<expr><name><name>listener</name><operator>-&gt;</operator><name>cbs</name><operator>-&gt;</operator><name>on_items_updated</name></name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>true</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type>

<name>vlc_playlist_NotifyMediaUpdated</name><parameter_list>(<parameter><decl><type><name>vlc_playlist_t</name> <modifier>*</modifier></type><name>playlist</name></decl></parameter>, <parameter><decl><type><name>input_item_t</name> <modifier>*</modifier></type><name>media</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_playlist_AssertLocked</name><argument_list>(<argument><expr><name>playlist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>vlc_playlist_HasItemUpdatedListeners</name><argument_list>(<argument><expr><name>playlist</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>ssize_t</name></type> <name>index</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>playlist</name><operator>-&gt;</operator><name>current</name></name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal> <operator>&amp;&amp;</operator>

<name><name>playlist</name><operator>-&gt;</operator><name>items</name><operator>.</operator><name>data</name><index>[<expr><name><name>playlist</name><operator>-&gt;</operator><name>current</name></name></expr>]</index></name><operator>-&gt;</operator><name>media</name> <operator>==</operator> <name>media</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>index</name> <operator>=</operator> <name><name>playlist</name><operator>-&gt;</operator><name>current</name></name></expr>;</expr_stmt></block_content></block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><name>index</name> <operator>=</operator> <call><name>vlc_playlist_IndexOfMedia</name><argument_list>(<argument><expr><name>playlist</name></expr></argument>, <argument><expr><name>media</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>index</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>vlc_playlist_Notify</name><argument_list>(<argument><expr><name>playlist</name></expr></argument>, <argument><expr><name>on_items_updated</name></expr></argument>, <argument><expr><name>index</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>playlist</name><operator>-&gt;</operator><name>items</name><operator>.</operator><name>data</name><index>[<expr><name>index</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
