<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\src\playlist\export.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_playlist_export.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;errno.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_fs.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_modules.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_url.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"playlist.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libvlc.h"</cpp:file></cpp:include>

<struct>struct <name>vlc_playlist_view</name>

<block>{

<decl_stmt><decl><type><name>vlc_playlist_t</name> <modifier>*</modifier></type><name>playlist</name></decl>;</decl_stmt>

}</block>;</struct>

<function><type><name>size_t</name></type>

<name>vlc_playlist_view_Count</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_playlist_view</name></name> <modifier>*</modifier></type><name>view</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>vlc_playlist_Count</name><argument_list>(<argument><expr><name><name>view</name><operator>-&gt;</operator><name>playlist</name></name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>vlc_playlist_item_t</name> <modifier>*</modifier></type>

<name>vlc_playlist_view_Get</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_playlist_view</name></name> <modifier>*</modifier></type><name>view</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>index</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>vlc_playlist_Get</name><argument_list>(<argument><expr><name><name>view</name><operator>-&gt;</operator><name>playlist</name></name></expr></argument>, <argument><expr><name>index</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type>

<name>vlc_playlist_Export</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_playlist</name></name> <modifier>*</modifier></type><name>playlist</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>type</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_playlist_AssertLocked</name><argument_list>(<argument><expr><name>playlist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_playlist_export</name></name> <modifier>*</modifier></type><name>export</name> <init>=

<expr><call><name>vlc_custom_create</name><argument_list>(<argument><expr><call><name>vlc_player_GetObject</name><argument_list>(<argument><expr><name><name>playlist</name><operator>-&gt;</operator><name>player</name></name></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>export</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"playlist export"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>export</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><name>VLC_EGENERIC</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_playlist_view</name></name></type> <name>playlist_view</name> <init>= <expr><block>{ <expr><operator>.</operator><name>playlist</name> <operator>=</operator> <name>playlist</name></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>export</name><operator>-&gt;</operator><name>playlist_view</name></name> <operator>=</operator> <operator>&amp;</operator><name>playlist_view</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>export</name><operator>-&gt;</operator><name>base_url</name></name> <operator>=</operator> <call><name>vlc_path2uri</name><argument_list>(<argument><expr><name>filename</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>export</name><operator>-&gt;</operator><name>file</name></name> <operator>=</operator> <call><name>vlc_fopen</name><argument_list>(<argument><expr><name>filename</name></expr></argument>, <argument><expr><literal type="string">"wt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>export</name><operator>-&gt;</operator><name>file</name></name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>export</name></expr></argument>, <argument><expr><literal type="string">"Could not create playlist file %s, %s"</literal></expr></argument>,

<argument><expr><name>filename</name></expr></argument>, <argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>close_file</name>;</goto>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>module_t</name> <modifier>*</modifier></type><name>module</name> <init>= <expr><call><name>module_need</name><argument_list>(<argument><expr><name>export</name></expr></argument>, <argument><expr><literal type="string">"playlist export"</literal></expr></argument>, <argument><expr><name>type</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>module</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>export</name></expr></argument>, <argument><expr><literal type="string">"Could not export playlist"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>out</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>module_unneed</name><argument_list>(<argument><expr><name>export</name></expr></argument>, <argument><expr><name>module</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>ferror</name><argument_list>(<argument><expr><name><name>export</name><operator>-&gt;</operator><name>file</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <name>VLC_SUCCESS</name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>export</name></expr></argument>, <argument><expr><literal type="string">"Could not write playlist file: %s"</literal></expr></argument>,

<argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<label><name>close_file</name>:</label>

<expr_stmt><expr><call><name>fclose</name><argument_list>(<argument><expr><name><name>export</name><operator>-&gt;</operator><name>file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label><name>out</name>:</label>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name><name>export</name><operator>-&gt;</operator><name>base_url</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_object_delete</name><argument_list>(<argument><expr><name>export</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>ret</name></expr>;</return>

</block_content>}</block></function>

</unit>
