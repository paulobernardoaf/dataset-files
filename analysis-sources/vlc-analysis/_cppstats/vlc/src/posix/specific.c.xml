<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\src\posix\specific.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../libvlc.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../lib/libvlc_internal.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_DBUS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dbus/dbus.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_url.h&gt;</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><name>void</name></type> <name>system_Init</name> <parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>system_ConfigureDbus</name><parameter_list>(<parameter><decl><type><name>libvlc_int_t</name> <modifier>*</modifier></type><name>vlc</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>argv</name><index>[]</index></name></decl></parameter>)</parameter_list>

<block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_DBUS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MPRIS_APPEND</name></cpp:macro> <cpp:value>"/org/mpris/MediaPlayer2/TrackList/Append"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MPRIS_BUS_NAME</name></cpp:macro> <cpp:value>"org.mpris.MediaPlayer2.vlc"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MPRIS_OBJECT_PATH</name></cpp:macro> <cpp:value>"/org/mpris/MediaPlayer2"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MPRIS_TRACKLIST_INTERFACE</name></cpp:macro> <cpp:value>"org.mpris.MediaPlayer2.TrackList"</cpp:value></cpp:define>

<expr_stmt><expr><call><name>dbus_threads_init_default</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>var_InheritBool</name><argument_list>(<argument><expr><name>vlc</name></expr></argument>, <argument><expr><literal type="string">"dbus"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>libvlc_InternalAddIntf</name><argument_list>(<argument><expr><name>vlc</name></expr></argument>, <argument><expr><literal type="string">"dbus,none"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>var_InheritBool</name><argument_list>(<argument><expr><name>vlc</name></expr></argument>, <argument><expr><literal type="string">"one-instance"</literal></expr></argument>)</argument_list></call>

<operator>&amp;&amp;</operator> <operator>!</operator><operator>(</operator><call><name>var_InheritBool</name><argument_list>(<argument><expr><name>vlc</name></expr></argument>, <argument><expr><literal type="string">"one-instance-when-started-from-file"</literal></expr></argument>)</argument_list></call>

<operator>&amp;&amp;</operator> <call><name>var_InheritBool</name><argument_list>(<argument><expr><name>vlc</name></expr></argument>, <argument><expr><literal type="string">"started-from-file"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>argc</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<if_stmt><if>if <condition>(<expr><name><name>argv</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="char">':'</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vlc</name></expr></argument>, <argument><expr><literal type="string">"item option %s incompatible with single instance"</literal></expr></argument>,

<argument><expr><name><name>argv</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt></block_content></block></for>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name> <init>= <expr><call><name>var_GetString</name><argument_list>(<argument><expr><name>vlc</name></expr></argument>, <argument><expr><literal type="string">"dbus-mpris-name"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>name</name> <operator>!=</operator> <name>NULL</name></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>bool</name></type> <name>singleton</name> <init>= <expr><operator>!</operator><call><name>strcmp</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>MPRIS_BUS_NAME</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>singleton</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>vlc</name></expr></argument>, <argument><expr><literal type="string">"no running VLC instance - continuing normally..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return;</return> 

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>DBusError</name></type> <name>err</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>dbus_error_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>DBusConnection</name> <modifier>*</modifier></type><name>conn</name> <init>= <expr><call><name>dbus_bus_get</name><argument_list>(<argument><expr><name>DBUS_BUS_SESSION</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>err</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>conn</name> <operator>==</operator> <name>NULL</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vlc</name></expr></argument>, <argument><expr><literal type="string">"D-Bus session bus connection failure: %s"</literal></expr></argument>,

<argument><expr><name><name>err</name><operator>.</operator><name>message</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dbus_error_free</name><argument_list>(<argument><expr><operator>&amp;</operator><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>vlc</name></expr></argument>, <argument><expr><literal type="string">"running VLC instance - exiting..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>dbus_bool_t</name></type> <name>play</name> <init>= <expr><operator>!</operator><call><name>var_InheritBool</name><argument_list>(<argument><expr><name>vlc</name></expr></argument>, <argument><expr><literal type="string">"playlist-enqueue"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>argc</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>

<block>{<block_content>

<decl_stmt><decl><type><name>DBusMessage</name> <modifier>*</modifier></type><name>req</name> <init>= <expr><call><name>dbus_message_new_method_call</name><argument_list>(<argument><expr><name>MPRIS_BUS_NAME</name></expr></argument>,

<argument><expr><name>MPRIS_OBJECT_PATH</name></expr></argument>, <argument><expr><name>MPRIS_TRACKLIST_INTERFACE</name></expr></argument>, <argument><expr><literal type="string">"AddTrack"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>req</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>mrlbuf</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>mrl</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>strstr</name><argument_list>(<argument><expr><name><name>argv</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="string">"://"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>mrl</name> <operator>=</operator> <name><name>argv</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><name>mrlbuf</name> <operator>=</operator> <call><name>vlc_path2uri</name><argument_list>(<argument><expr><name><name>argv</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>mrlbuf</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>dbus_message_unref</name><argument_list>(<argument><expr><name>req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<continue>continue;</continue>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>mrl</name> <operator>=</operator> <name>mrlbuf</name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>vlc</name></expr></argument>, <argument><expr><literal type="string">"adding track %s to running instance"</literal></expr></argument>, <argument><expr><name>mrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>after_track</name> <init>= <expr><name>MPRIS_APPEND</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>dbus_bool_t</name></type> <name>ok</name> <init>= <expr><call><name>dbus_message_append_args</name><argument_list>(<argument><expr><name>req</name></expr></argument>, <argument><expr><name>DBUS_TYPE_STRING</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>mrl</name></expr></argument>,

<argument><expr><name>DBUS_TYPE_OBJECT_PATH</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>after_track</name></expr></argument>,

<argument><expr><name>DBUS_TYPE_BOOLEAN</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>play</name></expr></argument>,

<argument><expr><name>DBUS_TYPE_INVALID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>mrlbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><operator>!</operator><name>ok</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>dbus_message_unref</name><argument_list>(<argument><expr><name>req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<continue>continue;</continue>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>DBusMessage</name> <modifier>*</modifier></type><name>reply</name> <init>= <expr><call><name>dbus_connection_send_with_reply_and_block</name><argument_list>(<argument><expr><name>conn</name></expr></argument>,

<argument><expr><name>req</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>err</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>dbus_message_unref</name><argument_list>(<argument><expr><name>req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>reply</name> <operator>==</operator> <name>NULL</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vlc</name></expr></argument>, <argument><expr><literal type="string">"D-Bus error: %s"</literal></expr></argument>, <argument><expr><name><name>err</name><operator>.</operator><name>message</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dbus_error_free</name><argument_list>(<argument><expr><operator>&amp;</operator><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<continue>continue;</continue>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>dbus_message_unref</name><argument_list>(<argument><expr><name>reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>dbus_connection_unref</name><argument_list>(<argument><expr><name>conn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>exit</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>vlc</name></expr>;</expr_stmt> <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>argc</name></expr>;</expr_stmt> <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>argv</name></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

</block_content>}</block></function>

<function><type><name>void</name></type> <name>system_Configure</name><parameter_list>(<parameter><decl><type><name>libvlc_int_t</name> <modifier>*</modifier></type><name>libvlc</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>argv</name><index>[]</index></name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>system_ConfigureDbus</name><argument_list>(<argument><expr><name>libvlc</name></expr></argument>, <argument><expr><name>argc</name></expr></argument>, <argument><expr><name>argv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
