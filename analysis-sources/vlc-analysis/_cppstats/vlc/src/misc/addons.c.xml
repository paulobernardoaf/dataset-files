<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\src\misc\addons.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_atomic.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_modules.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_arrays.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_interrupt.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libvlc.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_addons.h&gt;</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <name>addon_entry_owner</name>

<block>{

<decl_stmt><decl><type><name>addon_entry_t</name></type> <name>entry</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_atomic_rc_t</name></type> <name>rc</name></decl>;</decl_stmt>

}</block></struct></type> <name>addon_entry_owner_t</name>;</typedef>

<struct>struct <name>addons_manager_private_t</name>

<block>{

<decl_stmt><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_parent</name></decl>;</decl_stmt>

<struct>struct

<block>{

<decl_stmt><decl><type><name>vlc_thread_t</name></type> <name>thread</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_cond_t</name></type> <name>waitcond</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_live</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>lock</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_interrupt_t</name> <modifier>*</modifier></type><name>p_interrupt</name></decl>;</decl_stmt>

<macro><name>DECL_ARRAY</name><argument_list>(<argument>char*</argument>)</argument_list></macro> <expr_stmt><expr><name>uris</name></expr>;</expr_stmt>

<macro><name>DECL_ARRAY</name><argument_list>(<argument>addon_entry_t*</argument>)</argument_list></macro> <expr_stmt><expr><name>entries</name></expr>;</expr_stmt>

}</block> <decl><name>finder</name></decl>;</struct>

<struct>struct

<block>{

<decl_stmt><decl><type><name>vlc_thread_t</name></type> <name>thread</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_cond_t</name></type> <name>waitcond</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_live</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>lock</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_interrupt_t</name> <modifier>*</modifier></type><name>p_interrupt</name></decl>;</decl_stmt>

<macro><name>DECL_ARRAY</name><argument_list>(<argument>addon_entry_t*</argument>)</argument_list></macro> <expr_stmt><expr><name>entries</name></expr>;</expr_stmt>

}</block> <decl><name>installer</name></decl>;</struct>

}</block>;</struct>

<function_decl><type><specifier>static</specifier> <name>void</name> <modifier>*</modifier></type><name>FinderThread</name><parameter_list>( <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>LoadLocalStorage</name><parameter_list>( <parameter><decl><type><name>addons_manager_t</name> <modifier>*</modifier></type><name>p_manager</name></decl></parameter> )</parameter_list>;</function_decl>

<function><type><name>addon_entry_t</name> <modifier>*</modifier></type> <name>addon_entry_New</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>addon_entry_owner_t</name> <modifier>*</modifier></type><name>owner</name> <init>= <expr><call><name>calloc</name><argument_list>( <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>addon_entry_owner_t</name></expr></argument>)</argument_list></sizeof></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>unlikely</name><argument_list>(<argument><expr><name>owner</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_atomic_rc_init</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>owner</name><operator>-&gt;</operator><name>rc</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>addon_entry_t</name> <modifier>*</modifier></type><name>p_entry</name> <init>= <expr><operator>&amp;</operator><name><name>owner</name><operator>-&gt;</operator><name>entry</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_mutex_init</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_entry</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ARRAY_INIT</name><argument_list>( <argument><expr><name><name>p_entry</name><operator>-&gt;</operator><name>files</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>p_entry</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>addon_entry_t</name> <modifier>*</modifier></type> <name>addon_entry_Hold</name><parameter_list>( <parameter><decl><type><name>addon_entry_t</name> <modifier>*</modifier></type> <name>p_entry</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>addon_entry_owner_t</name> <modifier>*</modifier></type><name>owner</name> <init>= <expr><operator>(</operator><name>addon_entry_owner_t</name> <operator>*</operator><operator>)</operator> <name>p_entry</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_atomic_rc_inc</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>owner</name><operator>-&gt;</operator><name>rc</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>p_entry</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>addon_entry_Release</name><parameter_list>( <parameter><decl><type><name>addon_entry_t</name> <modifier>*</modifier></type> <name>p_entry</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>addon_entry_owner_t</name> <modifier>*</modifier></type><name>owner</name> <init>= <expr><operator>(</operator><name>addon_entry_owner_t</name> <operator>*</operator><operator>)</operator> <name>p_entry</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>vlc_atomic_rc_dec</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>owner</name><operator>-&gt;</operator><name>rc</name></name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_entry</name><operator>-&gt;</operator><name>psz_name</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_entry</name><operator>-&gt;</operator><name>psz_summary</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_entry</name><operator>-&gt;</operator><name>psz_description</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_entry</name><operator>-&gt;</operator><name>psz_archive_uri</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_entry</name><operator>-&gt;</operator><name>psz_author</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_entry</name><operator>-&gt;</operator><name>psz_source_uri</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_entry</name><operator>-&gt;</operator><name>psz_image_uri</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_entry</name><operator>-&gt;</operator><name>psz_image_data</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_entry</name><operator>-&gt;</operator><name>psz_source_module</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_entry</name><operator>-&gt;</operator><name>psz_version</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_entry</name><operator>-&gt;</operator><name>p_custom</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>addon_file_t</name> <modifier>*</modifier></type><name>p_file</name></decl>;</decl_stmt>

<macro><name>ARRAY_FOREACH</name><argument_list>( <argument>p_file</argument>, <argument>p_entry-&gt;files</argument> )</argument_list></macro>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_file</name><operator>-&gt;</operator><name>psz_filename</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_file</name><operator>-&gt;</operator><name>psz_download_uri</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_file</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>

<expr_stmt><expr><call><name>ARRAY_RESET</name><argument_list>( <argument><expr><name><name>p_entry</name><operator>-&gt;</operator><name>files</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>owner</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>addons_manager_t</name> <modifier>*</modifier></type><name>addons_manager_New</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>addons_manager_owner</name></name> <modifier>*</modifier><specifier>restrict</specifier></type> <name>owner</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>addons_manager_t</name> <modifier>*</modifier></type><name>p_manager</name> <init>= <expr><call><name>malloc</name><argument_list>( <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>addons_manager_t</name></expr></argument>)</argument_list></sizeof></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name>p_manager</name></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name></name> <operator>=</operator> <call><name>malloc</name><argument_list>( <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>addons_manager_private_t</name></expr></argument>)</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_manager</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_manager</name><operator>-&gt;</operator><name>owner</name></name> <operator>=</operator> <operator>*</operator><name>owner</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>p_parent</name></name> <operator>=</operator> <name>p_this</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>p_interrupt</name></name> <operator>=</operator> <call><name>vlc_interrupt_create</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>p_interrupt</name></name> <operator>=</operator> <call><name>vlc_interrupt_create</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>p_interrupt</name></name> <operator>||</operator>

<operator>!</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>p_interrupt</name></name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>p_interrupt</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>vlc_interrupt_destroy</name><argument_list>( <argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>p_interrupt</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>p_interrupt</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>vlc_interrupt_destroy</name><argument_list>( <argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>p_interrupt</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_manager</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INIT_QUEUE</name><parameter_list>( <parameter><type><name>name</name></type></parameter> )</parameter_list></cpp:macro> <cpp:value>p_manager-&gt;p_priv-&gt;name.b_live = false;vlc_mutex_init( &amp;p_manager-&gt;p_priv-&gt;name.lock );vlc_cond_init( &amp;p_manager-&gt;p_priv-&gt;name.waitcond );ARRAY_INIT( p_manager-&gt;p_priv-&gt;name.entries );</cpp:value></cpp:define>

<macro><name>INIT_QUEUE</name><argument_list>( <argument>finder</argument> )</argument_list></macro>

<macro><name>INIT_QUEUE</name><argument_list>( <argument>installer</argument> )</argument_list></macro>

<expr_stmt><expr><call><name>ARRAY_INIT</name><argument_list>( <argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>uris</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>p_manager</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>addons_manager_Delete</name><parameter_list>( <parameter><decl><type><name>addons_manager_t</name> <modifier>*</modifier></type><name>p_manager</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>bool</name></type> <name>b_live</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>b_live</name> <operator>=</operator> <name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>b_live</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name>b_live</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_interrupt_kill</name><argument_list>( <argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>p_interrupt</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_join</name><argument_list>( <argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>thread</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>b_live</name> <operator>=</operator> <name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>b_live</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name>b_live</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_interrupt_kill</name><argument_list>( <argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>p_interrupt</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_join</name><argument_list>( <argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>thread</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>addon_entry_t</name> <modifier>*</modifier></type><name>p_entry</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FREE_QUEUE</name><parameter_list>( <parameter><type><name>name</name></type></parameter> )</parameter_list></cpp:macro> <cpp:value>ARRAY_FOREACH( p_entry, p_manager-&gt;p_priv-&gt;name.entries )addon_entry_Release( p_entry );ARRAY_RESET( p_manager-&gt;p_priv-&gt;name.entries );vlc_interrupt_destroy( p_manager-&gt;p_priv-&gt;name.p_interrupt );</cpp:value></cpp:define>

<macro><name>FREE_QUEUE</name><argument_list>( <argument>finder</argument> )</argument_list></macro>

<macro><name>FREE_QUEUE</name><argument_list>( <argument>installer</argument> )</argument_list></macro>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_uri</name></decl>;</decl_stmt>

<macro><name>ARRAY_FOREACH</name><argument_list>( <argument>psz_uri</argument>, <argument>p_manager-&gt;p_priv-&gt;finder.uris</argument> )</argument_list></macro>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>psz_uri</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ARRAY_RESET</name><argument_list>( <argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>uris</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_manager</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>addons_manager_Gather</name><parameter_list>( <parameter><decl><type><name>addons_manager_t</name> <modifier>*</modifier></type><name>p_manager</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_uri</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name>psz_uri</name></expr> )</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ARRAY_APPEND</name><argument_list>( <argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>uris</name></name></expr></argument>, <argument><expr><call><name>strdup</name><argument_list>( <argument><expr><name>psz_uri</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>b_live</name></name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><call><name>vlc_clone</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>thread</name></name></expr></argument>, <argument><expr><name>FinderThread</name></expr></argument>, <argument><expr><name>p_manager</name></expr></argument>,

<argument><expr><name>VLC_THREAD_PRIORITY_LOW</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>p_parent</name></name></expr></argument>,

<argument><expr><literal type="string">"cannot spawn entries provider thread"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>b_live</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_cond_signal</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>waitcond</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>addon_entry_t</name> <modifier>*</modifier></type> <name>getHeldEntryByUUID</name><parameter_list>( <parameter><decl><type><name>addons_manager_t</name> <modifier>*</modifier></type><name>p_manager</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>addon_uuid_t</name></type> <name>uuid</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>addon_entry_t</name> <modifier>*</modifier></type><name>p_return</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>addon_entry_t</name> <modifier>*</modifier></type><name>p_entry</name></decl>;</decl_stmt>

<macro><name>ARRAY_FOREACH</name><argument_list>( <argument>p_entry</argument>, <argument>p_manager-&gt;p_priv-&gt;finder.entries</argument> )</argument_list></macro>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><operator>!</operator><call><name>memcmp</name><argument_list>( <argument><expr><name><name>p_entry</name><operator>-&gt;</operator><name>uuid</name></name></expr></argument>, <argument><expr><name>uuid</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><name>addon_uuid_t</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>p_return</name> <operator>=</operator> <name>p_entry</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>addon_entry_Hold</name><argument_list>( <argument><expr><name>p_return</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></if></if_stmt>

</block_content>}</block>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>p_return</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>MergeSources</name><parameter_list>( <parameter><decl><type><name>addons_manager_t</name> <modifier>*</modifier></type><name>p_manager</name></decl></parameter>,

<parameter><decl><type><name>addon_entry_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_addons</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_count</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>addon_entry_t</name> <modifier>*</modifier></type><name>p_entry</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>p_manager_entry</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>addon_uuid_t</name></type> <name>zerouuid</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>memset</name><argument_list>( <argument><expr><name>zerouuid</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><name>addon_uuid_t</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<for>for <control>( <init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>i_count</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<expr_stmt><expr><name>p_entry</name> <operator>=</operator> <name><name>pp_addons</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_entry</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><call><name>memcmp</name><argument_list>( <argument><expr><name><name>p_entry</name><operator>-&gt;</operator><name>uuid</name></name></expr></argument>, <argument><expr><name>zerouuid</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><name>addon_uuid_t</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>p_manager_entry</name> <operator>=</operator> <call><name>getHeldEntryByUUID</name><argument_list>( <argument><expr><name>p_manager</name></expr></argument>, <argument><expr><name><name>p_entry</name><operator>-&gt;</operator><name>uuid</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name>p_manager_entry</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name>p_manager_entry</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>ARRAY_APPEND</name><argument_list>( <argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>entries</name></name></expr></argument>, <argument><expr><name>p_entry</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name><name>p_manager</name><operator>-&gt;</operator><name>owner</name><operator>.</operator><name>addon_found</name></name><argument_list>( <argument><expr><name>p_manager</name></expr></argument>, <argument><expr><name>p_entry</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager_entry</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><operator>(</operator> <name><name>p_manager_entry</name><operator>-&gt;</operator><name>psz_version</name></name> <operator>&amp;&amp;</operator> <name><name>p_entry</name><operator>-&gt;</operator><name>psz_version</name></name> <operator>)</operator>

<operator>&amp;&amp;</operator> 

<call><name>strcmp</name><argument_list>( <argument><expr><name><name>p_manager_entry</name><operator>-&gt;</operator><name>psz_version</name></name></expr></argument>, <argument><expr><name><name>p_entry</name><operator>-&gt;</operator><name>psz_version</name></name></expr></argument> )</argument_list></call></expr>

)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_manager_entry</name><operator>-&gt;</operator><name>e_flags</name></name> <operator>|=</operator> <name>ADDON_UPDATABLE</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager_entry</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>addon_entry_Release</name><argument_list>( <argument><expr><name>p_manager_entry</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_entry</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>LoadLocalStorage</name><parameter_list>( <parameter><decl><type><name>addons_manager_t</name> <modifier>*</modifier></type><name>p_manager</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>addons_finder_t</name> <modifier>*</modifier></type><name>p_finder</name> <init>=

<expr><call><name>vlc_custom_create</name><argument_list>( <argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>p_parent</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><operator>*</operator><name>p_finder</name></expr></argument> )</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"entries finder"</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p_finder</name><operator>-&gt;</operator><name>obj</name><operator>.</operator><name>no_interact</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>module_t</name> <modifier>*</modifier></type><name>p_module</name> <init>= <expr><call><name>module_need</name><argument_list>( <argument><expr><name>p_finder</name></expr></argument>, <argument><expr><literal type="string">"addons finder"</literal></expr></argument>,

<argument><expr><literal type="string">"addons.store.list"</literal></expr></argument>, <argument><expr><name>true</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>p_module</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>ARRAY_INIT</name><argument_list>( <argument><expr><name><name>p_finder</name><operator>-&gt;</operator><name>entries</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_finder</name><operator>-&gt;</operator><name>psz_uri</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name><name>p_finder</name><operator>-&gt;</operator><name>pf_find</name></name><argument_list>( <argument><expr><name>p_finder</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>module_unneed</name><argument_list>( <argument><expr><name>p_finder</name></expr></argument>, <argument><expr><name>p_module</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MergeSources</name><argument_list>( <argument><expr><name>p_manager</name></expr></argument>, <argument><expr><name><name>p_finder</name><operator>-&gt;</operator><name>entries</name><operator>.</operator><name>p_elems</name></name></expr></argument>, <argument><expr><name><name>p_finder</name><operator>-&gt;</operator><name>entries</name><operator>.</operator><name>i_size</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ARRAY_RESET</name><argument_list>( <argument><expr><name><name>p_finder</name><operator>-&gt;</operator><name>entries</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_object_delete</name><argument_list>(<argument><expr><name>p_finder</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>finder_thread_interrupted</name><parameter_list>( <parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>p_data</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>addons_manager_t</name> <modifier>*</modifier></type><name>p_manager</name> <init>= <expr><name>p_data</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>b_live</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_cond_signal</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>waitcond</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name> <modifier>*</modifier></type><name>FinderThread</name><parameter_list>( <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_data</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>addons_manager_t</name> <modifier>*</modifier></type><name>p_manager</name> <init>= <expr><name>p_data</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_cancel</name> <init>= <expr><call><name>vlc_savecancel</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_interrupt_set</name><argument_list>( <argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>p_interrupt</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<while>while<condition>( <expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>b_live</name></name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_uri</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_interrupt_register</name><argument_list>( <argument><expr><name>finder_thread_interrupted</name></expr></argument>, <argument><expr><name>p_data</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<while>while<condition>( <expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>uris</name><operator>.</operator><name>i_size</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>

<name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>b_live</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_cond_wait</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>waitcond</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></while>

<expr_stmt><expr><call><name>vlc_interrupt_unregister</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>b_live</name></name></expr> )</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

<expr_stmt><expr><name>psz_uri</name> <operator>=</operator> <name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>uris</name><operator>.</operator><name>p_elems</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ARRAY_REMOVE</name><argument_list>( <argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>uris</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>addons_finder_t</name> <modifier>*</modifier></type><name>p_finder</name> <init>=

<expr><call><name>vlc_custom_create</name><argument_list>( <argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>p_parent</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><operator>*</operator><name>p_finder</name></expr></argument> )</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"entries finder"</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>p_finder</name> <operator>!=</operator> <name>NULL</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_finder</name><operator>-&gt;</operator><name>obj</name><operator>.</operator><name>no_interact</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>module_t</name> <modifier>*</modifier></type><name>p_module</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ARRAY_INIT</name><argument_list>( <argument><expr><name><name>p_finder</name><operator>-&gt;</operator><name>entries</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_finder</name><operator>-&gt;</operator><name>psz_uri</name></name> <operator>=</operator> <name>psz_uri</name></expr>;</expr_stmt>

<expr_stmt><expr><name>p_module</name> <operator>=</operator> <call><name>module_need</name><argument_list>( <argument><expr><name>p_finder</name></expr></argument>, <argument><expr><literal type="string">"addons finder"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>false</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>p_module</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name><name>p_finder</name><operator>-&gt;</operator><name>pf_find</name></name><argument_list>( <argument><expr><name>p_finder</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>module_unneed</name><argument_list>( <argument><expr><name>p_finder</name></expr></argument>, <argument><expr><name>p_module</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MergeSources</name><argument_list>( <argument><expr><name>p_manager</name></expr></argument>, <argument><expr><name><name>p_finder</name><operator>-&gt;</operator><name>entries</name><operator>.</operator><name>p_elems</name></name></expr></argument>, <argument><expr><name><name>p_finder</name><operator>-&gt;</operator><name>entries</name><operator>.</operator><name>i_size</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>ARRAY_RESET</name><argument_list>( <argument><expr><name><name>p_finder</name><operator>-&gt;</operator><name>entries</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>psz_uri</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_object_delete</name><argument_list>(<argument><expr><name>p_finder</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name><name>p_manager</name><operator>-&gt;</operator><name>owner</name><operator>.</operator><name>discovery_ended</name></name><argument_list>( <argument><expr><name>p_manager</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></while>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_restorecancel</name><argument_list>( <argument><expr><name>i_cancel</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>addons_manager_WriteCatalog</name><parameter_list>( <parameter><decl><type><name>addons_manager_t</name> <modifier>*</modifier></type><name>p_manager</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i_return</name> <init>= <expr><name>VLC_EGENERIC</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>addons_storage_t</name> <modifier>*</modifier></type><name>p_storage</name> <init>=

<expr><call><name>vlc_custom_create</name><argument_list>( <argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>p_parent</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><operator>*</operator><name>p_storage</name></expr></argument> )</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"entries storage"</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p_storage</name><operator>-&gt;</operator><name>obj</name><operator>.</operator><name>no_interact</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>module_t</name> <modifier>*</modifier></type><name>p_module</name> <init>= <expr><call><name>module_need</name><argument_list>( <argument><expr><name>p_storage</name></expr></argument>, <argument><expr><literal type="string">"addons storage"</literal></expr></argument>,

<argument><expr><literal type="string">"addons.store.install"</literal></expr></argument>, <argument><expr><name>true</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>p_module</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_return</name> <operator>=</operator> <call><name><name>p_storage</name><operator>-&gt;</operator><name>pf_catalog</name></name><argument_list>( <argument><expr><name>p_storage</name></expr></argument>, <argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>entries</name><operator>.</operator><name>p_elems</name></name></expr></argument>,

<argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>entries</name><operator>.</operator><name>i_size</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>finder</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>module_unneed</name><argument_list>( <argument><expr><name>p_storage</name></expr></argument>, <argument><expr><name>p_module</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_object_delete</name><argument_list>(<argument><expr><name>p_storage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>i_return</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>addons_manager_LoadCatalog</name><parameter_list>( <parameter><decl><type><name>addons_manager_t</name> <modifier>*</modifier></type><name>p_manager</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>LoadLocalStorage</name><argument_list>( <argument><expr><name>p_manager</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>installOrRemoveAddon</name><parameter_list>( <parameter><decl><type><name>addons_manager_t</name> <modifier>*</modifier></type><name>p_manager</name></decl></parameter>, <parameter><decl><type><name>addon_entry_t</name> <modifier>*</modifier></type><name>p_entry</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b_install</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i_return</name> <init>= <expr><name>VLC_EGENERIC</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>addons_storage_t</name> <modifier>*</modifier></type><name>p_storage</name> <init>=

<expr><call><name>vlc_custom_create</name><argument_list>( <argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>p_parent</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><operator>*</operator><name>p_storage</name></expr></argument> )</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"entries storage"</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p_storage</name><operator>-&gt;</operator><name>obj</name><operator>.</operator><name>no_interact</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>module_t</name> <modifier>*</modifier></type><name>p_module</name> <init>= <expr><call><name>module_need</name><argument_list>( <argument><expr><name>p_storage</name></expr></argument>, <argument><expr><literal type="string">"addons storage"</literal></expr></argument>,

<argument><expr><literal type="string">"addons.store.install"</literal></expr></argument>, <argument><expr><name>true</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>p_module</name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><name>b_install</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>i_return</name> <operator>=</operator> <call><name><name>p_storage</name><operator>-&gt;</operator><name>pf_install</name></name><argument_list>( <argument><expr><name>p_storage</name></expr></argument>, <argument><expr><name>p_entry</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name>i_return</name> <operator>=</operator> <call><name><name>p_storage</name><operator>-&gt;</operator><name>pf_remove</name></name><argument_list>( <argument><expr><name>p_storage</name></expr></argument>, <argument><expr><name>p_entry</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><call><name>module_unneed</name><argument_list>( <argument><expr><name>p_storage</name></expr></argument>, <argument><expr><name>p_module</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>p_parent</name></name></expr></argument>, <argument><expr><literal type="string">"InstallAddon returns %d"</literal></expr></argument>, <argument><expr><name>i_return</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name>i_return</name> <operator>==</operator> <name>VLC_SUCCESS</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_entry</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_entry</name><operator>-&gt;</operator><name>e_flags</name></name> <operator>=</operator> <name>ADDON_MANAGEABLE</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_entry</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_object_delete</name><argument_list>(<argument><expr><name>p_storage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>i_return</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>installer_thread_interrupted</name><parameter_list>( <parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>p_data</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>addons_manager_t</name> <modifier>*</modifier></type><name>p_manager</name> <init>= <expr><name>p_data</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>b_live</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_cond_signal</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>waitcond</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name> <modifier>*</modifier></type><name>InstallerThread</name><parameter_list>( <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_data</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>addons_manager_t</name> <modifier>*</modifier></type><name>p_manager</name> <init>= <expr><name>p_data</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_cancel</name> <init>= <expr><call><name>vlc_savecancel</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_interrupt_set</name><argument_list>( <argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>p_interrupt</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<while>while<condition>( <expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>b_live</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_interrupt_register</name><argument_list>( <argument><expr><name>installer_thread_interrupted</name></expr></argument>, <argument><expr><name>p_data</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<while>while <condition>( <expr><operator>!</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>entries</name><operator>.</operator><name>i_size</name></name> <operator>&amp;&amp;</operator>

<name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>b_live</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_cond_wait</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>waitcond</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></while>

<expr_stmt><expr><call><name>vlc_interrupt_unregister</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>b_live</name></name></expr> )</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>addon_entry_t</name> <modifier>*</modifier></type><name>p_entry</name> <init>= <expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>entries</name><operator>.</operator><name>p_elems</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ARRAY_REMOVE</name><argument_list>( <argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>entries</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>addon_entry_Hold</name><argument_list>( <argument><expr><name>p_entry</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_entry</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name><name>p_entry</name><operator>-&gt;</operator><name>e_state</name></name> <operator>==</operator> <name>ADDON_INSTALLED</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_entry</name><operator>-&gt;</operator><name>e_state</name></name> <operator>=</operator> <name>ADDON_UNINSTALLING</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_entry</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name><name>p_manager</name><operator>-&gt;</operator><name>owner</name><operator>.</operator><name>addon_changed</name></name><argument_list>( <argument><expr><name>p_manager</name></expr></argument>, <argument><expr><name>p_entry</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_ret</name> <operator>=</operator> <call><name>installOrRemoveAddon</name><argument_list>( <argument><expr><name>p_manager</name></expr></argument>, <argument><expr><name>p_entry</name></expr></argument>, <argument><expr><name>false</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_entry</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_entry</name><operator>-&gt;</operator><name>e_state</name></name> <operator>=</operator> <ternary><condition><expr><operator>(</operator> <name>i_ret</name> <operator>==</operator> <name>VLC_SUCCESS</name> <operator>)</operator></expr> ?</condition><then> <expr><name>ADDON_NOTINSTALLED</name></expr>

</then><else>: <expr><name>ADDON_INSTALLED</name></expr></else></ternary></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if <condition>( <expr><name><name>p_entry</name><operator>-&gt;</operator><name>e_state</name></name> <operator>==</operator> <name>ADDON_NOTINSTALLED</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_entry</name><operator>-&gt;</operator><name>e_state</name></name> <operator>=</operator> <name>ADDON_INSTALLING</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_entry</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name><name>p_manager</name><operator>-&gt;</operator><name>owner</name><operator>.</operator><name>addon_changed</name></name><argument_list>( <argument><expr><name>p_manager</name></expr></argument>, <argument><expr><name>p_entry</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_ret</name> <operator>=</operator> <call><name>installOrRemoveAddon</name><argument_list>( <argument><expr><name>p_manager</name></expr></argument>, <argument><expr><name>p_entry</name></expr></argument>, <argument><expr><name>true</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_entry</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_entry</name><operator>-&gt;</operator><name>e_state</name></name> <operator>=</operator> <ternary><condition><expr><operator>(</operator> <name>i_ret</name> <operator>==</operator> <name>VLC_SUCCESS</name> <operator>)</operator></expr> ?</condition><then> <expr><name>ADDON_INSTALLED</name></expr>

</then><else>: <expr><name>ADDON_NOTINSTALLED</name></expr></else></ternary></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_entry</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name><name>p_manager</name><operator>-&gt;</operator><name>owner</name><operator>.</operator><name>addon_changed</name></name><argument_list>( <argument><expr><name>p_manager</name></expr></argument>, <argument><expr><name>p_entry</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>addon_entry_Release</name><argument_list>( <argument><expr><name>p_entry</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>addons_manager_WriteCatalog</name><argument_list>( <argument><expr><name>p_manager</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></while>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_restorecancel</name><argument_list>( <argument><expr><name>i_cancel</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>InstallEntry</name><parameter_list>( <parameter><decl><type><name>addons_manager_t</name> <modifier>*</modifier></type><name>p_manager</name></decl></parameter>, <parameter><decl><type><name>addon_entry_t</name> <modifier>*</modifier></type><name>p_entry</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><name><name>p_entry</name><operator>-&gt;</operator><name>e_type</name></name> <operator>==</operator> <name>ADDON_UNKNOWN</name> <operator>||</operator>

<name><name>p_entry</name><operator>-&gt;</operator><name>e_type</name></name> <operator>==</operator> <name>ADDON_PLUGIN</name> <operator>||</operator>

<name><name>p_entry</name><operator>-&gt;</operator><name>e_type</name></name> <operator>==</operator> <name>ADDON_OTHER</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EBADVAR</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ARRAY_APPEND</name><argument_list>( <argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>entries</name></name></expr></argument>, <argument><expr><name>p_entry</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>b_live</name></name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><call><name>vlc_clone</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>thread</name></name></expr></argument>, <argument><expr><name>InstallerThread</name></expr></argument>, <argument><expr><name>p_manager</name></expr></argument>,

<argument><expr><name>VLC_THREAD_PRIORITY_LOW</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>p_parent</name></name></expr></argument>,

<argument><expr><literal type="string">"cannot spawn addons installer thread"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>b_live</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_cond_signal</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_manager</name><operator>-&gt;</operator><name>p_priv</name><operator>-&gt;</operator><name>installer</name><operator>.</operator><name>waitcond</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>addons_manager_Install</name><parameter_list>( <parameter><decl><type><name>addons_manager_t</name> <modifier>*</modifier></type><name>p_manager</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>addon_uuid_t</name></type> <name>uuid</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>addon_entry_t</name> <modifier>*</modifier></type><name>p_install_entry</name> <init>= <expr><call><name>getHeldEntryByUUID</name><argument_list>( <argument><expr><name>p_manager</name></expr></argument>, <argument><expr><name>uuid</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator> <name>p_install_entry</name></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name> <init>= <expr><call><name>InstallEntry</name><argument_list>( <argument><expr><name>p_manager</name></expr></argument>, <argument><expr><name>p_install_entry</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>addon_entry_Release</name><argument_list>( <argument><expr><name>p_install_entry</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>i_ret</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>addons_manager_Remove</name><parameter_list>( <parameter><decl><type><name>addons_manager_t</name> <modifier>*</modifier></type><name>p_manager</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>addon_uuid_t</name></type> <name>uuid</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>addons_manager_Install</name><argument_list>( <argument><expr><name>p_manager</name></expr></argument>, <argument><expr><name>uuid</name></expr></argument> )</argument_list></call></expr>;</return>

</block_content>}</block></function>

</unit>
