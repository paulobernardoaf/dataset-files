<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\src\misc\mime.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_mime.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>

<struct><specifier>static</specifier> <specifier>const</specifier> struct

<block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>psz_ext</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_mime</name></decl>;</decl_stmt>

}</block> <decl><name><name>ext_mime</name><index>[]</index></name> <init>=

<expr><block>{

<expr><block>{ <expr><literal type="string">".htm"</literal></expr>, <expr><literal type="string">"text/html"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".html"</literal></expr>, <expr><literal type="string">"text/html"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".txt"</literal></expr>, <expr><literal type="string">"text/plain"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".xml"</literal></expr>, <expr><literal type="string">"text/xml"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".dtd"</literal></expr>, <expr><literal type="string">"text/dtd"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".css"</literal></expr>, <expr><literal type="string">"text/css"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".gif"</literal></expr>, <expr><literal type="string">"image/gif"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".jpe"</literal></expr>, <expr><literal type="string">"image/jpeg"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".jpg"</literal></expr>, <expr><literal type="string">"image/jpeg"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".jpeg"</literal></expr>, <expr><literal type="string">"image/jpeg"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".png"</literal></expr>, <expr><literal type="string">"image/png"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".pct"</literal></expr>, <expr><literal type="string">"image/x-pict"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".mpjpeg"</literal></expr>,<expr><literal type="string">"multipart/x-mixed-replace; boundary=7b3cc56e5f51db803f790dad720ed50a"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".avi"</literal></expr>, <expr><literal type="string">"video/avi"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".asf"</literal></expr>, <expr><literal type="string">"video/x-ms-asf"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".m1a"</literal></expr>, <expr><literal type="string">"audio/mpeg"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".m2a"</literal></expr>, <expr><literal type="string">"audio/mpeg"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".m1v"</literal></expr>, <expr><literal type="string">"video/mpeg"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".m2v"</literal></expr>, <expr><literal type="string">"video/mpeg"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".mp2"</literal></expr>, <expr><literal type="string">"audio/mpeg"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".mp3"</literal></expr>, <expr><literal type="string">"audio/mpeg"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".mpa"</literal></expr>, <expr><literal type="string">"audio/mpeg"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".mpg"</literal></expr>, <expr><literal type="string">"video/mpeg"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".mpeg"</literal></expr>, <expr><literal type="string">"video/mpeg"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".mpe"</literal></expr>, <expr><literal type="string">"video/mpeg"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".mov"</literal></expr>, <expr><literal type="string">"video/quicktime"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".moov"</literal></expr>, <expr><literal type="string">"video/quicktime"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".oga"</literal></expr>, <expr><literal type="string">"audio/ogg"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".ogg"</literal></expr>, <expr><literal type="string">"application/ogg"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".ogm"</literal></expr>, <expr><literal type="string">"application/ogg"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".ogv"</literal></expr>, <expr><literal type="string">"video/ogg"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".ogx"</literal></expr>, <expr><literal type="string">"application/ogg"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".opus"</literal></expr>, <expr><literal type="string">"audio/ogg; codecs=opus"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".spx"</literal></expr>, <expr><literal type="string">"audio/ogg"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".wav"</literal></expr>, <expr><literal type="string">"audio/wav"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".wma"</literal></expr>, <expr><literal type="string">"audio/x-ms-wma"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".wmv"</literal></expr>, <expr><literal type="string">"video/x-ms-wmv"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".webm"</literal></expr>, <expr><literal type="string">"video/webm"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".mp4"</literal></expr>, <expr><literal type="string">"video/mp4"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr> }</block></expr>

}</block></expr></init></decl>;</struct>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>vlc_mime_Ext2Mime</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_url</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_ext</name></decl>;</decl_stmt>

<expr_stmt><expr><name>psz_ext</name> <operator>=</operator> <call><name>strrchr</name><argument_list>( <argument><expr><name>psz_url</name></expr></argument>, <argument><expr><literal type="char">'.'</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>psz_ext</name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for<control>( <init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name><name>ext_mime</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name><name>psz_ext</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>strcasecmp</name><argument_list>( <argument><expr><name><name>ext_mime</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>psz_ext</name></expr></argument>, <argument><expr><name>psz_ext</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<return>return <expr><name><name>ext_mime</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>psz_mime</name></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

</block_content>}</block></if></if_stmt>

<return>return <expr><literal type="string">"application/octet-stream"</literal></expr>;</return>

</block_content>}</block></function>

</unit>
