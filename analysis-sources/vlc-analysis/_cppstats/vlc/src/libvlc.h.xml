<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\src\libvlc.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_input_item.h&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name></type> <name><name>psz_vlc_changeset</name><index>[]</index></name></decl>;</decl_stmt>

<typedef>typedef <type><name><name>struct</name> <name>variable_t</name></name></type> <name>variable_t</name>;</typedef>

<function_decl><type><name>void</name></type> <name>system_Init</name> <parameter_list>( <parameter><decl><type><name>void</name></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>system_Configure</name> <parameter_list>( <parameter><decl><type><name>libvlc_int_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier> []</type></decl></parameter> )</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>__OS2__</name></expr></argument>)</argument_list></call></expr></cpp:if>

<function_decl><type><name>void</name></type> <name>system_End</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>void</name></type> <name>vlc_CPU_dump</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>vlc_clone_detach</name> <parameter_list>(<parameter><decl><type><name>vlc_thread_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><function_decl><type><name>void</name> <modifier>*</modifier></type>(<modifier>*</modifier>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>vlc_set_priority</name><parameter_list>( <parameter><decl><type><name>vlc_thread_t</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>vlc_threads_setup</name> <parameter_list>(<parameter><decl><type><name>libvlc_int_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>vlc_trace</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fn</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>line</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vlc_backtrace</name><parameter_list>()</parameter_list></cpp:macro> <cpp:value>vlc_trace(__func__, __FILE__, __LINE__)</cpp:value></cpp:define>

<typedef>typedef <type><name><name>struct</name> <name>vlc_logger</name></name></type> <name>vlc_logger_t</name>;</typedef>

<decl_stmt><decl><type><name>int</name></type> <name>vlc_LogPreinit</name><argument_list>(<argument><expr><name>libvlc_int_t</name> <operator>*</operator></expr></argument>)</argument_list> <name>VLC_USED</name></decl>;</decl_stmt>

<function_decl><type><name>void</name></type> <name>vlc_LogInit</name><parameter_list>(<parameter><decl><type><name>libvlc_int_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><struct>struct <name>vlc_exit</name>

<block>{

<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>lock</name></decl>;</decl_stmt>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>handler</name>) <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl>;</decl_stmt>

}</block></struct></type> <name>vlc_exit_t</name>;</typedef>

<function_decl><type><name>void</name></type> <name>vlc_ExitInit</name><parameter_list>( <parameter><decl><type><name>vlc_exit_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>vlc_object_init</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>parent</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>type_name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>vlc_object_deinit</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name> <modifier>*</modifier></type>

<name>vlc_custom_create</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>i_size</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_type</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vlc_custom_create</name><parameter_list>(<parameter><type><name>o</name></type></parameter>, <parameter><type><name>s</name></type></parameter>, <parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>vlc_custom_create(VLC_OBJECT(o), s, n)</cpp:value></cpp:define>

<function_decl><type><name>void</name> <modifier>*</modifier></type><name>vlc_objres_new</name><parameter_list>(<parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>, <parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>release</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>vlc_objres_push</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>vlc_objres_clear</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>vlc_objres_remove</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>,

<parameter><function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>match</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ZOOM_SECTION</name></cpp:macro> <cpp:value>N_("Zoom")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ZOOM_QUARTER_KEY_TEXT</name></cpp:macro> <cpp:value>N_("1:4 Quarter")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ZOOM_HALF_KEY_TEXT</name></cpp:macro> <cpp:value>N_("1:2 Half")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ZOOM_ORIGINAL_KEY_TEXT</name></cpp:macro> <cpp:value>N_("1:1 Original")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ZOOM_DOUBLE_KEY_TEXT</name></cpp:macro> <cpp:value>N_("2:1 Double")</cpp:value></cpp:define>

<typedef>typedef <type><name><name>struct</name> <name>vlc_dialog_provider</name></name></type> <name>vlc_dialog_provider</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>vlc_keystore</name></name></type> <name>vlc_keystore</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>vlc_actions_t</name></name></type> <name>vlc_actions_t</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>vlc_playlist</name></name></type> <name>vlc_playlist_t</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>vlc_media_source_provider_t</name></name></type> <name>vlc_media_source_provider_t</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>intf_thread_t</name></name></type> <name>intf_thread_t</name>;</typedef>

<typedef>typedef <type><struct>struct <name>libvlc_priv_t</name>

<block>{

<decl_stmt><decl><type><name>libvlc_int_t</name></type> <name>public_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>lock</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>vlm_t</name> <modifier>*</modifier></type><name>p_vlm</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>vlc_dialog_provider</name> <modifier>*</modifier></type><name>p_dialog_provider</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>vlc_keystore</name> <modifier>*</modifier></type><name>p_memory_keystore</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>intf_thread_t</name> <modifier>*</modifier></type><name>interfaces</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>vlc_playlist_t</name> <modifier>*</modifier></type><name>main_playlist</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>input_preparser_t</name></name> <modifier>*</modifier></type><name>parser</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>vlc_media_source_provider_t</name> <modifier>*</modifier></type><name>media_source_provider</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_actions_t</name> <modifier>*</modifier></type><name>actions</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_medialibrary_t</name></name> <modifier>*</modifier></type><name>p_media_library</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_thumbnailer_t</name></name> <modifier>*</modifier></type><name>p_thumbnailer</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>vlc_exit_t</name></type> <name>exit</name></decl>;</decl_stmt>

}</block></struct></type> <name>libvlc_priv_t</name>;</typedef>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>libvlc_priv_t</name> <modifier>*</modifier></type><name>libvlc_priv</name> <parameter_list>(<parameter><decl><type><name>libvlc_int_t</name> <modifier>*</modifier></type><name>libvlc</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>container_of</name><argument_list>(<argument><expr><name>libvlc</name></expr></argument>, <argument><expr><name>libvlc_priv_t</name></expr></argument>, <argument><expr><name>public_data</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function_decl><type><name>int</name></type> <name>intf_InsertItem</name><parameter_list>(<parameter><decl><type><name>libvlc_int_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>mrl</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>optc</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier> <specifier>const</specifier> <modifier>*</modifier></type><name>optv</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>intf_DestroyAll</name><parameter_list>( <parameter><decl><type><name>libvlc_int_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>vlc_MetadataRequest</name><parameter_list>(<parameter><decl><type><name>libvlc_int_t</name> <modifier>*</modifier></type><name>libvlc</name></decl></parameter>, <parameter><decl><type><name>input_item_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>,

<parameter><decl><type><name>input_item_meta_request_option_t</name></type> <name>i_options</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>input_preparser_callbacks_t</name> <modifier>*</modifier></type><name>cbs</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbs_userdata</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>timeout</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>var_OptionParse</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>trusted</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
