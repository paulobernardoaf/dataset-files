<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\src\video_output\opengl.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;config.h&gt;</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_atomic.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_opengl.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_vout_display.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libvlc.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_modules.h&gt;</cpp:file></cpp:include>

<struct>struct <name>vlc_gl_priv_t</name>

<block>{

<decl_stmt><decl><type><name>vlc_gl_t</name></type> <name>gl</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_atomic_rc_t</name></type> <name>rc</name></decl>;</decl_stmt>

}</block>;</struct>

<function><type><specifier>static</specifier> <name>int</name></type> <name>vlc_gl_start</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>func</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>forced</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>ap</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>activate</name>)<parameter_list>(<parameter><decl><type><name>vlc_gl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type></decl></parameter>)</parameter_list> <init>= <expr><name>func</name></expr></init>;</function_decl>

<decl_stmt><decl><type><name>vlc_gl_t</name> <modifier>*</modifier></type><name>gl</name> <init>= <expr><call><name>va_arg</name><argument_list>(<argument><expr><name>ap</name></expr></argument>, <argument><expr><name>vlc_gl_t</name> <operator>*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>width</name> <init>= <expr><call><name>va_arg</name><argument_list>(<argument><expr><name>ap</name></expr></argument>, <argument><expr><name>unsigned</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>height</name> <init>= <expr><call><name>va_arg</name><argument_list>(<argument><expr><name>ap</name></expr></argument>, <argument><expr><name>unsigned</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><call><name>activate</name><argument_list>(<argument><expr><name>gl</name></expr></argument>, <argument><expr><name>width</name></expr></argument>, <argument><expr><name>height</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>ret</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>vlc_objres_clear</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>gl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>forced</name></expr>;</expr_stmt>

<return>return <expr><name>ret</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>vlc_gl_t</name> <modifier>*</modifier></type><name>vlc_gl_Create</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vout_display_cfg</name></name> <modifier>*</modifier><specifier>restrict</specifier></type> <name>cfg</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name></type> <name>flags</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_window_t</name> <modifier>*</modifier></type><name>wnd</name> <init>= <expr><name><name>cfg</name><operator>-&gt;</operator><name>window</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_gl_priv_t</name></name> <modifier>*</modifier></type><name>glpriv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>type</name></decl>;</decl_stmt>

<switch>switch <condition>(<expr><name>flags</name></expr> )</condition>

<block>{<block_content>

<case>case <expr><name>VLC_OPENGL</name></expr>:</case>

<expr_stmt><expr><name>type</name> <operator>=</operator> <literal type="string">"opengl"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>VLC_OPENGL_ES2</name></expr>:</case>

<expr_stmt><expr><name>type</name> <operator>=</operator> <literal type="string">"opengl es2"</literal></expr>;</expr_stmt>

<break>break;</break>

<default>default:</default>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></switch>

<expr_stmt><expr><name>glpriv</name> <operator>=</operator> <call><name>vlc_custom_create</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>wnd</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><sizeof>sizeof <argument_list>(<argument><expr><operator>*</operator><name>glpriv</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"gl"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>glpriv</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>vlc_gl_t</name> <modifier>*</modifier></type><name>gl</name> <init>= <expr><operator>&amp;</operator><name><name>glpriv</name><operator>-&gt;</operator><name>gl</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>gl</name><operator>-&gt;</operator><name>surface</name></name> <operator>=</operator> <name>wnd</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gl</name><operator>-&gt;</operator><name>module</name></name> <operator>=</operator> <call><name>vlc_module_load</name><argument_list>(<argument><expr><name>gl</name></expr></argument>, <argument><expr><name>type</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>vlc_gl_start</name></expr></argument>, <argument><expr><name>gl</name></expr></argument>,

<argument><expr><name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>width</name></name></expr></argument>, <argument><expr><name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>gl</name><operator>-&gt;</operator><name>module</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_object_delete</name><argument_list>(<argument><expr><name>gl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>gl</name><operator>-&gt;</operator><name>makeCurrent</name></name> <operator>&amp;&amp;</operator> <name><name>gl</name><operator>-&gt;</operator><name>releaseCurrent</name></name> <operator>&amp;&amp;</operator> <name><name>gl</name><operator>-&gt;</operator><name>swap</name></name>

<operator>&amp;&amp;</operator> <name><name>gl</name><operator>-&gt;</operator><name>getProcAddress</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_atomic_rc_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>glpriv</name><operator>-&gt;</operator><name>rc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><operator>&amp;</operator><name><name>glpriv</name><operator>-&gt;</operator><name>gl</name></name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlc_gl_Hold</name><parameter_list>(<parameter><decl><type><name>vlc_gl_t</name> <modifier>*</modifier></type><name>gl</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_gl_priv_t</name></name> <modifier>*</modifier></type><name>glpriv</name> <init>= <expr><operator>(</operator>struct <name>vlc_gl_priv_t</name> <operator>*</operator><operator>)</operator><name>gl</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_atomic_rc_inc</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>glpriv</name><operator>-&gt;</operator><name>rc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlc_gl_Release</name><parameter_list>(<parameter><decl><type><name>vlc_gl_t</name> <modifier>*</modifier></type><name>gl</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_gl_priv_t</name></name> <modifier>*</modifier></type><name>glpriv</name> <init>= <expr><operator>(</operator>struct <name>vlc_gl_priv_t</name> <operator>*</operator><operator>)</operator><name>gl</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>vlc_atomic_rc_dec</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>glpriv</name><operator>-&gt;</operator><name>rc</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>gl</name><operator>-&gt;</operator><name>destroy</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name><name>gl</name><operator>-&gt;</operator><name>destroy</name></name><argument_list>(<argument><expr><name>gl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_objres_clear</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>gl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_object_delete</name><argument_list>(<argument><expr><name>gl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_vout_window.h&gt;</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <name>vlc_gl_surface</name>

<block>{

<decl_stmt><decl><type><name>int</name></type> <name>width</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>lock</name></decl>;</decl_stmt>

}</block></struct></type> <name>vlc_gl_surface_t</name>;</typedef>

<function><type><specifier>static</specifier> <name>void</name></type> <name>vlc_gl_surface_ResizeNotify</name><parameter_list>(<parameter><decl><type><name>vout_window_t</name> <modifier>*</modifier></type><name>surface</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vlc_gl_surface_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>surface</name><operator>-&gt;</operator><name>owner</name><operator>.</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>surface</name></expr></argument>, <argument><expr><literal type="string">"resized to %ux%u"</literal></expr></argument>, <argument><expr><name>width</name></expr></argument>, <argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>width</name></name> <operator>=</operator> <name>width</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>height</name></name> <operator>=</operator> <name>height</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>vlc_gl_t</name> <modifier>*</modifier></type><name>vlc_gl_surface_Create</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>vout_window_cfg_t</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>vout_window_t</name></name> <modifier>*</modifier><modifier>*</modifier><specifier>restrict</specifier></type> <name>wp</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vlc_gl_surface_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><call><name>malloc</name><argument_list>(<argument><expr><sizeof>sizeof <argument_list>(<argument><expr><operator>*</operator><name>sys</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>sys</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>width</name></name> <operator>=</operator> <name><name>cfg</name><operator>-&gt;</operator><name>width</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>height</name></name> <operator>=</operator> <name><name>cfg</name><operator>-&gt;</operator><name>height</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name><name>struct</name> <name>vout_window_callbacks</name></name></type> <name>cbs</name> <init>= <expr><block>{

<expr><operator>.</operator><name>resized</name> <operator>=</operator> <name>vlc_gl_surface_ResizeNotify</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vout_window_owner_t</name></type> <name>owner</name> <init>= <expr><block>{

<expr><operator>.</operator><name>cbs</name> <operator>=</operator> <operator>&amp;</operator><name>cbs</name></expr>,

<expr><operator>.</operator><name>sys</name> <operator>=</operator> <name>sys</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>modlist</name> <init>= <expr><call><name>var_InheritString</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"window"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vout_window_t</name> <modifier>*</modifier></type><name>surface</name> <init>= <expr><call><name>vout_window_New</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name>modlist</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>owner</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>modlist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>surface</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>vout_window_Enable</name><argument_list>(<argument><expr><name>surface</name></expr></argument>, <argument><expr><name>cfg</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>vout_window_Delete</name><argument_list>(<argument><expr><name>surface</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>error</name>;</goto>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>wp</name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><operator>*</operator><name>wp</name> <operator>=</operator> <name>surface</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vout_display_cfg</name></name></type> <name>dcfg</name> <init>= <expr><block>{

<expr><operator>.</operator><name>window</name> <operator>=</operator> <name>surface</name></expr>,

<expr><operator>.</operator><name>display</name> <operator>=</operator> <block>{ <expr><operator>.</operator><name>width</name> <operator>=</operator> <name><name>cfg</name><operator>-&gt;</operator><name>width</name></name></expr>, <expr><name><name>cfg</name><operator>-&gt;</operator><name>height</name></name></expr> }</block></expr>,

}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>width</name></name> <operator>&gt;=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>sys</name><operator>-&gt;</operator><name>height</name></name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>dcfg</name><operator>.</operator><name>display</name><operator>.</operator><name>width</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>width</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dcfg</name><operator>.</operator><name>display</name><operator>.</operator><name>height</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>height</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>width</name></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>height</name></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>vlc_gl_t</name> <modifier>*</modifier></type><name>gl</name> <init>= <expr><call><name>vlc_gl_Create</name><argument_list>(<argument><expr><operator>&amp;</operator><name>dcfg</name></expr></argument>, <argument><expr><name>VLC_OPENGL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>gl</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>vout_window_Delete</name><argument_list>(<argument><expr><name>surface</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>error</name>;</goto>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>gl</name></expr>;</return>

<label><name>error</name>:</label>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>vlc_gl_surface_CheckSize</name><parameter_list>(<parameter><decl><type><name>vlc_gl_t</name> <modifier>*</modifier></type><name>gl</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier><specifier>restrict</specifier></type> <name>width</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <modifier>*</modifier><specifier>restrict</specifier></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_window_t</name> <modifier>*</modifier></type><name>surface</name> <init>= <expr><name><name>gl</name><operator>-&gt;</operator><name>surface</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_gl_surface_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>surface</name><operator>-&gt;</operator><name>owner</name><operator>.</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>ret</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>width</name></name> <operator>&gt;=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>sys</name><operator>-&gt;</operator><name>height</name></name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>width</name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>width</name></name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>height</name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>height</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>width</name></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>height</name></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_gl_Resize</name><argument_list>(<argument><expr><name>gl</name></expr></argument>, <argument><expr><operator>*</operator><name>width</name></expr></argument>, <argument><expr><operator>*</operator><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>ret</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlc_gl_surface_Destroy</name><parameter_list>(<parameter><decl><type><name>vlc_gl_t</name> <modifier>*</modifier></type><name>gl</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_window_t</name> <modifier>*</modifier></type><name>surface</name> <init>= <expr><name><name>gl</name><operator>-&gt;</operator><name>surface</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_gl_surface_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>surface</name><operator>-&gt;</operator><name>owner</name><operator>.</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_gl_Release</name><argument_list>(<argument><expr><name>gl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vout_window_Disable</name><argument_list>(<argument><expr><name>surface</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vout_window_Delete</name><argument_list>(<argument><expr><name>surface</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
