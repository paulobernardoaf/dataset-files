<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\src\player\player.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_player.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_list.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_vector.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_atomic.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_media_library.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"input/input_internal.h"</cpp:file></cpp:include>

<struct>struct <name>vlc_player_track_priv</name>

<block>{

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_player_track</name></name></type> <name>t</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type><name>vout</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>delay</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>vlc_vout_order</name></name></type> <name>vout_order</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>selected_by_user</name></decl>;</decl_stmt>

}</block>;</struct>

<typedef>typedef <type><name><name>struct</name> <name>VLC_VECTOR</name></name></type><argument_list>(<argument><expr>struct <name>vlc_player_program</name> <operator>*</operator></expr></argument>)</argument_list>

<name>vlc_player_program_vector</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>VLC_VECTOR</name></name></type><argument_list>(<argument><expr>struct <name>vlc_player_track_priv</name> <operator>*</operator></expr></argument>)</argument_list>

<name>vlc_player_track_vector</name>;</typedef>

<struct>struct <name>vlc_player_title_list</name>

<block>{

<decl_stmt><decl><type><name>vlc_atomic_rc_t</name></type> <name>rc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_player_title</name></name></type> <name><name>array</name><index>[]</index></name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>vlc_player_input</name>

<block>{

<decl_stmt><decl><type><name>input_thread_t</name> <modifier>*</modifier></type><name>thread</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>started</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>vlc_player_state</name></name></type> <name>state</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>vlc_player_error</name></name></type> <name>error</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>rate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>capabilities</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>position</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>time</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>normal_time</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>pause_date</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>recording</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>signal_quality</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>signal_strength</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>cache</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>input_stats_t</name></name></type> <name>stats</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name><name>cat_delays</name><index>[<expr><name>DATA_ES</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_player_program_vector</name></type> <name>program_vector</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_player_track_vector</name></type> <name>video_track_vector</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_player_track_vector</name></type> <name>audio_track_vector</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_player_track_vector</name></type> <name>spu_track_vector</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_player_track_priv</name></name> <modifier>*</modifier></type><name>teletext_menu</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_player_title_list</name></name> <modifier>*</modifier></type><name>titles</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>title_selected</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>chapter_selected</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_list</name></name></type> <name>node</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>teletext_enabled</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>teletext_transparent</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>teletext_page</name></decl>;</decl_stmt>

<struct>struct

<block>{

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>time</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>pos</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>set</name></decl>;</decl_stmt>

}</block> <decl><name><name>abloop_state</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</struct>

<struct>struct

<block>{

<decl_stmt><decl><type><name>vlc_ml_playback_states_all</name></type> <name>states</name></decl>;</decl_stmt>

<enum>enum

<block>{

<decl><name>VLC_RESTOREPOINT_TITLE</name></decl>,

<decl><name>VLC_RESTOREPOINT_POSITION</name></decl>,

<decl><name>VLC_RESTOREPOINT_NONE</name></decl>,

}</block> <decl><name>restore</name></decl>;</enum>

<decl_stmt><decl><type><name>bool</name></type> <name>restore_states</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>delay_restore</name></decl>;</decl_stmt>

}</block> <decl><name>ml</name></decl>;</struct>

}</block>;</struct>

<struct>struct <name>vlc_player_listener_id</name>

<block>{

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_cbs</name></name> <modifier>*</modifier></type><name>cbs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>cbs_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_list</name></name></type> <name>node</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>vlc_player_vout_listener_id</name>

<block>{

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_vout_cbs</name></name> <modifier>*</modifier></type><name>cbs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>cbs_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_list</name></name></type> <name>node</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>vlc_player_aout_listener_id</name>

<block>{

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_aout_cbs</name></name> <modifier>*</modifier></type><name>cbs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>cbs_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_list</name></name></type> <name>node</name></decl>;</decl_stmt>

}</block>;</struct>

<enum>enum <name>vlc_player_timer_source_type</name>

<block>{

<decl><name>VLC_PLAYER_TIMER_TYPE_BEST</name></decl>,

<decl><name>VLC_PLAYER_TIMER_TYPE_SMPTE</name></decl>,

<decl><name>VLC_PLAYER_TIMER_TYPE_COUNT</name></decl>

}</block>;</enum>

<struct>struct <name>vlc_player_timer_id</name>

<block>{

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>period</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>last_update_date</name></decl>;</decl_stmt>

<union>union

<block>{

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_timer_cbs</name></name> <modifier>*</modifier></type><name>cbs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_timer_smpte_cbs</name></name> <modifier>*</modifier></type><name>smpte_cbs</name></decl>;</decl_stmt>

}</block>;</union>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_list</name></name></type> <name>node</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>vlc_player_timer_source</name>

<block>{

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_list</name></name></type> <name>listeners</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>es</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_player_timer_point</name></name></type> <name>point</name></decl>;</decl_stmt>

<union>union

<block>{

<struct>struct <block>{

<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name>last_framenum</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>frame_rate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>frame_rate_base</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>frame_resolution</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>df_fps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>df</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>frames_per_10mins</name></decl>;</decl_stmt>

}</block> <decl><name>smpte</name></decl>;</struct>

}</block>;</union>

}</block>;</struct>

<enum>enum <name>vlc_player_timer_state</name>

<block>{

<decl><name>VLC_PLAYER_TIMER_STATE_PLAYING</name></decl>,

<decl><name>VLC_PLAYER_TIMER_STATE_PAUSED</name></decl>,

<decl><name>VLC_PLAYER_TIMER_STATE_DISCONTINUITY</name></decl>,

}</block>;</enum>

<struct>struct <name>vlc_player_timer</name>

<block>{

<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>lock</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>vlc_player_timer_state</name></name></type> <name>state</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>seeking</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>input_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>input_normal_time</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>last_ts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>input_position</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_player_timer_source</name></name></type> <name><name>sources</name><index>[<expr><name>VLC_PLAYER_TIMER_TYPE_COUNT</name></expr>]</index></name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>best_source</name></cpp:macro> <cpp:value>sources[VLC_PLAYER_TIMER_TYPE_BEST]</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>smpte_source</name></cpp:macro> <cpp:value>sources[VLC_PLAYER_TIMER_TYPE_SMPTE]</cpp:value></cpp:define>

}</block>;</struct>

<struct>struct <name>vlc_player_t</name>

<block>{

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_object_t</name></name></type> <name>obj</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>lock</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>aout_listeners_lock</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>vout_listeners_lock</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_cond_t</name></type> <name>start_delay_cond</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>vlc_player_media_stopped_action</name></name></type> <name>media_stopped_action</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>start_paused</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_media_provider</name></name> <modifier>*</modifier></type><name>media_provider</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>media_provider_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>pause_on_cork</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>corked</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_list</name></name></type> <name>listeners</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_list</name></name></type> <name>aout_listeners</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_list</name></name></type> <name>vout_listeners</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>input_resource_t</name> <modifier>*</modifier></type><name>resource</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_renderer_item_t</name> <modifier>*</modifier></type><name>renderer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>input_item_t</name> <modifier>*</modifier></type><name>media</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_player_input</name></name> <modifier>*</modifier></type><name>input</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>releasing_media</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>next_media_requested</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>input_item_t</name> <modifier>*</modifier></type><name>next_media</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>video_string_ids</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>audio_string_ids</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>sub_string_ids</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>vlc_player_state</name></name></type> <name>global_state</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>started</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>error_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>deleting</name></decl>;</decl_stmt>

<struct>struct

<block>{

<decl_stmt><decl><type><name>vlc_thread_t</name></type> <name>thread</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_cond_t</name></type> <name>wait</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_cond_t</name></type> <name>notify</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_list</name></name></type> <name>inputs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_list</name></name></type> <name>stopping_inputs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_list</name></name></type> <name>joinable_inputs</name></decl>;</decl_stmt>

}</block> <decl><name>destructor</name></decl>;</struct>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_player_timer</name></name></type> <name>timer</name></decl>;</decl_stmt>

}</block>;</struct>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>NDEBUG</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>

<name>vlc_player_assert_locked</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>player</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_assert</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>player</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vlc_player_assert_locked</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((void) (0))</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name><name>struct</name> <name>vlc_player_input</name></name> <modifier>*</modifier></type>

<name>vlc_player_get_input_locked</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_player_assert_locked</name><argument_list>(<argument><expr><name>player</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name><name>player</name><operator>-&gt;</operator><name>input</name></name></expr>;</return>

</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vlc_player_SendEvent</name><parameter_list>(<parameter><type><name>player</name></type></parameter>, <parameter><type><name>event</name></type></parameter>, <parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { vlc_player_listener_id *listener; vlc_list_foreach(listener, &amp;player-&gt;listeners, node) { if (listener-&gt;cbs-&gt;event) listener-&gt;cbs-&gt;event(player, ##__VA_ARGS__, listener-&gt;cbs_data); } } while(0)</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>

<name>es_format_category_to_string</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>es_format_category_e</name></name></type> <name>cat</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<switch>switch <condition>(<expr><name>cat</name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>VIDEO_ES</name></expr>:</case> <return>return <expr><literal type="string">"Video"</literal></expr>;</return>

<case>case <expr><name>AUDIO_ES</name></expr>:</case> <return>return <expr><literal type="string">"Audio"</literal></expr>;</return>

<case>case <expr><name>SPU_ES</name></expr>:</case> <return>return <expr><literal type="string">"Subtitle"</literal></expr>;</return>

<default>default:</default> <return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></switch>

</block_content>}</block></function>

<function_decl><type><name>vlc_object_t</name> <modifier>*</modifier></type>

<name>vlc_player_GetObject</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type>

<name>vlc_player_OpenNextMedia</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

<name>vlc_player_PrepareNextMedia</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

<name>vlc_player_destructor_AddStoppingInput</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>vlc_player_input</name></name> <modifier>*</modifier></type><name>input</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

<name>vlc_player_destructor_AddJoinableInput</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>vlc_player_input</name></name> <modifier>*</modifier></type><name>input</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>vlc_player_program</name></name> <modifier>*</modifier></type>

<name>vlc_player_program_New</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type>

<name>vlc_player_program_Update</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_player_program</name></name> <modifier>*</modifier></type><name>prgm</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>id</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>vlc_player_program</name></name> <modifier>*</modifier></type>

<name>vlc_player_program_vector_FindById</name><parameter_list>(<parameter><decl><type><name>vlc_player_program_vector</name> <modifier>*</modifier></type><name>vec</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>id</name></decl></parameter>,

<parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>idx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>vlc_player_track_priv</name></name> <modifier>*</modifier></type>

<name>vlc_player_track_priv_New</name><parameter_list>(<parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>id</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

<name>vlc_player_track_priv_Delete</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_player_track_priv</name></name> <modifier>*</modifier></type><name>trackpriv</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type>

<name>vlc_player_track_priv_Update</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_player_track_priv</name></name> <modifier>*</modifier></type><name>trackpriv</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>vlc_player_track_priv</name></name> <modifier>*</modifier></type>

<name>vlc_player_track_vector_FindById</name><parameter_list>(<parameter><decl><type><name>vlc_player_track_vector</name> <modifier>*</modifier></type><name>vec</name></decl></parameter>, <parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>id</name></decl></parameter>,

<parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>idx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type>

<name>vlc_player_GetFirstSelectedTrackId</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>vlc_player_track_vector</name><modifier>*</modifier></type> <name>tracks</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>vlc_player_title_list</name></name> <modifier>*</modifier></type>

<name>vlc_player_title_list_Create</name><parameter_list>(<parameter><decl><type><name>input_title_t</name> <modifier>*</modifier><specifier>const</specifier> <modifier>*</modifier></type><name>array</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>count</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>title_offset</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>chapter_offset</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>vlc_player_track_vector</name> <modifier>*</modifier></type>

<name>vlc_player_input_GetTrackVector</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_player_input</name></name> <modifier>*</modifier></type><name>input</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>es_format_category_e</name></name></type> <name>cat</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<switch>switch <condition>(<expr><name>cat</name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>VIDEO_ES</name></expr>:</case>

<return>return <expr><operator>&amp;</operator><name><name>input</name><operator>-&gt;</operator><name>video_track_vector</name></name></expr>;</return>

<case>case <expr><name>AUDIO_ES</name></expr>:</case>

<return>return <expr><operator>&amp;</operator><name><name>input</name><operator>-&gt;</operator><name>audio_track_vector</name></name></expr>;</return>

<case>case <expr><name>SPU_ES</name></expr>:</case>

<return>return <expr><operator>&amp;</operator><name><name>input</name><operator>-&gt;</operator><name>spu_track_vector</name></name></expr>;</return>

<default>default:</default>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></switch>

</block_content>}</block></function>

<function_decl><type><name><name>struct</name> <name>vlc_player_track_priv</name></name> <modifier>*</modifier></type>

<name>vlc_player_input_FindTrackById</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_player_input</name></name> <modifier>*</modifier></type><name>input</name></decl></parameter>, <parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>id</name></decl></parameter>,

<parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>idx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>vlc_player_input</name></name> <modifier>*</modifier></type>

<name>vlc_player_input_New</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>input_item_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

<name>vlc_player_input_Delete</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_player_input</name></name> <modifier>*</modifier></type><name>input</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

<name>vlc_player_input_SelectTracksByStringIds</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_player_input</name></name> <modifier>*</modifier></type><name>input</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>es_format_category_e</name></name></type> <name>cat</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str_ids</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>char</name> <modifier>*</modifier></type>

<name>vlc_player_input_GetSelectedTrackStringIds</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_player_input</name></name> <modifier>*</modifier></type><name>input</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>es_format_category_e</name></name></type> <name>cat</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>vlc_tick_t</name></type>

<name>vlc_player_input_GetTime</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_player_input</name></name> <modifier>*</modifier></type><name>input</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>float</name></type>

<name>vlc_player_input_GetPos</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_player_input</name></name> <modifier>*</modifier></type><name>input</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type>

<name>vlc_player_input_Start</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_player_input</name></name> <modifier>*</modifier></type><name>input</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

<name>vlc_player_input_HandleState</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_player_input</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>vlc_player_state</name></name></type></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>state_date</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>vlc_player_timer_point</name></name></type>

<name>vlc_player_input_GetTimerValue</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_player_input</name></name> <modifier>*</modifier></type><name>input</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

<name>vlc_player_InitTimer</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

<name>vlc_player_DestroyTimer</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

<name>vlc_player_ResetTimer</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

<name>vlc_player_UpdateTimerState</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>es_source</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>vlc_player_timer_state</name></name></type> <name>state</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>system_date</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

<name>vlc_player_UpdateTimer</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>es_source</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>es_source_is_master</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_timer_point</name></name> <modifier>*</modifier></type><name>point</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>normal_time</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name></type> <name>frame_rate</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>frame_rate_base</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

<name>vlc_player_RemoveTimerSource</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>es_source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type>

<name>vlc_player_GetTimerPoint</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>system_now</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name> <modifier>*</modifier></type><name>out_ts</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>out_pos</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

<name>vlc_player_vout_AddCallbacks</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type><name>vout</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

<name>vlc_player_vout_DelCallbacks</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type><name>vout</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

<name>vlc_player_aout_AddCallbacks</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

<name>vlc_player_aout_DelCallbacks</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

<name>vlc_player_osd_Message</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

<name>vlc_player_osd_Icon</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

<name>vlc_player_osd_Position</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>vlc_player_input</name></name> <modifier>*</modifier></type><name>input</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>time</name></decl></parameter>,

<parameter><decl><type><name>float</name></type> <name>position</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>vlc_player_whence</name></name></type> <name>whence</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

<name>vlc_player_osd_Volume</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>mute_action</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type>

<name>vlc_player_vout_OSDCallback</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>this</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>var</name></decl></parameter>,

<parameter><decl><type><name>vlc_value_t</name></type> <name>oldval</name></decl></parameter>, <parameter><decl><type><name>vlc_value_t</name></type> <name>newval</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

<name>vlc_player_osd_Track</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>id</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>select</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

<name>vlc_player_osd_Program</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

<name>vlc_player_input_RestoreMlStates</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_player_input</name></name><modifier>*</modifier></type> <name>input</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>force_pos</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

<name>vlc_player_UpdateMLStates</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>vlc_player_input</name></name><modifier>*</modifier></type> <name>input</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
