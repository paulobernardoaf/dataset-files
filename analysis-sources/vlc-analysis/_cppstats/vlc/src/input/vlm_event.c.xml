<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\src\input\vlm_event.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_vlm.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vlm_internal.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vlm_event.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Trigger</name><parameter_list>( <parameter><decl><type><name>vlm_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_type</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_name</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>TriggerInstanceState</name><parameter_list>( <parameter><decl><type><name>vlm_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_type</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_instance_name</name></decl></parameter>, <parameter><decl><type><name>vlm_state_e</name></type> <name>input_state</name></decl></parameter> )</parameter_list>;</function_decl>

<function><type><name>void</name></type> <name>vlm_SendEventMediaAdded</name><parameter_list>( <parameter><decl><type><name>vlm_t</name> <modifier>*</modifier></type><name>p_vlm</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_name</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>Trigger</name><argument_list>( <argument><expr><name>p_vlm</name></expr></argument>, <argument><expr><name>VLM_EVENT_MEDIA_ADDED</name></expr></argument>, <argument><expr><name>id</name></expr></argument>, <argument><expr><name>psz_name</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlm_SendEventMediaRemoved</name><parameter_list>( <parameter><decl><type><name>vlm_t</name> <modifier>*</modifier></type><name>p_vlm</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_name</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>Trigger</name><argument_list>( <argument><expr><name>p_vlm</name></expr></argument>, <argument><expr><name>VLM_EVENT_MEDIA_REMOVED</name></expr></argument>, <argument><expr><name>id</name></expr></argument>, <argument><expr><name>psz_name</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlm_SendEventMediaChanged</name><parameter_list>( <parameter><decl><type><name>vlm_t</name> <modifier>*</modifier></type><name>p_vlm</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_name</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>Trigger</name><argument_list>( <argument><expr><name>p_vlm</name></expr></argument>, <argument><expr><name>VLM_EVENT_MEDIA_CHANGED</name></expr></argument>, <argument><expr><name>id</name></expr></argument>, <argument><expr><name>psz_name</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlm_SendEventMediaInstanceStarted</name><parameter_list>( <parameter><decl><type><name>vlm_t</name> <modifier>*</modifier></type><name>p_vlm</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_name</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>Trigger</name><argument_list>( <argument><expr><name>p_vlm</name></expr></argument>, <argument><expr><name>VLM_EVENT_MEDIA_INSTANCE_STARTED</name></expr></argument>, <argument><expr><name>id</name></expr></argument>, <argument><expr><name>psz_name</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlm_SendEventMediaInstanceStopped</name><parameter_list>( <parameter><decl><type><name>vlm_t</name> <modifier>*</modifier></type><name>p_vlm</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_name</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>Trigger</name><argument_list>( <argument><expr><name>p_vlm</name></expr></argument>, <argument><expr><name>VLM_EVENT_MEDIA_INSTANCE_STOPPED</name></expr></argument>, <argument><expr><name>id</name></expr></argument>, <argument><expr><name>psz_name</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlm_SendEventMediaInstanceState</name><parameter_list>( <parameter><decl><type><name>vlm_t</name> <modifier>*</modifier></type><name>p_vlm</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_instance_name</name></decl></parameter>, <parameter><decl><type><name>vlm_state_e</name></type> <name>state</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>TriggerInstanceState</name><argument_list>( <argument><expr><name>p_vlm</name></expr></argument>, <argument><expr><name>VLM_EVENT_MEDIA_INSTANCE_STATE</name></expr></argument>, <argument><expr><name>id</name></expr></argument>, <argument><expr><name>psz_name</name></expr></argument>, <argument><expr><name>psz_instance_name</name></expr></argument>, <argument><expr><name>state</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Trigger</name><parameter_list>( <parameter><decl><type><name>vlm_t</name> <modifier>*</modifier></type><name>p_vlm</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_type</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_name</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vlm_event_t</name></type> <name>event</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>i_type</name></name> <operator>=</operator> <name>i_type</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>id</name></name> <operator>=</operator> <name>id</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>psz_name</name></name> <operator>=</operator> <name>psz_name</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>input_state</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>psz_instance_name</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_SetAddress</name><argument_list>( <argument><expr><name>p_vlm</name></expr></argument>, <argument><expr><literal type="string">"intf-event"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>event</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>TriggerInstanceState</name><parameter_list>( <parameter><decl><type><name>vlm_t</name> <modifier>*</modifier></type><name>p_vlm</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_type</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_instance_name</name></decl></parameter>, <parameter><decl><type><name>vlm_state_e</name></type> <name>input_state</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vlm_event_t</name></type> <name>event</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>i_type</name></name> <operator>=</operator> <name>i_type</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>id</name></name> <operator>=</operator> <name>id</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>psz_name</name></name> <operator>=</operator> <name>psz_name</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>input_state</name></name> <operator>=</operator> <name>input_state</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>psz_instance_name</name></name> <operator>=</operator> <name>psz_instance_name</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_SetAddress</name><argument_list>( <argument><expr><name>p_vlm</name></expr></argument>, <argument><expr><literal type="string">"intf-event"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>event</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
