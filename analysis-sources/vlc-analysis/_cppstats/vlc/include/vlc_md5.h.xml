<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\include\vlc_md5.h"><struct>struct <name>md5_s</name>

<block>{

<decl_stmt><decl><type><name>uint32_t</name></type> <name>A</name></decl>, <decl><type ref="prev"/><name>B</name></decl>, <decl><type ref="prev"/><name>C</name></decl>, <decl><type ref="prev"/><name>D</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint32_t</name></type> <name>nblocks</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>buf</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>count</name></decl>;</decl_stmt>

}</block>;</struct>

<function_decl><type><name>VLC_API</name> <name>void</name></type> <name>InitMD5</name><parameter_list>( <parameter><decl><type><name><name>struct</name> <name>md5_s</name></name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type> <name>AddMD5</name><parameter_list>( <parameter><decl><type><name><name>struct</name> <name>md5_s</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type> <name>EndMD5</name><parameter_list>( <parameter><decl><type><name><name>struct</name> <name>md5_s</name></name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>char</name> <modifier>*</modifier></type> <name>psz_md5_hash</name><parameter_list>( <parameter><decl><type><name><name>struct</name> <name>md5_s</name></name> <modifier>*</modifier></type><name>md5_s</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz</name> <init>= <expr><operator>(</operator><name>char</name><operator>*</operator><operator>)</operator><call><name>malloc</name><argument_list>( <argument><expr><literal type="number">33</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt> 

<if_stmt><if>if<condition>( <expr><call><name>likely</name><argument_list>(<argument><expr><name>psz</name></expr></argument>)</argument_list></call></expr> )</condition>

<block>{<block_content>

<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>sprintf</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>psz</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="string">"%02"</literal> <name>PRIx8</name></expr></argument>, <argument><expr><name><name>md5_s</name><operator>-&gt;</operator><name>buf</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>psz</name></expr>;</return>

</block_content>}</block></function>

</unit>
