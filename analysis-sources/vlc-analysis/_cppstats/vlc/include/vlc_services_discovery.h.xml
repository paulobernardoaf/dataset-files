<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\include\vlc_services_discovery.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_input.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_probe.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<struct>struct <name>services_discovery_callbacks</name>

<block>{

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>item_added</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>services_discovery_t</name></name> <modifier>*</modifier></type><name>sd</name></decl></parameter>, <parameter><decl><type><name>input_item_t</name> <modifier>*</modifier></type><name>parent</name></decl></parameter>,

<parameter><decl><type><name>input_item_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>category</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>item_removed</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>services_discovery_t</name></name> <modifier>*</modifier></type><name>sd</name></decl></parameter>, <parameter><decl><type><name>input_item_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

}</block>;</struct>

<struct>struct <name>services_discovery_owner_t</name>

<block>{

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>services_discovery_callbacks</name></name> <modifier>*</modifier></type><name>cbs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>sys</name></decl>;</decl_stmt> 

}</block>;</struct>

<struct>struct <name>services_discovery_t</name>

<block>{

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_object_t</name></name></type> <name>obj</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>module_t</name> <modifier>*</modifier></type> <name>p_module</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_name</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>config_chain_t</name> <modifier>*</modifier></type><name>p_cfg</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>description</name></decl>;</decl_stmt> 

<function_decl><type><name>int</name></type> ( <modifier>*</modifier><name>pf_control</name> ) <parameter_list>( <parameter><decl><type><name>services_discovery_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>va_list</name></type></decl></parameter> )</parameter_list>;</function_decl>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>p_sys</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name><name>struct</name> <name>services_discovery_owner_t</name></name></type> <name>owner</name></decl>;</decl_stmt> 

}</block>;</struct>

<enum>enum <name>services_discovery_category_e</name>

<block>{

<decl><name>SD_CAT_DEVICES</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>, 

<decl><name>SD_CAT_LAN</name></decl>, 

<decl><name>SD_CAT_INTERNET</name></decl>, 

<decl><name>SD_CAT_MYCOMPUTER</name></decl> 

}</block>;</enum>

<enum>enum <name>services_discovery_command_e</name>

<block>{

<decl><name>SD_CMD_SEARCH</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>, 

<decl><name>SD_CMD_DESCRIPTOR</name></decl> 

}</block>;</enum>

<enum>enum <name>services_discovery_capability_e</name>

<block>{

<decl><name>SD_CAP_SEARCH</name> <init>= <expr><literal type="number">1</literal></expr></init></decl> 

}</block>;</enum>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_short_desc</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_icon_url</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_url</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>i_capabilities</name></decl>;</decl_stmt> 

}</block></struct></type> <name>services_discovery_descriptor_t</name>;</typedef>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>vlc_sd_control</name><parameter_list>( <parameter><decl><type><name>services_discovery_t</name> <modifier>*</modifier></type><name>p_sd</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_control</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>args</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name><name>p_sd</name><operator>-&gt;</operator><name>pf_control</name></name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><call><name><name>p_sd</name><operator>-&gt;</operator><name>pf_control</name></name><argument_list>( <argument><expr><name>p_sd</name></expr></argument>, <argument><expr><name>i_control</name></expr></argument>, <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr>;</return></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>

<decl_stmt><decl><type><name>VLC_API</name> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type> <name>vlc_sd_GetNames</name><argument_list>( <argument><expr><name>vlc_object_t</name> <operator>*</operator></expr></argument>, <argument><expr><name>char</name> <operator>*</operator><operator>*</operator><operator>*</operator></expr></argument>, <argument><expr><name>int</name> <operator>*</operator><operator>*</operator></expr></argument> )</argument_list> <name>VLC_USED</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vlc_sd_GetNames</name><parameter_list>(<parameter><type><name>obj</name></type></parameter>, <parameter><type><name>pln</name></type></parameter>, <parameter><type><name>pcat</name></type></parameter> )</parameter_list></cpp:macro> <cpp:value>vlc_sd_GetNames(VLC_OBJECT(obj), pln, pcat)</cpp:value></cpp:define>

<decl_stmt><decl><type><name>VLC_API</name> <name>services_discovery_t</name> <modifier>*</modifier></type><name>vlc_sd_Create</name><argument_list>(<argument><expr><name>vlc_object_t</name> <operator>*</operator><name>parent</name></expr></argument>,

<argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator><name>chain</name></expr></argument>, <argument><expr><specifier>const</specifier> struct <name>services_discovery_owner_t</name> <operator>*</operator><name>owner</name></expr></argument>)</argument_list>

<name>VLC_USED</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vlc_sd_Create</name><parameter_list>( <parameter><type><name>obj</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter> )</parameter_list></cpp:macro> <cpp:value>vlc_sd_Create( VLC_OBJECT( obj ), a, b )</cpp:value></cpp:define>

<function_decl><type><name>VLC_API</name> <name>void</name></type> <name>vlc_sd_Destroy</name><parameter_list>( <parameter><decl><type><name>services_discovery_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>services_discovery_AddItem</name><parameter_list>(<parameter><decl><type><name>services_discovery_t</name> <modifier>*</modifier></type><name>sd</name></decl></parameter>,

<parameter><decl><type><name>input_item_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name><name>sd</name><operator>-&gt;</operator><name>owner</name><operator>.</operator><name>cbs</name><operator>-&gt;</operator><name>item_added</name></name><argument_list>(<argument><expr><name>sd</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>item</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>services_discovery_AddSubItem</name><parameter_list>(<parameter><decl><type><name>services_discovery_t</name> <modifier>*</modifier></type><name>sd</name></decl></parameter>,

<parameter><decl><type><name>input_item_t</name> <modifier>*</modifier></type><name>parent</name></decl></parameter>,

<parameter><decl><type><name>input_item_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name><name>sd</name><operator>-&gt;</operator><name>owner</name><operator>.</operator><name>cbs</name><operator>-&gt;</operator><name>item_added</name></name><argument_list>(<argument><expr><name>sd</name></expr></argument>, <argument><expr><name>parent</name></expr></argument>, <argument><expr><name>item</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>VLC_DEPRECATED</name>

<specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>services_discovery_AddItemCat</name><parameter_list>(<parameter><decl><type><name>services_discovery_t</name> <modifier>*</modifier></type><name>sd</name></decl></parameter>,

<parameter><decl><type><name>input_item_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>category</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name><name>sd</name><operator>-&gt;</operator><name>owner</name><operator>.</operator><name>cbs</name><operator>-&gt;</operator><name>item_added</name></name><argument_list>(<argument><expr><name>sd</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>item</name></expr></argument>, <argument><expr><name>category</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>services_discovery_RemoveItem</name><parameter_list>(<parameter><decl><type><name>services_discovery_t</name> <modifier>*</modifier></type><name>sd</name></decl></parameter>,

<parameter><decl><type><name>input_item_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name><name>sd</name><operator>-&gt;</operator><name>owner</name><operator>.</operator><name>cbs</name><operator>-&gt;</operator><name>item_removed</name></name><argument_list>(<argument><expr><name>sd</name></expr></argument>, <argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function_decl><type><name>VLC_API</name> <name>int</name></type> <name>vlc_sd_probe_Add</name><parameter_list>(<parameter><decl><type><name>vlc_probe_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>category</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_SD_PROBE_SUBMODULE</name></cpp:macro> <cpp:value>add_submodule() set_capability( "services probe", 100 ) set_callback( vlc_sd_probe_Open )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_SD_PROBE_HELPER</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>longname</name></type></parameter>, <parameter><type><name>cat</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>static int vlc_sd_probe_Open (vlc_object_t *obj) { return vlc_sd_probe_Add ((struct vlc_probe_t *)obj, name, longname, cat); }</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
