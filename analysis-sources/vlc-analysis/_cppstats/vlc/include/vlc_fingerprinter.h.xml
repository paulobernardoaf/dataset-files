<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\include\vlc_fingerprinter.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_meta.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_input_item.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_arrays.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><name><name>struct</name> <name>fingerprinter_sys_t</name></name></type> <name>fingerprinter_sys_t</name>;</typedef>

<struct>struct <name>fingerprint_request_t</name>

<block>{

<decl_stmt><decl><type><name>input_item_t</name> <modifier>*</modifier></type><name>p_item</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_duration</name></decl>;</decl_stmt> 

<struct>struct

<block>{

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_fingerprint</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_array_t</name></type> <name>metas_array</name></decl>;</decl_stmt>

}</block> <decl><name>results</name></decl> ;</struct>

}</block>;</struct>

<typedef>typedef <type><name><name>struct</name> <name>fingerprint_request_t</name></name></type> <name>fingerprint_request_t</name>;</typedef>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>fingerprint_request_t</name> <modifier>*</modifier></type><name>fingerprint_request_New</name><parameter_list>( <parameter><decl><type><name>input_item_t</name> <modifier>*</modifier></type><name>p_item</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>fingerprint_request_t</name> <modifier>*</modifier></type><name>p_r</name> <init>=

<expr><operator>(</operator> <name>fingerprint_request_t</name> <operator>*</operator> <operator>)</operator> <call><name>calloc</name><argument_list>( <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><name>fingerprint_request_t</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name>p_r</name></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_r</name><operator>-&gt;</operator><name>results</name><operator>.</operator><name>psz_fingerprint</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_r</name><operator>-&gt;</operator><name>i_duration</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>input_item_Hold</name><argument_list>( <argument><expr><name>p_item</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_r</name><operator>-&gt;</operator><name>p_item</name></name> <operator>=</operator> <name>p_item</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_array_init</name><argument_list>( <argument><expr><operator>&amp;</operator> <name><name>p_r</name><operator>-&gt;</operator><name>results</name><operator>.</operator><name>metas_array</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt> 

<return>return <expr><name>p_r</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>fingerprint_request_Delete</name><parameter_list>( <parameter><decl><type><name>fingerprint_request_t</name> <modifier>*</modifier></type><name>p_f</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>input_item_Release</name><argument_list>( <argument><expr><name><name>p_f</name><operator>-&gt;</operator><name>p_item</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_f</name><operator>-&gt;</operator><name>results</name><operator>.</operator><name>psz_fingerprint</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<for>for<control>( <init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>vlc_array_count</name><argument_list>( <argument><expr><operator>&amp;</operator> <name><name>p_f</name><operator>-&gt;</operator><name>results</name><operator>.</operator><name>metas_array</name></name></expr></argument> )</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>vlc_meta_Delete</name><argument_list>( <argument><expr><operator>(</operator><name>vlc_meta_t</name> <operator>*</operator><operator>)</operator> <call><name>vlc_array_item_at_index</name><argument_list>( <argument><expr><operator>&amp;</operator> <name><name>p_f</name><operator>-&gt;</operator><name>results</name><operator>.</operator><name>metas_array</name></name></expr></argument>, <argument><expr><name>i</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_f</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<struct>struct <name>fingerprinter_thread_t</name>

<block>{

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_object_t</name></name></type> <name>obj</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>fingerprinter_sys_t</name> <modifier>*</modifier></type> <name>p_sys</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>module_t</name> <modifier>*</modifier></type> <name>p_module</name></decl>;</decl_stmt>

<function_decl><type><name>int</name></type> ( <modifier>*</modifier><name>pf_enqueue</name> ) <parameter_list>( <parameter><decl><type><name><name>struct</name> <name>fingerprinter_thread_t</name></name> <modifier>*</modifier></type><name>f</name></decl></parameter>, <parameter><decl><type><name>fingerprint_request_t</name> <modifier>*</modifier></type><name>r</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>fingerprint_request_t</name> <modifier>*</modifier></type> ( <modifier>*</modifier><name>pf_getresults</name> ) <parameter_list>( <parameter><decl><type><name><name>struct</name> <name>fingerprinter_thread_t</name></name> <modifier>*</modifier></type><name>f</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> ( <modifier>*</modifier><name>pf_apply</name> ) <parameter_list>( <parameter><decl><type><name>fingerprint_request_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>i_resultid</name></decl></parameter> )</parameter_list>;</function_decl>

}</block>;</struct>

<typedef>typedef <type><name><name>struct</name> <name>fingerprinter_thread_t</name></name></type> <name>fingerprinter_thread_t</name>;</typedef>

<function_decl><type><name>VLC_API</name> <name>fingerprinter_thread_t</name> <modifier>*</modifier></type><name>fingerprinter_Create</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type> <name>fingerprinter_Destroy</name><parameter_list>( <parameter><decl><type><name>fingerprinter_thread_t</name> <modifier>*</modifier></type><name>p_fingerprint</name></decl></parameter> )</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
