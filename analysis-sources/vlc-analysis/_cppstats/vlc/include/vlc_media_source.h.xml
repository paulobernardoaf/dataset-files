<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\include\vlc_media_source.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_input_item.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_services_discovery.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><struct>struct <name>vlc_media_tree</name> <block>{

<decl_stmt><decl><type><name>input_item_node_t</name></type> <name>root</name></decl>;</decl_stmt>

}</block></struct></type> <name>vlc_media_tree_t</name>;</typedef>

<struct>struct <name>vlc_media_tree_callbacks</name>

<block>{

<function_decl><type><name>void</name></type>

(<modifier>*</modifier><name>on_children_reset</name>)<parameter_list>(<parameter><decl><type><name>vlc_media_tree_t</name> <modifier>*</modifier></type><name>tree</name></decl></parameter>, <parameter><decl><type><name>input_item_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>userdata</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

(<modifier>*</modifier><name>on_children_added</name>)<parameter_list>(<parameter><decl><type><name>vlc_media_tree_t</name> <modifier>*</modifier></type><name>tree</name></decl></parameter>, <parameter><decl><type><name>input_item_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>,

<parameter><decl><type><name>input_item_node_t</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>children</name><index>[]</index></name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>count</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>userdata</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

(<modifier>*</modifier><name>on_children_removed</name>)<parameter_list>(<parameter><decl><type><name>vlc_media_tree_t</name> <modifier>*</modifier></type><name>tree</name></decl></parameter>, <parameter><decl><type><name>input_item_node_t</name> <modifier>*</modifier></type><name>node</name></decl></parameter>,

<parameter><decl><type><name>input_item_node_t</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>children</name><index>[]</index></name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>count</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>userdata</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>

(<modifier>*</modifier><name>on_preparse_end</name>)<parameter_list>(<parameter><decl><type><name>vlc_media_tree_t</name> <modifier>*</modifier></type><name>tree</name></decl></parameter>, <parameter><decl><type><name>input_item_node_t</name> <modifier>*</modifier></type> <name>node</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>input_item_preparse_status</name></name></type> <name>status</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>userdata</name></decl></parameter>)</parameter_list>;</function_decl>

}</block>;</struct>

<typedef>typedef <type><name><name>struct</name> <name>vlc_media_tree_listener_id</name></name></type> <name>vlc_media_tree_listener_id</name>;</typedef>

<function_decl><type><name>VLC_API</name> <name>vlc_media_tree_listener_id</name> <modifier>*</modifier></type>

<name>vlc_media_tree_AddListener</name><parameter_list>(<parameter><decl><type><name>vlc_media_tree_t</name> <modifier>*</modifier></type><name>tree</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_media_tree_callbacks</name></name> <modifier>*</modifier></type><name>cbs</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>userdata</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>notify_current_state</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_media_tree_RemoveListener</name><parameter_list>(<parameter><decl><type><name>vlc_media_tree_t</name> <modifier>*</modifier></type><name>tree</name></decl></parameter>,

<parameter><decl><type><name>vlc_media_tree_listener_id</name> <modifier>*</modifier></type><name>listener</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_media_tree_Lock</name><parameter_list>(<parameter><decl><type><name>vlc_media_tree_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_media_tree_Unlock</name><parameter_list>(<parameter><decl><type><name>vlc_media_tree_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>bool</name></type>

<name>vlc_media_tree_Find</name><parameter_list>(<parameter><decl><type><name>vlc_media_tree_t</name> <modifier>*</modifier></type><name>tree</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>input_item_t</name> <modifier>*</modifier></type><name>media</name></decl></parameter>,

<parameter><decl><type><name>input_item_node_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>result</name></decl></parameter>,

<parameter><decl><type><name>input_item_node_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>result_parent</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_media_tree_Preparse</name><parameter_list>(<parameter><decl><type><name>vlc_media_tree_t</name> <modifier>*</modifier></type><name>tree</name></decl></parameter>, <parameter><decl><type><name>libvlc_int_t</name> <modifier>*</modifier></type><name>libvlc</name></decl></parameter>,

<parameter><decl><type><name>input_item_t</name> <modifier>*</modifier></type><name>media</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_media_tree_PreparseCancel</name><parameter_list>(<parameter><decl><type><name>libvlc_int_t</name> <modifier>*</modifier></type><name>libvlc</name></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><struct>struct <name>vlc_media_source_t</name>

<block>{

<decl_stmt><decl><type><name>vlc_media_tree_t</name> <modifier>*</modifier></type><name>tree</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>description</name></decl>;</decl_stmt>

}</block></struct></type> <name>vlc_media_source_t</name>;</typedef>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_media_source_Hold</name><parameter_list>(<parameter><decl><type><name>vlc_media_source_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_media_source_Release</name><parameter_list>(<parameter><decl><type><name>vlc_media_source_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><name><name>struct</name> <name>vlc_media_source_provider_t</name></name></type> <name>vlc_media_source_provider_t</name>;</typedef>

<function_decl><type><name>VLC_API</name> <name>vlc_media_source_provider_t</name> <modifier>*</modifier></type>

<name>vlc_media_source_provider_Get</name><parameter_list>(<parameter><decl><type><name>libvlc_int_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>vlc_media_source_t</name> <modifier>*</modifier></type>

<name>vlc_media_source_provider_GetMediaSource</name><parameter_list>(<parameter><decl><type><name>vlc_media_source_provider_t</name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<struct>struct <name>vlc_media_source_meta</name>

<block>{

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>longname</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>services_discovery_category_e</name></name></type> <name>category</name></decl>;</decl_stmt>

}</block>;</struct>

<typedef>typedef <type><name><name>struct</name> <name>vlc_media_source_meta_list</name></name></type> <name>vlc_media_source_meta_list_t</name>;</typedef>

<function_decl><type><name>VLC_API</name> <name>vlc_media_source_meta_list_t</name> <modifier>*</modifier></type>

<name>vlc_media_source_provider_List</name><parameter_list>(<parameter><decl><type><name>vlc_media_source_provider_t</name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>services_discovery_category_e</name></name></type> <name>category</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>size_t</name></type>

<name>vlc_media_source_meta_list_Count</name><parameter_list>(<parameter><decl><type><name>vlc_media_source_meta_list_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name><name>struct</name> <name>vlc_media_source_meta</name></name> <modifier>*</modifier></type>

<name>vlc_media_source_meta_list_Get</name><parameter_list>(<parameter><decl><type><name>vlc_media_source_meta_list_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>index</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_media_source_meta_list_Delete</name><parameter_list>(<parameter><decl><type><name>vlc_media_source_meta_list_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
