






















#ifndef VLC_EVENTS_H
#define VLC_EVENTS_H

#include <vlc_arrays.h>
#include <vlc_meta.h>




































































typedef enum vlc_event_type_t {

vlc_InputItemMetaChanged,
vlc_InputItemDurationChanged,
vlc_InputItemPreparsedChanged,
vlc_InputItemNameChanged,
vlc_InputItemInfoChanged,
vlc_InputItemErrorWhenReadingChanged,
} vlc_event_type_t;

typedef struct vlc_event_listeners_group_t
{
DECL_ARRAY(struct vlc_event_listener_t *) listeners;
} vlc_event_listeners_group_t;


typedef struct vlc_event_manager_t
{
void * p_obj;
vlc_mutex_t lock;
vlc_event_listeners_group_t events[vlc_InputItemErrorWhenReadingChanged + 1];
} vlc_event_manager_t;


typedef struct vlc_event_t
{
vlc_event_type_t type;
void * p_obj; 
union vlc_event_type_specific
{

struct vlc_input_item_meta_changed
{
vlc_meta_type_t meta_type;
} input_item_meta_changed;
struct vlc_input_item_subitem_added
{
input_item_t * p_new_child;
} input_item_subitem_added;
struct vlc_input_item_subitem_tree_added
{
input_item_node_t * p_root;
} input_item_subitem_tree_added;
struct vlc_input_item_duration_changed
{
vlc_tick_t new_duration;
} input_item_duration_changed;
struct vlc_input_item_preparsed_changed
{
int new_status;
} input_item_preparsed_changed;
struct vlc_input_item_name_changed
{
const char * new_name;
} input_item_name_changed;
struct vlc_input_item_info_changed
{
void * unused;
} input_item_info_changed;
struct input_item_error_when_reading_changed
{
bool new_value;
} input_item_error_when_reading_changed;
struct input_item_preparse_ended
{
int new_status;
} input_item_preparse_ended;
} u;
} vlc_event_t;


typedef void ( *vlc_event_callback_t )( const vlc_event_t *, void * );









void vlc_event_manager_init( vlc_event_manager_t * p_em, void * p_obj );




void vlc_event_manager_fini( vlc_event_manager_t * p_em );




void vlc_event_send( vlc_event_manager_t * p_em, vlc_event_t * );




VLC_API int vlc_event_attach( vlc_event_manager_t * p_event_manager,
vlc_event_type_t event_type,
vlc_event_callback_t pf_callback,
void *p_user_data );




VLC_API void vlc_event_detach( vlc_event_manager_t *p_event_manager,
vlc_event_type_t event_type,
vlc_event_callback_t pf_callback,
void *p_user_data );

#endif 
