<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\include\vlc_messages.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdarg.h&gt;</cpp:file></cpp:include>

<enum>enum <name>vlc_log_type</name>

<block>{

<decl><name>VLC_MSG_INFO</name><init>=<expr><literal type="number">0</literal></expr></init></decl>, 

<decl><name>VLC_MSG_ERR</name></decl>, 

<decl><name>VLC_MSG_WARN</name></decl>, 

<decl><name>VLC_MSG_DBG</name></decl>, 

}</block>;</enum>

<typedef>typedef <type><struct>struct <name>vlc_log_t</name>

<block>{

<decl_stmt><decl><type><name>uintptr_t</name></type> <name>i_object_id</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_object_type</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_module</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_header</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>line</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>func</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name>tid</name></decl>;</decl_stmt> 

}</block></struct></type> <name>vlc_log_t</name>;</typedef>

<function_decl><type><name>VLC_API</name> <name>void</name></type> <name>vlc_object_Log</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>prio</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>module</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>line</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>func</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>format</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list> VLC_FORMAT<parameter_list>(</parameter_list>7<operator>,</operator> 8</function_decl>)<empty_stmt>;</empty_stmt>

<function_decl><type><name>VLC_API</name> <name>void</name></type> <name>vlc_object_vaLog</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>prio</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>module</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>line</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>func</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>format</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>ap</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>msg_GenericVa</name><parameter_list>(<parameter><type><name>o</name></type></parameter>, <parameter><type><name>p</name></type></parameter>, <parameter><type><name>fmt</name></type></parameter>, <parameter><type><name>ap</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>vlc_object_vaLog(VLC_OBJECT(o), p, vlc_module_name, __FILE__, __LINE__, __func__, fmt, ap)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>msg_Generic</name><parameter_list>(<parameter><type><name>o</name></type></parameter>, <parameter><type><name>p</name></type></parameter>, <parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>vlc_object_Log(VLC_OBJECT(o), p, vlc_module_name, __FILE__, __LINE__, __func__, __VA_ARGS__)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>msg_Info</name><parameter_list>(<parameter><type><name>p_this</name></type></parameter>, <parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>msg_Generic(p_this, VLC_MSG_INFO, __VA_ARGS__)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>msg_Err</name><parameter_list>(<parameter><type><name>p_this</name></type></parameter>, <parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>msg_Generic(p_this, VLC_MSG_ERR, __VA_ARGS__)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>msg_Warn</name><parameter_list>(<parameter><type><name>p_this</name></type></parameter>, <parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>msg_Generic(p_this, VLC_MSG_WARN, __VA_ARGS__)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>msg_Dbg</name><parameter_list>(<parameter><type><name>p_this</name></type></parameter>, <parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>msg_Generic(p_this, VLC_MSG_DBG, __VA_ARGS__)</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name></type> <name><name>vlc_module_name</name><index>[]</index></name></decl>;</decl_stmt>

<function_decl><type><name>VLC_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>vlc_strerror</name><parameter_list>(<parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>vlc_strerror_c</name><parameter_list>(<parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>

<struct_decl>struct <name>vlc_logger</name>;</struct_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type> <name>vlc_Log</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_logger</name></name> <modifier>*</modifier><specifier>const</specifier> <modifier>*</modifier></type><name>logger</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>prio</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>type</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>module</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>line</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>func</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>format</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list> VLC_FORMAT<parameter_list>(</parameter_list>8<operator>,</operator> 9</function_decl>)<empty_stmt>;</empty_stmt>

<function_decl><type><name>VLC_API</name> <name>void</name></type> <name>vlc_vaLog</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_logger</name></name> <modifier>*</modifier><specifier>const</specifier> <modifier>*</modifier></type><name>logger</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>prio</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>type</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>module</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>line</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>func</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>format</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>ap</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vlc_log_gen</name><parameter_list>(<parameter><type><name>logger</name></type></parameter>, <parameter><type><name>prio</name></type></parameter>, <parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>vlc_Log(&amp;(logger), prio, "generic", vlc_module_name, __FILE__, __LINE__, __func__, __VA_ARGS__)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vlc_info</name><parameter_list>(<parameter><type><name>logger</name></type></parameter>, <parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>vlc_log_gen(logger, VLC_MSG_INFO, __VA_ARGS__)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vlc_error</name><parameter_list>(<parameter><type><name>logger</name></type></parameter>, <parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>vlc_log_gen(logger, VLC_MSG_ERR, __VA_ARGS__)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vlc_warning</name><parameter_list>(<parameter><type><name>logger</name></type></parameter>, <parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>vlc_log_gen(logger, VLC_MSG_WARN, __VA_ARGS__)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vlc_debug</name><parameter_list>(<parameter><type><name>logger</name></type></parameter>, <parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>vlc_log_gen(logger, VLC_MSG_DBG, __VA_ARGS__)</cpp:value></cpp:define>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>vlc_log_cb</name>) <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>vlc_log_t</name> <modifier>*</modifier></type><name>item</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>args</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<struct>struct <name>vlc_logger_operations</name>

<block>{

<decl_stmt><decl><type><name>vlc_log_cb</name></type> <name>log</name></decl>;</decl_stmt>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>destroy</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

}</block>;</struct>

<decl_stmt><decl><type><name>VLC_API</name> <name><name>struct</name> <name>vlc_logger</name></name> <modifier>*</modifier></type><name>vlc_LogHeaderCreate</name><argument_list>(<argument><expr>struct <name>vlc_logger</name> <operator>*</operator><name>parent</name></expr></argument>,

<argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator><name>str</name></expr></argument>)</argument_list> <name>VLC_USED</name></decl>;</decl_stmt>

<function_decl><type><name>VLC_API</name> <name>void</name></type> <name>vlc_LogDestroy</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_logger</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

</unit>
