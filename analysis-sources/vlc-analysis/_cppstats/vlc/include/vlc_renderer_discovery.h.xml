<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\include\vlc_renderer_discovery.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_input.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_probe.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_url.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_RENDERER_CAN_AUDIO</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_RENDERER_CAN_VIDEO</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define>

<decl_stmt><decl><type><name>VLC_API</name> <name>vlc_renderer_item_t</name> <modifier>*</modifier></type>

<name>vlc_renderer_item_new</name><argument_list>(<argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator><name>psz_type</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator><name>psz_name</name></expr></argument>,

<argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator><name>psz_uri</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator><name>psz_extra_sout</name></expr></argument>,

<argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator><name>psz_demux_filter</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator><name>psz_icon_uri</name></expr></argument>,

<argument><expr><name>int</name> <name>i_flags</name></expr></argument>)</argument_list> <name>VLC_USED</name></decl>;</decl_stmt>

<function_decl><type><name>VLC_API</name> <name>vlc_renderer_item_t</name> <modifier>*</modifier></type>

<name>vlc_renderer_item_hold</name><parameter_list>(<parameter><decl><type><name>vlc_renderer_item_t</name> <modifier>*</modifier></type><name>p_item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_renderer_item_release</name><parameter_list>(<parameter><decl><type><name>vlc_renderer_item_t</name> <modifier>*</modifier></type><name>p_item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>

<name>vlc_renderer_item_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>vlc_renderer_item_t</name> <modifier>*</modifier></type><name>p_item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>

<name>vlc_renderer_item_type</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>vlc_renderer_item_t</name> <modifier>*</modifier></type><name>p_item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>

<name>vlc_renderer_item_demux_filter</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>vlc_renderer_item_t</name> <modifier>*</modifier></type><name>p_item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>

<name>vlc_renderer_item_sout</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>vlc_renderer_item_t</name> <modifier>*</modifier></type><name>p_item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>

<name>vlc_renderer_item_icon_uri</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>vlc_renderer_item_t</name> <modifier>*</modifier></type><name>p_item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>int</name></type>

<name>vlc_renderer_item_flags</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>vlc_renderer_item_t</name> <modifier>*</modifier></type><name>p_item</name></decl></parameter>)</parameter_list>;</function_decl>

<struct_decl>struct <name>vlc_renderer_discovery_owner</name>;</struct_decl>

<decl_stmt><decl><type><name>VLC_API</name> <name>int</name></type>

<name>vlc_rd_get_names</name><argument_list>(<argument><expr><name>vlc_object_t</name> <operator>*</operator><name>p_obj</name></expr></argument>, <argument><expr><name>char</name> <operator>*</operator><operator>*</operator><operator>*</operator><name>pppsz_names</name></expr></argument>,

<argument><expr><name>char</name> <operator>*</operator><operator>*</operator><operator>*</operator><name>pppsz_longnames</name></expr></argument>)</argument_list> <name>VLC_USED</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vlc_rd_get_names</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>c</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>vlc_rd_get_names(VLC_OBJECT(a), b, c)</cpp:value></cpp:define>

<decl_stmt><decl><type><name>VLC_API</name> <name>vlc_renderer_discovery_t</name> <modifier>*</modifier></type>

<name>vlc_rd_new</name><argument_list>(<argument><expr><name>vlc_object_t</name> <operator>*</operator><name>p_obj</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator><name>psz_name</name></expr></argument>,

<argument><expr><specifier>const</specifier> struct <name>vlc_renderer_discovery_owner</name> <operator>*</operator><name>owner</name></expr></argument>)</argument_list> <name>VLC_USED</name></decl>;</decl_stmt>

<function_decl><type><name>VLC_API</name> <name>void</name></type> <name>vlc_rd_release</name><parameter_list>(<parameter><decl><type><name>vlc_renderer_discovery_t</name> <modifier>*</modifier></type><name>p_rd</name></decl></parameter>)</parameter_list>;</function_decl>

<struct>struct <name>vlc_renderer_discovery_owner</name>

<block>{

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>sys</name></decl>;</decl_stmt>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>item_added</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_renderer_discovery_t</name></name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>vlc_renderer_item_t</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>item_removed</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_renderer_discovery_t</name></name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>vlc_renderer_item_t</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

}</block>;</struct>

<struct>struct <name>vlc_renderer_discovery_t</name>

<block>{

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_object_t</name></name></type> <name>obj</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>module_t</name> <modifier>*</modifier></type> <name>p_module</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_renderer_discovery_owner</name></name></type> <name>owner</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type> <name>psz_name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>config_chain_t</name> <modifier>*</modifier></type> <name>p_cfg</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>p_sys</name></decl>;</decl_stmt>

}</block>;</struct>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>vlc_rd_add_item</name><parameter_list>(<parameter><decl><type><name>vlc_renderer_discovery_t</name> <modifier>*</modifier></type> <name>p_rd</name></decl></parameter>,

<parameter><decl><type><name>vlc_renderer_item_t</name> <modifier>*</modifier></type> <name>p_item</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name><name>p_rd</name><operator>-&gt;</operator><name>owner</name><operator>.</operator><name>item_added</name></name><argument_list>(<argument><expr><name>p_rd</name></expr></argument>, <argument><expr><name>p_item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>vlc_rd_remove_item</name><parameter_list>(<parameter><decl><type><name>vlc_renderer_discovery_t</name> <modifier>*</modifier></type> <name>p_rd</name></decl></parameter>,

<parameter><decl><type><name>vlc_renderer_item_t</name> <modifier>*</modifier></type> <name>p_item</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name><name>p_rd</name><operator>-&gt;</operator><name>owner</name><operator>.</operator><name>item_removed</name></name><argument_list>(<argument><expr><name>p_rd</name></expr></argument>, <argument><expr><name>p_item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function_decl><type><name>VLC_API</name> <name>int</name></type>

<name>vlc_rd_probe_add</name><parameter_list>(<parameter><decl><type><name>vlc_probe_t</name> <modifier>*</modifier></type><name>p_probe</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_name</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_longname</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_RD_PROBE_HELPER</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>longname</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>static int vlc_rd_probe_open(vlc_object_t *obj) { return vlc_rd_probe_add((struct vlc_probe_t *)obj, name, longname); }</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_RD_PROBE_SUBMODULE</name></cpp:macro> <cpp:value>add_submodule() set_capability("renderer probe", 100) set_callback(vlc_rd_probe_open)</cpp:value></cpp:define>

</unit>
