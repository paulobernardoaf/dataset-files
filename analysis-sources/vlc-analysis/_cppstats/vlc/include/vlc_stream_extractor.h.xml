<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\include\vlc_stream_extractor.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><struct>struct <name>stream_extractor_t</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_object_t</name></name></type> <name>obj</name></decl>;</decl_stmt>

<function_decl><type><name>ssize_t</name></type> (<modifier>*</modifier><name>pf_read</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>stream_extractor_t</name></name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>buf</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>block_t</name><modifier>*</modifier></type> (<modifier>*</modifier><name>pf_block</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>stream_extractor_t</name></name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>bool</name><modifier>*</modifier></type> <name>eof</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>pf_seek</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>stream_extractor_t</name></name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>pf_control</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>stream_extractor_t</name></name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>request</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>args</name></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><name>char</name> <specifier>const</specifier><modifier>*</modifier></type> <name>identifier</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>stream_t</name><modifier>*</modifier></type> <name>source</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>void</name><modifier>*</modifier></type> <name>p_sys</name></decl>;</decl_stmt> 

}</block></struct></type> <name>stream_extractor_t</name>;</typedef>

<typedef>typedef <type><struct>struct <name>stream_directory_t</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_object_t</name></name></type> <name>obj</name></decl>;</decl_stmt>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>pf_readdir</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>stream_directory_t</name></name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>input_item_node_t</name><modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<decl_stmt><decl><type><name>stream_t</name><modifier>*</modifier></type> <name>source</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>void</name><modifier>*</modifier></type> <name>p_sys</name></decl>;</decl_stmt> 

}</block></struct></type> <name>stream_directory_t</name>;</typedef>

<decl_stmt><decl><type><name>VLC_API</name> <name>stream_t</name> <modifier>*</modifier></type> <name>vlc_stream_NewMRL</name><argument_list>(<argument><expr><name>vlc_object_t</name> <operator>*</operator><name>obj</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator><name>mrl</name></expr></argument>)</argument_list>

<name>VLC_USED</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vlc_stream_NewMRL</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>vlc_stream_NewMRL(VLC_OBJECT(a), b)</cpp:value></cpp:define>

<function_decl><type><name>VLC_API</name> <name>char</name><modifier>*</modifier></type> <name>vlc_stream_extractor_CreateMRL</name><parameter_list>( <parameter><decl><type><name>stream_directory_t</name><modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><name>char</name> <specifier>const</specifier><modifier>*</modifier></type> <name>subentry</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>int</name></type> <name>vlc_stream_extractor_Attach</name><parameter_list>( <parameter><decl><type><name>stream_t</name><modifier>*</modifier><modifier>*</modifier></type> <name>source</name></decl></parameter>,

<parameter><decl><type><name>char</name> <specifier>const</specifier><modifier>*</modifier></type> <name>identifier</name></decl></parameter>,

<parameter><decl><type><name>char</name> <specifier>const</specifier><modifier>*</modifier></type> <name>module_name</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>int</name></type> <name>vlc_stream_directory_Attach</name><parameter_list>( <parameter><decl><type><name>stream_t</name><modifier>*</modifier><modifier>*</modifier></type> <name>source</name></decl></parameter>,

<parameter><decl><type><name>char</name> <specifier>const</specifier><modifier>*</modifier></type> <name>module_name</name></decl></parameter> )</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern> 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
