<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\include\vlc_player.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_input.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_aout.h&gt;</cpp:file></cpp:include>

<typedef>typedef <type><name><name>struct</name> <name>vlc_player_t</name></name></type> <name>vlc_player_t</name>;</typedef>

<enum>enum <name>vlc_player_lock_type</name>

<block>{

<decl><name>VLC_PLAYER_LOCK_NORMAL</name></decl>,

<decl><name>VLC_PLAYER_LOCK_REENTRANT</name></decl>,

}</block>;</enum>

<enum>enum <name>vlc_player_media_stopped_action</name> <block>{

<decl><name>VLC_PLAYER_MEDIA_STOPPED_CONTINUE</name></decl>,

<decl><name>VLC_PLAYER_MEDIA_STOPPED_PAUSE</name></decl>,

<decl><name>VLC_PLAYER_MEDIA_STOPPED_STOP</name></decl>,

<decl><name>VLC_PLAYER_MEDIA_STOPPED_EXIT</name></decl>,

}</block>;</enum>

<struct>struct <name>vlc_player_media_provider</name>

<block>{

<function_decl><type><name>input_item_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>get_next</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

}</block>;</struct>

<function_decl><type><name>VLC_API</name> <name>vlc_player_t</name> <modifier>*</modifier></type>

<name>vlc_player_New</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>parent</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>vlc_player_lock_type</name></name></type> <name>lock_type</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_media_provider</name></name> <modifier>*</modifier></type><name>media_provider</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>media_provider_data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_Delete</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_Lock</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_Unlock</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_CondWait</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>vlc_cond_t</name> <modifier>*</modifier></type><name>cond</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SetMediaStoppedAction</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>vlc_player_media_stopped_action</name></name></type> <name>action</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SetStartPaused</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>start_paused</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SetPauseOnCork</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enabled</name></decl></parameter>)</parameter_list>;</function_decl>

<enum>enum <name>vlc_player_state</name>

<block>{

<decl><name>VLC_PLAYER_STATE_STOPPED</name></decl>,

<decl><name>VLC_PLAYER_STATE_STARTED</name></decl>,

<decl><name>VLC_PLAYER_STATE_PLAYING</name></decl>,

<decl><name>VLC_PLAYER_STATE_PAUSED</name></decl>,

<decl><name>VLC_PLAYER_STATE_STOPPING</name></decl>,

}</block>;</enum>

<enum>enum <name>vlc_player_error</name>

<block>{

<decl><name>VLC_PLAYER_ERROR_NONE</name></decl>,

<decl><name>VLC_PLAYER_ERROR_GENERIC</name></decl>,

}</block>;</enum>

<enum>enum <name>vlc_player_seek_speed</name>

<block>{

<decl><name>VLC_PLAYER_SEEK_PRECISE</name></decl>,

<decl><name>VLC_PLAYER_SEEK_FAST</name></decl>,

}</block>;</enum>

<enum>enum <name>vlc_player_whence</name>

<block>{

<decl><name>VLC_PLAYER_WHENCE_ABSOLUTE</name></decl>,

<decl><name>VLC_PLAYER_WHENCE_RELATIVE</name></decl>,

}</block>;</enum>

<enum>enum <name>vlc_player_nav</name>

<block>{

<decl><name>VLC_PLAYER_NAV_ACTIVATE</name></decl>,

<decl><name>VLC_PLAYER_NAV_UP</name></decl>,

<decl><name>VLC_PLAYER_NAV_DOWN</name></decl>,

<decl><name>VLC_PLAYER_NAV_LEFT</name></decl>,

<decl><name>VLC_PLAYER_NAV_RIGHT</name></decl>,

<decl><name>VLC_PLAYER_NAV_POPUP</name></decl>,

<decl><name>VLC_PLAYER_NAV_MENU</name></decl>,

}</block>;</enum>

<enum>enum <name>vlc_player_abloop</name>

<block>{

<decl><name>VLC_PLAYER_ABLOOP_NONE</name></decl>,

<decl><name>VLC_PLAYER_ABLOOP_A</name></decl>,

<decl><name>VLC_PLAYER_ABLOOP_B</name></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_PLAYER_CAP_SEEK</name></cpp:macro> <cpp:value>(1&lt;&lt;0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_PLAYER_CAP_PAUSE</name></cpp:macro> <cpp:value>(1&lt;&lt;1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_PLAYER_CAP_CHANGE_RATE</name></cpp:macro> <cpp:value>(1&lt;&lt;2)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_PLAYER_CAP_REWIND</name></cpp:macro> <cpp:value>(1&lt;&lt;3)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_PLAYER_TELETEXT_KEY_RED</name></cpp:macro> <cpp:value>('r' &lt;&lt; 16)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_PLAYER_TELETEXT_KEY_GREEN</name></cpp:macro> <cpp:value>('g' &lt;&lt; 16)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_PLAYER_TELETEXT_KEY_YELLOW</name></cpp:macro> <cpp:value>('y' &lt;&lt; 16)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_PLAYER_TELETEXT_KEY_BLUE</name></cpp:macro> <cpp:value>('b' &lt;&lt; 16)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_PLAYER_TELETEXT_KEY_INDEX</name></cpp:macro> <cpp:value>('i' &lt;&lt; 16)</cpp:value></cpp:define>

<enum>enum <name>vlc_player_restore_playback_pos</name>

<block>{

<decl><name>VLC_PLAYER_RESTORE_PLAYBACK_POS_NEVER</name></decl>,

<decl><name>VLC_PLAYER_RESTORE_PLAYBACK_POS_ASK</name></decl>,

<decl><name>VLC_PLAYER_RESTORE_PLAYBACK_POS_ALWAYS</name></decl>,

}</block>;</enum>

<function_decl><type><name>VLC_API</name> <name>int</name></type>

<name>vlc_player_SetCurrentMedia</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>input_item_t</name> <modifier>*</modifier></type><name>media</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>input_item_t</name> <modifier>*</modifier></type>

<name>vlc_player_GetCurrentMedia</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>input_item_t</name> <modifier>*</modifier></type>

<name>vlc_player_HoldCurrentMedia</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>input_item_t</name> <modifier>*</modifier></type><name>item</name> <init>= <expr><call><name>vlc_player_GetCurrentMedia</name><argument_list>(<argument><expr><name>player</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><ternary><condition><expr><name>item</name></expr> ?</condition><then> <expr><call><name>input_item_Hold</name><argument_list>(<argument><expr><name>item</name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_InvalidateNextMedia</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>int</name></type>

<name>vlc_player_Start</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>int</name></type>

<name>vlc_player_Stop</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_Pause</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_Resume</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_NextVideoFrame</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name><name>enum</name> <name>vlc_player_state</name></name></type>

<name>vlc_player_GetState</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name><name>enum</name> <name>vlc_player_error</name></name></type>

<name>vlc_player_GetError</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type>

<name>vlc_player_IsStarted</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<switch>switch <condition>(<expr><call><name>vlc_player_GetState</name><argument_list>(<argument><expr><name>player</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>VLC_PLAYER_STATE_STARTED</name></expr>:</case>

<case>case <expr><name>VLC_PLAYER_STATE_PLAYING</name></expr>:</case>

<case>case <expr><name>VLC_PLAYER_STATE_PAUSED</name></expr>:</case>

<return>return <expr><name>true</name></expr>;</return>

<default>default:</default>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></switch>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type>

<name>vlc_player_IsPaused</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>vlc_player_GetState</name><argument_list>(<argument><expr><name>player</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>VLC_PLAYER_STATE_PAUSED</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>

<name>vlc_player_TogglePause</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>vlc_player_IsStarted</name><argument_list>(<argument><expr><name>player</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>vlc_player_IsPaused</name><argument_list>(<argument><expr><name>player</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>vlc_player_Resume</name><argument_list>(<argument><expr><name>player</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><call><name>vlc_player_Pause</name><argument_list>(<argument><expr><name>player</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function_decl><type><name>VLC_API</name> <name>int</name></type>

<name>vlc_player_GetCapabilities</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type>

<name>vlc_player_CanSeek</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>vlc_player_GetCapabilities</name><argument_list>(<argument><expr><name>player</name></expr></argument>)</argument_list></call> <operator>&amp;</operator> <name>VLC_PLAYER_CAP_SEEK</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type>

<name>vlc_player_CanPause</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>vlc_player_GetCapabilities</name><argument_list>(<argument><expr><name>player</name></expr></argument>)</argument_list></call> <operator>&amp;</operator> <name>VLC_PLAYER_CAP_PAUSE</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type>

<name>vlc_player_CanChangeRate</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>vlc_player_GetCapabilities</name><argument_list>(<argument><expr><name>player</name></expr></argument>)</argument_list></call> <operator>&amp;</operator> <name>VLC_PLAYER_CAP_CHANGE_RATE</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type>

<name>vlc_player_CanRewind</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>vlc_player_GetCapabilities</name><argument_list>(<argument><expr><name>player</name></expr></argument>)</argument_list></call> <operator>&amp;</operator> <name>VLC_PLAYER_CAP_REWIND</name></expr>;</return>

</block_content>}</block></function>

<function_decl><type><name>VLC_API</name> <name>float</name></type>

<name>vlc_player_GetRate</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_ChangeRate</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>rate</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_IncrementRate</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_DecrementRate</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>vlc_tick_t</name></type>

<name>vlc_player_GetLength</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>vlc_tick_t</name></type>

<name>vlc_player_GetTime</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>float</name></type>

<name>vlc_player_GetPosition</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SeekByPos</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>position</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>vlc_player_seek_speed</name></name></type> <name>speed</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>vlc_player_whence</name></name></type> <name>whence</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SeekByTime</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>time</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>vlc_player_seek_speed</name></name></type> <name>speed</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>vlc_player_whence</name></name></type> <name>whence</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>

<name>vlc_player_SetPosition</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>position</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_player_SeekByPos</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>position</name></expr></argument>, <argument><expr><name>VLC_PLAYER_SEEK_PRECISE</name></expr></argument>,

<argument><expr><name>VLC_PLAYER_WHENCE_ABSOLUTE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>

<name>vlc_player_SetPositionFast</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>position</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_player_SeekByPos</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>position</name></expr></argument>, <argument><expr><name>VLC_PLAYER_SEEK_FAST</name></expr></argument>,

<argument><expr><name>VLC_PLAYER_WHENCE_ABSOLUTE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>

<name>vlc_player_JumpPos</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>jumppos</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_player_SeekByPos</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>jumppos</name></expr></argument>, <argument><expr><name>VLC_PLAYER_SEEK_PRECISE</name></expr></argument>,

<argument><expr><name>VLC_PLAYER_WHENCE_RELATIVE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>

<name>vlc_player_SetTime</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>time</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_player_SeekByTime</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>time</name></expr></argument>, <argument><expr><name>VLC_PLAYER_SEEK_PRECISE</name></expr></argument>,

<argument><expr><name>VLC_PLAYER_WHENCE_ABSOLUTE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>

<name>vlc_player_SetTimeFast</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>time</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_player_SeekByTime</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>time</name></expr></argument>, <argument><expr><name>VLC_PLAYER_SEEK_FAST</name></expr></argument>,

<argument><expr><name>VLC_PLAYER_WHENCE_ABSOLUTE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>

<name>vlc_player_JumpTime</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>jumptime</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_player_SeekByTime</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>jumptime</name></expr></argument>, <argument><expr><name>VLC_PLAYER_SEEK_PRECISE</name></expr></argument>,

<argument><expr><name>VLC_PLAYER_WHENCE_RELATIVE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_DisplayPosition</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>int</name></type>

<name>vlc_player_SetAtoBLoop</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>vlc_player_abloop</name></name></type> <name>abloop</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name><name>enum</name> <name>vlc_player_abloop</name></name></type>

<name>vlc_player_GetAtoBLoop</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name> <modifier>*</modifier></type><name>a_time</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>a_pos</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name> <modifier>*</modifier></type><name>b_time</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>b_pos</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_Navigate</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>vlc_player_nav</name></name></type> <name>nav</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_UpdateViewpoint</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>vlc_viewpoint_t</name> <modifier>*</modifier></type><name>viewpoint</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>vlc_player_whence</name></name></type> <name>whence</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>bool</name></type>

<name>vlc_player_IsRecording</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SetRecordingEnabled</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enabled</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>

<name>vlc_player_ToggleRecording</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_player_SetRecordingEnabled</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><operator>!</operator><call><name>vlc_player_IsRecording</name><argument_list>(<argument><expr><name>player</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function_decl><type><name>VLC_API</name> <name>int</name></type>

<name>vlc_player_AddAssociatedMedia</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>es_format_category_e</name></name></type> <name>cat</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>uri</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>select</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>notify</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>check_ext</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>int</name></type>

<name>vlc_player_GetSignal</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>quality</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>strength</name></decl></parameter>)</parameter_list>;</function_decl>

<expr_stmt><expr><name>VLC_API</name> <specifier>const</specifier> struct <name>input_stats_t</name> <operator>*</operator>

<call><name>vlc_player_GetStatistics</name><argument_list>(<argument><expr><name>vlc_player_t</name> <operator>*</operator><name>player</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_RestorePlaybackPos</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><name>VLC_API</name> <name>vlc_object_t</name> <modifier>*</modifier></type>

<name>vlc_player_GetV4l2Object</name><argument_list>(<argument><expr><name>vlc_player_t</name> <operator>*</operator><name>player</name></expr></argument>)</argument_list> <name>VLC_DEPRECATED</name></decl>;</decl_stmt>

<struct>struct <name>vlc_player_chapter</name>

<block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>time</name></decl>;</decl_stmt>

}</block>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_PLAYER_TITLE_MENU</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_PLAYER_TITLE_INTERACTIVE</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>

<struct>struct <name>vlc_player_title</name>

<block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>flags</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>chapter_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_chapter</name></name> <modifier>*</modifier></type><name>chapters</name></decl>;</decl_stmt>

}</block>;</struct>

<typedef>typedef <type><name><name>struct</name> <name>vlc_player_title_list</name></name></type> <name>vlc_player_title_list</name>;</typedef>

<function_decl><type><name>VLC_API</name> <name>vlc_player_title_list</name> <modifier>*</modifier></type>

<name>vlc_player_title_list_Hold</name><parameter_list>(<parameter><decl><type><name>vlc_player_title_list</name> <modifier>*</modifier></type><name>titles</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_title_list_Release</name><parameter_list>(<parameter><decl><type><name>vlc_player_title_list</name> <modifier>*</modifier></type><name>titles</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>size_t</name></type>

<name>vlc_player_title_list_GetCount</name><parameter_list>(<parameter><decl><type><name>vlc_player_title_list</name> <modifier>*</modifier></type><name>titles</name></decl></parameter>)</parameter_list>;</function_decl>

<expr_stmt><expr><name>VLC_API</name> <specifier>const</specifier> struct <name>vlc_player_title</name> <operator>*</operator>

<macro><name>vlc_player_title_list_GetAt</name><argument_list>(<argument>vlc_player_title_list *titles</argument>, <argument>size_t idx</argument>)</argument_list></macro></expr>;</expr_stmt>

<function_decl><type><name>VLC_API</name> <name>vlc_player_title_list</name> <modifier>*</modifier></type>

<name>vlc_player_GetTitleList</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>ssize_t</name></type>

<name>vlc_player_GetSelectedTitleIdx</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <specifier>const</specifier> <name><name>struct</name> <name>vlc_player_title</name></name> <modifier>*</modifier></type>

<name>vlc_player_GetSelectedTitle</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vlc_player_title_list</name> <modifier>*</modifier></type><name>titles</name> <init>= <expr><call><name>vlc_player_GetTitleList</name><argument_list>(<argument><expr><name>player</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>titles</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>ssize_t</name></type> <name>selected_idx</name> <init>= <expr><call><name>vlc_player_GetSelectedTitleIdx</name><argument_list>(<argument><expr><name>player</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>selected_idx</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><call><name>vlc_player_title_list_GetAt</name><argument_list>(<argument><expr><name>titles</name></expr></argument>, <argument><expr><name>selected_idx</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SelectTitleIdx</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>index</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SelectTitle</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_title</name></name> <modifier>*</modifier></type><name>title</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SelectChapter</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_title</name></name> <modifier>*</modifier></type><name>title</name></decl></parameter>,

<parameter><decl><type><name>size_t</name></type> <name>chapter_idx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SelectNextTitle</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SelectPrevTitle</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>ssize_t</name></type>

<name>vlc_player_GetSelectedChapterIdx</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <specifier>const</specifier> <name><name>struct</name> <name>vlc_player_chapter</name></name> <modifier>*</modifier></type>

<name>vlc_player_GetSelectedChapter</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_title</name></name> <modifier>*</modifier></type><name>title</name> <init>= <expr><call><name>vlc_player_GetSelectedTitle</name><argument_list>(<argument><expr><name>player</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>title</name> <operator>||</operator> <operator>!</operator><name><name>title</name><operator>-&gt;</operator><name>chapter_count</name></name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>ssize_t</name></type> <name>chapter_idx</name> <init>= <expr><call><name>vlc_player_GetSelectedChapterIdx</name><argument_list>(<argument><expr><name>player</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><ternary><condition><expr><name>chapter_idx</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr> ?</condition><then> <expr><operator>&amp;</operator><name><name>title</name><operator>-&gt;</operator><name>chapters</name><index>[<expr><name>chapter_idx</name></expr>]</index></name></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SelectChapterIdx</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>index</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SelectNextChapter</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SelectPrevChapter</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<struct>struct <name>vlc_player_program</name>

<block>{

<decl_stmt><decl><type><name>int</name></type> <name>group_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>selected</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>scrambled</name></decl>;</decl_stmt>

}</block>;</struct>

<function_decl><type><name>VLC_API</name> <name><name>struct</name> <name>vlc_player_program</name></name> <modifier>*</modifier></type>

<name>vlc_player_program_Dup</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_program</name></name> <modifier>*</modifier></type><name>prgm</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_program_Delete</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_player_program</name></name> <modifier>*</modifier></type><name>prgm</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>size_t</name></type>

<name>vlc_player_GetProgramCount</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<expr_stmt><expr><name>VLC_API</name> <specifier>const</specifier> struct <name>vlc_player_program</name> <operator>*</operator>

<macro><name>vlc_player_GetProgramAt</name><argument_list>(<argument>vlc_player_t *player</argument>, <argument>size_t index</argument>)</argument_list></macro></expr>;</expr_stmt>

<expr_stmt><expr><name>VLC_API</name> <specifier>const</specifier> struct <name>vlc_player_program</name> <operator>*</operator>

<macro><name>vlc_player_GetProgram</name><argument_list>(<argument>vlc_player_t *player</argument>, <argument>int group_id</argument>)</argument_list></macro></expr>;</expr_stmt>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SelectProgram</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>group_id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SelectNextProgram</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SelectPrevProgram</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <specifier>const</specifier> <name><name>struct</name> <name>vlc_player_program</name></name> <modifier>*</modifier></type>

<name>vlc_player_GetSelectedProgram</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>size_t</name></type> <name>count</name> <init>= <expr><call><name>vlc_player_GetProgramCount</name><argument_list>(<argument><expr><name>player</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>count</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_program</name></name> <modifier>*</modifier></type><name>program</name> <init>=

<expr><call><name>vlc_player_GetProgramAt</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>program</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>program</name><operator>-&gt;</operator><name>selected</name></name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>program</name></expr>;</return></block_content></block></if></if_stmt>

</block_content>}</block></for>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></function>

<enum>enum <name>vlc_player_select_policy</name>

<block>{

<decl><name>VLC_PLAYER_SELECT_EXCLUSIVE</name></decl>,

<decl><name>VLC_PLAYER_SELECT_SIMULTANEOUS</name></decl>,

}</block>;</enum>

<struct>struct <name>vlc_player_track</name>

<block>{

<decl_stmt><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>es_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>es_format_t</name></type> <name>fmt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>selected</name></decl>;</decl_stmt>

}</block>;</struct>

<function_decl><type><name>VLC_API</name> <name><name>struct</name> <name>vlc_player_track</name></name> <modifier>*</modifier></type>

<name>vlc_player_track_Dup</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_track</name></name> <modifier>*</modifier></type><name>track</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_track_Delete</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_player_track</name></name> <modifier>*</modifier></type><name>track</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>size_t</name></type>

<name>vlc_player_GetTrackCount</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>es_format_category_e</name></name></type> <name>cat</name></decl></parameter>)</parameter_list>;</function_decl>

<expr_stmt><expr><name>VLC_API</name> <specifier>const</specifier> struct <name>vlc_player_track</name> <operator>*</operator>

<macro><name>vlc_player_GetTrackAt</name><argument_list>(<argument>vlc_player_t *player</argument>, <argument>enum es_format_category_e cat</argument>,

<argument>size_t index</argument>)</argument_list></macro></expr>;</expr_stmt>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>size_t</name></type>

<name>vlc_player_GetVideoTrackCount</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>vlc_player_GetTrackCount</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>VIDEO_ES</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <specifier>const</specifier> <name><name>struct</name> <name>vlc_player_track</name></name> <modifier>*</modifier></type>

<name>vlc_player_GetVideoTrackAt</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>index</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>vlc_player_GetTrackAt</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>VIDEO_ES</name></expr></argument>, <argument><expr><name>index</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>size_t</name></type>

<name>vlc_player_GetAudioTrackCount</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>vlc_player_GetTrackCount</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>AUDIO_ES</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <specifier>const</specifier> <name><name>struct</name> <name>vlc_player_track</name></name> <modifier>*</modifier></type>

<name>vlc_player_GetAudioTrackAt</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>index</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>vlc_player_GetTrackAt</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>AUDIO_ES</name></expr></argument>, <argument><expr><name>index</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>size_t</name></type>

<name>vlc_player_GetSubtitleTrackCount</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>vlc_player_GetTrackCount</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>SPU_ES</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <specifier>const</specifier> <name><name>struct</name> <name>vlc_player_track</name></name> <modifier>*</modifier></type>

<name>vlc_player_GetSubtitleTrackAt</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>index</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>vlc_player_GetTrackAt</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>SPU_ES</name></expr></argument>, <argument><expr><name>index</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<expr_stmt><expr><name>VLC_API</name> <specifier>const</specifier> struct <name>vlc_player_track</name> <operator>*</operator>

<call><name>vlc_player_GetTrack</name><argument_list>(<argument><expr><name>vlc_player_t</name> <operator>*</operator><name>player</name></expr></argument>, <argument><expr><name>vlc_es_id_t</name> <operator>*</operator><name>es_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function_decl><type><name>VLC_API</name> <name>vout_thread_t</name> <modifier>*</modifier></type>

<name>vlc_player_GetEsIdVout</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>es_id</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>vlc_vout_order</name></name> <modifier>*</modifier></type><name>order</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>vlc_es_id_t</name> <modifier>*</modifier></type>

<name>vlc_player_GetEsIdFromVout</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type><name>vout</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <specifier>const</specifier> <name><name>struct</name> <name>vlc_player_track</name></name> <modifier>*</modifier></type>

<name>vlc_player_GetSelectedTrack</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>es_format_category_e</name></name></type> <name>cat</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>size_t</name></type> <name>count</name> <init>= <expr><call><name>vlc_player_GetTrackCount</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>cat</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>count</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_track</name></name> <modifier>*</modifier></type><name>track</name> <init>=

<expr><call><name>vlc_player_GetTrackAt</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>cat</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>track</name><operator>-&gt;</operator><name>selected</name></name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>track</name></expr>;</return></block_content></block></if></if_stmt>

</block_content>}</block></for>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></function>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SelectTracksByStringIds</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>es_format_category_e</name></name></type> <name>cat</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str_ids</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>unsigned</name></type>

<name>vlc_player_SelectEsId</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>es_id</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>vlc_player_select_policy</name></name></type> <name>policy</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>unsigned</name></type>

<name>vlc_player_SelectTrack</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_track</name></name> <modifier>*</modifier></type><name>track</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>vlc_player_select_policy</name></name></type> <name>policy</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>vlc_player_SelectEsId</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name><name>track</name><operator>-&gt;</operator><name>es_id</name></name></expr></argument>, <argument><expr><name>policy</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function_decl><type><name>VLC_API</name> <name>unsigned</name></type>

<name>vlc_player_SelectEsIdList</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>es_format_category_e</name></name></type> <name>cat</name></decl></parameter>,

<parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>es_id_list</name><index>[]</index></name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SelectNextTrack</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>es_format_category_e</name></name></type> <name>cat</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SelectPrevTrack</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>es_format_category_e</name></name></type> <name>cat</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_UnselectEsId</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>es_id</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>

<name>vlc_player_UnselectTrack</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_track</name></name> <modifier>*</modifier></type><name>track</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_player_UnselectEsId</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name><name>track</name><operator>-&gt;</operator><name>es_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>

<name>vlc_player_UnselectTrackCategory</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>es_format_category_e</name></name></type> <name>cat</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>size_t</name></type> <name>count</name> <init>= <expr><call><name>vlc_player_GetTrackCount</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>cat</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>count</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_track</name></name> <modifier>*</modifier></type><name>track</name> <init>=

<expr><call><name>vlc_player_GetTrackAt</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>cat</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>track</name><operator>-&gt;</operator><name>selected</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>vlc_player_UnselectTrack</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_RestartEsId</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>es_id</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>

<name>vlc_player_RestartTrack</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_track</name></name> <modifier>*</modifier></type><name>track</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_player_RestartEsId</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name><name>track</name><operator>-&gt;</operator><name>es_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>

<name>vlc_player_RestartTrackCategory</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>es_format_category_e</name></name></type> <name>cat</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>size_t</name></type> <name>count</name> <init>= <expr><call><name>vlc_player_GetTrackCount</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>cat</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>count</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_track</name></name> <modifier>*</modifier></type><name>track</name> <init>=

<expr><call><name>vlc_player_GetTrackAt</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>cat</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>track</name><operator>-&gt;</operator><name>selected</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>vlc_player_RestartTrack</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SelectCategoryLanguage</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>es_format_category_e</name></name></type> <name>cat</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>lang</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>char</name> <modifier>*</modifier></type>

<name>vlc_player_GetCategoryLanguage</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>es_format_category_e</name></name></type> <name>cat</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>

<name>vlc_player_SelectAudioLanguage</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>lang</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_player_SelectCategoryLanguage</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>AUDIO_ES</name></expr></argument>, <argument><expr><name>lang</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>

<name>vlc_player_SelectSubtitleLanguage</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>lang</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_player_SelectCategoryLanguage</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>SPU_ES</name></expr></argument>, <argument><expr><name>lang</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SetTrackCategoryEnabled</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>es_format_category_e</name></name></type> <name>cat</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enabled</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>bool</name></type>

<name>vlc_player_IsTrackCategoryEnabled</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>es_format_category_e</name></name></type> <name>cat</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>

<name>vlc_player_SetVideoEnabled</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enabled</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_player_SetTrackCategoryEnabled</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>VIDEO_ES</name></expr></argument>, <argument><expr><name>enabled</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type>

<name>vlc_player_IsVideoEnabled</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>vlc_player_IsTrackCategoryEnabled</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>VIDEO_ES</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>

<name>vlc_player_SetAudioEnabled</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enabled</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_player_SetTrackCategoryEnabled</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>AUDIO_ES</name></expr></argument>, <argument><expr><name>enabled</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type>

<name>vlc_player_IsAudioEnabled</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>vlc_player_IsTrackCategoryEnabled</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>AUDIO_ES</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>

<name>vlc_player_SetSubtitleEnabled</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enabled</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_player_SetTrackCategoryEnabled</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>SPU_ES</name></expr></argument>, <argument><expr><name>enabled</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type>

<name>vlc_player_IsSubtitleEnabled</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>vlc_player_IsTrackCategoryEnabled</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>SPU_ES</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>

<name>vlc_player_ToggleSubtitle</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>bool</name></type> <name>enabled</name> <init>= <expr><operator>!</operator><call><name>vlc_player_IsSubtitleEnabled</name><argument_list>(<argument><expr><name>player</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><call><name>vlc_player_SetSubtitleEnabled</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>enabled</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SetSubtitleTextScale</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>scale</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>unsigned</name></type>

<name>vlc_player_GetSubtitleTextScale</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>vlc_tick_t</name></type>

<name>vlc_player_GetCategoryDelay</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>es_format_category_e</name></name></type> <name>cat</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>int</name></type>

<name>vlc_player_SetCategoryDelay</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>es_format_category_e</name></name></type> <name>cat</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>delay</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>vlc_player_whence</name></name></type> <name>whence</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>vlc_tick_t</name></type>

<name>vlc_player_GetEsIdDelay</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>es_id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>int</name></type>

<name>vlc_player_SetEsIdDelay</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>es_id</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>delay</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>vlc_player_whence</name></name></type> <name>whence</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>vlc_tick_t</name></type>

<name>vlc_player_GetAudioDelay</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>vlc_player_GetCategoryDelay</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>AUDIO_ES</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>

<name>vlc_player_SetAudioDelay</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>delay</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>vlc_player_whence</name></name></type> <name>whence</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_player_SetCategoryDelay</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>AUDIO_ES</name></expr></argument>, <argument><expr><name>delay</name></expr></argument>, <argument><expr><name>whence</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>vlc_tick_t</name></type>

<name>vlc_player_GetSubtitleDelay</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>vlc_player_GetCategoryDelay</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>SPU_ES</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>

<name>vlc_player_SetSubtitleDelay</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>delay</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>vlc_player_whence</name></name></type> <name>whence</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_player_SetCategoryDelay</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><name>SPU_ES</name></expr></argument>, <argument><expr><name>delay</name></expr></argument>, <argument><expr><name>whence</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SetAssociatedSubsFPS</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>fps</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>float</name></type>

<name>vlc_player_GetAssociatedSubsFPS</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>bool</name></type>

<name>vlc_player_HasTeletextMenu</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SetTeletextEnabled</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enabled</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>bool</name></type>

<name>vlc_player_IsTeletextEnabled</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SelectTeletextPage</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>page</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>unsigned</name></type>

<name>vlc_player_GetTeletextPage</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SetTeletextTransparency</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enabled</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>bool</name></type>

<name>vlc_player_IsTeletextTransparent</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_SetRenderer</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>vlc_renderer_item_t</name> <modifier>*</modifier></type><name>renderer</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>vlc_renderer_item_t</name> <modifier>*</modifier></type>

<name>vlc_player_GetRenderer</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><name><name>struct</name> <name>vlc_player_aout_listener_id</name></name></type> <name>vlc_player_aout_listener_id</name>;</typedef>

<struct>struct <name>vlc_player_aout_cbs</name>

<block>{

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_volume_changed</name>)<parameter_list>(<parameter><decl><type><name>audio_output_t</name> <modifier>*</modifier></type><name>aout</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>new_volume</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_mute_changed</name>)<parameter_list>(<parameter><decl><type><name>audio_output_t</name> <modifier>*</modifier></type><name>aout</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>new_muted</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_device_changed</name>)<parameter_list>(<parameter><decl><type><name>audio_output_t</name> <modifier>*</modifier></type><name>aout</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>device</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

}</block>;</struct>

<function_decl><type><name>VLC_API</name> <name>audio_output_t</name> <modifier>*</modifier></type>

<name>vlc_player_aout_Hold</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>vlc_player_aout_listener_id</name> <modifier>*</modifier></type>

<name>vlc_player_aout_AddListener</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_aout_cbs</name></name> <modifier>*</modifier></type><name>cbs</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbs_data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_aout_RemoveListener</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name>vlc_player_aout_listener_id</name> <modifier>*</modifier></type><name>listener_id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>float</name></type>

<name>vlc_player_aout_GetVolume</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>int</name></type>

<name>vlc_player_aout_SetVolume</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>volume</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>int</name></type>

<name>vlc_player_aout_IncrementVolume</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>steps</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>result</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type>

<name>vlc_player_aout_DecrementVolume</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>steps</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>result</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>vlc_player_aout_IncrementVolume</name><argument_list>(<argument><expr><name>player</name></expr></argument>, <argument><expr><operator>-</operator><name>steps</name></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function_decl><type><name>VLC_API</name> <name>int</name></type>

<name>vlc_player_aout_IsMuted</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>int</name></type>

<name>vlc_player_aout_Mute</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>mute</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type>

<name>vlc_player_aout_ToggleMute</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>vlc_player_aout_Mute</name><argument_list>(<argument><expr><name>player</name></expr></argument>,

<argument><expr><operator>!</operator><call><name>vlc_player_aout_IsMuted</name><argument_list>(<argument><expr><name>player</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function_decl><type><name>VLC_API</name> <name>int</name></type>

<name>vlc_player_aout_EnableFilter</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>add</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><name><name>struct</name> <name>vlc_player_vout_listener_id</name></name></type> <name>vlc_player_vout_listener_id</name>;</typedef>

<enum>enum <name>vlc_player_vout_action</name>

<block>{

<decl><name>VLC_PLAYER_VOUT_STARTED</name></decl>,

<decl><name>VLC_PLAYER_VOUT_STOPPED</name></decl>,

}</block>;</enum>

<struct>struct <name>vlc_player_vout_cbs</name>

<block>{

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_fullscreen_changed</name>)<parameter_list>(<parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type><name>vout</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enabled</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_wallpaper_mode_changed</name>)<parameter_list>(<parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type><name>vout</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enabled</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

}</block>;</struct>

<function_decl><type><name>VLC_API</name> <name>vout_thread_t</name> <modifier>*</modifier></type>

<name>vlc_player_vout_Hold</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>vout_thread_t</name> <modifier>*</modifier><modifier>*</modifier></type>

<name>vlc_player_vout_HoldAll</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>count</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>vlc_player_vout_listener_id</name> <modifier>*</modifier></type>

<name>vlc_player_vout_AddListener</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_vout_cbs</name></name> <modifier>*</modifier></type><name>cbs</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbs_data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_vout_RemoveListener</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name>vlc_player_vout_listener_id</name> <modifier>*</modifier></type><name>listener_id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>bool</name></type>

<name>vlc_player_vout_IsFullscreen</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_vout_SetFullscreen</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enabled</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>

<name>vlc_player_vout_ToggleFullscreen</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_player_vout_SetFullscreen</name><argument_list>(<argument><expr><name>player</name></expr></argument>,

<argument><expr><operator>!</operator><call><name>vlc_player_vout_IsFullscreen</name><argument_list>(<argument><expr><name>player</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function_decl><type><name>VLC_API</name> <name>bool</name></type>

<name>vlc_player_vout_IsWallpaperModeEnabled</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_vout_SetWallpaperModeEnabled</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enabled</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>

<name>vlc_player_vout_ToggleWallpaperMode</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_player_vout_SetWallpaperModeEnabled</name><argument_list>(<argument><expr><name>player</name></expr></argument>,

<argument><expr><operator>!</operator><call><name>vlc_player_vout_IsWallpaperModeEnabled</name><argument_list>(<argument><expr><name>player</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_vout_Snapshot</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_osd_Message</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><name><name>struct</name> <name>vlc_player_listener_id</name></name></type> <name>vlc_player_listener_id</name>;</typedef>

<enum>enum <name>vlc_player_list_action</name>

<block>{

<decl><name>VLC_PLAYER_LIST_ADDED</name></decl>,

<decl><name>VLC_PLAYER_LIST_REMOVED</name></decl>,

<decl><name>VLC_PLAYER_LIST_UPDATED</name></decl>,

}</block>;</enum>

<struct>struct <name>vlc_player_cbs</name>

<block>{

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_current_media_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name>input_item_t</name> <modifier>*</modifier></type><name>new_media</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_state_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>vlc_player_state</name></name></type> <name>new_state</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_error_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>vlc_player_error</name></name></type> <name>error</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_buffering_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name>float</name></type> <name>new_buffering</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_rate_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name>float</name></type> <name>new_rate</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_capabilities_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>old_caps</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>new_caps</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_position_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>new_time</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>new_pos</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_length_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>new_length</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_track_list_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>vlc_player_list_action</name></name></type> <name>action</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_track</name></name> <modifier>*</modifier></type><name>track</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_track_selection_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>unselected_id</name></decl></parameter>, <parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>selected_id</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_track_delay_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>es_id</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>delay</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_program_list_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>vlc_player_list_action</name></name></type> <name>action</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_program</name></name> <modifier>*</modifier></type><name>prgm</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_program_selection_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>unselected_id</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>selected_id</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_titles_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name>vlc_player_title_list</name> <modifier>*</modifier></type><name>titles</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_title_selection_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_title</name></name> <modifier>*</modifier></type><name>new_title</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>new_idx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_chapter_selection_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_title</name></name> <modifier>*</modifier></type><name>title</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>title_idx</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_chapter</name></name> <modifier>*</modifier></type><name>new_chapter</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>new_chapter_idx</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_teletext_menu_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>has_teletext_menu</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_teletext_enabled_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>enabled</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_teletext_page_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name></type> <name>new_page</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_teletext_transparency_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>enabled</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_category_delay_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>es_format_category_e</name></name></type> <name>cat</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>new_delay</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_associated_subs_fps_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name>float</name></type> <name>subs_fps</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_renderer_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name>vlc_renderer_item_t</name> <modifier>*</modifier></type><name>new_item</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_recording_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>recording</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_signal_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name>float</name></type> <name>quality</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>strength</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_statistics_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>input_stats_t</name></name> <modifier>*</modifier></type><name>stats</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_atobloop_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>vlc_player_abloop</name></name></type> <name>new_state</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>time</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>pos</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_media_stopped_action_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>vlc_player_media_stopped_action</name></name></type> <name>new_action</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_media_meta_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name>input_item_t</name> <modifier>*</modifier></type><name>media</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_media_epg_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name>input_item_t</name> <modifier>*</modifier></type><name>media</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_media_subitems_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name>input_item_t</name> <modifier>*</modifier></type><name>media</name></decl></parameter>, <parameter><decl><type><name>input_item_node_t</name> <modifier>*</modifier></type><name>new_subitems</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_vout_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>vlc_player_vout_action</name></name></type> <name>action</name></decl></parameter>, <parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type><name>vout</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>vlc_vout_order</name></name></type> <name>order</name></decl></parameter>, <parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>es_id</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_cork_changed</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>cork_count</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_playback_restore_queried</name>)<parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

}</block>;</struct>

<function_decl><type><name>VLC_API</name> <name>vlc_player_listener_id</name> <modifier>*</modifier></type>

<name>vlc_player_AddListener</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_cbs</name></name> <modifier>*</modifier></type><name>cbs</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbs_data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_RemoveListener</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><name>vlc_player_listener_id</name> <modifier>*</modifier></type><name>listener_id</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><name><name>struct</name> <name>vlc_player_timer_id</name></name></type> <name>vlc_player_timer_id</name>;</typedef>

<struct>struct <name>vlc_player_timer_point</name>

<block>{

<decl_stmt><decl><type><name>float</name></type> <name>position</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>rate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>ts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>system_date</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>vlc_player_timer_smpte_timecode</name>

<block>{

<decl_stmt><decl><type><name>unsigned</name></type> <name>hours</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>minutes</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>seconds</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>frames</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>frame_resolution</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>drop_frame</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>vlc_player_timer_cbs</name>

<block>{

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_update</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_timer_point</name></name> <modifier>*</modifier></type><name>value</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_discontinuity</name>)<parameter_list>(<parameter><decl><type><name>vlc_tick_t</name></type> <name>system_date</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

}</block>;</struct>

<struct>struct <name>vlc_player_timer_smpte_cbs</name>

<block>{

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_update</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_timer_smpte_timecode</name></name> <modifier>*</modifier></type><name>tc</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

}</block>;</struct>

<function_decl><type><name>VLC_API</name> <name>vlc_player_timer_id</name> <modifier>*</modifier></type>

<name>vlc_player_AddTimer</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>min_period</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_timer_cbs</name></name> <modifier>*</modifier></type><name>cbs</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>vlc_player_timer_id</name> <modifier>*</modifier></type>

<name>vlc_player_AddSmpteTimer</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_timer_smpte_cbs</name></name> <modifier>*</modifier></type><name>cbs</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type>

<name>vlc_player_RemoveTimer</name><parameter_list>(<parameter><decl><type><name>vlc_player_t</name> <modifier>*</modifier></type><name>player</name></decl></parameter>, <parameter><decl><type><name>vlc_player_timer_id</name> <modifier>*</modifier></type><name>timer</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>int</name></type>

<name>vlc_player_timer_point_Interpolate</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_timer_point</name></name> <modifier>*</modifier></type><name>point</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>system_now</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name> <modifier>*</modifier></type><name>out_ts</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>out_pos</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>vlc_tick_t</name></type>

<name>vlc_player_timer_point_GetNextIntervalDate</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_player_timer_point</name></name> <modifier>*</modifier></type><name>point</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>system_now</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>interpolated_ts</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>next_interval</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
