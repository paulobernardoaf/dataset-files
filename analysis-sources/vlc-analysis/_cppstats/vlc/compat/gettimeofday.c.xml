<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\compat\gettimeofday.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;config.h&gt;</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;winsock2.h&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>__int64</name></type> <name>epoch</name> <init>= <expr><literal type="number">116444736000000000</literal></expr></init></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>gettimeofday</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>timeval</name></name> <modifier>*</modifier></type> <name>tp</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>timezone</name></name> <modifier>*</modifier></type> <name>tzp</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>tzp</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>FILETIME</name></type> <name>file_time</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>SYSTEMTIME</name></type> <name>system_time</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ULARGE_INTEGER</name></type> <name>ularge</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetSystemTime</name><argument_list>(<argument><expr><operator>&amp;</operator><name>system_time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SystemTimeToFileTime</name><argument_list>(<argument><expr><operator>&amp;</operator><name>system_time</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>file_time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ularge</name><operator>.</operator><name>LowPart</name></name> <operator>=</operator> <name><name>file_time</name><operator>.</operator><name>dwLowDateTime</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ularge</name><operator>.</operator><name>HighPart</name></name> <operator>=</operator> <name><name>file_time</name><operator>.</operator><name>dwHighDateTime</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tp</name><operator>-&gt;</operator><name>tv_sec</name></name> <operator>=</operator> <operator>(</operator><name>long</name><operator>)</operator> <operator>(</operator><operator>(</operator><name><name>ularge</name><operator>.</operator><name>QuadPart</name></name> <operator>-</operator> <name>epoch</name><operator>)</operator> <operator>/</operator> <literal type="number">10000000L</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tp</name><operator>-&gt;</operator><name>tv_usec</name></name> <operator>=</operator> <operator>(</operator><name>long</name><operator>)</operator> <operator>(</operator><name><name>system_time</name><operator>.</operator><name>wMilliseconds</name></name> <operator>*</operator> <literal type="number">1000</literal><operator>)</operator></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

</unit>
