<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\demux\oggseek.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_LIBVORBIS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vorbis/codec.h&gt;</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_demux.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ogg/ogg.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;limits.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ogg.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"oggseek.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ogg_granule.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SEGMENT_NOT_FOUND</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_PAGE_SIZE</name></cpp:macro> <cpp:value>65307</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>packetStartCoordinates</name>

<block>{

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_pos</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_pageno</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_skip</name></decl>;</decl_stmt>

}</block></struct></type> <name>packetStartCoordinates</name>;</typedef>

<function><type><name>void</name></type> <name>oggseek_index_entries_free</name> <parameter_list>( <parameter><decl><type><name>demux_index_entry_t</name> <modifier>*</modifier></type><name>idx</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_index_entry_t</name> <modifier>*</modifier></type><name>idx_next</name></decl>;</decl_stmt>

<while>while <condition>( <expr><name>idx</name> <operator>!=</operator> <name>NULL</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>idx_next</name> <operator>=</operator> <name><name>idx</name><operator>-&gt;</operator><name>p_next</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>idx</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>idx</name> <operator>=</operator> <name>idx_next</name></expr>;</expr_stmt>

</block_content>}</block></while>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>demux_index_entry_t</name> <modifier>*</modifier></type><name>index_entry_new</name><parameter_list>( <parameter><decl><type><name>void</name></type></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_index_entry_t</name> <modifier>*</modifier></type><name>idx</name> <init>= <expr><call><name>xmalloc</name><argument_list>( <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><name>demux_index_entry_t</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name>idx</name></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>idx</name><operator>-&gt;</operator><name>p_next</name></name> <operator>=</operator> <name><name>idx</name><operator>-&gt;</operator><name>p_prev</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>idx</name><operator>-&gt;</operator><name>i_pagepos_end</name></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>

<return>return <expr><name>idx</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>demux_index_entry_t</name> <modifier>*</modifier></type><name>OggSeek_IndexAdd</name> <parameter_list>( <parameter><decl><type><name>logical_stream_t</name> <modifier>*</modifier></type><name>p_stream</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>i_timestamp</name></decl></parameter>,

<parameter><decl><type><name>int64_t</name></type> <name>i_pagepos</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_index_entry_t</name> <modifier>*</modifier></type><name>idx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>demux_index_entry_t</name> <modifier>*</modifier></type><name>last_idx</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><name>p_stream</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>idx</name> <operator>=</operator> <name><name>p_stream</name><operator>-&gt;</operator><name>idx</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name>i_timestamp</name> <operator>==</operator> <name>VLC_TICK_INVALID</name> <operator>||</operator> <name>i_pagepos</name> <operator>&lt;</operator> <literal type="number">1</literal></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><name>idx</name> <operator>==</operator> <name>NULL</name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_index_entry_t</name> <modifier>*</modifier></type><name>ie</name> <init>= <expr><call><name>index_entry_new</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name>ie</name></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>ie</name><operator>-&gt;</operator><name>i_value</name></name> <operator>=</operator> <name>i_timestamp</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ie</name><operator>-&gt;</operator><name>i_pagepos</name></name> <operator>=</operator> <name>i_pagepos</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_stream</name><operator>-&gt;</operator><name>idx</name></name> <operator>=</operator> <name>ie</name></expr>;</expr_stmt>

<return>return <expr><name>ie</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<while>while <condition>( <expr><name>idx</name> <operator>!=</operator> <name>NULL</name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><name><name>idx</name><operator>-&gt;</operator><name>i_pagepos</name></name> <operator>&gt;</operator> <name>i_pagepos</name></expr> )</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>

<expr_stmt><expr><name>last_idx</name> <operator>=</operator> <name>idx</name></expr>;</expr_stmt>

<expr_stmt><expr><name>idx</name> <operator>=</operator> <name><name>idx</name><operator>-&gt;</operator><name>p_next</name></name></expr>;</expr_stmt>

</block_content>}</block></while>

<expr_stmt><expr><name>idx</name> <operator>=</operator> <call><name>index_entry_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name>idx</name></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><name>last_idx</name> <operator>!=</operator> <name>NULL</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>idx</name><operator>-&gt;</operator><name>p_next</name></name> <operator>=</operator> <name><name>last_idx</name><operator>-&gt;</operator><name>p_next</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>last_idx</name><operator>-&gt;</operator><name>p_next</name></name> <operator>=</operator> <name>idx</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>idx</name><operator>-&gt;</operator><name>p_prev</name></name> <operator>=</operator> <name>last_idx</name></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><name><name>idx</name><operator>-&gt;</operator><name>p_next</name></name> <operator>=</operator> <name><name>p_stream</name><operator>-&gt;</operator><name>idx</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_stream</name><operator>-&gt;</operator><name>idx</name></name> <operator>=</operator> <name>idx</name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>( <expr><name><name>idx</name><operator>-&gt;</operator><name>p_next</name></name> <operator>!=</operator> <name>NULL</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>idx</name><operator>-&gt;</operator><name>p_next</name><operator>-&gt;</operator><name>p_prev</name></name> <operator>=</operator> <name>idx</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>idx</name><operator>-&gt;</operator><name>i_value</name></name> <operator>=</operator> <name>i_timestamp</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>idx</name><operator>-&gt;</operator><name>i_pagepos</name></name> <operator>=</operator> <name>i_pagepos</name></expr>;</expr_stmt>

<return>return <expr><name>idx</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>OggSeekIndexFind</name> <parameter_list>( <parameter><decl><type><name>logical_stream_t</name> <modifier>*</modifier></type><name>p_stream</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>i_timestamp</name></decl></parameter>,

<parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>pi_pos_lower</name></decl></parameter>, <parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>pi_pos_upper</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_index_entry_t</name> <modifier>*</modifier></type><name>idx</name> <init>= <expr><name><name>p_stream</name><operator>-&gt;</operator><name>idx</name></name></expr></init></decl>;</decl_stmt>

<while>while <condition>( <expr><name>idx</name> <operator>!=</operator> <name>NULL</name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><name><name>idx</name><operator>-&gt;</operator><name>i_value</name></name> <operator>&lt;=</operator> <name>i_timestamp</name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name><name>idx</name><operator>-&gt;</operator><name>p_next</name></name></expr> )</condition> 

<block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>pi_pos_lower</name> <operator>=</operator> <name><name>idx</name><operator>-&gt;</operator><name>i_pagepos</name></name></expr>;</expr_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><name><name>idx</name><operator>-&gt;</operator><name>p_next</name><operator>-&gt;</operator><name>i_value</name></name> <operator>&gt;</operator> <name>i_timestamp</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>pi_pos_lower</name> <operator>=</operator> <name><name>idx</name><operator>-&gt;</operator><name>i_pagepos</name></name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>pi_pos_upper</name> <operator>=</operator> <name><name>idx</name><operator>-&gt;</operator><name>p_next</name><operator>-&gt;</operator><name>i_pagepos</name></name></expr>;</expr_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>idx</name> <operator>=</operator> <name><name>idx</name><operator>-&gt;</operator><name>p_next</name></name></expr>;</expr_stmt>

</block_content>}</block></while>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>seek_byte</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>i_pos</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator> <call><name>vlc_stream_Seek</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><name>i_pos</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>ogg_sync_reset</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>oy</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name> <operator>=</operator> <name>i_pos</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_page_waiting</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int64_t</name></type> <name>get_data</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>i_bytes_to_read</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>buf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_result</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_total_length</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name> <operator>+</operator> <name>i_bytes_to_read</name> <operator>&gt;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_total_length</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>i_bytes_to_read</name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_total_length</name></name> <operator>-</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name>i_bytes_to_read</name> <operator>&lt;=</operator> <literal type="number">0</literal></expr> )</condition> <block>{<block_content>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>i_bytes_to_read</name> <operator>=</operator> <call><name>__MIN</name><argument_list>( <argument><expr><name>i_bytes_to_read</name></expr></argument>, <argument><expr><name>INT_MAX</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>seek_byte</name> <argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>buf</name> <operator>=</operator> <call><name>ogg_sync_buffer</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>oy</name></name></expr></argument>, <argument><expr><name>i_bytes_to_read</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_result</name> <operator>=</operator> <call><name>vlc_stream_Read</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><name>i_bytes_to_read</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ogg_sync_wrote</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>oy</name></name></expr></argument>, <argument><expr><name>i_result</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>i_result</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>Oggseek_ProbeEnd</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ogg_stream_state</name></type> <name>os</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ogg_sync_state</name></type> <name>oy</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ogg_page</name></type> <name>page</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_pos</name></decl>, <decl><type ref="prev"/><name>i_startpos</name></decl>, <decl><type ref="prev"/><name>i_result</name></decl>, <decl><type ref="prev"/><name>i_granule</name></decl>, <decl><type ref="prev"/><name>i_lowerbound</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_length</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_backup_pos</name> <init>= <expr><call><name>vlc_stream_Tell</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_upperbound</name> <init>= <expr><call><name>stream_Size</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_backoffset</name> <init>= <expr><name>OGGSEEK_BYTES_TO_READ</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><name>OGGSEEK_BYTES_TO_READ</name> <operator>&lt;</operator> <name>UINT_MAX</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>buffer</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ogg_stream_init</name><argument_list>( <argument><expr><operator>&amp;</operator><name>os</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ogg_sync_init</name><argument_list>( <argument><expr><operator>&amp;</operator><name>oy</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_lowerbound</name> <operator>=</operator> <call><name>stream_Size</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument> )</argument_list></call> <operator>-</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_streams</name></name> <operator>*</operator> <name>MAX_PAGE_SIZE</name> <operator>*</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>i_lowerbound</name> <operator>=</operator> <call><name>__MAX</name><argument_list>( <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>i_lowerbound</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_pos</name> <operator>=</operator> <name>i_startpos</name> <operator>=</operator> <call><name>__MAX</name><argument_list>( <argument><expr><name>i_lowerbound</name></expr></argument>, <argument><expr><name>i_upperbound</name> <operator>-</operator> <name>i_backoffset</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><call><name>vlc_stream_Seek</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><name>i_pos</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>ogg_sync_clear</name><argument_list>( <argument><expr><operator>&amp;</operator><name>oy</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ogg_stream_clear</name><argument_list>( <argument><expr><operator>&amp;</operator><name>os</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<while>while<condition>( <expr><name>i_pos</name> <operator>&gt;=</operator> <name>i_lowerbound</name></expr> )</condition>

<block>{<block_content>

<while>while<condition>( <expr><name>i_pos</name> <operator>&lt;</operator> <name>i_upperbound</name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><name><name>oy</name><operator>.</operator><name>unsynced</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>i_result</name> <operator>=</operator> <call><name>ogg_sync_pageseek</name><argument_list>( <argument><expr><operator>&amp;</operator><name>oy</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>page</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>buffer</name> <operator>=</operator> <call><name>ogg_sync_buffer</name><argument_list>( <argument><expr><operator>&amp;</operator><name>oy</name></expr></argument>, <argument><expr><name>OGGSEEK_BYTES_TO_READ</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name>buffer</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content> <goto>goto <name>clean</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><name>i_result</name> <operator>=</operator> <call><name>vlc_stream_Read</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>*</operator><operator>)</operator> <name>buffer</name></expr></argument>, <argument><expr><name>OGGSEEK_BYTES_TO_READ</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name>i_result</name> <operator>&lt;</operator> <literal type="number">1</literal></expr> )</condition><block type="pseudo"><block_content> <goto>goto <name>clean</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><name>i_pos</name> <operator>+=</operator> <name>i_result</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ogg_sync_wrote</name><argument_list>( <argument><expr><operator>&amp;</operator><name>oy</name></expr></argument>, <argument><expr><name>i_result</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<while>while<condition>( <expr><call><name>ogg_sync_pageout</name><argument_list>( <argument><expr><operator>&amp;</operator><name>oy</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>page</name></expr></argument> )</argument_list></call> <operator>==</operator> <literal type="number">1</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>i_granule</name> <operator>=</operator> <call><name>ogg_page_granulepos</name><argument_list>( <argument><expr><operator>&amp;</operator><name>page</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name>i_granule</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition><block type="pseudo"><block_content> <continue>continue;</continue></block_content></block></if></if_stmt>

<for>for <control>( <init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_streams</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>pp_stream</name><index>[<expr><name>i</name></expr>]</index></name><operator>-&gt;</operator><name>i_serial_no</name> <operator>!=</operator> <call><name>ogg_page_serialno</name><argument_list>( <argument><expr><operator>&amp;</operator><name>page</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt>

<expr_stmt><expr><name>i_length</name> <operator>=</operator> <call><name>Ogg_GranuleToTime</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>pp_stream</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>i_granule</name></expr></argument>,

<argument><expr><operator>!</operator><name><name>p_sys</name><operator>-&gt;</operator><name>pp_stream</name><index>[<expr><name>i</name></expr>]</index></name><operator>-&gt;</operator><name>b_contiguous</name></expr></argument>, <argument><expr><name>false</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i_length</name> <operator>!=</operator> <name>VLC_TICK_INVALID</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_length</name></name> <operator>=</operator> <call><name>__MAX</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_length</name></name></expr></argument>, <argument><expr><call><name>SEC_FROM_VLC_TICK</name><argument_list>(<argument><expr><name>i_length</name> <operator>-</operator> <name>VLC_TICK_0</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>clean</name>;</goto>

</block_content>}</block></if></if_stmt>

<break>break;</break>

</block_content>}</block></for>

</block_content>}</block></while>

</block_content>}</block></while>

<if_stmt><if>if <condition>( <expr><name>i_backoffset</name> <operator>&lt;=</operator> <operator>(</operator> <name>UINT_MAX</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal> <operator>)</operator></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>i_backoffset</name> <operator>&lt;&lt;=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>i_startpos</name> <operator>=</operator> <name>i_upperbound</name> <operator>-</operator> <name>i_backoffset</name></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><name>i_startpos</name> <operator>-=</operator> <name>i_backoffset</name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>i_pos</name> <operator>=</operator> <name>i_startpos</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><call><name>vlc_stream_Seek</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><name>i_pos</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

</block_content>}</block></while>

<label><name>clean</name>:</label>

<expr_stmt><expr><call><name>vlc_stream_Seek</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><name>i_backup_pos</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ogg_sync_clear</name><argument_list>( <argument><expr><operator>&amp;</operator><name>oy</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ogg_stream_clear</name><argument_list>( <argument><expr><operator>&amp;</operator><name>os</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int64_t</name></type> <name>find_first_page_granule</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>,

<parameter><decl><type><name>int64_t</name></type> <name>i_pos1</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>i_pos2</name></decl></parameter>,

<parameter><decl><type><name>logical_stream_t</name> <modifier>*</modifier></type><name>p_stream</name></decl></parameter>,

<parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>i_granulepos</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_result</name></decl>;</decl_stmt>

<expr_stmt><expr><operator>*</operator><name>i_granulepos</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_bytes_to_read</name> <init>= <expr><name>i_pos2</name> <operator>-</operator> <name>i_pos1</name> <operator>+</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_bytes_read</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_packets_checked</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ogg_packet</name></type> <name>op</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>seek_byte</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>i_pos1</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name>i_pos1</name> <operator>==</operator> <name><name>p_stream</name><operator>-&gt;</operator><name>i_data_start</name></name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><name>i_bytes_to_read</name> <operator>&gt;</operator> <name>OGGSEEK_BYTES_TO_READ</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>i_bytes_to_read</name> <operator>=</operator> <name>OGGSEEK_BYTES_TO_READ</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<while>while <condition>( <expr><literal type="number">1</literal></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name> <operator>&gt;=</operator> <name>i_pos2</name></expr> )</condition>

<block>{<block_content>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator> <operator>(</operator> <name>i_bytes_read</name> <operator>=</operator> <call><name>get_data</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>i_bytes_to_read</name></expr></argument> )</argument_list></call> <operator>)</operator></expr> )</condition>

<block>{<block_content>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>i_bytes_to_read</name> <operator>=</operator> <name>OGGSEEK_BYTES_TO_READ</name></expr>;</expr_stmt>

<expr_stmt><expr><name>i_result</name> <operator>=</operator> <call><name>ogg_sync_pageseek</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>oy</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>current_page</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name>i_result</name> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name> <operator>-=</operator> <name>i_result</name></expr>;</expr_stmt>

<expr_stmt><expr><name>i_pos1</name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name></expr>;</expr_stmt>

<continue>continue;</continue>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><name>i_result</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>||</operator> <operator>(</operator> <name>i_result</name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>oy</name><operator>.</operator><name>fill</name></name> <operator>&gt;</operator> <literal type="number">3</literal> <operator>&amp;&amp;</operator>

<operator>!</operator> <call><name>strncmp</name><argument_list>( <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><name><name>p_sys</name><operator>-&gt;</operator><name>oy</name><operator>.</operator><name>data</name></name></expr></argument>, <argument><expr><literal type="string">"OggS"</literal></expr></argument> , <argument><expr><literal type="number">4</literal></expr></argument> )</argument_list></call> <operator>)</operator></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>i_pos1</name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name> <operator>+=</operator> <name>i_bytes_read</name></expr>;</expr_stmt>

</block_content>}</block></while><empty_stmt>;</empty_stmt>

<expr_stmt><expr><call><name>seek_byte</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ogg_stream_reset</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_stream</name><operator>-&gt;</operator><name>os</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<while>while<condition>( <expr><literal type="number">1</literal></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name> <operator>&gt;=</operator> <name>i_pos2</name></expr> )</condition>

<block>{<block_content>

<return>return <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_page_waiting</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator> <operator>(</operator> <name>i_result</name> <operator>=</operator> <call><name>oggseek_read_page</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument> )</argument_list></call> <operator>)</operator></expr> )</condition>

<block>{<block_content>

<return>return <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><call><name>ogg_stream_pagein</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_stream</name><operator>-&gt;</operator><name>os</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>current_page</name></name></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name> <operator>+=</operator> <name>i_result</name></expr>;</expr_stmt>

<continue>continue;</continue>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><call><name>ogg_page_granulepos</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>current_page</name></name></expr></argument> )</argument_list></call> <operator>&lt;=</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name> <operator>+=</operator> <name>i_result</name></expr>;</expr_stmt>

<continue>continue;</continue>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>i_packets_checked</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<while>while <condition>( <expr><call><name>ogg_stream_packetout</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_stream</name><operator>-&gt;</operator><name>os</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>op</name></expr></argument> )</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>i_packets_checked</name><operator>++</operator></expr>;</expr_stmt>

</block_content>}</block></while>

<if_stmt><if>if <condition>( <expr><name>i_packets_checked</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>i_granulepos</name> <operator>=</operator> <call><name>ogg_page_granulepos</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>current_page</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>i_pos1</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name> <operator>+=</operator> <name>i_result</name></expr>;</expr_stmt>

<expr_stmt><expr><name>i_pos1</name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name></expr>;</expr_stmt>

</block_content>}</block></while>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>OggSeekToPacket</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name>logical_stream_t</name> <modifier>*</modifier></type><name>p_stream</name></decl></parameter>,

<parameter><decl><type><name>int64_t</name></type> <name>i_granulepos</name></decl></parameter>, <parameter><decl><type><name>packetStartCoordinates</name> <modifier>*</modifier></type><name>p_lastpacketcoords</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>b_exact</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ogg_packet</name></type> <name>op</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><call><name>ogg_stream_pagein</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_stream</name><operator>-&gt;</operator><name>os</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>current_page</name></name></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_page_waiting</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>itarget_frame</name> <init>= <expr><call><name>Ogg_GetKeyframeGranule</name><argument_list>( <argument><expr><name>p_stream</name></expr></argument>, <argument><expr><name>i_granulepos</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>iframe</name> <init>= <expr><call><name>Ogg_GetKeyframeGranule</name><argument_list>( <argument><expr><name>p_stream</name></expr></argument>, <argument><expr><call><name>ogg_page_granulepos</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>current_page</name></name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator> <call><name>ogg_page_continued</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>current_page</name></name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_lastpacketcoords</name><operator>-&gt;</operator><name>i_pageno</name></name> <operator>=</operator> <call><name>ogg_page_pageno</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>current_page</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_lastpacketcoords</name><operator>-&gt;</operator><name>i_pos</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_lastpacketcoords</name><operator>-&gt;</operator><name>i_skip</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><name>b_exact</name> <operator>&amp;&amp;</operator> <name>iframe</name> <operator>&gt;</operator> <name>itarget_frame</name></expr> )</condition>

<block>{<block_content>

<while>while<condition>( <expr><call><name>ogg_stream_packetout</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_stream</name><operator>-&gt;</operator><name>os</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>op</name></expr></argument> )</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition> <block>{<block_content/>}</block></while><empty_stmt>;</empty_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_page_waiting</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<while>while<condition>( <expr><call><name>ogg_stream_packetpeek</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_stream</name><operator>-&gt;</operator><name>os</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>op</name></expr></argument> )</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><operator>(</operator> <operator>!</operator><name>b_exact</name> <operator>||</operator> <name>itarget_frame</name> <operator>==</operator> <name>iframe</name> <operator>)</operator> <operator>&amp;&amp;</operator> <call><name>Ogg_IsKeyFrame</name><argument_list>( <argument><expr><name>p_stream</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>op</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<macro><name>OggDebug</name><argument_list>(

<argument>msg_Dbg(p_demux, <literal type="string">"** KEYFRAME **"</literal> );

msg_Dbg(p_demux, <literal type="string">"** KEYFRAME PACKET START pageno %"</literal>PRId64<literal type="string">" OFFSET %"</literal>PRId64<literal type="string">" skip %"</literal>PRId64<literal type="string">" **"</literal>, p_lastpacketcoords-&gt;i_pageno, p_lastpacketcoords-&gt;i_pos, p_lastpacketcoords-&gt;i_skip );

msg_Dbg(p_demux, <literal type="string">"KEYFRAME PACKET IS at pageno %"</literal>PRId64<literal type="string">" OFFSET %"</literal>PRId64<literal type="string">" with skip %d packet (%d / %d) "</literal>,

ogg_page_pageno( &amp;p_sys-&gt;current_page ), p_sys-&gt;i_input_position, i, i+<literal type="number">1</literal>, ogg_page_packets( &amp;p_sys-&gt;current_page ) );

DemuxDebug( p_sys-&gt;b_seeked = true; )</argument>

)</argument_list></macro><empty_stmt>;</empty_stmt>

<if_stmt><if>if <condition>( <expr><name>i</name> <operator>!=</operator> <literal type="number">0</literal></expr> )</condition> 

<block>{<block_content>

<expr_stmt><expr><name><name>p_lastpacketcoords</name><operator>-&gt;</operator><name>i_pageno</name></name> <operator>=</operator> <call><name>ogg_page_pageno</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>current_page</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_lastpacketcoords</name><operator>-&gt;</operator><name>i_pos</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_lastpacketcoords</name><operator>-&gt;</operator><name>i_skip</name></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_lastpacketcoords</name><operator>-&gt;</operator><name>i_pageno</name></name> <operator>=</operator> <call><name>ogg_page_pageno</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>current_page</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_lastpacketcoords</name><operator>-&gt;</operator><name>i_pos</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_lastpacketcoords</name><operator>-&gt;</operator><name>i_skip</name></name> <operator>=</operator> <name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>i</name><operator>++</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ogg_stream_packetout</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_stream</name><operator>-&gt;</operator><name>os</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>op</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></while>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int64_t</name></type> <name>OggForwardSeekToFrame</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>i_pos1</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>i_pos2</name></decl></parameter>,

<parameter><decl><type><name>logical_stream_t</name> <modifier>*</modifier></type><name>p_stream</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>i_granulepos</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b_fastseek</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_result</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_bytes_to_read</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_bytes_read</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>i_bytes_to_read</name> <operator>=</operator> <name>i_pos2</name> <operator>-</operator> <name>i_pos1</name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>seek_byte</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>i_pos1</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name>i_bytes_to_read</name> <operator>&gt;</operator> <name>OGGSEEK_BYTES_TO_READ</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>i_bytes_to_read</name> <operator>=</operator> <name>OGGSEEK_BYTES_TO_READ</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<macro><name>OggDebug</name><argument_list>(

<argument>msg_Dbg( p_demux, <literal type="string">"Probing Fwd %"</literal>PRId64<literal type="string">" %"</literal>PRId64<literal type="string">" for granule %"</literal>PRId64,

i_pos1, i_pos2, i_granulepos );</argument>

)</argument_list></macro><empty_stmt>;</empty_stmt>

<while>while <condition>( <expr><literal type="number">1</literal></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name> <operator>&gt;=</operator> <name>i_pos2</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>SEGMENT_NOT_FOUND</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator> <operator>(</operator> <name>i_bytes_read</name> <operator>=</operator> <call><name>get_data</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>i_bytes_to_read</name></expr></argument> )</argument_list></call> <operator>)</operator></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>SEGMENT_NOT_FOUND</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>i_bytes_to_read</name> <operator>=</operator> <name>OGGSEEK_BYTES_TO_READ</name></expr>;</expr_stmt>

<expr_stmt><expr><name>i_result</name> <operator>=</operator> <call><name>ogg_sync_pageseek</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>oy</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>current_page</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name>i_result</name> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name> <operator>-=</operator> <name>i_result</name></expr>;</expr_stmt>

<expr_stmt><expr><name>i_pos1</name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name></expr>;</expr_stmt>

<continue>continue;</continue>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><name>i_result</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>||</operator> <operator>(</operator> <name>i_result</name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>oy</name><operator>.</operator><name>fill</name></name> <operator>&gt;</operator> <literal type="number">3</literal> <operator>&amp;&amp;</operator>

<operator>!</operator> <call><name>strncmp</name><argument_list>( <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><name><name>p_sys</name><operator>-&gt;</operator><name>oy</name><operator>.</operator><name>data</name></name></expr></argument>, <argument><expr><literal type="string">"OggS"</literal></expr></argument> , <argument><expr><literal type="number">4</literal></expr></argument> )</argument_list></call> <operator>)</operator></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>i_pos1</name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name> <operator>+=</operator> <name>i_bytes_read</name></expr>;</expr_stmt>

</block_content>}</block></while><empty_stmt>;</empty_stmt>

<expr_stmt><expr><call><name>seek_byte</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ogg_stream_reset</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_stream</name><operator>-&gt;</operator><name>os</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>ogg_packet</name></type> <name>op</name></decl>;</decl_stmt>

<while>while<condition>( <expr><call><name>ogg_stream_packetout</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_stream</name><operator>-&gt;</operator><name>os</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>op</name></expr></argument> )</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition> <block>{<block_content/>}</block></while><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name>packetStartCoordinates</name></type> <name>lastpacket</name> <init>= <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<while>while<condition>( <expr><literal type="number">1</literal></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name> <operator>&gt;=</operator> <name>i_pos2</name></expr> )</condition>

<block>{<block_content>

<break>break;</break>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_page_waiting</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator> <operator>(</operator> <name>i_result</name> <operator>=</operator> <call><name>oggseek_read_page</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument> )</argument_list></call> <operator>)</operator></expr> )</condition>

<block>{<block_content>

<break>break;</break>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><name><name>p_stream</name><operator>-&gt;</operator><name>os</name><operator>.</operator><name>serialno</name></name> <operator>!=</operator> <call><name>ogg_page_serialno</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>current_page</name></name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name> <operator>+=</operator> <name>i_result</name></expr>;</expr_stmt>

<continue>continue;</continue>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><call><name>OggSeekToPacket</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>p_stream</name></expr></argument>, <argument><expr><name>i_granulepos</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>lastpacket</name></expr></argument>, <argument><expr><name>b_fastseek</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name> <operator>=</operator> <name><name>lastpacket</name><operator>.</operator><name>i_pos</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_stream</name><operator>-&gt;</operator><name>i_skip_frames</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<return>return <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name> <operator>+=</operator> <name>i_result</name></expr>;</expr_stmt>

</block_content>}</block></while>

<return>return <expr><name>SEGMENT_NOT_FOUND</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int64_t</name></type> <name>OggBackwardSeekToFrame</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>i_pos1</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>i_pos2</name></decl></parameter>,

<parameter><decl><type><name>logical_stream_t</name> <modifier>*</modifier></type><name>p_stream</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>i_granulepos</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_result</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_offset</name> <init>= <expr><call><name>__MAX</name><argument_list>( <argument><expr><literal type="number">1</literal> <operator>+</operator> <operator>(</operator> <operator>(</operator><name>i_pos2</name> <operator>-</operator> <name>i_pos1</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">1</literal> <operator>)</operator></expr></argument>, <argument><expr><name>OGGSEEK_BYTES_TO_READ</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<label><name>restart</name>:</label>

<macro><name>OggDebug</name><argument_list>(

<argument>msg_Dbg( p_demux, <literal type="string">"Probing Back %"</literal>PRId64<literal type="string">" %"</literal>PRId64<literal type="string">" for granule %"</literal>PRId64,

i_pos1, i_pos2, i_granulepos );</argument>

)</argument_list></macro><empty_stmt>;</empty_stmt>

<expr_stmt><expr><name>i_result</name> <operator>=</operator> <call><name>OggForwardSeekToFrame</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>i_pos1</name></expr></argument>, <argument><expr><name>i_pos2</name></expr></argument>, <argument><expr><name>p_stream</name></expr></argument>,

<argument><expr><name>i_granulepos</name></expr></argument>, <argument><expr><name>true</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name>i_result</name> <operator>==</operator> <name>SEGMENT_NOT_FOUND</name> <operator>&amp;&amp;</operator> <name>i_pos1</name> <operator>&gt;</operator> <name><name>p_stream</name><operator>-&gt;</operator><name>i_data_start</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>i_pos1</name> <operator>=</operator> <call><name>__MAX</name><argument_list>( <argument><expr><name><name>p_stream</name><operator>-&gt;</operator><name>i_data_start</name></name></expr></argument>, <argument><expr><name>i_pos1</name> <operator>-</operator> <name>i_offset</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>restart</name>;</goto>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>i_result</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int64_t</name></type> <name>OggBisectSearchByTime</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name>logical_stream_t</name> <modifier>*</modifier></type><name>p_stream</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>i_targettime</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>i_pos_lower</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>i_pos_upper</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_start_pos</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_end_pos</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_segsize</name></decl>;</decl_stmt>

<struct>struct

<block>{

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_pos</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_timestamp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_granule</name></decl>;</decl_stmt>

}</block> <decl><name>bestlower</name> <init>= <expr><block>{ <expr><name><name>p_stream</name><operator>-&gt;</operator><name>i_data_start</name></name></expr>, <expr><name>VLC_TICK_INVALID</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr></init></decl>,

<decl><type ref="prev"/><name>current</name> <init>= <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>VLC_TICK_INVALID</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr></init></decl>,

<decl><type ref="prev"/><name>lowestupper</name> <init>= <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>VLC_TICK_INVALID</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr></init></decl>;</struct>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>i_pos_lower</name> <operator>=</operator> <call><name>__MAX</name><argument_list>( <argument><expr><name>i_pos_lower</name></expr></argument>, <argument><expr><name><name>p_stream</name><operator>-&gt;</operator><name>i_data_start</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_pos_upper</name> <operator>=</operator> <call><name>__MIN</name><argument_list>( <argument><expr><name>i_pos_upper</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_total_length</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name>i_pos_upper</name> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>i_pos_upper</name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_total_length</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>i_start_pos</name> <operator>=</operator> <name>i_pos_lower</name></expr>;</expr_stmt>

<expr_stmt><expr><name>i_end_pos</name> <operator>=</operator> <name>i_pos_upper</name></expr>;</expr_stmt>

<expr_stmt><expr><name>i_segsize</name> <operator>=</operator> <operator>(</operator> <name>i_end_pos</name> <operator>-</operator> <name>i_start_pos</name> <operator>+</operator> <literal type="number">1</literal> <operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>i_start_pos</name> <operator>+=</operator> <name>i_segsize</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>OggDebug</name><argument_list>( <argument><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Bisecting for time=%"</literal><name>PRId64</name><literal type="string">" between %"</literal><name>PRId64</name><literal type="string">" and %"</literal><name>PRId64</name></expr></argument>,

<argument><expr><name>i_targettime</name></expr></argument>, <argument><expr><name>i_pos_lower</name></expr></argument>, <argument><expr><name>i_pos_upper</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<do>do

<block>{<block_content>

<expr_stmt><expr><name>i_start_pos</name> <operator>=</operator> <call><name>__MAX</name><argument_list>( <argument><expr><name>i_start_pos</name></expr></argument>, <argument><expr><name>i_pos_lower</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_end_pos</name> <operator>=</operator> <call><name>__MIN</name><argument_list>( <argument><expr><name>i_end_pos</name></expr></argument>, <argument><expr><name>i_pos_upper</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name>i_start_pos</name> <operator>&gt;=</operator> <name>i_end_pos</name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><name>i_start_pos</name> <operator>==</operator> <name>i_pos_lower</name></expr>)</condition>

<block>{<block_content>

<return>return <expr><name>i_start_pos</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>current</name><operator>.</operator><name>i_pos</name></name> <operator>=</operator> <call><name>find_first_page_granule</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>,

<argument><expr><name>i_start_pos</name></expr></argument>, <argument><expr><name>i_end_pos</name></expr></argument>,

<argument><expr><name>p_stream</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>current</name><operator>.</operator><name>i_granule</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>current</name><operator>.</operator><name>i_timestamp</name></name> <operator>=</operator> <call><name>Ogg_GranuleToTime</name><argument_list>( <argument><expr><name>p_stream</name></expr></argument>, <argument><expr><name><name>current</name><operator>.</operator><name>i_granule</name></name></expr></argument>,

<argument><expr><operator>!</operator><name><name>p_stream</name><operator>-&gt;</operator><name>b_contiguous</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name><name>current</name><operator>.</operator><name>i_timestamp</name></name> <operator>==</operator> <name>VLC_TICK_INVALID</name> <operator>&amp;&amp;</operator> <name><name>current</name><operator>.</operator><name>i_granule</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Unmatched granule. New codec ?"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>

</block_content>}</block></if>

<if type="elseif">else if <condition>( <expr><name><name>current</name><operator>.</operator><name>i_timestamp</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition> 

<block>{<block_content>

<expr_stmt><expr><name><name>current</name><operator>.</operator><name>i_timestamp</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><name><name>current</name><operator>.</operator><name>i_pos</name></name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal> <operator>&amp;&amp;</operator> <name><name>current</name><operator>.</operator><name>i_granule</name></name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><name><name>current</name><operator>.</operator><name>i_timestamp</name></name> <operator>&lt;=</operator> <name>i_targettime</name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><name><name>current</name><operator>.</operator><name>i_timestamp</name></name> <operator>&gt;</operator> <name><name>bestlower</name><operator>.</operator><name>i_timestamp</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>bestlower</name> <operator>=</operator> <name>current</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>i_start_pos</name> <operator>=</operator> <name><name>current</name><operator>.</operator><name>i_pos</name></name></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><name><name>lowestupper</name><operator>.</operator><name>i_timestamp</name></name> <operator>==</operator> <name>VLC_TICK_INVALID</name> <operator>||</operator>

<name><name>current</name><operator>.</operator><name>i_timestamp</name></name> <operator>&lt;</operator> <name><name>lowestupper</name><operator>.</operator><name>i_timestamp</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>lowestupper</name> <operator>=</operator> <name>current</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>i_start_pos</name> <operator>-=</operator> <name>i_segsize</name></expr>;</expr_stmt>

<expr_stmt><expr><name>i_end_pos</name> <operator>-=</operator> <name>i_segsize</name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><name>i_end_pos</name> <operator>-=</operator> <name>i_segsize</name></expr>;</expr_stmt>

<expr_stmt><expr><name>i_start_pos</name> <operator>-=</operator> <name>i_segsize</name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>OggDebug</name><argument_list>( <argument><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Bisect restart i_segsize=%"</literal><name>PRId64</name><literal type="string">" between %"</literal><name>PRId64</name>

<literal type="string">" and %"</literal><name>PRId64</name> <literal type="string">" bl %"</literal><name>PRId64</name><literal type="string">" lu %"</literal><name>PRId64</name></expr></argument>,

<argument><expr><name>i_segsize</name></expr></argument>, <argument><expr><name>i_start_pos</name></expr></argument>, <argument><expr><name>i_end_pos</name></expr></argument>, <argument><expr><name><name>bestlower</name><operator>.</operator><name>i_granule</name></name></expr></argument>, <argument><expr><name><name>lowestupper</name><operator>.</operator><name>i_granule</name></name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_segsize</name> <operator>=</operator> <operator>(</operator> <name>i_end_pos</name> <operator>-</operator> <name>i_start_pos</name> <operator>+</operator> <literal type="number">1</literal> <operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>i_start_pos</name> <operator>+=</operator> <name>i_segsize</name></expr>;</expr_stmt>

</block_content>}</block> while <condition>( <expr><name>i_segsize</name> <operator>&gt;</operator> <literal type="number">64</literal></expr> )</condition>;</do>

<if_stmt><if>if <condition>( <expr><name><name>bestlower</name><operator>.</operator><name>i_granule</name></name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><name><name>lowestupper</name><operator>.</operator><name>i_granule</name></name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name>bestlower</name> <operator>=</operator> <name>lowestupper</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><name><name>p_stream</name><operator>-&gt;</operator><name>b_oggds</name></name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>int64_t</name></type> <name>a</name> <init>= <expr><call><name>OggBackwardSeekToFrame</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>,

<argument><expr><call><name>__MAX</name> <argument_list>( <argument><expr><name><name>bestlower</name><operator>.</operator><name>i_pos</name></name> <operator>-</operator> <name>OGGSEEK_BYTES_TO_READ</name></expr></argument>, <argument><expr><name><name>p_stream</name><operator>-&gt;</operator><name>i_data_start</name></name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><name><name>bestlower</name><operator>.</operator><name>i_pos</name></name></expr></argument>,

<argument><expr><name>p_stream</name></expr></argument>, <argument><expr><name><name>bestlower</name><operator>.</operator><name>i_granule</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><name>a</name></expr>;</return>

</block_content>}</block></if>

<if type="elseif">else if <condition>( <expr><call><name>Ogg_GetKeyframeGranule</name><argument_list>( <argument><expr><name>p_stream</name></expr></argument>, <argument><expr><name><name>bestlower</name><operator>.</operator><name>i_granule</name></name></expr></argument> )</argument_list></call> <operator>!=</operator> <name><name>bestlower</name><operator>.</operator><name>i_granule</name></name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_keyframegranule</name> <init>= <expr><call><name>Ogg_GetKeyframeGranule</name><argument_list>( <argument><expr><name>p_stream</name></expr></argument>, <argument><expr><name><name>bestlower</name><operator>.</operator><name>i_granule</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>OggDebug</name><argument_list>( <argument><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Need to reseek to keyframe (%"</literal><name>PRId64</name><literal type="string">") granule (%"</literal><name>PRId64</name><literal type="string">"!=%"</literal><name>PRId64</name><literal type="string">") to t=%"</literal><name>PRId64</name></expr></argument>,

<argument><expr><name>i_keyframegranule</name> <operator>&gt;&gt;</operator> <name><name>p_stream</name><operator>-&gt;</operator><name>i_granule_shift</name></name></expr></argument>,

<argument><expr><name><name>bestlower</name><operator>.</operator><name>i_granule</name></name></expr></argument>,

<argument><expr><name>i_pos_upper</name></expr></argument>,

<argument><expr><call><name>Ogg_GranuleToTime</name><argument_list>( <argument><expr><name>p_stream</name></expr></argument>, <argument><expr><name>i_keyframegranule</name></expr></argument>, <argument><expr><operator>!</operator><name><name>p_stream</name><operator>-&gt;</operator><name>b_contiguous</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>OggDebug</name><argument_list>( <argument><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Seeking back to %"</literal><name>PRId64</name></expr></argument>, <argument><expr><call><name>__MAX</name> <argument_list>( <argument><expr><name><name>bestlower</name><operator>.</operator><name>i_pos</name></name> <operator>-</operator> <name>OGGSEEK_BYTES_TO_READ</name></expr></argument>, <argument><expr><name><name>p_stream</name><operator>-&gt;</operator><name>i_data_start</name></name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>a</name> <init>= <expr><call><name>OggBackwardSeekToFrame</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>,

<argument><expr><call><name>__MAX</name> <argument_list>( <argument><expr><name><name>bestlower</name><operator>.</operator><name>i_pos</name></name> <operator>-</operator> <name>OGGSEEK_BYTES_TO_READ</name></expr></argument>, <argument><expr><name><name>p_stream</name><operator>-&gt;</operator><name>i_data_start</name></name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><call><name>stream_Size</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument> )</argument_list></call></expr></argument>, <argument><expr><name>p_stream</name></expr></argument>, <argument><expr><name>i_keyframegranule</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><name>a</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><name><name>bestlower</name><operator>.</operator><name>i_pos</name></name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>Oggseek_BlindSeektoAbsoluteTime</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name>logical_stream_t</name> <modifier>*</modifier></type><name>p_stream</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>i_time</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b_fastseek</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_lowerpos</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_upperpos</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_found</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>Ogg_GetBoundsUsingSkeletonIndex</name><argument_list>( <argument><expr><name>p_stream</name></expr></argument>, <argument><expr><name>i_time</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_lowerpos</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_upperpos</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name>i_lowerpos</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>b_found</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name>b_found</name> <operator>&amp;&amp;</operator> <call><name>OggSeekIndexFind</name><argument_list>( <argument><expr><name>p_stream</name></expr></argument>, <argument><expr><name>i_time</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_lowerpos</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_upperpos</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>b_found</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name>b_found</name> <operator>&amp;&amp;</operator> <name><name>p_stream</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_cat</name></name> <operator>==</operator> <name>AUDIO_ES</name> <operator>&amp;&amp;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_streams</name></name> <operator>==</operator> <literal type="number">1</literal>

<operator>&amp;&amp;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_bitrate</name></name> <operator>&amp;&amp;</operator> <call><name>Ogg_GetKeyframeGranule</name><argument_list>( <argument><expr><name>p_stream</name></expr></argument>, <argument><expr><literal type="number">0xFF00FF00</literal></expr></argument> )</argument_list></call> <operator>==</operator> <literal type="number">0xFF00FF00</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>i_lowerpos</name> <operator>=</operator> <name>VLC_TICK_0</name> <operator>+</operator> <operator>(</operator><name>i_time</name> <operator>-</operator> <name>VLC_TICK_0</name><operator>)</operator> <operator>*</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_bitrate</name></name> <operator>/</operator> <call><name>INT64_C</name><argument_list>(<argument><expr><literal type="number">8000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>b_found</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name>b_found</name> <operator>&amp;&amp;</operator> <name>b_fastseek</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>i_lowerpos</name> <operator>=</operator> <call><name>OggBisectSearchByTime</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>p_stream</name></expr></argument>, <argument><expr><name>i_time</name></expr></argument>,

<argument><expr><name><name>p_stream</name><operator>-&gt;</operator><name>i_data_start</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_total_length</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>b_found</name> <operator>=</operator> <operator>(</operator> <name>i_lowerpos</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal> <operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name>b_found</name></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><name><name>i_lowerpos</name> <argument_list type="generic">&lt; <argument><expr><name><name>p_stream</name><operator>-&gt;</operator><name>i_data_start</name></name> <operator>||</operator> <name>i_upperpos</name></expr></argument> &gt;</argument_list></name> <name><name>p_sys</name><operator>-&gt;</operator><name>i_total_length</name></name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name> <operator>=</operator> <name>i_lowerpos</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>seek_byte</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ogg_stream_reset</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_stream</name><operator>-&gt;</operator><name>os</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>i_lowerpos</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>Oggseek_BlindSeektoPosition</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name>logical_stream_t</name> <modifier>*</modifier></type><name>p_stream</name></decl></parameter>,

<parameter><decl><type><name>double</name></type> <name>f</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b_canfastseek</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>OggDebug</name><argument_list>( <argument><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"=================== Seeking To Blind Pos"</literal></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_size</name> <init>= <expr><call><name>stream_Size</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>i_startpos</name> <init>= <expr><call><name>vlc_stream_Tell</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_granule</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_pagepos</name></decl>;</decl_stmt>

<expr_stmt><expr><name>i_size</name> <operator>=</operator> <call><name>find_first_page_granule</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>,

<argument><expr><name>i_size</name> <operator>*</operator> <name>f</name></expr></argument>, <argument><expr><name>i_size</name></expr></argument>,

<argument><expr><name>p_stream</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>i_granule</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i_granule</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><call><name>vlc_stream_Seek</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><name>i_startpos</name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>VLC_SUCCESS</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Seek back failed. Not seekable ?"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>OggDebug</name><argument_list>( <argument><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Seek start pos is %"</literal><name>PRId64</name><literal type="string">" granule %"</literal><name>PRId64</name></expr></argument>, <argument><expr><name>i_size</name></expr></argument>, <argument><expr><name>i_granule</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_granule</name> <operator>=</operator> <call><name>Ogg_GetKeyframeGranule</name><argument_list>( <argument><expr><name>p_stream</name></expr></argument>, <argument><expr><name>i_granule</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name>b_canfastseek</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>i_pagepos</name> <operator>=</operator> <call><name>OggBackwardSeekToFrame</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>,

<argument><expr><call><name>__MAX</name> <argument_list>( <argument><expr><name>i_size</name> <operator>-</operator> <name>MAX_PAGE_SIZE</name></expr></argument>, <argument><expr><name><name>p_stream</name><operator>-&gt;</operator><name>i_data_start</name></name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><call><name>__MIN</name> <argument_list>( <argument><expr><name>i_size</name> <operator>+</operator> <name>MAX_PAGE_SIZE</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_total_length</name></name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><name>p_stream</name></expr></argument>, <argument><expr><name>i_granule</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><name>i_pagepos</name> <operator>=</operator> <call><name>OggForwardSeekToFrame</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>,

<argument><expr><call><name>__MAX</name> <argument_list>( <argument><expr><name>i_size</name> <operator>-</operator> <name>MAX_PAGE_SIZE</name></expr></argument>, <argument><expr><name><name>p_stream</name><operator>-&gt;</operator><name>i_data_start</name></name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><call><name>stream_Size</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><name>p_stream</name></expr></argument>, <argument><expr><name>i_granule</name></expr></argument>, <argument><expr><name>false</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>OggDebug</name><argument_list>( <argument><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"=================== Seeked To %"</literal><name>PRId64</name><literal type="string">" granule %"</literal><name>PRId64</name></expr></argument>, <argument><expr><name>i_pagepos</name></expr></argument>, <argument><expr><name>i_granule</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>i_pagepos</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>Oggseek_SeektoAbsolutetime</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name>logical_stream_t</name> <modifier>*</modifier></type><name>p_stream</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>i_time</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>OggDebug</name><argument_list>( <argument><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"=================== Seeking To Absolute Time %"</literal><name>PRId64</name></expr></argument>, <argument><expr><name>i_time</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_offset_lower</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_offset_upper</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><call><name>Ogg_GetBoundsUsingSkeletonIndex</name><argument_list>( <argument><expr><name>p_stream</name></expr></argument>, <argument><expr><name>i_time</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_offset_lower</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_offset_upper</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>OggDebug</name><argument_list>( <argument><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Found keyframe at %"</literal><name>PRId64</name><literal type="string">" using skeleton index"</literal></expr></argument>, <argument><expr><name>i_offset_lower</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name>i_offset_lower</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>i_offset_lower</name> <operator>=</operator> <name><name>p_stream</name><operator>-&gt;</operator><name>i_data_start</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name> <operator>=</operator> <name>i_offset_lower</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>seek_byte</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ogg_stream_reset</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_stream</name><operator>-&gt;</operator><name>os</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>i_offset_lower</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>OggDebug</name><argument_list>( <argument><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Search bounds set to %"</literal><name>PRId64</name><literal type="string">" %"</literal><name>PRId64</name><literal type="string">" using skeleton index"</literal></expr></argument>, <argument><expr><name>i_offset_lower</name></expr></argument>, <argument><expr><name>i_offset_upper</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>OggNoDebug</name><argument_list>(

<argument><expr><call><name>OggSeekIndexFind</name><argument_list>( <argument><expr><name>p_stream</name></expr></argument>, <argument><expr><name>i_time</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_offset_lower</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_offset_upper</name></expr></argument> )</argument_list></call></expr></argument>

)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_offset_lower</name> <operator>=</operator> <call><name>__MAX</name><argument_list>( <argument><expr><name>i_offset_lower</name></expr></argument>, <argument><expr><name><name>p_stream</name><operator>-&gt;</operator><name>i_data_start</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_offset_upper</name> <operator>=</operator> <call><name>__MIN</name><argument_list>( <argument><expr><name>i_offset_upper</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_total_length</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_pagepos</name> <init>= <expr><call><name>OggBisectSearchByTime</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>p_stream</name></expr></argument>, <argument><expr><name>i_time</name></expr></argument>,

<argument><expr><name>i_offset_lower</name></expr></argument>, <argument><expr><name>i_offset_upper</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><name>i_pagepos</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>ogg_stream_reset</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_stream</name><operator>-&gt;</operator><name>os</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name> <operator>=</operator> <name>i_pagepos</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>seek_byte</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_position</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<macro><name>OggNoDebug</name><argument_list>(

<argument>if ( i_pagepos &gt;= p_stream-&gt;i_data_start )

OggSeek_IndexAdd( p_stream, i_time, i_pagepos )</argument>

)</argument_list></macro><empty_stmt>;</empty_stmt>

<expr_stmt><expr><call><name>OggDebug</name><argument_list>( <argument><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"=================== Seeked To %"</literal><name>PRId64</name><literal type="string">" time %"</literal><name>PRId64</name></expr></argument>, <argument><expr><name>i_pagepos</name></expr></argument>, <argument><expr><name>i_time</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>i_pagepos</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int64_t</name></type> <name>oggseek_read_page</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_ogg</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl> ;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>header</name><index>[<expr><name>PAGE_HEADER_BYTES</name><operator>+</operator><literal type="number">255</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_nsegs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_in_pos</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>i_result</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_page_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>buf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>i_in_pos</name> <operator>=</operator> <name><name>p_ogg</name><operator>-&gt;</operator><name>i_input_position</name></name> <operator>=</operator> <call><name>vlc_stream_Tell</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_page_waiting</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Ogg page already loaded"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><call><name>vlc_stream_Read</name> <argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><name>header</name></expr></argument>, <argument><expr><name>PAGE_HEADER_BYTES</name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <name>PAGE_HEADER_BYTES</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_stream_Seek</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><name>i_in_pos</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Reached clean EOF in ogg file"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>i_nsegs</name> <operator>=</operator> <name><name>header</name><index>[ <expr><name>PAGE_HEADER_BYTES</name> <operator>-</operator> <literal type="number">1</literal></expr> ]</index></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><call><name>vlc_stream_Read</name> <argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><name>header</name><operator>+</operator><name>PAGE_HEADER_BYTES</name></expr></argument>, <argument><expr><name>i_nsegs</name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <name>i_nsegs</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_stream_Seek</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><name>i_in_pos</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Warn</name> <argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Reached broken EOF in ogg file"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>i_page_size</name> <operator>=</operator> <name>PAGE_HEADER_BYTES</name> <operator>+</operator> <name>i_nsegs</name></expr>;</expr_stmt>

<for>for <control>( <init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>i_nsegs</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<expr_stmt><expr><name>i_page_size</name> <operator>+=</operator> <name><name>header</name><index>[ <expr><name>PAGE_HEADER_BYTES</name> <operator>+</operator> <name>i</name></expr> ]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>ogg_sync_reset</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_ogg</name><operator>-&gt;</operator><name>oy</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>buf</name> <operator>=</operator> <call><name>ogg_sync_buffer</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_ogg</name><operator>-&gt;</operator><name>oy</name></name></expr></argument>, <argument><expr><name>i_page_size</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>( <argument><expr><name>buf</name></expr></argument>, <argument><expr><name>header</name></expr></argument>, <argument><expr><name>PAGE_HEADER_BYTES</name> <operator>+</operator> <name>i_nsegs</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_result</name> <operator>=</operator> <call><name>vlc_stream_Read</name> <argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><operator>(</operator><name>uint8_t</name><operator>*</operator><operator>)</operator><name>buf</name> <operator>+</operator> <name>PAGE_HEADER_BYTES</name> <operator>+</operator> <name>i_nsegs</name></expr></argument>,

<argument><expr><name>i_page_size</name> <operator>-</operator> <name>PAGE_HEADER_BYTES</name> <operator>-</operator> <name>i_nsegs</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ogg_sync_wrote</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_ogg</name><operator>-&gt;</operator><name>oy</name></name></expr></argument>, <argument><expr><name>i_result</name> <operator>+</operator> <name>PAGE_HEADER_BYTES</name> <operator>+</operator> <name>i_nsegs</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><call><name>ogg_sync_pageout</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_ogg</name><operator>-&gt;</operator><name>oy</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_ogg</name><operator>-&gt;</operator><name>current_page</name></name></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">1</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument> , <argument><expr><literal type="string">"Got invalid packet, read %"</literal><name>PRId64</name><literal type="string">" of %i: %s %"</literal><name>PRId64</name></expr></argument>,

<argument><expr><name>i_result</name></expr></argument>, <argument><expr><name>i_page_size</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><name>i_in_pos</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>i_result</name> <operator>+</operator> <name>PAGE_HEADER_BYTES</name> <operator>+</operator> <name>i_nsegs</name></expr>;</return>

</block_content>}</block></function>

</unit>
