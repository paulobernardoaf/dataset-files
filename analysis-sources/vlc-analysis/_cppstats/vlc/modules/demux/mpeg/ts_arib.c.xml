<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\demux\mpeg\ts_arib.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_demux.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"timestamps.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ts_pid.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ts.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ts_arib.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name></type> <name><name>CLUT_to_chunks</name><index>[]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x50</literal></expr>, <expr><literal type="number">0x4c</literal></expr>, <expr><literal type="number">0x54</literal></expr>, <expr><literal type="number">0x45</literal></expr>,

<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, 

<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>,

<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, 

<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>,

<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, 

<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x55</literal></expr>,

<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, 

<expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xaa</literal></expr>,

<expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x55</literal></expr>, 

<expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x55</literal></expr>,

<expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x00</literal></expr>, 

<expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x55</literal></expr>,

<expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, 

<expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x00</literal></expr>,

<expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x00</literal></expr>, 

<expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x55</literal></expr>,

<expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, 

<expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>,

<expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x00</literal></expr>, 

<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xaa</literal></expr>,

<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, 

<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x55</literal></expr>,

<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, 

<expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xaa</literal></expr>,

<expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, 

<expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xaa</literal></expr>,

<expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x00</literal></expr>, 

<expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x55</literal></expr>,

<expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, 

<expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x00</literal></expr>,

<expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x00</literal></expr>, 

<expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x55</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x55</literal></expr>,

<expr><literal type="number">0x4f</literal></expr>, <expr><literal type="number">0xed</literal></expr>, <expr><literal type="number">0xfc</literal></expr>, <expr><literal type="number">0x8d</literal></expr>,

<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x74</literal></expr>, <expr><literal type="number">0x52</literal></expr>, <expr><literal type="number">0x4e</literal></expr>, <expr><literal type="number">0x53</literal></expr>,

<expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, 

<expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>,

<expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>,

<expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>,

<expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>,

<expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xff</literal></expr>,

<expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, 

<expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>,

<expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>,

<expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>,

<expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>,

<expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x80</literal></expr>,

<expr><literal type="number">0xfa</literal></expr>, <expr><literal type="number">0xe9</literal></expr>, <expr><literal type="number">0x51</literal></expr>, <expr><literal type="number">0x40</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>int</name></type> <name>CLUT_to_chunks_len</name> <init>= <expr><sizeof>sizeof<argument_list>(<argument><expr><name>CLUT_to_chunks</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

<function><type><name>bool</name></type> <name>ts_arib_inject_png_palette</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_in</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>i_in</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_out</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>pi_out</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_data</name> <init>= <expr><name>p_in</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_idat</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>i_data</name> <init>= <expr><name>i_in</name> <operator>-</operator> <literal type="number">8</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>p_data</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>i_data</name> <operator>-=</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<while>while<condition>( <expr><name>i_data</name> <operator>&gt;</operator> <literal type="number">11</literal></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>i_len</name> <init>= <expr><call><name>GetDWBE</name><argument_list>( <argument><expr><name>p_data</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>i_len</name> <operator>&gt;</operator> <literal type="number">0x7FFFFFFFU</literal> <operator>||</operator> <name>i_len</name> <operator>&gt;</operator> <name>i_data</name> <operator>-</operator> <literal type="number">12</literal></expr> )</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>i_chunk</name> <init>= <expr><call><name>VLC_FOURCC</name><argument_list>(<argument><expr><name><name>p_data</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>p_data</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>p_data</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>p_data</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>i_chunk</name> <operator>==</operator> <call><name>VLC_FOURCC</name><argument_list>(<argument><expr><literal type="char">'I'</literal></expr></argument>, <argument><expr><literal type="char">'D'</literal></expr></argument>, <argument><expr><literal type="char">'A'</literal></expr></argument>, <argument><expr><literal type="char">'T'</literal></expr></argument>)</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>p_idat</name> <operator>=</operator> <name>p_data</name></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>p_data</name> <operator>+=</operator> <name>i_len</name> <operator>+</operator> <literal type="number">12</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>i_data</name> <operator>-=</operator> <name>i_len</name> <operator>+</operator> <literal type="number">12</literal></expr>;</expr_stmt>

</block_content>}</block></while>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name>p_idat</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<block>{<block_content>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>p_out</name> <init>= <expr><operator>*</operator><name>pp_out</name> <operator>=</operator> <call><name>malloc</name><argument_list>( <argument><expr><name>i_in</name> <operator>+</operator> <name>CLUT_to_chunks_len</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name>p_out</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><operator>*</operator><name>pi_out</name> <operator>=</operator> <name>i_in</name> <operator>+</operator> <name>CLUT_to_chunks_len</name></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>size_t</name></type> <name>i_head</name> <init>= <expr><name>p_data</name> <operator>-</operator> <name>p_in</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>( <argument><expr><name>p_out</name></expr></argument>, <argument><expr><name>p_in</name></expr></argument>, <argument><expr><name>i_head</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_out</name><index>[<expr><name>i_head</name></expr>]</index></name></expr></argument>, <argument><expr><name>CLUT_to_chunks</name></expr></argument>, <argument><expr><name>CLUT_to_chunks_len</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_out</name><index>[<expr><name>i_head</name> <operator>+</operator> <name>CLUT_to_chunks_len</name></expr>]</index></name></expr></argument>, <argument><expr><name>p_data</name></expr></argument>, <argument><expr><name>i_in</name> <operator>-</operator> <name>i_head</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ts_arib_logo_dr_Delete</name><parameter_list>( <parameter><decl><type><name>ts_arib_logo_dr_t</name> <modifier>*</modifier></type><name>p_dr</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_dr</name><operator>-&gt;</operator><name>p_logo_char</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_dr</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>ts_arib_logo_dr_t</name> <modifier>*</modifier></type> <name>ts_arib_logo_dr_Decode</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>i_data</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name>i_data</name> <operator>&lt;</operator> <literal type="number">2</literal></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>ts_arib_logo_dr_t</name> <modifier>*</modifier></type><name>p_dr</name> <init>= <expr><call><name>calloc</name><argument_list>( <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>p_dr</name></expr></argument>)</argument_list></sizeof></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>p_dr</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_dr</name><operator>-&gt;</operator><name>i_logo_version</name></name> <operator>=</operator> <name><name>p_data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<switch>switch<condition>( <expr><name><name>p_data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr> )</condition>

<block>{<block_content>

<case>case <expr><literal type="number">1</literal></expr>:</case>

<if_stmt><if>if<condition>( <expr><name>i_data</name> <operator>==</operator> <literal type="number">7</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_dr</name><operator>-&gt;</operator><name>i_logo_id</name></name> <operator>=</operator> <operator>(</operator><operator>(</operator><name><name>p_data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>&amp;</operator> <literal type="number">0x01</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>|</operator> <name><name>p_data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_dr</name><operator>-&gt;</operator><name>i_logo_version</name></name> <operator>=</operator> <operator>(</operator><operator>(</operator><name><name>p_data</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>&amp;</operator> <literal type="number">0x0F</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>|</operator> <name><name>p_data</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_dr</name><operator>-&gt;</operator><name>i_download_data_id</name></name> <operator>=</operator> <operator>(</operator><name><name>p_data</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>|</operator> <name><name>p_data</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr>;</expr_stmt>

<return>return <expr><name>p_dr</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<break>break;</break>

<case>case <expr><literal type="number">2</literal></expr>:</case>

<if_stmt><if>if<condition>( <expr><name>i_data</name> <operator>==</operator> <literal type="number">3</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_dr</name><operator>-&gt;</operator><name>i_logo_id</name></name> <operator>=</operator> <operator>(</operator><operator>(</operator><name><name>p_data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>&amp;</operator> <literal type="number">0x01</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>|</operator> <name><name>p_data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<return>return <expr><name>p_dr</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<break>break;</break>

<case>case <expr><literal type="number">3</literal></expr>:</case>

<if_stmt><if>if<condition>( <expr><name>i_data</name> <operator>&gt;</operator> <literal type="number">2</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_dr</name><operator>-&gt;</operator><name>p_logo_char</name></name> <operator>=</operator> <call><name>malloc</name><argument_list>( <argument><expr><name>i_data</name> <operator>-</operator> <literal type="number">1</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_dr</name><operator>-&gt;</operator><name>p_logo_char</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_dr</name><operator>-&gt;</operator><name>i_logo_char</name></name> <operator>=</operator> <name>i_data</name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>( <argument><expr><name><name>p_dr</name><operator>-&gt;</operator><name>p_logo_char</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>p_dr</name><operator>-&gt;</operator><name>i_logo_char</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>p_dr</name></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<default>default:</default>

<break>break;</break>

</block_content>}</block></switch>

<expr_stmt><expr><call><name>ts_arib_logo_dr_Delete</name><argument_list>( <argument><expr><name>p_dr</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></function>

</unit>
