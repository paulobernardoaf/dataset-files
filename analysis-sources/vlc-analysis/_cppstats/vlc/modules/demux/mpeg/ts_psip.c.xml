<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\demux\mpeg\ts_psip.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_demux.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_meta.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_epg.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_DVBPSI_DVBPSI_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dvbpsi/dvbpsi.h&gt;</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_DVBPSI_DEMUX_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dvbpsi/demux.h&gt;</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dvbpsi/descriptor.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dvbpsi/atsc_mgt.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dvbpsi/atsc_vct.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dvbpsi/atsc_eit.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dvbpsi/atsc_ett.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dvbpsi/atsc_stt.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dvbpsi/dr_a0.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dvbpsi/psi.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ts_decoders.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ts_psip_dvbpsi_fixes.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"timestamps.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ts_pid.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ts.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ts_streams_private.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ts_scte.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ts_psip.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../codec/atsc_a65.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../codec/scte18.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>char</name> <modifier>*</modifier></type><name>grab_notempty</name><parameter_list>( <parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>ppsz</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_ret</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>*</operator><name>ppsz</name> <operator>&amp;&amp;</operator> <operator>*</operator><operator>*</operator><name>ppsz</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>psz_ret</name> <operator>=</operator> <operator>*</operator><name>ppsz</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>ppsz</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>psz_ret</name></expr>;</return>

</block_content>}</block></function>

<struct>struct <name>ts_psip_context_t</name>

<block>{

<decl_stmt><decl><type><name>dvbpsi_atsc_mgt_t</name> <modifier>*</modifier></type><name>p_mgt</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>dvbpsi_atsc_stt_t</name> <modifier>*</modifier></type><name>p_stt</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>dvbpsi_atsc_vct_t</name> <modifier>*</modifier></type><name>p_vct</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>atsc_a65_handle_t</name> <modifier>*</modifier></type><name>p_a65</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint16_t</name></type> <name>i_tabletype</name></decl>;</decl_stmt> 

<macro><name>DECL_ARRAY</name><argument_list>(<argument>dvbpsi_atsc_ett_t *</argument>)</argument_list></macro> <expr_stmt><expr><name>etts</name></expr>;</expr_stmt> 

<macro><name>DECL_ARRAY</name><argument_list>(<argument>dvbpsi_atsc_eit_t *</argument>)</argument_list></macro> <expr_stmt><expr><name>eits</name></expr>;</expr_stmt> 

}</block>;</struct>

<function><type><name>void</name></type> <name>ts_psip_Packet_Push</name><parameter_list>( <parameter><decl><type><name>ts_pid_t</name> <modifier>*</modifier></type><name>p_pid</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_pktbuffer</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name><name>p_pid</name><operator>-&gt;</operator><name>u</name><operator>.</operator><name>p_psip</name><operator>-&gt;</operator><name>handle</name><operator>-&gt;</operator><name>p_decoder</name></name> <operator>&amp;&amp;</operator> <call><name>likely</name><argument_list>(<argument><expr><name><name>p_pid</name><operator>-&gt;</operator><name>type</name></name> <operator>==</operator> <name>TYPE_PSIP</name></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>dvbpsi_packet_push</name><argument_list>( <argument><expr><name><name>p_pid</name><operator>-&gt;</operator><name>u</name><operator>.</operator><name>p_psip</name><operator>-&gt;</operator><name>handle</name></name></expr></argument>, <argument><expr><operator>(</operator><name>uint8_t</name> <operator>*</operator><operator>)</operator> <name>p_pktbuffer</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>

<function><type><name>ts_psip_context_t</name> <modifier>*</modifier></type> <name>ts_psip_context_New</name><parameter_list>()</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ts_psip_context_t</name> <modifier>*</modifier></type><name>p_ctx</name> <init>= <expr><call><name>malloc</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>p_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><call><name>likely</name><argument_list>(<argument><expr><name>p_ctx</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>p_mgt</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>p_stt</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>p_vct</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>p_a65</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>i_tabletype</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ARRAY_INIT</name><argument_list>(<argument><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>etts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ARRAY_INIT</name><argument_list>(<argument><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>eits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>p_ctx</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ts_psip_context_Delete</name><parameter_list>( <parameter><decl><type><name>ts_psip_context_t</name> <modifier>*</modifier></type><name>p_ctx</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><operator>!</operator><name><name>p_ctx</name><operator>-&gt;</operator><name>p_mgt</name></name> <operator>||</operator> <operator>!</operator><name><name>p_ctx</name><operator>-&gt;</operator><name>etts</name><operator>.</operator><name>i_size</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><operator>!</operator><name><name>p_ctx</name><operator>-&gt;</operator><name>p_vct</name></name> <operator>||</operator> <operator>!</operator><name><name>p_ctx</name><operator>-&gt;</operator><name>eits</name><operator>.</operator><name>i_size</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_ctx</name><operator>-&gt;</operator><name>p_mgt</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>dvbpsi_atsc_DeleteMGT</name><argument_list>( <argument><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>p_mgt</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_ctx</name><operator>-&gt;</operator><name>p_stt</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>dvbpsi_atsc_DeleteSTT</name><argument_list>( <argument><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>p_stt</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><name><name>p_ctx</name><operator>-&gt;</operator><name>p_vct</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>dvbpsi_atsc_DeleteVCT</name><argument_list>( <argument><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>p_vct</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_ctx</name><operator>-&gt;</operator><name>p_a65</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>atsc_a65_handle_Release</name><argument_list>( <argument><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>p_a65</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name><name>p_ctx</name><operator>-&gt;</operator><name>etts</name><operator>.</operator><name>i_size</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>dvbpsi_atsc_DeleteETT</name><argument_list>( <argument><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>etts</name><operator>.</operator><name>p_elems</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name><name>p_ctx</name><operator>-&gt;</operator><name>eits</name><operator>.</operator><name>i_size</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>dvbpsi_atsc_DeleteEIT</name><argument_list>( <argument><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>eits</name><operator>.</operator><name>p_elems</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><call><name>ARRAY_RESET</name><argument_list>( <argument><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>etts</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ARRAY_RESET</name><argument_list>( <argument><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>eits</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_ctx</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>ts_pid_t</name> <modifier>*</modifier></type><name>ATSC_GetSiblingxTTPID</name><parameter_list>( <parameter><decl><type><name>ts_pid_list_t</name> <modifier>*</modifier></type><name>p_list</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>dvbpsi_atsc_mgt_t</name> <modifier>*</modifier></type><name>p_mgt</name></decl></parameter>, <parameter><decl><type><name>ts_psip_t</name> <modifier>*</modifier></type><name>p_psip</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>i_lookup</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><name><name>p_psip</name><operator>-&gt;</operator><name>p_ctx</name><operator>-&gt;</operator><name>i_tabletype</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_psip</name><operator>-&gt;</operator><name>p_ctx</name><operator>-&gt;</operator><name>i_tabletype</name></name> <operator>&gt;=</operator> <name>ATSC_TABLE_TYPE_ETT_0</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>i_lookup</name> <operator>=</operator> <name><name>p_psip</name><operator>-&gt;</operator><name>p_ctx</name><operator>-&gt;</operator><name>i_tabletype</name></name> <operator>-</operator> <name>ATSC_TABLE_TYPE_ETT_0</name> <operator>+</operator> <name>ATSC_TABLE_TYPE_EIT_0</name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name>i_lookup</name> <operator>=</operator> <name><name>p_psip</name><operator>-&gt;</operator><name>p_ctx</name><operator>-&gt;</operator><name>i_tabletype</name></name> <operator>-</operator> <name>ATSC_TABLE_TYPE_EIT_0</name> <operator>+</operator> <name>ATSC_TABLE_TYPE_ETT_0</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

<for>for<control>( <init><decl><type><specifier>const</specifier> <name>dvbpsi_atsc_mgt_table_t</name> <modifier>*</modifier></type><name>p_tab</name> <init>= <expr><name><name>p_mgt</name><operator>-&gt;</operator><name>p_first_table</name></name></expr></init></decl>;</init>

<condition><expr><name>p_tab</name></expr>;</condition> <incr><expr><name>p_tab</name> <operator>=</operator> <name><name>p_tab</name><operator>-&gt;</operator><name>p_next</name></name></expr></incr> )</control>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name><name>p_tab</name><operator>-&gt;</operator><name>i_table_type</name></name> <operator>==</operator> <name>i_lookup</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><call><name>ts_pid_Get</name><argument_list>( <argument><expr><name>p_list</name></expr></argument>, <argument><expr><name><name>p_tab</name><operator>-&gt;</operator><name>i_table_type_pid</name></name></expr></argument> )</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

</block_content>}</block></for>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>uint32_t</name></type> <name>toETMId</name><parameter_list>( <parameter><decl><type><name>uint16_t</name></type> <name>i_vchannel</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>i_event_id</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<return>return <expr><operator>(</operator><name>i_vchannel</name> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><name>i_event_id</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>|</operator> <literal type="number">0x02</literal></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>fromETMId</name><parameter_list>( <parameter><decl><type><name>uint32_t</name></type> <name>i_etm_id</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name> <modifier>*</modifier></type><name>pi_vchannel</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name> <modifier>*</modifier></type><name>pi_event_id</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>pi_vchannel</name> <operator>=</operator> <name>i_etm_id</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>pi_event_id</name> <operator>=</operator> <operator>(</operator><name>i_etm_id</name> <operator>&amp;</operator> <literal type="number">0xFFFF</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>dvbpsi_atsc_ett_t</name> <modifier>*</modifier></type> <name>ATSC_ETTFindByETMId</name><parameter_list>( <parameter><decl><type><name>ts_psip_context_t</name> <modifier>*</modifier></type><name>p_ettctx</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>i_etm_id</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>i_version</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ARRAY_BSEARCH</name><argument_list>( <argument><expr><name><name>p_ettctx</name><operator>-&gt;</operator><name>etts</name></name></expr></argument>, <argument><expr><operator>-&gt;</operator><name>i_etm_id</name></expr></argument>, <argument><expr><name>uint32_t</name></expr></argument>, <argument><expr><name>i_etm_id</name></expr></argument>, <argument><expr><name>i</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal> <operator>&amp;&amp;</operator> <name><name>p_ettctx</name><operator>-&gt;</operator><name>etts</name><operator>.</operator><name>p_elems</name><index>[<expr><name>i</name></expr>]</index></name><operator>-&gt;</operator><name>i_version</name> <operator>==</operator> <name>i_version</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name><name>p_ettctx</name><operator>-&gt;</operator><name>etts</name><operator>.</operator><name>p_elems</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>dvbpsi_atsc_eit_event_t</name> <modifier>*</modifier></type> <name>ATSC_EventFindByETMId</name><parameter_list>( <parameter><decl><type><name>ts_psip_context_t</name> <modifier>*</modifier></type><name>p_eitctx</name></decl></parameter>,

<parameter><decl><type><name>uint32_t</name></type> <name>i_etm_id</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>i_version</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>i_vchannel_id</name></decl>, <decl><type ref="prev"/><name>i_event_id</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>fromETMId</name><argument_list>( <argument><expr><name>i_etm_id</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_vchannel_id</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_event_id</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name><name>p_eitctx</name><operator>-&gt;</operator><name>eits</name><operator>.</operator><name>i_size</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<decl_stmt><decl><type><name>dvbpsi_atsc_eit_t</name> <modifier>*</modifier></type><name>p_eit</name> <init>= <expr><name><name>p_eitctx</name><operator>-&gt;</operator><name>eits</name><operator>.</operator><name>p_elems</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_eit</name><operator>-&gt;</operator><name>i_version</name></name> <operator>!=</operator> <name>i_version</name> <operator>||</operator> <name><name>p_eit</name><operator>-&gt;</operator><name>i_source_id</name></name> <operator>!=</operator> <name>i_vchannel_id</name></expr> )</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt>

<for>for<control>( <init><decl><type><specifier>const</specifier> <name>dvbpsi_atsc_eit_event_t</name> <modifier>*</modifier></type><name>p_evt</name> <init>= <expr><name><name>p_eit</name><operator>-&gt;</operator><name>p_first_event</name></name></expr></init></decl>;</init>

<condition><expr><name>p_evt</name></expr> ;</condition> <incr><expr><name>p_evt</name> <operator>=</operator> <name><name>p_evt</name><operator>-&gt;</operator><name>p_next</name></name></expr></incr> )</control>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name><name>p_evt</name><operator>-&gt;</operator><name>i_event_id</name></name> <operator>==</operator> <name>i_event_id</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>p_evt</name></expr>;</return></block_content></block></if></if_stmt>

</block_content>}</block></for>

</block_content>}</block></for>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>ATSC_EITInsert</name><parameter_list>( <parameter><decl><type><name>ts_psip_context_t</name> <modifier>*</modifier></type><name>p_ctx</name></decl></parameter>, <parameter><decl><type><name>dvbpsi_atsc_eit_t</name> <modifier>*</modifier></type><name>p_eit</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name><name>p_ctx</name><operator>-&gt;</operator><name>eits</name><operator>.</operator><name>i_size</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<decl_stmt><decl><type><name>dvbpsi_atsc_eit_t</name> <modifier>*</modifier></type><name>p_cur_eit</name> <init>= <expr><name><name>p_ctx</name><operator>-&gt;</operator><name>eits</name><operator>.</operator><name>p_elems</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_cur_eit</name><operator>-&gt;</operator><name>i_source_id</name></name> <operator>==</operator> <name><name>p_eit</name><operator>-&gt;</operator><name>i_source_id</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>dvbpsi_atsc_DeleteEIT</name><argument_list>( <argument><expr><name>p_cur_eit</name></expr></argument> )</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>eits</name><operator>.</operator><name>p_elems</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>p_eit</name></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>ARRAY_APPEND</name><argument_list>( <argument><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>eits</name></name></expr></argument>, <argument><expr><name>p_eit</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>ATSC_CleanETTByChannelVersion</name><parameter_list>( <parameter><decl><type><name>ts_psip_context_t</name> <modifier>*</modifier></type><name>p_ctx</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>i_channel</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>i_version</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<while>while<condition>( <expr><name>i</name><operator>&lt;</operator><name><name>p_ctx</name><operator>-&gt;</operator><name>etts</name><operator>.</operator><name>i_size</name></name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>dvbpsi_atsc_ett_t</name> <modifier>*</modifier></type><name>p</name> <init>= <expr><name><name>p_ctx</name><operator>-&gt;</operator><name>etts</name><operator>.</operator><name>p_elems</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>i_curchan</name> <init>= <expr><name><name>p</name><operator>-&gt;</operator><name>i_etm_id</name></name> <operator>&gt;&gt;</operator> <literal type="number">16</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>i_channel</name> <operator>&lt;</operator> <name>i_curchan</name></expr> )</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt> 

<if_stmt><if>if<condition>( <expr><name>i_curchan</name> <operator>==</operator> <name>i_channel</name> <operator>&amp;&amp;</operator> <name><name>p</name><operator>-&gt;</operator><name>i_version</name></name> <operator>!=</operator> <name>i_version</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>dvbpsi_atsc_DeleteETT</name><argument_list>( <argument><expr><name>p</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ARRAY_REMOVE</name><argument_list>( <argument><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>etts</name></name></expr></argument>, <argument><expr><name>i</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else<block type="pseudo"><block_content> <expr_stmt><expr><name>i</name><operator>++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></while>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>ATSC_InsertETTOrdered</name><parameter_list>( <parameter><decl><type><name>ts_psip_context_t</name> <modifier>*</modifier></type><name>p_ctx</name></decl></parameter>, <parameter><decl><type><name>dvbpsi_atsc_ett_t</name> <modifier>*</modifier></type><name>p_ett</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<for>for<control>( <init>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name><name>p_ctx</name><operator>-&gt;</operator><name>etts</name><operator>.</operator><name>i_size</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<decl_stmt><decl><type><name>dvbpsi_atsc_ett_t</name> <modifier>*</modifier></type><name>p</name> <init>= <expr><name><name>p_ctx</name><operator>-&gt;</operator><name>etts</name><operator>.</operator><name>p_elems</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p</name><operator>-&gt;</operator><name>i_etm_id</name></name> <operator>&gt;=</operator> <name><name>p_ett</name><operator>-&gt;</operator><name>i_etm_id</name></name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name><name>p</name><operator>-&gt;</operator><name>i_etm_id</name></name> <operator>==</operator> <name><name>p_ett</name><operator>-&gt;</operator><name>i_etm_id</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>dvbpsi_atsc_DeleteETT</name><argument_list>( <argument><expr><name>p</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>etts</name><operator>.</operator><name>p_elems</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>p_ett</name></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<break>break;</break>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>ARRAY_INSERT</name><argument_list>( <argument><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>etts</name></name></expr></argument>, <argument><expr><name>p_ett</name></expr></argument>, <argument><expr><name>i</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>ATSC_TranslateVChannelToProgram</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>dvbpsi_atsc_vct_t</name> <modifier>*</modifier></type><name>p_vct</name></decl></parameter>,

<parameter><decl><type><name>uint16_t</name></type> <name>i_channel</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name> <modifier>*</modifier></type><name>pi_program</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<for>for<control>( <init><decl><type><specifier>const</specifier> <name>dvbpsi_atsc_vct_channel_t</name> <modifier>*</modifier></type><name>p_channel</name> <init>= <expr><name><name>p_vct</name><operator>-&gt;</operator><name>p_first_channel</name></name></expr></init></decl>;</init>

<condition><expr><name>p_channel</name></expr>;</condition> <incr><expr><name>p_channel</name> <operator>=</operator> <name><name>p_channel</name><operator>-&gt;</operator><name>p_next</name></name></expr></incr> )</control>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name><name>p_channel</name><operator>-&gt;</operator><name>i_source_id</name></name> <operator>==</operator> <name>i_channel</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>pi_program</name> <operator>=</operator> <name><name>p_channel</name><operator>-&gt;</operator><name>i_program_number</name></name></expr>;</expr_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></function>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>ATSC_NewTable_Callback</name><parameter_list>( <parameter><decl><type><name>dvbpsi_t</name> <modifier>*</modifier></type><name>p_dvbpsi</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>i_table_id</name></decl></parameter>,

<parameter><decl><type><name>uint16_t</name></type> <name>i_extension</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_pid</name></decl></parameter> )</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>ATSC_Ready_SubDecoders</name><parameter_list>( <parameter><decl><type><name>dvbpsi_t</name> <modifier>*</modifier></type><name>p_handle</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_cb_pid</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>dvbpsi_decoder_present</name><argument_list>( <argument><expr><name>p_handle</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><call><name>dvbpsi_AttachDemux</name><argument_list>( <argument><expr><name>p_handle</name></expr></argument>, <argument><expr><name>ATSC_NewTable_Callback</name></expr></argument>, <argument><expr><name>p_cb_pid</name></expr></argument> )</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ATSC_Detach_Dvbpsi_Decoders</name><parameter_list>( <parameter><decl><type><name>dvbpsi_t</name> <modifier>*</modifier></type><name>p_handle</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><call><name>dvbpsi_decoder_present</name><argument_list>( <argument><expr><name>p_handle</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>dvbpsi_DetachDemux</name><argument_list>( <argument><expr><name>p_handle</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ATSC_ATTACH</name><parameter_list>( <parameter><type><name>handle</name></type></parameter>, <parameter><type><name>type</name></type></parameter>, <parameter><type><name>table</name></type></parameter>, <parameter><type><name>extension</name></type></parameter>, <parameter><type><name>pid</name></type></parameter> )</parameter_list></cpp:macro> <cpp:value>( ATSC_Ready_SubDecoders( handle, pid ) &amp;&amp;( dvbpsi_demuxGetSubDec( (dvbpsi_demux_t *) handle-&gt;p_decoder, table, extension ) ||dvbpsi_atsc_Attach ##type( handle, table, extension, ATSC_ ##type ##_Callback, pid ) ) )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ATSC_ATTACH_WITH_FIXED_DECODER</name><parameter_list>( <parameter><type><name>handle</name></type></parameter>, <parameter><type><name>type</name></type></parameter>, <parameter><type><name>table</name></type></parameter>, <parameter><type><name>extension</name></type></parameter>, <parameter><type><name>pid</name></type></parameter> )</parameter_list></cpp:macro> <cpp:value>( ATSC_Ready_SubDecoders( handle, pid ) &amp;&amp;( dvbpsi_demuxGetSubDec( (dvbpsi_demux_t *) handle-&gt;p_decoder, table, extension ) ||ts_dvbpsi_AttachRawSubDecoder( handle, table, extension, ATSC_ ##type ##_RawCallback, pid ) ) )</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>rgpsz_ATSC_A53_service_types</name><index>[]</index></name> <init>=

<expr><block>{

<expr><literal type="string">"Analog Television"</literal></expr>,

<expr><literal type="string">"ATSC Digital Television"</literal></expr>,

<expr><literal type="string">"ATSC Audio"</literal></expr>,

<expr><literal type="string">"ATSC Data Only Service"</literal></expr>,

<expr><literal type="string">"ATSC Software Download Service"</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>ATSC_A53_get_service_type</name><parameter_list>( <parameter><decl><type><name>uint8_t</name></type> <name>i_type</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name>i_type</name> <operator>==</operator> <literal type="number">0</literal> <operator>||</operator> <name>i_type</name> <operator>&gt;</operator> <literal type="number">5</literal></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><name><name>rgpsz_ATSC_A53_service_types</name><index>[<expr><name>i_type</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</return>

</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>ATSC_DEBUG_EIT</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EIT_DEBUG_TIMESHIFT</name><parameter_list>(<parameter><type><name>t</name></type></parameter>)</parameter_list></cpp:macro></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<decl_stmt><decl><type><specifier>static</specifier> <name>time_t</name></type> <name>i_eit_debug_offset</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EIT_DEBUG_TIMESHIFT</name><parameter_list>(<parameter><type><name>t</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do {if( i_eit_debug_offset == 0 )i_eit_debug_offset = time(NULL) - t;t = t + i_eit_debug_offset;} while(0);</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><specifier>static</specifier> <name>vlc_epg_event_t</name> <modifier>*</modifier></type> <name>ATSC_CreateVLCEPGEvent</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name>ts_psip_context_t</name> <modifier>*</modifier></type><name>p_basectx</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>dvbpsi_atsc_eit_event_t</name> <modifier>*</modifier></type><name>p_evt</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>dvbpsi_atsc_ett_t</name> <modifier>*</modifier></type><name>p_ett</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>ATSC_DEBUG_EIT</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>p_demux</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_title</name> <init>= <expr><call><name>atsc_a65_Decode_multiple_string</name><argument_list>( <argument><expr><name><name>p_basectx</name><operator>-&gt;</operator><name>p_a65</name></name></expr></argument>,

<argument><expr><name><name>p_evt</name><operator>-&gt;</operator><name>i_title</name></name></expr></argument>, <argument><expr><name><name>p_evt</name><operator>-&gt;</operator><name>i_title_length</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_shortdesc_text</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_longdesc_text</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_epg_event_t</name> <modifier>*</modifier></type><name>p_epgevt</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>time_t</name></type> <name>i_start</name> <init>= <expr><call><name>atsc_a65_GPSTimeToEpoch</name><argument_list>( <argument><expr><name><name>p_evt</name><operator>-&gt;</operator><name>i_start_time</name></name></expr></argument>, <argument><expr><name><name>p_basectx</name><operator>-&gt;</operator><name>p_stt</name><operator>-&gt;</operator><name>i_gps_utc_offset</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>EIT_DEBUG_TIMESHIFT</name><argument_list>( <argument><expr><name>i_start</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<for>for<control>( <init><decl><type><specifier>const</specifier> <name>dvbpsi_descriptor_t</name> <modifier>*</modifier></type><name>p_dr</name> <init>= <expr><name><name>p_evt</name><operator>-&gt;</operator><name>p_first_descriptor</name></name></expr></init></decl>;</init>

<condition><expr><name>p_dr</name></expr>;</condition> <incr><expr><name>p_dr</name> <operator>=</operator> <name><name>p_dr</name><operator>-&gt;</operator><name>p_next</name></name></expr></incr> )</control>

<block>{<block_content>

<switch>switch<condition>( <expr><name><name>p_dr</name><operator>-&gt;</operator><name>i_tag</name></name></expr> )</condition>

<block>{<block_content>

<case>case <expr><name>ATSC_DESCRIPTOR_CONTENT_ADVISORY</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_data</name> <init>= <expr><name><name>p_dr</name><operator>-&gt;</operator><name>p_data</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>i_data</name> <init>= <expr><name><name>p_dr</name><operator>-&gt;</operator><name>i_length</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_ratings_count</name> <init>= <expr><name><name>p_dr</name><operator>-&gt;</operator><name>p_data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&amp;</operator> <literal type="number">0x3F</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>p_data</name><operator>++</operator></expr>;</expr_stmt> <expr_stmt><expr><name>i_data</name><operator>--</operator></expr>;</expr_stmt>

<for>for<control>( <init>;</init> <condition><expr><name>i_ratings_count</name> <operator>&amp;&amp;</operator> <name>i_data</name> <operator>&gt;</operator> <literal type="number">3</literal></expr>;</condition> <incr><expr><name>i_ratings_count</name><operator>--</operator></expr></incr> )</control>

<block>{<block_content>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_rated_dimensions</name> <init>= <expr><name><name>p_data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>(</operator><name>size_t</name><operator>)</operator> <name>i_rated_dimensions</name> <operator>*</operator> <literal type="number">2</literal> <operator>+</operator> <literal type="number">3</literal> <operator>&gt;</operator> <name>i_data</name></expr> )</condition><block type="pseudo"><block_content> 

<break>break;</break></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>desclen</name> <init>= <expr><name><name>p_data</name><index>[<expr><operator>(</operator><name>size_t</name><operator>)</operator> <literal type="number">2</literal> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <name>i_rated_dimensions</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>p_data</name> <operator>+=</operator> <operator>(</operator><name>size_t</name><operator>)</operator> <literal type="number">3</literal> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <name>i_rated_dimensions</name></expr>;</expr_stmt>

<expr_stmt><expr><name>i_data</name> <operator>-=</operator> <operator>(</operator><name>size_t</name><operator>)</operator> <literal type="number">3</literal> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <name>i_rated_dimensions</name></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>desclen</name> <operator>&gt;</operator> <name>i_data</name></expr> )</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><call><name>unlikely</name><argument_list>(<argument><expr><name>psz_shortdesc_text</name></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>psz_shortdesc_text</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>psz_shortdesc_text</name> <operator>=</operator> <call><name>atsc_a65_Decode_multiple_string</name><argument_list>( <argument><expr><name><name>p_basectx</name><operator>-&gt;</operator><name>p_a65</name></name></expr></argument>, <argument><expr><name>p_data</name></expr></argument>, <argument><expr><name>desclen</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>psz_shortdesc_text</name></expr> )</condition><block type="pseudo"><block_content> 

<break>break;</break></block_content></block></if></if_stmt>

<expr_stmt><expr><name>p_data</name> <operator>+=</operator> <name>desclen</name></expr>;</expr_stmt>

<expr_stmt><expr><name>i_data</name> <operator>-=</operator> <name>desclen</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block>

<default>default:</default>

<break>break;</break>

</block_content>}</block></switch>

</block_content>}</block></for>

<if_stmt><if>if<condition>( <expr><name>p_ett</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>psz_longdesc_text</name> <operator>=</operator> <call><name>atsc_a65_Decode_multiple_string</name><argument_list>( <argument><expr><name><name>p_basectx</name><operator>-&gt;</operator><name>p_a65</name></name></expr></argument>,

<argument><expr><name><name>p_ett</name><operator>-&gt;</operator><name>p_etm_data</name></name></expr></argument>, <argument><expr><name><name>p_ett</name><operator>-&gt;</operator><name>i_etm_length</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name>i_start</name> <operator>!=</operator> <name>VLC_TICK_INVALID</name> <operator>&amp;&amp;</operator> <name>psz_title</name></expr> )</condition>

<block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ATSC_DEBUG_EIT</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"EIT Event time %ld +%d %s id 0x%x"</literal></expr></argument>,

<argument><expr><name>i_start</name></expr></argument>, <argument><expr><name><name>p_evt</name><operator>-&gt;</operator><name>i_length_seconds</name></name></expr></argument>, <argument><expr><name>psz_title</name></expr></argument>, <argument><expr><name><name>p_evt</name><operator>-&gt;</operator><name>i_event_id</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><name>p_epgevt</name> <operator>=</operator> <call><name>vlc_epg_event_New</name><argument_list>( <argument><expr><name><name>p_evt</name><operator>-&gt;</operator><name>i_event_id</name></name></expr></argument>, <argument><expr><name>i_start</name></expr></argument>, <argument><expr><name><name>p_evt</name><operator>-&gt;</operator><name>i_length_seconds</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>p_epgevt</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_epgevt</name><operator>-&gt;</operator><name>psz_name</name></name> <operator>=</operator> <call><name>grab_notempty</name><argument_list>( <argument><expr><operator>&amp;</operator><name>psz_title</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_epgevt</name><operator>-&gt;</operator><name>psz_short_description</name></name> <operator>=</operator> <call><name>grab_notempty</name><argument_list>( <argument><expr><operator>&amp;</operator><name>psz_shortdesc_text</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_epgevt</name><operator>-&gt;</operator><name>psz_description</name></name> <operator>=</operator> <call><name>grab_notempty</name><argument_list>( <argument><expr><operator>&amp;</operator><name>psz_longdesc_text</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>psz_title</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>psz_shortdesc_text</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>psz_longdesc_text</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>p_epgevt</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>time_t</name></type> <name>ATSC_AddVLCEPGEvent</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name>ts_psip_context_t</name> <modifier>*</modifier></type><name>p_basectx</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>dvbpsi_atsc_eit_event_t</name> <modifier>*</modifier></type><name>p_event</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>dvbpsi_atsc_ett_t</name> <modifier>*</modifier></type><name>p_ett</name></decl></parameter>,

<parameter><decl><type><name>vlc_epg_t</name> <modifier>*</modifier></type><name>p_epg</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vlc_epg_event_t</name> <modifier>*</modifier></type><name>p_evt</name> <init>= <expr><call><name>ATSC_CreateVLCEPGEvent</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>p_basectx</name></expr></argument>,

<argument><expr><name>p_event</name></expr></argument>, <argument><expr><name>p_ett</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>p_evt</name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><call><name>vlc_epg_AddEvent</name><argument_list>( <argument><expr><name>p_epg</name></expr></argument>, <argument><expr><name>p_evt</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name><name>p_evt</name><operator>-&gt;</operator><name>i_start</name></name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_epg_event_Delete</name><argument_list>( <argument><expr><name>p_evt</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>VLC_TICK_INVALID</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>ATSC_EIT_Callback</name><parameter_list>( <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_pid</name></decl></parameter>, <parameter><decl><type><name>dvbpsi_atsc_eit_t</name><modifier>*</modifier></type> <name>p_eit</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ts_pid_t</name> <modifier>*</modifier></type><name>p_eit_pid</name> <init>= <expr><operator>(</operator><name>ts_pid_t</name> <operator>*</operator><operator>)</operator> <name>p_pid</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>unlikely</name><argument_list>(<argument><expr><name><name>p_eit_pid</name><operator>-&gt;</operator><name>type</name></name> <operator>!=</operator> <name>TYPE_PSIP</name></expr></argument>)</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><name><name>p_eit_pid</name><operator>-&gt;</operator><name>type</name></name> <operator>==</operator> <name>TYPE_PSIP</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dvbpsi_atsc_DeleteEIT</name><argument_list>( <argument><expr><name>p_eit</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name> <init>= <expr><operator>(</operator><name>demux_t</name> <operator>*</operator><operator>)</operator> <name><name>p_eit_pid</name><operator>-&gt;</operator><name>u</name><operator>.</operator><name>p_psip</name><operator>-&gt;</operator><name>handle</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ts_pid_t</name> <modifier>*</modifier></type><name>p_base_pid</name> <init>= <expr><call><name>GetPID</name><argument_list>(<argument><expr><name>p_sys</name></expr></argument>, <argument><expr><name>ATSC_BASE_PID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ts_psip_t</name> <modifier>*</modifier></type><name>p_basepsip</name> <init>= <expr><name><name>p_base_pid</name><operator>-&gt;</operator><name>u</name><operator>.</operator><name>p_psip</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ts_psip_context_t</name> <modifier>*</modifier></type><name>p_basectx</name> <init>= <expr><name><name>p_basepsip</name><operator>-&gt;</operator><name>p_ctx</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_eit</name><operator>-&gt;</operator><name>b_current_next</name></name> <operator>||</operator>

<call><name>unlikely</name><argument_list>(<argument><expr><name><name>p_base_pid</name><operator>-&gt;</operator><name>type</name></name> <operator>!=</operator> <name>TYPE_PSIP</name> <operator>||</operator> <operator>!</operator><name><name>p_basectx</name><operator>-&gt;</operator><name>p_stt</name></name> <operator>||</operator> <operator>!</operator><name><name>p_basectx</name><operator>-&gt;</operator><name>p_vct</name></name></expr></argument>)</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>dvbpsi_atsc_DeleteEIT</name><argument_list>( <argument><expr><name>p_eit</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>i_program_number</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator><call><name>ATSC_TranslateVChannelToProgram</name><argument_list>( <argument><expr><name><name>p_basectx</name><operator>-&gt;</operator><name>p_vct</name></name></expr></argument>, <argument><expr><name><name>p_eit</name><operator>-&gt;</operator><name>i_source_id</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_program_number</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Received EIT for unknown channel %d"</literal></expr></argument>, <argument><expr><name><name>p_eit</name><operator>-&gt;</operator><name>i_source_id</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dvbpsi_atsc_DeleteEIT</name><argument_list>( <argument><expr><name>p_eit</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>ts_pid_t</name> <modifier>*</modifier></type><name>pid_sibling_ett</name> <init>= <expr><call><name>ATSC_GetSiblingxTTPID</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>pids</name></name></expr></argument>, <argument><expr><name><name>p_basectx</name><operator>-&gt;</operator><name>p_mgt</name></name></expr></argument>,

<argument><expr><name><name>p_eit_pid</name><operator>-&gt;</operator><name>u</name><operator>.</operator><name>p_psip</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>time_t</name></type> <name>i_current_time</name> <init>= <expr><call><name>atsc_a65_GPSTimeToEpoch</name><argument_list>( <argument><expr><name><name>p_basectx</name><operator>-&gt;</operator><name>p_stt</name><operator>-&gt;</operator><name>i_system_time</name></name></expr></argument>,

<argument><expr><name><name>p_basectx</name><operator>-&gt;</operator><name>p_stt</name><operator>-&gt;</operator><name>i_gps_utc_offset</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>EIT_DEBUG_TIMESHIFT</name><argument_list>( <argument><expr><name>i_current_time</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint16_t</name></type> <name>i_table_type</name> <init>= <expr><name><name>p_eit_pid</name><operator>-&gt;</operator><name>u</name><operator>.</operator><name>p_psip</name><operator>-&gt;</operator><name>p_ctx</name><operator>-&gt;</operator><name>i_tabletype</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>i_table_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>vlc_epg_t</name> <modifier>*</modifier></type><name>p_epg</name> <init>= <expr><call><name>vlc_epg_New</name><argument_list>( <argument><expr><name>i_table_type</name> <operator>-</operator> <name>ATSC_TABLE_TYPE_EIT_0</name></expr></argument>,

<argument><expr><name>i_program_number</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name>p_epg</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>dvbpsi_atsc_DeleteEIT</name><argument_list>( <argument><expr><name>p_eit</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_epg</name><operator>-&gt;</operator><name>b_present</name></name> <operator>=</operator> <operator>(</operator><name>i_table_type</name> <operator>==</operator> <name>ATSC_TABLE_TYPE_EIT_0</name><operator>)</operator></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_basectx</name><operator>-&gt;</operator><name>p_a65</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><operator>(</operator><name><name>p_basectx</name><operator>-&gt;</operator><name>p_a65</name></name> <operator>=</operator> <call><name>atsc_a65_handle_New</name><argument_list>( <argument><expr><name>NULL</name></expr></argument> )</argument_list></call><operator>)</operator></expr> )</condition><block type="pseudo"><block_content>

<goto>goto <name>end</name>;</goto></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>time_t</name></type> <name>i_current_event_start_time</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<for>for<control>( <init><decl><type><specifier>const</specifier> <name>dvbpsi_atsc_eit_event_t</name> <modifier>*</modifier></type><name>p_evt</name> <init>= <expr><name><name>p_eit</name><operator>-&gt;</operator><name>p_first_event</name></name></expr></init></decl>;</init>

<condition><expr><name>p_evt</name></expr> ;</condition> <incr><expr><name>p_evt</name> <operator>=</operator> <name><name>p_evt</name><operator>-&gt;</operator><name>p_next</name></name></expr></incr> )</control>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>dvbpsi_atsc_ett_t</name> <modifier>*</modifier></type><name>p_ett</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>pid_sibling_ett</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>p_ett</name> <operator>=</operator> <call><name>ATSC_ETTFindByETMId</name><argument_list>( <argument><expr><name><name>pid_sibling_ett</name><operator>-&gt;</operator><name>u</name><operator>.</operator><name>p_psip</name><operator>-&gt;</operator><name>p_ctx</name></name></expr></argument>,

<argument><expr><call><name>toETMId</name><argument_list>( <argument><expr><name><name>p_eit</name><operator>-&gt;</operator><name>i_source_id</name></name></expr></argument>, <argument><expr><name><name>p_evt</name><operator>-&gt;</operator><name>i_event_id</name></name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><name><name>p_eit</name><operator>-&gt;</operator><name>i_version</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>time_t</name></type> <name>i_start</name> <init>= <expr><call><name>ATSC_AddVLCEPGEvent</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>p_basectx</name></expr></argument>, <argument><expr><name>p_evt</name></expr></argument>, <argument><expr><name>p_ett</name></expr></argument>, <argument><expr><name>p_epg</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>i_start</name> <operator>&lt;=</operator> <name>i_current_time</name> <operator>&amp;&amp;</operator> <name>i_start</name> <operator>+</operator> <name><name>p_evt</name><operator>-&gt;</operator><name>i_length_seconds</name></name> <operator>&gt;</operator> <name>i_current_time</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>i_current_event_start_time</name> <operator>=</operator> <name>i_start</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></for>

<if_stmt><if>if<condition>( <expr><name><name>p_epg</name><operator>-&gt;</operator><name>b_present</name></name> <operator>&amp;&amp;</operator> <name>i_current_event_start_time</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_epg_SetCurrent</name><argument_list>( <argument><expr><name>p_epg</name></expr></argument>, <argument><expr><name>i_current_event_start_time</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>ts_pat_t</name> <modifier>*</modifier></type><name>p_pat</name> <init>= <expr><call><name>ts_pid_Get</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>pids</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>-&gt;</operator><name><name>u</name><operator>.</operator><name>p_pat</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ts_pmt_t</name> <modifier>*</modifier></type><name>p_pmt</name> <init>= <expr><call><name>ts_pat_Get_pmt</name><argument_list>(<argument><expr><name>p_pat</name></expr></argument>, <argument><expr><name>i_program_number</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name>p_pmt</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_pmt</name><operator>-&gt;</operator><name>eit</name><operator>.</operator><name>i_event_start</name></name> <operator>=</operator> <name><name>p_epg</name><operator>-&gt;</operator><name>p_current</name><operator>-&gt;</operator><name>i_start</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_pmt</name><operator>-&gt;</operator><name>eit</name><operator>.</operator><name>i_event_length</name></name> <operator>=</operator> <name><name>p_epg</name><operator>-&gt;</operator><name>p_current</name><operator>-&gt;</operator><name>i_duration</name></name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_epg</name><operator>-&gt;</operator><name>i_event</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>out</name></name></expr></argument>, <argument><expr><name>ES_OUT_SET_GROUP_EPG</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><name>i_program_number</name></expr></argument>, <argument><expr><name>p_epg</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<label><name>end</name>:</label>

<expr_stmt><expr><call><name>vlc_epg_Delete</name><argument_list>( <argument><expr><name>p_epg</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ATSC_EITInsert</name><argument_list>( <argument><expr><name><name>p_eit_pid</name><operator>-&gt;</operator><name>u</name><operator>.</operator><name>p_psip</name><operator>-&gt;</operator><name>p_ctx</name></name></expr></argument>, <argument><expr><name>p_eit</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>ATSC_ETT_Callback</name><parameter_list>( <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_pid</name></decl></parameter>, <parameter><decl><type><name>dvbpsi_atsc_ett_t</name> <modifier>*</modifier></type><name>p_ett</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ts_pid_t</name> <modifier>*</modifier></type><name>p_ett_pid</name> <init>= <expr><operator>(</operator><name>ts_pid_t</name> <operator>*</operator><operator>)</operator> <name>p_pid</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>unlikely</name><argument_list>(<argument><expr><name><name>p_ett_pid</name><operator>-&gt;</operator><name>type</name></name> <operator>!=</operator> <name>TYPE_PSIP</name></expr></argument>)</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><name><name>p_ett_pid</name><operator>-&gt;</operator><name>type</name></name> <operator>==</operator> <name>TYPE_PSIP</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dvbpsi_atsc_DeleteETT</name><argument_list>( <argument><expr><name>p_ett</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name> <init>= <expr><operator>(</operator><name>demux_t</name> <operator>*</operator><operator>)</operator> <name><name>p_ett_pid</name><operator>-&gt;</operator><name>u</name><operator>.</operator><name>p_psip</name><operator>-&gt;</operator><name>handle</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ts_pid_t</name> <modifier>*</modifier></type><name>p_base_pid</name> <init>= <expr><call><name>GetPID</name><argument_list>(<argument><expr><name>p_sys</name></expr></argument>, <argument><expr><name>ATSC_BASE_PID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ts_psip_t</name> <modifier>*</modifier></type><name>p_basepsip</name> <init>= <expr><name><name>p_base_pid</name><operator>-&gt;</operator><name>u</name><operator>.</operator><name>p_psip</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ts_psip_context_t</name> <modifier>*</modifier></type><name>p_basectx</name> <init>= <expr><name><name>p_basepsip</name><operator>-&gt;</operator><name>p_ctx</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_ett</name><operator>-&gt;</operator><name>i_etm_id</name></name> <operator>&amp;</operator> <literal type="number">0x02</literal></expr> )</condition> 

<block>{<block_content>

<decl_stmt><decl><type><name>ts_psip_context_t</name> <modifier>*</modifier></type><name>p_ctx</name> <init>= <expr><name><name>p_ett_pid</name><operator>-&gt;</operator><name>u</name><operator>.</operator><name>p_psip</name><operator>-&gt;</operator><name>p_ctx</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>i_vchannel_id</name></decl>, <decl><type ref="prev"/><name>i_event_id</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>fromETMId</name><argument_list>( <argument><expr><name><name>p_ett</name><operator>-&gt;</operator><name>i_etm_id</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_vchannel_id</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_event_id</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>i_program_number</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator><call><name>ATSC_TranslateVChannelToProgram</name><argument_list>( <argument><expr><name><name>p_basectx</name><operator>-&gt;</operator><name>p_vct</name></name></expr></argument>, <argument><expr><name>i_vchannel_id</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_program_number</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Received EIT for unknown channel %d"</literal></expr></argument>, <argument><expr><name>i_vchannel_id</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dvbpsi_atsc_DeleteETT</name><argument_list>( <argument><expr><name>p_ett</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><call><name>ATSC_ETTFindByETMId</name><argument_list>( <argument><expr><name>p_ctx</name></expr></argument>, <argument><expr><name><name>p_ett</name><operator>-&gt;</operator><name>i_etm_id</name></name></expr></argument>, <argument><expr><name><name>p_ett</name><operator>-&gt;</operator><name>i_version</name></name></expr></argument> )</argument_list></call> <operator>==</operator> <name>NULL</name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>dvbpsi_atsc_mgt_t</name> <modifier>*</modifier></type><name>p_mgt</name> <init>= <expr><call><name>ts_pid_Get</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>pids</name></name></expr></argument>, <argument><expr><name>ATSC_BASE_PID</name></expr></argument> )</argument_list></call><operator>-&gt;</operator><name><name>u</name><operator>.</operator><name>p_psip</name><operator>-&gt;</operator><name>p_ctx</name><operator>-&gt;</operator><name>p_mgt</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ts_pid_t</name> <modifier>*</modifier></type><name>p_sibling_eit</name> <init>= <expr><call><name>ATSC_GetSiblingxTTPID</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>pids</name></name></expr></argument>, <argument><expr><name>p_mgt</name></expr></argument>, <argument><expr><name><name>p_ett_pid</name><operator>-&gt;</operator><name>u</name><operator>.</operator><name>p_psip</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>p_sibling_eit</name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>dvbpsi_atsc_eit_event_t</name> <modifier>*</modifier></type><name>p_event</name> <init>=

<expr><call><name>ATSC_EventFindByETMId</name><argument_list>( <argument><expr><name><name>p_sibling_eit</name><operator>-&gt;</operator><name>u</name><operator>.</operator><name>p_psip</name><operator>-&gt;</operator><name>p_ctx</name></name></expr></argument>, <argument><expr><name><name>p_ett</name><operator>-&gt;</operator><name>i_etm_id</name></name></expr></argument>, <argument><expr><name><name>p_ett</name><operator>-&gt;</operator><name>i_version</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>p_event</name></expr> )</condition>

<block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ATSC_DEBUG_EIT</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Should update EIT %x (matched EIT)"</literal></expr></argument>, <argument><expr><name><name>p_event</name><operator>-&gt;</operator><name>i_event_id</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name>vlc_epg_event_t</name> <modifier>*</modifier></type><name>p_evt</name> <init>= <expr><call><name>ATSC_CreateVLCEPGEvent</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>p_basectx</name></expr></argument>, <argument><expr><name>p_event</name></expr></argument>, <argument><expr><name>p_ett</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>likely</name><argument_list>(<argument><expr><name>p_evt</name></expr></argument>)</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>out</name></name></expr></argument>, <argument><expr><name>ES_OUT_SET_GROUP_EPG_EVENT</name></expr></argument>,

<argument><expr><operator>(</operator><name>int</name><operator>)</operator><name>i_program_number</name></expr></argument>, <argument><expr><name>p_evt</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ATSC_DEBUG_EIT</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Updated event %x with ETT"</literal></expr></argument>, <argument><expr><name><name>p_evt</name><operator>-&gt;</operator><name>i_id</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>vlc_epg_event_Delete</name><argument_list>( <argument><expr><name>p_evt</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>ATSC_InsertETTOrdered</name><argument_list>( <argument><expr><name>p_ctx</name></expr></argument>, <argument><expr><name>p_ett</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ATSC_CleanETTByChannelVersion</name><argument_list>( <argument><expr><name>p_ctx</name></expr></argument>, <argument><expr><name>i_vchannel_id</name></expr></argument>, <argument><expr><name><name>p_ett</name><operator>-&gt;</operator><name>i_version</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>dvbpsi_atsc_DeleteETT</name><argument_list>( <argument><expr><name>p_ett</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>ATSC_ETT_RawCallback</name><parameter_list>( <parameter><decl><type><name>dvbpsi_t</name> <modifier>*</modifier></type><name>p_handle</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>dvbpsi_psi_section_t</name><modifier>*</modifier></type> <name>p_section</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_base_pid</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>( <argument><expr><name>p_handle</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<for>for<control>( <init>;</init> <condition><expr><name>p_section</name></expr>;</condition> <incr><expr><name>p_section</name> <operator>=</operator> <name><name>p_section</name><operator>-&gt;</operator><name>p_next</name></name></expr></incr> )</control>

<block>{<block_content>

<decl_stmt><decl><type><name>dvbpsi_atsc_ett_t</name> <modifier>*</modifier></type><name>p_ett</name> <init>= <expr><call><name>DVBPlague_ETT_Decode</name><argument_list>( <argument><expr><name>p_section</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>p_ett</name></expr> )</condition><block type="pseudo"><block_content> 

<expr_stmt><expr><call><name>ATSC_ETT_Callback</name><argument_list>( <argument><expr><name>p_base_pid</name></expr></argument>, <argument><expr><name>p_ett</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>ATSC_VCT_Callback</name><parameter_list>( <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_cb_basepid</name></decl></parameter>, <parameter><decl><type><name>dvbpsi_atsc_vct_t</name><modifier>*</modifier></type> <name>p_vct</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ts_pid_t</name> <modifier>*</modifier></type><name>p_base_pid</name> <init>= <expr><operator>(</operator><name>ts_pid_t</name> <operator>*</operator><operator>)</operator> <name>p_cb_basepid</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>unlikely</name><argument_list>(<argument><expr><name><name>p_base_pid</name><operator>-&gt;</operator><name>type</name></name> <operator>!=</operator> <name>TYPE_PSIP</name> <operator>||</operator> <name><name>p_base_pid</name><operator>-&gt;</operator><name>i_pid</name></name> <operator>!=</operator> <name>ATSC_BASE_PID</name></expr></argument>)</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><name><name>p_base_pid</name><operator>-&gt;</operator><name>type</name></name> <operator>==</operator> <name>TYPE_PSIP</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><name><name>p_base_pid</name><operator>-&gt;</operator><name>i_pid</name></name> <operator>==</operator> <name>ATSC_BASE_PID</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dvbpsi_atsc_DeleteVCT</name><argument_list>( <argument><expr><name>p_vct</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name> <init>= <expr><operator>(</operator><name>demux_t</name> <operator>*</operator><operator>)</operator> <name><name>p_base_pid</name><operator>-&gt;</operator><name>u</name><operator>.</operator><name>p_psip</name><operator>-&gt;</operator><name>handle</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ts_psip_context_t</name> <modifier>*</modifier></type><name>p_ctx</name> <init>= <expr><name><name>p_base_pid</name><operator>-&gt;</operator><name>u</name><operator>.</operator><name>p_psip</name><operator>-&gt;</operator><name>p_ctx</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_ctx</name><operator>-&gt;</operator><name>p_a65</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><operator>(</operator><name><name>p_ctx</name><operator>-&gt;</operator><name>p_a65</name></name> <operator>=</operator> <call><name>atsc_a65_handle_New</name><argument_list>( <argument><expr><name>NULL</name></expr></argument> )</argument_list></call><operator>)</operator></expr> )</condition><block type="pseudo"><block_content>

<goto>goto <name>end</name>;</goto></block_content></block></if></if_stmt>

<for>for<control>( <init><decl><type><specifier>const</specifier> <name>dvbpsi_atsc_vct_channel_t</name> <modifier>*</modifier></type><name>p_channel</name> <init>= <expr><name><name>p_vct</name><operator>-&gt;</operator><name>p_first_channel</name></name></expr></init></decl>;</init>

<condition><expr><name>p_channel</name></expr>;</condition> <incr><expr><name>p_channel</name> <operator>=</operator> <name><name>p_channel</name><operator>-&gt;</operator><name>p_next</name></name></expr></incr> )</control>

<block>{<block_content>

<decl_stmt><decl><type><name>vlc_meta_t</name> <modifier>*</modifier></type><name>p_meta</name> <init>= <expr><call><name>vlc_meta_New</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>p_meta</name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_name</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<for>for<control>( <init><decl><type><name>dvbpsi_descriptor_t</name> <modifier>*</modifier></type><name>p_dr</name> <init>= <expr><name><name>p_channel</name><operator>-&gt;</operator><name>p_first_descriptor</name></name></expr></init></decl>;</init>

<condition><expr><name>p_dr</name></expr>;</condition> <incr><expr><name>p_dr</name> <operator>=</operator> <name><name>p_dr</name><operator>-&gt;</operator><name>p_next</name></name></expr></incr> )</control>

<block>{<block_content>

<switch>switch<condition>( <expr><name><name>p_dr</name><operator>-&gt;</operator><name>i_tag</name></name></expr> )</condition>

<block>{<block_content>

<case>case <expr><name>ATSC_DESCRIPTOR_EXTENDED_CHANNEL_NAME</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name>dvbpsi_extended_channel_name_dr_t</name> <modifier>*</modifier></type><name>p_ecndr</name> <init>=

<expr><call><name>dvbpsi_ExtendedChannelNameDr</name><argument_list>( <argument><expr><name>p_dr</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>p_ecndr</name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><call><name>unlikely</name><argument_list>(<argument><expr><name>psz_name</name></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>psz_name</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>psz_name</name> <operator>=</operator> <call><name>atsc_a65_Decode_multiple_string</name><argument_list>( <argument><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>p_a65</name></name></expr></argument>,

<argument><expr><name><name>p_ecndr</name><operator>-&gt;</operator><name>i_long_channel_name</name></name></expr></argument>,

<argument><expr><name><name>p_ecndr</name><operator>-&gt;</operator><name>i_long_channel_name_length</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block> <break>break;</break>

<default>default:</default>

<break>break;</break>

</block_content>}</block></switch>

</block_content>}</block></for>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name>psz_name</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>psz_name</name> <operator>=</operator> <call><name>atsc_a65_Decode_simple_UTF16_string</name><argument_list>( <argument><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>p_a65</name></name></expr></argument>,

<argument><expr><name><name>p_channel</name><operator>-&gt;</operator><name>i_short_name</name></name></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name>psz_name</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_meta_SetTitle</name><argument_list>( <argument><expr><name>p_meta</name></expr></argument>, <argument><expr><name>psz_name</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>psz_name</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_service_type</name> <init>= <expr><call><name>ATSC_A53_get_service_type</name><argument_list>( <argument><expr><name><name>p_channel</name><operator>-&gt;</operator><name>i_service_type</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>psz_service_type</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>vlc_meta_AddExtra</name><argument_list>( <argument><expr><name>p_meta</name></expr></argument>, <argument><expr><literal type="string">"Type"</literal></expr></argument>, <argument><expr><name>psz_service_type</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>out</name></name></expr></argument>, <argument><expr><name>ES_OUT_SET_GROUP_META</name></expr></argument>,

<argument><expr><name><name>p_channel</name><operator>-&gt;</operator><name>i_program_number</name></name></expr></argument>, <argument><expr><name>p_meta</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_meta_Delete</name><argument_list>( <argument><expr><name>p_meta</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<label><name>end</name>:</label>

<if_stmt><if>if<condition>( <expr><name><name>p_ctx</name><operator>-&gt;</operator><name>p_vct</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>dvbpsi_atsc_DeleteVCT</name><argument_list>( <argument><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>p_vct</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>p_vct</name></name> <operator>=</operator> <name>p_vct</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>ATSC_MGT_Callback</name><parameter_list>( <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_cb_basepid</name></decl></parameter>, <parameter><decl><type><name>dvbpsi_atsc_mgt_t</name><modifier>*</modifier></type> <name>p_mgt</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ts_pid_t</name> <modifier>*</modifier></type><name>p_base_pid</name> <init>= <expr><operator>(</operator><name>ts_pid_t</name> <operator>*</operator><operator>)</operator> <name>p_cb_basepid</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>unlikely</name><argument_list>(<argument><expr><name><name>p_base_pid</name><operator>-&gt;</operator><name>type</name></name> <operator>!=</operator> <name>TYPE_PSIP</name> <operator>||</operator> <name><name>p_base_pid</name><operator>-&gt;</operator><name>i_pid</name></name> <operator>!=</operator> <name>ATSC_BASE_PID</name></expr></argument>)</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><name><name>p_base_pid</name><operator>-&gt;</operator><name>type</name></name> <operator>==</operator> <name>TYPE_PSIP</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><name><name>p_base_pid</name><operator>-&gt;</operator><name>i_pid</name></name> <operator>==</operator> <name>ATSC_BASE_PID</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dvbpsi_atsc_DeleteMGT</name><argument_list>( <argument><expr><name>p_mgt</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>ts_psip_t</name> <modifier>*</modifier></type><name>p_mgtpsip</name> <init>= <expr><name><name>p_base_pid</name><operator>-&gt;</operator><name>u</name><operator>.</operator><name>p_psip</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name> <init>= <expr><operator>(</operator><name>demux_t</name> <operator>*</operator><operator>)</operator> <name><name>p_mgtpsip</name><operator>-&gt;</operator><name>handle</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>(</operator> <name><name>p_mgtpsip</name><operator>-&gt;</operator><name>i_version</name></name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal> <operator>&amp;&amp;</operator> <name><name>p_mgtpsip</name><operator>-&gt;</operator><name>i_version</name></name> <operator>==</operator> <name><name>p_mgt</name><operator>-&gt;</operator><name>i_version</name></name> <operator>)</operator> <operator>||</operator>

<name><name>p_mgt</name><operator>-&gt;</operator><name>b_current_next</name></name> <operator>==</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>dvbpsi_atsc_DeleteMGT</name><argument_list>( <argument><expr><name>p_mgt</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_mgtpsip</name><operator>-&gt;</operator><name>i_version</name></name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name><name>p_mgtpsip</name><operator>-&gt;</operator><name>p_ctx</name><operator>-&gt;</operator><name>p_vct</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>dvbpsi_atsc_DeleteVCT</name><argument_list>( <argument><expr><name><name>p_mgtpsip</name><operator>-&gt;</operator><name>p_ctx</name><operator>-&gt;</operator><name>p_vct</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_mgtpsip</name><operator>-&gt;</operator><name>p_ctx</name><operator>-&gt;</operator><name>p_vct</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>p_mgtpsip</name><operator>-&gt;</operator><name>eit</name><operator>.</operator><name>i_size</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<expr_stmt><expr><call><name>PIDRelease</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name><name>p_mgtpsip</name><operator>-&gt;</operator><name>eit</name><operator>.</operator><name>p_elems</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><name><name>p_mgtpsip</name><operator>-&gt;</operator><name>eit</name><operator>.</operator><name>p_elems</name><index>[<expr><name>i</name></expr>]</index></name><operator>-&gt;</operator><name>type</name> <operator>==</operator> <name>TYPE_FREE</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>ARRAY_RESET</name><argument_list>(<argument><expr><name><name>p_mgtpsip</name><operator>-&gt;</operator><name>eit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>dvbpsi_demux_t</name> <modifier>*</modifier></type><name>p_dvbpsi_demux</name> <init>= <expr><operator>(</operator><name>dvbpsi_demux_t</name> <operator>*</operator><operator>)</operator> <name><name>p_mgtpsip</name><operator>-&gt;</operator><name>handle</name><operator>-&gt;</operator><name>p_decoder</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>dvbpsi_demux_subdec_t</name> <modifier>*</modifier></type><name>p_subdec</name> <init>= <expr><call><name>dvbpsi_demuxGetSubDec</name><argument_list>( <argument><expr><name>p_dvbpsi_demux</name></expr></argument>, <argument><expr><name>SCTE18_TABLE_ID</name></expr></argument>, <argument><expr><literal type="number">0x00</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>p_subdec</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>dvbpsi_DetachDemuxSubDecoder</name><argument_list>( <argument><expr><name>p_dvbpsi_demux</name></expr></argument>, <argument><expr><name>p_subdec</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dvbpsi_DeleteDemuxSubDecoder</name><argument_list>( <argument><expr><name>p_subdec</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_mgtpsip</name><operator>-&gt;</operator><name>p_ctx</name><operator>-&gt;</operator><name>p_mgt</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>dvbpsi_atsc_DeleteMGT</name><argument_list>( <argument><expr><name><name>p_mgtpsip</name><operator>-&gt;</operator><name>p_ctx</name><operator>-&gt;</operator><name>p_mgt</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_mgtpsip</name><operator>-&gt;</operator><name>p_ctx</name><operator>-&gt;</operator><name>p_mgt</name></name> <operator>=</operator> <name>p_mgt</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_mgtpsip</name><operator>-&gt;</operator><name>i_version</name></name> <operator>=</operator> <name><name>p_mgt</name><operator>-&gt;</operator><name>i_version</name></name></expr>;</expr_stmt>

<for>for<control>( <init><decl><type><specifier>const</specifier> <name>dvbpsi_atsc_mgt_table_t</name> <modifier>*</modifier></type><name>p_tab</name> <init>= <expr><name><name>p_mgt</name><operator>-&gt;</operator><name>p_first_table</name></name></expr></init></decl>;</init>

<condition><expr><name>p_tab</name></expr>;</condition> <incr><expr><name>p_tab</name> <operator>=</operator> <name><name>p_tab</name><operator>-&gt;</operator><name>p_next</name></name></expr></incr> )</control>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name><name>p_tab</name><operator>-&gt;</operator><name>i_table_type</name></name> <operator>==</operator> <name>ATSC_TABLE_TYPE_TVCT</name> <operator>||</operator>

<name><name>p_tab</name><operator>-&gt;</operator><name>i_table_type</name></name> <operator>==</operator> <name>ATSC_TABLE_TYPE_CVCT</name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name>i_table_id</name> <init>= <expr><ternary><condition><expr><operator>(</operator><name><name>p_tab</name><operator>-&gt;</operator><name>i_table_type</name></name> <operator>==</operator> <name>ATSC_TABLE_TYPE_CVCT</name><operator>)</operator></expr>

?</condition><then> <expr><name>ATSC_CVCT_TABLE_ID</name></expr>

</then><else>: <expr><name>ATSC_TVCT_TABLE_ID</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>ATSC_ATTACH</name><argument_list>( <argument><expr><name><name>p_mgtpsip</name><operator>-&gt;</operator><name>handle</name></name></expr></argument>, <argument><expr><name>VCT</name></expr></argument>, <argument><expr><name>i_table_id</name></expr></argument>,

<argument><expr><call><name>GetPID</name><argument_list>(<argument><expr><name>p_sys</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>-&gt;</operator><name><name>u</name><operator>.</operator><name>p_pat</name><operator>-&gt;</operator><name>i_ts_id</name></name></expr></argument>, <argument><expr><name>p_base_pid</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">" * pid=%d listening for ATSC VCT"</literal></expr></argument>, <argument><expr><name><name>p_base_pid</name><operator>-&gt;</operator><name>i_pid</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if>

<if type="elseif">else if<condition>( <expr><name><name>p_tab</name><operator>-&gt;</operator><name>i_table_type</name></name> <operator>&gt;=</operator> <name>ATSC_TABLE_TYPE_EIT_0</name> <operator>&amp;&amp;</operator>

<name><name>p_tab</name><operator>-&gt;</operator><name>i_table_type</name></name> <operator>&lt;=</operator> <name>ATSC_TABLE_TYPE_EIT_0</name> <operator>+</operator> <name>ATSC_EIT_MAX_DEPTH_MIN1</name> <operator>&amp;&amp;</operator>

<name><name>p_tab</name><operator>-&gt;</operator><name>i_table_type</name></name> <operator>&lt;=</operator> <name>ATSC_TABLE_TYPE_EIT_127</name> <operator>&amp;&amp;</operator>

<name><name>p_tab</name><operator>-&gt;</operator><name>i_table_type_pid</name></name> <operator>!=</operator> <name><name>p_base_pid</name><operator>-&gt;</operator><name>i_pid</name></name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>ts_pid_t</name> <modifier>*</modifier></type><name>pid</name> <init>= <expr><call><name>GetPID</name><argument_list>(<argument><expr><name>p_sys</name></expr></argument>, <argument><expr><name><name>p_tab</name><operator>-&gt;</operator><name>i_table_type_pid</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>PIDSetup</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>TYPE_PSIP</name></expr></argument>, <argument><expr><name>pid</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>SetPIDFilter</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></argument>, <argument><expr><name>pid</name></expr></argument>, <argument><expr><name>true</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>pid</name><operator>-&gt;</operator><name>u</name><operator>.</operator><name>p_psip</name><operator>-&gt;</operator><name>p_ctx</name><operator>-&gt;</operator><name>i_tabletype</name></name> <operator>=</operator> <name><name>p_tab</name><operator>-&gt;</operator><name>i_table_type</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ATSC_Ready_SubDecoders</name><argument_list>( <argument><expr><name><name>pid</name><operator>-&gt;</operator><name>u</name><operator>.</operator><name>p_psip</name><operator>-&gt;</operator><name>handle</name></name></expr></argument>, <argument><expr><name>pid</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">" * pid=%d reserved for ATSC EIT"</literal></expr></argument>, <argument><expr><name><name>pid</name><operator>-&gt;</operator><name>i_pid</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ARRAY_APPEND</name><argument_list>( <argument><expr><name><name>p_mgtpsip</name><operator>-&gt;</operator><name>eit</name></name></expr></argument>, <argument><expr><name>pid</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if>

<if type="elseif">else if<condition>( <expr><name><name>p_tab</name><operator>-&gt;</operator><name>i_table_type</name></name> <operator>&gt;=</operator> <name>ATSC_TABLE_TYPE_ETT_0</name> <operator>&amp;&amp;</operator>

<name><name>p_tab</name><operator>-&gt;</operator><name>i_table_type</name></name> <operator>&lt;=</operator> <name>ATSC_TABLE_TYPE_ETT_0</name> <operator>+</operator> <name>ATSC_EIT_MAX_DEPTH_MIN1</name> <operator>&amp;&amp;</operator>

<name><name>p_tab</name><operator>-&gt;</operator><name>i_table_type</name></name> <operator>&lt;=</operator> <name>ATSC_TABLE_TYPE_ETT_127</name> <operator>&amp;&amp;</operator>

<name><name>p_tab</name><operator>-&gt;</operator><name>i_table_type_pid</name></name> <operator>!=</operator> <name><name>p_base_pid</name><operator>-&gt;</operator><name>i_pid</name></name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>ts_pid_t</name> <modifier>*</modifier></type><name>pid</name> <init>= <expr><call><name>GetPID</name><argument_list>(<argument><expr><name>p_sys</name></expr></argument>, <argument><expr><name><name>p_tab</name><operator>-&gt;</operator><name>i_table_type_pid</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>PIDSetup</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>TYPE_PSIP</name></expr></argument>, <argument><expr><name>pid</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>SetPIDFilter</name><argument_list>( <argument><expr><name>p_sys</name></expr></argument>, <argument><expr><name>pid</name></expr></argument>, <argument><expr><name>true</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>pid</name><operator>-&gt;</operator><name>u</name><operator>.</operator><name>p_psip</name><operator>-&gt;</operator><name>p_ctx</name><operator>-&gt;</operator><name>i_tabletype</name></name> <operator>=</operator> <name><name>p_tab</name><operator>-&gt;</operator><name>i_table_type</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ATSC_Ready_SubDecoders</name><argument_list>( <argument><expr><name><name>pid</name><operator>-&gt;</operator><name>u</name><operator>.</operator><name>p_psip</name><operator>-&gt;</operator><name>handle</name></name></expr></argument>, <argument><expr><name>pid</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">" * pid=%d reserved for ATSC ETT"</literal></expr></argument>, <argument><expr><name><name>pid</name><operator>-&gt;</operator><name>i_pid</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ARRAY_APPEND</name><argument_list>( <argument><expr><name><name>p_mgtpsip</name><operator>-&gt;</operator><name>eit</name></name></expr></argument>, <argument><expr><name>pid</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">" * pid=%d transport for ATSC PSIP type %x"</literal></expr></argument>,

<argument><expr><name><name>p_tab</name><operator>-&gt;</operator><name>i_table_type_pid</name></name></expr></argument>, <argument><expr><name><name>p_tab</name><operator>-&gt;</operator><name>i_table_type</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<if_stmt><if>if<condition>( <expr><name>SCTE18_SI_BASE_PID</name> <operator>==</operator> <name>ATSC_BASE_PID</name> <operator>&amp;&amp;</operator>

<call><name>ts_dvbpsi_AttachRawSubDecoder</name><argument_list>( <argument><expr><name><name>p_mgtpsip</name><operator>-&gt;</operator><name>handle</name></name></expr></argument>, <argument><expr><name>SCTE18_TABLE_ID</name></expr></argument>, <argument><expr><literal type="number">0x00</literal></expr></argument>,

<argument><expr><name>SCTE18_Section_Callback</name></expr></argument>, <argument><expr><name>p_base_pid</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">" * pid=%d listening for EAS"</literal></expr></argument>, <argument><expr><name><name>p_base_pid</name><operator>-&gt;</operator><name>i_pid</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>ATSC_STT_Callback</name><parameter_list>( <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_cb_basepid</name></decl></parameter>, <parameter><decl><type><name>dvbpsi_atsc_stt_t</name><modifier>*</modifier></type> <name>p_stt</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ts_pid_t</name> <modifier>*</modifier></type><name>p_base_pid</name> <init>= <expr><operator>(</operator><name>ts_pid_t</name> <operator>*</operator><operator>)</operator> <name>p_cb_basepid</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>unlikely</name><argument_list>(<argument><expr><name><name>p_base_pid</name><operator>-&gt;</operator><name>type</name></name> <operator>!=</operator> <name>TYPE_PSIP</name> <operator>||</operator> <name><name>p_base_pid</name><operator>-&gt;</operator><name>i_pid</name></name> <operator>!=</operator> <name>ATSC_BASE_PID</name></expr></argument>)</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><name><name>p_base_pid</name><operator>-&gt;</operator><name>type</name></name> <operator>==</operator> <name>TYPE_PSIP</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><name><name>p_base_pid</name><operator>-&gt;</operator><name>i_pid</name></name> <operator>==</operator> <name>ATSC_BASE_PID</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dvbpsi_atsc_DeleteSTT</name><argument_list>( <argument><expr><name>p_stt</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name> <init>= <expr><operator>(</operator><name>demux_t</name> <operator>*</operator><operator>)</operator> <name><name>p_base_pid</name><operator>-&gt;</operator><name>u</name><operator>.</operator><name>p_psip</name><operator>-&gt;</operator><name>handle</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ts_psip_context_t</name> <modifier>*</modifier></type><name>p_ctx</name> <init>= <expr><name><name>p_base_pid</name><operator>-&gt;</operator><name>u</name><operator>.</operator><name>p_psip</name><operator>-&gt;</operator><name>p_ctx</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>dvbpsi_t</name> <modifier>*</modifier></type><name>p_handle</name> <init>= <expr><name><name>p_base_pid</name><operator>-&gt;</operator><name>u</name><operator>.</operator><name>p_psip</name><operator>-&gt;</operator><name>handle</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_ctx</name><operator>-&gt;</operator><name>p_stt</name></name></expr> )</condition> 

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>ATSC_ATTACH</name><argument_list>( <argument><expr><name>p_handle</name></expr></argument>, <argument><expr><name>MGT</name></expr></argument>, <argument><expr><name>ATSC_MGT_TABLE_ID</name></expr></argument>, <argument><expr><literal type="number">0x00</literal></expr></argument>, <argument><expr><name>p_base_pid</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Can't attach MGT decoder to pid %d"</literal></expr></argument>, <argument><expr><name>ATSC_BASE_PID</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ATSC_Detach_Dvbpsi_Decoders</name><argument_list>( <argument><expr><name>p_handle</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dvbpsi_atsc_DeleteSTT</name><argument_list>( <argument><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>p_stt</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>p_stt</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><call><name>dvbpsi_atsc_DeleteSTT</name><argument_list>( <argument><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>p_stt</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if<condition>( <expr><name>p_stt</name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>time_t</name></type> <name>i_current_time</name> <init>= <expr><call><name>atsc_a65_GPSTimeToEpoch</name><argument_list>( <argument><expr><name><name>p_stt</name><operator>-&gt;</operator><name>i_system_time</name></name></expr></argument>,

<argument><expr><name><name>p_stt</name><operator>-&gt;</operator><name>i_gps_utc_offset</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>EIT_DEBUG_TIMESHIFT</name><argument_list>( <argument><expr><name>i_current_time</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_network_time</name></name> <operator>=</operator> <name>i_current_time</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_network_time_update</name></name> <operator>=</operator> <call><name>time</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>out</name></name></expr></argument>, <argument><expr><name>ES_OUT_SET_EPG_TIME</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_network_time</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>p_stt</name></name> <operator>=</operator> <name>p_stt</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>ATSC_STT_RawCallback</name><parameter_list>( <parameter><decl><type><name>dvbpsi_t</name> <modifier>*</modifier></type><name>p_handle</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>dvbpsi_psi_section_t</name><modifier>*</modifier></type> <name>p_section</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_base_pid</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>( <argument><expr><name>p_handle</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<for>for<control>( <init>;</init> <condition><expr><name>p_section</name></expr> ;</condition> <incr><expr><name>p_section</name> <operator>=</operator> <name><name>p_section</name><operator>-&gt;</operator><name>p_next</name></name></expr></incr> )</control>

<block>{<block_content>

<decl_stmt><decl><type><name>dvbpsi_atsc_stt_t</name> <modifier>*</modifier></type><name>p_stt</name> <init>= <expr><call><name>DVBPlague_STT_Decode</name><argument_list>( <argument><expr><name>p_section</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>p_stt</name></expr> )</condition><block type="pseudo"><block_content> 

<expr_stmt><expr><call><name>ATSC_STT_Callback</name><argument_list>( <argument><expr><name>p_base_pid</name></expr></argument>, <argument><expr><name>p_stt</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>ATSC_Attach_Dvbpsi_Base_Decoders</name><parameter_list>( <parameter><decl><type><name>dvbpsi_t</name> <modifier>*</modifier></type><name>p_handle</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_base_pid</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>ATSC_ATTACH_WITH_FIXED_DECODER</name><argument_list>( <argument><expr><name>p_handle</name></expr></argument>, <argument><expr><name>STT</name></expr></argument>, <argument><expr><name>ATSC_STT_TABLE_ID</name></expr></argument>, <argument><expr><literal type="number">0x00</literal></expr></argument>, <argument><expr><name>p_base_pid</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>ATSC_Detach_Dvbpsi_Decoders</name><argument_list>( <argument><expr><name>p_handle</name></expr></argument> )</argument_list></call></expr>;</expr_stmt> 

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>ATSC_NewTable_Callback</name><parameter_list>( <parameter><decl><type><name>dvbpsi_t</name> <modifier>*</modifier></type><name>p_dvbpsi</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>i_table_id</name></decl></parameter>,

<parameter><decl><type><name>uint16_t</name></type> <name>i_extension</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_cb_pid</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name> <init>= <expr><operator>(</operator><name>demux_t</name> <operator>*</operator><operator>)</operator> <name><name>p_dvbpsi</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><operator>(</operator><operator>(</operator><name>ts_pid_t</name> <operator>*</operator><operator>)</operator> <name>p_cb_pid</name><operator>)</operator><operator>-&gt;</operator><name>type</name> <operator>==</operator> <name>TYPE_PSIP</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>ts_pid_t</name> <modifier>*</modifier></type><name>p_base_pid</name> <init>= <expr><call><name>ts_pid_Get</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>pids</name></name></expr></argument>, <argument><expr><name>ATSC_BASE_PID</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_base_pid</name><operator>-&gt;</operator><name>u</name><operator>.</operator><name>p_psip</name><operator>-&gt;</operator><name>p_ctx</name><operator>-&gt;</operator><name>p_vct</name></name></expr> )</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<switch>switch<condition>( <expr><name>i_table_id</name></expr> )</condition>

<block>{<block_content>

<case>case <expr><name>ATSC_ETT_TABLE_ID</name></expr>:</case>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>ATSC_ATTACH_WITH_FIXED_DECODER</name><argument_list>( <argument><expr><name>p_dvbpsi</name></expr></argument>, <argument><expr><name>ETT</name></expr></argument>, <argument><expr><name>ATSC_ETT_TABLE_ID</name></expr></argument>, <argument><expr><name>i_extension</name></expr></argument>, <argument><expr><name>p_cb_pid</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Cannot attach ETT decoder source %"</literal> <name>PRIu16</name></expr></argument>, <argument><expr><name>i_extension</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>ATSC_EIT_TABLE_ID</name></expr>:</case>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>ATSC_ATTACH</name><argument_list>( <argument><expr><name>p_dvbpsi</name></expr></argument>, <argument><expr><name>EIT</name></expr></argument>, <argument><expr><name>ATSC_EIT_TABLE_ID</name></expr></argument>, <argument><expr><name>i_extension</name></expr></argument>, <argument><expr><name>p_cb_pid</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Cannot attach EIT decoder source %"</literal> <name>PRIu16</name></expr></argument>, <argument><expr><name>i_extension</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<default>default:</default>

<break>break;</break>

</block_content>}</block></switch>

</block_content>}</block></function>

</unit>
