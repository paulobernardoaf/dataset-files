<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\demux\opus.h"><function><type><specifier>static</specifier> <specifier>inline</specifier> <name>unsigned</name></type> <name>opus_frame_duration</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>len</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>silk_fs_div</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">6000</literal></expr>, <expr><literal type="number">3000</literal></expr>, <expr><literal type="number">1500</literal></expr>, <expr><literal type="number">1000</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>toc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>nframes</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>frame_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>nsamples</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>i_rate</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>len</name> <operator>&lt;</operator> <literal type="number">1</literal></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>toc</name> <operator>=</operator> <name><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<switch>switch<condition>( <expr><name>toc</name><operator>&amp;</operator><literal type="number">3</literal></expr> )</condition>

<block>{<block_content>

<case>case <expr><literal type="number">0</literal></expr>:</case>

<expr_stmt><expr><name>nframes</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">1</literal></expr>:</case>

<case>case <expr><literal type="number">2</literal></expr>:</case>

<expr_stmt><expr><name>nframes</name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<break>break;</break>

<default>default:</default>

<if_stmt><if>if<condition>( <expr><name>len</name> <operator>&lt;</operator> <literal type="number">2</literal></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>nframes</name> <operator>=</operator> <name><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>&amp;</operator><literal type="number">0x3F</literal></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></switch>

<expr_stmt><expr><name>i_rate</name> <operator>=</operator> <literal type="number">48000</literal></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>toc</name><operator>&amp;</operator><literal type="number">0x80</literal></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>frame_size</name> <operator>=</operator> <operator>(</operator><name>i_rate</name> <operator>&lt;&lt;</operator> <operator>(</operator><name>toc</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator><operator>)</operator> <operator>/</operator> <literal type="number">400</literal></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if<condition>( <expr><operator>(</operator> <name>toc</name><operator>&amp;</operator><literal type="number">0x60</literal> <operator>)</operator> <operator>==</operator> <literal type="number">0x60</literal></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>frame_size</name> <operator>=</operator> <name>i_rate</name><operator>/</operator><operator>(</operator><literal type="number">100</literal> <operator>&gt;&gt;</operator> <operator>(</operator><name>toc</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator><operator>)</operator></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name>frame_size</name> <operator>=</operator> <name>i_rate</name><operator>*</operator><literal type="number">60</literal> <operator>/</operator> <name><name>silk_fs_div</name><index>[<expr><name>toc</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal> <operator>&amp;</operator> <literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><name>nsamples</name> <operator>=</operator> <name>nframes</name><operator>*</operator><name>frame_size</name></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>nsamples</name><operator>*</operator><literal type="number">25</literal> <operator>&gt;</operator> <name>i_rate</name><operator>*</operator><literal type="number">3</literal></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><name>nsamples</name></expr>;</return>

</block_content>}</block></function>

</unit>
