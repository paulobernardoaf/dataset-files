<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\demux\asf\asf.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_demux.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_dialog.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_meta.h&gt;</cpp:file></cpp:include> 

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_access.h&gt;</cpp:file></cpp:include> 

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_codecs.h&gt;</cpp:file></cpp:include> 

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_vout.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;limits.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"asfpacket.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libasf.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"assert.h"</cpp:file></cpp:include>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Open</name> <parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Close</name> <parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<macro><name>vlc_module_begin</name> <argument_list>()</argument_list></macro>

<macro><name>set_category</name><argument_list>( <argument>CAT_INPUT</argument> )</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_INPUT_DEMUX</argument> )</argument_list></macro>

<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"ASF/WMV demuxer"</literal>)</argument> )</argument_list></macro>

<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"demux"</literal></argument>, <argument><literal type="number">200</literal></argument> )</argument_list></macro>

<macro><name>set_callbacks</name><argument_list>( <argument>Open</argument>, <argument>Close</argument> )</argument_list></macro>

<macro><name>add_shortcut</name><argument_list>( <argument><literal type="string">"asf"</literal></argument>, <argument><literal type="string">"wmv"</literal></argument> )</argument_list></macro>

<macro><name>vlc_module_end</name> <argument_list>()</argument_list></macro>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Demux</name> <parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Control</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_query</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>args</name></decl></parameter> )</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_ASF_TRACKS</name></cpp:macro> <cpp:value>(ASF_MAX_STREAMNUMBER + 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PREROLL_FROM_CURRENT</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Packet_UpdateTime</name><parameter_list>( <parameter><decl><type><name>asf_packet_sys_t</name> <modifier>*</modifier></type><name>p_packetsys</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>i_stream_number</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>i_time</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Packet_SetSendTime</name><parameter_list>( <parameter><decl><type><name>asf_packet_sys_t</name> <modifier>*</modifier></type><name>p_packetsys</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>i_time</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>bool</name></type> <name>Block_Dequeue</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>i_nexttime</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>asf_track_info_t</name> <modifier>*</modifier></type> <name>Packet_GetTrackInfo</name><parameter_list>( <parameter><decl><type><name>asf_packet_sys_t</name> <modifier>*</modifier></type><name>p_packetsys</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name></type> <name>i_stream_number</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>bool</name></type> <name>Packet_DoSkip</name><parameter_list>( <parameter><decl><type><name>asf_packet_sys_t</name> <modifier>*</modifier></type><name>p_packetsys</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>i_stream_number</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b_packet_keyframe</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Packet_Enqueue</name><parameter_list>( <parameter><decl><type><name>asf_packet_sys_t</name> <modifier>*</modifier></type><name>p_packetsys</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>i_stream_number</name></decl></parameter>, <parameter><decl><type><name>block_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_frame</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Packet_SetAR</name><parameter_list>( <parameter><decl><type><name>asf_packet_sys_t</name> <modifier>*</modifier></type><name>p_packetsys</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>i_stream_number</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name></type> <name>i_ratio_x</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>i_ratio_y</name></decl></parameter> )</parameter_list>;</function_decl>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>int</name></type> <name>i_cat</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>es_out_id_t</name> <modifier>*</modifier></type><name>p_es</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>es_format_t</name> <modifier>*</modifier></type><name>p_fmt</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>bool</name></type> <name>b_selected</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_time</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>asf_track_info_t</name></type> <name>info</name></decl>;</decl_stmt>

<struct>struct

<block>{

<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_first</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_last</name></decl>;</decl_stmt>

}</block> <decl><name>queue</name></decl>;</struct>

}</block></struct></type> <name>asf_track_t</name>;</typedef>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_time</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_sendtime</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_length</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint64_t</name></type> <name>i_bitrate</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>bool</name></type> <name>b_eos</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>bool</name></type> <name>b_eof</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>asf_object_root_t</name> <modifier>*</modifier></type><name>p_root</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>asf_object_file_properties_t</name> <modifier>*</modifier></type><name>p_fp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_track</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>asf_track_t</name> <modifier>*</modifier></type><name><name>track</name><index>[<expr><name>MAX_ASF_TRACKS</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint64_t</name></type> <name>i_data_begin</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>i_data_end</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_index</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_canfastseek</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_seek_track</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>i_access_selected_track</name><index>[<expr><name>ES_CATEGORY_COUNT</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_wait_keyframe</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_preroll_start</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>asf_packet_sys_t</name></type> <name>packet_sys</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_meta_t</name> <modifier>*</modifier></type><name>meta</name></decl>;</decl_stmt>

}</block></struct></type> <name>demux_sys_t</name>;</typedef>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>DemuxInit</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>DemuxEnd</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>FlushQueue</name><parameter_list>( <parameter><decl><type><name>asf_track_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>FlushQueues</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter> )</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Open</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type> <name>p_this</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name> <init>= <expr><operator>(</operator><name>demux_t</name> <operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_guid_t</name></type> <name>guid</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_peek</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>vlc_stream_Peek</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>p_peek</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">16</literal></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>ASF_GetGUID</name><argument_list>( <argument><expr><operator>&amp;</operator><name>guid</name></expr></argument>, <argument><expr><name>p_peek</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>guidcmp</name><argument_list>( <argument><expr><operator>&amp;</operator><name>guid</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>asf_object_header_guid</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_demux</name><operator>-&gt;</operator><name>pf_demux</name></name> <operator>=</operator> <name>Demux</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_demux</name><operator>-&gt;</operator><name>pf_control</name></name> <operator>=</operator> <name>Control</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name> <operator>=</operator> <name>p_sys</name> <operator>=</operator> <call><name>calloc</name><argument_list>( <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><name>demux_sys_t</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>DemuxInit</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>packet_sys</name><operator>.</operator><name>p_demux</name></name> <operator>=</operator> <name>p_demux</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>packet_sys</name><operator>.</operator><name>pf_doskip</name></name> <operator>=</operator> <name>Packet_DoSkip</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>packet_sys</name><operator>.</operator><name>pf_send</name></name> <operator>=</operator> <name>Packet_Enqueue</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>packet_sys</name><operator>.</operator><name>pf_gettrackinfo</name></name> <operator>=</operator> <name>Packet_GetTrackInfo</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>packet_sys</name><operator>.</operator><name>pf_updatetime</name></name> <operator>=</operator> <name>Packet_UpdateTime</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>packet_sys</name><operator>.</operator><name>pf_updatesendtime</name></name> <operator>=</operator> <name>Packet_SetSendTime</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>packet_sys</name><operator>.</operator><name>pf_setaspectratio</name></name> <operator>=</operator> <name>Packet_SetAR</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CHUNK</name></cpp:macro> <cpp:value>VLC_TICK_FROM_MS(100)</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Demux</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>ES_CATEGORY_COUNT</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_access_selected_track</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>out</name></name></expr></argument>, <argument><expr><name>ES_OUT_SET_ES_STATE</name></expr></argument>,

<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>track</name><index>[<expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_access_selected_track</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>-&gt;</operator><name>p_es</name></expr></argument>, <argument><expr><name>true</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_access_selected_track</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>MAX_ASF_TRACKS</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<decl_stmt><decl><type><name>asf_track_t</name> <modifier>*</modifier></type><name>tk</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>track</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name>tk</name></expr> )</condition><block type="pseudo"><block_content> <continue>continue;</continue></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><name><name>tk</name><operator>-&gt;</operator><name>p_es</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>out</name></name></expr></argument>, <argument><expr><name>ES_OUT_GET_ES_STATE</name></expr></argument>, <argument><expr><name><name>tk</name><operator>-&gt;</operator><name>p_es</name></name></expr></argument>, <argument><expr><operator>&amp;</operator> <name><name>tk</name><operator>-&gt;</operator><name>b_selected</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>b_selected</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></for>

<while>while<condition>( <expr><operator>!</operator><name><name>p_sys</name><operator>-&gt;</operator><name>b_eos</name></name> <operator>&amp;&amp;</operator> <operator>(</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_sendtime</name></name> <operator>-</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_time</name></name> <operator>-</operator> <name>CHUNK</name> <operator>&lt;</operator> <literal type="number">0</literal> <operator>||</operator>

<operator>(</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_sendtime</name></name> <operator>-</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_time</name></name> <operator>-</operator> <name>CHUNK</name> <operator>)</operator> <operator>&lt;</operator>

<name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name><operator>-&gt;</operator><name>i_preroll</name></name> <operator>)</operator></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><call><name>DemuxASFPacket</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>packet_sys</name></name></expr></argument>,

<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name><operator>-&gt;</operator><name>i_min_data_packet_size</name></name></expr></argument>,

<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name><operator>-&gt;</operator><name>i_max_data_packet_size</name></name></expr></argument> )</argument_list></call> <operator>&lt;=</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_eos</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_peek</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>vlc_stream_Peek</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>p_peek</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument> )</argument_list></call> <operator>==</operator> <literal type="number">16</literal></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>vlc_guid_t</name></type> <name>guid</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ASF_GetGUID</name><argument_list>( <argument><expr><operator>&amp;</operator><name>guid</name></expr></argument>, <argument><expr><name>p_peek</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_eof</name></name> <operator>=</operator> <operator>!</operator><call><name>guidcmp</name><argument_list>( <argument><expr><operator>&amp;</operator><name>guid</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>asf_object_header_guid</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_sys</name><operator>-&gt;</operator><name>b_eof</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"found a new ASF header"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_eof</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_time</name></name> <operator>==</operator> <name>VLC_TICK_INVALID</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_time</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_sendtime</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></while>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_eos</name></name> <operator>||</operator> <operator>(</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_sendtime</name></name> <operator>-</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_time</name></name> <operator>-</operator> <name>CHUNK</name> <operator>&gt;=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>

<operator>(</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_sendtime</name></name> <operator>-</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_time</name></name> <operator>-</operator> <name>CHUNK</name> <operator>)</operator> <operator>&gt;=</operator>

<name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name><operator>-&gt;</operator><name>i_preroll</name></name> <operator>)</operator></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>bool</name></type> <name>b_data</name> <init>= <expr><call><name>Block_Dequeue</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_time</name></name> <operator>+</operator> <name>CHUNK</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_time</name></name> <operator>+=</operator> <name>CHUNK</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_SetPCR</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>out</name></name></expr></argument>, <argument><expr><name>VLC_TICK_0</name> <operator>+</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_time</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ASF_DEBUG</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Demux Loop Setting PCR to %"</literal><name>PRId64</name></expr></argument>, <argument><expr><name>VLC_TICK_0</name> <operator>+</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_time</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name>b_data</name> <operator>&amp;&amp;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>b_eos</name></name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_sys</name><operator>-&gt;</operator><name>b_eof</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>DemuxEnd</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>DemuxInit</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"failed to load the new header"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_DEMUXER_EOF</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>out</name></name></expr></argument>, <argument><expr><name>ES_OUT_RESET_PCR</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else<block type="pseudo"><block_content>

<return>return <expr><name>VLC_DEMUXER_EOF</name></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><literal type="number">1</literal></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type> <name>p_this</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name> <init>= <expr><operator>(</operator><name>demux_t</name> <operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>DemuxEnd</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>WaitKeyframe</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_seek_track</name></name></expr> )</condition>

<block>{<block_content>

<for>for <control>( <init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>MAX_ASF_TRACKS</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<decl_stmt><decl><type><name>asf_track_t</name> <modifier>*</modifier></type><name>tk</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>track</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><name>tk</name> <operator>&amp;&amp;</operator> <name><name>tk</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>p_sp</name></name> <operator>&amp;&amp;</operator> <name><name>tk</name><operator>-&gt;</operator><name>i_cat</name></name> <operator>==</operator> <name>VIDEO_ES</name> <operator>&amp;&amp;</operator> <name><name>tk</name><operator>-&gt;</operator><name>b_selected</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_seek_track</name></name> <operator>=</operator> <name><name>tk</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>p_sp</name><operator>-&gt;</operator><name>i_stream_number</name></name></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_seek_track</name></name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>asf_track_t</name> <modifier>*</modifier></type><name>tk</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>track</name><index>[<expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_seek_track</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><name><name>tk</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>p_esp</name></name> <operator>&amp;&amp;</operator> <name><name>tk</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>p_esp</name><operator>-&gt;</operator><name>i_average_time_per_frame</name></name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>msftime_t</name></type> <name>i_maxwaittime</name> <init>= <expr><call><name>MSFTIME_FROM_SEC</name><argument_list>( <argument><expr><ternary><condition><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_canfastseek</name></name></expr> ?</condition><then> <expr><literal type="number">60</literal></expr> </then><else>: <expr><literal type="number">5</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>frames</name> <init>= <expr><name>i_maxwaittime</name> <operator>/</operator> <name><name>tk</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>p_esp</name><operator>-&gt;</operator><name>i_average_time_per_frame</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_wait_keyframe</name></name> <operator>=</operator> <call><name>__MIN</name><argument_list>( <argument><expr><name>frames</name></expr></argument>, <argument><expr><name>UINT_MAX</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_wait_keyframe</name></name> <operator>=</operator> <ternary><condition><expr><operator>(</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>b_canfastseek</name></name> <operator>)</operator></expr> ?</condition><then> <expr><literal type="number">25</literal> <operator>*</operator> <literal type="number">30</literal></expr> </then><else>: <expr><literal type="number">25</literal> <operator>*</operator> <literal type="number">5</literal></expr></else></ternary></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_wait_keyframe</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>SeekPercent</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_query</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>args</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>WaitKeyframe</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"seek with percent: waiting %i frames"</literal></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_wait_keyframe</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>demux_vaControlHelper</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><call><name>__MIN</name><argument_list>( <argument><expr><name>INT64_MAX</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_data_begin</name></name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><call><name>__MIN</name><argument_list>( <argument><expr><name>INT64_MAX</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_data_end</name></name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><call><name>__MIN</name><argument_list>( <argument><expr><name>INT64_MAX</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_bitrate</name></name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><call><name>__MIN</name><argument_list>( <argument><expr><name>INT16_MAX</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name><operator>-&gt;</operator><name>i_min_data_packet_size</name></name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><name>i_query</name></expr></argument>, <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>SeekIndex</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>i_date</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>f_pos</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>asf_object_index_t</name> <modifier>*</modifier></type><name>p_index</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"seek with index: %i seconds, position %f"</literal></expr></argument>,

<argument><expr><ternary><condition><expr><name>i_date</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr> ?</condition><then> <expr><operator>(</operator><name>int</name><operator>)</operator><call><name>SEC_FROM_VLC_TICK</name><argument_list>(<argument><expr><name>i_date</name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><operator>-</operator><literal type="number">1</literal></expr></else></ternary></expr></argument>, <argument><expr><name>f_pos</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i_date</name> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>i_date</name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_length</name></name> <operator>*</operator> <name>f_pos</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_preroll_start</name></name> <operator>=</operator> <name>i_date</name> <operator>-</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name><operator>-&gt;</operator><name>i_preroll</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_preroll_start</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_preroll_start</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>p_index</name> <operator>=</operator> <call><name>ASF_FindObject</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_root</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>asf_object_simple_index_guid</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>i_entry</name> <init>= <expr><call><name>MSFTIME_FROM_VLC_TICK</name><argument_list>(<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_preroll_start</name></name></expr></argument>)</argument_list></call> <operator>/</operator> <name><name>p_index</name><operator>-&gt;</operator><name>i_index_entry_time_interval</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>i_entry</name> <operator>&gt;=</operator> <name><name>p_index</name><operator>-&gt;</operator><name>i_index_entry_count</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Incomplete index"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>WaitKeyframe</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>i_offset</name> <init>= <expr><operator>(</operator><name>uint64_t</name><operator>)</operator><name><name>p_index</name><operator>-&gt;</operator><name>index_entry</name><index>[<expr><name>i_entry</name></expr>]</index></name><operator>.</operator><name>i_packet_number</name> <operator>*</operator>

<name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name><operator>-&gt;</operator><name>i_min_data_packet_size</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><call><name>vlc_stream_Seek</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><name>i_offset</name> <operator>+</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_data_begin</name></name></expr></argument> )</argument_list></call> <operator>==</operator> <name>VLC_SUCCESS</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>out</name></name></expr></argument>, <argument><expr><name>ES_OUT_SET_NEXT_DISPLAY_TIME</name></expr></argument>, <argument><expr><name>VLC_TICK_0</name> <operator>+</operator> <name>i_date</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></if>

<else>else<block type="pseudo"><block_content> <return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>SeekPrepare</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_eof</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_eos</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_time</name></name> <operator>=</operator> <name>VLC_TICK_INVALID</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_sendtime</name></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_preroll_start</name></name> <operator>=</operator> <name>ASFPACKET_PREROLL_FROM_CURRENT</name></expr>;</expr_stmt>

<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>MAX_ASF_TRACKS</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<decl_stmt><decl><type><name>asf_track_t</name> <modifier>*</modifier></type><name>tk</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>track</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>tk</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>FlushQueue</name><argument_list>( <argument><expr><name>tk</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>i_time</name></name> <operator>=</operator> <name>VLC_TICK_INVALID</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>out</name></name></expr></argument>, <argument><expr><name>ES_OUT_RESET_PCR</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Control</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_query</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>args</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_meta_t</name> <modifier>*</modifier></type><name>p_meta</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i64</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>f</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>pf</name></decl>;</decl_stmt>

<switch>switch<condition>( <expr><name>i_query</name></expr> )</condition>

<block>{<block_content>

<case>case <expr><name>DEMUX_GET_LENGTH</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>vlc_tick_t</name> <operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_length</name></name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>DEMUX_GET_TIME</name></expr>:</case>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_time</name></name> <operator>==</operator> <name>VLC_TICK_INVALID</name></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>vlc_tick_t</name> <operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_time</name></name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>DEMUX_SET_TIME</name></expr>:</case>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name></name> <operator>||</operator>

<operator>!</operator> <operator>(</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name><operator>-&gt;</operator><name>i_flags</name></name> <operator>&amp;</operator> <name>ASF_FILE_PROPERTIES_SEEKABLE</name> <operator>)</operator></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>SeekPrepare</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_index</name></name> <operator>&amp;&amp;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_length</name></name> <operator>!=</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>va_list</name></type> <name>acpy</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>va_copy</name><argument_list>( <argument><expr><name>acpy</name></expr></argument>, <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i64</name> <operator>=</operator> <call><name>va_arg</name><argument_list>( <argument><expr><name>acpy</name></expr></argument>, <argument><expr><name>vlc_tick_t</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>va_end</name><argument_list>( <argument><expr><name>acpy</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>SeekIndex</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>i64</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><call><name>SeekPercent</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>i_query</name></expr></argument>, <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr>;</return>

<case>case <expr><name>DEMUX_SET_ES</name></expr>:</case>

<block>{<block_content>

<expr_stmt><expr><name>i</name> <operator>=</operator> <call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>int</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><name>i</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Requesting access to enable stream %d"</literal></expr></argument>, <argument><expr><name>i</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_ret</name> <operator>=</operator> <call><name>vlc_stream_Control</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>,

<argument><expr><name>STREAM_SET_PRIVATE_ID_STATE</name></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><name>true</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content> 

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Requesting access to disable stream %d"</literal></expr></argument>, <argument><expr><name>i</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_ret</name> <operator>=</operator> <call><name>vlc_stream_Control</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>,

<argument><expr><name>STREAM_SET_PRIVATE_ID_STATE</name></expr></argument>, <argument><expr><name>i</name></expr></argument>,

<argument><expr><name>false</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>( <expr><name>i_ret</name> <operator>==</operator> <name>VLC_SUCCESS</name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>asf_track_t</name> <modifier>*</modifier></type><name>tk</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>i</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>tk</name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>track</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<for>for<control>( <init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name>MAX_ASF_TRACKS</name></expr> ;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<expr_stmt><expr><name>tk</name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>track</name><index>[<expr><name>j</name></expr>]</index></name></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name>tk</name> <operator>||</operator> <operator>!</operator><name><name>tk</name><operator>-&gt;</operator><name>p_fmt</name></name> <operator>||</operator> <name><name>tk</name><operator>-&gt;</operator><name>i_cat</name></name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal> <operator>*</operator> <name>i</name></expr> )</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>FlushQueue</name><argument_list>( <argument><expr><name>tk</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>i_time</name></name> <operator>=</operator> <name>VLC_TICK_INVALID</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_seek_track</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><operator>(</operator> <name>tk</name> <operator>&amp;&amp;</operator> <name><name>tk</name><operator>-&gt;</operator><name>i_cat</name></name> <operator>==</operator> <name>VIDEO_ES</name> <operator>)</operator> <operator>||</operator> <name>i</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal> <operator>*</operator> <name>VIDEO_ES</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>WaitKeyframe</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>i_ret</name></expr>;</return>

</block_content>}</block>

<case>case <expr><name>DEMUX_SET_ES_LIST</name></expr>:</case>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return> 

<case>case <expr><name>DEMUX_GET_POSITION</name></expr>:</case>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_time</name></name> <operator>==</operator> <name>VLC_TICK_INVALID</name></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_length</name></name> <operator>!=</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>pf</name> <operator>=</operator> <call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>double</name> <operator>*</operator></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>pf</name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_time</name></name> <operator>/</operator> <operator>(</operator><name>double</name><operator>)</operator><name><name>p_sys</name><operator>-&gt;</operator><name>i_length</name></name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><call><name>demux_vaControlHelper</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>,

<argument><expr><call><name>__MIN</name><argument_list>( <argument><expr><name>INT64_MAX</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_data_begin</name></name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><call><name>__MIN</name><argument_list>( <argument><expr><name>INT64_MAX</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_data_end</name></name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><call><name>__MIN</name><argument_list>( <argument><expr><name>INT64_MAX</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_bitrate</name></name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><call><name>__MIN</name><argument_list>( <argument><expr><name>INT16_MAX</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name><operator>-&gt;</operator><name>i_min_data_packet_size</name></name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><name>i_query</name></expr></argument>, <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr>;</return>

<case>case <expr><name>DEMUX_SET_POSITION</name></expr>:</case>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name></name> <operator>||</operator>

<operator>(</operator> <operator>!</operator><operator>(</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name><operator>-&gt;</operator><name>i_flags</name></name> <operator>&amp;</operator> <name>ASF_FILE_PROPERTIES_SEEKABLE</name> <operator>)</operator> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>p_sys</name><operator>-&gt;</operator><name>b_index</name></name> <operator>)</operator></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>SeekPrepare</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_index</name></name> <operator>&amp;&amp;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_length</name></name> <operator>!=</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>va_list</name></type> <name>acpy</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>va_copy</name><argument_list>( <argument><expr><name>acpy</name></expr></argument>, <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>f</name> <operator>=</operator> <call><name>va_arg</name><argument_list>( <argument><expr><name>acpy</name></expr></argument>, <argument><expr><name>double</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>va_end</name><argument_list>( <argument><expr><name>acpy</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>SeekIndex</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>f</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><call><name>SeekPercent</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>i_query</name></expr></argument>, <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr>;</return>

<case>case <expr><name>DEMUX_GET_META</name></expr>:</case>

<expr_stmt><expr><name>p_meta</name> <operator>=</operator> <call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>vlc_meta_t</name> <operator>*</operator></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_meta_Merge</name><argument_list>( <argument><expr><name>p_meta</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>meta</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>DEMUX_CAN_SEEK</name></expr>:</case>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name></name> <operator>||</operator>

<operator>(</operator> <operator>!</operator><operator>(</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name><operator>-&gt;</operator><name>i_flags</name></name> <operator>&amp;</operator> <name>ASF_FILE_PROPERTIES_SEEKABLE</name> <operator>)</operator> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>p_sys</name><operator>-&gt;</operator><name>b_index</name></name> <operator>)</operator></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>bool</name> <modifier>*</modifier></type><name>pb_bool</name> <init>= <expr><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>bool</name> <operator>*</operator></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><operator>*</operator><name>pb_bool</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<default>default:</default>

<return>return <expr><call><name>demux_vaControlHelper</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>,

<argument><expr><call><name>__MIN</name><argument_list>( <argument><expr><name>INT64_MAX</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_data_begin</name></name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><call><name>__MIN</name><argument_list>( <argument><expr><name>INT64_MAX</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_data_end</name></name></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><call><name>__MIN</name><argument_list>( <argument><expr><name>INT64_MAX</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_bitrate</name></name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><ternary><condition><expr><operator>(</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name></name> <operator>)</operator></expr> ?</condition><then> <expr><call><name>__MIN</name><argument_list>( <argument><expr><name>INT_MAX</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name><operator>-&gt;</operator><name>i_min_data_packet_size</name></name></expr></argument> )</argument_list></call></expr> </then><else>: <expr><literal type="number">1</literal></expr></else></ternary></expr></argument>,

<argument><expr><name>i_query</name></expr></argument>, <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr>;</return>

</block_content>}</block></switch>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Packet_SetAR</name><parameter_list>( <parameter><decl><type><name>asf_packet_sys_t</name> <modifier>*</modifier></type><name>p_packetsys</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>i_stream_number</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name></type> <name>i_ratio_x</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>i_ratio_y</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name> <init>= <expr><name><name>p_packetsys</name><operator>-&gt;</operator><name>p_demux</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>asf_track_t</name> <modifier>*</modifier></type><name>tk</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>track</name><index>[<expr><name>i_stream_number</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name><name>tk</name><operator>-&gt;</operator><name>p_fmt</name></name> <operator>||</operator> <operator>(</operator><name><name>tk</name><operator>-&gt;</operator><name>p_fmt</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>i_sar_num</name></name> <operator>==</operator> <name>i_ratio_x</name> <operator>&amp;&amp;</operator> <name><name>tk</name><operator>-&gt;</operator><name>p_fmt</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>i_sar_den</name></name> <operator>==</operator> <name>i_ratio_y</name> <operator>)</operator></expr> )</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>p_fmt</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>i_sar_num</name></name> <operator>=</operator> <name>i_ratio_x</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>p_fmt</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>i_sar_den</name></name> <operator>=</operator> <name>i_ratio_y</name></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>tk</name><operator>-&gt;</operator><name>p_es</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>out</name></name></expr></argument>, <argument><expr><name>ES_OUT_SET_ES_FMT</name></expr></argument>, <argument><expr><name><name>tk</name><operator>-&gt;</operator><name>p_es</name></name></expr></argument>, <argument><expr><name><name>tk</name><operator>-&gt;</operator><name>p_fmt</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Packet_SetSendTime</name><parameter_list>( <parameter><decl><type><name>asf_packet_sys_t</name> <modifier>*</modifier></type><name>p_packetsys</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>i_time</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name> <init>= <expr><name><name>p_packetsys</name><operator>-&gt;</operator><name>p_demux</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_sendtime</name></name> <operator>=</operator> <name>i_time</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Packet_UpdateTime</name><parameter_list>( <parameter><decl><type><name>asf_packet_sys_t</name> <modifier>*</modifier></type><name>p_packetsys</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>i_stream_number</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>i_time</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name> <init>= <expr><name><name>p_packetsys</name><operator>-&gt;</operator><name>p_demux</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>asf_track_t</name> <modifier>*</modifier></type><name>tk</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>track</name><index>[<expr><name>i_stream_number</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><name>tk</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>i_time</name></name> <operator>=</operator> <name>i_time</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>asf_track_info_t</name> <modifier>*</modifier></type> <name>Packet_GetTrackInfo</name><parameter_list>( <parameter><decl><type><name>asf_packet_sys_t</name> <modifier>*</modifier></type><name>p_packetsys</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name></type> <name>i_stream_number</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name> <init>= <expr><name><name>p_packetsys</name><operator>-&gt;</operator><name>p_demux</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>asf_track_t</name> <modifier>*</modifier></type><name>tk</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>track</name><index>[<expr><name>i_stream_number</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>tk</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<return>return <expr><operator>&amp;</operator> <name><name>tk</name><operator>-&gt;</operator><name>info</name></name></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>Packet_DoSkip</name><parameter_list>( <parameter><decl><type><name>asf_packet_sys_t</name> <modifier>*</modifier></type><name>p_packetsys</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>i_stream_number</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b_packet_keyframe</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name> <init>= <expr><name><name>p_packetsys</name><operator>-&gt;</operator><name>p_demux</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>asf_track_t</name> <modifier>*</modifier></type><name>tk</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>track</name><index>[<expr><name>i_stream_number</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>tk</name> <operator>==</operator> <name>NULL</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"undeclared stream[Id 0x%x]"</literal></expr></argument>, <argument><expr><name>i_stream_number</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_wait_keyframe</name></name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><name>i_stream_number</name> <operator>==</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_seek_track</name></name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name>b_packet_keyframe</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_wait_keyframe</name></name><operator>--</operator></expr>;</expr_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_wait_keyframe</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></if>

<else>else<block type="pseudo"><block_content>

<return>return <expr><name>true</name></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>tk</name><operator>-&gt;</operator><name>p_es</name></name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>true</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Packet_Enqueue</name><parameter_list>( <parameter><decl><type><name>asf_packet_sys_t</name> <modifier>*</modifier></type><name>p_packetsys</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>i_stream_number</name></decl></parameter>, <parameter><decl><type><name>block_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_frame</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name> <init>= <expr><name><name>p_packetsys</name><operator>-&gt;</operator><name>p_demux</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>asf_track_t</name> <modifier>*</modifier></type><name>tk</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>track</name><index>[<expr><name>i_stream_number</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name>tk</name></expr> )</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_gather</name> <init>= <expr><call><name>block_ChainGather</name><argument_list>( <argument><expr><operator>*</operator><name>pp_frame</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>p_gather</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>block_ChainLastAppend</name><argument_list>( <argument><expr><operator>&amp;</operator> <name><name>tk</name><operator>-&gt;</operator><name>queue</name><operator>.</operator><name>pp_last</name></name></expr></argument>, <argument><expr><name>p_gather</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ASF_DEBUG</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">" enqueue packet dts %"</literal><name>PRId64</name><literal type="string">" pts %"</literal><name>PRId64</name><literal type="string">" pcr %"</literal><name>PRId64</name></expr></argument>, <argument><expr><name><name>p_gather</name><operator>-&gt;</operator><name>i_dts</name></name></expr></argument>, <argument><expr><name><name>p_gather</name><operator>-&gt;</operator><name>i_pts</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_time</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><operator>*</operator><name>pp_frame</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>Block_Dequeue</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>i_nexttime</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_tracks_have_data</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>MAX_ASF_TRACKS</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<decl_stmt><decl><type><name>asf_track_t</name> <modifier>*</modifier></type><name>tk</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>track</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>tk</name></expr>)</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt>

<expr_stmt><expr><name>b_tracks_have_data</name> <operator>|=</operator> <operator>(</operator><name><name>tk</name><operator>-&gt;</operator><name>queue</name><operator>.</operator><name>p_first</name></name> <operator>!=</operator> <name>NULL</name><operator>)</operator></expr>;</expr_stmt>

<while>while<condition>( <expr><name><name>tk</name><operator>-&gt;</operator><name>queue</name><operator>.</operator><name>p_first</name></name> <operator>&amp;&amp;</operator> <name><name>tk</name><operator>-&gt;</operator><name>queue</name><operator>.</operator><name>p_first</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>&lt;=</operator> <name>i_nexttime</name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_block</name> <init>= <expr><name><name>tk</name><operator>-&gt;</operator><name>queue</name><operator>.</operator><name>p_first</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>queue</name><operator>.</operator><name>p_first</name></name> <operator>=</operator> <name><name>p_block</name><operator>-&gt;</operator><name>p_next</name></name></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>tk</name><operator>-&gt;</operator><name>queue</name><operator>.</operator><name>p_first</name></name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>queue</name><operator>.</operator><name>pp_last</name></name> <operator>=</operator> <operator>&amp;</operator><name><name>tk</name><operator>-&gt;</operator><name>queue</name><operator>.</operator><name>p_first</name></name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_block</name><operator>-&gt;</operator><name>p_next</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_time</name></name> <operator>==</operator> <name>VLC_TICK_INVALID</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>es_out_SetPCR</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>out</name></name></expr></argument>, <argument><expr><name>VLC_TICK_0</name> <operator>+</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_time</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ASF_DEBUG</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">" dequeue setting PCR to %"</literal><name>PRId64</name></expr></argument>, <argument><expr><name>VLC_TICK_0</name> <operator>+</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_time</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</block_content>}</block></if></if_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ASF_DEBUG</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">" sending packet dts %"</literal><name>PRId64</name><literal type="string">" pts %"</literal><name>PRId64</name><literal type="string">" pcr %"</literal><name>PRId64</name></expr></argument>, <argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name></expr></argument>, <argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_pts</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_time</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>es_out_Send</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>out</name></name></expr></argument>, <argument><expr><name><name>tk</name><operator>-&gt;</operator><name>p_es</name></name></expr></argument>, <argument><expr><name>p_block</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></while>

</block_content>}</block></for>

<return>return <expr><name>b_tracks_have_data</name></expr>;</return>

</block_content>}</block></function>

<typedef>typedef <type><struct>struct <name>asf_es_priorities_t</name>

<block>{

<decl_stmt><decl><type><name>uint16_t</name> <modifier>*</modifier></type><name>pi_stream_numbers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>i_count</name></decl>;</decl_stmt>

}</block></struct></type> <name>asf_es_priorities_t</name>;</typedef>

<function><type><specifier>static</specifier> <name>void</name></type> <name>ASF_fillup_es_priorities_ex</name><parameter_list>( <parameter><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_hdr</name></decl></parameter>,

<parameter><decl><type><name>asf_es_priorities_t</name> <modifier>*</modifier></type><name>p_prios</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>asf_object_advanced_mutual_exclusion_t</name> <modifier>*</modifier></type><name>p_mutex</name> <init>=

<expr><call><name>ASF_FindObject</name><argument_list>( <argument><expr><name>p_hdr</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>asf_object_advanced_mutual_exclusion</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator> <name>p_mutex</name></expr> )</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>(</operator> <name>UINT_MAX</name> <operator>&gt;</operator> <name>SIZE_MAX</name> <operator>/</operator> <literal type="number">2</literal> <operator>)</operator></expr></cpp:if>

<if_stmt><if>if <condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_track</name></name> <operator>&gt;</operator> <operator>(</operator><name>size_t</name><operator>)</operator><name>SIZE_MAX</name> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>uint16_t</name></expr></argument>)</argument_list></sizeof></expr> )</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><name><name>p_prios</name><operator>-&gt;</operator><name>pi_stream_numbers</name></name> <operator>=</operator> <call><name>vlc_alloc</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_track</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>uint16_t</name></expr></argument>)</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name><name>p_prios</name><operator>-&gt;</operator><name>pi_stream_numbers</name></name></expr> )</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><name><name>p_mutex</name><operator>-&gt;</operator><name>i_stream_number_count</name></name></expr> )</condition>

<block>{<block_content>

<for>for <control>( <init><decl><type><name>uint16_t</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>p_mutex</name><operator>-&gt;</operator><name>i_stream_number_count</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><name><name>p_prios</name><operator>-&gt;</operator><name>i_count</name></name> <operator>&gt;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_track</name></name> <operator>||</operator> <name>i</name> <operator>&gt;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_track</name></name></expr> )</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_prios</name><operator>-&gt;</operator><name>pi_stream_numbers</name><index>[ <expr><name><name>p_prios</name><operator>-&gt;</operator><name>i_count</name></name><operator>++</operator></expr> ]</index></name> <operator>=</operator> <name><name>p_mutex</name><operator>-&gt;</operator><name>pi_stream_number</name><index>[ <expr><name>i</name></expr> ]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>ASF_fillup_es_bitrate_priorities_ex</name><parameter_list>( <parameter><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_hdr</name></decl></parameter>,

<parameter><decl><type><name>asf_es_priorities_t</name> <modifier>*</modifier></type><name>p_prios</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>asf_object_bitrate_mutual_exclusion_t</name> <modifier>*</modifier></type><name>p_bitrate_mutex</name> <init>=

<expr><call><name>ASF_FindObject</name><argument_list>( <argument><expr><name>p_hdr</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>asf_object_bitrate_mutual_exclusion_guid</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator> <name>p_bitrate_mutex</name></expr> )</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>(</operator> <name>UINT_MAX</name> <operator>&gt;</operator> <name>SIZE_MAX</name> <operator>/</operator> <literal type="number">2</literal> <operator>)</operator></expr></cpp:if>

<if_stmt><if>if <condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_track</name></name> <operator>&gt;</operator> <operator>(</operator><name>size_t</name><operator>)</operator><name>SIZE_MAX</name> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>uint16_t</name></expr></argument>)</argument_list></sizeof></expr> )</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><name><name>p_prios</name><operator>-&gt;</operator><name>pi_stream_numbers</name></name> <operator>=</operator> <call><name>vlc_alloc</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_track</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><name>uint16_t</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name><name>p_prios</name><operator>-&gt;</operator><name>pi_stream_numbers</name></name></expr> )</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><name><name>p_bitrate_mutex</name><operator>-&gt;</operator><name>i_stream_number_count</name></name></expr> )</condition>

<block>{<block_content>

<for>for <control>( <init><decl><type><name>uint16_t</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>p_bitrate_mutex</name><operator>-&gt;</operator><name>i_stream_number_count</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><name><name>p_prios</name><operator>-&gt;</operator><name>i_count</name></name> <operator>&gt;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_track</name></name> <operator>||</operator> <name>i</name> <operator>&gt;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_track</name></name></expr> )</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_prios</name><operator>-&gt;</operator><name>pi_stream_numbers</name><index>[ <expr><name><name>p_prios</name><operator>-&gt;</operator><name>i_count</name></name><operator>++</operator></expr> ]</index></name> <operator>=</operator> <name><name>p_bitrate_mutex</name><operator>-&gt;</operator><name>pi_stream_numbers</name><index>[ <expr><name>i</name></expr> ]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GET_CHECKED</name><parameter_list>( <parameter><type><name>target</name></type></parameter>, <parameter><type><name>getter</name></type></parameter>, <parameter><type><name>maxtarget</name></type></parameter>, <parameter><type><name>temp</name></type></parameter> )</parameter_list></cpp:macro> <cpp:value>{temp i_temp = getter;if ( i_temp &gt; maxtarget ) {msg_Warn( p_demux, "rejecting stream %u : " #target " overflow", i_stream );es_format_Clean( &amp;fmt );goto error;} else {target = i_temp;}}</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>int</name></type> <name>DemuxInit</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_time</name></name> <operator>=</operator> <name>VLC_TICK_INVALID</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_sendtime</name></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_length</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_eos</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_eof</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_bitrate</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_root</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_index</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_track</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_seek_track</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_wait_keyframe</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>MAX_ASF_TRACKS</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>track</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_data_begin</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_data_end</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_preroll_start</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>meta</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_stream_Control</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><name>STREAM_CAN_FASTSEEK</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>b_canfastseek</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><operator>(</operator><name><name>p_sys</name><operator>-&gt;</operator><name>p_root</name></name> <operator>=</operator> <call><name>ASF_ReadObjectRoot</name><argument_list>(<argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_canfastseek</name></name></expr></argument>)</argument_list></call><operator>)</operator></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"ASF plugin discarded (not a valid file)"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>p_root</name><operator>-&gt;</operator><name>p_fp</name></name></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name><operator>-&gt;</operator><name>i_min_data_packet_size</name></name> <operator>!=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name><operator>-&gt;</operator><name>i_max_data_packet_size</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"ASF plugin discarded (invalid file_properties object)"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>error</name>;</goto>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><call><name>ASF_FindObject</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_root</name><operator>-&gt;</operator><name>p_hdr</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>asf_object_content_encryption_guid</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <name>NULL</name>

<operator>||</operator> <call><name>ASF_FindObject</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_root</name><operator>-&gt;</operator><name>p_hdr</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>asf_object_extended_content_encryption_guid</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <name>NULL</name>

<operator>||</operator> <call><name>ASF_FindObject</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_root</name><operator>-&gt;</operator><name>p_hdr</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>asf_object_advanced_content_encryption_guid</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <name>NULL</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_dialog_display_error</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><call><name>_</name><argument_list>(<argument><expr><literal type="string">"Could not demux ASF stream"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"%s"</literal></expr></argument>,

<argument><expr><operator>(</operator><literal type="string">"DRM protected streams are not supported."</literal><operator>)</operator></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>error</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_track</name></name> <operator>=</operator> <call><name>ASF_CountObject</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_root</name><operator>-&gt;</operator><name>p_hdr</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>asf_object_stream_properties_guid</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_track</name></name> <operator>==</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"ASF plugin discarded (cannot find any stream!)"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>error</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"found %u streams"</literal></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_track</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>asf_object_index_t</name> <modifier>*</modifier></type><name>p_index</name> <init>= <expr><call><name>ASF_FindObject</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_root</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>asf_object_simple_index_guid</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>bool</name></type> <name>b_index</name> <init>= <expr><name>p_index</name> <operator>&amp;&amp;</operator> <name><name>p_index</name><operator>-&gt;</operator><name>i_index_entry_count</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>asf_object_t</name> <modifier>*</modifier></type><name>p_hdr_ext</name> <init>= <expr><call><name>ASF_FindObject</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_root</name><operator>-&gt;</operator><name>p_hdr</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>asf_object_header_extension_guid</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>asf_object_language_list_t</name> <modifier>*</modifier></type><name>p_languages</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>asf_es_priorities_t</name></type> <name>fmt_priorities_ex</name> <init>= <expr><block>{ <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>asf_es_priorities_t</name></type> <name>fmt_priorities_bitrate_ex</name> <init>= <expr><block>{ <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>p_hdr_ext</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>p_languages</name> <operator>=</operator> <call><name>ASF_FindObject</name><argument_list>( <argument><expr><name>p_hdr_ext</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>asf_object_language_list</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASF_fillup_es_priorities_ex</name><argument_list>( <argument><expr><name>p_sys</name></expr></argument>, <argument><expr><name>p_hdr_ext</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fmt_priorities_ex</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASF_fillup_es_bitrate_priorities_ex</name><argument_list>( <argument><expr><name>p_sys</name></expr></argument>, <argument><expr><name>p_hdr_ext</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fmt_priorities_bitrate_ex</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>bool</name></type> <name>b_mms</name> <init>= <expr><operator>!</operator><call><name>strncasecmp</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>psz_url</name></name></expr></argument>, <argument><expr><literal type="string">"mms:"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_dvrms</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>b_mms</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>out</name></name></expr></argument>, <argument><expr><name>ES_OUT_SET_ES_CAT_POLICY</name></expr></argument>,

<argument><expr><name>VIDEO_ES</name></expr></argument>, <argument><expr><name>ES_OUT_ES_POLICY_EXCLUSIVE</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<for>for<control>( <init><decl><type><name>unsigned</name></type> <name>i_stream</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i_stream</name> <operator>&lt;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_track</name></name></expr>;</condition> <incr><expr><name>i_stream</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<decl_stmt><decl><type><name>asf_track_t</name> <modifier>*</modifier></type><name>tk</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>asf_object_stream_properties_t</name> <modifier>*</modifier></type><name>p_sp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>asf_object_extended_stream_properties_t</name> <modifier>*</modifier></type><name>p_esp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_access_selected</name></decl>;</decl_stmt>

<expr_stmt><expr><name>p_sp</name> <operator>=</operator> <call><name>ASF_FindObject</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_root</name><operator>-&gt;</operator><name>p_hdr</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>asf_object_stream_properties_guid</name></expr></argument>,

<argument><expr><name>i_stream</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>p_esp</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>p_sys</name><operator>-&gt;</operator><name>track</name><index>[<expr><name><name>p_sp</name><operator>-&gt;</operator><name>i_stream_number</name></name></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt>

<expr_stmt><expr><name>tk</name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>track</name><index>[<expr><name><name>p_sp</name><operator>-&gt;</operator><name>i_stream_number</name></name></expr>]</index></name> <operator>=</operator> <call><name>malloc</name><argument_list>( <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><name>asf_track_t</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>tk</name></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>memset</name><argument_list>( <argument><expr><name>tk</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><name>asf_track_t</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>i_time</name></name> <operator>=</operator> <name>VLC_TICK_INVALID</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>p_sp</name></name> <operator>=</operator> <name>p_sp</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>p_es</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>p_esp</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>p_frame</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>i_cat</name></name> <operator>=</operator> <name>UNKNOWN_ES</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>queue</name><operator>.</operator><name>p_first</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>queue</name><operator>.</operator><name>pp_last</name></name> <operator>=</operator> <operator>&amp;</operator><name><name>tk</name><operator>-&gt;</operator><name>queue</name><operator>.</operator><name>p_first</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name>b_mms</name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>vlc_stream_Control</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><name>STREAM_GET_PRIVATE_ID_STATE</name></expr></argument>,

<argument><expr><operator>(</operator><name>int</name><operator>)</operator> <name><name>p_sp</name><operator>-&gt;</operator><name>i_stream_number</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>b_access_selected</name></expr></argument> )</argument_list></call> <operator>&amp;&amp;</operator>

<operator>!</operator><name>b_access_selected</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>i_cat</name></name> <operator>=</operator> <name>UNKNOWN_ES</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"ignoring not selected stream(ID:%u) (by access)"</literal></expr></argument>,

<argument><expr><name><name>p_sp</name><operator>-&gt;</operator><name>i_stream_number</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<continue>continue;</continue>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name>p_hdr_ext</name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i_ext_stream</name> <init>= <expr><call><name>ASF_CountObject</name><argument_list>( <argument><expr><name>p_hdr_ext</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>asf_object_extended_stream_properties_guid</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>i_ext_stream</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<decl_stmt><decl><type><name>asf_object_t</name> <modifier>*</modifier></type><name>p_tmp</name> <init>=

<expr><call><name>ASF_FindObject</name><argument_list>( <argument><expr><name>p_hdr_ext</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>asf_object_extended_stream_properties_guid</name></expr></argument>, <argument><expr><name>i</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_tmp</name><operator>-&gt;</operator><name>ext_stream</name><operator>.</operator><name>i_stream_number</name></name> <operator>==</operator> <name><name>p_sp</name><operator>-&gt;</operator><name>i_stream_number</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>p_esp</name> <operator>=</operator> <operator>&amp;</operator><name><name>p_tmp</name><operator>-&gt;</operator><name>ext_stream</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>p_esp</name></name> <operator>=</operator> <name>p_esp</name></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name>p_esp</name></expr> )</condition><block type="pseudo"><block_content>

<for>for<control>( <init><decl><type><name>uint16_t</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name><name>p_esp</name><operator>-&gt;</operator><name>i_payload_extension_system_count</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><name>b_dvrms</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control><block type="pseudo"><block_content>

<expr_stmt><expr><name>b_dvrms</name> <operator>=</operator> <call><name>guidcmp</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_esp</name><operator>-&gt;</operator><name>p_ext</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>i_extension_id</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>asf_dvr_sampleextension_timing_rep_data_guid</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>es_format_t</name></type> <name>fmt</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>guidcmp</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sp</name><operator>-&gt;</operator><name>i_stream_type</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>asf_object_stream_type_audio</name></expr></argument> )</argument_list></call> <operator>&amp;&amp;</operator>

<name><name>p_sp</name><operator>-&gt;</operator><name>i_type_specific_data_length</name></name> <operator>&gt;=</operator> <sizeof>sizeof<argument_list>( <argument><expr><name>WAVEFORMATEX</name></expr></argument> )</argument_list></sizeof> <operator>-</operator> <literal type="number">2</literal></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>p_data</name> <init>= <expr><name><name>p_sp</name><operator>-&gt;</operator><name>p_type_specific_data</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_format</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>es_format_Init</name><argument_list>( <argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>, <argument><expr><name>AUDIO_ES</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_format</name> <operator>=</operator> <call><name>GetWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>wf_tag_to_fourcc</name><argument_list>( <argument><expr><name>i_format</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>fmt</name><operator>.</operator><name>i_codec</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>GET_CHECKED</name><argument_list>( <argument><expr><name><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_channels</name></name></expr></argument>, <argument><expr><call><name>GetWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><name>uint16_t</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>GET_CHECKED</name><argument_list>( <argument><expr><name><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_rate</name></name></expr></argument>, <argument><expr><call><name>GetDWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_data</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><name>UINT_MAX</name></expr></argument>, <argument><expr><name>uint32_t</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>GET_CHECKED</name><argument_list>( <argument><expr><name><name>fmt</name><operator>.</operator><name>i_bitrate</name></name></expr></argument>, <argument><expr><call><name>GetDWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_data</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></expr></argument> )</argument_list></call> <operator>*</operator> <literal type="number">8</literal></expr></argument>,

<argument><expr><name>UINT_MAX</name></expr></argument>, <argument><expr><name>uint32_t</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_blockalign</name></name> <operator>=</operator> <call><name>GetWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_data</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_bitspersample</name></name> <operator>=</operator> <call><name>GetWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_data</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sp</name><operator>-&gt;</operator><name>i_type_specific_data_length</name></name> <operator>&gt;</operator> <sizeof>sizeof<argument_list>( <argument><expr><name>WAVEFORMATEX</name></expr></argument> )</argument_list></sizeof> <operator>&amp;&amp;</operator>

<name>i_format</name> <operator>!=</operator> <name>WAVE_FORMAT_MPEGLAYER3</name> <operator>&amp;&amp;</operator>

<name>i_format</name> <operator>!=</operator> <name>WAVE_FORMAT_MPEG</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>GET_CHECKED</name><argument_list>( <argument><expr><name><name>fmt</name><operator>.</operator><name>i_extra</name></name></expr></argument>, <argument><expr><call><name>__MIN</name><argument_list>( <argument><expr><call><name>GetWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_data</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><name><name>p_sp</name><operator>-&gt;</operator><name>i_type_specific_data_length</name></name> <operator>-</operator>

<sizeof>sizeof<argument_list>( <argument><expr><name>WAVEFORMATEX</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><name>INT_MAX</name></expr></argument>, <argument><expr><name>uint32_t</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>p_extra</name></name> <operator>=</operator> <call><name>malloc</name><argument_list>( <argument><expr><name><name>fmt</name><operator>.</operator><name>i_extra</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>( <argument><expr><name><name>fmt</name><operator>.</operator><name>p_extra</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_data</name><index>[<expr><sizeof>sizeof<argument_list>( <argument><expr><name>WAVEFORMATEX</name></expr></argument> )</argument_list></sizeof></expr>]</index></name></expr></argument>,

<argument><expr><name><name>fmt</name><operator>.</operator><name>i_extra</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"added new audio stream (codec:%4.4s(0x%x),ID:%d)"</literal></expr></argument>,

<argument><expr><operator>(</operator><name>char</name><operator>*</operator><operator>)</operator><operator>&amp;</operator><name><name>fmt</name><operator>.</operator><name>i_codec</name></name></expr></argument>, <argument><expr><call><name>GetWLE</name><argument_list>( <argument><expr><name>p_data</name></expr></argument> )</argument_list></call></expr></argument>, <argument><expr><name><name>p_sp</name><operator>-&gt;</operator><name>i_stream_number</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if<condition>( <expr><call><name>guidcmp</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sp</name><operator>-&gt;</operator><name>i_stream_type</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>asf_object_stream_type_video</name></expr></argument> )</argument_list></call> <operator>&amp;&amp;</operator>

<name><name>p_sp</name><operator>-&gt;</operator><name>i_type_specific_data_length</name></name> <operator>&gt;=</operator> <literal type="number">11</literal> <operator>+</operator>

<sizeof>sizeof<argument_list>( <argument><expr><name>VLC_BITMAPINFOHEADER</name></expr></argument> )</argument_list></sizeof></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>p_data</name> <init>= <expr><operator>&amp;</operator><name><name>p_sp</name><operator>-&gt;</operator><name>p_type_specific_data</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>es_format_Init</name><argument_list>( <argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>, <argument><expr><name>VIDEO_ES</name></expr></argument>,

<argument><expr><call><name>VLC_FOURCC</name><argument_list>( <argument><expr><name><name>p_data</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>p_data</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>,

<argument><expr><name><name>p_data</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>p_data</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>GET_CHECKED</name><argument_list>( <argument><expr><name><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_width</name></name></expr></argument>, <argument><expr><call><name>GetDWLE</name><argument_list>( <argument><expr><name>p_data</name> <operator>+</operator> <literal type="number">4</literal></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><name>UINT_MAX</name></expr></argument>, <argument><expr><name>uint32_t</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>GET_CHECKED</name><argument_list>( <argument><expr><name><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_height</name></name></expr></argument>, <argument><expr><call><name>GetDWLE</name><argument_list>( <argument><expr><name>p_data</name> <operator>+</operator> <literal type="number">8</literal></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><name>UINT_MAX</name></expr></argument>, <argument><expr><name>uint32_t</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_visible_width</name></name> <operator>=</operator> <name><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_width</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_visible_height</name></name> <operator>=</operator> <name><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_height</name></name></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>p_esp</name> <operator>&amp;&amp;</operator> <name><name>p_esp</name><operator>-&gt;</operator><name>i_average_time_per_frame</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_frame_rate</name></name> <operator>=</operator> <literal type="number">10000000</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>GET_CHECKED</name><argument_list>( <argument><expr><name><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_frame_rate_base</name></name></expr></argument>,

<argument><expr><name><name>p_esp</name><operator>-&gt;</operator><name>i_average_time_per_frame</name></name></expr></argument>,

<argument><expr><name>UINT_MAX</name></expr></argument>, <argument><expr><name>uint64_t</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>fmt</name><operator>.</operator><name>i_codec</name></name> <operator>==</operator> <call><name>VLC_FOURCC</name><argument_list>( <argument><expr><literal type="char">'D'</literal></expr></argument>,<argument><expr><literal type="char">'V'</literal></expr></argument>,<argument><expr><literal type="char">'R'</literal></expr></argument>,<argument><expr><literal type="char">' '</literal></expr></argument>)</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_codec</name></name> <operator>=</operator> <name>VLC_CODEC_MPGV</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sp</name><operator>-&gt;</operator><name>i_type_specific_data_length</name></name> <operator>&gt;</operator> <literal type="number">11</literal> <operator>+</operator>

<sizeof>sizeof<argument_list>( <argument><expr><name>VLC_BITMAPINFOHEADER</name></expr></argument> )</argument_list></sizeof></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>GET_CHECKED</name><argument_list>( <argument><expr><name><name>fmt</name><operator>.</operator><name>i_extra</name></name></expr></argument>, <argument><expr><call><name>__MIN</name><argument_list>( <argument><expr><call><name>GetDWLE</name><argument_list>( <argument><expr><name>p_data</name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><name><name>p_sp</name><operator>-&gt;</operator><name>i_type_specific_data_length</name></name> <operator>-</operator> <literal type="number">11</literal> <operator>-</operator>

<sizeof>sizeof<argument_list>( <argument><expr><name>VLC_BITMAPINFOHEADER</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><name>UINT_MAX</name></expr></argument>, <argument><expr><name>uint32_t</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>p_extra</name></name> <operator>=</operator> <call><name>malloc</name><argument_list>( <argument><expr><name><name>fmt</name><operator>.</operator><name>i_extra</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>( <argument><expr><name><name>fmt</name><operator>.</operator><name>p_extra</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_data</name><index>[<expr><sizeof>sizeof<argument_list>( <argument><expr><name>VLC_BITMAPINFOHEADER</name></expr></argument> )</argument_list></sizeof></expr>]</index></name></expr></argument>,

<argument><expr><name><name>fmt</name><operator>.</operator><name>i_extra</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_root</name><operator>-&gt;</operator><name>p_metadata</name></name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>asf_object_metadata_t</name> <modifier>*</modifier></type><name>p_meta</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_root</name><operator>-&gt;</operator><name>p_metadata</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_aspect_x</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>i_aspect_y</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>i</name></decl>;</decl_stmt>

<for>for<control>( <init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>p_meta</name><operator>-&gt;</operator><name>i_record_entries_count</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_meta</name><operator>-&gt;</operator><name>record</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>psz_name</name></expr> )</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>strcmp</name><argument_list>( <argument><expr><name><name>p_meta</name><operator>-&gt;</operator><name>record</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>psz_name</name></expr></argument>, <argument><expr><literal type="string">"AspectRatioX"</literal></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><operator>(</operator><operator>!</operator><name>i_aspect_x</name> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>p_meta</name><operator>-&gt;</operator><name>record</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>i_stream</name><operator>)</operator> <operator>||</operator>

<name><name>p_meta</name><operator>-&gt;</operator><name>record</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>i_stream</name> <operator>==</operator>

<name><name>p_sp</name><operator>-&gt;</operator><name>i_stream_number</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>GET_CHECKED</name><argument_list>( <argument><expr><name>i_aspect_x</name></expr></argument>, <argument><expr><name><name>p_meta</name><operator>-&gt;</operator><name>record</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>i_val</name></expr></argument>,

<argument><expr><name>UINT_MAX</name></expr></argument>, <argument><expr><name>uint64_t</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>strcmp</name><argument_list>( <argument><expr><name><name>p_meta</name><operator>-&gt;</operator><name>record</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>psz_name</name></expr></argument>, <argument><expr><literal type="string">"AspectRatioY"</literal></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><operator>(</operator><operator>!</operator><name>i_aspect_y</name> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>p_meta</name><operator>-&gt;</operator><name>record</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>i_stream</name><operator>)</operator> <operator>||</operator>

<name><name>p_meta</name><operator>-&gt;</operator><name>record</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>i_stream</name> <operator>==</operator>

<name><name>p_sp</name><operator>-&gt;</operator><name>i_stream_number</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>GET_CHECKED</name><argument_list>( <argument><expr><name>i_aspect_y</name></expr></argument>, <argument><expr><name><name>p_meta</name><operator>-&gt;</operator><name>record</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>i_val</name></expr></argument>,

<argument><expr><name>UINT_MAX</name></expr></argument>, <argument><expr><name>uint64_t</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<if_stmt><if>if<condition>( <expr><name>i_aspect_x</name> <operator>&amp;&amp;</operator> <name>i_aspect_y</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_sar_num</name></name> <operator>=</operator> <name>i_aspect_x</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_sar_den</name></name> <operator>=</operator> <name>i_aspect_y</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_index</name></name> <operator>=</operator> <name>b_index</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"added new video stream(codec:%4.4s,ID:%d)"</literal></expr></argument>,

<argument><expr><operator>(</operator><name>char</name><operator>*</operator><operator>)</operator><operator>&amp;</operator><name><name>fmt</name><operator>.</operator><name>i_codec</name></name></expr></argument>, <argument><expr><name><name>p_sp</name><operator>-&gt;</operator><name>i_stream_number</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if<condition>( <expr><call><name>guidcmp</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sp</name><operator>-&gt;</operator><name>i_stream_type</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>asf_object_stream_type_binary</name></expr></argument> )</argument_list></call> <operator>&amp;&amp;</operator>

<name><name>p_sp</name><operator>-&gt;</operator><name>i_type_specific_data_length</name></name> <operator>&gt;=</operator> <literal type="number">64</literal></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>vlc_guid_t</name></type> <name>i_major_media_type</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ASF_GetGUID</name><argument_list>( <argument><expr><operator>&amp;</operator><name>i_major_media_type</name></expr></argument>, <argument><expr><name><name>p_sp</name><operator>-&gt;</operator><name>p_type_specific_data</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"stream(ID:%d) major type "</literal> <name>GUID_FMT</name></expr></argument>, <argument><expr><name><name>p_sp</name><operator>-&gt;</operator><name>i_stream_number</name></name></expr></argument>,

<argument><expr><call><name>GUID_PRINT</name><argument_list>(<argument><expr><name>i_major_media_type</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>vlc_guid_t</name></type> <name>i_media_subtype</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ASF_GetGUID</name><argument_list>( <argument><expr><operator>&amp;</operator><name>i_media_subtype</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_sp</name><operator>-&gt;</operator><name>p_type_specific_data</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"stream(ID:%d) subtype "</literal> <name>GUID_FMT</name></expr></argument>, <argument><expr><name><name>p_sp</name><operator>-&gt;</operator><name>i_stream_number</name></name></expr></argument>,

<argument><expr><call><name>GUID_PRINT</name><argument_list>(<argument><expr><name>i_media_subtype</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>vlc_guid_t</name></type> <name>i_format_type</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ASF_GetGUID</name><argument_list>( <argument><expr><operator>&amp;</operator><name>i_format_type</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_sp</name><operator>-&gt;</operator><name>p_type_specific_data</name><index>[<expr><literal type="number">44</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"stream(ID:%d) format type "</literal> <name>GUID_FMT</name></expr></argument>, <argument><expr><name><name>p_sp</name><operator>-&gt;</operator><name>i_stream_number</name></name></expr></argument>,

<argument><expr><call><name>GUID_PRINT</name><argument_list>(<argument><expr><name>i_format_type</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>p_data</name> <init>= <expr><name><name>p_sp</name><operator>-&gt;</operator><name>p_type_specific_data</name></name> <operator>+</operator> <literal type="number">64</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_data</name> <init>= <expr><name><name>p_sp</name><operator>-&gt;</operator><name>i_type_specific_data_length</name></name> <operator>-</operator> <literal type="number">64</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Ext stream header detected. datasize = %d"</literal></expr></argument>, <argument><expr><name><name>p_sp</name><operator>-&gt;</operator><name>i_type_specific_data_length</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>guidcmp</name><argument_list>( <argument><expr><operator>&amp;</operator><name>i_major_media_type</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>asf_object_extended_stream_type_audio</name></expr></argument> )</argument_list></call> <operator>&amp;&amp;</operator>

<name>i_data</name> <operator>&gt;=</operator> <sizeof>sizeof<argument_list>( <argument><expr><name>WAVEFORMATEX</name></expr></argument> )</argument_list></sizeof> <operator>-</operator> <literal type="number">2</literal></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>i_format</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>es_format_Init</name><argument_list>( <argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>, <argument><expr><name>AUDIO_ES</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_format</name> <operator>=</operator> <call><name>GetWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i_format</name> <operator>==</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_codec</name></name> <operator>=</operator> <name>VLC_CODEC_A52</name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><call><name>wf_tag_to_fourcc</name><argument_list>( <argument><expr><name>i_format</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>fmt</name><operator>.</operator><name>i_codec</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><call><name>GET_CHECKED</name><argument_list>( <argument><expr><name><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_channels</name></name></expr></argument>, <argument><expr><call><name>GetWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><name>uint16_t</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>GET_CHECKED</name><argument_list>( <argument><expr><name><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_rate</name></name></expr></argument>, <argument><expr><call><name>GetDWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_data</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><name>UINT_MAX</name></expr></argument>, <argument><expr><name>uint32_t</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>GET_CHECKED</name><argument_list>( <argument><expr><name><name>fmt</name><operator>.</operator><name>i_bitrate</name></name></expr></argument>, <argument><expr><call><name>GetDWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_data</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></expr></argument> )</argument_list></call> <operator>*</operator> <literal type="number">8</literal></expr></argument>,

<argument><expr><name>UINT_MAX</name></expr></argument>, <argument><expr><name>uint32_t</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_blockalign</name></name> <operator>=</operator> <call><name>GetWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_data</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_bitspersample</name></name> <operator>=</operator> <call><name>GetWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_data</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sp</name><operator>-&gt;</operator><name>i_type_specific_data_length</name></name> <operator>&gt;</operator> <sizeof>sizeof<argument_list>( <argument><expr><name>WAVEFORMATEX</name></expr></argument> )</argument_list></sizeof> <operator>&amp;&amp;</operator>

<name>i_format</name> <operator>!=</operator> <name>WAVE_FORMAT_MPEGLAYER3</name> <operator>&amp;&amp;</operator>

<name>i_format</name> <operator>!=</operator> <name>WAVE_FORMAT_MPEG</name> <operator>&amp;&amp;</operator> <name>i_data</name> <operator>&gt;=</operator> <literal type="number">19</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>GET_CHECKED</name><argument_list>( <argument><expr><name><name>fmt</name><operator>.</operator><name>i_extra</name></name></expr></argument>, <argument><expr><call><name>__MIN</name><argument_list>( <argument><expr><call><name>GetWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_data</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><name><name>p_sp</name><operator>-&gt;</operator><name>i_type_specific_data_length</name></name> <operator>-</operator>

<sizeof>sizeof<argument_list>( <argument><expr><name>WAVEFORMATEX</name></expr></argument> )</argument_list></sizeof> <operator>-</operator> <literal type="number">64</literal></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><name>INT_MAX</name></expr></argument>, <argument><expr><name>uint32_t</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>p_extra</name></name> <operator>=</operator> <call><name>malloc</name><argument_list>( <argument><expr><name><name>fmt</name><operator>.</operator><name>i_extra</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name><name>fmt</name><operator>.</operator><name>p_extra</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>memcpy</name><argument_list>( <argument><expr><name><name>fmt</name><operator>.</operator><name>p_extra</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_data</name><index>[<expr><sizeof>sizeof<argument_list>( <argument><expr><name>WAVEFORMATEX</name></expr></argument> )</argument_list></sizeof></expr>]</index></name></expr></argument>, <argument><expr><name><name>fmt</name><operator>.</operator><name>i_extra</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_extra</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"added new audio stream (codec:%4.4s(0x%x),ID:%d)"</literal></expr></argument>,

<argument><expr><operator>(</operator><name>char</name><operator>*</operator><operator>)</operator><operator>&amp;</operator><name><name>fmt</name><operator>.</operator><name>i_codec</name></name></expr></argument>, <argument><expr><name>i_format</name></expr></argument>, <argument><expr><name><name>p_sp</name><operator>-&gt;</operator><name>i_stream_number</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><call><name>es_format_Init</name><argument_list>( <argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>, <argument><expr><name>UNKNOWN_ES</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><call><name>es_format_Init</name><argument_list>( <argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>, <argument><expr><name>UNKNOWN_ES</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if<condition>( <expr><name>b_dvrms</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_original_fourcc</name></name> <operator>=</operator> <call><name>VLC_FOURCC</name><argument_list>( <argument><expr><literal type="char">'D'</literal></expr></argument>,<argument><expr><literal type="char">'V'</literal></expr></argument>,<argument><expr><literal type="char">'R'</literal></expr></argument>,<argument><expr><literal type="char">' '</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>b_packetized</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>fmt</name><operator>.</operator><name>i_codec</name></name> <operator>==</operator> <name>VLC_CODEC_MP4A</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>b_packetized</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>i_cat</name></name> <operator>=</operator> <name><name>tk</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>i_cat</name></name> <operator>=</operator> <name><name>fmt</name><operator>.</operator><name>i_cat</name></name></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>fmt</name><operator>.</operator><name>i_cat</name></name> <operator>!=</operator> <name>UNKNOWN_ES</name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name>p_esp</name> <operator>&amp;&amp;</operator> <name>p_languages</name> <operator>&amp;&amp;</operator>

<name><name>p_esp</name><operator>-&gt;</operator><name>i_language_index</name></name> <operator>&lt;</operator> <name><name>p_languages</name><operator>-&gt;</operator><name>i_language</name></name> <operator>&amp;&amp;</operator>

<name><name>p_languages</name><operator>-&gt;</operator><name>ppsz_language</name><index>[<expr><name><name>p_esp</name><operator>-&gt;</operator><name>i_language_index</name></name></expr>]</index></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>psz_language</name></name> <operator>=</operator> <call><name>strdup</name><argument_list>( <argument><expr><name><name>p_languages</name><operator>-&gt;</operator><name>ppsz_language</name><index>[<expr><name><name>p_esp</name><operator>-&gt;</operator><name>i_language_index</name></name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>p</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>fmt</name><operator>.</operator><name>psz_language</name></name> <operator>&amp;&amp;</operator> <operator>(</operator><name>p</name> <operator>=</operator> <call><name>strchr</name><argument_list>( <argument><expr><name><name>fmt</name><operator>.</operator><name>psz_language</name></name></expr></argument>, <argument><expr><literal type="char">'-'</literal></expr></argument> )</argument_list></call><operator>)</operator></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><operator>*</operator><name>p</name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_priority</name> <init>= <expr><name>ES_PRIORITY_SELECTABLE_MIN</name></expr></init></decl>;</decl_stmt>

<for>for<control>( <init><decl><type><name>uint16_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>fmt_priorities_ex</name><operator>.</operator><name>i_count</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><name><name>fmt_priorities_ex</name><operator>.</operator><name>pi_stream_numbers</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <name><name>p_sp</name><operator>-&gt;</operator><name>i_stream_number</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>i_priority</name> <operator>=</operator> <name>ES_PRIORITY_NOT_DEFAULTABLE</name></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<for>for<control>( <init><decl><type><name>uint16_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>fmt_priorities_bitrate_ex</name><operator>.</operator><name>i_count</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><name><name>fmt_priorities_bitrate_ex</name><operator>.</operator><name>pi_stream_numbers</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <name><name>p_sp</name><operator>-&gt;</operator><name>i_stream_number</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>i_priority</name> <operator>=</operator> <name>ES_PRIORITY_NOT_DEFAULTABLE</name></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_priority</name></name> <operator>=</operator> <name>i_priority</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name>i_stream</name> <operator>&lt;=</operator> <name>INT_MAX</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_id</name></name> <operator>=</operator> <name>i_stream</name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Can't set fmt.i_id to match stream id %u"</literal></expr></argument>, <argument><expr><name>i_stream</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if <condition>( <expr><name><name>fmt</name><operator>.</operator><name>i_cat</name></name> <operator>==</operator> <name>VIDEO_ES</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>p_fmt</name></name> <operator>=</operator> <call><name>malloc</name><argument_list>( <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><name>es_format_t</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name><name>tk</name><operator>-&gt;</operator><name>p_fmt</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>es_format_Copy</name><argument_list>( <argument><expr><name><name>tk</name><operator>-&gt;</operator><name>p_fmt</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_id</name></name> <operator>=</operator> <name><name>tk</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>p_sp</name><operator>-&gt;</operator><name>i_stream_number</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>p_es</name></name> <operator>=</operator> <call><name>es_out_Add</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>out</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>vlc_stream_Control</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><name>STREAM_GET_PRIVATE_ID_STATE</name></expr></argument>,

<argument><expr><operator>(</operator><name>int</name><operator>)</operator> <name><name>p_sp</name><operator>-&gt;</operator><name>i_stream_number</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>b_access_selected</name></expr></argument> )</argument_list></call> <operator>&amp;&amp;</operator>

<name>b_access_selected</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_access_selected_track</name><index>[<expr><name><name>fmt</name><operator>.</operator><name>i_cat</name></name></expr>]</index></name> <operator>=</operator> <name><name>p_sp</name><operator>-&gt;</operator><name>i_stream_number</name></name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"ignoring unknown stream(ID:%d)"</literal></expr></argument>,

<argument><expr><name><name>p_sp</name><operator>-&gt;</operator><name>i_stream_number</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>es_format_Clean</name><argument_list>( <argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>fmt_priorities_ex</name><operator>.</operator><name>pi_stream_numbers</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>fmt_priorities_bitrate_ex</name><operator>.</operator><name>pi_stream_numbers</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_data_begin</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>p_root</name><operator>-&gt;</operator><name>p_data</name><operator>-&gt;</operator><name>i_object_pos</name></name> <operator>+</operator> <literal type="number">50</literal></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_root</name><operator>-&gt;</operator><name>p_data</name><operator>-&gt;</operator><name>i_object_size</name></name> <operator>!=</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content> 

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_data_end</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>p_root</name><operator>-&gt;</operator><name>p_data</name><operator>-&gt;</operator><name>i_object_pos</name></name> <operator>+</operator>

<name><name>p_sys</name><operator>-&gt;</operator><name>p_root</name><operator>-&gt;</operator><name>p_data</name><operator>-&gt;</operator><name>i_object_size</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_data_end</name></name> <operator>=</operator> <call><name>__MIN</name><argument_list>( <argument><expr><operator>(</operator><name>uint64_t</name><operator>)</operator><call><name>stream_Size</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument> )</argument_list></call></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_data_end</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content> 

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_data_end</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if<condition>( <expr><call><name>vlc_stream_Seek</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_data_begin</name></name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>VLC_SUCCESS</name></expr> )</condition><block type="pseudo"><block_content>

<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name><operator>-&gt;</operator><name>i_data_packets_count</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>i_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>i_size</name> <init>= <expr><call><name>stream_Size</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_data_end</name></name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>i_size</name> <operator>&gt;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_data_end</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>i_size</name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_data_end</name></name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>i_count</name> <operator>=</operator> <operator>(</operator> <name>i_size</name> <operator>-</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_data_begin</name></name> <operator>)</operator> <operator>/</operator>

<name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name><operator>-&gt;</operator><name>i_min_data_packet_size</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_length</name></name> <operator>=</operator> <call><name>VLC_TICK_FROM_MSFTIME</name><argument_list>(<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name><operator>-&gt;</operator><name>i_play_duration</name></name></expr></argument>)</argument_list></call> <operator>*</operator>

<operator>(</operator><name>vlc_tick_t</name><operator>)</operator><name>i_count</name> <operator>/</operator>

<operator>(</operator><name>vlc_tick_t</name><operator>)</operator><name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name><operator>-&gt;</operator><name>i_data_packets_count</name></name></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_length</name></name> <operator>&lt;=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name><operator>-&gt;</operator><name>i_preroll</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_length</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_length</name></name> <operator>-=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name><operator>-&gt;</operator><name>i_preroll</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_bitrate</name></name> <operator>=</operator> <literal type="number">8</literal> <operator>*</operator> <name>i_size</name> <operator>*</operator> <name>CLOCK_FREQ</name> <operator>/</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_length</name></name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>meta</name></name> <operator>=</operator> <call><name>vlc_meta_New</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>asf_object_content_description_t</name> <modifier>*</modifier></type><name>p_cd</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>(</operator> <name>p_cd</name> <operator>=</operator> <call><name>ASF_FindObject</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_root</name><operator>-&gt;</operator><name>p_hdr</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>asf_object_content_description_guid</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call> <operator>)</operator></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name><name>p_cd</name><operator>-&gt;</operator><name>psz_title</name></name> <operator>&amp;&amp;</operator> <operator>*</operator><name><name>p_cd</name><operator>-&gt;</operator><name>psz_title</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_meta_SetTitle</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>meta</name></name></expr></argument>, <argument><expr><name><name>p_cd</name><operator>-&gt;</operator><name>psz_title</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_cd</name><operator>-&gt;</operator><name>psz_artist</name></name> <operator>&amp;&amp;</operator> <operator>*</operator><name><name>p_cd</name><operator>-&gt;</operator><name>psz_artist</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_meta_SetArtist</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>meta</name></name></expr></argument>, <argument><expr><name><name>p_cd</name><operator>-&gt;</operator><name>psz_artist</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_cd</name><operator>-&gt;</operator><name>psz_copyright</name></name> <operator>&amp;&amp;</operator> <operator>*</operator><name><name>p_cd</name><operator>-&gt;</operator><name>psz_copyright</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_meta_SetCopyright</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>meta</name></name></expr></argument>, <argument><expr><name><name>p_cd</name><operator>-&gt;</operator><name>psz_copyright</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_cd</name><operator>-&gt;</operator><name>psz_description</name></name> <operator>&amp;&amp;</operator> <operator>*</operator><name><name>p_cd</name><operator>-&gt;</operator><name>psz_description</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_meta_SetDescription</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>meta</name></name></expr></argument>, <argument><expr><name><name>p_cd</name><operator>-&gt;</operator><name>psz_description</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_cd</name><operator>-&gt;</operator><name>psz_rating</name></name> <operator>&amp;&amp;</operator> <operator>*</operator><name><name>p_cd</name><operator>-&gt;</operator><name>psz_rating</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_meta_SetRating</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>meta</name></name></expr></argument>, <argument><expr><name><name>p_cd</name><operator>-&gt;</operator><name>psz_rating</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>asf_object_extended_content_description_t</name> <modifier>*</modifier></type><name>p_ecd</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>(</operator> <name>p_ecd</name> <operator>=</operator> <call><name>ASF_FindObject</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_root</name><operator>-&gt;</operator><name>p_hdr</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>asf_object_extended_content_description</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call> <operator>)</operator></expr> )</condition>

<block>{<block_content>

<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>p_ecd</name><operator>-&gt;</operator><name>i_count</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>set_meta</name><parameter_list>( <parameter><type><name>name</name></type></parameter>, <parameter><type><name>vlc_type</name></type></parameter> )</parameter_list></cpp:macro> <cpp:value>if( p_ecd-&gt;ppsz_name[i] &amp;&amp; !strncmp( p_ecd-&gt;ppsz_name[i], name, strlen(name) ) ) vlc_meta_Set( p_sys-&gt;meta, vlc_type, p_ecd-&gt;ppsz_value[i] );</cpp:value></cpp:define>

<macro><name>set_meta</name><argument_list>( <argument><literal type="string">"WM/AlbumTitle"</literal></argument>, <argument>vlc_meta_Album</argument> )</argument_list></macro>

<if_stmt><else>else<block type="pseudo"><block_content> <macro><name>set_meta</name><argument_list>( <argument><literal type="string">"WM/TrackNumber"</literal></argument>, <argument>vlc_meta_TrackNumber</argument> )</argument_list></macro>

<if_stmt><else>else<block type="pseudo"><block_content> <macro><name>set_meta</name><argument_list>( <argument><literal type="string">"WM/Year"</literal></argument>, <argument>vlc_meta_Date</argument> )</argument_list></macro>

<if_stmt><else>else<block type="pseudo"><block_content> <macro><name>set_meta</name><argument_list>( <argument><literal type="string">"WM/Genre"</literal></argument>, <argument>vlc_meta_Genre</argument> )</argument_list></macro>

<if_stmt><else>else<block type="pseudo"><block_content> <macro><name>set_meta</name><argument_list>( <argument><literal type="string">"WM/Genre"</literal></argument>, <argument>vlc_meta_Genre</argument> )</argument_list></macro>

<if_stmt><else>else<block type="pseudo"><block_content> <macro><name>set_meta</name><argument_list>( <argument><literal type="string">"WM/AlbumArtist"</literal></argument>, <argument>vlc_meta_AlbumArtist</argument> )</argument_list></macro>

<if_stmt><else>else<block type="pseudo"><block_content> <macro><name>set_meta</name><argument_list>( <argument><literal type="string">"WM/Publisher"</literal></argument>, <argument>vlc_meta_Publisher</argument> )</argument_list></macro>

<if_stmt><else>else<block type="pseudo"><block_content> <macro><name>set_meta</name><argument_list>( <argument><literal type="string">"WM/PartOfSet"</literal></argument>, <argument>vlc_meta_DiscNumber</argument> )</argument_list></macro>

<if_stmt><if type="elseif">else if<condition>( <expr><name><name>p_ecd</name><operator>-&gt;</operator><name>ppsz_value</name><index>[<expr><name>i</name></expr>]</index></name> <operator>!=</operator> <name>NULL</name> <operator>&amp;&amp;</operator> <name><name>p_ecd</name><operator>-&gt;</operator><name>ppsz_name</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&amp;&amp;</operator>

<operator>*</operator><name><name>p_ecd</name><operator>-&gt;</operator><name>ppsz_value</name><index>[<expr><name>i</name></expr>]</index></name> <operator>!=</operator> <literal type="char">'\0'</literal> <operator>&amp;&amp;</operator> 

<operator>*</operator><name><name>p_ecd</name><operator>-&gt;</operator><name>ppsz_value</name><index>[<expr><name>i</name></expr>]</index></name> <operator>!=</operator> <literal type="char">'{'</literal> <operator>&amp;&amp;</operator> 

<operator>*</operator><name><name>p_ecd</name><operator>-&gt;</operator><name>ppsz_name</name><index>[<expr><name>i</name></expr>]</index></name> <operator>!=</operator> <literal type="char">'{'</literal></expr> )</condition><block type="pseudo"><block_content> 

<expr_stmt><expr><call><name>vlc_meta_AddExtra</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>meta</name></name></expr></argument>, <argument><expr><name><name>p_ecd</name><operator>-&gt;</operator><name>ppsz_name</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>p_ecd</name><operator>-&gt;</operator><name>ppsz_value</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>set_meta</name></cpp:undef>

</block_content>}</block></for>

</block_content>}</block></if></if_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>

for( i_stream = 0, i = 0; i &lt; MAX_ASF_TRACKS; i++ )

{

asf_object_codec_list_t *p_cl = ASF_FindObject( p_sys-&gt;p_root-&gt;p_hdr,

&amp;asf_object_codec_list_guid, 0 );

if( p_sys-&gt;track[i] )

{

vlc_meta_t *tk = vlc_meta_New();

TAB_APPEND( p_sys-&gt;meta-&gt;i_track, p_sys-&gt;meta-&gt;track, tk );

if( p_cl &amp;&amp; i_stream &lt; p_cl-&gt;i_codec_entries_count )

{

if( p_cl-&gt;codec[i_stream].psz_name &amp;&amp;

*p_cl-&gt;codec[i_stream].psz_name )

{

vlc_meta_Add( tk, VLC_META_CODEC_NAME,

p_cl-&gt;codec[i_stream].psz_name );

}

if( p_cl-&gt;codec[i_stream].psz_description &amp;&amp;

*p_cl-&gt;codec[i_stream].psz_description )

{

vlc_meta_Add( tk, VLC_META_CODEC_DESCRIPTION,

p_cl-&gt;codec[i_stream].psz_description );

}

}

i_stream++;

}

}

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>packet_sys</name><operator>.</operator><name>pi_preroll</name></name> <operator>=</operator> <operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name><operator>-&gt;</operator><name>i_preroll</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>packet_sys</name><operator>.</operator><name>pi_preroll_start</name></name> <operator>=</operator> <operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>i_preroll_start</name></name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<label><name>error</name>:</label>

<expr_stmt><expr><call><name>DemuxEnd</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>FlushQueue</name><parameter_list>( <parameter><decl><type><name>asf_track_t</name> <modifier>*</modifier></type><name>tk</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name><name>tk</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>p_frame</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>block_ChainRelease</name><argument_list>( <argument><expr><name><name>tk</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>p_frame</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>p_frame</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>tk</name><operator>-&gt;</operator><name>queue</name><operator>.</operator><name>p_first</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>block_ChainRelease</name><argument_list>( <argument><expr><name><name>tk</name><operator>-&gt;</operator><name>queue</name><operator>.</operator><name>p_first</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>queue</name><operator>.</operator><name>p_first</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>queue</name><operator>.</operator><name>pp_last</name></name> <operator>=</operator> <operator>&amp;</operator><name><name>tk</name><operator>-&gt;</operator><name>queue</name><operator>.</operator><name>p_first</name></name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>FlushQueues</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<for>for <control>( <init><decl><type><name>unsigned</name> <name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>MAX_ASF_TRACKS</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<decl_stmt><decl><type><name>asf_track_t</name> <modifier>*</modifier></type><name>tk</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>track</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name>tk</name></expr> )</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>FlushQueue</name><argument_list>( <argument><expr><name>tk</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>DemuxEnd</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_root</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>ASF_FreeObjectRoot</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_root</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_root</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_fp</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>meta</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_meta_Delete</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>meta</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>meta</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>FlushQueues</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>MAX_ASF_TRACKS</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<decl_stmt><decl><type><name>asf_track_t</name> <modifier>*</modifier></type><name>tk</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>track</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>tk</name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name><name>tk</name><operator>-&gt;</operator><name>p_es</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>es_out_Del</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>out</name></name></expr></argument>, <argument><expr><name><name>tk</name><operator>-&gt;</operator><name>p_es</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><name><name>tk</name><operator>-&gt;</operator><name>p_fmt</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>es_format_Clean</name><argument_list>( <argument><expr><name><name>tk</name><operator>-&gt;</operator><name>p_fmt</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>tk</name><operator>-&gt;</operator><name>p_fmt</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>tk</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>track</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

</unit>
