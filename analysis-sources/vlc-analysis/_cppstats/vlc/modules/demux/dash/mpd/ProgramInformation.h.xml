<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\demux\dash\mpd\ProgramInformation.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;map&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>dash</name>

<block>{<block_content>

<decl_stmt><decl><type><name>namespace</name></type> <name>mpd</name>

<block>{<block_content>

<decl_stmt><decl><type><name>class</name></type> <name>ProgramInformation</name>

<block>{<block_content>

<label><name>public</name>:</label>

<expr_stmt><expr><name>virtual</name> <operator>~</operator><macro><name>ProgramInformation</name><argument_list>()</argument_list></macro><block>{}</block>

<specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <macro><name>getMoreInformationUrl</name><argument_list>()</argument_list></macro> <specifier>const</specifier></expr>;</expr_stmt>

<decl_stmt><decl><type><name>void</name></type> <name>setMoreInformationUrl</name><argument_list>( <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name> <operator>&amp;</operator><name>url</name></expr></argument> )</argument_list></decl>;</decl_stmt>

<expr_stmt><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <macro><name>getTitle</name><argument_list>()</argument_list></macro> <specifier>const</specifier></expr>;</expr_stmt>

<decl_stmt><decl><type><name>void</name></type> <name>setTitle</name><argument_list>( <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name> <operator>&amp;</operator><name>title</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<expr_stmt><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <macro><name>getSource</name><argument_list>()</argument_list></macro> <specifier>const</specifier></expr>;</expr_stmt>

<decl_stmt><decl><type><name>void</name></type> <name>setSource</name><argument_list>( <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name> <operator>&amp;</operator><name>source</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<expr_stmt><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <macro><name>getCopyright</name><argument_list>()</argument_list></macro> <specifier>const</specifier></expr>;</expr_stmt>

<decl_stmt><decl><type><name>void</name></type> <name>setCopyright</name><argument_list>( <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name> <operator>&amp;</operator><name>copyright</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<label><name>private</name>:</label>

<expr_stmt><expr><name>std</name><operator>::</operator><name>string</name> <name>moreInformationUrl</name></expr>;</expr_stmt>

<expr_stmt><expr><name>std</name><operator>::</operator><name>string</name> <name>title</name></expr>;</expr_stmt>

<expr_stmt><expr><name>std</name><operator>::</operator><name>string</name> <name>source</name></expr>;</expr_stmt>

<expr_stmt><expr><name>std</name><operator>::</operator><name>string</name> <name>copyright</name></expr>;</expr_stmt>

</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

</block_content>}</block></decl></decl_stmt>

</block_content>}</block></decl></decl_stmt>

</unit>
