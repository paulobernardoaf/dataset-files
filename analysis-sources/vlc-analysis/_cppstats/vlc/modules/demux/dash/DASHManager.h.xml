<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\demux\dash\DASHManager.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../adaptive/PlaylistManager.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../adaptive/logic/AbstractAdaptationLogic.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mpd/MPD.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>adaptive</name>

<block>{<block_content>

<decl_stmt><decl><type><name>namespace</name></type> <name>xml</name>

<block>{<block_content>

<decl_stmt><decl><type><name>class</name></type> <name>Node</name></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>

</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><name>namespace</name></type> <name>dash</name>

<block>{<block_content>

<decl_stmt><decl><type><name>using</name> <name>namespace</name></type> <name>adaptive</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>class</name></type> <name>DASHManager</name> <range>: <expr><name>public</name> <name>PlaylistManager</name>

<block>{

<expr><name>public</name><operator>:</operator>

<macro><name>DASHManager</name><argument_list>( <argument>demux_t *</argument>,

<argument>SharedResources *</argument>,

<argument>mpd::MPD *mpd</argument>,

<argument>AbstractStreamFactory *</argument>,

<argument>logic::AbstractAdaptationLogic::LogicType type</argument>)</argument_list></macro></expr>;

<expr><name>virtual</name> <operator>~</operator><call><name>DASHManager</name> <argument_list>()</argument_list></call></expr>;

<expr><name>virtual</name> <name>bool</name> <macro><name>needsUpdate</name><argument_list>()</argument_list></macro> <specifier>const</specifier></expr>; 

<expr><name>virtual</name> <name>bool</name> <call><name>updatePlaylist</name><argument_list>()</argument_list></call></expr>; 

<expr><name>virtual</name> <name>void</name> <call><name>scheduleNextUpdate</name><argument_list>()</argument_list></call></expr>;

<expr><specifier>static</specifier> <name>bool</name> <call><name>isDASH</name><argument_list>(<argument><expr><name>xml</name><operator>::</operator><name>Node</name> <operator>*</operator></expr></argument>)</argument_list></call></expr>;

<expr><specifier>static</specifier> <name>bool</name> <call><name>mimeMatched</name><argument_list>(<argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name> <operator>&amp;</operator></expr></argument>)</argument_list></call></expr>;

<expr><name>protected</name><operator>:</operator>

<name>virtual</name> <name>int</name> <call><name>doControl</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>va_list</name></expr></argument>)</argument_list></call></expr>; 

}</block></expr></range></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>

</unit>
