<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\demux\adaptive\xml\DOMHelper.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vector&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"Node.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>adaptive</name>

<block>{<block_content>

<decl_stmt><decl><type><name>namespace</name></type> <name>xml</name>

<block>{<block_content>

<decl_stmt><decl><type><name>class</name></type> <name>DOMHelper</name>

<block>{<block_content>

<label><name>public</name>:</label>

<expr_stmt><expr><specifier>static</specifier> <name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>Node</name> <operator>*</operator></expr></argument>&gt;</argument_list></name> <macro><name>getElementByTagName</name> <argument_list>(<argument>Node *root</argument>, <argument>const std::string&amp; name</argument>, <argument>bool selfContain</argument>)</argument_list></macro></expr>;</expr_stmt>

<expr_stmt><expr><specifier>static</specifier> <name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>Node</name> <operator>*</operator></expr></argument>&gt;</argument_list></name> <call><name>getChildElementByTagName</name> <argument_list>(<argument><expr><name>Node</name> <operator>*</operator><name>root</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>Node</name><modifier>*</modifier></type> <name>getFirstChildElementByName</name><argument_list>( <argument><expr><name>Node</name> <operator>*</operator><name>root</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>name</name></expr></argument> )</argument_list></decl>;</decl_stmt>

<label><name>private</name>:</label>

<decl_stmt><decl><type><specifier>static</specifier> <name>void</name></type> <name>getElementsByTagName</name><argument_list>(<argument><expr><name>Node</name> <operator>*</operator><name>root</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name>string</name><operator>&amp;</operator> <name>name</name></expr></argument>, <argument><expr><name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>Node</name> <operator>*</operator></expr></argument>&gt;</argument_list></name> <operator>*</operator><name>elements</name></expr></argument>, <argument><expr><name>bool</name> <name>selfContain</name></expr></argument>)</argument_list></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

</block_content>}</block></decl></decl_stmt>

</block_content>}</block></decl></decl_stmt>

</unit>
