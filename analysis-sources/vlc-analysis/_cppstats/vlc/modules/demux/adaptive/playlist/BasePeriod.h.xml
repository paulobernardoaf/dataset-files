<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\demux\adaptive\playlist\BasePeriod.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vector&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"BaseAdaptationSet.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"SegmentInformation.hpp"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../tools/Properties.hpp"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>adaptive</name>

<block>{<block_content>

<decl_stmt><decl><type><name>namespace</name></type> <name>playlist</name>

<block>{<block_content>

<decl_stmt><decl><type><name>class</name></type> <name>BasePeriod</name> <range>: <expr><name>public</name> <name>SegmentInformation</name>

<block>{

<expr><name>public</name><operator>:</operator>

<call><name>BasePeriod</name><argument_list>(<argument><expr><name>AbstractPlaylist</name> <operator>*</operator></expr></argument>)</argument_list></call></expr>;

<expr><name>virtual</name> <operator>~</operator><call><name>BasePeriod</name> <argument_list>()</argument_list></call></expr>;

<expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>BaseAdaptationSet</name> <operator>*</operator></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <macro><name>getAdaptationSets</name> <argument_list>()</argument_list></macro> <specifier>const</specifier></expr>;

<expr><name>BaseAdaptationSet</name> <operator>*</operator> <call><name>getAdaptationSetByID</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ID</name> <operator>&amp;</operator></expr></argument>)</argument_list></call></expr>;

<expr><name>void</name> <call><name>addAdaptationSet</name> <argument_list>(<argument><expr><name>BaseAdaptationSet</name> <operator>*</operator><name>AdaptationSet</name></expr></argument>)</argument_list></call></expr>;

<expr><name>void</name> <macro><name>debug</name> <argument_list>(<argument>vlc_object_t *</argument>,<argument>int = <literal type="number">0</literal></argument>)</argument_list></macro> <specifier>const</specifier></expr>;

<expr><name>virtual</name> <name>vlc_tick_t</name> <macro><name>getPeriodStart</name><argument_list>()</argument_list></macro> <specifier>const</specifier></expr>; 

<expr><name>virtual</name> <name>AbstractPlaylist</name> <operator>*</operator><macro><name>getPlaylist</name><argument_list>()</argument_list></macro> <specifier>const</specifier></expr>; 

<expr><name><name>Property</name><argument_list type="generic">&lt;<argument><expr><name>vlc_tick_t</name></expr></argument>&gt;</argument_list></name> <name>duration</name></expr>;

<expr><name><name>Property</name><argument_list type="generic">&lt;<argument><expr><name>vlc_tick_t</name></expr></argument>&gt;</argument_list></name> <name>startTime</name></expr>;

<expr><name>private</name><operator>:</operator>

<name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>BaseAdaptationSet</name> <operator>*</operator></expr></argument>&gt;</argument_list></name> <name>adaptationSets</name></expr>;

<expr><name>AbstractPlaylist</name> <operator>*</operator><name>playlist</name></expr>;

}</block></expr></range></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>

</block_content>}</block></decl></decl_stmt>

</unit>
