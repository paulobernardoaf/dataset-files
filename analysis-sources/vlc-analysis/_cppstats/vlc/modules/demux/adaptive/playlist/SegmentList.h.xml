<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\demux\adaptive\playlist\SegmentList.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"SegmentInfoCommon.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>adaptive</name>

<block>{<block_content>

<decl_stmt><decl><type><name>namespace</name></type> <name>playlist</name>

<block>{<block_content>

<decl_stmt><decl><type><name>class</name></type> <name>SegmentInformation</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>class</name></type> <name>Segment</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>class</name></type> <name>SegmentList</name> <range>: <expr><name>public</name> <name>SegmentInfoCommon</name></expr></range></decl>,

<decl><type ref="prev"/><name>public</name> <name>TimescaleAble</name>

<block>{<block_content>

<label><name>public</name>:</label>

<expr_stmt><expr><call><name>SegmentList</name> <argument_list>( <argument><expr><name>SegmentInformation</name> <operator>*</operator> <operator>=</operator> <name>NULL</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>virtual</name> <operator>~</operator><call><name>SegmentList</name> <argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><specifier>const</specifier> <name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>ISegment</name> <operator>*</operator></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <macro><name>getSegments</name><argument_list>()</argument_list></macro> <specifier>const</specifier></expr>;</expr_stmt>

<function_decl><type><name>ISegment</name> <modifier>*</modifier></type> <name>getSegmentByNumber</name><parameter_list>(<parameter><decl><type><name>uint64_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>addSegment</name><parameter_list>(<parameter><decl><type><name>ISegment</name> <modifier>*</modifier></type><name>seg</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>updateWith</name><parameter_list>(<parameter><decl><type><name>SegmentList</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>bool</name></type> <init>= <expr><name>false</name></expr></init></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>pruneBySegmentNumber</name><parameter_list>(<parameter><decl><type><name>uint64_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>pruneByPlaybackTime</name><parameter_list>(<parameter><decl><type><name>vlc_tick_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><name>bool</name></type> <name>getSegmentNumberByScaledTime</name><argument_list>(<argument><expr><name>stime_t</name></expr></argument>, <argument><expr><name>uint64_t</name> <operator>*</operator></expr></argument>)</argument_list> const</decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>getPlaybackTimeDurationBySegmentNumber</name><argument_list>(<argument><expr><name>uint64_t</name></expr></argument>, <argument><expr><name>vlc_tick_t</name> <operator>*</operator></expr></argument>, <argument><expr><name>vlc_tick_t</name> <operator>*</operator></expr></argument>)</argument_list> const</decl>;</decl_stmt>

<expr_stmt><expr><name>stime_t</name> <macro><name>getTotalLength</name><argument_list>()</argument_list></macro> <specifier>const</specifier></expr>;</expr_stmt>

<label><name>private</name>:</label>

<expr_stmt><expr><name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>ISegment</name> <operator>*</operator></expr></argument>&gt;</argument_list></name> <name>segments</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>stime_t</name></type> <name>totalLength</name></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

</block_content>}</block></decl></decl_stmt>

</block_content>}</block></decl></decl_stmt>

</unit>
