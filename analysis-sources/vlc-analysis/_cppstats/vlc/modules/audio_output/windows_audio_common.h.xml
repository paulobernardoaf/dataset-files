<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\audio_output\windows_audio_common.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;windows.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;mmsystem.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INITGUID</name></cpp:macro></cpp:define> 

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;initguid.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_codecs.h&gt;</cpp:file></cpp:include>

<expr_stmt><expr><call><name>DEFINE_GUID</name><argument_list>( <argument><expr><name>_KSDATAFORMAT_SUBTYPE_IEEE_FLOAT</name></expr></argument>, <argument><expr><name>WAVE_FORMAT_IEEE_FLOAT</name></expr></argument>, <argument><expr><literal type="number">0x0000</literal></expr></argument>, <argument><expr><literal type="number">0x0010</literal></expr></argument>, <argument><expr><literal type="number">0x80</literal></expr></argument>, <argument><expr><literal type="number">0x00</literal></expr></argument>, <argument><expr><literal type="number">0x00</literal></expr></argument>, <argument><expr><literal type="number">0xaa</literal></expr></argument>, <argument><expr><literal type="number">0x00</literal></expr></argument>, <argument><expr><literal type="number">0x38</literal></expr></argument>, <argument><expr><literal type="number">0x9b</literal></expr></argument>, <argument><expr><literal type="number">0x71</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DEFINE_GUID</name><argument_list>( <argument><expr><name>_KSDATAFORMAT_SUBTYPE_PCM</name></expr></argument>, <argument><expr><name>WAVE_FORMAT_PCM</name></expr></argument>, <argument><expr><literal type="number">0x0000</literal></expr></argument>, <argument><expr><literal type="number">0x0010</literal></expr></argument>, <argument><expr><literal type="number">0x80</literal></expr></argument>, <argument><expr><literal type="number">0x00</literal></expr></argument>, <argument><expr><literal type="number">0x00</literal></expr></argument>, <argument><expr><literal type="number">0xaa</literal></expr></argument>, <argument><expr><literal type="number">0x00</literal></expr></argument>, <argument><expr><literal type="number">0x38</literal></expr></argument>, <argument><expr><literal type="number">0x9b</literal></expr></argument>, <argument><expr><literal type="number">0x71</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DEFINE_GUID</name><argument_list>( <argument><expr><name>_KSDATAFORMAT_SUBTYPE_DOLBY_AC3_SPDIF</name></expr></argument>, <argument><expr><name>WAVE_FORMAT_DOLBY_AC3_SPDIF</name></expr></argument>, <argument><expr><literal type="number">0x0000</literal></expr></argument>, <argument><expr><literal type="number">0x0010</literal></expr></argument>, <argument><expr><literal type="number">0x80</literal></expr></argument>, <argument><expr><literal type="number">0x00</literal></expr></argument>, <argument><expr><literal type="number">0x00</literal></expr></argument>, <argument><expr><literal type="number">0xaa</literal></expr></argument>, <argument><expr><literal type="number">0x00</literal></expr></argument>, <argument><expr><literal type="number">0x38</literal></expr></argument>, <argument><expr><literal type="number">0x9b</literal></expr></argument>, <argument><expr><literal type="number">0x71</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>GUID</name></type> <name>__KSDATAFORMAT_SUBTYPE_IEEE_FLOAT</name> <init>= <expr><block>{<expr><name>WAVE_FORMAT_IEEE_FLOAT</name></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0010</literal></expr>, <expr><block>{<expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x38</literal></expr>, <expr><literal type="number">0x9b</literal></expr>, <expr><literal type="number">0x71</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>GUID</name></type> <name>__KSDATAFORMAT_SUBTYPE_PCM</name> <init>= <expr><block>{<expr><name>WAVE_FORMAT_PCM</name></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0010</literal></expr>, <expr><block>{<expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x38</literal></expr>, <expr><literal type="number">0x9b</literal></expr>, <expr><literal type="number">0x71</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>GUID</name></type> <name>__KSDATAFORMAT_SUBTYPE_DOLBY_AC3_SPDIF</name> <init>= <expr><block>{<expr><name>WAVE_FORMAT_DOLBY_AC3_SPDIF</name></expr>, <expr><literal type="number">0x0000</literal></expr>, <expr><literal type="number">0x0010</literal></expr>, <expr><block>{<expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x38</literal></expr>, <expr><literal type="number">0x9b</literal></expr>, <expr><literal type="number">0x71</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FRAMES_NUM</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define> 

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dsound.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SPEAKER_FRONT_RIGHT</name></cpp:macro> <cpp:value>0x2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SPEAKER_FRONT_CENTER</name></cpp:macro> <cpp:value>0x4</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SPEAKER_LOW_FREQUENCY</name></cpp:macro> <cpp:value>0x8</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SPEAKER_BACK_LEFT</name></cpp:macro> <cpp:value>0x10</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SPEAKER_BACK_RIGHT</name></cpp:macro> <cpp:value>0x20</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SPEAKER_FRONT_LEFT_OF_CENTER</name></cpp:macro> <cpp:value>0x40</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SPEAKER_FRONT_RIGHT_OF_CENTER</name></cpp:macro> <cpp:value>0x80</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SPEAKER_BACK_CENTER</name></cpp:macro> <cpp:value>0x100</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SPEAKER_SIDE_LEFT</name></cpp:macro> <cpp:value>0x200</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SPEAKER_SIDE_RIGHT</name></cpp:macro> <cpp:value>0x400</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SPEAKER_TOP_CENTER</name></cpp:macro> <cpp:value>0x800</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SPEAKER_TOP_FRONT_LEFT</name></cpp:macro> <cpp:value>0x1000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SPEAKER_TOP_FRONT_CENTER</name></cpp:macro> <cpp:value>0x2000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SPEAKER_TOP_FRONT_RIGHT</name></cpp:macro> <cpp:value>0x4000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SPEAKER_TOP_BACK_LEFT</name></cpp:macro> <cpp:value>0x8000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SPEAKER_TOP_BACK_CENTER</name></cpp:macro> <cpp:value>0x10000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SPEAKER_TOP_BACK_RIGHT</name></cpp:macro> <cpp:value>0x20000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SPEAKER_RESERVED</name></cpp:macro> <cpp:value>0x80000000</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>DSSPEAKER_DSSPEAKER_DIRECTOUT</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DSSPEAKER_DSSPEAKER_DIRECTOUT</name></cpp:macro> <cpp:value>0x00000000</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>DSSPEAKER_HEADPHONE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DSSPEAKER_HEADPHONE</name></cpp:macro> <cpp:value>0x00000001</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>DSSPEAKER_MONO</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DSSPEAKER_MONO</name></cpp:macro> <cpp:value>0x00000002</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>DSSPEAKER_QUAD</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DSSPEAKER_QUAD</name></cpp:macro> <cpp:value>0x00000003</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>DSSPEAKER_STEREO</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DSSPEAKER_STEREO</name></cpp:macro> <cpp:value>0x00000004</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>DSSPEAKER_SURROUND</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DSSPEAKER_SURROUND</name></cpp:macro> <cpp:value>0x00000005</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>DSSPEAKER_5POINT1</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DSSPEAKER_5POINT1</name></cpp:macro> <cpp:value>0x00000006</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>DSSPEAKER_5POINT1_BACK</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DSSPEAKER_5POINT1_BACK</name></cpp:macro> <cpp:value>DSSPEAKER_5POINT1</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>DSSPEAKER_7POINT1</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DSSPEAKER_7POINT1</name></cpp:macro> <cpp:value>0x00000007</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>DSSPEAKER_7POINT1_SURROUND</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DSSPEAKER_7POINT1_SURROUND</name></cpp:macro> <cpp:value>0x00000008</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>DSSPEAKER_5POINT1_SURROUND</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DSSPEAKER_5POINT1_SURROUND</name></cpp:macro> <cpp:value>0x00000009</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>DSSPEAKER_7POINT1_WIDE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DSSPEAKER_7POINT1_WIDE</name></cpp:macro> <cpp:value>DSSPEAKER_7POINT1</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint32_t</name></type> <name><name>pi_channels_in</name><index>[]</index></name> <init>=

<expr><block>{ <expr><name>SPEAKER_FRONT_LEFT</name></expr>, <expr><name>SPEAKER_FRONT_RIGHT</name></expr>,

<expr><name>SPEAKER_SIDE_LEFT</name></expr>, <expr><name>SPEAKER_SIDE_RIGHT</name></expr>,

<expr><name>SPEAKER_BACK_LEFT</name></expr>, <expr><name>SPEAKER_BACK_RIGHT</name></expr>, <expr><name>SPEAKER_BACK_CENTER</name></expr>,

<expr><name>SPEAKER_FRONT_CENTER</name></expr>, <expr><name>SPEAKER_LOW_FREQUENCY</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint32_t</name></type> <name><name>pi_channels_out</name><index>[]</index></name> <init>=

<expr><block>{ <expr><name>SPEAKER_FRONT_LEFT</name></expr>, <expr><name>SPEAKER_FRONT_RIGHT</name></expr>,

<expr><name>SPEAKER_FRONT_CENTER</name></expr>, <expr><name>SPEAKER_LOW_FREQUENCY</name></expr>,

<expr><name>SPEAKER_BACK_LEFT</name></expr>, <expr><name>SPEAKER_BACK_RIGHT</name></expr>,

<expr><name>SPEAKER_BACK_CENTER</name></expr>,

<expr><name>SPEAKER_SIDE_LEFT</name></expr>, <expr><name>SPEAKER_SIDE_RIGHT</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FLOAT_TEXT</name></cpp:macro> <cpp:value>N_("Use float32 output")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FLOAT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "The option allows you to enable or disable the high-quality float32 " "audio output mode (which is not well supported by some soundcards)." )</cpp:value></cpp:define>

</unit>
