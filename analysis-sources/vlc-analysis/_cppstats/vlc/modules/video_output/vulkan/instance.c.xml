<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\video_output\vulkan\instance.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_modules.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_atomic.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"instance.h"</cpp:file></cpp:include>

<function><type><name>vlc_vk_t</name> <modifier>*</modifier></type><name>vlc_vk_Create</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vout_window_t</name></name> <modifier>*</modifier></type><name>wnd</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>parent</name> <init>= <expr><operator>(</operator><name>vlc_object_t</name> <operator>*</operator><operator>)</operator> <name>wnd</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_vk_t</name></name> <modifier>*</modifier></type><name>vk</name></decl>;</decl_stmt>

<expr_stmt><expr><name>vk</name> <operator>=</operator> <call><name>vlc_object_create</name><argument_list>(<argument><expr><name>parent</name></expr></argument>, <argument><expr><sizeof>sizeof <argument_list>(<argument><expr><operator>*</operator><name>vk</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>vk</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>vk</name><operator>-&gt;</operator><name>ctx</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vk</name><operator>-&gt;</operator><name>instance</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vk</name><operator>-&gt;</operator><name>surface</name></name> <operator>=</operator> <operator>(</operator><name>VkSurfaceKHR</name><operator>)</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vk</name><operator>-&gt;</operator><name>window</name></name> <operator>=</operator> <name>wnd</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vk</name><operator>-&gt;</operator><name>module</name></name> <operator>=</operator> <call><name>module_need</name><argument_list>(<argument><expr><name>vk</name></expr></argument>, <argument><expr><literal type="string">"vulkan"</literal></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>vk</name><operator>-&gt;</operator><name>module</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_object_delete</name><argument_list>(<argument><expr><name>vk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_atomic_rc_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>vk</name><operator>-&gt;</operator><name>ref_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>vk</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlc_vk_Hold</name><parameter_list>(<parameter><decl><type><name>vlc_vk_t</name> <modifier>*</modifier></type><name>vk</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_atomic_rc_inc</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>vk</name><operator>-&gt;</operator><name>ref_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlc_vk_Release</name><parameter_list>(<parameter><decl><type><name>vlc_vk_t</name> <modifier>*</modifier></type><name>vk</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>vlc_atomic_rc_dec</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>vk</name><operator>-&gt;</operator><name>ref_count</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>module_unneed</name><argument_list>(<argument><expr><name>vk</name></expr></argument>, <argument><expr><name><name>vk</name><operator>-&gt;</operator><name>module</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_object_delete</name><argument_list>(<argument><expr><name>vk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
