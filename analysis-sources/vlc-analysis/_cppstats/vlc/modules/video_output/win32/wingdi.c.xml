<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\video_output\win32\wingdi.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_vout_display.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;windows.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../video_chroma/copy.h"</cpp:file></cpp:include>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Open</name> <parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<macro><name>vlc_module_begin</name> <argument_list>()</argument_list></macro>

<macro><name>set_category</name><argument_list>(<argument>CAT_VIDEO</argument>)</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>(<argument>SUBCAT_VIDEO_VOUT</argument>)</argument_list></macro>

<macro><name>set_shortname</name><argument_list>(<argument><literal type="string">"GDI"</literal></argument>)</argument_list></macro>

<macro><name>set_description</name><argument_list>(<argument>N_(<literal type="string">"Windows GDI video output"</literal>)</argument>)</argument_list></macro>

<macro><name>set_callback_display</name><argument_list>(<argument>Open</argument>, <argument><literal type="number">110</literal></argument>)</argument_list></macro>

<macro><name>vlc_module_end</name> <argument_list>()</argument_list></macro>

<struct>struct <name>vout_display_sys_t</name>

<block>{

<decl_stmt><decl><type><name>vout_display_sys_win32_t</name></type> <name>sys</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>display_win32_area_t</name></type> <name>area</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_depth</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>HDC</name></type> <name>off_dc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>HBITMAP</name></type> <name>off_bitmap</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>p_pic_buffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_pic_pitch</name></decl>;</decl_stmt>

<struct>struct

<block>{

<decl_stmt><decl><type><name>BITMAPINFO</name></type> <name>bitmapinfo</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RGBQUAD</name></type> <name>red</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RGBQUAD</name></type> <name>green</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RGBQUAD</name></type> <name>blue</name></decl>;</decl_stmt>

}</block>;</struct>

}</block>;</struct>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Display</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Init</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Clean</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Prepare</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>picture</name></decl></parameter>, <parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>subpic</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>date</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>subpic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>date</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>picture_t</name></type> <name>fake_pic</name> <init>= <expr><operator>*</operator><name>picture</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>picture_UpdatePlanes</name><argument_list>(<argument><expr><operator>&amp;</operator><name>fake_pic</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_pic_buffer</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>i_pic_pitch</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>picture_CopyPixels</name><argument_list>(<argument><expr><operator>&amp;</operator><name>fake_pic</name></expr></argument>, <argument><expr><name>picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Control</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>query</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>args</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<return>return <expr><call><name>CommonControl</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>area</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>sys</name></name></expr></argument>, <argument><expr><name>query</name></expr></argument>, <argument><expr><name>args</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Open</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>,

<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>fmtp</name></decl></parameter>, <parameter><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type><name>context</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name><name>vd</name><operator>-&gt;</operator><name>obj</name><operator>.</operator><name>force</name></name> <operator>&amp;&amp;</operator> <name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>projection_mode</name></name> <operator>!=</operator> <name>PROJECTION_MODE_RECTANGULAR</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt> 

<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name> <operator>=</operator> <name>sys</name> <operator>=</operator> <call><name>calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>sys</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>sys</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>CommonInit</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>area</name></name></expr></argument>, <argument><expr><name>cfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>CommonWindowInit</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>area</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>sys</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>Init</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>fmtp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>prepare</name></name> <operator>=</operator> <name>Prepare</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>display</name></name> <operator>=</operator> <name>Display</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>control</name></name> <operator>=</operator> <name>Control</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>close</name></name> <operator>=</operator> <name>Close</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<label><name>error</name>:</label>

<expr_stmt><expr><call><name>Close</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>Clean</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>CommonWindowClean</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>sys</name><operator>-&gt;</operator><name>sys</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Display</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>picture</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>HDC</name></type> <name>hdc</name> <init>= <expr><call><name>GetDC</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>sys</name><operator>.</operator><name>hvideownd</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>area</name><operator>.</operator><name>place_changed</name></name></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>RECT</name></type> <name>display</name> <init>= <expr><block>{

<expr><operator>.</operator><name>left</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>right</name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>area</name><operator>.</operator><name>vdcfg</name><operator>.</operator><name>display</name><operator>.</operator><name>width</name></name></expr>,

<expr><operator>.</operator><name>top</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>bottom</name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>area</name><operator>.</operator><name>vdcfg</name><operator>.</operator><name>display</name><operator>.</operator><name>height</name></name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>FillRect</name><argument_list>(<argument><expr><name>hdc</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>display</name></expr></argument>, <argument><expr><call><name>GetStockObject</name><argument_list>(<argument><expr><name>BLACK_BRUSH</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>area</name><operator>.</operator><name>place_changed</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>SelectObject</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>off_dc</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>off_bitmap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>area</name><operator>.</operator><name>place</name><operator>.</operator><name>width</name></name> <operator>!=</operator> <name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_visible_width</name></name> <operator>||</operator>

<name><name>sys</name><operator>-&gt;</operator><name>area</name><operator>.</operator><name>place</name><operator>.</operator><name>height</name></name> <operator>!=</operator> <name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_visible_height</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>SetStretchBltMode</name><argument_list>(<argument><expr><name>hdc</name></expr></argument>, <argument><expr><name>COLORONCOLOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>StretchBlt</name><argument_list>(<argument><expr><name>hdc</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>area</name><operator>.</operator><name>place</name><operator>.</operator><name>x</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>area</name><operator>.</operator><name>place</name><operator>.</operator><name>y</name></name></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>area</name><operator>.</operator><name>place</name><operator>.</operator><name>width</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>area</name><operator>.</operator><name>place</name><operator>.</operator><name>height</name></name></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>off_dc</name></name></expr></argument>,

<argument><expr><name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_x_offset</name></name></expr></argument>, <argument><expr><name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_y_offset</name></name></expr></argument>,

<argument><expr><name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_x_offset</name></name> <operator>+</operator> <name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_visible_width</name></name></expr></argument>,

<argument><expr><name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_y_offset</name></name> <operator>+</operator> <name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_visible_height</name></name></expr></argument>,

<argument><expr><name>SRCCOPY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name>BitBlt</name><argument_list>(<argument><expr><name>hdc</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>area</name><operator>.</operator><name>place</name><operator>.</operator><name>x</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>area</name><operator>.</operator><name>place</name><operator>.</operator><name>y</name></name></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>area</name><operator>.</operator><name>place</name><operator>.</operator><name>width</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>area</name><operator>.</operator><name>place</name><operator>.</operator><name>height</name></name></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>off_dc</name></name></expr></argument>,

<argument><expr><name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_x_offset</name></name></expr></argument>, <argument><expr><name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_y_offset</name></name></expr></argument>,

<argument><expr><name>SRCCOPY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>ReleaseDC</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>sys</name><operator>.</operator><name>hvideownd</name></name></expr></argument>, <argument><expr><name>hdc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Init</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>HDC</name></type> <name>window_dc</name> <init>= <expr><call><name>GetDC</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>sys</name><operator>.</operator><name>hvideownd</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>i_depth</name></name> <operator>=</operator> <call><name>GetDeviceCaps</name><argument_list>(<argument><expr><name>window_dc</name></expr></argument>, <argument><expr><name>PLANES</name></expr></argument>)</argument_list></call> <operator>*</operator>

<call><name>GetDeviceCaps</name><argument_list>(<argument><expr><name>window_dc</name></expr></argument>, <argument><expr><name>BITSPIXEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"GDI depth is %i"</literal></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>i_depth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<switch>switch <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>i_depth</name></name></expr>)</condition> <block>{<block_content>

<case>case <expr><literal type="number">8</literal></expr>:</case>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_chroma</name></name> <operator>=</operator> <name>VLC_CODEC_RGB8</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">15</literal></expr>:</case>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_chroma</name></name> <operator>=</operator> <name>VLC_CODEC_RGB15</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_rmask</name></name> <operator>=</operator> <literal type="number">0x7c00</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_gmask</name></name> <operator>=</operator> <literal type="number">0x03e0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_bmask</name></name> <operator>=</operator> <literal type="number">0x001f</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">16</literal></expr>:</case>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_chroma</name></name> <operator>=</operator> <name>VLC_CODEC_RGB16</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_rmask</name></name> <operator>=</operator> <literal type="number">0xf800</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_gmask</name></name> <operator>=</operator> <literal type="number">0x07e0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_bmask</name></name> <operator>=</operator> <literal type="number">0x001f</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">24</literal></expr>:</case>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_chroma</name></name> <operator>=</operator> <name>VLC_CODEC_RGB24</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_rmask</name></name> <operator>=</operator> <literal type="number">0x00ff0000</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_gmask</name></name> <operator>=</operator> <literal type="number">0x0000ff00</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_bmask</name></name> <operator>=</operator> <literal type="number">0x000000ff</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">32</literal></expr>:</case>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_chroma</name></name> <operator>=</operator> <name>VLC_CODEC_RGB32</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_rmask</name></name> <operator>=</operator> <literal type="number">0x00ff0000</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_gmask</name></name> <operator>=</operator> <literal type="number">0x0000ff00</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_bmask</name></name> <operator>=</operator> <literal type="number">0x000000ff</literal></expr>;</expr_stmt>

<break>break;</break>

<default>default:</default>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"screen depth %i not supported"</literal></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>i_depth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></switch>

<decl_stmt><decl><type><name>BITMAPINFO</name> <modifier>*</modifier></type><name>bi</name> <init>= <expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>bitmapinfo</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>bi</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>BITMAPINFO</name></expr></argument>)</argument_list></sizeof> <operator>+</operator> <literal type="number">3</literal> <operator>*</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>RGBQUAD</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>i_depth</name></name> <operator>&gt;</operator> <literal type="number">8</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><operator>(</operator><operator>(</operator><name>DWORD</name><operator>*</operator><operator>)</operator><name><name>bi</name><operator>-&gt;</operator><name>bmiColors</name></name><operator>)</operator><index>[<expr><literal type="number">0</literal></expr>]</index> <operator>=</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_rmask</name></name></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><operator>(</operator><name>DWORD</name><operator>*</operator><operator>)</operator><name><name>bi</name><operator>-&gt;</operator><name>bmiColors</name></name><operator>)</operator><index>[<expr><literal type="number">1</literal></expr>]</index> <operator>=</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_gmask</name></name></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><operator>(</operator><name>DWORD</name><operator>*</operator><operator>)</operator><name><name>bi</name><operator>-&gt;</operator><name>bmiColors</name></name><operator>)</operator><index>[<expr><literal type="number">2</literal></expr>]</index> <operator>=</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_bmask</name></name></expr>;</expr_stmt><empty_stmt>;</empty_stmt>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>BITMAPINFOHEADER</name> <modifier>*</modifier></type><name>bih</name> <init>= <expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>bitmapinfo</name><operator>.</operator><name>bmiHeader</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>bih</name><operator>-&gt;</operator><name>biSize</name></name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>BITMAPINFOHEADER</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<expr_stmt><expr><name><name>bih</name><operator>-&gt;</operator><name>biSizeImage</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>bih</name><operator>-&gt;</operator><name>biPlanes</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>bih</name><operator>-&gt;</operator><name>biCompression</name></name> <operator>=</operator> <ternary><condition><expr><operator>(</operator><name><name>sys</name><operator>-&gt;</operator><name>i_depth</name></name> <operator>==</operator> <literal type="number">15</literal> <operator>||</operator>

<name><name>sys</name><operator>-&gt;</operator><name>i_depth</name></name> <operator>==</operator> <literal type="number">16</literal><operator>)</operator></expr> ?</condition><then> <expr><name>BI_BITFIELDS</name></expr> </then><else>: <expr><name>BI_RGB</name></expr></else></ternary></expr>;</expr_stmt>

<expr_stmt><expr><name><name>bih</name><operator>-&gt;</operator><name>biBitCount</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>i_depth</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>bih</name><operator>-&gt;</operator><name>biWidth</name></name> <operator>=</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_width</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>bih</name><operator>-&gt;</operator><name>biHeight</name></name> <operator>=</operator> <operator>-</operator><name><name>fmt</name><operator>-&gt;</operator><name>i_height</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>bih</name><operator>-&gt;</operator><name>biClrImportant</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>bih</name><operator>-&gt;</operator><name>biClrUsed</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>bih</name><operator>-&gt;</operator><name>biXPelsPerMeter</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>bih</name><operator>-&gt;</operator><name>biYPelsPerMeter</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>i_pic_pitch</name></name> <operator>=</operator> <name><name>bih</name><operator>-&gt;</operator><name>biBitCount</name></name> <operator>*</operator> <name><name>bih</name><operator>-&gt;</operator><name>biWidth</name></name> <operator>/</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>off_bitmap</name></name> <operator>=</operator> <call><name>CreateDIBSection</name><argument_list>(<argument><expr><name>window_dc</name></expr></argument>,

<argument><expr><operator>(</operator><name>BITMAPINFO</name> <operator>*</operator><operator>)</operator><name>bih</name></expr></argument>,

<argument><expr><name>DIB_RGB_COLORS</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>p_pic_buffer</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>off_dc</name></name> <operator>=</operator> <call><name>CreateCompatibleDC</name><argument_list>(<argument><expr><name>window_dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SelectObject</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>off_dc</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>off_bitmap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ReleaseDC</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>sys</name><operator>.</operator><name>hvideownd</name></name></expr></argument>, <argument><expr><name>window_dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vout_window_SetTitle</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>area</name><operator>.</operator><name>vdcfg</name><operator>.</operator><name>window</name></name></expr></argument>, <argument><expr><name>VOUT_TITLE</name> <literal type="string">" (WinGDI output)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Clean</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>off_dc</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>DeleteDC</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>off_dc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>off_bitmap</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>DeleteObject</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>off_bitmap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>

</unit>
