<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\video_output\win32\d3d11_shaders.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;d3dcompiler.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../video_chroma/d3d11_fmt.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>HINSTANCE</name></type> <name>compiler_dll</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>pD3DCompile</name></type> <name>OurD3DCompile</name></decl>;</decl_stmt>

}</block></struct></type> <name>d3d11_shaders_t</name>;</typedef>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_es.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEFAULT_BRIGHTNESS</name></cpp:macro> <cpp:value>100</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEFAULT_SRGB_BRIGHTNESS</name></cpp:macro> <cpp:value>100</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_HLG_BRIGHTNESS</name></cpp:macro> <cpp:value>1000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_PQ_BRIGHTNESS</name></cpp:macro> <cpp:value>10000</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>video_color_primaries_t</name></type> <name>primaries</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>video_transfer_func_t</name></type> <name>transfer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>video_color_space_t</name></type> <name>color</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_full_range</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>luminance_peak</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>d3d_format_t</name> <modifier>*</modifier></type><name>pixelFormat</name></decl>;</decl_stmt>

}</block></struct></type> <name>display_info_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>FLOAT</name></type> <name>Opacity</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FLOAT</name></type> <name>BoundaryX</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FLOAT</name></type> <name>BoundaryY</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FLOAT</name></type> <name>LuminanceScale</name></decl>;</decl_stmt>

}</block></struct></type> <name>PS_CONSTANT_BUFFER</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>FLOAT</name></type> <name><name>WhitePoint</name><index>[<expr><literal type="number">4</literal><operator>*</operator><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FLOAT</name></type> <name><name>Colorspace</name><index>[<expr><literal type="number">4</literal><operator>*</operator><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FLOAT</name></type> <name><name>Primaries</name><index>[<expr><literal type="number">4</literal><operator>*</operator><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>PS_COLOR_TRANSFORM</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>FLOAT</name></type> <name><name>View</name><index>[<expr><literal type="number">4</literal><operator>*</operator><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FLOAT</name></type> <name><name>Zoom</name><index>[<expr><literal type="number">4</literal><operator>*</operator><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FLOAT</name></type> <name><name>Projection</name><index>[<expr><literal type="number">4</literal><operator>*</operator><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>VS_PROJECTION_CONST</name>;</typedef>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>globVertexShaderFlat</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>globVertexShaderProjection</name></decl>;</decl_stmt>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>ID3D11VertexShader</name> <modifier>*</modifier></type><name>shader</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ID3D11InputLayout</name> <modifier>*</modifier></type><name>layout</name></decl>;</decl_stmt>

}</block></struct></type> <name>d3d_vshader_t</name>;</typedef>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>picture_sys_d3d11_t</name></type> <name>picSys</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>d3d_format_t</name> <modifier>*</modifier></type><name>textureFormat</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>UINT</name></type> <name>resourceCount</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ID3D11Buffer</name> <modifier>*</modifier></type><name>pVertexBuffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>UINT</name></type> <name>vertexCount</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>UINT</name></type> <name>vertexStride</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ID3D11Buffer</name> <modifier>*</modifier></type><name>pIndexBuffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>UINT</name></type> <name>indexCount</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ID3D11Buffer</name> <modifier>*</modifier></type><name>pVertexShaderConstants</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ID3D11Buffer</name> <modifier>*</modifier></type><name><name>pPixelShaderConstants</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>UINT</name></type> <name>PSConstantsCount</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ID3D11PixelShader</name> <modifier>*</modifier></type><name><name>d3dpixelShader</name><index>[<expr><name>D3D11_MAX_SHADER_VIEW</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ID3D11SamplerState</name> <modifier>*</modifier></type><name><name>d3dsampState</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>D3D11_VIEWPORT</name></type> <name><name>cropViewport</name><index>[<expr><name>D3D11_MAX_SHADER_VIEW</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_width</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>video_projection_mode_t</name></type> <name>projection</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PS_CONSTANT_BUFFER</name></type> <name>shaderConstants</name></decl>;</decl_stmt>

}</block></struct></type> <name>d3d_quad_t</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3D11_MAX_RENDER_TARGET</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<function_decl><type><name>bool</name></type> <name>IsRGBShader</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>d3d_format_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>D3D11_InitShaders</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>d3d11_shaders_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>D3D11_ReleaseShaders</name><parameter_list>(<parameter><decl><type><name>d3d11_shaders_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>HRESULT</name></type> <name>D3D11_CompilePixelShader</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>d3d11_shaders_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>legacy_shader</name></decl></parameter>,

<parameter><decl><type><name>d3d11_device_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>display_info_t</name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><name>video_transfer_func_t</name></type></decl></parameter>, <parameter><decl><type><name>video_color_primaries_t</name></type></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>src_full_range</name></decl></parameter>,

<parameter><decl><type><name>d3d_quad_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3D11_CompilePixelShader</name><parameter_list>(<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>,<parameter><type><name>c</name></type></parameter>,<parameter><type><name>d</name></type></parameter>,<parameter><type><name>e</name></type></parameter>,<parameter><type><name>f</name></type></parameter>,<parameter><type><name>g</name></type></parameter>,<parameter><type><name>h</name></type></parameter>,<parameter><type><name>i</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>D3D11_CompilePixelShader(VLC_OBJECT(a),b,c,d,e,f,g,h,i)</cpp:value></cpp:define>

<function_decl><type><name>void</name></type> <name>D3D11_ReleasePixelShader</name><parameter_list>(<parameter><decl><type><name>d3d_quad_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>HRESULT</name></type> <name>D3D11_CompileFlatVertexShader</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>d3d11_shaders_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>d3d11_device_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>d3d_vshader_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3D11_CompileFlatVertexShader</name><parameter_list>(<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>,<parameter><type><name>c</name></type></parameter>,<parameter><type><name>d</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>D3D11_CompileFlatVertexShader(VLC_OBJECT(a),b,c,d)</cpp:value></cpp:define>

<function_decl><type><name>HRESULT</name></type> <name>D3D11_CompileProjectionVertexShader</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>d3d11_shaders_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>d3d11_device_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>d3d_vshader_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3D11_CompileProjectionVertexShader</name><parameter_list>(<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>,<parameter><type><name>c</name></type></parameter>,<parameter><type><name>d</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>D3D11_CompileProjectionVertexShader(VLC_OBJECT(a),b,c,d)</cpp:value></cpp:define>

<function_decl><type><name>float</name></type> <name>GetFormatLuminance</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GetFormatLuminance</name><parameter_list>(<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>GetFormatLuminance(VLC_OBJECT(a),b)</cpp:value></cpp:define>

<function_decl><type><name>HRESULT</name></type> <name>D3D11_CreateRenderTargets</name><parameter_list>(<parameter><decl><type><name>d3d11_device_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>ID3D11Resource</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>d3d_format_t</name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><name>ID3D11RenderTargetView</name> <modifier>*</modifier></type><name><name>output</name><index>[<expr><name>D3D11_MAX_RENDER_TARGET</name></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>D3D11_ClearRenderTargets</name><parameter_list>(<parameter><decl><type><name>d3d11_device_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>d3d_format_t</name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><name>ID3D11RenderTargetView</name> <modifier>*</modifier></type><name><name>targets</name><index>[<expr><name>D3D11_MAX_RENDER_TARGET</name></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>D3D11_SetVertexShader</name><parameter_list>(<parameter><decl><type><name>d3d_vshader_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>d3d_vshader_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>D3D11_ReleaseVertexShader</name><parameter_list>(<parameter><decl><type><name>d3d_vshader_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

</unit>
