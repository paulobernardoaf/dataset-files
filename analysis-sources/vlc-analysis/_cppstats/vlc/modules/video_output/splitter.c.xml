<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\video_output\splitter.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;config.h&gt;</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_modules.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_codec.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_vout_display.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_video_splitter.h&gt;</cpp:file></cpp:include>

<struct>struct <name>vlc_vidsplit_part</name> <block>{

<decl_stmt><decl><type><name>vout_window_t</name> <modifier>*</modifier></type><name>window</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>display</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_sem_t</name></type> <name>lock</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>width</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>height</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>vout_display_sys_t</name> <block>{

<decl_stmt><decl><type><name>video_splitter_t</name></type> <name>splitter</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>lock</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pictures</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_vidsplit_part</name></name> <modifier>*</modifier></type><name>parts</name></decl>;</decl_stmt>

}</block>;</struct>

<function><type><specifier>static</specifier> <name>void</name></type> <name>vlc_vidsplit_Prepare</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>pic</name></decl></parameter>,

<parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>subpic</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>date</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>picture_Hold</name><argument_list>(<argument><expr><name>pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>subpic</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>video_splitter_Filter</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>splitter</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>pictures</name></name></expr></argument>, <argument><expr><name>pic</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>sys</name><operator>-&gt;</operator><name>splitter</name><operator>.</operator><name>i_output</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>pictures</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt></block_content></block></for>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>sys</name><operator>-&gt;</operator><name>splitter</name><operator>.</operator><name>i_output</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_vidsplit_part</name></name> <modifier>*</modifier></type><name>part</name> <init>= <expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>parts</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_sem_wait</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>part</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>pictures</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>vout_display_Prepare</name><argument_list>(<argument><expr><name><name>part</name><operator>-&gt;</operator><name>display</name></name></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>pictures</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>date</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>vlc_vidsplit_Display</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>picture</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>sys</name><operator>-&gt;</operator><name>splitter</name><operator>.</operator><name>i_output</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_vidsplit_part</name></name> <modifier>*</modifier></type><name>part</name> <init>= <expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>parts</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>pictures</name><index>[<expr><name>i</name></expr>]</index></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>vout_display_Display</name><argument_list>(<argument><expr><name><name>part</name><operator>-&gt;</operator><name>display</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>pictures</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_sem_post</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>part</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>picture</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>vlc_vidsplit_Control</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>query</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>args</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>vd</name></expr>;</expr_stmt> <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>args</name></expr>;</expr_stmt>

<switch>switch <condition>(<expr><name>query</name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>VOUT_DISPLAY_CHANGE_DISPLAY_SIZE</name></expr>:</case>

<case>case <expr><name>VOUT_DISPLAY_CHANGE_DISPLAY_FILLED</name></expr>:</case>

<case>case <expr><name>VOUT_DISPLAY_CHANGE_ZOOM</name></expr>:</case>

<case>case <expr><name>VOUT_DISPLAY_CHANGE_SOURCE_ASPECT</name></expr>:</case>

<case>case <expr><name>VOUT_DISPLAY_CHANGE_SOURCE_CROP</name></expr>:</case>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></switch>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>vlc_vidsplit_Close</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>n</name> <init>= <expr><name><name>sys</name><operator>-&gt;</operator><name>splitter</name><operator>.</operator><name>i_output</name></name></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_vidsplit_part</name></name> <modifier>*</modifier></type><name>part</name> <init>= <expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>parts</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>display</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_sem_wait</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>part</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>display</name> <operator>=</operator> <name><name>part</name><operator>-&gt;</operator><name>display</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>part</name><operator>-&gt;</operator><name>display</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_sem_post</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>part</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>display</name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>vout_display_Delete</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>vout_window_Disable</name><argument_list>(<argument><expr><name><name>part</name><operator>-&gt;</operator><name>window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vout_window_Delete</name><argument_list>(<argument><expr><name><name>part</name><operator>-&gt;</operator><name>window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>module_unneed</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>splitter</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>splitter</name><operator>.</operator><name>p_module</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>video_format_Clean</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>splitter</name><operator>.</operator><name>fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_object_delete</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>splitter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>vlc_vidsplit_window_Resized</name><parameter_list>(<parameter><decl><type><name>vout_window_t</name> <modifier>*</modifier></type><name>wnd</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_vidsplit_part</name></name> <modifier>*</modifier></type><name>part</name> <init>= <expr><name><name>wnd</name><operator>-&gt;</operator><name>owner</name><operator>.</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_sem_wait</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>part</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>part</name><operator>-&gt;</operator><name>width</name></name> <operator>=</operator> <name>width</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>part</name><operator>-&gt;</operator><name>height</name></name> <operator>=</operator> <name>height</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>part</name><operator>-&gt;</operator><name>display</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>vout_display_SetSize</name><argument_list>(<argument><expr><name><name>part</name><operator>-&gt;</operator><name>display</name></name></expr></argument>, <argument><expr><name>width</name></expr></argument>, <argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_sem_post</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>part</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>vlc_vidsplit_window_Closed</name><parameter_list>(<parameter><decl><type><name>vout_window_t</name> <modifier>*</modifier></type><name>wnd</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_vidsplit_part</name></name> <modifier>*</modifier></type><name>part</name> <init>= <expr><name><name>wnd</name><operator>-&gt;</operator><name>owner</name><operator>.</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>display</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_sem_wait</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>part</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>display</name> <operator>=</operator> <name><name>part</name><operator>-&gt;</operator><name>display</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>part</name><operator>-&gt;</operator><name>display</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_sem_post</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>part</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>display</name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>vout_display_Delete</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>vlc_vidsplit_window_MouseEvent</name><parameter_list>(<parameter><decl><type><name>vout_window_t</name> <modifier>*</modifier></type><name>wnd</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>vout_window_mouse_event_t</name> <modifier>*</modifier></type><name>e</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_vidsplit_part</name></name> <modifier>*</modifier></type><name>part</name> <init>= <expr><name><name>wnd</name><operator>-&gt;</operator><name>owner</name><operator>.</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name> <init>= <expr><operator>(</operator><name>vout_display_t</name> <operator>*</operator><operator>)</operator><call><name>vlc_object_parent</name><argument_list>(<argument><expr><name>wnd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vout_window_mouse_event_t</name></type> <name>ev</name> <init>= <expr><operator>*</operator><name>e</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>video_splitter_Mouse</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>splitter</name></name></expr></argument>, <argument><expr><name>part</name> <operator>-</operator> <name><name>sys</name><operator>-&gt;</operator><name>parts</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>ev</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>VLC_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>vout_window_SendMouseEvent</name><argument_list>(<argument><expr><name><name>vd</name><operator>-&gt;</operator><name>cfg</name><operator>-&gt;</operator><name>window</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>ev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>vlc_vidsplit_window_KeyboardEvent</name><parameter_list>(<parameter><decl><type><name>vout_window_t</name> <modifier>*</modifier></type><name>wnd</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>key</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name> <init>= <expr><operator>(</operator><name>vout_display_t</name> <operator>*</operator><operator>)</operator><call><name>vlc_object_parent</name><argument_list>(<argument><expr><name>wnd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vout_window_ReportKeyPress</name><argument_list>(<argument><expr><name><name>vd</name><operator>-&gt;</operator><name>cfg</name><operator>-&gt;</operator><name>window</name></name></expr></argument>, <argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name><name>struct</name> <name>vout_window_callbacks</name></name></type> <name>vlc_vidsplit_window_cbs</name> <init>= <expr><block>{

<expr><operator>.</operator><name>resized</name> <operator>=</operator> <name>vlc_vidsplit_window_Resized</name></expr>,

<expr><operator>.</operator><name>closed</name> <operator>=</operator> <name>vlc_vidsplit_window_Closed</name></expr>,

<expr><operator>.</operator><name>mouse_event</name> <operator>=</operator> <name>vlc_vidsplit_window_MouseEvent</name></expr>,

<expr><operator>.</operator><name>keyboard_event</name> <operator>=</operator> <name>vlc_vidsplit_window_KeyboardEvent</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>vout_window_t</name> <modifier>*</modifier></type><name>video_splitter_CreateWindow</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier><specifier>restrict</specifier></type> <name>vdcfg</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier><specifier>restrict</specifier></type> <name>source</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>sys</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_window_cfg_t</name></type> <name>cfg</name> <init>= <expr><block>{

<expr><operator>.</operator><name>is_decorated</name> <operator>=</operator> <name>true</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vout_window_owner_t</name></type> <name>owner</name> <init>= <expr><block>{

<expr><operator>.</operator><name>cbs</name> <operator>=</operator> <operator>&amp;</operator><name>vlc_vidsplit_window_cbs</name></expr>,

<expr><operator>.</operator><name>sys</name> <operator>=</operator> <name>sys</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vout_display_GetDefaultDisplaySize</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>cfg</name><operator>.</operator><name>width</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>cfg</name><operator>.</operator><name>height</name></name></expr></argument>, <argument><expr><name>source</name></expr></argument>,

<argument><expr><name>vdcfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>vout_window_t</name> <modifier>*</modifier></type><name>window</name> <init>= <expr><call><name>vout_window_New</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>owner</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>window</name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>vout_window_Enable</name><argument_list>(<argument><expr><name>window</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>cfg</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>vout_window_Delete</name><argument_list>(<argument><expr><name>window</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>window</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>window</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>vlc_vidsplit_Open</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>,

<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>fmtp</name></decl></parameter>, <parameter><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name> <init>= <expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>vout_display_cfg_IsWindowed</name><argument_list>(<argument><expr><name>cfg</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name> <init>= <expr><call><name>var_InheritString</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"video-splitter"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>name</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><call><name>vlc_object_create</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><sizeof>sizeof <argument_list>(<argument><expr><operator>*</operator><name>sys</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>sys</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_ENOMEM</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name> <operator>=</operator> <name>sys</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>video_splitter_t</name> <modifier>*</modifier></type><name>splitter</name> <init>= <expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>splitter</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_mutex_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>video_format_Copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>splitter</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>source</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>splitter</name><operator>-&gt;</operator><name>p_module</name></name> <operator>=</operator> <call><name>module_need</name><argument_list>(<argument><expr><name>splitter</name></expr></argument>, <argument><expr><literal type="string">"video splitter"</literal></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>splitter</name><operator>-&gt;</operator><name>p_module</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>video_format_Clean</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>splitter</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_object_delete</name><argument_list>(<argument><expr><name>splitter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>pictures</name></name> <operator>=</operator> <call><name>vlc_obj_malloc</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>splitter</name><operator>-&gt;</operator><name>i_output</name></name>

<operator>*</operator> <sizeof>sizeof <argument_list>(<argument><expr><operator>*</operator><name><name>sys</name><operator>-&gt;</operator><name>pictures</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>parts</name></name> <operator>=</operator> <call><name>vlc_obj_malloc</name><argument_list>(<argument><expr><name>obj</name></expr></argument>,

<argument><expr><name><name>splitter</name><operator>-&gt;</operator><name>i_output</name></name> <operator>*</operator> <sizeof>sizeof <argument_list>(<argument><expr><operator>*</operator><name><name>sys</name><operator>-&gt;</operator><name>parts</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>pictures</name></name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <name><name>sys</name><operator>-&gt;</operator><name>parts</name></name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>splitter</name><operator>-&gt;</operator><name>i_output</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_vidsplit_Close</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_ENOMEM</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>splitter</name><operator>-&gt;</operator><name>i_output</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>video_splitter_output_t</name> <modifier>*</modifier></type><name>output</name> <init>= <expr><operator>&amp;</operator><name><name>splitter</name><operator>-&gt;</operator><name>p_output</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vout_display_cfg_t</name></type> <name>vdcfg</name> <init>= <expr><block>{

<expr><operator>.</operator><name>display</name> <operator>=</operator> <block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr> }</block></expr>,

<expr><operator>.</operator><name>align</name> <operator>=</operator> <block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr> ,

<expr><operator>.</operator><name>is_display_filled</name> <operator>=</operator> <name>true</name></expr>,

<expr><operator>.</operator><name>zoom</name> <operator>=</operator> <block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>modname</name> <init>= <expr><name><name>output</name><operator>-&gt;</operator><name>psz_module</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_vidsplit_part</name></name> <modifier>*</modifier></type><name>part</name> <init>= <expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>parts</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_sem_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>part</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>part</name><operator>-&gt;</operator><name>display</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>part</name><operator>-&gt;</operator><name>width</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>part</name><operator>-&gt;</operator><name>height</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>part</name><operator>-&gt;</operator><name>window</name></name> <operator>=</operator> <call><name>video_splitter_CreateWindow</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>vdcfg</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>output</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument>,

<argument><expr><name>part</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>part</name><operator>-&gt;</operator><name>window</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>splitter</name><operator>-&gt;</operator><name>i_output</name></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_vidsplit_Close</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>vdcfg</name><operator>.</operator><name>window</name></name> <operator>=</operator> <name><name>part</name><operator>-&gt;</operator><name>window</name></name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>display</name> <init>= <expr><call><name>vout_display_New</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>output</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>vdcfg</name></expr></argument>,

<argument><expr><name>modname</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>display</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>vout_window_Disable</name><argument_list>(<argument><expr><name><name>part</name><operator>-&gt;</operator><name>window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vout_window_Delete</name><argument_list>(<argument><expr><name><name>part</name><operator>-&gt;</operator><name>window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>splitter</name><operator>-&gt;</operator><name>i_output</name></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_vidsplit_Close</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_sem_wait</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>part</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>part</name><operator>-&gt;</operator><name>display</name></name> <operator>=</operator> <name>display</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vout_display_SetSize</name><argument_list>(<argument><expr><name>display</name></expr></argument>, <argument><expr><name><name>part</name><operator>-&gt;</operator><name>width</name></name></expr></argument>, <argument><expr><name><name>part</name><operator>-&gt;</operator><name>height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_sem_post</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>part</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>prepare</name></name> <operator>=</operator> <name>vlc_vidsplit_Prepare</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>display</name></name> <operator>=</operator> <name>vlc_vidsplit_Display</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>control</name></name> <operator>=</operator> <name>vlc_vidsplit_Control</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>close</name></name> <operator>=</operator> <name>vlc_vidsplit_Close</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>fmtp</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<macro><name>vlc_module_begin</name><argument_list>()</argument_list></macro>

<macro><name>set_shortname</name><argument_list>(<argument>N_(<literal type="string">"Splitter"</literal>)</argument>)</argument_list></macro>

<macro><name>set_description</name><argument_list>(<argument>N_(<literal type="string">"Video splitter display plugin"</literal>)</argument>)</argument_list></macro>

<macro><name>set_category</name><argument_list>(<argument>CAT_VIDEO</argument>)</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>(<argument>SUBCAT_VIDEO_VOUT</argument>)</argument_list></macro>

<macro><name>set_callback_display</name><argument_list>(<argument>vlc_vidsplit_Open</argument>, <argument><literal type="number">0</literal></argument>)</argument_list></macro>

<macro><name>add_module</name><argument_list>(<argument><literal type="string">"video-splitter"</literal></argument>, <argument><literal type="string">"video splitter"</literal></argument>, <argument>NULL</argument>,

<argument>N_(<literal type="string">"Video splitter module"</literal>)</argument>, <argument>N_(<literal type="string">"Video splitter module"</literal>)</argument>)</argument_list></macro>

<macro><name>vlc_module_end</name><argument_list>()</argument_list></macro>

</unit>
