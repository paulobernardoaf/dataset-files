<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\video_output\xcb\x11.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;config.h&gt;</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;xcb/xcb.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;xcb/shm.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_fs.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_vout_display.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"pictures.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"events.h"</cpp:file></cpp:include>

<struct>struct <name>vout_display_sys_t</name>

<block>{

<decl_stmt><decl><type><name>xcb_connection_t</name> <modifier>*</modifier></type><name>conn</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>xcb_window_t</name></type> <name>window</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>xcb_gcontext_t</name></type> <name>gc</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>xcb_shm_seg_t</name></type> <name>segment</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>bool</name></type> <name>attached</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>depth</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>video_format_t</name></type> <name>fmt</name></decl>;</decl_stmt>

}</block>;</struct>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Prepare</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>pic</name></decl></parameter>, <parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>subpic</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>date</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>picture_buffer_t</name> <modifier>*</modifier></type><name>buf</name> <init>= <expr><name><name>pic</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>xcb_connection_t</name> <modifier>*</modifier></type><name>conn</name> <init>= <expr><name><name>sys</name><operator>-&gt;</operator><name>conn</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>attached</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>segment</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt> 

<if_stmt><if>if <condition>(<expr><name><name>buf</name><operator>-&gt;</operator><name>fd</name></name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>fd</name> <init>= <expr><call><name>vlc_dup</name><argument_list>(<argument><expr><name><name>buf</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>fd</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>xcb_void_cookie_t</name></type> <name>c</name> <init>= <expr><call><name>xcb_shm_attach_fd_checked</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>segment</name></name></expr></argument>, <argument><expr><name>fd</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>xcb_generic_error_t</name> <modifier>*</modifier></type><name>e</name> <init>= <expr><call><name>xcb_request_check</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>c</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>e</name> <operator>!=</operator> <name>NULL</name></expr>)</condition> 

<block>{<block_content>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>attached</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>subpic</name></expr>;</expr_stmt> <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>date</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Display</name> <parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>pic</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>xcb_connection_t</name> <modifier>*</modifier></type><name>conn</name> <init>= <expr><name><name>sys</name><operator>-&gt;</operator><name>conn</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>picture_buffer_t</name> <modifier>*</modifier></type><name>buf</name> <init>= <expr><name><name>pic</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>xcb_shm_seg_t</name></type> <name>segment</name> <init>= <expr><name><name>sys</name><operator>-&gt;</operator><name>segment</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>xcb_void_cookie_t</name></type> <name>ck</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_xcb_Manage</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>conn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>attached</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>ck</name> <operator>=</operator> <call><name>xcb_shm_put_image_checked</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>window</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>gc</name></name></expr></argument>,

<argument><expr><name><name>pic</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name> <operator>/</operator> <name><name>pic</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pixel_pitch</name></name></expr></argument>,

<argument><expr><name><name>pic</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_lines</name></name></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_x_offset</name></name></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_y_offset</name></name></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_visible_width</name></name></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_visible_height</name></name></expr></argument>,

<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>depth</name></name></expr></argument>, <argument><expr><name>XCB_IMAGE_FORMAT_Z_PIXMAP</name></expr></argument>,

<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>segment</name></expr></argument>, <argument><expr><name><name>buf</name><operator>-&gt;</operator><name>offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<else>else <block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>size_t</name></type> <name>offset</name> <init>= <expr><name><name>sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_y_offset</name></name> <operator>*</operator> <name><name>pic</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name></type> <name>lines</name> <init>= <expr><name><name>pic</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_lines</name></name> <operator>-</operator> <name><name>sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_y_offset</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>ck</name> <operator>=</operator> <call><name>xcb_put_image_checked</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>XCB_IMAGE_FORMAT_Z_PIXMAP</name></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>window</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>gc</name></name></expr></argument>,

<argument><expr><name><name>pic</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name> <operator>/</operator> <name><name>pic</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pixel_pitch</name></name></expr></argument>,

<argument><expr><name>lines</name></expr></argument>, <argument><expr><operator>-</operator><name><name>sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_x_offset</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>depth</name></name></expr></argument>,

<argument><expr><name><name>pic</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name> <operator>*</operator> <name>lines</name></expr></argument>,

<argument><expr><name><name>pic</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>p_pixels</name></name> <operator>+</operator> <name>offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<decl_stmt><decl><type><name>xcb_generic_error_t</name> <modifier>*</modifier></type><name>e</name> <init>= <expr><call><name>xcb_request_check</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>ck</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>e</name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"%s: X11 error %d"</literal></expr></argument>, <argument><expr><literal type="string">"cannot put image"</literal></expr></argument>, <argument><expr><name><name>e</name><operator>-&gt;</operator><name>error_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>attached</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>xcb_shm_detach</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>segment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Control</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>query</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>ap</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<switch>switch <condition>(<expr><name>query</name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>VOUT_DISPLAY_CHANGE_DISPLAY_SIZE</name></expr>:</case>

<case>case <expr><name>VOUT_DISPLAY_CHANGE_ZOOM</name></expr>:</case>

<case>case <expr><name>VOUT_DISPLAY_CHANGE_DISPLAY_FILLED</name></expr>:</case>

<case>case <expr><name>VOUT_DISPLAY_CHANGE_SOURCE_ASPECT</name></expr>:</case>

<case>case <expr><name>VOUT_DISPLAY_CHANGE_SOURCE_CROP</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type><name>cfg</name> <init>= <expr><call><name>va_arg</name><argument_list>(<argument><expr><name>ap</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>vout_display_cfg_t</name> <operator>*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>video_format_t</name></type> <name>src</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>fmt</name> <init>= <expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>fmt</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vout_display_place_t</name></type> <name>place</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><name>VLC_SUCCESS</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vout_display_PlacePicture</name><argument_list>(<argument><expr><operator>&amp;</operator><name>place</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>source</name></name></expr></argument>, <argument><expr><name>cfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>mask</name> <init>= <expr><name>XCB_CONFIG_WINDOW_X</name> <operator>|</operator> <name>XCB_CONFIG_WINDOW_Y</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint32_t</name></type> <name><name>values</name><index>[]</index></name> <init>= <expr><block>{

<expr><name><name>place</name><operator>.</operator><name>x</name></name></expr>, <expr><name><name>place</name><operator>.</operator><name>y</name></name></expr>, <expr><name><name>place</name><operator>.</operator><name>width</name></name></expr>, <expr><name><name>place</name><operator>.</operator><name>height</name></name></expr>

}</block></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>place</name><operator>.</operator><name>width</name></name> <operator>!=</operator> <name><name>sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_visible_width</name></name>

<operator>||</operator> <name><name>place</name><operator>.</operator><name>height</name></name> <operator>!=</operator> <name><name>sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_visible_height</name></name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name>mask</name> <operator>|=</operator> <name>XCB_CONFIG_WINDOW_WIDTH</name> <operator>|</operator> <name>XCB_CONFIG_WINDOW_HEIGHT</name></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <name>VLC_EGENERIC</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>xcb_configure_window</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>conn</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>window</name></name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>values</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>video_format_ApplyRotation</name><argument_list>(<argument><expr><operator>&amp;</operator><name>src</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>source</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_width</name></name> <operator>=</operator> <name><name>src</name><operator>.</operator><name>i_width</name></name> <operator>*</operator> <name><name>place</name><operator>.</operator><name>width</name></name> <operator>/</operator> <name><name>src</name><operator>.</operator><name>i_visible_width</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_height</name></name> <operator>=</operator> <name><name>src</name><operator>.</operator><name>i_height</name></name> <operator>*</operator> <name><name>place</name><operator>.</operator><name>height</name></name> <operator>/</operator> <name><name>src</name><operator>.</operator><name>i_visible_height</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_visible_width</name></name> <operator>=</operator> <name><name>place</name><operator>.</operator><name>width</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_visible_height</name></name> <operator>=</operator> <name><name>place</name><operator>.</operator><name>height</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_x_offset</name></name> <operator>=</operator> <name><name>src</name><operator>.</operator><name>i_x_offset</name></name> <operator>*</operator> <name><name>place</name><operator>.</operator><name>width</name></name> <operator>/</operator> <name><name>src</name><operator>.</operator><name>i_visible_width</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_y_offset</name></name> <operator>=</operator> <name><name>src</name><operator>.</operator><name>i_y_offset</name></name> <operator>*</operator> <name><name>place</name><operator>.</operator><name>height</name></name> <operator>/</operator> <name><name>src</name><operator>.</operator><name>i_visible_height</name></name></expr>;</expr_stmt>

<return>return <expr><name>ret</name></expr>;</return>

</block_content>}</block>

<case>case <expr><name>VOUT_DISPLAY_RESET_PICTURES</name></expr>:</case>

<block>{<block_content>

<expr_stmt><expr><call><name>va_arg</name><argument_list>(<argument><expr><name>ap</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>vout_display_cfg_t</name> <operator>*</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>(<argument><expr><name>ap</name></expr></argument>, <argument><expr><name>video_format_t</name> <operator>*</operator></expr></argument>)</argument_list></call> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>fmt</name></name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block>

<default>default:</default>

<expr_stmt><expr><call><name>msg_Err</name> <argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Unknown request in XCB vout display"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></switch>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>xcb_disconnect</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>conn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>xcb_visualid_t</name></type> <name>DepthToFormat</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>xcb_setup_t</name> <modifier>*</modifier></type><name>setup</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>xcb_depth_t</name> <modifier>*</modifier></type><name>depth</name></decl></parameter>,

<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier><specifier>restrict</specifier></type> <name>f</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>xcb_visualtype_t</name> <modifier>*</modifier></type><name>vt</name> <init>= <expr><call><name>xcb_depth_visuals</name><argument_list>(<argument><expr><name>depth</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><call><name>xcb_depth_visuals_length</name><argument_list>(<argument><expr><name>depth</name></expr></argument>)</argument_list></call></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name><operator>--</operator></expr><operator>,</operator> <expr><name>vt</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<if_stmt><if>if <condition>(<expr><call><name>vlc_xcb_VisualToFormat</name><argument_list>(<argument><expr><name>setup</name></expr></argument>, <argument><expr><name><name>depth</name><operator>-&gt;</operator><name>depth</name></name></expr></argument>, <argument><expr><name>vt</name></expr></argument>, <argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name><name>vt</name><operator>-&gt;</operator><name>visual_id</name></name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>xcb_visualid_t</name></type> <name>ScreenToFormat</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>xcb_setup_t</name> <modifier>*</modifier></type><name>setup</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>xcb_screen_t</name> <modifier>*</modifier></type><name>screen</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><specifier>restrict</specifier></type> <name>bits</name></decl></parameter>,

<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier><specifier>restrict</specifier></type> <name>fmtp</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>xcb_visualid_t</name></type> <name>visual</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><operator>*</operator><name>bits</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<for>for <control>(<init><decl><type><name>xcb_depth_iterator_t</name></type> <name>it</name> <init>= <expr><call><name>xcb_screen_allowed_depths_iterator</name><argument_list>(<argument><expr><name>screen</name></expr></argument>)</argument_list></call></expr></init></decl>;</init>

<condition><expr><name><name>it</name><operator>.</operator><name>rem</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>;</condition>

<incr><expr><call><name>xcb_depth_next</name><argument_list>(<argument><expr><operator>&amp;</operator><name>it</name></expr></argument>)</argument_list></call></expr></incr>)</control>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>xcb_depth_t</name> <modifier>*</modifier></type><name>depth</name> <init>= <expr><name><name>it</name><operator>.</operator><name>data</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>video_format_t</name></type> <name>fmt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>xcb_visualid_t</name></type> <name>vid</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>depth</name><operator>-&gt;</operator><name>depth</name></name> <operator>&lt;=</operator> <operator>*</operator><name>bits</name></expr>)</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt> 

<expr_stmt><expr><call><name>video_format_ApplyRotation</name><argument_list>(<argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>, <argument><expr><name>fmtp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vid</name> <operator>=</operator> <call><name>DepthToFormat</name><argument_list>(<argument><expr><name>setup</name></expr></argument>, <argument><expr><name>depth</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>vid</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>bits</name> <operator>=</operator> <name><name>depth</name><operator>-&gt;</operator><name>depth</name></name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>fmtp</name> <operator>=</operator> <name>fmt</name></expr>;</expr_stmt>

<expr_stmt><expr><name>visual</name> <operator>=</operator> <name>vid</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<return>return <expr><name>visual</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Open</name> <parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>,

<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>fmtp</name></decl></parameter>, <parameter><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type><name>context</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><call><name>malloc</name> <argument_list>(<argument><expr><sizeof>sizeof <argument_list>(<argument><expr><operator>*</operator><name>sys</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>sys</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name> <operator>=</operator> <name>sys</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>xcb_connection_t</name> <modifier>*</modifier></type><name>conn</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>xcb_screen_t</name> <modifier>*</modifier></type><name>scr</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>vlc_xcb_parent_Create</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name><name>cfg</name><operator>-&gt;</operator><name>window</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>conn</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>scr</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>VLC_SUCCESS</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>conn</name></name> <operator>=</operator> <name>conn</name></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>xcb_setup_t</name> <modifier>*</modifier></type><name>setup</name> <init>= <expr><call><name>xcb_get_setup</name> <argument_list>(<argument><expr><name>conn</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>xcb_visualid_t</name></type> <name>vid</name> <init>= <expr><call><name>ScreenToFormat</name><argument_list>(<argument><expr><name>setup</name></expr></argument>, <argument><expr><name>scr</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>depth</name></name></expr></argument>, <argument><expr><name>fmtp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>vid</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"no supported visual &amp; pixel format"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>error</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"using X11 visual ID 0x%"</literal><name>PRIx32</name></expr></argument>, <argument><expr><name>vid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">" %"</literal><name>PRIu8</name><literal type="string">" bits depth"</literal></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>depth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>xcb_colormap_t</name></type> <name>cmap</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>vid</name> <operator>!=</operator> <name><name>scr</name><operator>-&gt;</operator><name>root_visual</name></name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name>cmap</name> <operator>=</operator> <call><name>xcb_generate_id</name> <argument_list>(<argument><expr><name>conn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>xcb_create_colormap</name> <argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>XCB_COLORMAP_ALLOC_NONE</name></expr></argument>,

<argument><expr><name>cmap</name></expr></argument>, <argument><expr><name><name>scr</name><operator>-&gt;</operator><name>root</name></name></expr></argument>, <argument><expr><name>vid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name>cmap</name> <operator>=</operator> <name><name>scr</name><operator>-&gt;</operator><name>default_colormap</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint32_t</name></type> <name>mask</name> <init>=

<expr><name>XCB_CW_BACK_PIXEL</name> <operator>|</operator>

<name>XCB_CW_BORDER_PIXEL</name> <operator>|</operator>

<name>XCB_CW_EVENT_MASK</name> <operator>|</operator>

<name>XCB_CW_COLORMAP</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint32_t</name></type> <name><name>values</name><index>[]</index></name> <init>= <expr><block>{

<expr><name><name>scr</name><operator>-&gt;</operator><name>black_pixel</name></name></expr>,

<expr><name><name>scr</name><operator>-&gt;</operator><name>black_pixel</name></name></expr>,

<expr><literal type="number">0</literal></expr>,

<expr><name>cmap</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vout_display_place_t</name></type> <name>place</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vout_display_PlacePicture</name><argument_list>(<argument><expr><operator>&amp;</operator><name>place</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>source</name></name></expr></argument>, <argument><expr><name>cfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>window</name></name> <operator>=</operator> <call><name>xcb_generate_id</name> <argument_list>(<argument><expr><name>conn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>gc</name></name> <operator>=</operator> <call><name>xcb_generate_id</name> <argument_list>(<argument><expr><name>conn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>xcb_create_window</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>depth</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>window</name></name></expr></argument>, <argument><expr><name><name>cfg</name><operator>-&gt;</operator><name>window</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>xid</name></name></expr></argument>,

<argument><expr><name><name>place</name><operator>.</operator><name>x</name></name></expr></argument>, <argument><expr><name><name>place</name><operator>.</operator><name>y</name></name></expr></argument>, <argument><expr><name><name>place</name><operator>.</operator><name>width</name></name></expr></argument>, <argument><expr><name><name>place</name><operator>.</operator><name>height</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,

<argument><expr><name>XCB_WINDOW_CLASS_INPUT_OUTPUT</name></expr></argument>, <argument><expr><name>vid</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>values</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>xcb_map_window</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>xcb_create_gc</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>gc</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>window</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"using X11 window %08"</literal><name>PRIx32</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"using X11 graphic context %08"</literal><name>PRIx32</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>gc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>XCB_shm_Check</name> <argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>conn</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>segment</name></name> <operator>=</operator> <call><name>xcb_generate_id</name><argument_list>(<argument><expr><name>conn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>segment</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>fmt</name></name> <operator>=</operator> <operator>*</operator><name>fmtp</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>prepare</name></name> <operator>=</operator> <name>Prepare</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>display</name></name> <operator>=</operator> <name>Display</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>control</name></name> <operator>=</operator> <name>Control</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>close</name></name> <operator>=</operator> <name>Close</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>context</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<label><name>error</name>:</label>

<expr_stmt><expr><call><name>Close</name> <argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></function>

<macro><name>vlc_module_begin</name><argument_list>()</argument_list></macro>

<macro><name>set_shortname</name><argument_list>(<argument>N_(<literal type="string">"X11"</literal>)</argument>)</argument_list></macro>

<macro><name>set_description</name><argument_list>(<argument>N_(<literal type="string">"X11 video output (XCB)"</literal>)</argument>)</argument_list></macro>

<macro><name>set_category</name><argument_list>(<argument>CAT_VIDEO</argument>)</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>(<argument>SUBCAT_VIDEO_VOUT</argument>)</argument_list></macro>

<macro><name>set_callback_display</name><argument_list>(<argument>Open</argument>, <argument><literal type="number">100</literal></argument>)</argument_list></macro>

<macro><name>add_shortcut</name><argument_list>(<argument><literal type="string">"xcb-x11"</literal></argument>, <argument><literal type="string">"x11"</literal></argument>)</argument_list></macro>

<macro><name>add_obsolete_bool</name><argument_list>(<argument><literal type="string">"x11-shm"</literal></argument>)</argument_list></macro> 

<macro><name>vlc_module_end</name><argument_list>()</argument_list></macro>

</unit>
