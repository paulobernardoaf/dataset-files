<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\video_output\vgl.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_vout_display.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_opengl.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc/libvlc.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc/libvlc_picture.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc/libvlc_media.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc/libvlc_renderer_discoverer.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc/libvlc_media_player.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>GL_RGBA</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_RGBA</name></cpp:macro> <cpp:value>0x1908</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<struct>struct <name>vout_display_sys_t</name>

<block>{

<decl_stmt><decl><type><name>libvlc_video_output_cleanup_cb</name></type> <name>cleanupCb</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>libvlc_video_output_setup_cb</name></type> <name>setupCb</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>libvlc_video_update_output_cb</name></type> <name>resizeCb</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>libvlc_video_swap_cb</name></type> <name>swapCb</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>libvlc_video_makeCurrent_cb</name></type> <name>makeCurrentCb</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>libvlc_video_getProcAddress_cb</name></type> <name>getProcAddressCb</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name><modifier>*</modifier></type> <name>opaque</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>width</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>height</name></decl>;</decl_stmt>

}</block>;</struct>

<function><type><specifier>static</specifier> <name>void</name> <modifier>*</modifier></type><name>OurGetProcAddress</name><parameter_list>(<parameter><decl><type><name>vlc_gl_t</name> <modifier>*</modifier></type><name>gl</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>gl</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<return>return <expr><call><name><name>sys</name><operator>-&gt;</operator><name>getProcAddressCb</name></name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>opaque</name></name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>MakeCurrent</name><parameter_list>(<parameter><decl><type><name>vlc_gl_t</name> <modifier>*</modifier></type><name>gl</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>gl</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>success</name> <init>= <expr><call><name><name>sys</name><operator>-&gt;</operator><name>makeCurrentCb</name></name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>opaque</name></name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><ternary><condition><expr><name>success</name></expr> ?</condition><then> <expr><name>VLC_SUCCESS</name></expr> </then><else>: <expr><name>VLC_EGENERIC</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>ReleaseCurrent</name><parameter_list>(<parameter><decl><type><name>vlc_gl_t</name> <modifier>*</modifier></type><name>gl</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>gl</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name><name>sys</name><operator>-&gt;</operator><name>makeCurrentCb</name></name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>opaque</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>VglSwapBuffers</name><parameter_list>(<parameter><decl><type><name>vlc_gl_t</name> <modifier>*</modifier></type><name>gl</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>gl</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name><name>sys</name><operator>-&gt;</operator><name>swapCb</name></name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Resize</name><parameter_list>(<parameter><decl><type><name>vlc_gl_t</name> <modifier>*</modifier></type> <name>gl</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>h</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>gl</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>sys</name><operator>-&gt;</operator><name>width</name></name> <operator>==</operator> <name>w</name> <operator>&amp;&amp;</operator> <name><name>sys</name><operator>-&gt;</operator><name>height</name></name> <operator>==</operator> <name>h</name></expr> )</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>MakeCurrent</name><argument_list>(<argument><expr><name>gl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>libvlc_video_render_cfg_t</name></type> <name>output_cfg</name> <init>= <expr><block>{

<expr><name>w</name></expr>, <expr><name>h</name></expr>, <expr><literal type="number">8</literal></expr>, <expr><name>true</name></expr>,

<expr><name>libvlc_video_colorspace_BT709</name></expr>, <expr><name>libvlc_video_primaries_BT709</name></expr>,

<expr><name>libvlc_video_transfer_func_SRGB</name></expr>, <expr><name>NULL</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>libvlc_video_output_cfg_t</name></type> <name>render_cfg</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name><name>sys</name><operator>-&gt;</operator><name>resizeCb</name></name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>opaque</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>output_cfg</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>render_cfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ReleaseCurrent</name><argument_list>(<argument><expr><name>gl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>render_cfg</name><operator>.</operator><name>opengl_format</name></name> <operator>==</operator> <name>GL_RGBA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>render_cfg</name><operator>.</operator><name>full_range</name></name> <operator>==</operator> <name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>render_cfg</name><operator>.</operator><name>colorspace</name></name> <operator>==</operator> <name>libvlc_video_colorspace_BT709</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>render_cfg</name><operator>.</operator><name>primaries</name></name> <operator>==</operator> <name>libvlc_video_primaries_BT709</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>render_cfg</name><operator>.</operator><name>transfer</name></name> <operator>==</operator> <name>libvlc_video_transfer_func_SRGB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>width</name></name> <operator>=</operator> <name>w</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>height</name></name> <operator>=</operator> <name>h</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>(<parameter><decl><type><name>vlc_gl_t</name> <modifier>*</modifier></type><name>gl</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>gl</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>sys</name><operator>-&gt;</operator><name>cleanupCb</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name><name>sys</name><operator>-&gt;</operator><name>cleanupCb</name></name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SET_CALLBACK_ADDR</name><parameter_list>(<parameter><type><name>var</name></type></parameter>, <parameter><type><name>varname</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { var = var_InheritAddress(gl, varname); if( !var ) { msg_Err( gl, "%s address is missing", varname ); return VLC_EGENERIC; } } while( 0 )</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Open</name><parameter_list>(<parameter><decl><type><name>vlc_gl_t</name> <modifier>*</modifier></type><name>gl</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type> <name>sys</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>libvlc_video_engine_t</name></type> <name>engineType</name> <init>= <expr><call><name>var_InheritInteger</name><argument_list>( <argument><expr><name>gl</name></expr></argument>, <argument><expr><literal type="string">"vout-cb-type"</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><name>engineType</name> <operator>!=</operator> <name>libvlc_video_engine_opengl</name> <operator>&amp;&amp;</operator>

<name>engineType</name> <operator>!=</operator> <name>libvlc_video_engine_gles2</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EBADVAR</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>gl</name><operator>-&gt;</operator><name>sys</name></name> <operator>=</operator> <name>sys</name> <operator>=</operator> <call><name>vlc_obj_calloc</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>gl</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>sys</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name>sys</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>opaque</name></name> <operator>=</operator> <call><name>var_InheritAddress</name><argument_list>(<argument><expr><name>gl</name></expr></argument>, <argument><expr><literal type="string">"vout-cb-opaque"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>setupCb</name></name> <operator>=</operator> <call><name>var_InheritAddress</name><argument_list>(<argument><expr><name>gl</name></expr></argument>, <argument><expr><literal type="string">"vout-cb-setup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>cleanupCb</name></name> <operator>=</operator> <call><name>var_InheritAddress</name><argument_list>(<argument><expr><name>gl</name></expr></argument>, <argument><expr><literal type="string">"vout-cb-cleanup"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SET_CALLBACK_ADDR</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>resizeCb</name></name></expr></argument>, <argument><expr><literal type="string">"vout-cb-update-output"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SET_CALLBACK_ADDR</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>swapCb</name></name></expr></argument>, <argument><expr><literal type="string">"vout-cb-swap"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SET_CALLBACK_ADDR</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>makeCurrentCb</name></name></expr></argument>, <argument><expr><literal type="string">"vout-cb-make-current"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SET_CALLBACK_ADDR</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>getProcAddressCb</name></name></expr></argument>, <argument><expr><literal type="string">"vout-cb-get-proc-address"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gl</name><operator>-&gt;</operator><name>makeCurrent</name></name> <operator>=</operator> <name>MakeCurrent</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gl</name><operator>-&gt;</operator><name>releaseCurrent</name></name> <operator>=</operator> <name>ReleaseCurrent</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gl</name><operator>-&gt;</operator><name>resize</name></name> <operator>=</operator> <name>Resize</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gl</name><operator>-&gt;</operator><name>swap</name></name> <operator>=</operator> <name>VglSwapBuffers</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gl</name><operator>-&gt;</operator><name>getProcAddress</name></name> <operator>=</operator> <name>OurGetProcAddress</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gl</name><operator>-&gt;</operator><name>destroy</name></name> <operator>=</operator> <name>Close</name></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>sys</name><operator>-&gt;</operator><name>setupCb</name></name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>libvlc_video_setup_device_cfg_t</name></type> <name>setup_cfg</name> <init>= <expr><block>{}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>libvlc_video_setup_device_info_t</name></type> <name>configured_cfg</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name><name>sys</name><operator>-&gt;</operator><name>setupCb</name></name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>opaque</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>setup_cfg</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>configured_cfg</name></expr></argument>)</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>gl</name></expr></argument>, <argument><expr><literal type="string">"user setup failed"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>Resize</name><argument_list>(<argument><expr><name>gl</name></expr></argument>, <argument><expr><name>width</name></expr></argument>, <argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SET_CALLBACK_ADDR</name></cpp:undef>

<macro><name>vlc_module_begin</name><argument_list>()</argument_list></macro>

<macro><name>set_shortname</name><argument_list>(<argument><literal type="string">"GL texture"</literal></argument>)</argument_list></macro>

<macro><name>set_description</name><argument_list>(<argument><literal type="string">"GL texture output"</literal></argument>)</argument_list></macro>

<macro><name>set_category</name><argument_list>(<argument>CAT_VIDEO</argument>)</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>(<argument>SUBCAT_VIDEO_VOUT</argument>)</argument_list></macro>

<macro><name>set_capability</name><argument_list>(<argument><literal type="string">"opengl"</literal></argument>, <argument><literal type="number">0</literal></argument>)</argument_list></macro>

<macro><name>set_callback</name><argument_list>(<argument>Open</argument>)</argument_list></macro>

<macro><name>add_shortcut</name><argument_list>(<argument><literal type="string">"vglmem"</literal></argument>)</argument_list></macro>

<macro><name>add_submodule</name><argument_list>()</argument_list></macro>

<macro><name>set_capability</name><argument_list>(<argument><literal type="string">"opengl es2"</literal></argument>, <argument><literal type="number">0</literal></argument>)</argument_list></macro>

<macro><name>set_callback</name><argument_list>(<argument>Open</argument>)</argument_list></macro>

<macro><name>add_shortcut</name><argument_list>(<argument><literal type="string">"vglmem"</literal></argument>)</argument_list></macro>

<macro><name>vlc_module_end</name><argument_list>()</argument_list></macro>

</unit>
