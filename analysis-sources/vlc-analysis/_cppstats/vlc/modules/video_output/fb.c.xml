<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\video_output\fb.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;signal.h&gt;</cpp:file></cpp:include> 

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;fcntl.h&gt;</cpp:file></cpp:include> 

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;unistd.h&gt;</cpp:file></cpp:include> 

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;errno.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;termios.h&gt;</cpp:file></cpp:include> 

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/ioctl.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/mman.h&gt;</cpp:file></cpp:include> 

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;linux/fb.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;linux/vt.h&gt;</cpp:file></cpp:include> 

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;linux/kd.h&gt;</cpp:file></cpp:include> 

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_vout_display.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_fs.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FB_DEV_VAR</name></cpp:macro> <cpp:value>"fbdev"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEVICE_TEXT</name></cpp:macro> <cpp:value>N_("Framebuffer device")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEVICE_LONGTEXT</name></cpp:macro> <cpp:value>N_("Framebuffer device to use for rendering (usually /dev/fb0).")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TTY_TEXT</name></cpp:macro> <cpp:value>N_("Run fb on current tty")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TTY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Run framebuffer on current TTY device (default enabled). " "(disable tty handling with caution)")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FB_MODE_TEXT</name></cpp:macro> <cpp:value>N_("Framebuffer resolution to use")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FB_MODE_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the resolution for the framebuffer. Currently it supports " "the values 0=QCIF 1=CIF 2=NTSC 3=PAL, 4=auto (default 4=auto)")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HW_ACCEL_TEXT</name></cpp:macro> <cpp:value>N_("Framebuffer uses hw acceleration")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HW_ACCEL_LONGTEXT</name></cpp:macro> <cpp:value>N_("Disable for double buffering in software.")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CHROMA_TEXT</name></cpp:macro> <cpp:value>N_("Image format (default RGB)")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CHROMA_LONGTEXT</name></cpp:macro> <cpp:value>N_("Chroma fourcc used by the framebuffer. Default is RGB since the fb device has no way to report its chroma.")</cpp:value></cpp:define>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Open</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>,

<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>fmtp</name></decl></parameter>, <parameter><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type><name>context</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>;</function_decl>

<macro><name>vlc_module_begin</name> <argument_list>()</argument_list></macro>

<macro><name>set_shortname</name><argument_list>(<argument><literal type="string">"Framebuffer"</literal></argument>)</argument_list></macro>

<macro><name>set_category</name><argument_list>(<argument>CAT_VIDEO</argument>)</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>(<argument>SUBCAT_VIDEO_VOUT</argument>)</argument_list></macro>

<macro><name>add_loadfile</name><argument_list>(<argument>FB_DEV_VAR</argument>, <argument><literal type="string">"/dev/fb0"</literal></argument>, <argument>DEVICE_TEXT</argument>, <argument>DEVICE_LONGTEXT</argument>)</argument_list></macro>

<macro><name>add_bool</name><argument_list>(<argument><literal type="string">"fb-tty"</literal></argument>, <argument>true</argument>, <argument>TTY_TEXT</argument>, <argument>TTY_LONGTEXT</argument>, <argument>true</argument>)</argument_list></macro>

<macro><name>add_string</name><argument_list>( <argument><literal type="string">"fb-chroma"</literal></argument>, <argument>NULL</argument>, <argument>CHROMA_TEXT</argument>, <argument>CHROMA_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>

<macro><name>add_obsolete_string</name><argument_list>(<argument><literal type="string">"fb-aspect-ratio"</literal></argument>)</argument_list></macro>

<macro><name>add_integer</name><argument_list>(<argument><literal type="string">"fb-mode"</literal></argument>, <argument><literal type="number">4</literal></argument>, <argument>FB_MODE_TEXT</argument>, <argument>FB_MODE_LONGTEXT</argument>,

<argument>true</argument>)</argument_list></macro>

<macro><name>add_obsolete_bool</name><argument_list>(<argument><literal type="string">"fb-hw-accel"</literal></argument>)</argument_list></macro> 

<macro><name>set_description</name><argument_list>(<argument>N_(<literal type="string">"GNU/Linux framebuffer video output"</literal>)</argument>)</argument_list></macro>

<macro><name>set_callback_display</name><argument_list>(<argument>Open</argument>, <argument><literal type="number">30</literal></argument>)</argument_list></macro>

<macro><name>vlc_module_end</name> <argument_list>()</argument_list></macro>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Display</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Control</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>va_list</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>OpenDisplay</name> <parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>force_resolution</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>CloseDisplay</name> <parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>

static void SwitchDisplay(int i_signal);

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>TextMode</name> <parameter_list>(<parameter><decl><type><name>int</name></type> <name>tty</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>GfxMode</name> <parameter_list>(<parameter><decl><type><name>int</name></type> <name>tty</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>TtyInit</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>TtyExit</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<struct>struct <name>vout_display_sys_t</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>tty</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>bool</name></type> <name>is_tty</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>termios</name></name></type> <name>old_termios</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>

struct sigaction sig_usr1; 

struct sigaction sig_usr2; 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name><name>struct</name> <name>vt_mode</name></name></type> <name>vt_mode</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>fd</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name><name>struct</name> <name>fb_var_screeninfo</name></name></type> <name>old_info</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name><name>struct</name> <name>fb_var_screeninfo</name></name></type> <name>var_info</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>bool</name></type> <name>has_pan</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name><name>struct</name> <name>fb_cmap</name></name></type> <name>fb_cmap</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint16_t</name> <modifier>*</modifier></type><name>palette</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint32_t</name></type> <name>width</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>line_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_fourcc_t</name></type> <name>chroma</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>bytes_per_pixel</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>video_ptr</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>size_t</name></type> <name>video_size</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>picture</name></decl>;</decl_stmt>

}</block>;</struct>

<function><type><specifier>static</specifier> <name>void</name></type> <name>ClearScreen</name><parameter_list>(<parameter><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<switch>switch <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>chroma</name></name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>VLC_CODEC_UYVY</name></expr>:</case> <block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>j</name></decl>, <decl><type ref="prev"/><name>size</name> <init>= <expr><name><name>sys</name><operator>-&gt;</operator><name>video_size</name></name> <operator>/</operator> <literal type="number">4</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>ptr</name> <init>= <expr><operator>(</operator><name>uint32_t</name><operator>*</operator><operator>)</operator><operator>(</operator><operator>(</operator><name>uintptr_t</name><operator>)</operator><operator>(</operator><name><name>sys</name><operator>-&gt;</operator><name>video_ptr</name></name> <operator>+</operator> <literal type="number">3</literal><operator>)</operator> <operator>&amp;</operator> <operator>~</operator><literal type="number">3</literal><operator>)</operator></expr></init></decl>;</decl_stmt>

<for>for<control>(<init><expr><name>j</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name>size</name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>ptr</name><index>[<expr><name>j</name></expr>]</index></name> <operator>=</operator> <literal type="number">0x10801080</literal></expr>;</expr_stmt></block_content></block></for> 

<break>break;</break>

</block_content>}</block>

<default>default:</default> 

<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>video_ptr</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>video_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></switch>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Open</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>,

<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>fmtp</name></decl></parameter>, <parameter><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type><name>context</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>vout_display_cfg_IsWindowed</name><argument_list>(<argument><expr><name>cfg</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name> <operator>=</operator> <name>sys</name> <operator>=</operator> <call><name>calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>sys</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>sys</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>fd</name></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>tty</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt> 

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>is_tty</name></name> <operator>=</operator> <call><name>var_InheritBool</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"fb-tty"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name>defined</name><argument_list>(<argument><expr><name>HAVE_ISATTY</name></expr></argument>)</argument_list></call></expr></cpp:if>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>is_tty</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>isatty</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"standard input is not a TTY"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"disabling TTY handling, use with caution because "</literal>

<literal type="string">"there is no way to return to the TTY"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>mode</name> <init>= <expr><call><name>var_InheritInteger</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"fb-mode"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>force_resolution</name> <init>= <expr><name>true</name></expr></init></decl>;</decl_stmt>

<switch>switch <condition>(<expr><name>mode</name></expr>)</condition> <block>{<block_content>

<case>case <expr><literal type="number">0</literal></expr>:</case> 

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>width</name></name> <operator>=</operator> <literal type="number">176</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>height</name></name> <operator>=</operator> <literal type="number">144</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">1</literal></expr>:</case> 

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>width</name></name> <operator>=</operator> <literal type="number">352</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>height</name></name> <operator>=</operator> <literal type="number">288</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">2</literal></expr>:</case> 

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>width</name></name> <operator>=</operator> <literal type="number">640</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>height</name></name> <operator>=</operator> <literal type="number">480</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">3</literal></expr>:</case> 

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>width</name></name> <operator>=</operator> <literal type="number">704</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>height</name></name> <operator>=</operator> <literal type="number">576</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">4</literal></expr>:</case>

<default>default:</default>

<expr_stmt><expr><name>force_resolution</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></switch>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>chroma</name> <init>= <expr><call><name>var_InheritString</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"fb-chroma"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>chroma</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>chroma</name></name> <operator>=</operator> <call><name>vlc_fourcc_GetCodecFromString</name><argument_list>(<argument><expr><name>VIDEO_ES</name></expr></argument>, <argument><expr><name>chroma</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>chroma</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"forcing chroma '%s'"</literal></expr></argument>, <argument><expr><name>chroma</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"chroma %s invalid, using default"</literal></expr></argument>, <argument><expr><name>chroma</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>chroma</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>chroma</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>is_tty</name></name> <operator>&amp;&amp;</operator> <call><name>TtyInit</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>video_ptr</name></name> <operator>=</operator> <name>MAP_FAILED</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>picture</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>OpenDisplay</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>force_resolution</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>Close</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>video_format_t</name></type> <name>fmt</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>video_format_ApplyRotation</name><argument_list>(<argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>, <argument><expr><name>fmtp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>chroma</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_chroma</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>chroma</name></name></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"%d bppd"</literal></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>bits_per_pixel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<switch>switch <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>bits_per_pixel</name></name></expr>)</condition> <block>{<block_content>

<case>case <expr><literal type="number">8</literal></expr>:</case> 

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_chroma</name></name> <operator>=</operator> <name>VLC_CODEC_RGB8</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">15</literal></expr>:</case>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_chroma</name></name> <operator>=</operator> <name>VLC_CODEC_RGB15</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">16</literal></expr>:</case>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_chroma</name></name> <operator>=</operator> <name>VLC_CODEC_RGB16</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">24</literal></expr>:</case>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_chroma</name></name> <operator>=</operator> <name>VLC_CODEC_RGB24</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">32</literal></expr>:</case>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_chroma</name></name> <operator>=</operator> <name>VLC_CODEC_RGB32</name></expr>;</expr_stmt>

<break>break;</break>

<default>default:</default>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"unknown screendepth %i"</literal></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>bits_per_pixel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>Close</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></switch>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>bits_per_pixel</name></name> <operator>!=</operator> <literal type="number">8</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_rmask</name></name> <operator>=</operator> <operator>(</operator><operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>red</name><operator>.</operator><name>length</name></name><operator>)</operator> <operator>-</operator> <literal type="number">1</literal><operator>)</operator>

<operator>&lt;&lt;</operator> <name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>red</name><operator>.</operator><name>offset</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_gmask</name></name> <operator>=</operator> <operator>(</operator><operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>green</name><operator>.</operator><name>length</name></name><operator>)</operator> <operator>-</operator> <literal type="number">1</literal><operator>)</operator>

<operator>&lt;&lt;</operator> <name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>green</name><operator>.</operator><name>offset</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_bmask</name></name> <operator>=</operator> <operator>(</operator><operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>blue</name><operator>.</operator><name>length</name></name><operator>)</operator> <operator>-</operator> <literal type="number">1</literal><operator>)</operator>

<operator>&lt;&lt;</operator> <name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>blue</name><operator>.</operator><name>offset</name></name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_visible_width</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>width</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_visible_height</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>height</name></name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>fmtp</name> <operator>=</operator> <name>fmt</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>prepare</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>display</name></name> <operator>=</operator> <name>Display</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>control</name></name> <operator>=</operator> <name>Control</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>close</name></name> <operator>=</operator> <name>Close</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>context</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>picture</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>picture_Release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>CloseDisplay</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>is_tty</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>TtyExit</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Display</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>picture</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>has_pan</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>yoffset</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>xoffset</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>panned</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>panned</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>ioctl</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>, <argument><expr><name>FBIOPAN_DISPLAY</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>var_info</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>panned</name><operator>++</operator></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>picture_Copy</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>picture</name></name></expr></argument>, <argument><expr><name>picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Control</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>query</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>args</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>vd</name></expr>;</expr_stmt> <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>args</name></expr>;</expr_stmt>

<switch>switch <condition>(<expr><name>query</name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>VOUT_DISPLAY_CHANGE_DISPLAY_SIZE</name></expr>:</case>

<case>case <expr><name>VOUT_DISPLAY_CHANGE_DISPLAY_FILLED</name></expr>:</case>

<case>case <expr><name>VOUT_DISPLAY_CHANGE_ZOOM</name></expr>:</case>

<case>case <expr><name>VOUT_DISPLAY_CHANGE_SOURCE_ASPECT</name></expr>:</case>

<case>case <expr><name>VOUT_DISPLAY_CHANGE_SOURCE_CROP</name></expr>:</case>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></switch>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>TtyInit</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>termios</name></name></type> <name>new_termios</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GfxMode</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>tty</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>tcgetattr</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>old_termios</name></name></expr></argument>)</argument_list></call> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"tcgetattr failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>tcgetattr</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>new_termios</name></expr></argument>)</argument_list></call> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"tcgetattr failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>new_termios</name><operator>.</operator><name>c_lflag</name></name> <operator>&amp;=</operator> <operator>~</operator> <operator>(</operator><name>ICANON</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>new_termios</name><operator>.</operator><name>c_lflag</name></name> <operator>&amp;=</operator> <operator>~</operator><operator>(</operator><name>ECHO</name> <operator>|</operator> <name>ECHOCTL</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>new_termios</name><operator>.</operator><name>c_iflag</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>new_termios</name><operator>.</operator><name>c_cc</name><index>[<expr><name>VMIN</name></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>new_termios</name><operator>.</operator><name>c_cc</name><index>[<expr><name>VTIME</name></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>tcsetattr</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>TCSAFLUSH</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>new_termios</name></expr></argument>)</argument_list></call> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"tcsetattr failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>ioctl</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>tty</name></name></expr></argument>, <argument><expr><name>VT_RELDISP</name></expr></argument>, <argument><expr><name>VT_ACKACQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>

struct sigaction sig_tty;

memset(&amp;sig_tty, 0, sizeof(sig_tty));

sig_tty.sa_handler = SwitchDisplay;

sigemptyset(&amp;sig_tty.sa_mask);

if (sigaction(SIGUSR1, &amp;sig_tty, &amp;sys-&gt;sig_usr1) ||

sigaction(SIGUSR2, &amp;sig_tty, &amp;sys-&gt;sig_usr2)) {

msg_Err(vd, "cannot set signal handler (%s)", vlc_strerror_c(errno));

goto error_signal;

}

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<if_stmt><if>if <condition>(<expr><operator>-</operator><literal type="number">1</literal> <operator>==</operator> <call><name>ioctl</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>tty</name></name></expr></argument>, <argument><expr><name>VT_GETMODE</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>vt_mode</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"cannot get terminal mode (%s)"</literal></expr></argument>, <argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>error</name>;</goto>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vt_mode</name></name></type> <name>vt_mode</name> <init>= <expr><name><name>sys</name><operator>-&gt;</operator><name>vt_mode</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>vt_mode</name><operator>.</operator><name>mode</name></name> <operator>=</operator> <name>VT_PROCESS</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vt_mode</name><operator>.</operator><name>waitv</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vt_mode</name><operator>.</operator><name>relsig</name></name> <operator>=</operator> <name>SIGUSR1</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vt_mode</name><operator>.</operator><name>acqsig</name></name> <operator>=</operator> <name>SIGUSR2</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>-</operator><literal type="number">1</literal> <operator>==</operator> <call><name>ioctl</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>tty</name></name></expr></argument>, <argument><expr><name>VT_SETMODE</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>vt_mode</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"cannot set terminal mode (%s)"</literal></expr></argument>, <argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>error</name>;</goto>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<label><name>error</name>:</label>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>

sigaction(SIGUSR1, &amp;sys-&gt;sig_usr1, NULL);

sigaction(SIGUSR2, &amp;sys-&gt;sig_usr2, NULL);

error_signal:

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>tcsetattr</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>old_termios</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>TextMode</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>tty</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>TtyExit</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ioctl</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>tty</name></name></expr></argument>, <argument><expr><name>VT_SETMODE</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>vt_mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>

sigaction(SIGUSR1, &amp;sys-&gt;sig_usr1, NULL);

sigaction(SIGUSR2, &amp;sys-&gt;sig_usr2, NULL);

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>tcsetattr</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>old_termios</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>TextMode</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>tty</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>OpenDisplay</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>force_resolution</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_device</name></decl>;</decl_stmt> 

<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>psz_device</name> <operator>=</operator> <call><name>var_InheritString</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>FB_DEV_VAR</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"don't know which fb device to open"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>fd</name></name> <operator>=</operator> <call><name>vlc_open</name><argument_list>(<argument><expr><name>psz_device</name></expr></argument>, <argument><expr><name>O_RDWR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>fd</name></name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"cannot open %s (%s)"</literal></expr></argument>, <argument><expr><name>psz_device</name></expr></argument>, <argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>psz_device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>psz_device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ioctl</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>, <argument><expr><name>FBIOGET_VSCREENINFO</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>var_info</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"cannot get fb info (%s)"</literal></expr></argument>, <argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>old_info</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>var_info</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>force_resolution</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>xres</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>xres_virtual</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>width</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>yres</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>yres_virtual</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>height</name></name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>activate</name></name> <operator>=</operator> <ternary><condition><expr><name><name>sys</name><operator>-&gt;</operator><name>is_tty</name></name></expr> ?</condition><then> <expr><name>FB_ACTIVATE_NXTOPEN</name></expr> </then><else>:

<expr><name>FB_ACTIVATE_NOW</name></expr></else></ternary></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>xoffset</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>yoffset</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ioctl</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>, <argument><expr><name>FBIOPUT_VSCREENINFO</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>var_info</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"cannot set fb info (%s)"</literal></expr></argument>, <argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>fb_fix_screeninfo</name></name></type> <name>fix_info</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ioctl</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>, <argument><expr><name>FBIOGET_FSCREENINFO</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fix_info</name></expr></argument>)</argument_list></call> <operator>||</operator>

<call><name>ioctl</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>, <argument><expr><name>FBIOGET_VSCREENINFO</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>var_info</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"cannot get additional fb info (%s)"</literal></expr></argument>,

<argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ioctl</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>, <argument><expr><name>FBIOPUT_VSCREENINFO</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>old_info</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>sys</name><operator>-&gt;</operator><name>height</name></name> <operator>!=</operator> <name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>yres</name></name><operator>)</operator> <operator>||</operator>

<operator>(</operator><name><name>sys</name><operator>-&gt;</operator><name>width</name></name> <operator>!=</operator> <name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>xres</name></name><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>vd</name></expr></argument>,

<argument><expr><literal type="string">"using framebuffer native resolution instead of requested (%ix%i)"</literal></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>width</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>height</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>yres</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>width</name></name> <operator>=</operator> <ternary><condition><expr><name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>xres_virtual</name></name></expr> ?</condition><then> <expr><name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>xres_virtual</name></name></expr> </then><else>:

<expr><name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>xres</name></name></expr></else></ternary></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>line_length</name></name> <operator>=</operator> <name><name>fix_info</name><operator>.</operator><name>line_length</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"%ix%i (virtual %ix%i) (request %ix%i)"</literal></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>xres</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>yres</name></name></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>xres_virtual</name></name></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>yres_virtual</name></name></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>width</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>palette</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>has_pan</name></name> <operator>=</operator> <operator>(</operator><name><name>fix_info</name><operator>.</operator><name>ypanstep</name></name> <operator>||</operator> <name><name>fix_info</name><operator>.</operator><name>ywrapstep</name></name><operator>)</operator></expr>;</expr_stmt>

<switch>switch <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>bits_per_pixel</name></name></expr>)</condition> <block>{<block_content>

<case>case <expr><literal type="number">8</literal></expr>:</case>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>palette</name></name> <operator>=</operator> <call><name>malloc</name><argument_list>(<argument><expr><literal type="number">4</literal> <operator>*</operator> <literal type="number">256</literal> <operator>*</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>uint16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>sys</name><operator>-&gt;</operator><name>palette</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>ioctl</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>, <argument><expr><name>FBIOPUT_VSCREENINFO</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>old_info</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_ENOMEM</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>fb_cmap</name><operator>.</operator><name>start</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>fb_cmap</name><operator>.</operator><name>len</name></name> <operator>=</operator> <literal type="number">256</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>fb_cmap</name><operator>.</operator><name>red</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>palette</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>fb_cmap</name><operator>.</operator><name>green</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>palette</name></name> <operator>+</operator> <literal type="number">256</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>fb_cmap</name><operator>.</operator><name>blue</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>palette</name></name> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <literal type="number">256</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>fb_cmap</name><operator>.</operator><name>transp</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>palette</name></name> <operator>+</operator> <literal type="number">3</literal> <operator>*</operator> <literal type="number">256</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ioctl</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>, <argument><expr><name>FBIOGETCMAP</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>fb_cmap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>bytes_per_pixel</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">15</literal></expr>:</case>

<case>case <expr><literal type="number">16</literal></expr>:</case>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>bytes_per_pixel</name></name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">24</literal></expr>:</case>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>bytes_per_pixel</name></name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">32</literal></expr>:</case>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>bytes_per_pixel</name></name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<break>break;</break>

<default>default:</default>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"screen depth %d is not supported"</literal></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>bits_per_pixel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ioctl</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>, <argument><expr><name>FBIOPUT_VSCREENINFO</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>old_info</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></switch>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>video_size</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>line_length</name></name> <operator>*</operator> <name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>yres_virtual</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>video_ptr</name></name> <operator>=</operator> <call><name>mmap</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>video_size</name></name></expr></argument>,

<argument><expr><name>PROT_READ</name> <operator>|</operator> <name>PROT_WRITE</name></expr></argument>, <argument><expr><name>MAP_SHARED</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>video_ptr</name></name> <operator>==</operator> <name>MAP_FAILED</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"cannot map video memory (%s)"</literal></expr></argument>, <argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>bits_per_pixel</name></name> <operator>==</operator> <literal type="number">8</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>palette</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>palette</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>ioctl</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>, <argument><expr><name>FBIOPUT_VSCREENINFO</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>old_info</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>picture_resource_t</name></type> <name>rsc</name> <init>= <expr><block>{

<expr><operator>.</operator><name>p</name> <operator>=</operator> <block>{

<expr><index>[<expr><literal type="number">0</literal></expr>]</index> <operator>=</operator> <block>{

<expr><operator>.</operator><name>p_pixels</name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>video_ptr</name></name></expr>,

<expr><operator>.</operator><name>i_lines</name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>yres</name></name></expr>,

<expr><operator>.</operator><name>i_pitch</name> <operator>=</operator> <name><name>fix_info</name><operator>.</operator><name>line_length</name></name></expr>,

}</block></expr>,

}</block></expr>,

}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>picture</name></name> <operator>=</operator> <call><name>picture_NewFromResource</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>rsc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>picture</name></name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>munmap</name><argument_list>(<argument><expr><name><name>rsc</name><operator>.</operator><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>p_pixels</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>video_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ioctl</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>, <argument><expr><name>FBIOPUT_VSCREENINFO</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>old_info</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_ENOMEM</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>ClearScreen</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>vd</name></expr></argument>,

<argument><expr><literal type="string">"framebuffer type=%d, visual=%d, ypanstep=%d, ywrap=%d, accel=%d"</literal></expr></argument>,

<argument><expr><name><name>fix_info</name><operator>.</operator><name>type</name></name></expr></argument>, <argument><expr><name><name>fix_info</name><operator>.</operator><name>visual</name></name></expr></argument>,

<argument><expr><name><name>fix_info</name><operator>.</operator><name>ypanstep</name></name></expr></argument>, <argument><expr><name><name>fix_info</name><operator>.</operator><name>ywrapstep</name></name></expr></argument>, <argument><expr><name><name>fix_info</name><operator>.</operator><name>accel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>CloseDisplay</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>video_ptr</name></name> <operator>!=</operator> <name>MAP_FAILED</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>ClearScreen</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>munmap</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>video_ptr</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>video_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>fd</name></name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>var_info</name><operator>.</operator><name>bits_per_pixel</name></name> <operator>==</operator> <literal type="number">8</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>ioctl</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>, <argument><expr><name>FBIOPUTCMAP</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>fb_cmap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>palette</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>palette</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>ioctl</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>, <argument><expr><name>FBIOPUT_VSCREENINFO</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>old_info</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_close</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>

static void SwitchDisplay(int i_signal)

{

vout_display_t *vd;

vlc_mutex_lock(&amp;p_vout_bank-&gt;lock);

if (p_vout_bank-&gt;i_count)

{

vd = p_vout_bank-&gt;pp_vout[0];

switch (i_signal)

{

case SIGUSR1: 

vd-&gt;b_active = 0;

ioctl(sys-&gt;tty, VT_RELDISP, 1);

break;

case SIGUSR2: 

vd-&gt;b_active = 1;

ioctl(sys-&gt;tty, VT_RELDISP, VT_ACTIVATE);

vlc_mutex_lock(&amp;vd-&gt;change_lock);

vd-&gt;i_changes |= VOUT_SIZE_CHANGE;

vlc_mutex_unlock(&amp;vd-&gt;change_lock);

break;

}

}

vlc_mutex_unlock(&amp;p_vout_bank-&gt;lock);

}

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><specifier>static</specifier> <name>void</name></type> <name>TextMode</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>tty</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>-</operator><literal type="number">1</literal> <operator>==</operator> <call><name>ioctl</name><argument_list>(<argument><expr><name>tty</name></expr></argument>, <argument><expr><name>KDSETMODE</name></expr></argument>, <argument><expr><name>KD_TEXT</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>GfxMode</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>tty</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>-</operator><literal type="number">1</literal> <operator>==</operator> <call><name>ioctl</name><argument_list>(<argument><expr><name>tty</name></expr></argument>, <argument><expr><name>KDSETMODE</name></expr></argument>, <argument><expr><name>KD_GRAPHICS</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

</unit>
