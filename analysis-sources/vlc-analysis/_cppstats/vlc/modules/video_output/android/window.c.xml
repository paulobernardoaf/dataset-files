<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\video_output\android\window.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;config.h&gt;</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdarg.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_vout_window.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_codec.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dlfcn.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;jni.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"utils.h"</cpp:file></cpp:include>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Open</name><parameter_list>(<parameter><decl><type><name>vout_window_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>(<parameter><decl><type><name>vout_window_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>OpenDecDevice</name><parameter_list>(<parameter><decl><type><name>vlc_decoder_device</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>vout_window_t</name> <modifier>*</modifier></type><name>window</name></decl></parameter>)</parameter_list>;</function_decl>

<macro><name>vlc_module_begin</name><argument_list>()</argument_list></macro>

<macro><name>set_shortname</name><argument_list>(<argument>N_(<literal type="string">"Android Window"</literal>)</argument>)</argument_list></macro>

<macro><name>set_description</name><argument_list>(<argument>N_(<literal type="string">"Android native window"</literal>)</argument>)</argument_list></macro>

<macro><name>set_category</name><argument_list>(<argument>CAT_VIDEO</argument>)</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>(<argument>SUBCAT_VIDEO_VOUT</argument>)</argument_list></macro>

<macro><name>set_capability</name><argument_list>(<argument><literal type="string">"vout window"</literal></argument>, <argument><literal type="number">10</literal></argument>)</argument_list></macro>

<macro><name>set_callback</name><argument_list>(<argument>Open</argument>)</argument_list></macro>

<macro><name>add_submodule</name> <argument_list>()</argument_list></macro>

<macro><name>set_callback_dec_device</name><argument_list>(<argument>OpenDecDevice</argument>, <argument><literal type="number">1</literal></argument>)</argument_list></macro>

<macro><name>add_shortcut</name><argument_list>(<argument><literal type="string">"android"</literal></argument>)</argument_list></macro>

<macro><name>vlc_module_end</name><argument_list>()</argument_list></macro>

<function><type><specifier>static</specifier> <name>void</name></type> <name>OnNewWindowSize</name><parameter_list>(<parameter><decl><type><name>vout_window_t</name> <modifier>*</modifier></type><name>wnd</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name></type> <name>i_width</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>i_height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vout_window_ReportSize</name><argument_list>(<argument><expr><name>wnd</name></expr></argument>, <argument><expr><name>i_width</name></expr></argument>, <argument><expr><name>i_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>OnNewMouseCoords</name><parameter_list>(<parameter><decl><type><name>vout_window_t</name> <modifier>*</modifier></type><name>wnd</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>awh_mouse_coords</name></name> <modifier>*</modifier></type><name>coords</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>vout_window_ReportMouseMoved</name><argument_list>(<argument><expr><name>wnd</name></expr></argument>, <argument><expr><name><name>coords</name><operator>-&gt;</operator><name>i_x</name></name></expr></argument>, <argument><expr><name><name>coords</name><operator>-&gt;</operator><name>i_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<switch>switch <condition>(<expr><name><name>coords</name><operator>-&gt;</operator><name>i_action</name></name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>AMOTION_EVENT_ACTION_DOWN</name></expr>:</case>

<expr_stmt><expr><call><name>vout_window_ReportMousePressed</name><argument_list>(<argument><expr><name>wnd</name></expr></argument>, <argument><expr><name><name>coords</name><operator>-&gt;</operator><name>i_button</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AMOTION_EVENT_ACTION_UP</name></expr>:</case>

<expr_stmt><expr><call><name>vout_window_ReportMouseReleased</name><argument_list>(<argument><expr><name>wnd</name></expr></argument>, <argument><expr><name><name>coords</name><operator>-&gt;</operator><name>i_button</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AMOTION_EVENT_ACTION_MOVE</name></expr>:</case>

<break>break;</break>

</block_content>}</block></switch>

</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name><name>struct</name> <name>vout_window_operations</name></name></type> <name>ops</name> <init>= <expr><block>{

<expr><operator>.</operator><name>destroy</name> <operator>=</operator> <name>Close</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Open</name><parameter_list>(<parameter><decl><type><name>vout_window_t</name> <modifier>*</modifier></type><name>wnd</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>AWindowHandler</name> <modifier>*</modifier></type><name>p_awh</name> <init>= <macro><name>AWindowHandler_new</name><argument_list>(<argument>wnd</argument>,

<argument>&amp;(awh_events_t) { OnNewWindowSize</argument>, <argument>OnNewMouseCoords }</argument>)</argument_list></macro></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>p_awh</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>wnd</name><operator>-&gt;</operator><name>type</name></name> <operator>=</operator> <name>VOUT_WINDOW_TYPE_ANDROID_NATIVE</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>wnd</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>anativewindow</name></name> <operator>=</operator> <name>p_awh</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>wnd</name><operator>-&gt;</operator><name>ops</name></name> <operator>=</operator> <operator>&amp;</operator><name>ops</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>(<parameter><decl><type><name>vout_window_t</name> <modifier>*</modifier></type><name>wnd</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>AWindowHandler_destroy</name><argument_list>(<argument><expr><name><name>wnd</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>anativewindow</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type>

<name>OpenDecDevice</name><parameter_list>(<parameter><decl><type><name>vlc_decoder_device</name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><name>vout_window_t</name> <modifier>*</modifier></type><name>window</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>window</name> <operator>||</operator> <name><name>window</name><operator>-&gt;</operator><name>type</name></name> <operator>!=</operator> <name>VOUT_WINDOW_TYPE_ANDROID_NATIVE</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name><name>struct</name> <name>vlc_decoder_device_operations</name></name></type> <name>ops</name> <init>= 

<expr><block>{

<expr><operator>.</operator><name>close</name> <operator>=</operator> <name>NULL</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>device</name><operator>-&gt;</operator><name>ops</name></name> <operator>=</operator> <operator>&amp;</operator><name>ops</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>device</name><operator>-&gt;</operator><name>type</name></name> <operator>=</operator> <name>VLC_DECODER_DEVICE_AWINDOW</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>device</name><operator>-&gt;</operator><name>opaque</name></name> <operator>=</operator> <name><name>window</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>anativewindow</name></name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

</unit>
