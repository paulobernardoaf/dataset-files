<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\codec\ttml\imageupdater.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_subpicture.h&gt;</cpp:file></cpp:include>

<typedef>typedef <type><name><name>struct</name> <name>ttml_image_updater_region_t</name></name></type> <name>ttml_image_updater_region_t</name>;</typedef>

<struct>struct <name>ttml_image_updater_region_t</name>

<block>{

<struct>struct

<block>{

<decl_stmt><decl><type><name>float</name></type> <name>x</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>y</name></decl>;</decl_stmt>

}</block> <decl><name>origin</name></decl>, <decl><type ref="prev"/><name>extent</name></decl>;</struct>

<decl_stmt><decl><type><name>int</name></type> <name>i_flags</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>p_pic</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ttml_image_updater_region_t</name> <modifier>*</modifier></type><name>p_next</name></decl>;</decl_stmt>

}</block>;</struct>

<enum>enum <name>ttml_image_updater_region_flags_e</name>

<block>{

<decl><name>ORIGIN_X_IS_RATIO</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">0</literal></expr></init></decl>,

<decl><name>ORIGIN_Y_IS_RATIO</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></init></decl>,

<decl><name>EXTENT_X_IS_RATIO</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">2</literal></expr></init></decl>,

<decl><name>EXTENT_Y_IS_RATIO</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">3</literal></expr></init></decl>,

}</block>;</enum>

<function><type><specifier>static</specifier> <name>void</name></type> <name>TTML_ImageUpdaterRegionDelete</name><parameter_list>(<parameter><decl><type><name>ttml_image_updater_region_t</name> <modifier>*</modifier></type><name>p_updtregion</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>p_updtregion</name><operator>-&gt;</operator><name>p_pic</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>picture_Release</name><argument_list>(<argument><expr><name><name>p_updtregion</name><operator>-&gt;</operator><name>p_pic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>p_updtregion</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>ttml_image_updater_region_t</name> <modifier>*</modifier></type><name>TTML_ImageUpdaterRegionNew</name><parameter_list>(<parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>p_pic</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ttml_image_updater_region_t</name> <modifier>*</modifier></type><name>p_region</name> <init>= <expr><call><name>calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>p_region</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name>p_region</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_region</name><operator>-&gt;</operator><name>p_pic</name></name> <operator>=</operator> <name>p_pic</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>p_region</name></expr>;</return>

</block_content>}</block></function>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>ttml_image_updater_region_t</name> <modifier>*</modifier></type><name>p_regions</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ttml_image_updater_region_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_append</name></decl>;</decl_stmt>

}</block></struct></type> <name>ttml_image_updater_sys_t</name>;</typedef>

<function><type><specifier>static</specifier> <name>void</name></type> <name>TTML_ImageSpuAppendRegion</name><parameter_list>(<parameter><decl><type><name>ttml_image_updater_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl></parameter>,

<parameter><decl><type><name>ttml_image_updater_region_t</name> <modifier>*</modifier></type><name>p_new</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>*</operator><name><name>p_sys</name><operator>-&gt;</operator><name>pp_append</name></name> <operator>=</operator> <name>p_new</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>pp_append</name></name> <operator>=</operator> <operator>&amp;</operator><name><name>p_new</name><operator>-&gt;</operator><name>p_next</name></name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>TTML_ImageSpuValidate</name><parameter_list>(<parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>p_spu</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>b_src_changed</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>p_fmt_src</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>b_dst_changed</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>p_fmt_dst</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>ts</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>p_spu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>b_src_changed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>p_fmt_src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>p_fmt_dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><ternary><condition><expr><name>b_dst_changed</name></expr> ?</condition><then> <expr><name>VLC_EGENERIC</name></expr></then><else>: <expr><name>VLC_SUCCESS</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>TTML_ImageSpuUpdate</name><parameter_list>(<parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>p_spu</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>p_fmt_src</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>p_fmt_dst</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>i_ts</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>p_fmt_src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>p_fmt_dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>i_ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>ttml_image_updater_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_spu</name><operator>-&gt;</operator><name>updater</name><operator>.</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>subpicture_region_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_last_region</name> <init>= <expr><operator>&amp;</operator><name><name>p_spu</name><operator>-&gt;</operator><name>p_region</name></name></expr></init></decl>;</decl_stmt>

<for>for<control>(<init><decl><type><name>ttml_image_updater_region_t</name> <modifier>*</modifier></type><name>p_updtregion</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_regions</name></name></expr></init></decl>;</init>

<condition><expr><name>p_updtregion</name></expr>;</condition> <incr><expr><name>p_updtregion</name> <operator>=</operator> <name><name>p_updtregion</name><operator>-&gt;</operator><name>p_next</name></name></expr></incr>)</control>

<block>{<block_content>

<decl_stmt><decl><type><name>subpicture_region_t</name> <modifier>*</modifier></type><name>r</name> <init>= <expr><call><name>subpicture_region_New</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>p_updtregion</name><operator>-&gt;</operator><name>p_pic</name><operator>-&gt;</operator><name>format</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>r</name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>picture_Release</name><argument_list>(<argument><expr><name><name>r</name><operator>-&gt;</operator><name>p_picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>p_picture</name></name> <operator>=</operator> <call><name>picture_Clone</name><argument_list>(<argument><expr><name><name>p_updtregion</name><operator>-&gt;</operator><name>p_pic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name><name>r</name><operator>-&gt;</operator><name>p_picture</name></name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>subpicture_region_Delete</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>i_align</name></name> <operator>=</operator> <name>SUBPICTURE_ALIGN_LEFT</name><operator>|</operator><name>SUBPICTURE_ALIGN_TOP</name></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_updtregion</name><operator>-&gt;</operator><name>i_flags</name></name> <operator>&amp;</operator> <name>ORIGIN_X_IS_RATIO</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>i_x</name></name> <operator>=</operator> <name><name>p_updtregion</name><operator>-&gt;</operator><name>origin</name><operator>.</operator><name>x</name></name> <operator>*</operator> <name><name>p_fmt_dst</name><operator>-&gt;</operator><name>i_visible_width</name></name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>i_x</name></name> <operator>=</operator> <name><name>p_updtregion</name><operator>-&gt;</operator><name>origin</name><operator>.</operator><name>x</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_updtregion</name><operator>-&gt;</operator><name>i_flags</name></name> <operator>&amp;</operator> <name>ORIGIN_Y_IS_RATIO</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>i_y</name></name> <operator>=</operator> <name><name>p_updtregion</name><operator>-&gt;</operator><name>origin</name><operator>.</operator><name>y</name></name> <operator>*</operator> <name><name>p_fmt_dst</name><operator>-&gt;</operator><name>i_visible_height</name></name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>i_y</name></name> <operator>=</operator> <name><name>p_updtregion</name><operator>-&gt;</operator><name>origin</name><operator>.</operator><name>y</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><operator>*</operator><name>pp_last_region</name> <operator>=</operator> <name>r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>pp_last_region</name> <operator>=</operator> <operator>&amp;</operator><name><name>r</name><operator>-&gt;</operator><name>p_next</name></name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>TTML_ImageSpuDestroy</name><parameter_list>(<parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>p_spu</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ttml_image_updater_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_spu</name><operator>-&gt;</operator><name>updater</name><operator>.</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<while>while<condition>(<expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_regions</name></name></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>ttml_image_updater_region_t</name> <modifier>*</modifier></type><name>p_next</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_regions</name><operator>-&gt;</operator><name>p_next</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>TTML_ImageUpdaterRegionDelete</name><argument_list>(<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_regions</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_regions</name></name> <operator>=</operator> <name>p_next</name></expr>;</expr_stmt>

</block_content>}</block></while>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>p_sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>subpicture_t</name> <modifier>*</modifier></type><name>decoder_NewTTML_ImageSpu</name><parameter_list>(<parameter><decl><type><name>decoder_t</name> <modifier>*</modifier></type><name>p_dec</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ttml_image_updater_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><call><name>calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>p_sys</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>p_sys</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>subpicture_updater_t</name></type> <name>updater</name> <init>= <expr><block>{

<expr><operator>.</operator><name>pf_validate</name> <operator>=</operator> <name>TTML_ImageSpuValidate</name></expr>,

<expr><operator>.</operator><name>pf_update</name> <operator>=</operator> <name>TTML_ImageSpuUpdate</name></expr>,

<expr><operator>.</operator><name>pf_destroy</name> <operator>=</operator> <name>TTML_ImageSpuDestroy</name></expr>,

<expr><operator>.</operator><name>p_sys</name> <operator>=</operator> <name>p_sys</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_regions</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>pp_append</name></name> <operator>=</operator> <operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>p_regions</name></name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>p_spu</name> <init>= <expr><call><name>decoder_NewSubpicture</name><argument_list>(<argument><expr><name>p_dec</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>updater</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>p_spu</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>p_sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>p_spu</name></expr>;</return>

</block_content>}</block></function>

</unit>
