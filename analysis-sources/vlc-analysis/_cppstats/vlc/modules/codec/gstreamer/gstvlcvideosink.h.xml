<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\codec\gstreamer\gstvlcvideosink.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;gst/gst.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;gst/gstallocator.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;gst/video/video.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;gst/video/gstvideometa.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;gst/base/gstbasesink.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_codec.h&gt;</cpp:file></cpp:include>

<typedef>typedef <type><name><name>struct</name> <name>_GstVlcVideoSink</name></name></type> <name>GstVlcVideoSink</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>_GstVlcVideoSinkClass</name></name></type> <name>GstVlcVideoSinkClass</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GST_TYPE_VLC_VIDEO_SINK</name></cpp:macro> <cpp:value>(gst_vlc_video_sink_get_type())</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GST_VLC_VIDEO_SINK</name><parameter_list>(<parameter><type><name>obj</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(G_TYPE_CHECK_INSTANCE_CAST((obj), GST_TYPE_VLC_VIDEO_SINK, GstVlcVideoSink))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GST_VLC_VIDEO_SINK_CLASS</name><parameter_list>(<parameter><type><name>klass</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(G_TYPE_CHECK_CLASS_CAST((klass), GST_TYPE_VLC_VIDEO_SINK, GstVlcVideoSinkClass))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GST_IS_VLC_VIDEO_SINK</name><parameter_list>(<parameter><type><name>obj</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(G_TYPE_CHECK_INSTANCE_TYPE((obj), GST_TYPE_VLC_VIDEO_SINK))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GST_IS_VLC_VIDEO_SINK_CLASS</name><parameter_list>(<parameter><type><name>klass</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(G_TYPE_CHECK_CLASS_TYPE((klass), GST_TYPE_VLC_VIDEO_SINK))</cpp:value></cpp:define>

<struct>struct <name>_GstVlcVideoSink</name>

<block>{

<decl_stmt><decl><type><name>GstBaseSink</name></type> <name>parent</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GstAllocator</name> <modifier>*</modifier></type><name>p_allocator</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GstVideoInfo</name></type> <name>vinfo</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>gboolean</name></type> <name>b_use_pool</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>decoder_t</name> <modifier>*</modifier></type><name>p_dec</name></decl>;</decl_stmt>

<function_decl><type><name>gboolean</name></type> (<modifier>*</modifier><name>new_caps</name>) <parameter_list>( <parameter><decl><type><name>GstElement</name> <modifier>*</modifier></type><name>p_ele</name></decl></parameter>, <parameter><decl><type><name>GstCaps</name> <modifier>*</modifier></type><name>p_caps</name></decl></parameter>,

<parameter><decl><type><name>gpointer</name></type> <name>p_data</name></decl></parameter> )</parameter_list>;</function_decl>

}</block>;</struct>

<struct>struct <name>_GstVlcVideoSinkClass</name>

<block>{

<decl_stmt><decl><type><name>GstBaseSinkClass</name></type> <name>parent_class</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>

gboolean (*new_caps) ( GstElement *p_ele, GstCaps *p_caps,

gpointer p_data );

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>new_buffer</name>) <parameter_list>( <parameter><decl><type><name>GstElement</name> <modifier>*</modifier></type><name>p_ele</name></decl></parameter>, <parameter><decl><type><name>GstBuffer</name> <modifier>*</modifier></type><name>p_buffer</name></decl></parameter>,

<parameter><decl><type><name>gpointer</name></type> <name>p_data</name></decl></parameter> )</parameter_list>;</function_decl>

}</block>;</struct>

<function_decl><type><name>GType</name></type> <name>gst_vlc_video_sink_get_type</name> <parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

</unit>
