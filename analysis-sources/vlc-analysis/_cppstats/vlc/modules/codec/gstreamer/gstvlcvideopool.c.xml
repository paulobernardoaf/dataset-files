<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\codec\gstreamer\gstvlcvideopool.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gstvlcvideopool.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>gst_vlc_video_pool_finalize</name><parameter_list>( <parameter><decl><type><name>GObject</name> <modifier>*</modifier></type><name>p_object</name></decl></parameter> )</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>gst_vlc_video_pool_parent_class</name></cpp:macro> <cpp:value>parent_class</cpp:value></cpp:define>

<expr_stmt><expr><call><name>G_DEFINE_TYPE</name> <argument_list>(<argument><expr><name>GstVlcVideoPool</name></expr></argument>, <argument><expr><name>gst_vlc_video_pool</name></expr></argument>,

<argument><expr><name>GST_TYPE_BUFFER_POOL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>gchar</name><modifier>*</modifier><modifier>*</modifier></type> <name>gst_vlc_video_pool_get_options</name> <parameter_list>(<parameter><decl><type><name>GstBufferPool</name> <modifier>*</modifier></type><name>p_pool</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>( <argument><expr><name>p_pool</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>gchar</name> <modifier>*</modifier></type><name><name>options</name><index>[]</index></name> <init>= <expr><block>{ <expr><name>GST_BUFFER_POOL_OPTION_VIDEO_META</name></expr>,

<expr><name>GST_BUFFER_POOL_OPTION_VIDEO_ALIGNMENT</name></expr>, <expr><name>NULL</name></expr>

}</block></expr></init></decl>;</decl_stmt>

<return>return <expr><name>options</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>gboolean</name></type> <name>gst_vlc_video_pool_set_config</name><parameter_list>( <parameter><decl><type><name>GstBufferPool</name> <modifier>*</modifier></type><name>p_pool</name></decl></parameter>,

<parameter><decl><type><name>GstStructure</name> <modifier>*</modifier></type><name>p_config</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GstVlcVideoPool</name> <modifier>*</modifier></type><name>p_vpool</name> <init>= <expr><call><name>GST_VLC_VIDEO_POOL_CAST</name><argument_list>( <argument><expr><name>p_pool</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GstCaps</name> <modifier>*</modifier></type><name>p_caps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GstVideoInfo</name></type> <name>info</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GstVideoAlignment</name></type> <name>align</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>guint</name></type> <name>size</name></decl>, <decl><type ref="prev"/><name>min_buffers</name></decl>, <decl><type ref="prev"/><name>max_buffers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GstAllocator</name> <modifier>*</modifier></type><name>p_allocator</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GstAllocationParams</name></type> <name>params</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>gst_buffer_pool_config_get_params</name><argument_list>( <argument><expr><name>p_config</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>p_caps</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>size</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>min_buffers</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>max_buffers</name></expr></argument> )</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>wrong_config</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name>p_caps</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>

<goto>goto <name>no_caps</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>gst_buffer_pool_config_get_allocator</name><argument_list>( <argument><expr><name>p_config</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>p_allocator</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>params</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>p_allocator</name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>GST_IS_VLC_PICTURE_PLANE_ALLOCATOR</name><argument_list>( <argument><expr><name>p_allocator</name></expr></argument> )</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>unsupported_allocator</name>;</goto></block_content></block></if>

<else>else

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name><name>p_vpool</name><operator>-&gt;</operator><name>p_allocator</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>gst_object_unref</name><argument_list>( <argument><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>p_allocator</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>p_allocator</name></name> <operator>=</operator> <call><name>gst_object_ref</name> <argument_list>( <argument><expr><name>p_allocator</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator><call><name>gst_video_info_from_caps</name><argument_list>( <argument><expr><operator>&amp;</operator><name>info</name></expr></argument>, <argument><expr><name>p_caps</name></expr></argument> )</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>wrong_caps</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>b_add_metavideo</name></name> <operator>=</operator>

<call><name>gst_buffer_pool_config_has_option</name><argument_list>( <argument><expr><name>p_config</name></expr></argument>,

<argument><expr><name>GST_BUFFER_POOL_OPTION_VIDEO_META</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>b_need_aligned</name></name> <operator>=</operator>

<call><name>gst_buffer_pool_config_has_option</name><argument_list>( <argument><expr><name>p_config</name></expr></argument>,

<argument><expr><name>GST_BUFFER_POOL_OPTION_VIDEO_ALIGNMENT</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_vpool</name><operator>-&gt;</operator><name>b_need_aligned</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>b_add_metavideo</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gst_buffer_pool_config_get_video_alignment</name><argument_list>( <argument><expr><name>p_config</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>align</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><call><name>gst_video_alignment_reset</name><argument_list>( <argument><expr><operator>&amp;</operator><name>align</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>p_dec</name><operator>-&gt;</operator><name>i_extra_picture_buffers</name></name> <operator>=</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>gst_vlc_picture_plane_allocator_query_format</name><argument_list>( <argument><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>p_allocator</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>info</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>align</name></expr></argument>, <argument><expr><name>p_caps</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>unknown_format</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_vpool</name><operator>-&gt;</operator><name>b_need_aligned</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>gst_buffer_pool_config_set_video_alignment</name><argument_list>( <argument><expr><name>p_config</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>align</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_vpool</name><operator>-&gt;</operator><name>p_caps</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>gst_caps_unref</name><argument_list>( <argument><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>p_caps</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>p_caps</name></name> <operator>=</operator> <call><name>gst_caps_ref</name><argument_list>( <argument><expr><name>p_caps</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>info</name></name> <operator>=</operator> <name>info</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>align</name></name> <operator>=</operator> <name>align</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>p_dec</name></name></expr></argument>, <argument><expr><literal type="string">"setting the following config on the pool: %s, \

size: %lu, min buffers: %u, max buffers: %u"</literal></expr></argument>, <argument><expr><call><name>gst_caps_to_string</name><argument_list>( <argument><expr><name>p_caps</name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><name><name>info</name><operator>.</operator><name>size</name></name></expr></argument>, <argument><expr><name>min_buffers</name></expr></argument>, <argument><expr><name>max_buffers</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gst_buffer_pool_config_set_params</name><argument_list>( <argument><expr><name>p_config</name></expr></argument>, <argument><expr><name>p_caps</name></expr></argument>, <argument><expr><name><name>info</name><operator>.</operator><name>size</name></name></expr></argument>,

<argument><expr><name>min_buffers</name></expr></argument>, <argument><expr><name>max_buffers</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>GST_BUFFER_POOL_CLASS</name> <argument_list>(<argument><expr><name>parent_class</name></expr></argument>)</argument_list></call><operator>-&gt;</operator><call><name>set_config</name><argument_list>( <argument><expr><name>p_pool</name></expr></argument>, <argument><expr><name>p_config</name></expr></argument> )</argument_list></call></expr>;</return>

<label><name>wrong_config</name>:</label>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>p_dec</name></name></expr></argument>, <argument><expr><literal type="string">"wrong pool config"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>FALSE</name></expr>;</return>

</block_content>}</block>

<label><name>no_caps</name>:</label>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>p_dec</name></name></expr></argument>, <argument><expr><literal type="string">"no input caps in config"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>FALSE</name></expr>;</return>

</block_content>}</block>

<label><name>wrong_caps</name>:</label>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>p_dec</name></name></expr></argument>, <argument><expr><literal type="string">"invalid caps"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>FALSE</name></expr>;</return>

</block_content>}</block>

<label><name>unknown_format</name>:</label>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>p_dec</name></name></expr></argument>, <argument><expr><literal type="string">"format unsupported"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>FALSE</name></expr>;</return>

</block_content>}</block>

<label><name>unsupported_allocator</name>:</label>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>p_dec</name></name></expr></argument>, <argument><expr><literal type="string">"allocator unsupported"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>FALSE</name></expr>;</return>

</block_content>}</block>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>GstFlowReturn</name></type> <name>gst_vlc_video_pool_acquire_buffer</name><parameter_list>( <parameter><decl><type><name>GstBufferPool</name> <modifier>*</modifier></type><name>p_pool</name></decl></parameter>,

<parameter><decl><type><name>GstBuffer</name> <modifier>*</modifier><modifier>*</modifier></type><name>p_buffer</name></decl></parameter>, <parameter><decl><type><name>GstBufferPoolAcquireParams</name> <modifier>*</modifier></type><name>p_params</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GstVlcVideoPool</name> <modifier>*</modifier></type><name>p_vpool</name> <init>= <expr><call><name>GST_VLC_VIDEO_POOL_CAST</name><argument_list>( <argument><expr><name>p_pool</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GstFlowReturn</name></type> <name>result</name></decl>;</decl_stmt>

<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>GST_BUFFER_POOL_CLASS</name><argument_list>( <argument><expr><name>parent_class</name></expr></argument>)</argument_list></call><operator>-&gt;</operator><call><name>acquire_buffer</name><argument_list>( <argument><expr><name>p_pool</name></expr></argument>,

<argument><expr><name>p_buffer</name></expr></argument>, <argument><expr><name>p_params</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>result</name> <operator>==</operator> <name>GST_FLOW_OK</name> <operator>&amp;&amp;</operator>

<operator>!</operator><call><name>gst_vlc_picture_plane_allocator_hold</name><argument_list>( <argument><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>p_allocator</name></name></expr></argument>,

<argument><expr><operator>*</operator><name>p_buffer</name></expr></argument> )</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>result</name> <operator>=</operator> <name>GST_FLOW_EOS</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>result</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>gst_vlc_video_pool_release_buffer</name><parameter_list>( <parameter><decl><type><name>GstBufferPool</name> <modifier>*</modifier></type><name>p_pool</name></decl></parameter>,

<parameter><decl><type><name>GstBuffer</name> <modifier>*</modifier></type><name>p_buffer</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GstVlcVideoPool</name><modifier>*</modifier></type> <name>p_vpool</name> <init>= <expr><call><name>GST_VLC_VIDEO_POOL_CAST</name><argument_list>( <argument><expr><name>p_pool</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>gst_vlc_picture_plane_allocator_release</name><argument_list>( <argument><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>p_allocator</name></name></expr></argument>, <argument><expr><name>p_buffer</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>GST_BUFFER_POOL_CLASS</name><argument_list>( <argument><expr><name>parent_class</name></expr></argument> )</argument_list></call><operator>-&gt;</operator><call><name>release_buffer</name><argument_list>( <argument><expr><name>p_pool</name></expr></argument>, <argument><expr><name>p_buffer</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>gst_vlc_video_pool_free_buffer</name><parameter_list>( <parameter><decl><type><name>GstBufferPool</name> <modifier>*</modifier></type><name>p_pool</name></decl></parameter>,

<parameter><decl><type><name>GstBuffer</name> <modifier>*</modifier></type><name>p_buffer</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GstVlcVideoPool</name><modifier>*</modifier></type> <name>p_vpool</name> <init>= <expr><call><name>GST_VLC_VIDEO_POOL_CAST</name><argument_list>( <argument><expr><name>p_pool</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>gst_vlc_picture_plane_allocator_release</name><argument_list>( <argument><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>p_allocator</name></name></expr></argument>, <argument><expr><name>p_buffer</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>p_dec</name></name></expr></argument>, <argument><expr><literal type="string">"freed buffer %p"</literal></expr></argument>, <argument><expr><name>p_buffer</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>GST_BUFFER_POOL_CLASS</name><argument_list>( <argument><expr><name>parent_class</name></expr></argument> )</argument_list></call><operator>-&gt;</operator><call><name>free_buffer</name><argument_list>( <argument><expr><name>p_pool</name></expr></argument>, <argument><expr><name>p_buffer</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>GstFlowReturn</name></type> <name>gst_vlc_video_pool_alloc_buffer</name><parameter_list>( <parameter><decl><type><name>GstBufferPool</name> <modifier>*</modifier></type><name>p_pool</name></decl></parameter>,

<parameter><decl><type><name>GstBuffer</name> <modifier>*</modifier><modifier>*</modifier></type><name>p_buffer</name></decl></parameter>, <parameter><decl><type><name>GstBufferPoolAcquireParams</name> <modifier>*</modifier></type><name>p_params</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>( <argument><expr><name>p_params</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>GstVlcVideoPool</name> <modifier>*</modifier></type><name>p_vpool</name> <init>= <expr><call><name>GST_VLC_VIDEO_POOL_CAST</name><argument_list>( <argument><expr><name>p_pool</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GstVideoInfo</name> <modifier>*</modifier></type><name>p_info</name> <init>= <expr><operator>&amp;</operator><name><name>p_vpool</name><operator>-&gt;</operator><name>info</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><operator>*</operator><name>p_buffer</name> <operator>=</operator> <call><name>gst_buffer_new</name><argument_list>( )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>gst_vlc_picture_plane_allocator_alloc</name><argument_list>( <argument><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>p_allocator</name></name></expr></argument>,

<argument><expr><operator>*</operator><name>p_buffer</name></expr></argument> )</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>p_dec</name></name></expr></argument>, <argument><expr><literal type="string">"buffer allocation failed"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>GST_FLOW_EOS</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_vpool</name><operator>-&gt;</operator><name>b_add_metavideo</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>p_dec</name></name></expr></argument>, <argument><expr><literal type="string">"meta video enabled"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gst_buffer_add_video_meta_full</name><argument_list>( <argument><expr><operator>*</operator><name>p_buffer</name></expr></argument>, <argument><expr><name>GST_VIDEO_FRAME_FLAG_NONE</name></expr></argument>,

<argument><expr><call><name>GST_VIDEO_INFO_FORMAT</name><argument_list>( <argument><expr><name>p_info</name></expr></argument> )</argument_list></call></expr></argument>, <argument><expr><call><name>GST_VIDEO_INFO_WIDTH</name><argument_list>( <argument><expr><name>p_info</name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><call><name>GST_VIDEO_INFO_HEIGHT</name><argument_list>( <argument><expr><name>p_info</name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><call><name>GST_VIDEO_INFO_N_PLANES</name><argument_list>( <argument><expr><name>p_info</name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><name><name>p_info</name><operator>-&gt;</operator><name>offset</name></name></expr></argument>, <argument><expr><name><name>p_info</name><operator>-&gt;</operator><name>stride</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>p_dec</name></name></expr></argument>, <argument><expr><literal type="string">"allocated buffer %p"</literal></expr></argument>, <argument><expr><operator>*</operator><name>p_buffer</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>GST_FLOW_OK</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>gboolean</name></type> <name>gst_vlc_video_pool_start</name><parameter_list>( <parameter><decl><type><name>GstBufferPool</name> <modifier>*</modifier></type><name>p_pool</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GstVlcVideoPool</name> <modifier>*</modifier></type><name>p_vpool</name> <init>= <expr><call><name>GST_VLC_VIDEO_POOL_CAST</name><argument_list>( <argument><expr><name>p_pool</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>gst_vlc_set_vout_fmt</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_vpool</name><operator>-&gt;</operator><name>info</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_vpool</name><operator>-&gt;</operator><name>align</name></name></expr></argument>,

<argument><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>p_caps</name></name></expr></argument>, <argument><expr><name><name>p_vpool</name><operator>-&gt;</operator><name>p_dec</name></name></expr></argument> )</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>FALSE</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><call><name>GST_BUFFER_POOL_CLASS</name><argument_list>( <argument><expr><name>parent_class</name></expr></argument> )</argument_list></call><operator>-&gt;</operator><call><name>start</name><argument_list>( <argument><expr><name>p_pool</name></expr></argument> )</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>gst_vlc_video_pool_class_init</name><parameter_list>( <parameter><decl><type><name>GstVlcVideoPoolClass</name> <modifier>*</modifier></type><name>p_klass</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GObjectClass</name> <modifier>*</modifier></type><name>p_gobject_class</name> <init>= <expr><operator>(</operator> <name>GObjectClass</name><operator>*</operator> <operator>)</operator><name>p_klass</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GstBufferPoolClass</name> <modifier>*</modifier></type><name>p_gstbufferpool_class</name> <init>= <expr><operator>(</operator> <name>GstBufferPoolClass</name><operator>*</operator> <operator>)</operator><name>p_klass</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p_gobject_class</name><operator>-&gt;</operator><name>finalize</name></name> <operator>=</operator> <name>gst_vlc_video_pool_finalize</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_gstbufferpool_class</name><operator>-&gt;</operator><name>start</name></name> <operator>=</operator> <name>gst_vlc_video_pool_start</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_gstbufferpool_class</name><operator>-&gt;</operator><name>get_options</name></name> <operator>=</operator> <name>gst_vlc_video_pool_get_options</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_gstbufferpool_class</name><operator>-&gt;</operator><name>set_config</name></name> <operator>=</operator> <name>gst_vlc_video_pool_set_config</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_gstbufferpool_class</name><operator>-&gt;</operator><name>alloc_buffer</name></name> <operator>=</operator> <name>gst_vlc_video_pool_alloc_buffer</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_gstbufferpool_class</name><operator>-&gt;</operator><name>free_buffer</name></name> <operator>=</operator> <name>gst_vlc_video_pool_free_buffer</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_gstbufferpool_class</name><operator>-&gt;</operator><name>acquire_buffer</name></name> <operator>=</operator> <name>gst_vlc_video_pool_acquire_buffer</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_gstbufferpool_class</name><operator>-&gt;</operator><name>release_buffer</name></name> <operator>=</operator> <name>gst_vlc_video_pool_release_buffer</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>gst_vlc_video_pool_init</name><parameter_list>( <parameter><decl><type><name>GstVlcVideoPool</name> <modifier>*</modifier></type><name>p_pool</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>( <argument><expr><name>p_pool</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>gst_vlc_video_pool_finalize</name><parameter_list>( <parameter><decl><type><name>GObject</name> <modifier>*</modifier></type><name>p_object</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GstVlcVideoPool</name> <modifier>*</modifier></type><name>p_pool</name> <init>= <expr><call><name>GST_VLC_VIDEO_POOL_CAST</name><argument_list>( <argument><expr><name>p_object</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>gst_object_unref</name><argument_list>( <argument><expr><name><name>p_pool</name><operator>-&gt;</operator><name>p_allocator</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>G_OBJECT_CLASS</name><argument_list>( <argument><expr><name>parent_class</name></expr></argument> )</argument_list></call><operator>-&gt;</operator><call><name>finalize</name><argument_list>( <argument><expr><name>p_object</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>GstVlcVideoPool</name><modifier>*</modifier></type> <name>gst_vlc_video_pool_new</name><parameter_list>(

<parameter><decl><type><name>GstAllocator</name> <modifier>*</modifier></type><name>p_allocator</name></decl></parameter>, <parameter><decl><type><name>decoder_t</name> <modifier>*</modifier></type><name>p_dec</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GstVlcVideoPool</name> <modifier>*</modifier></type><name>p_pool</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>GST_IS_VLC_PICTURE_PLANE_ALLOCATOR</name><argument_list>( <argument><expr><name>p_allocator</name></expr></argument> )</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_dec</name></expr></argument>, <argument><expr><literal type="string">"unspported allocator for pool"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>p_pool</name> <operator>=</operator> <call><name>g_object_new</name><argument_list>( <argument><expr><name>GST_TYPE_VLC_VIDEO_POOL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_pool</name><operator>-&gt;</operator><name>p_allocator</name></name> <operator>=</operator> <call><name>gst_object_ref</name><argument_list>( <argument><expr><name>p_allocator</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_pool</name><operator>-&gt;</operator><name>p_dec</name></name> <operator>=</operator> <name>p_dec</name></expr>;</expr_stmt>

<return>return <expr><name>p_pool</name></expr>;</return>

</block_content>}</block></function>

</unit>
