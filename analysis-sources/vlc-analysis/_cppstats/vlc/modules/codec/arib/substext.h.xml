<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\codec\arib\substext.h"><typedef>typedef <type><struct>struct <name>arib_text_region_s</name>

<block>{

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_text</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_fontname</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_font_color</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_planewidth</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_planeheight</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_fontwidth</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_fontheight</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_verint</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_horint</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_charleft</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_charbottom</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_charleft_adj</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_charbottom_adj</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>arib_text_region_s</name></name> <modifier>*</modifier></type><name>p_next</name></decl>;</decl_stmt>

}</block></struct></type> <name>arib_text_region_t</name>;</typedef>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>arib_text_region_t</name> <modifier>*</modifier></type><name>p_region</name></decl>;</decl_stmt>

}</block></struct></type> <name>arib_spu_updater_sys_t</name>;</typedef>

<function><type><specifier>static</specifier> <name>int</name></type> <name>SubpictureTextValidate</name><parameter_list>(<parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>subpic</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>has_src_changed</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>fmt_src</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>has_dst_changed</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>fmt_dst</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>ts</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>arib_spu_updater_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>subpic</name><operator>-&gt;</operator><name>updater</name><operator>.</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>fmt_src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>fmt_dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>has_src_changed</name> <operator>&amp;&amp;</operator> <operator>!</operator><name>has_dst_changed</name></expr>)</condition>

<block>{<block_content>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>SubpictureTextUpdate</name><parameter_list>(<parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>subpic</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>fmt_src</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>fmt_dst</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>ts</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>arib_spu_updater_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>subpic</name><operator>-&gt;</operator><name>updater</name><operator>.</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>fmt_src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>fmt_dst</name><operator>-&gt;</operator><name>i_sar_num</name></name> <operator>&lt;=</operator> <literal type="number">0</literal> <operator>||</operator> <name><name>fmt_dst</name><operator>-&gt;</operator><name>i_sar_den</name></name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>video_format_t</name></type> <name>fmt</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>video_format_Init</name><argument_list>(<argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>, <argument><expr><name>VLC_CODEC_TEXT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_sar_num</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_sar_den</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<decl_stmt><decl><type><name>subpicture_region_t</name> <modifier>*</modifier></type><name>r</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>arib_text_region_t</name> <modifier>*</modifier></type><name>p_region</name></decl>;</decl_stmt>

<for>for<control>( <init><expr><name>p_region</name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>p_region</name></name></expr>;</init> <condition><expr><name>p_region</name></expr>;</condition> <incr><expr><name>p_region</name> <operator>=</operator> <name><name>p_region</name><operator>-&gt;</operator><name>p_next</name></name></expr></incr> )</control>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name>r</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>subpic</name><operator>-&gt;</operator><name>p_region</name></name> <operator>=</operator> <name>r</name> <operator>=</operator> <call><name>subpicture_region_New</name><argument_list>(<argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>p_next</name></name> <operator>=</operator> <call><name>subpicture_region_New</name><argument_list>(<argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>r</name> <operator>=</operator> <name><name>r</name><operator>-&gt;</operator><name>p_next</name></name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if<condition>( <expr><name>r</name> <operator>==</operator> <name>NULL</name></expr> )</condition>

<block>{<block_content>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>p_text</name></name> <operator>=</operator> <call><name>text_segment_New</name><argument_list>( <argument><expr><name><name>p_region</name><operator>-&gt;</operator><name>psz_text</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>i_align</name></name> <operator>=</operator> <name>SUBPICTURE_ALIGN_LEFT</name> <operator>|</operator> <name>SUBPICTURE_ALIGN_TOP</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>subpic</name><operator>-&gt;</operator><name>i_original_picture_width</name></name> <operator>=</operator> <name><name>p_region</name><operator>-&gt;</operator><name>i_planewidth</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>subpic</name><operator>-&gt;</operator><name>i_original_picture_height</name></name> <operator>=</operator> <name><name>p_region</name><operator>-&gt;</operator><name>i_planeheight</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>i_x</name></name> <operator>=</operator> <name><name>p_region</name><operator>-&gt;</operator><name>i_charleft</name></name> <operator>-</operator> <operator>(</operator><name><name>p_region</name><operator>-&gt;</operator><name>i_fontwidth</name></name> <operator>+</operator> <name><name>p_region</name><operator>-&gt;</operator><name>i_horint</name></name> <operator>/</operator> <literal type="number">2</literal><operator>)</operator> <operator>+</operator> <name><name>p_region</name><operator>-&gt;</operator><name>i_charleft_adj</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>i_y</name></name> <operator>=</operator> <name><name>p_region</name><operator>-&gt;</operator><name>i_charbottom</name></name> <operator>-</operator> <operator>(</operator><name><name>p_region</name><operator>-&gt;</operator><name>i_fontheight</name></name> <operator>+</operator> <name><name>p_region</name><operator>-&gt;</operator><name>i_verint</name></name> <operator>/</operator> <literal type="number">2</literal><operator>)</operator> <operator>+</operator> <name><name>p_region</name><operator>-&gt;</operator><name>i_charbottom_adj</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>p_text</name><operator>-&gt;</operator><name>style</name></name> <operator>=</operator> <call><name>text_style_Create</name><argument_list>( <argument><expr><name>STYLE_NO_DEFAULTS</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>p_text</name><operator>-&gt;</operator><name>style</name><operator>-&gt;</operator><name>psz_fontname</name></name> <operator>=</operator> <ternary><condition><expr><name><name>p_region</name><operator>-&gt;</operator><name>psz_fontname</name></name></expr> ?</condition><then> <expr><call><name>strdup</name><argument_list>( <argument><expr><name><name>p_region</name><operator>-&gt;</operator><name>psz_fontname</name></name></expr></argument> )</argument_list></call></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr>;</expr_stmt>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>p_text</name><operator>-&gt;</operator><name>style</name><operator>-&gt;</operator><name>i_font_size</name></name> <operator>=</operator> <name><name>p_region</name><operator>-&gt;</operator><name>i_fontheight</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>p_text</name><operator>-&gt;</operator><name>style</name><operator>-&gt;</operator><name>i_font_color</name></name> <operator>=</operator> <name><name>p_region</name><operator>-&gt;</operator><name>i_font_color</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>p_text</name><operator>-&gt;</operator><name>style</name><operator>-&gt;</operator><name>i_features</name></name> <operator>|=</operator> <name>STYLE_HAS_FONT_COLOR</name></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_region</name><operator>-&gt;</operator><name>i_fontwidth</name></name> <operator>&lt;</operator> <name><name>p_region</name><operator>-&gt;</operator><name>i_fontheight</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>p_text</name><operator>-&gt;</operator><name>style</name><operator>-&gt;</operator><name>i_style_flags</name></name> <operator>|=</operator> <name>STYLE_HALFWIDTH</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>p_text</name><operator>-&gt;</operator><name>style</name><operator>-&gt;</operator><name>i_features</name></name> <operator>|=</operator> <name>STYLE_HAS_FLAGS</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>p_text</name><operator>-&gt;</operator><name>style</name><operator>-&gt;</operator><name>i_spacing</name></name> <operator>=</operator> <name><name>p_region</name><operator>-&gt;</operator><name>i_horint</name></name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>SubpictureTextDestroy</name><parameter_list>(<parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>subpic</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>arib_spu_updater_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>subpic</name><operator>-&gt;</operator><name>updater</name><operator>.</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>arib_text_region_t</name> <modifier>*</modifier></type><name>p_region</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>p_region_next</name></decl>;</decl_stmt>

<for>for<control>( <init><expr><name>p_region</name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>p_region</name></name></expr>;</init> <condition><expr><name>p_region</name></expr>;</condition> <incr><expr><name>p_region</name> <operator>=</operator> <name>p_region_next</name></expr></incr> )</control>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_region</name><operator>-&gt;</operator><name>psz_text</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_region</name><operator>-&gt;</operator><name>psz_fontname</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>p_region_next</name> <operator>=</operator> <name><name>p_region</name><operator>-&gt;</operator><name>p_next</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_region</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>p_region</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>sys</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>subpicture_t</name> <modifier>*</modifier></type><name>decoder_NewSubpictureText</name><parameter_list>(<parameter><decl><type><name>decoder_t</name> <modifier>*</modifier></type><name>decoder</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>arib_spu_updater_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><operator>(</operator><name>arib_spu_updater_sys_t</name><operator>*</operator><operator>)</operator>

<call><name>calloc</name><argument_list>( <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>arib_spu_updater_sys_t</name></expr></argument>)</argument_list></sizeof></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>subpicture_updater_t</name></type> <name>updater</name> <init>= <expr><block>{

<expr><operator>.</operator><name>pf_validate</name> <operator>=</operator> <name>SubpictureTextValidate</name></expr>,

<expr><operator>.</operator><name>pf_update</name> <operator>=</operator> <name>SubpictureTextUpdate</name></expr>,

<expr><operator>.</operator><name>pf_destroy</name> <operator>=</operator> <name>SubpictureTextDestroy</name></expr>,

<expr><operator>.</operator><name>p_sys</name> <operator>=</operator> <name>sys</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>subpic</name> <init>= <expr><call><name>decoder_NewSubpicture</name><argument_list>(<argument><expr><name>decoder</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>updater</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>subpic</name> <operator>==</operator> <name>NULL</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>sys</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>subpic</name></expr>;</return>

</block_content>}</block></function>

</unit>
