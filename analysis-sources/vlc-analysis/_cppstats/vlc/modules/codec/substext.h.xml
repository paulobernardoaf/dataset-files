<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\codec\substext.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_strings.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_text_style.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_subpicture.h&gt;</cpp:file></cpp:include>

<typedef>typedef <type><name><name>struct</name> <name>substext_updater_region_t</name></name></type> <name>substext_updater_region_t</name>;</typedef>

<enum>enum <name>substext_updater_region_flags_e</name>

<block>{

<decl><name>UPDT_REGION_ORIGIN_X_IS_RATIO</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">0</literal></expr></init></decl>,

<decl><name>UPDT_REGION_ORIGIN_Y_IS_RATIO</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></init></decl>,

<decl><name>UPDT_REGION_EXTENT_X_IS_RATIO</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">2</literal></expr></init></decl>,

<decl><name>UPDT_REGION_EXTENT_Y_IS_RATIO</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">3</literal></expr></init></decl>,

<decl><name>UPDT_REGION_IGNORE_BACKGROUND</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">4</literal></expr></init></decl>,

<decl><name>UPDT_REGION_USES_GRID_COORDINATES</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">5</literal></expr></init></decl>,

<decl><name>UPDT_REGION_FIXED_DONE</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">31</literal></expr></init></decl>,

}</block>;</enum>

<struct>struct <name>substext_updater_region_t</name>

<block>{

<struct>struct

<block>{

<decl_stmt><decl><type><name>float</name></type> <name>x</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>y</name></decl>;</decl_stmt>

}</block> <decl><name>origin</name></decl>, <decl><type ref="prev"/><name>extent</name></decl>;</struct>

<decl_stmt><decl><type><name>int</name></type> <name>flags</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>align</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>inner_align</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>text_style_t</name> <modifier>*</modifier></type><name>p_region_style</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>text_segment_t</name> <modifier>*</modifier></type><name>p_segments</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>substext_updater_region_t</name> <modifier>*</modifier></type><name>p_next</name></decl>;</decl_stmt>

}</block>;</struct>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>substext_updater_region_t</name></type> <name>region</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>text_style_t</name> <modifier>*</modifier></type><name>p_default_style</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>float</name></type> <name>margin_ratio</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_next_update</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_blink_even</name></decl>;</decl_stmt>

}</block></struct></type> <name>subtext_updater_sys_t</name>;</typedef>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>SubpictureUpdaterSysRegionClean</name><parameter_list>(<parameter><decl><type><name>substext_updater_region_t</name> <modifier>*</modifier></type><name>p_updtregion</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>text_segment_ChainDelete</name><argument_list>( <argument><expr><name><name>p_updtregion</name><operator>-&gt;</operator><name>p_segments</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>text_style_Delete</name><argument_list>( <argument><expr><name><name>p_updtregion</name><operator>-&gt;</operator><name>p_region_style</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>SubpictureUpdaterSysRegionInit</name><parameter_list>(<parameter><decl><type><name>substext_updater_region_t</name> <modifier>*</modifier></type><name>p_updtregion</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>p_updtregion</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>p_updtregion</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_updtregion</name><operator>-&gt;</operator><name>align</name></name> <operator>=</operator> <name>SUBPICTURE_ALIGN_BOTTOM</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_updtregion</name><operator>-&gt;</operator><name>inner_align</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>substext_updater_region_t</name> <modifier>*</modifier></type><name>SubpictureUpdaterSysRegionNew</name><parameter_list>( )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>substext_updater_region_t</name> <modifier>*</modifier></type><name>p_region</name> <init>= <expr><call><name>malloc</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>p_region</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name>p_region</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>SubpictureUpdaterSysRegionInit</name><argument_list>(<argument><expr><name>p_region</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>p_region</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>SubpictureUpdaterSysRegionAdd</name><parameter_list>(<parameter><decl><type><name>substext_updater_region_t</name> <modifier>*</modifier></type><name>p_prev</name></decl></parameter>,

<parameter><decl><type><name>substext_updater_region_t</name> <modifier>*</modifier></type><name>p_new</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>substext_updater_region_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_next</name> <init>= <expr><operator>&amp;</operator><name><name>p_prev</name><operator>-&gt;</operator><name>p_next</name></name></expr></init></decl>;</decl_stmt>

<for>for<control>(<init>;</init> <condition><expr><operator>*</operator><name>pp_next</name></expr>;</condition> <incr><expr><name>pp_next</name> <operator>=</operator> <operator>&amp;</operator><name><operator>(</operator><operator>*</operator><name>pp_next</name><operator>)</operator><operator>-&gt;</operator><name>p_next</name></name></expr></incr>)</control><block type="pseudo"><block_content><empty_stmt>;</empty_stmt></block_content></block></for>

<expr_stmt><expr><operator>*</operator><name>pp_next</name> <operator>=</operator> <name>p_new</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>SubpictureTextValidate</name><parameter_list>(<parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>subpic</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>has_src_changed</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>fmt_src</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>has_dst_changed</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>fmt_dst</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>ts</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>subtext_updater_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>subpic</name><operator>-&gt;</operator><name>updater</name><operator>.</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>fmt_src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>fmt_dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>has_src_changed</name> <operator>&amp;&amp;</operator> <operator>!</operator><name>has_dst_changed</name> <operator>&amp;&amp;</operator>

<operator>(</operator><name><name>sys</name><operator>-&gt;</operator><name>i_next_update</name></name> <operator>==</operator> <name>VLC_TICK_INVALID</name> <operator>||</operator> <name><name>sys</name><operator>-&gt;</operator><name>i_next_update</name></name> <operator>&gt;</operator> <name>ts</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>substext_updater_region_t</name> <modifier>*</modifier></type><name>p_updtregion</name> <init>= <expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>region</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name><name>p_updtregion</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>UPDT_REGION_FIXED_DONE</name><operator>)</operator> <operator>&amp;&amp;</operator>

<name><name>subpic</name><operator>-&gt;</operator><name>b_absolute</name></name> <operator>&amp;&amp;</operator> <name><name>subpic</name><operator>-&gt;</operator><name>p_region</name></name> <operator>&amp;&amp;</operator>

<name><name>subpic</name><operator>-&gt;</operator><name>i_original_picture_width</name></name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>

<name><name>subpic</name><operator>-&gt;</operator><name>i_original_picture_height</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_updtregion</name><operator>-&gt;</operator><name>flags</name></name> <operator>|=</operator> <name>UPDT_REGION_FIXED_DONE</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_updtregion</name><operator>-&gt;</operator><name>origin</name><operator>.</operator><name>x</name></name> <operator>=</operator> <name><name>subpic</name><operator>-&gt;</operator><name>p_region</name><operator>-&gt;</operator><name>i_x</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_updtregion</name><operator>-&gt;</operator><name>origin</name><operator>.</operator><name>y</name></name> <operator>=</operator> <name><name>subpic</name><operator>-&gt;</operator><name>p_region</name><operator>-&gt;</operator><name>i_y</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_updtregion</name><operator>-&gt;</operator><name>extent</name><operator>.</operator><name>x</name></name> <operator>=</operator> <name><name>subpic</name><operator>-&gt;</operator><name>i_original_picture_width</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_updtregion</name><operator>-&gt;</operator><name>extent</name><operator>.</operator><name>y</name></name> <operator>=</operator> <name><name>subpic</name><operator>-&gt;</operator><name>i_original_picture_height</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_updtregion</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;=</operator> <operator>~</operator><operator>(</operator><name>UPDT_REGION_ORIGIN_X_IS_RATIO</name><operator>|</operator><name>UPDT_REGION_ORIGIN_Y_IS_RATIO</name><operator>|</operator>

<name>UPDT_REGION_EXTENT_X_IS_RATIO</name><operator>|</operator><name>UPDT_REGION_EXTENT_Y_IS_RATIO</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>SubpictureTextUpdate</name><parameter_list>(<parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>subpic</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>fmt_src</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>fmt_dst</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>ts</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>subtext_updater_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>subpic</name><operator>-&gt;</operator><name>updater</name><operator>.</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>fmt_src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>fmt_dst</name><operator>-&gt;</operator><name>i_sar_num</name></name> <operator>&lt;=</operator> <literal type="number">0</literal> <operator>||</operator> <name><name>fmt_dst</name><operator>-&gt;</operator><name>i_sar_den</name></name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>video_format_t</name></type> <name>fmt</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>video_format_Init</name><argument_list>(<argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>, <argument><expr><name>VLC_CODEC_TEXT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>sys</name><operator>-&gt;</operator><name>region</name><operator>.</operator><name>flags</name></name> <operator>&amp;</operator> <name>UPDT_REGION_USES_GRID_COORDINATES</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_sar_num</name></name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_sar_den</name></name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>subpic</name><operator>-&gt;</operator><name>i_original_picture_width</name></name> <operator>=</operator> <name><name>fmt_dst</name><operator>-&gt;</operator><name>i_visible_height</name></name> <operator>*</operator> <name><name>fmt</name><operator>.</operator><name>i_sar_num</name></name> <operator>/</operator> <name><name>fmt</name><operator>.</operator><name>i_sar_den</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>subpic</name><operator>-&gt;</operator><name>i_original_picture_height</name></name> <operator>=</operator> <name><name>fmt_dst</name><operator>-&gt;</operator><name>i_visible_height</name></name></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><name><name>subpic</name><operator>-&gt;</operator><name>i_original_picture_width</name></name> <operator>=</operator> <name><name>fmt_dst</name><operator>-&gt;</operator><name>i_width</name></name> <operator>*</operator> <name><name>fmt_dst</name><operator>-&gt;</operator><name>i_sar_num</name></name> <operator>/</operator> <name><name>fmt_dst</name><operator>-&gt;</operator><name>i_sar_den</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>subpic</name><operator>-&gt;</operator><name>i_original_picture_height</name></name> <operator>=</operator> <name><name>fmt_dst</name><operator>-&gt;</operator><name>i_height</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_sar_num</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_sar_den</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_schedule_blink_update</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>subpicture_region_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_last_region</name> <init>= <expr><operator>&amp;</operator><name><name>subpic</name><operator>-&gt;</operator><name>p_region</name></name></expr></init></decl>;</decl_stmt>

<for>for<control>( <init><decl><type><name>substext_updater_region_t</name> <modifier>*</modifier></type><name>p_updtregion</name> <init>= <expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>region</name></name></expr></init></decl>;</init>

<condition><expr><name>p_updtregion</name></expr>;</condition> <incr><expr><name>p_updtregion</name> <operator>=</operator> <name><name>p_updtregion</name><operator>-&gt;</operator><name>p_next</name></name></expr></incr> )</control>

<block>{<block_content>

<decl_stmt><decl><type><name>subpicture_region_t</name> <modifier>*</modifier></type><name>r</name> <init>= <expr><operator>*</operator><name>pp_last_region</name> <operator>=</operator> <call><name>subpicture_region_New</name><argument_list>(<argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>r</name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>pp_last_region</name> <operator>=</operator> <operator>&amp;</operator><name><name>r</name><operator>-&gt;</operator><name>p_next</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>p_text</name></name> <operator>=</operator> <call><name>text_segment_Copy</name><argument_list>( <argument><expr><name><name>p_updtregion</name><operator>-&gt;</operator><name>p_segments</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>i_align</name></name> <operator>=</operator> <name><name>p_updtregion</name><operator>-&gt;</operator><name>align</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>i_text_align</name></name> <operator>=</operator> <name><name>p_updtregion</name><operator>-&gt;</operator><name>inner_align</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>b_noregionbg</name></name> <operator>=</operator> <name><name>p_updtregion</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>UPDT_REGION_IGNORE_BACKGROUND</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>b_gridmode</name></name> <operator>=</operator> <name><name>p_updtregion</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>UPDT_REGION_USES_GRID_COORDINATES</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name><name>p_updtregion</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>UPDT_REGION_FIXED_DONE</name><operator>)</operator></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>float</name></type> <name>margin_ratio</name> <init>= <expr><name><name>sys</name><operator>-&gt;</operator><name>margin_ratio</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>margin_h</name> <init>= <expr><name>margin_ratio</name> <operator>*</operator> <operator>(</operator><ternary><condition><expr><operator>(</operator> <name><name>r</name><operator>-&gt;</operator><name>b_gridmode</name></name> <operator>)</operator></expr> ?</condition><then> <expr><operator>(</operator><name>unsigned</name><operator>)</operator> <name><name>subpic</name><operator>-&gt;</operator><name>i_original_picture_width</name></name></expr>

</then><else>: <expr><name><name>fmt_dst</name><operator>-&gt;</operator><name>i_visible_width</name></name></expr></else></ternary> <operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>margin_v</name> <init>= <expr><name>margin_ratio</name> <operator>*</operator> <name><name>fmt_dst</name><operator>-&gt;</operator><name>i_visible_height</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>outerright_h</name> <init>= <expr><name><name>fmt_dst</name><operator>-&gt;</operator><name>i_width</name></name> <operator>-</operator> <operator>(</operator><name><name>fmt_dst</name><operator>-&gt;</operator><name>i_visible_width</name></name> <operator>+</operator> <name><name>fmt_dst</name><operator>-&gt;</operator><name>i_x_offset</name></name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>outerbottom_v</name> <init>= <expr><name><name>fmt_dst</name><operator>-&gt;</operator><name>i_height</name></name> <operator>-</operator> <operator>(</operator><name><name>fmt_dst</name><operator>-&gt;</operator><name>i_visible_height</name></name> <operator>+</operator> <name><name>fmt_dst</name><operator>-&gt;</operator><name>i_y_offset</name></name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>inner_w</name> <init>= <expr><name><name>fmt_dst</name><operator>-&gt;</operator><name>i_visible_width</name></name> <operator>-</operator> <name>margin_h</name> <operator>*</operator> <literal type="number">2</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>inner_h</name> <init>= <expr><name><name>fmt_dst</name><operator>-&gt;</operator><name>i_visible_height</name></name> <operator>-</operator> <name>margin_v</name> <operator>*</operator> <literal type="number">2</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>r</name><operator>-&gt;</operator><name>i_align</name></name> <operator>&amp;</operator> <name>SUBPICTURE_ALIGN_LEFT</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>i_x</name></name> <operator>=</operator> <name>margin_h</name> <operator>+</operator> <name><name>fmt_dst</name><operator>-&gt;</operator><name>i_x_offset</name></name></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if <condition>(<expr><name><name>r</name><operator>-&gt;</operator><name>i_align</name></name> <operator>&amp;</operator> <name>SUBPICTURE_ALIGN_RIGHT</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>i_x</name></name> <operator>=</operator> <name>margin_h</name> <operator>+</operator> <name>outerright_h</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>r</name><operator>-&gt;</operator><name>i_align</name></name> <operator>&amp;</operator> <name>SUBPICTURE_ALIGN_TOP</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>i_y</name></name> <operator>=</operator> <name>margin_v</name> <operator>+</operator> <name><name>fmt_dst</name><operator>-&gt;</operator><name>i_y_offset</name></name></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if <condition>(<expr><name><name>r</name><operator>-&gt;</operator><name>i_align</name></name> <operator>&amp;</operator> <name>SUBPICTURE_ALIGN_BOTTOM</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>i_y</name></name> <operator>=</operator> <name>margin_v</name> <operator>+</operator> <name>outerbottom_v</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_updtregion</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>UPDT_REGION_ORIGIN_X_IS_RATIO</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>i_x</name></name> <operator>+=</operator> <name><name>p_updtregion</name><operator>-&gt;</operator><name>origin</name><operator>.</operator><name>x</name></name> <operator>*</operator> <name>inner_w</name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>i_x</name></name> <operator>+=</operator> <name><name>p_updtregion</name><operator>-&gt;</operator><name>origin</name><operator>.</operator><name>x</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_updtregion</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>UPDT_REGION_ORIGIN_Y_IS_RATIO</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>i_y</name></name> <operator>+=</operator> <name><name>p_updtregion</name><operator>-&gt;</operator><name>origin</name><operator>.</operator><name>y</name></name> <operator>*</operator> <name>inner_h</name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>i_y</name></name> <operator>+=</operator> <name><name>p_updtregion</name><operator>-&gt;</operator><name>origin</name><operator>.</operator><name>y</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_updtregion</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>UPDT_REGION_EXTENT_X_IS_RATIO</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>i_max_width</name></name> <operator>+=</operator> <name><name>p_updtregion</name><operator>-&gt;</operator><name>extent</name><operator>.</operator><name>x</name></name> <operator>*</operator> <name>inner_w</name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>i_max_width</name></name> <operator>+=</operator> <name><name>p_updtregion</name><operator>-&gt;</operator><name>extent</name><operator>.</operator><name>x</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_updtregion</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>UPDT_REGION_EXTENT_Y_IS_RATIO</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>i_max_height</name></name> <operator>+=</operator> <name><name>p_updtregion</name><operator>-&gt;</operator><name>extent</name><operator>.</operator><name>y</name></name> <operator>*</operator> <name>inner_h</name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>i_max_height</name></name> <operator>+=</operator> <name><name>p_updtregion</name><operator>-&gt;</operator><name>extent</name><operator>.</operator><name>y</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>i_x</name></name> <operator>=</operator> <name><name>p_updtregion</name><operator>-&gt;</operator><name>origin</name><operator>.</operator><name>x</name></name> <operator>*</operator> <name><name>fmt_dst</name><operator>-&gt;</operator><name>i_width</name></name> <operator>/</operator> <name><name>p_updtregion</name><operator>-&gt;</operator><name>extent</name><operator>.</operator><name>x</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>i_y</name></name> <operator>=</operator> <name><name>p_updtregion</name><operator>-&gt;</operator><name>origin</name><operator>.</operator><name>y</name></name> <operator>*</operator> <name><name>fmt_dst</name><operator>-&gt;</operator><name>i_height</name></name> <operator>/</operator> <name><name>p_updtregion</name><operator>-&gt;</operator><name>extent</name><operator>.</operator><name>y</name></name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<for>for <control>( <init><decl><type><name>text_segment_t</name><modifier>*</modifier></type> <name>p_segment</name> <init>= <expr><name><name>r</name><operator>-&gt;</operator><name>p_text</name></name></expr></init></decl>;</init> <condition><expr><name>p_segment</name></expr>;</condition> <incr><expr><name>p_segment</name> <operator>=</operator> <name><name>p_segment</name><operator>-&gt;</operator><name>p_next</name></name></expr></incr> )</control>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name><name>p_segment</name><operator>-&gt;</operator><name>style</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>text_style_Merge</name><argument_list>( <argument><expr><name><name>p_segment</name><operator>-&gt;</operator><name>style</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_default_style</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_segment</name><operator>-&gt;</operator><name>style</name></name> <operator>=</operator> <call><name>text_style_Duplicate</name><argument_list>( <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_default_style</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_segment</name><operator>-&gt;</operator><name>style</name></name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name><name>p_segment</name><operator>-&gt;</operator><name>style</name><operator>-&gt;</operator><name>i_font_size</name></name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>fmt_src</name><operator>-&gt;</operator><name>i_visible_height</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_segment</name><operator>-&gt;</operator><name>style</name><operator>-&gt;</operator><name>f_font_relsize</name></name> <operator>=</operator> <literal type="number">100.0</literal> <operator>*</operator> <name><name>p_segment</name><operator>-&gt;</operator><name>style</name><operator>-&gt;</operator><name>i_font_size</name></name> <operator>/</operator> <name><name>fmt_src</name><operator>-&gt;</operator><name>i_visible_height</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_segment</name><operator>-&gt;</operator><name>style</name><operator>-&gt;</operator><name>i_font_size</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_segment</name><operator>-&gt;</operator><name>style</name><operator>-&gt;</operator><name>i_style_flags</name></name> <operator>&amp;</operator> <operator>(</operator><name>STYLE_BLINK_BACKGROUND</name><operator>|</operator><name>STYLE_BLINK_FOREGROUND</name><operator>)</operator></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name><name>sys</name><operator>-&gt;</operator><name>b_blink_even</name></name></expr> )</condition> 

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name><name>p_segment</name><operator>-&gt;</operator><name>style</name><operator>-&gt;</operator><name>i_style_flags</name></name> <operator>&amp;</operator> <name>STYLE_BLINK_BACKGROUND</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_segment</name><operator>-&gt;</operator><name>style</name><operator>-&gt;</operator><name>i_background_alpha</name></name> <operator>=</operator>

<operator>(</operator><operator>~</operator><name><name>p_segment</name><operator>-&gt;</operator><name>style</name><operator>-&gt;</operator><name>i_background_alpha</name></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_segment</name><operator>-&gt;</operator><name>style</name><operator>-&gt;</operator><name>i_style_flags</name></name> <operator>&amp;</operator> <name>STYLE_BLINK_FOREGROUND</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_segment</name><operator>-&gt;</operator><name>style</name><operator>-&gt;</operator><name>i_font_alpha</name></name> <operator>=</operator>

<operator>(</operator><operator>~</operator><name><name>p_segment</name><operator>-&gt;</operator><name>style</name><operator>-&gt;</operator><name>i_font_alpha</name></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>b_schedule_blink_update</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

</block_content>}</block></for>

<if_stmt><if>if<condition>( <expr><name>b_schedule_blink_update</name> <operator>&amp;&amp;</operator>

<operator>(</operator><name><name>sys</name><operator>-&gt;</operator><name>i_next_update</name></name> <operator>==</operator> <name>VLC_TICK_INVALID</name> <operator>||</operator> <name><name>sys</name><operator>-&gt;</operator><name>i_next_update</name></name> <operator>&lt;</operator> <name>ts</name><operator>)</operator></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>i_next_update</name></name> <operator>=</operator> <name>ts</name> <operator>+</operator> <call><name>VLC_TICK_FROM_SEC</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>b_blink_even</name></name> <operator>=</operator> <operator>!</operator><name><name>sys</name><operator>-&gt;</operator><name>b_blink_even</name></name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>SubpictureTextDestroy</name><parameter_list>(<parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>subpic</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>subtext_updater_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>subpic</name><operator>-&gt;</operator><name>updater</name><operator>.</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>SubpictureUpdaterSysRegionClean</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>region</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>substext_updater_region_t</name> <modifier>*</modifier></type><name>p_region</name> <init>= <expr><name><name>sys</name><operator>-&gt;</operator><name>region</name><operator>.</operator><name>p_next</name></name></expr></init></decl>;</decl_stmt>

<while>while<condition>( <expr><name>p_region</name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>substext_updater_region_t</name> <modifier>*</modifier></type><name>p_next</name> <init>= <expr><name><name>p_region</name><operator>-&gt;</operator><name>p_next</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>SubpictureUpdaterSysRegionClean</name><argument_list>( <argument><expr><name>p_region</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_region</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>p_region</name> <operator>=</operator> <name>p_next</name></expr>;</expr_stmt>

</block_content>}</block></while>

<expr_stmt><expr><call><name>text_style_Delete</name><argument_list>( <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_default_style</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>subpicture_t</name> <modifier>*</modifier></type><name>decoder_NewSubpictureText</name><parameter_list>(<parameter><decl><type><name>decoder_t</name> <modifier>*</modifier></type><name>decoder</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>subtext_updater_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><call><name>calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>sys</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>subpicture_updater_t</name></type> <name>updater</name> <init>= <expr><block>{

<expr><operator>.</operator><name>pf_validate</name> <operator>=</operator> <name>SubpictureTextValidate</name></expr>,

<expr><operator>.</operator><name>pf_update</name> <operator>=</operator> <name>SubpictureTextUpdate</name></expr>,

<expr><operator>.</operator><name>pf_destroy</name> <operator>=</operator> <name>SubpictureTextDestroy</name></expr>,

<expr><operator>.</operator><name>p_sys</name> <operator>=</operator> <name>sys</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>SubpictureUpdaterSysRegionInit</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>region</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>margin_ratio</name></name> <operator>=</operator> <literal type="number">0.04</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>p_default_style</name></name> <operator>=</operator> <call><name>text_style_Create</name><argument_list>( <argument><expr><name>STYLE_NO_DEFAULTS</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><operator>!</operator><name><name>sys</name><operator>-&gt;</operator><name>p_default_style</name></name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>subpic</name> <init>= <expr><call><name>decoder_NewSubpicture</name><argument_list>(<argument><expr><name>decoder</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>updater</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>subpic</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>text_style_Delete</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_default_style</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>subpic</name></expr>;</return>

</block_content>}</block></function>

</unit>
