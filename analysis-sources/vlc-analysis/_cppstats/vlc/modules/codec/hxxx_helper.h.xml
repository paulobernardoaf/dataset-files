<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\codec\hxxx_helper.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_block.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_fourcc.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../packetizer/h264_nal.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../packetizer/hevc_nal.h"</cpp:file></cpp:include>

<struct>struct <name>hxxx_helper_nal</name>

<block>{

<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>b</name></decl>;</decl_stmt>

<union>union <block>{

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>xps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>h264_sequence_parameter_set_t</name> <modifier>*</modifier></type><name>h264_sps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>h264_picture_parameter_set_t</name> <modifier>*</modifier></type><name>h264_pps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>hevc_sequence_parameter_set_t</name> <modifier>*</modifier></type><name>hevc_sps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>hevc_picture_parameter_set_t</name> <modifier>*</modifier></type><name>hevc_pps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>hevc_video_parameter_set_t</name> <modifier>*</modifier></type><name>hevc_vps</name></decl>;</decl_stmt>

}</block>;</union>

}</block>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HXXX_HELPER_SEI_COUNT</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>

<struct>struct <name>hxxx_helper</name>

<block>{

<decl_stmt><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_obj</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>vlc_fourcc_t</name></type> <name>i_codec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_need_xvcC</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>bool</name></type> <name>b_is_xvcC</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_nal_length_size</name></decl>;</decl_stmt>

<union>union <block>{

<struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>hxxx_helper_nal</name></name></type> <name><name>sps_list</name><index>[<expr><name>H264_SPS_ID_MAX</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>hxxx_helper_nal</name></name></type> <name><name>pps_list</name><index>[<expr><name>H264_PPS_ID_MAX</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_current_sps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_sps_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_pps_count</name></decl>;</decl_stmt>

}</block> <decl><name>h264</name></decl>;</struct>

<struct>struct <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>hxxx_helper_nal</name></name></type> <name><name>sps_list</name><index>[<expr><name>HEVC_SPS_ID_MAX</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>hxxx_helper_nal</name></name></type> <name><name>pps_list</name><index>[<expr><name>HEVC_PPS_ID_MAX</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>hxxx_helper_nal</name></name></type> <name><name>vps_list</name><index>[<expr><name>HEVC_VPS_ID_MAX</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>hxxx_helper_nal</name></name></type> <name><name>sei_list</name><index>[<expr><name>HXXX_HELPER_SEI_COUNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_current_sps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_current_vps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_sps_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_pps_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_vps_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_sei_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_previous_nal_type</name></decl>;</decl_stmt>

}</block> <decl><name>hevc</name></decl>;</struct>

}</block>;</union>

<function_decl><type><name>block_t</name> <modifier>*</modifier></type> (<modifier>*</modifier><name>pf_process_block</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>hxxx_helper</name></name> <modifier>*</modifier></type><name>hh</name></decl></parameter>, <parameter><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_block</name></decl></parameter>,

<parameter><decl><type><name>bool</name> <modifier>*</modifier></type><name>p_config_changed</name></decl></parameter>)</parameter_list>;</function_decl>

}</block>;</struct>

<function_decl><type><name>void</name></type> <name>hxxx_helper_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>hxxx_helper</name></name> <modifier>*</modifier></type><name>hh</name></decl></parameter>, <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_obj</name></decl></parameter>,

<parameter><decl><type><name>vlc_fourcc_t</name></type> <name>i_codec</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b_need_xvcC</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>hxxx_helper_clean</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>hxxx_helper</name></name> <modifier>*</modifier></type><name>hh</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>hxxx_helper_set_extra</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>hxxx_helper</name></name> <modifier>*</modifier></type><name>hh</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>p_extra</name></decl></parameter>,

<parameter><decl><type><name>size_t</name></type> <name>i_extra</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>block_t</name> <modifier>*</modifier></type><name>h264_helper_get_annexb_config</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>hxxx_helper</name></name> <modifier>*</modifier></type><name>hh</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>block_t</name> <modifier>*</modifier></type><name>hevc_helper_get_annexb_config</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>hxxx_helper</name></name> <modifier>*</modifier></type><name>hh</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>block_t</name> <modifier>*</modifier></type><name>h264_helper_get_avcc_config</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>hxxx_helper</name></name> <modifier>*</modifier></type><name>hh</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>block_t</name> <modifier>*</modifier></type><name>hevc_helper_get_hvcc_config</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>hxxx_helper</name></name> <modifier>*</modifier></type><name>hh</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>hxxx_helper_get_current_picture_size</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>hxxx_helper</name></name> <modifier>*</modifier></type><name>hh</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>p_w</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>p_h</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>p_vw</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>p_vh</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>hxxx_helper_get_current_sar</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>hxxx_helper</name></name> <modifier>*</modifier></type><name>hh</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>p_num</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>p_den</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>h264_helper_get_current_dpb_values</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>hxxx_helper</name></name> <modifier>*</modifier></type><name>hh</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>p_depth</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>pi_delay</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>hxxx_helper_get_current_profile_level</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>hxxx_helper</name></name> <modifier>*</modifier></type><name>hh</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>p_profile</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>p_level</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type>

<name>hxxx_helper_get_chroma_chroma</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>hxxx_helper</name></name> <modifier>*</modifier></type><name>hh</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>pi_chroma_format</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>pi_depth_luma</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>pi_depth_chroma</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>hxxx_helper_get_colorimetry</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>hxxx_helper</name></name> <modifier>*</modifier></type><name>hh</name></decl></parameter>,

<parameter><decl><type><name>video_color_primaries_t</name> <modifier>*</modifier></type><name>p_primaries</name></decl></parameter>,

<parameter><decl><type><name>video_transfer_func_t</name> <modifier>*</modifier></type><name>p_transfer</name></decl></parameter>,

<parameter><decl><type><name>video_color_space_t</name> <modifier>*</modifier></type><name>p_colorspace</name></decl></parameter>,

<parameter><decl><type><name>video_color_range_t</name> <modifier>*</modifier></type><name>p_full_range</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
