<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\codec\jpeg2000.h"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>J2K_BOX_JP2C</name></cpp:macro> <cpp:value>VLC_FOURCC('j','p','2','c')</cpp:value></cpp:define>

<enum>enum <name>j2k_profiles_e</name>

<block>{

<decl><name>J2K_PROFILE_SD</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>J2K_PROFILE_HD</name></decl>,

<decl><name>J2K_PROFILE_3G</name></decl>,

<decl><name>J2K_PROFILE_S3D_HD</name></decl>,

<decl><name>J2K_PROFILE_S3D_3G</name></decl>,

}</block>;</enum>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type> <name>j2k_is_valid_framerate</name><parameter_list>( <parameter><decl><type><name>unsigned</name></type> <name>num</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>den</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<struct><specifier>const</specifier> struct

<block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name></type> <name>num</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name></type> <name>den</name></decl>;</decl_stmt>

}</block> <decl><name><name>numdens</name><index>[]</index></name> <init>= <expr><block>{ 

<expr><block>{ <expr><literal type="number">24000</literal></expr>, <expr><literal type="number">1001</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">24</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">25</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">30000</literal></expr>, <expr><literal type="number">1001</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">30</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">50</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">60000</literal></expr>, <expr><literal type="number">1001</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">60</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

}</block></expr></init></decl>;</struct>

<for>for<control>( <init><decl><type><name>size_t</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><call><name>ARRAY_SIZE</name><argument_list>(<argument><expr><name>numdens</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control><block type="pseudo"><block_content>

<if_stmt><if>if<condition>( <expr><name><name>numdens</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>den</name> <operator>==</operator> <name>den</name> <operator>&amp;&amp;</operator> <name><name>numdens</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>num</name> <operator>==</operator> <name>num</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>true</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name><name>enum</name> <name>j2k_profiles_e</name></name></type> <name>j2k_get_profile</name><parameter_list>( <parameter><decl><type><name>unsigned</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>h</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name></type> <name>num</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>den</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>p</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint64_t</name></type> <name>s</name> <init>= <expr><name>w</name> <operator>*</operator><operator>(</operator><name>uint64_t</name><operator>)</operator><name>h</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint64_t</name></type> <name>f</name> <init>= <expr><name>num</name> <operator>/</operator> <name>den</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>s</name> <operator>&lt;=</operator> <literal type="number">720</literal><operator>*</operator><literal type="number">576</literal> <operator>&amp;&amp;</operator> <name>f</name> <operator>&lt;</operator> <literal type="number">50</literal></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>J2K_PROFILE_SD</name></expr>;</return></block_content></block></if> 

<if type="elseif">else if<condition>( <expr><name>s</name> <operator>&lt;=</operator> <literal type="number">1280</literal><operator>*</operator><literal type="number">720</literal> <operator>&amp;&amp;</operator> <name>f</name> <operator>&lt;</operator> <literal type="number">60</literal> <operator>&amp;&amp;</operator> <name>p</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>J2K_PROFILE_HD</name></expr>;</return></block_content></block></if>

<if type="elseif">else if<condition>( <expr><name>s</name> <operator>&lt;=</operator> <literal type="number">1920</literal><operator>*</operator><literal type="number">1080</literal> <operator>&amp;&amp;</operator> <name>f</name> <operator>&lt;</operator> <literal type="number">60</literal> <operator>&amp;&amp;</operator> <operator>!</operator><name>p</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>J2K_PROFILE_HD</name></expr>;</return></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<return>return <expr><name>J2K_PROFILE_3G</name></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>

<struct><specifier>static</specifier> <specifier>const</specifier> struct

<block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>uint16_t</name></type> <name>min</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint16_t</name></type> <name>max</name></decl>;</decl_stmt>

}</block> <decl><name><name>j2k_profiles_rates</name><index>[]</index></name> <init>= <expr><block>{

<expr><index>[<expr><name>J2K_PROFILE_SD</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="number">25</literal></expr>, <expr><literal type="number">200</literal></expr> }</block></expr>,

<expr><index>[<expr><name>J2K_PROFILE_HD</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="number">75</literal></expr>, <expr><literal type="number">200</literal></expr> }</block></expr>,

<expr><index>[<expr><name>J2K_PROFILE_3G</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="number">100</literal></expr>, <expr><literal type="number">400</literal></expr> }</block></expr>,

<expr><index>[<expr><name>J2K_PROFILE_S3D_HD</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="number">150</literal></expr>, <expr><literal type="number">200</literal></expr> }</block></expr>,

<expr><index>[<expr><name>J2K_PROFILE_S3D_3G</name></expr>]</index> <operator>=</operator> <block>{ <expr><literal type="number">200</literal></expr>, <expr><literal type="number">400</literal></expr> }</block></expr>,

}</block></expr></init></decl>;</struct>

<enum>enum <name>j2k_color_specs_e</name>

<block>{

<decl><name>J2K_COLOR_SPEC_UNKNOWN</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>J2K_COLOR_SPEC_SRGB</name></decl>,

<decl><name>J2K_COLOR_SPEC_REC_601</name></decl>,

<decl><name>J2K_COLOR_SPEC_REC_709</name></decl>,

<decl><name>J2K_COLOR_SPEC_CIE_LUV</name></decl>,

<decl><name>J2K_COLOR_SPEC_CIE_XYZ</name></decl>,

<decl><name>J2K_COLOR_SPEC_REC_2020</name></decl>,

<decl><name>J2K_COLOR_SPEC_SMPTE_2084</name></decl>,

}</block>;</enum>

<struct><specifier>static</specifier> <specifier>const</specifier> struct

<block>{

<decl_stmt><decl><type><name>video_color_primaries_t</name></type> <name>primaries</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>video_transfer_func_t</name></type> <name>transfer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>video_color_space_t</name></type> <name>space</name></decl>;</decl_stmt>

}</block> <decl><name><name>j2k_color_specifications</name><index>[]</index></name> <init>= <expr><block>{

<expr><index>[<expr><name>J2K_COLOR_SPEC_UNKNOWN</name></expr>]</index> <operator>=</operator> <block>{ <expr><name>COLOR_PRIMARIES_UNDEF</name></expr>,

<expr><name>TRANSFER_FUNC_UNDEF</name></expr>,

<expr><name>COLOR_SPACE_UNDEF</name></expr> }</block></expr>,

<expr><index>[<expr><name>J2K_COLOR_SPEC_SRGB</name></expr>]</index> <operator>=</operator> <block>{ <expr><name>COLOR_PRIMARIES_SRGB</name></expr>,

<expr><name>TRANSFER_FUNC_SRGB</name></expr>,

<expr><name>COLOR_SPACE_SRGB</name></expr> }</block></expr>,

<expr><index>[<expr><name>J2K_COLOR_SPEC_REC_601</name></expr>]</index> <operator>=</operator> <block>{ <expr><name>COLOR_PRIMARIES_BT601_625</name></expr>,

<expr><name>TRANSFER_FUNC_SMPTE_170</name></expr>,

<expr><name>COLOR_SPACE_BT601</name></expr> }</block></expr>,

<expr><index>[<expr><name>J2K_COLOR_SPEC_REC_709</name></expr>]</index> <operator>=</operator> <block>{ <expr><name>COLOR_PRIMARIES_BT709</name></expr>,

<expr><name>TRANSFER_FUNC_BT709</name></expr>,

<expr><name>COLOR_SPACE_BT709</name></expr> }</block></expr>,

<expr><index>[<expr><name>J2K_COLOR_SPEC_CIE_LUV</name></expr>]</index> <operator>=</operator> <block>{ <expr><name>COLOR_PRIMARIES_UNDEF</name></expr>,

<expr><name>TRANSFER_FUNC_UNDEF</name></expr>,

<expr><name>COLOR_SPACE_UNDEF</name></expr> }</block></expr>,

<expr><index>[<expr><name>J2K_COLOR_SPEC_CIE_XYZ</name></expr>]</index> <operator>=</operator> <block>{ <expr><name>COLOR_PRIMARIES_UNDEF</name></expr>,

<expr><name>TRANSFER_FUNC_UNDEF</name></expr>,

<expr><name>COLOR_SPACE_UNDEF</name></expr> }</block></expr>,

<expr><index>[<expr><name>J2K_COLOR_SPEC_REC_2020</name></expr>]</index> <operator>=</operator><block>{ <expr><name>COLOR_PRIMARIES_BT2020</name></expr>,

<expr><name>TRANSFER_FUNC_BT2020</name></expr>,

<expr><name>COLOR_SPACE_BT2020</name></expr> }</block></expr>,

<expr><index>[<expr><name>J2K_COLOR_SPEC_SMPTE_2084</name></expr>]</index><operator>=</operator><block>{ <expr><name>COLOR_PRIMARIES_SMTPE_170</name></expr>,

<expr><name>TRANSFER_FUNC_SMPTE_ST2084</name></expr>,

<expr><name>COLOR_SPACE_BT2020</name></expr> }</block></expr>,

}</block></expr></init></decl>;</struct>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>j2k_fill_color_profile</name><parameter_list>( <parameter><decl><type><name><name>enum</name> <name>j2k_color_specs_e</name></name></type> <name>e</name></decl></parameter>,

<parameter><decl><type><name>video_color_primaries_t</name> <modifier>*</modifier></type><name>primaries</name></decl></parameter>,

<parameter><decl><type><name>video_transfer_func_t</name> <modifier>*</modifier></type><name>transfer</name></decl></parameter>,

<parameter><decl><type><name>video_color_space_t</name> <modifier>*</modifier></type><name>space</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name>e</name> <operator>&gt;</operator> <name>J2K_COLOR_SPEC_UNKNOWN</name> <operator>&amp;&amp;</operator> <name>e</name> <operator>&lt;=</operator> <name>J2K_COLOR_SPEC_SMPTE_2084</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>primaries</name> <operator>=</operator> <name><name>j2k_color_specifications</name><index>[<expr><name>e</name></expr>]</index></name><operator>.</operator><name>primaries</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>transfer</name> <operator>=</operator> <name><name>j2k_color_specifications</name><index>[<expr><name>e</name></expr>]</index></name><operator>.</operator><name>transfer</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>space</name> <operator>=</operator> <name><name>j2k_color_specifications</name><index>[<expr><name>e</name></expr>]</index></name><operator>.</operator><name>space</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name><name>enum</name> <name>j2k_color_specs_e</name></name></type>

<name>j2k_get_color_spec</name><parameter_list>( <parameter><decl><type><name>video_color_primaries_t</name></type> <name>primaries</name></decl></parameter>,

<parameter><decl><type><name>video_transfer_func_t</name></type> <name>transfer</name></decl></parameter> ,

<parameter><decl><type><name>video_color_space_t</name></type> <name>space</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>enum</name> <name>j2k_color_specs_e</name></name></type> <name>e</name></decl>;</decl_stmt>

<for>for<control>( <init><expr><name>e</name> <operator>=</operator> <name>J2K_COLOR_SPEC_UNKNOWN</name></expr>;</init> <condition><expr><name>e</name> <operator>&lt;=</operator> <name>J2K_COLOR_SPEC_SMPTE_2084</name></expr>;</condition> <incr><expr><name>e</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name>primaries</name> <operator>==</operator> <name><name>j2k_color_specifications</name><index>[<expr><name>e</name></expr>]</index></name><operator>.</operator><name>primaries</name> <operator>&amp;&amp;</operator>

<name>transfer</name> <operator>==</operator> <name><name>j2k_color_specifications</name><index>[<expr><name>e</name></expr>]</index></name><operator>.</operator><name>transfer</name> <operator>&amp;&amp;</operator>

<name>space</name> <operator>==</operator> <name><name>j2k_color_specifications</name><index>[<expr><name>e</name></expr>]</index></name><operator>.</operator><name>space</name></expr> )</condition>

<block>{<block_content>

<return>return <expr><name>e</name></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<return>return <expr><name>J2K_COLOR_SPEC_UNKNOWN</name></expr>;</return>

</block_content>}</block></function>

</unit>
