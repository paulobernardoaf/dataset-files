<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\codec\omxil\OMX_Image.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;OMX_IVCommon.h&gt;</cpp:file></cpp:include>

<typedef>typedef <type><enum>enum <name>OMX_IMAGE_CODINGTYPE</name> <block>{

<decl><name>OMX_IMAGE_CodingUnused</name></decl>, 

<decl><name>OMX_IMAGE_CodingAutoDetect</name></decl>, 

<decl><name>OMX_IMAGE_CodingJPEG</name></decl>, 

<decl><name>OMX_IMAGE_CodingJPEG2K</name></decl>, 

<decl><name>OMX_IMAGE_CodingEXIF</name></decl>, 

<decl><name>OMX_IMAGE_CodingTIFF</name></decl>, 

<decl><name>OMX_IMAGE_CodingGIF</name></decl>, 

<decl><name>OMX_IMAGE_CodingPNG</name></decl>, 

<decl><name>OMX_IMAGE_CodingLZW</name></decl>, 

<decl><name>OMX_IMAGE_CodingBMP</name></decl>, 

<decl><name>OMX_IMAGE_CodingKhronosExtensions</name> <init>= <expr><literal type="number">0x6F000000</literal></expr></init></decl>, 

<decl><name>OMX_IMAGE_CodingVendorStartUnused</name> <init>= <expr><literal type="number">0x7F000000</literal></expr></init></decl>, 

<decl><name>OMX_IMAGE_CodingMax</name> <init>= <expr><literal type="number">0x7FFFFFFF</literal></expr></init></decl>

}</block></enum></type> <name>OMX_IMAGE_CODINGTYPE</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OMX_IMAGE_PORTDEFINITIONTYPE</name> <block>{

<decl_stmt><decl><type><name>OMX_STRING</name></type> <name>cMIMEType</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_NATIVE_DEVICETYPE</name></type> <name>pNativeRender</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nFrameWidth</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nFrameHeight</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_S32</name></type> <name>nStride</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSliceHeight</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bFlagErrorConcealment</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_IMAGE_CODINGTYPE</name></type> <name>eCompressionFormat</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_COLOR_FORMATTYPE</name></type> <name>eColorFormat</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_NATIVE_WINDOWTYPE</name></type> <name>pNativeWindow</name></decl>;</decl_stmt>

}</block></struct></type> <name>OMX_IMAGE_PORTDEFINITIONTYPE</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OMX_IMAGE_PARAM_PORTFORMATTYPE</name> <block>{

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nIndex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_IMAGE_CODINGTYPE</name></type> <name>eCompressionFormat</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_COLOR_FORMATTYPE</name></type> <name>eColorFormat</name></decl>;</decl_stmt>

}</block></struct></type> <name>OMX_IMAGE_PARAM_PORTFORMATTYPE</name>;</typedef>

<typedef>typedef <type><enum>enum <name>OMX_IMAGE_FLASHCONTROLTYPE</name> <block>{

<decl><name>OMX_IMAGE_FlashControlOn</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>OMX_IMAGE_FlashControlOff</name></decl>,

<decl><name>OMX_IMAGE_FlashControlAuto</name></decl>,

<decl><name>OMX_IMAGE_FlashControlRedEyeReduction</name></decl>,

<decl><name>OMX_IMAGE_FlashControlFillin</name></decl>,

<decl><name>OMX_IMAGE_FlashControlTorch</name></decl>,

<decl><name>OMX_IMAGE_FlashControlKhronosExtensions</name> <init>= <expr><literal type="number">0x6F000000</literal></expr></init></decl>, 

<decl><name>OMX_IMAGE_FlashControlVendorStartUnused</name> <init>= <expr><literal type="number">0x7F000000</literal></expr></init></decl>, 

<decl><name>OMX_IMAGE_FlashControlMax</name> <init>= <expr><literal type="number">0x7FFFFFFF</literal></expr></init></decl>

}</block></enum></type> <name>OMX_IMAGE_FLASHCONTROLTYPE</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OMX_IMAGE_PARAM_FLASHCONTROLTYPE</name> <block>{

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_IMAGE_FLASHCONTROLTYPE</name></type> <name>eFlashControl</name></decl>;</decl_stmt>

}</block></struct></type> <name>OMX_IMAGE_PARAM_FLASHCONTROLTYPE</name>;</typedef>

<typedef>typedef <type><enum>enum <name>OMX_IMAGE_FOCUSCONTROLTYPE</name> <block>{

<decl><name>OMX_IMAGE_FocusControlOn</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>OMX_IMAGE_FocusControlOff</name></decl>,

<decl><name>OMX_IMAGE_FocusControlAuto</name></decl>,

<decl><name>OMX_IMAGE_FocusControlAutoLock</name></decl>,

<decl><name>OMX_IMAGE_FocusControlKhronosExtensions</name> <init>= <expr><literal type="number">0x6F000000</literal></expr></init></decl>, 

<decl><name>OMX_IMAGE_FocusControlVendorStartUnused</name> <init>= <expr><literal type="number">0x7F000000</literal></expr></init></decl>, 

<decl><name>OMX_IMAGE_FocusControlMax</name> <init>= <expr><literal type="number">0x7FFFFFFF</literal></expr></init></decl>

}</block></enum></type> <name>OMX_IMAGE_FOCUSCONTROLTYPE</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE</name> <block>{

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_IMAGE_FOCUSCONTROLTYPE</name></type> <name>eFocusControl</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nFocusSteps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nFocusStepIndex</name></decl>;</decl_stmt>

}</block></struct></type> <name>OMX_IMAGE_CONFIG_FOCUSCONTROLTYPE</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OMX_IMAGE_PARAM_QFACTORTYPE</name> <block>{

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nQFactor</name></decl>;</decl_stmt> 

}</block></struct></type> <name>OMX_IMAGE_PARAM_QFACTORTYPE</name>;</typedef>

<typedef>typedef <type><enum>enum <name>OMX_IMAGE_QUANTIZATIONTABLETYPE</name> <block>{

<decl><name>OMX_IMAGE_QuantizationTableLuma</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>OMX_IMAGE_QuantizationTableChroma</name></decl>,

<decl><name>OMX_IMAGE_QuantizationTableChromaCb</name></decl>,

<decl><name>OMX_IMAGE_QuantizationTableChromaCr</name></decl>,

<decl><name>OMX_IMAGE_QuantizationTableKhronosExtensions</name> <init>= <expr><literal type="number">0x6F000000</literal></expr></init></decl>, 

<decl><name>OMX_IMAGE_QuantizationTableVendorStartUnused</name> <init>= <expr><literal type="number">0x7F000000</literal></expr></init></decl>, 

<decl><name>OMX_IMAGE_QuantizationTableMax</name> <init>= <expr><literal type="number">0x7FFFFFFF</literal></expr></init></decl>

}</block></enum></type> <name>OMX_IMAGE_QUANTIZATIONTABLETYPE</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE</name> <block>{

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_IMAGE_QUANTIZATIONTABLETYPE</name></type> <name>eQuantizationTable</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U8</name></type> <name><name>nQuantizationMatrix</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>OMX_IMAGE_PARAM_QUANTIZATIONTABLETYPE</name>;</typedef>

<typedef>typedef <type><enum>enum <name>OMX_IMAGE_HUFFMANTABLETYPE</name> <block>{

<decl><name>OMX_IMAGE_HuffmanTableAC</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>OMX_IMAGE_HuffmanTableDC</name></decl>,

<decl><name>OMX_IMAGE_HuffmanTableACLuma</name></decl>,

<decl><name>OMX_IMAGE_HuffmanTableACChroma</name></decl>,

<decl><name>OMX_IMAGE_HuffmanTableDCLuma</name></decl>,

<decl><name>OMX_IMAGE_HuffmanTableDCChroma</name></decl>,

<decl><name>OMX_IMAGE_HuffmanTableKhronosExtensions</name> <init>= <expr><literal type="number">0x6F000000</literal></expr></init></decl>, 

<decl><name>OMX_IMAGE_HuffmanTableVendorStartUnused</name> <init>= <expr><literal type="number">0x7F000000</literal></expr></init></decl>, 

<decl><name>OMX_IMAGE_HuffmanTableMax</name> <init>= <expr><literal type="number">0x7FFFFFFF</literal></expr></init></decl>

}</block></enum></type> <name>OMX_IMAGE_HUFFMANTABLETYPE</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OMX_IMAGE_PARAM_HUFFMANTTABLETYPE</name> <block>{

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_IMAGE_HUFFMANTABLETYPE</name></type> <name>eHuffmanTable</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U8</name></type> <name><name>nNumberOfHuffmanCodeOfLength</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U8</name></type> <name><name>nHuffmanTable</name><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type><name>OMX_IMAGE_PARAM_HUFFMANTTABLETYPE</name>;</typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

</unit>
