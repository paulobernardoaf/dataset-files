<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\codec\omxil\OMX_Component.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;OMX_Audio.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;OMX_Video.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;OMX_Image.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;OMX_Other.h&gt;</cpp:file></cpp:include>

<typedef>typedef <type><enum>enum <name>OMX_PORTDOMAINTYPE</name> <block>{ 

<decl><name>OMX_PortDomainAudio</name></decl>, 

<decl><name>OMX_PortDomainVideo</name></decl>, 

<decl><name>OMX_PortDomainImage</name></decl>, 

<decl><name>OMX_PortDomainOther</name></decl>,

<decl><name>OMX_PortDomainKhronosExtensions</name> <init>= <expr><literal type="number">0x6F000000</literal></expr></init></decl>, 

<decl><name>OMX_PortDomainVendorStartUnused</name> <init>= <expr><literal type="number">0x7F000000</literal></expr></init></decl>, 

<decl><name>OMX_PortDomainMax</name> <init>= <expr><literal type="number">0x7ffffff</literal></expr></init></decl>

}</block></enum></type> <name>OMX_PORTDOMAINTYPE</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OMX_PARAM_PORTDEFINITIONTYPE</name> <block>{

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_DIRTYPE</name></type> <name>eDir</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nBufferCountActual</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nBufferCountMin</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nBufferSize</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bEnabled</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bPopulated</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_PORTDOMAINTYPE</name></type> <name>eDomain</name></decl>;</decl_stmt> 

<union>union <block>{

<decl_stmt><decl><type><name>OMX_AUDIO_PORTDEFINITIONTYPE</name></type> <name>audio</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_VIDEO_PORTDEFINITIONTYPE</name></type> <name>video</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_IMAGE_PORTDEFINITIONTYPE</name></type> <name>image</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_OTHER_PORTDEFINITIONTYPE</name></type> <name>other</name></decl>;</decl_stmt>

}</block> <decl><name>format</name></decl>;</union>

<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bBuffersContiguous</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nBufferAlignment</name></decl>;</decl_stmt>

}</block></struct></type> <name>OMX_PARAM_PORTDEFINITIONTYPE</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OMX_PARAM_U32TYPE</name> <block>{ 

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nU32</name></decl>;</decl_stmt> 

}</block></struct></type> <name>OMX_PARAM_U32TYPE</name>;</typedef>

<typedef>typedef <type><enum>enum <name>OMX_SUSPENSIONPOLICYTYPE</name> <block>{

<decl><name>OMX_SuspensionDisabled</name></decl>, 

<decl><name>OMX_SuspensionEnabled</name></decl>, 

<decl><name>OMX_SuspensionPolicyKhronosExtensions</name> <init>= <expr><literal type="number">0x6F000000</literal></expr></init></decl>, 

<decl><name>OMX_SuspensionPolicyStartUnused</name> <init>= <expr><literal type="number">0x7F000000</literal></expr></init></decl>, 

<decl><name>OMX_SuspensionPolicyMax</name> <init>= <expr><literal type="number">0x7fffffff</literal></expr></init></decl>

}</block></enum></type> <name>OMX_SUSPENSIONPOLICYTYPE</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OMX_PARAM_SUSPENSIONPOLICYTYPE</name> <block>{

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_SUSPENSIONPOLICYTYPE</name></type> <name>ePolicy</name></decl>;</decl_stmt>

}</block></struct></type> <name>OMX_PARAM_SUSPENSIONPOLICYTYPE</name>;</typedef>

<typedef>typedef <type><enum>enum <name>OMX_SUSPENSIONTYPE</name> <block>{

<decl><name>OMX_NotSuspended</name></decl>, 

<decl><name>OMX_Suspended</name></decl>, 

<decl><name>OMX_SuspensionKhronosExtensions</name> <init>= <expr><literal type="number">0x6F000000</literal></expr></init></decl>, 

<decl><name>OMX_SuspensionVendorStartUnused</name> <init>= <expr><literal type="number">0x7F000000</literal></expr></init></decl>, 

<decl><name>OMX_SuspendMax</name> <init>= <expr><literal type="number">0x7FFFFFFF</literal></expr></init></decl>

}</block></enum></type> <name>OMX_SUSPENSIONTYPE</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OMX_PARAM_SUSPENSIONTYPE</name> <block>{

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_SUSPENSIONTYPE</name></type> <name>eType</name></decl>;</decl_stmt> 

}</block></struct></type> <name>OMX_PARAM_SUSPENSIONTYPE</name> ;</typedef>

<typedef>typedef <type><struct>struct <name>OMX_CONFIG_BOOLEANTYPE</name> <block>{

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bEnabled</name></decl>;</decl_stmt> 

}</block></struct></type> <name>OMX_CONFIG_BOOLEANTYPE</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OMX_PARAM_CONTENTURITYPE</name>

<block>{

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_U8</name></type> <name><name>contentURI</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt> 

}</block></struct></type> <name>OMX_PARAM_CONTENTURITYPE</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OMX_PARAM_CONTENTPIPETYPE</name>

<block>{

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_HANDLETYPE</name></type> <name>hPipe</name></decl>;</decl_stmt> 

}</block></struct></type> <name>OMX_PARAM_CONTENTPIPETYPE</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OMX_RESOURCECONCEALMENTTYPE</name> <block>{

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bResourceConcealmentForbidden</name></decl>;</decl_stmt> 

}</block></struct></type> <name>OMX_RESOURCECONCEALMENTTYPE</name>;</typedef>

<typedef>typedef <type><enum>enum <name>OMX_METADATACHARSETTYPE</name> <block>{

<decl><name>OMX_MetadataCharsetUnknown</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>OMX_MetadataCharsetASCII</name></decl>,

<decl><name>OMX_MetadataCharsetBinary</name></decl>,

<decl><name>OMX_MetadataCharsetCodePage1252</name></decl>,

<decl><name>OMX_MetadataCharsetUTF8</name></decl>,

<decl><name>OMX_MetadataCharsetJavaConformantUTF8</name></decl>,

<decl><name>OMX_MetadataCharsetUTF7</name></decl>,

<decl><name>OMX_MetadataCharsetImapUTF7</name></decl>,

<decl><name>OMX_MetadataCharsetUTF16LE</name></decl>, 

<decl><name>OMX_MetadataCharsetUTF16BE</name></decl>,

<decl><name>OMX_MetadataCharsetGB12345</name></decl>,

<decl><name>OMX_MetadataCharsetHZGB2312</name></decl>,

<decl><name>OMX_MetadataCharsetGB2312</name></decl>,

<decl><name>OMX_MetadataCharsetGB18030</name></decl>,

<decl><name>OMX_MetadataCharsetGBK</name></decl>,

<decl><name>OMX_MetadataCharsetBig5</name></decl>,

<decl><name>OMX_MetadataCharsetISO88591</name></decl>,

<decl><name>OMX_MetadataCharsetISO88592</name></decl>,

<decl><name>OMX_MetadataCharsetISO88593</name></decl>,

<decl><name>OMX_MetadataCharsetISO88594</name></decl>,

<decl><name>OMX_MetadataCharsetISO88595</name></decl>,

<decl><name>OMX_MetadataCharsetISO88596</name></decl>,

<decl><name>OMX_MetadataCharsetISO88597</name></decl>,

<decl><name>OMX_MetadataCharsetISO88598</name></decl>,

<decl><name>OMX_MetadataCharsetISO88599</name></decl>,

<decl><name>OMX_MetadataCharsetISO885910</name></decl>,

<decl><name>OMX_MetadataCharsetISO885913</name></decl>,

<decl><name>OMX_MetadataCharsetISO885914</name></decl>,

<decl><name>OMX_MetadataCharsetISO885915</name></decl>,

<decl><name>OMX_MetadataCharsetShiftJIS</name></decl>,

<decl><name>OMX_MetadataCharsetISO2022JP</name></decl>,

<decl><name>OMX_MetadataCharsetISO2022JP1</name></decl>,

<decl><name>OMX_MetadataCharsetISOEUCJP</name></decl>,

<decl><name>OMX_MetadataCharsetSMS7Bit</name></decl>,

<decl><name>OMX_MetadataCharsetKhronosExtensions</name> <init>= <expr><literal type="number">0x6F000000</literal></expr></init></decl>, 

<decl><name>OMX_MetadataCharsetVendorStartUnused</name> <init>= <expr><literal type="number">0x7F000000</literal></expr></init></decl>, 

<decl><name>OMX_MetadataCharsetTypeMax</name><init>= <expr><literal type="number">0x7FFFFFFF</literal></expr></init></decl>

}</block></enum></type> <name>OMX_METADATACHARSETTYPE</name>;</typedef>

<typedef>typedef <type><enum>enum <name>OMX_METADATASCOPETYPE</name>

<block>{

<decl><name>OMX_MetadataScopeAllLevels</name></decl>,

<decl><name>OMX_MetadataScopeTopLevel</name></decl>,

<decl><name>OMX_MetadataScopePortLevel</name></decl>,

<decl><name>OMX_MetadataScopeNodeLevel</name></decl>,

<decl><name>OMX_MetadataScopeKhronosExtensions</name> <init>= <expr><literal type="number">0x6F000000</literal></expr></init></decl>, 

<decl><name>OMX_MetadataScopeVendorStartUnused</name> <init>= <expr><literal type="number">0x7F000000</literal></expr></init></decl>, 

<decl><name>OMX_MetadataScopeTypeMax</name> <init>= <expr><literal type="number">0x7fffffff</literal></expr></init></decl>

}</block></enum></type> <name>OMX_METADATASCOPETYPE</name>;</typedef>

<typedef>typedef <type><enum>enum <name>OMX_METADATASEARCHMODETYPE</name>

<block>{

<decl><name>OMX_MetadataSearchValueSizeByIndex</name></decl>,

<decl><name>OMX_MetadataSearchItemByIndex</name></decl>,

<decl><name>OMX_MetadataSearchNextItemByKey</name></decl>,

<decl><name>OMX_MetadataSearchKhronosExtensions</name> <init>= <expr><literal type="number">0x6F000000</literal></expr></init></decl>, 

<decl><name>OMX_MetadataSearchVendorStartUnused</name> <init>= <expr><literal type="number">0x7F000000</literal></expr></init></decl>, 

<decl><name>OMX_MetadataSearchTypeMax</name> <init>= <expr><literal type="number">0x7fffffff</literal></expr></init></decl>

}</block></enum></type> <name>OMX_METADATASEARCHMODETYPE</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OMX_CONFIG_METADATAITEMCOUNTTYPE</name>

<block>{

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_METADATASCOPETYPE</name></type> <name>eScopeMode</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nScopeSpecifier</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nMetadataItemCount</name></decl>;</decl_stmt>

}</block></struct></type> <name>OMX_CONFIG_METADATAITEMCOUNTTYPE</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OMX_CONFIG_METADATAITEMTYPE</name>

<block>{

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_METADATASCOPETYPE</name></type> <name>eScopeMode</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nScopeSpecifier</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nMetadataItemIndex</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_METADATASEARCHMODETYPE</name></type> <name>eSearchMode</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_METADATACHARSETTYPE</name></type> <name>eKeyCharset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U8</name></type> <name>nKeySizeUsed</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U8</name></type> <name><name>nKey</name><index>[<expr><literal type="number">128</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_METADATACHARSETTYPE</name></type> <name>eValueCharset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_STRING</name></type> <name>sLanguageCountry</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nValueMaxSize</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nValueSizeUsed</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U8</name></type> <name><name>nValue</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>OMX_CONFIG_METADATAITEMTYPE</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OMX_CONFIG_CONTAINERNODECOUNTTYPE</name>

<block>{

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bAllKeys</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nParentNodeID</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nNumNodes</name></decl>;</decl_stmt>

}</block></struct></type> <name>OMX_CONFIG_CONTAINERNODECOUNTTYPE</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OMX_CONFIG_CONTAINERNODEIDTYPE</name>

<block>{

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bAllKeys</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nParentNodeID</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nNodeIndex</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nNodeID</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_STRING</name></type> <name>cNodeName</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bIsLeafType</name></decl>;</decl_stmt>

}</block></struct></type> <name>OMX_CONFIG_CONTAINERNODEIDTYPE</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OMX_PARAM_METADATAFILTERTYPE</name> 

<block>{ 

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bAllKeys</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_METADATACHARSETTYPE</name></type> <name>eKeyCharset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nKeySizeUsed</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_U8</name></type> <name><name>nKey</name> <index>[<expr><literal type="number">128</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nLanguageCountrySizeUsed</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U8</name></type> <name><name>nLanguageCountry</name><index>[<expr><literal type="number">128</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bEnabled</name></decl>;</decl_stmt> 

}</block></struct></type> <name>OMX_PARAM_METADATAFILTERTYPE</name>;</typedef> 

<typedef>typedef <type><struct>struct <name>OMX_COMPONENTTYPE</name>

<block>{

<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_PTR</name></type> <name>pComponentPrivate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_PTR</name></type> <name>pApplicationPrivate</name></decl>;</decl_stmt>

<function_decl><type><name>OMX_ERRORTYPE</name></type> (<modifier>*</modifier><name>GetComponentVersion</name>)<parameter_list>(

<parameter><decl><type><name>OMX_IN</name> <name>OMX_HANDLETYPE</name></type> <name>hComponent</name></decl></parameter>,

<parameter><decl><type><name>OMX_OUT</name> <name>OMX_STRING</name></type> <name>pComponentName</name></decl></parameter>,

<parameter><decl><type><name>OMX_OUT</name> <name>OMX_VERSIONTYPE</name><modifier>*</modifier></type> <name>pComponentVersion</name></decl></parameter>,

<parameter><decl><type><name>OMX_OUT</name> <name>OMX_VERSIONTYPE</name><modifier>*</modifier></type> <name>pSpecVersion</name></decl></parameter>,

<parameter><decl><type><name>OMX_OUT</name> <name>OMX_UUIDTYPE</name><modifier>*</modifier></type> <name>pComponentUUID</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>OMX_ERRORTYPE</name></type> (<modifier>*</modifier><name>SendCommand</name>)<parameter_list>(

<parameter><decl><type><name>OMX_IN</name> <name>OMX_HANDLETYPE</name></type> <name>hComponent</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>OMX_COMMANDTYPE</name></type> <name>Cmd</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>OMX_U32</name></type> <name>nParam1</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>OMX_PTR</name></type> <name>pCmdData</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>OMX_ERRORTYPE</name></type> (<modifier>*</modifier><name>GetParameter</name>)<parameter_list>(

<parameter><decl><type><name>OMX_IN</name> <name>OMX_HANDLETYPE</name></type> <name>hComponent</name></decl></parameter>, 

<parameter><decl><type><name>OMX_IN</name> <name>OMX_INDEXTYPE</name></type> <name>nParamIndex</name></decl></parameter>, 

<parameter><decl><type><name>OMX_INOUT</name> <name>OMX_PTR</name></type> <name>pComponentParameterStructure</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>OMX_ERRORTYPE</name></type> (<modifier>*</modifier><name>SetParameter</name>)<parameter_list>(

<parameter><decl><type><name>OMX_IN</name> <name>OMX_HANDLETYPE</name></type> <name>hComponent</name></decl></parameter>, 

<parameter><decl><type><name>OMX_IN</name> <name>OMX_INDEXTYPE</name></type> <name>nIndex</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>OMX_PTR</name></type> <name>pComponentParameterStructure</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>OMX_ERRORTYPE</name></type> (<modifier>*</modifier><name>GetConfig</name>)<parameter_list>(

<parameter><decl><type><name>OMX_IN</name> <name>OMX_HANDLETYPE</name></type> <name>hComponent</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>OMX_INDEXTYPE</name></type> <name>nIndex</name></decl></parameter>, 

<parameter><decl><type><name>OMX_INOUT</name> <name>OMX_PTR</name></type> <name>pComponentConfigStructure</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>OMX_ERRORTYPE</name></type> (<modifier>*</modifier><name>SetConfig</name>)<parameter_list>(

<parameter><decl><type><name>OMX_IN</name> <name>OMX_HANDLETYPE</name></type> <name>hComponent</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>OMX_INDEXTYPE</name></type> <name>nIndex</name></decl></parameter>, 

<parameter><decl><type><name>OMX_IN</name> <name>OMX_PTR</name></type> <name>pComponentConfigStructure</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>OMX_ERRORTYPE</name></type> (<modifier>*</modifier><name>GetExtensionIndex</name>)<parameter_list>(

<parameter><decl><type><name>OMX_IN</name> <name>OMX_HANDLETYPE</name></type> <name>hComponent</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>OMX_STRING</name></type> <name>cParameterName</name></decl></parameter>,

<parameter><decl><type><name>OMX_OUT</name> <name>OMX_INDEXTYPE</name><modifier>*</modifier></type> <name>pIndexType</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>OMX_ERRORTYPE</name></type> (<modifier>*</modifier><name>GetState</name>)<parameter_list>(

<parameter><decl><type><name>OMX_IN</name> <name>OMX_HANDLETYPE</name></type> <name>hComponent</name></decl></parameter>,

<parameter><decl><type><name>OMX_OUT</name> <name>OMX_STATETYPE</name><modifier>*</modifier></type> <name>pState</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>OMX_ERRORTYPE</name></type> (<modifier>*</modifier><name>ComponentTunnelRequest</name>)<parameter_list>(

<parameter><decl><type><name>OMX_IN</name> <name>OMX_HANDLETYPE</name></type> <name>hComp</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>OMX_U32</name></type> <name>nPort</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>OMX_HANDLETYPE</name></type> <name>hTunneledComp</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>OMX_U32</name></type> <name>nTunneledPort</name></decl></parameter>,

<parameter><decl><type><name>OMX_INOUT</name> <name>OMX_TUNNELSETUPTYPE</name><modifier>*</modifier></type> <name>pTunnelSetup</name></decl></parameter>)</parameter_list>;</function_decl> 

<function_decl><type><name>OMX_ERRORTYPE</name></type> (<modifier>*</modifier><name>UseBuffer</name>)<parameter_list>(

<parameter><decl><type><name>OMX_IN</name> <name>OMX_HANDLETYPE</name></type> <name>hComponent</name></decl></parameter>,

<parameter><decl><type><name>OMX_INOUT</name> <name>OMX_BUFFERHEADERTYPE</name><modifier>*</modifier><modifier>*</modifier></type> <name>ppBufferHdr</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>OMX_U32</name></type> <name>nPortIndex</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>OMX_PTR</name></type> <name>pAppPrivate</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>OMX_U32</name></type> <name>nSizeBytes</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>OMX_U8</name><modifier>*</modifier></type> <name>pBuffer</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>OMX_ERRORTYPE</name></type> (<modifier>*</modifier><name>AllocateBuffer</name>)<parameter_list>(

<parameter><decl><type><name>OMX_IN</name> <name>OMX_HANDLETYPE</name></type> <name>hComponent</name></decl></parameter>,

<parameter><decl><type><name>OMX_INOUT</name> <name>OMX_BUFFERHEADERTYPE</name><modifier>*</modifier><modifier>*</modifier></type> <name>ppBuffer</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>OMX_U32</name></type> <name>nPortIndex</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>OMX_PTR</name></type> <name>pAppPrivate</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>OMX_U32</name></type> <name>nSizeBytes</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>OMX_ERRORTYPE</name></type> (<modifier>*</modifier><name>FreeBuffer</name>)<parameter_list>(

<parameter><decl><type><name>OMX_IN</name> <name>OMX_HANDLETYPE</name></type> <name>hComponent</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>OMX_U32</name></type> <name>nPortIndex</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>OMX_BUFFERHEADERTYPE</name><modifier>*</modifier></type> <name>pBuffer</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>OMX_ERRORTYPE</name></type> (<modifier>*</modifier><name>EmptyThisBuffer</name>)<parameter_list>(

<parameter><decl><type><name>OMX_IN</name> <name>OMX_HANDLETYPE</name></type> <name>hComponent</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>OMX_BUFFERHEADERTYPE</name><modifier>*</modifier></type> <name>pBuffer</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>OMX_ERRORTYPE</name></type> (<modifier>*</modifier><name>FillThisBuffer</name>)<parameter_list>(

<parameter><decl><type><name>OMX_IN</name> <name>OMX_HANDLETYPE</name></type> <name>hComponent</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>OMX_BUFFERHEADERTYPE</name><modifier>*</modifier></type> <name>pBuffer</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>OMX_ERRORTYPE</name></type> (<modifier>*</modifier><name>SetCallbacks</name>)<parameter_list>(

<parameter><decl><type><name>OMX_IN</name> <name>OMX_HANDLETYPE</name></type> <name>hComponent</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>OMX_CALLBACKTYPE</name><modifier>*</modifier></type> <name>pCallbacks</name></decl></parameter>, 

<parameter><decl><type><name>OMX_IN</name> <name>OMX_PTR</name></type> <name>pAppData</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>OMX_ERRORTYPE</name></type> (<modifier>*</modifier><name>ComponentDeInit</name>)<parameter_list>(

<parameter><decl><type><name>OMX_IN</name> <name>OMX_HANDLETYPE</name></type> <name>hComponent</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>OMX_ERRORTYPE</name></type> (<modifier>*</modifier><name>UseEGLImage</name>)<parameter_list>(

<parameter><decl><type><name>OMX_IN</name> <name>OMX_HANDLETYPE</name></type> <name>hComponent</name></decl></parameter>,

<parameter><decl><type><name>OMX_INOUT</name> <name>OMX_BUFFERHEADERTYPE</name><modifier>*</modifier><modifier>*</modifier></type> <name>ppBufferHdr</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>OMX_U32</name></type> <name>nPortIndex</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>OMX_PTR</name></type> <name>pAppPrivate</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>void</name><modifier>*</modifier></type> <name>eglImage</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>OMX_ERRORTYPE</name></type> (<modifier>*</modifier><name>ComponentRoleEnum</name>)<parameter_list>(

<parameter><decl><type><name>OMX_IN</name> <name>OMX_HANDLETYPE</name></type> <name>hComponent</name></decl></parameter>,

<parameter><decl><type><name>OMX_OUT</name> <name>OMX_U8</name> <modifier>*</modifier></type><name>cRole</name></decl></parameter>,

<parameter><decl><type><name>OMX_IN</name> <name>OMX_U32</name></type> <name>nIndex</name></decl></parameter>)</parameter_list>;</function_decl>

}</block></struct></type> <name>OMX_COMPONENTTYPE</name>;</typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

</unit>
