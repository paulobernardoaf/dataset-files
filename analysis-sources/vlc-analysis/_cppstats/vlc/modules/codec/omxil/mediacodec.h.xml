<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\codec\omxil\mediacodec.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../video_output/android/utils.h"</cpp:file></cpp:include>

<typedef>typedef <type><name><name>struct</name> <name>mc_api</name></name></type> <name>mc_api</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>mc_api_sys</name></name></type> <name>mc_api_sys</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>mc_api_out</name></name></type> <name>mc_api_out</name>;</typedef>

<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>pf_MediaCodecApi_init</name>)<parameter_list>(<parameter><decl><type><name>mc_api</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><name>int</name></type> <name>MediaCodecJni_Init</name><parameter_list>(<parameter><decl><type><name>mc_api</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>MediaCodecNdk_Init</name><parameter_list>(<parameter><decl><type><name>mc_api</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MC_API_ERROR</name></cpp:macro> <cpp:value>(-1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MC_API_INFO_TRYAGAIN</name></cpp:macro> <cpp:value>(-11)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MC_API_INFO_OUTPUT_FORMAT_CHANGED</name></cpp:macro> <cpp:value>(-12)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MC_API_INFO_OUTPUT_BUFFERS_CHANGED</name></cpp:macro> <cpp:value>(-13)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MC_API_NO_QUIRKS</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MC_API_QUIRKS_NEED_CSD</name></cpp:macro> <cpp:value>0x1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MC_API_VIDEO_QUIRKS_IGNORE_PADDING</name></cpp:macro> <cpp:value>0x2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MC_API_VIDEO_QUIRKS_SUPPORT_INTERLACED</name></cpp:macro> <cpp:value>0x4</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MC_API_AUDIO_QUIRKS_NEED_CHANNELS</name></cpp:macro> <cpp:value>0x8</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MC_API_VIDEO_QUIRKS_ADAPTIVE</name></cpp:macro> <cpp:value>0x1000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MC_API_VIDEO_QUIRKS_IGNORE_SIZE</name></cpp:macro> <cpp:value>0x2000</cpp:value></cpp:define>

<struct>struct <name>mc_api_out</name>

<block>{

<enum>enum <block>{

<decl><name>MC_OUT_TYPE_BUF</name></decl>,

<decl><name>MC_OUT_TYPE_CONF</name></decl>,

}</block> <decl><name>type</name></decl>;</enum>

<decl_stmt><decl><type><name>bool</name></type> <name>b_eos</name></decl>;</decl_stmt>

<union>union

<block>{

<struct>struct

<block>{

<decl_stmt><decl><type><name>int</name></type> <name>i_index</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_ts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_ptr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>i_size</name></decl>;</decl_stmt>

}</block> <decl><name>buf</name></decl>;</struct>

<union>union

<block>{

<struct>struct

<block>{

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>width</name></decl>, <decl><type ref="prev"/><name>height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>stride</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>slice_height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>pixel_format</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>crop_left</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>crop_top</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>crop_right</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>crop_bottom</name></decl>;</decl_stmt>

}</block> <decl><name>video</name></decl>;</struct>

<struct>struct

<block>{

<decl_stmt><decl><type><name>int</name></type> <name>channel_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>channel_mask</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>sample_rate</name></decl>;</decl_stmt>

}</block> <decl><name>audio</name></decl>;</struct>

}</block> <decl><name>conf</name></decl>;</union>

}</block>;</union>

}</block>;</struct>

<union>union <name>mc_api_args</name>

<block>{

<struct>struct

<block>{

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>p_surface</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>p_jsurface</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_width</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_angle</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_tunneled_playback</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_adaptive_playback</name></decl>;</decl_stmt>

}</block> <decl><name>video</name></decl>;</struct>

<struct>struct

<block>{

<decl_stmt><decl><type><name>int</name></type> <name>i_sample_rate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_channel_count</name></decl>;</decl_stmt>

}</block> <decl><name>audio</name></decl>;</struct>

}</block>;</union>

<struct>struct <name>mc_api</name>

<block>{

<decl_stmt><decl><type><name>mc_api_sys</name> <modifier>*</modifier></type><name>p_sys</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type> <name>p_obj</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>psz_mime</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>es_format_category_e</name></name></type> <name>i_cat</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_fourcc_t</name></type> <name>i_codec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_quirks</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_support_rotation</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_started</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_direct_rendering</name></decl>;</decl_stmt>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>clean</name>)<parameter_list>(<parameter><decl><type><name>mc_api</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>prepare</name>)<parameter_list>(<parameter><decl><type><name>mc_api</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_profile</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>configure_decoder</name>)<parameter_list>(<parameter><decl><type><name>mc_api</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>union</name> <name>mc_api_args</name></name><modifier>*</modifier></type> <name>p_args</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>start</name>)<parameter_list>(<parameter><decl><type><name>mc_api</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>stop</name>)<parameter_list>(<parameter><decl><type><name>mc_api</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>flush</name>)<parameter_list>(<parameter><decl><type><name>mc_api</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>dequeue_in</name>)<parameter_list>(<parameter><decl><type><name>mc_api</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>i_timeout</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>dequeue_out</name>)<parameter_list>(<parameter><decl><type><name>mc_api</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>i_timeout</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>queue_in</name>)<parameter_list>(<parameter><decl><type><name>mc_api</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_index</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>p_buf</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>i_size</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>i_ts</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b_config</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>get_out</name>)<parameter_list>(<parameter><decl><type><name>mc_api</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_index</name></decl></parameter>, <parameter><decl><type><name>mc_api_out</name> <modifier>*</modifier></type><name>p_out</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>release_out</name>)<parameter_list>(<parameter><decl><type><name>mc_api</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_index</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b_render</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>release_out_ts</name>)<parameter_list>(<parameter><decl><type><name>mc_api</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_index</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>i_ts_ns</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>set_output_surface</name>)<parameter_list>(<parameter><decl><type><name>mc_api</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_surface</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_jsurface</name></decl></parameter>)</parameter_list>;</function_decl>

}</block>;</struct>

</unit>
