<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\hw\vaapi\chroma.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;va/va.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_filter.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../video_chroma/copy.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"filters.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEST_PICS_POOL_SZ</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>VADisplay</name></type> <name>dpy</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>picture_pool_t</name> <modifier>*</modifier></type> <name>dest_pics</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VASurfaceID</name> <modifier>*</modifier></type> <name>va_surface_ids</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>copy_cache_t</name></type> <name>cache</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>derive_failed</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>image_fallback_failed</name></decl>;</decl_stmt>

}</block></struct></type> <name>filter_sys_t</name>;</typedef>

<function><type><specifier>static</specifier> <name>int</name></type> <name>CreateFallbackImage</name><parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src_pic</name></decl></parameter>,

<parameter><decl><type><name>VADisplay</name></type> <name>va_dpy</name></decl></parameter>, <parameter><decl><type><name>VAImage</name> <modifier>*</modifier></type><name>image_fallback</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>count</name> <init>= <expr><call><name>vaMaxNumImageFormats</name><argument_list>(<argument><expr><name>va_dpy</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VAImageFormat</name> <modifier>*</modifier></type><name>fmts</name> <init>= <expr><call><name>vlc_alloc</name><argument_list>(<argument><expr><name>count</name></expr></argument>, <argument><expr><sizeof>sizeof <argument_list>(<argument><expr><operator>*</operator><name>fmts</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>fmts</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>vaQueryImageFormats</name><argument_list>(<argument><expr><name>va_dpy</name></expr></argument>, <argument><expr><name>fmts</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>count</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>fmts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>count</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<if_stmt><if>if <condition>(<expr><name><name>fmts</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>fourcc</name> <operator>==</operator> <name>VA_FOURCC_NV12</name>

<operator>||</operator> <name><name>fmts</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>fourcc</name> <operator>==</operator> <name>VA_FOURCC_P010</name></expr>)</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt></block_content></block></for>

<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>fmts</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>fourcc</name> <operator>==</operator> <name>VA_FOURCC_NV12</name> <operator>||</operator> <name><name>fmts</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>fourcc</name> <operator>==</operator> <name>VA_FOURCC_P010</name><operator>)</operator>

<operator>&amp;&amp;</operator> <operator>!</operator><call><name>vlc_vaapi_CreateImage</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>va_dpy</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>fmts</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,

<argument><expr><name><name>src_pic</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_width</name></name></expr></argument>, <argument><expr><name><name>src_pic</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_height</name></name></expr></argument>,

<argument><expr><name>image_fallback</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <name>VLC_SUCCESS</name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <name>VLC_EGENERIC</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>fmts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>ret</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>

<name>FillPictureFromVAImage</name><parameter_list>(<parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>dest</name></decl></parameter>,

<parameter><decl><type><name>VAImage</name> <modifier>*</modifier></type><name>src_img</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src_buf</name></decl></parameter>, <parameter><decl><type><name>copy_cache_t</name> <modifier>*</modifier></type><name>cache</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type> <name><name>src_planes</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name>src_buf</name> <operator>+</operator> <name><name>src_img</name><operator>-&gt;</operator><name>offsets</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>,

<expr><name>src_buf</name> <operator>+</operator> <name><name>src_img</name><operator>-&gt;</operator><name>offsets</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>size_t</name></type> <name><name>src_pitches</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src_img</name><operator>-&gt;</operator><name>pitches</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>,

<expr><name><name>src_img</name><operator>-&gt;</operator><name>pitches</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr> }</block></expr></init></decl>;</decl_stmt>

<switch>switch <condition>(<expr><name><name>src_img</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>fourcc</name></name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>VA_FOURCC_NV12</name></expr>:</case>

<block>{<block_content>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>dest</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_chroma</name></name> <operator>==</operator> <name>VLC_CODEC_I420</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>Copy420_SP_to_P</name><argument_list>(<argument><expr><name>dest</name></expr></argument>, <argument><expr><name>src_planes</name></expr></argument>, <argument><expr><name>src_pitches</name></expr></argument>, <argument><expr><name><name>src_img</name><operator>-&gt;</operator><name>height</name></name></expr></argument>, <argument><expr><name>cache</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block>

<case>case <expr><name>VA_FOURCC_P010</name></expr>:</case>

<switch>switch <condition>(<expr><name><name>dest</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_chroma</name></name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>VLC_CODEC_P010</name></expr>:</case>

<expr_stmt><expr><call><name>Copy420_SP_to_SP</name><argument_list>(<argument><expr><name>dest</name></expr></argument>, <argument><expr><name>src_planes</name></expr></argument>, <argument><expr><name>src_pitches</name></expr></argument>, <argument><expr><name><name>src_img</name><operator>-&gt;</operator><name>height</name></name></expr></argument>,

<argument><expr><name>cache</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>VLC_CODEC_I420_10L</name></expr>:</case>

<expr_stmt><expr><call><name>Copy420_16_SP_to_P</name><argument_list>(<argument><expr><name>dest</name></expr></argument>, <argument><expr><name>src_planes</name></expr></argument>, <argument><expr><name>src_pitches</name></expr></argument>,

<argument><expr><name><name>src_img</name><operator>-&gt;</operator><name>height</name></name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>cache</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<default>default:</default>

<expr_stmt><expr><call><name>vlc_assert_unreachable</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></switch>

<break>break;</break>

<default>default:</default>

<expr_stmt><expr><call><name>vlc_assert_unreachable</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></switch>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>picture_t</name> <modifier>*</modifier></type>

<name>DownloadSurface</name><parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src_pic</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>filter_sys_t</name> <modifier>*</modifier><specifier>const</specifier></type> <name>filter_sys</name> <init>= <expr><name><name>filter</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VADisplay</name></type> <name>va_dpy</name> <init>= <expr><call><name>vlc_vaapi_PicGetDisplay</name><argument_list>(<argument><expr><name>src_pic</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VAImage</name></type> <name>src_img</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type> <name>src_buf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>dest</name> <init>= <expr><call><name>filter_NewPicture</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>dest</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>filter</name></expr></argument>, <argument><expr><literal type="string">"filter_NewPicture failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>ret</name>;</goto>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>VAImageID</name></type> <name>image_fallback_id</name> <init>= <expr><name>VA_INVALID_ID</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VASurfaceID</name></type> <name>surface</name> <init>= <expr><call><name>vlc_vaapi_PicGetSurface</name><argument_list>(<argument><expr><name>src_pic</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>vaSyncSurface</name><argument_list>(<argument><expr><name>va_dpy</name></expr></argument>, <argument><expr><name>surface</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>filter_sys</name><operator>-&gt;</operator><name>derive_failed</name></name> <operator>||</operator>

<call><name>vlc_vaapi_DeriveImage</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>va_dpy</name></expr></argument>, <argument><expr><name>surface</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>src_img</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>filter_sys</name><operator>-&gt;</operator><name>image_fallback_failed</name></name></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>filter_sys</name><operator>-&gt;</operator><name>derive_failed</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>VAImage</name></type> <name>image_fallback</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>CreateFallbackImage</name><argument_list>(<argument><expr><name>filter</name></expr></argument>, <argument><expr><name>src_pic</name></expr></argument>, <argument><expr><name>va_dpy</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>image_fallback</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>filter_sys</name><operator>-&gt;</operator><name>image_fallback_failed</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<goto>goto <name>error</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>image_fallback_id</name> <operator>=</operator> <name><name>image_fallback</name><operator>.</operator><name>image_id</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>vaGetImage</name><argument_list>(<argument><expr><name>va_dpy</name></expr></argument>, <argument><expr><name>surface</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>src_pic</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_width</name></name></expr></argument>,

<argument><expr><name><name>src_pic</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_height</name></name></expr></argument>, <argument><expr><name>image_fallback_id</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>filter_sys</name><operator>-&gt;</operator><name>image_fallback_failed</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<goto>goto <name>error</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>src_img</name> <operator>=</operator> <name>image_fallback</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>vlc_vaapi_MapBuffer</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>va_dpy</name></expr></argument>, <argument><expr><name><name>src_img</name><operator>.</operator><name>buf</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>src_buf</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>FillPictureFromVAImage</name><argument_list>(<argument><expr><name>dest</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>src_img</name></expr></argument>, <argument><expr><name>src_buf</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>filter_sys</name><operator>-&gt;</operator><name>cache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_vaapi_UnmapBuffer</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>va_dpy</name></expr></argument>, <argument><expr><name><name>src_img</name><operator>.</operator><name>buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_vaapi_DestroyImage</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>va_dpy</name></expr></argument>, <argument><expr><name><name>src_img</name><operator>.</operator><name>image_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>picture_CopyProperties</name><argument_list>(<argument><expr><name>dest</name></expr></argument>, <argument><expr><name>src_pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label><name>ret</name>:</label>

<expr_stmt><expr><call><name>picture_Release</name><argument_list>(<argument><expr><name>src_pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>dest</name></expr>;</return>

<label><name>error</name>:</label>

<if_stmt><if>if <condition>(<expr><name>image_fallback_id</name> <operator>!=</operator> <name>VA_INVALID_ID</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>vlc_vaapi_DestroyImage</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>va_dpy</name></expr></argument>, <argument><expr><name>image_fallback_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>picture_Release</name><argument_list>(<argument><expr><name>dest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dest</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<goto>goto <name>ret</name>;</goto>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>

<name>FillVAImageFromPicture</name><parameter_list>(<parameter><decl><type><name>VAImage</name> <modifier>*</modifier></type><name>dest_img</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dest_buf</name></decl></parameter>,

<parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>dest_pic</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>copy_cache_t</name> <modifier>*</modifier></type><name>cache</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type> <name><name>src_planes</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>p</name><index>[<expr><name>Y_PLANE</name></expr>]</index></name><operator>.</operator><name>p_pixels</name></expr>,

<expr><name><name>src</name><operator>-&gt;</operator><name>p</name><index>[<expr><name>U_PLANE</name></expr>]</index></name><operator>.</operator><name>p_pixels</name></expr>,

<expr><name><name>src</name><operator>-&gt;</operator><name>p</name><index>[<expr><name>V_PLANE</name></expr>]</index></name><operator>.</operator><name>p_pixels</name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>size_t</name></type> <name><name>src_pitches</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>p</name><index>[<expr><name>Y_PLANE</name></expr>]</index></name><operator>.</operator><name>i_pitch</name></expr>,

<expr><name><name>src</name><operator>-&gt;</operator><name>p</name><index>[<expr><name>U_PLANE</name></expr>]</index></name><operator>.</operator><name>i_pitch</name></expr>,

<expr><name><name>src</name><operator>-&gt;</operator><name>p</name><index>[<expr><name>V_PLANE</name></expr>]</index></name><operator>.</operator><name>i_pitch</name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>tmp</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>dest_pic</name><operator>-&gt;</operator><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>p_pixels</name></expr>,

<expr><name><name>dest_pic</name><operator>-&gt;</operator><name>p</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>p_pixels</name></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>dest_pic</name><operator>-&gt;</operator><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>p_pixels</name> <operator>=</operator> <name>dest_buf</name> <operator>+</operator> <name><name>dest_img</name><operator>-&gt;</operator><name>offsets</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dest_pic</name><operator>-&gt;</operator><name>p</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>p_pixels</name> <operator>=</operator> <name>dest_buf</name> <operator>+</operator> <name><name>dest_img</name><operator>-&gt;</operator><name>offsets</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dest_pic</name><operator>-&gt;</operator><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>i_pitch</name> <operator>=</operator> <name><name>dest_img</name><operator>-&gt;</operator><name>pitches</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dest_pic</name><operator>-&gt;</operator><name>p</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>i_pitch</name> <operator>=</operator> <name><name>dest_img</name><operator>-&gt;</operator><name>pitches</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<switch>switch <condition>(<expr><name><name>src</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_chroma</name></name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>VLC_CODEC_I420</name></expr>:</case>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>dest_pic</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_chroma</name></name> <operator>==</operator> <name>VLC_CODEC_VAAPI_420</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>Copy420_P_to_SP</name><argument_list>(<argument><expr><name>dest_pic</name></expr></argument>, <argument><expr><name>src_planes</name></expr></argument>, <argument><expr><name>src_pitches</name></expr></argument>,

<argument><expr><name><name>src</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_height</name></name></expr></argument>, <argument><expr><name>cache</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>VLC_CODEC_I420_10L</name></expr>:</case>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>dest_pic</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_chroma</name></name> <operator>==</operator> <name>VLC_CODEC_VAAPI_420_10BPP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>Copy420_16_P_to_SP</name><argument_list>(<argument><expr><name>dest_pic</name></expr></argument>, <argument><expr><name>src_planes</name></expr></argument>, <argument><expr><name>src_pitches</name></expr></argument>,

<argument><expr><name><name>src</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_height</name></name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">6</literal></expr></argument>, <argument><expr><name>cache</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>VLC_CODEC_P010</name></expr>:</case>

<block>{<block_content>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>dest_pic</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_chroma</name></name> <operator>==</operator> <name>VLC_CODEC_VAAPI_420_10BPP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>Copy420_SP_to_SP</name><argument_list>(<argument><expr><name>dest_pic</name></expr></argument>, <argument><expr><name>src_planes</name></expr></argument>, <argument><expr><name>src_pitches</name></expr></argument>,

<argument><expr><name><name>src</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_height</name></name></expr></argument>, <argument><expr><name>cache</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block>

<default>default:</default>

<expr_stmt><expr><call><name>vlc_assert_unreachable</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></switch>

<expr_stmt><expr><name><name>dest_pic</name><operator>-&gt;</operator><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>p_pixels</name> <operator>=</operator> <name><name>tmp</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dest_pic</name><operator>-&gt;</operator><name>p</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>p_pixels</name> <operator>=</operator> <name><name>tmp</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>picture_t</name> <modifier>*</modifier></type>

<name>UploadSurface</name><parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>filter_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>filter</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VADisplay</name> <specifier>const</specifier></type> <name>va_dpy</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>dpy</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VAImage</name></type> <name>dest_img</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type> <name>dest_buf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier></type> <name>dest_pic</name> <init>= <expr><call><name>picture_pool_Wait</name><argument_list>(<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dest_pics</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>dest_pic</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>filter</name></expr></argument>, <argument><expr><literal type="string">"cannot retrieve picture from the dest pics pool"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>ret</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_vaapi_PicAttachContext</name><argument_list>(<argument><expr><name>dest_pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>picture_CopyProperties</name><argument_list>(<argument><expr><name>dest_pic</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>vlc_vaapi_DeriveImage</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>va_dpy</name></expr></argument>,

<argument><expr><call><name>vlc_vaapi_PicGetSurface</name><argument_list>(<argument><expr><name>dest_pic</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name>dest_img</name></expr></argument>)</argument_list></call>

<operator>||</operator> <call><name>vlc_vaapi_MapBuffer</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>va_dpy</name></expr></argument>,

<argument><expr><name><name>dest_img</name><operator>.</operator><name>buf</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>dest_buf</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>FillVAImageFromPicture</name><argument_list>(<argument><expr><operator>&amp;</operator><name>dest_img</name></expr></argument>, <argument><expr><name>dest_buf</name></expr></argument>, <argument><expr><name>dest_pic</name></expr></argument>,

<argument><expr><name>src</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>cache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>vlc_vaapi_UnmapBuffer</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>va_dpy</name></expr></argument>, <argument><expr><name><name>dest_img</name><operator>.</operator><name>buf</name></name></expr></argument>)</argument_list></call>

<operator>||</operator> <call><name>vlc_vaapi_DestroyImage</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><name>va_dpy</name></expr></argument>, <argument><expr><name><name>dest_img</name><operator>.</operator><name>image_id</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<label><name>ret</name>:</label>

<expr_stmt><expr><call><name>picture_Release</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>dest_pic</name></expr>;</return>

<label><name>error</name>:</label>

<expr_stmt><expr><call><name>picture_Release</name><argument_list>(<argument><expr><name>dest_pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dest_pic</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<goto>goto <name>ret</name>;</goto>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>CheckFmt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>out</name></decl></parameter>,

<parameter><decl><type><name>bool</name> <modifier>*</modifier></type><name>upload</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>pixel_bytes</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>pixel_bytes</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>upload</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<switch>switch <condition>(<expr><name><name>in</name><operator>-&gt;</operator><name>i_chroma</name></name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>VLC_CODEC_VAAPI_420</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><name><name>out</name><operator>-&gt;</operator><name>i_chroma</name></name> <operator>==</operator> <name>VLC_CODEC_I420</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VLC_CODEC_VAAPI_420_10BPP</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><name><name>out</name><operator>-&gt;</operator><name>i_chroma</name></name> <operator>==</operator> <name>VLC_CODEC_P010</name>

<operator>||</operator> <name><name>out</name><operator>-&gt;</operator><name>i_chroma</name></name> <operator>==</operator> <name>VLC_CODEC_I420_10L</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>pixel_bytes</name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<break>break;</break>

</block_content>}</block></switch>

<expr_stmt><expr><operator>*</operator><name>upload</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<switch>switch <condition>(<expr><name><name>out</name><operator>-&gt;</operator><name>i_chroma</name></name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>VLC_CODEC_VAAPI_420</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><name><name>in</name><operator>-&gt;</operator><name>i_chroma</name></name> <operator>==</operator> <name>VLC_CODEC_I420</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VLC_CODEC_VAAPI_420_10BPP</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><name><name>in</name><operator>-&gt;</operator><name>i_chroma</name></name> <operator>==</operator> <name>VLC_CODEC_P010</name>

<operator>||</operator> <name><name>in</name><operator>-&gt;</operator><name>i_chroma</name></name> <operator>==</operator> <name>VLC_CODEC_I420_10L</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>pixel_bytes</name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<break>break;</break>

</block_content>}</block></switch>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type>

<name>vlc_vaapi_OpenChroma</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>filter_t</name> <modifier>*</modifier><specifier>const</specifier></type> <name>filter</name> <init>= <expr><operator>(</operator><name>filter_t</name> <operator>*</operator><operator>)</operator><name>obj</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>filter_sys_t</name> <modifier>*</modifier></type> <name>filter_sys</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_height</name></name> <operator>!=</operator> <name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_height</name></name>

<operator>||</operator> <name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_width</name></name> <operator>!=</operator> <name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_width</name></name>

<operator>||</operator> <name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>orientation</name></name> <operator>!=</operator> <name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>orientation</name></name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>is_upload</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>pixel_bytes</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>CheckFmt</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>is_upload</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>pixel_bytes</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <ternary><condition><expr><name>is_upload</name></expr> ?</condition><then> <expr><name>UploadSurface</name></expr> </then><else>: <expr><name>DownloadSurface</name></expr></else></ternary></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>filter_sys</name> <operator>=</operator> <call><name>calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>filter_sys_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"unable to allocate memory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_ENOMEM</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>filter_sys</name><operator>-&gt;</operator><name>derive_failed</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>filter_sys</name><operator>-&gt;</operator><name>image_fallback_failed</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>is_upload</name></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>vlc_decoder_device</name> <modifier>*</modifier></type><name>dec_device</name> <init>= <expr><call><name>filter_HoldDecoderDeviceType</name><argument_list>( <argument><expr><name>filter</name></expr></argument>, <argument><expr><name>VLC_DECODER_DEVICE_VAAPI</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>dec_device</name> <operator>==</operator> <name>NULL</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>filter_sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>vctx_out</name></name> <operator>=</operator> <call><name>vlc_video_context_Create</name><argument_list>( <argument><expr><name>dec_device</name></expr></argument>, <argument><expr><name>VLC_VIDEO_CONTEXT_VAAPI</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_decoder_device_Release</name><argument_list>(<argument><expr><name>dec_device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>filter</name><operator>-&gt;</operator><name>vctx_out</name></name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>filter_sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>filter_sys</name><operator>-&gt;</operator><name>dpy</name></name> <operator>=</operator> <name><name>dec_device</name><operator>-&gt;</operator><name>opaque</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>filter_sys</name><operator>-&gt;</operator><name>dest_pics</name></name> <operator>=</operator>

<call><name>vlc_vaapi_PoolNew</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>filter</name><operator>-&gt;</operator><name>vctx_out</name></name></expr></argument>, <argument><expr><name><name>filter_sys</name><operator>-&gt;</operator><name>dpy</name></name></expr></argument>,

<argument><expr><name>DEST_PICS_POOL_SZ</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>filter_sys</name><operator>-&gt;</operator><name>va_surface_ids</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>filter_sys</name><operator>-&gt;</operator><name>dest_pics</name></name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_video_context_Release</name><argument_list>(<argument><expr><name><name>filter</name><operator>-&gt;</operator><name>vctx_out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>vctx_out</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>filter_sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><name><name>filter_sys</name><operator>-&gt;</operator><name>dpy</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>filter_sys</name><operator>-&gt;</operator><name>dest_pics</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>CopyInitCache</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter_sys</name><operator>-&gt;</operator><name>cache</name></name></expr></argument>, <argument><expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_width</name></name>

<operator>*</operator> <name>pixel_bytes</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>is_upload</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>picture_pool_Release</name><argument_list>(<argument><expr><name><name>filter_sys</name><operator>-&gt;</operator><name>dest_pics</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_video_context_Release</name><argument_list>(<argument><expr><name><name>filter</name><operator>-&gt;</operator><name>vctx_out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>vctx_out</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>filter_sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>p_sys</name></name> <operator>=</operator> <name>filter_sys</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"Using SW chroma filter for %dx%d %4.4s -&gt; %4.4s"</literal></expr></argument>,

<argument><expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_width</name></name></expr></argument>,

<argument><expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_height</name></name></expr></argument>,

<argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator> <operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr></argument>,

<argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator> <operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type>

<name>vlc_vaapi_CloseChroma</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><operator>(</operator><name>filter_t</name> <operator>*</operator><operator>)</operator><name>obj</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>filter_sys_t</name> <modifier>*</modifier><specifier>const</specifier></type> <name>filter_sys</name> <init>= <expr><name><name>filter</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>filter_sys</name><operator>-&gt;</operator><name>dest_pics</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>picture_pool_Release</name><argument_list>(<argument><expr><name><name>filter_sys</name><operator>-&gt;</operator><name>dest_pics</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>CopyCleanCache</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter_sys</name><operator>-&gt;</operator><name>cache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>filter</name><operator>-&gt;</operator><name>vctx_out</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>vlc_video_context_Release</name><argument_list>(<argument><expr><name><name>filter</name><operator>-&gt;</operator><name>vctx_out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>filter_sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
