<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\hw\mmal\deinterlace.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_filter.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mmal_picture.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;interface/mmal/mmal.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;interface/mmal/util/mmal_util.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_DEINTERLACE_NO_QPU</name></cpp:macro> <cpp:value>"mmal-deinterlace-no-qpu"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_DEINTERLACE_NO_QPU_TEXT</name></cpp:macro> <cpp:value>N_("Do not use QPUs for advanced HD deinterlacing.")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_DEINTERLACE_NO_QPU_LONGTEXT</name></cpp:macro> <cpp:value>N_("Do not make use of the QPUs to allow higher quality deinterlacing of HD content.")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_DEINTERLACE_ADV</name></cpp:macro> <cpp:value>"mmal-deinterlace-adv"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_DEINTERLACE_ADV_TEXT</name></cpp:macro> <cpp:value>N_("Force advanced deinterlace")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_DEINTERLACE_ADV_LONGTEXT</name></cpp:macro> <cpp:value>N_("Force advanced deinterlace")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_DEINTERLACE_FAST</name></cpp:macro> <cpp:value>"mmal-deinterlace-fast"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_DEINTERLACE_FAST_TEXT</name></cpp:macro> <cpp:value>N_("Force fast deinterlace")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_DEINTERLACE_FAST_LONGTEXT</name></cpp:macro> <cpp:value>N_("Force fast deinterlace")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_DEINTERLACE_NONE</name></cpp:macro> <cpp:value>"mmal-deinterlace-none"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_DEINTERLACE_NONE_TEXT</name></cpp:macro> <cpp:value>N_("Force no deinterlace")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_DEINTERLACE_NONE_LONGTEXT</name></cpp:macro> <cpp:value>N_("Force no interlace. Simply strips off the interlace markers and passes the frame straight through. ""This is the default for &gt; SD if &lt; 96M gpu-mem")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_DEINTERLACE_HALF_RATE</name></cpp:macro> <cpp:value>"mmal-deinterlace-half-rate"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_DEINTERLACE_HALF_RATE_TEXT</name></cpp:macro> <cpp:value>N_("Halve output framerate")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_DEINTERLACE_HALF_RATE_LONGTEXT</name></cpp:macro> <cpp:value>N_("Halve output framerate. 1 output frame for each pair of interlaced fields input")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_DEINTERLACE_FULL_RATE</name></cpp:macro> <cpp:value>"mmal-deinterlace-full-rate"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_DEINTERLACE_FULL_RATE_TEXT</name></cpp:macro> <cpp:value>N_("Full output framerate")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_DEINTERLACE_FULL_RATE_LONGTEXT</name></cpp:macro> <cpp:value>N_("Full output framerate. 1 output frame for each interlaced field input")</cpp:value></cpp:define>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>OpenMmalDeinterlace</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>CloseMmalDeinterlace</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<macro><name>vlc_module_begin</name><argument_list>()</argument_list></macro>

<macro><name>set_shortname</name><argument_list>(<argument>N_(<literal type="string">"MMAL deinterlace"</literal>)</argument>)</argument_list></macro>

<macro><name>set_description</name><argument_list>(<argument>N_(<literal type="string">"MMAL-based deinterlace filter plugin"</literal>)</argument>)</argument_list></macro>

<macro><name>set_capability</name><argument_list>(<argument><literal type="string">"video filter"</literal></argument>, <argument><literal type="number">900</literal></argument>)</argument_list></macro>

<macro><name>set_category</name><argument_list>(<argument>CAT_VIDEO</argument>)</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>(<argument>SUBCAT_VIDEO_VFILTER</argument>)</argument_list></macro>

<macro><name>set_callbacks</name><argument_list>(<argument>OpenMmalDeinterlace</argument>, <argument>CloseMmalDeinterlace</argument>)</argument_list></macro>

<macro><name>add_shortcut</name><argument_list>(<argument><literal type="string">"deinterlace"</literal></argument>)</argument_list></macro>

<expr_stmt><expr><call><name>add_bool</name><argument_list>(<argument><expr><name>MMAL_DEINTERLACE_NO_QPU</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>MMAL_DEINTERLACE_NO_QPU_TEXT</name></expr></argument>,

<argument><expr><name>MMAL_DEINTERLACE_NO_QPU_LONGTEXT</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>add_bool</name><argument_list>(<argument><expr><name>MMAL_DEINTERLACE_ADV</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>MMAL_DEINTERLACE_ADV_TEXT</name></expr></argument>,

<argument><expr><name>MMAL_DEINTERLACE_ADV_LONGTEXT</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>add_bool</name><argument_list>(<argument><expr><name>MMAL_DEINTERLACE_FAST</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>MMAL_DEINTERLACE_FAST_TEXT</name></expr></argument>,

<argument><expr><name>MMAL_DEINTERLACE_FAST_LONGTEXT</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>add_bool</name><argument_list>(<argument><expr><name>MMAL_DEINTERLACE_NONE</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>MMAL_DEINTERLACE_NONE_TEXT</name></expr></argument>,

<argument><expr><name>MMAL_DEINTERLACE_NONE_LONGTEXT</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>add_bool</name><argument_list>(<argument><expr><name>MMAL_DEINTERLACE_HALF_RATE</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>MMAL_DEINTERLACE_HALF_RATE_TEXT</name></expr></argument>,

<argument><expr><name>MMAL_DEINTERLACE_HALF_RATE_LONGTEXT</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>add_bool</name><argument_list>(<argument><expr><name>MMAL_DEINTERLACE_FULL_RATE</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>MMAL_DEINTERLACE_FULL_RATE_TEXT</name></expr></argument>,

<argument><expr><name>MMAL_DEINTERLACE_FULL_RATE_LONGTEXT</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name>vlc_module_end</name><argument_list>()</argument_list></macro>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>MMAL_COMPONENT_T</name> <modifier>*</modifier></type><name>component</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_PORT_T</name> <modifier>*</modifier></type><name>input</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_PORT_T</name> <modifier>*</modifier></type><name>output</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_POOL_T</name> <modifier>*</modifier></type><name>in_pool</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_QUEUE_T</name> <modifier>*</modifier></type> <name>out_q</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_POOL_T</name> <modifier>*</modifier></type> <name>out_pool</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>hw_mmal_port_pool_ref_t</name> <modifier>*</modifier></type><name>out_ppr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>half_rate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>use_qpu</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>use_fast</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>use_passthrough</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>seq_in</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>seq_out</name></decl>;</decl_stmt> 

}</block></struct></type> <name>filter_sys_t</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_COMPONENT_DEFAULT_DEINTERLACE</name></cpp:macro> <cpp:value>"vc.ril.image_fx"</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>picture_t</name> <modifier>*</modifier></type> <name>di_alloc_opaque</name><parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>p_filter</name></decl></parameter>, <parameter><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>buf</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>filter_sys_t</name> <modifier>*</modifier><specifier>const</specifier></type> <name>filter_sys</name> <init>= <expr><name><name>p_filter</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>pic</name> <init>= <expr><call><name>filter_NewPicture</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>pic</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>fail1</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>buf</name><operator>-&gt;</operator><name>length</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Empty buffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail2</name>;</goto>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>pic</name><operator>-&gt;</operator><name>context</name></name> <operator>=</operator> <call><name>hw_mmal_gen_context</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><name><name>filter_sys</name><operator>-&gt;</operator><name>out_ppr</name></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>fail2</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>buf_to_pic_copy_props</name><argument_list>(<argument><expr><name>pic</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>pic</name></expr>;</return>

<label><name>fail2</name>:</label>

<expr_stmt><expr><call><name>picture_Release</name><argument_list>(<argument><expr><name>pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label><name>fail1</name>:</label>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>di_input_port_cb</name><parameter_list>(<parameter><decl><type><name>MMAL_PORT_T</name> <modifier>*</modifier></type><name>port</name></decl></parameter>, <parameter><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>di_output_port_cb</name><parameter_list>(<parameter><decl><type><name>MMAL_PORT_T</name> <modifier>*</modifier></type><name>port</name></decl></parameter>, <parameter><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>buf</name><operator>-&gt;</operator><name>cmd</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>buf</name><operator>-&gt;</operator><name>length</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>filter_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>p_filter</name> <init>= <expr><operator>(</operator><name>filter_t</name> <operator>*</operator><operator>)</operator><name><name>port</name><operator>-&gt;</operator><name>userdata</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>filter_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name> <init>= <expr><name><name>p_filter</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>mmal_queue_put</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>out_q</name></name></expr></argument>, <argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>mmal_buffer_header_reset</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>MMAL_STATUS_T</name></type> <name>fill_output_from_q</name><parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>p_filter</name></decl></parameter>, <parameter><decl><type><name>filter_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name></decl></parameter>, <parameter><decl><type><name>MMAL_QUEUE_T</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>q</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type> <name>out_buf</name></decl>;</decl_stmt>

<while>while <condition>(<expr><operator>(</operator><name>out_buf</name> <operator>=</operator> <call><name>mmal_queue_get</name><argument_list>(<argument><expr><name>q</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>NULL</name></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>err</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>err</name> <operator>=</operator> <call><name>mmal_port_send_buffer</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name></expr></argument>, <argument><expr><name>out_buf</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Send buffer to output failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>mmal_queue_put_back</name><argument_list>(<argument><expr><name>q</name></expr></argument>, <argument><expr><name>out_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>err</name></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></while>

<return>return <expr><name>MMAL_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>unsigned</name> <name>int</name></type> <name>seq_inc</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>x</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><ternary><condition><expr><name>x</name> <operator>+</operator> <literal type="number">1</literal> <operator>&gt;=</operator> <literal type="number">16</literal></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><name>x</name> <operator>+</operator> <literal type="number">1</literal></expr></else></ternary></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>unsigned</name> <name>int</name></type> <name>seq_delta</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>sseq</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>fseq</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><ternary><condition><expr><name>fseq</name> <operator>==</operator> <literal type="number">0</literal></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><ternary><condition><expr><name>fseq</name> <operator>&lt;=</operator> <name>sseq</name></expr> ?</condition><then> <expr><name>sseq</name> <operator>-</operator> <name>fseq</name></expr> </then><else>: <expr><literal type="number">15</literal> <operator>-</operator> <operator>(</operator><name>fseq</name> <operator>-</operator> <name>sseq</name><operator>)</operator></expr></else></ternary></expr></else></ternary></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>picture_t</name> <modifier>*</modifier></type><name>deinterlace</name><parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type> <name>p_filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type> <name>p_pic</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>filter_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name> <init>= <expr><name><name>p_filter</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>ret_pics</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>err</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type> <name>out_buf</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>hw_mmal_vlc_pic_to_mmal_fmt_update</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>format</name></name></expr></argument>, <argument><expr><name>p_pic</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>is_enabled</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>mmal_port_disable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>mmal_port_format_commit</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Failed to update pic format"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_num</name></name> <operator>=</operator> <literal type="number">30</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_size</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_size_recommended</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>mmal_log_dump_format</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>is_enabled</name></name> <operator>&amp;&amp;</operator>

<operator>(</operator><name>err</name> <operator>=</operator> <call><name>mmal_port_enable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><name>di_input_port_cb</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Input port reenable failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if></if_stmt>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>hw_mmal_port_pool_ref_fill</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>out_ppr</name></name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Out port fill fail"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if></if_stmt>

</block_content>}</block>

<block>{<block_content>

<decl_stmt><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>pic_buf</name> <init>= <expr><call><name>hw_mmal_pic_buf_replicated</name><argument_list>(<argument><expr><name>p_pic</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>in_pool</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>pic_buf</name> <operator>==</operator> <name>NULL</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Pic has not attached buffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>picture_Release</name><argument_list>(<argument><expr><name>p_pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>pic_buf</name><operator>-&gt;</operator><name>flags</name></name> <operator>=</operator> <operator>(</operator><name><name>pic_buf</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <operator>~</operator><operator>(</operator><literal type="number">0xfU</literal> <operator>*</operator> <name>MMAL_BUFFER_HEADER_FLAG_USER0</name><operator>)</operator><operator>)</operator> <operator>|</operator> <operator>(</operator><name><name>sys</name><operator>-&gt;</operator><name>seq_in</name></name> <operator>*</operator> <operator>(</operator><name>MMAL_BUFFER_HEADER_FLAG_USER0</name><operator>)</operator><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>seq_in</name></name> <operator>=</operator> <call><name>seq_inc</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>seq_in</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>err</name> <operator>=</operator> <call><name>mmal_port_send_buffer</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><name>pic_buf</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Send buffer to input failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name>pic_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if></if_stmt>

</block_content>}</block>

<block>{<block_content>

<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier><modifier>*</modifier></type> <name>pp_pic</name> <init>= <expr><operator>&amp;</operator><name>ret_pics</name></expr></init></decl>;</decl_stmt>

<while>while <condition>(<expr><operator>(</operator><name>out_buf</name> <operator>=</operator> <operator>(</operator><ternary><condition><expr><call><name>seq_delta</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>seq_in</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>seq_out</name></name></expr></argument>)</argument_list></call> <operator>&gt;=</operator> <literal type="number">5</literal></expr> ?</condition><then> <expr><call><name>mmal_queue_timedwait</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>out_q</name></name></expr></argument>, <argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr> </then><else>: <expr><call><name>mmal_queue_get</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>out_q</name></name></expr></argument>)</argument_list></call></expr></else></ternary><operator>)</operator><operator>)</operator> <operator>!=</operator> <name>NULL</name></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name> <name>int</name></type> <name>seq_out</name> <init>= <expr><operator>(</operator><name><name>out_buf</name><operator>-&gt;</operator><name>flags</name></name> <operator>/</operator> <name>MMAL_BUFFER_HEADER_FLAG_USER0</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xf</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier></type> <name>out_pic</name></decl>;</decl_stmt>

<block>{<block_content>

<expr_stmt><expr><name>out_pic</name> <operator>=</operator> <call><name>di_alloc_opaque</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><name>out_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>out_pic</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Failed to alloc new filter output pic"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>mmal_queue_put_back</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>out_q</name></name></expr></argument>, <argument><expr><name>out_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>out_buf</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></if></if_stmt>

</block_content>}</block>

<expr_stmt><expr><name>out_buf</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt> 

<expr_stmt><expr><operator>*</operator><name>pp_pic</name> <operator>=</operator> <name>out_pic</name></expr>;</expr_stmt>

<expr_stmt><expr><name>pp_pic</name> <operator>=</operator> <operator>&amp;</operator><name><name>out_pic</name><operator>-&gt;</operator><name>p_next</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>seq_out</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>seq_out</name></name> <operator>=</operator> <name>seq_out</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></while>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>ret_pics</name> <operator>!=</operator> <name>NULL</name> <operator>||</operator> <call><name>seq_delta</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>seq_in</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>seq_out</name></name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>

<return>return <expr><name>ret_pics</name></expr>;</return>

<label><name>fail</name>:</label>

<if_stmt><if>if <condition>(<expr><name>out_buf</name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name>out_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>picture_Release</name><argument_list>(<argument><expr><name>p_pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>di_flush</name><parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>filter_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name> <init>= <expr><name><name>p_filter</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name> <operator>!=</operator> <name>NULL</name> <operator>&amp;&amp;</operator> <name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>is_enabled</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>mmal_port_disable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name> <operator>!=</operator> <name>NULL</name> <operator>&amp;&amp;</operator> <name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>is_enabled</name></name></expr>)</condition>

<block>{<block_content>

<block>{<block_content>

<expr_stmt><expr><call><name>fill_output_from_q</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><name>sys</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>out_q</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>mmal_port_disable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>mmal_queue_length</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>out_q</name></name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>mmal_port_enable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name></expr></argument>, <argument><expr><name>di_output_port_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>fill_output_from_q</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><name>sys</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>out_q</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>mmal_port_disable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block>

<expr_stmt><expr><call><name>mmal_port_enable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name></expr></argument>, <argument><expr><name>di_output_port_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>seq_in</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>seq_out</name></name> <operator>=</operator> <literal type="number">15</literal></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>pass_flush</name><parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>picture_t</name> <modifier>*</modifier></type> <name>pass_deinterlace</name><parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type> <name>p_filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type> <name>p_pic</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_pic</name><operator>-&gt;</operator><name>b_progressive</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<return>return <expr><name>p_pic</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>control_port_cb</name><parameter_list>(<parameter><decl><type><name>MMAL_PORT_T</name> <modifier>*</modifier></type><name>port</name></decl></parameter>, <parameter><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><operator>(</operator><name>filter_t</name> <operator>*</operator><operator>)</operator><name><name>port</name><operator>-&gt;</operator><name>userdata</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>status</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>buffer</name><operator>-&gt;</operator><name>cmd</name></name> <operator>==</operator> <name>MMAL_EVENT_ERROR</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>status</name> <operator>=</operator> <operator>*</operator><operator>(</operator><name>uint32_t</name> <operator>*</operator><operator>)</operator><name><name>buffer</name><operator>-&gt;</operator><name>data</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>filter</name></expr></argument>, <argument><expr><literal type="string">"MMAL error %"</literal><name>PRIx32</name><literal type="string">" \"%s\""</literal></expr></argument>, <argument><expr><name>status</name></expr></argument>,

<argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>mmal_buffer_header_reset</name><argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>CloseMmalDeinterlace</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><operator>(</operator><name>filter_t</name><operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>filter_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name> <init>= <expr><name><name>filter</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>sys</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>use_passthrough</name></name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>di_flush</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>component</name></name> <operator>&amp;&amp;</operator> <name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name><operator>-&gt;</operator><name>is_enabled</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>mmal_port_disable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>component</name></name> <operator>&amp;&amp;</operator> <name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>is_enabled</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>mmal_component_disable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>in_pool</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>mmal_pool_destroy</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>in_pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>hw_mmal_port_pool_ref_release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>out_ppr</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>userdata</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>out_q</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>mmal_queue_destroy</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>out_q</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>component</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>mmal_component_release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>filter</name><operator>-&gt;</operator><name>vctx_out</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>vlc_video_context_Release</name><argument_list>(<argument><expr><name><name>filter</name><operator>-&gt;</operator><name>vctx_out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>is_fmt_valid_in</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>vlc_fourcc_t</name></type> <name>fmt</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><name>fmt</name> <operator>==</operator> <name>VLC_CODEC_MMAL_OPAQUE</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>OpenMmalDeinterlace</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><operator>(</operator><name>filter_t</name><operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name>frame_duration</name> <init>= <expr><ternary><condition><expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_frame_rate</name></name> <operator>!=</operator> <literal type="number">0</literal></expr> ?</condition><then>

<expr><name>CLOCK_FREQ</name> <operator>*</operator> <name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_frame_rate_base</name></name> <operator>/</operator>

<name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_frame_rate</name></name></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><name>VLC_EGENERIC</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>status</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>filter_sys_t</name> <modifier>*</modifier></type><name>sys</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>is_fmt_valid_in</name><argument_list>(<argument><expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr></argument>)</argument_list></call> <operator>||</operator>

<name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name> <operator>!=</operator> <name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>filter</name><operator>-&gt;</operator><name>vctx_in</name></name> <operator>==</operator> <name>NULL</name> <operator>||</operator>

<call><name>vlc_video_context_GetType</name><argument_list>(<argument><expr><name><name>filter</name><operator>-&gt;</operator><name>vctx_in</name></name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>VLC_VIDEO_CONTEXT_MMAL</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>sys</name> <operator>=</operator> <call><name>calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>filter_sys_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>sys</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>p_sys</name></name> <operator>=</operator> <name>sys</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>seq_in</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>seq_out</name></name> <operator>=</operator> <literal type="number">15</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>rpi_is_model_pi4</name><argument_list>()</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>half_rate</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>use_qpu</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>use_fast</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>half_rate</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>use_qpu</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>use_fast</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>use_passthrough</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_width</name></name> <operator>*</operator> <name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_height</name></name> <operator>&gt;</operator> <literal type="number">768</literal> <operator>*</operator> <literal type="number">576</literal></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>vlc_decoder_device</name> <modifier>*</modifier></type><name>dec_dev</name> <init>= <expr><call><name>vlc_video_context_HoldDevice</name><argument_list>(<argument><expr><name><name>filter</name><operator>-&gt;</operator><name>vctx_in</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>dec_dev</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>mmal_decoder_device_t</name> <modifier>*</modifier></type><name>devsys</name> <init>= <expr><call><name>GetMMALDeviceOpaque</name><argument_list>(<argument><expr><name>dec_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>devsys</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>half_rate</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>devsys</name><operator>-&gt;</operator><name>is_cma</name></name> <operator>&amp;&amp;</operator>

<call><name>hw_mmal_get_gpu_mem</name><argument_list>()</argument_list></call> <operator>&lt;</operator> <operator>(</operator><literal type="number">96</literal> <operator>&lt;&lt;</operator> <literal type="number">20</literal><operator>)</operator></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>use_passthrough</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>filter</name></expr></argument>, <argument><expr><literal type="string">"Deinterlace bypassed due to lack of GPU memory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_decoder_device_Release</name><argument_list>(<argument><expr><name>dec_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>var_InheritBool</name><argument_list>(<argument><expr><name>filter</name></expr></argument>, <argument><expr><name>MMAL_DEINTERLACE_NO_QPU</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>use_qpu</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>var_InheritBool</name><argument_list>(<argument><expr><name>filter</name></expr></argument>, <argument><expr><name>MMAL_DEINTERLACE_ADV</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>use_fast</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>use_passthrough</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>var_InheritBool</name><argument_list>(<argument><expr><name>filter</name></expr></argument>, <argument><expr><name>MMAL_DEINTERLACE_FAST</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>use_fast</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>use_passthrough</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>var_InheritBool</name><argument_list>(<argument><expr><name>filter</name></expr></argument>, <argument><expr><name>MMAL_DEINTERLACE_NONE</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>use_passthrough</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>var_InheritBool</name><argument_list>(<argument><expr><name>filter</name></expr></argument>, <argument><expr><name>MMAL_DEINTERLACE_FULL_RATE</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>half_rate</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>var_InheritBool</name><argument_list>(<argument><expr><name>filter</name></expr></argument>, <argument><expr><name>MMAL_DEINTERLACE_HALF_RATE</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>half_rate</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>use_passthrough</name></name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>pass_deinterlace</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_flush</name></name> <operator>=</operator> <name>pass_flush</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>vctx_out</name></name> <operator>=</operator> <call><name>vlc_video_context_Hold</name><argument_list>(<argument><expr><name><name>filter</name><operator>-&gt;</operator><name>vctx_in</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_component_create</name><argument_list>(<argument><expr><name>MMAL_COMPONENT_DEFAULT_DEINTERLACE</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>component</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>filter</name></expr></argument>, <argument><expr><literal type="string">"Failed to create MMAL component %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,

<argument><expr><name>MMAL_COMPONENT_DEFAULT_DEINTERLACE</name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if></if_stmt>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>MMAL_PARAMETER_IMAGEFX_PARAMETERS_T</name></type> <name>imfx_param</name> <init>= <expr><block>{

<expr><block>{ <expr><name>MMAL_PARAMETER_IMAGE_EFFECT_PARAMETERS</name></expr>, <expr>sizeof<operator>(</operator><name>imfx_param</name><operator>)</operator></expr> }</block></expr>,

<expr><name><name>sys</name><operator>-&gt;</operator><name>use_fast</name></name> <operator>?</operator>

<name>MMAL_PARAM_IMAGEFX_DEINTERLACE_FAST</name> <operator>:</operator>

<name>MMAL_PARAM_IMAGEFX_DEINTERLACE_ADV</name></expr>,

<expr><literal type="number">4</literal></expr>,

<expr><block>{ <expr><literal type="number">5</literal></expr> , <expr><name>frame_duration</name></expr>, <expr><name><name>sys</name><operator>-&gt;</operator><name>half_rate</name></name></expr>, <expr><name><name>sys</name><operator>-&gt;</operator><name>use_qpu</name></name></expr> }</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_port_parameter_set</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>output</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>imfx_param</name><operator>.</operator><name>hdr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>filter</name></expr></argument>, <argument><expr><literal type="string">"Failed to configure MMAL component %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,

<argument><expr><name>MMAL_COMPONENT_DEFAULT_DEINTERLACE</name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if></if_stmt>

</block_content>}</block>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name><operator>-&gt;</operator><name>userdata</name></name> <operator>=</operator> <operator>(</operator>struct <name>MMAL_PORT_USERDATA_T</name> <operator>*</operator><operator>)</operator><name>filter</name></expr>;</expr_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_port_enable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name></name></expr></argument>, <argument><expr><name>control_port_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>filter</name></expr></argument>, <argument><expr><literal type="string">"Failed to enable control port %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>input</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>userdata</name></name> <operator>=</operator> <operator>(</operator>struct <name>MMAL_PORT_USERDATA_T</name> <operator>*</operator><operator>)</operator><name>filter</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>format</name><operator>-&gt;</operator><name>encoding</name></name> <operator>=</operator> <call><name>vlc_to_mmal_video_fourcc</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>hw_mmal_vlc_fmt_to_mmal_fmt</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>format</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_format_Copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>sys</name><operator>-&gt;</operator><name>half_rate</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_frame_rate</name></name> <operator>*=</operator> <literal type="number">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_port_format_commit</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>filter</name></expr></argument>, <argument><expr><literal type="string">"Failed to commit format for input port %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_size</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_size_recommended</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_num</name></name> <operator>=</operator> <literal type="number">30</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>sys</name><operator>-&gt;</operator><name>in_pool</name></name> <operator>=</operator> <call><name>mmal_pool_create</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_num</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>)</operator> <operator>==</operator> <name>NULL</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>filter</name></expr></argument>, <argument><expr><literal type="string">"Failed to create input pool"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>port_parameter_set_bool</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><name>MMAL_PARAMETER_ZERO_COPY</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>filter</name></expr></argument>, <argument><expr><literal type="string">"Failed to set zero copy on port %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_port_enable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><name>di_input_port_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>filter</name></expr></argument>, <argument><expr><literal type="string">"Failed to enable input port %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>sys</name><operator>-&gt;</operator><name>out_q</name></name> <operator>=</operator> <call><name>mmal_queue_create</name><argument_list>()</argument_list></call><operator>)</operator> <operator>==</operator> <name>NULL</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>filter</name></expr></argument>, <argument><expr><literal type="string">"Failed to create out Q"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>output</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>mmal_format_full_copy</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>format</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>status</name> <operator>=</operator> <call><name>hw_mmal_opaque_output</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>out_ppr</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>di_output_port_cb</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

</block_content>}</block>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_component_enable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>filter</name></expr></argument>, <argument><expr><literal type="string">"Failed to enable component %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>deinterlace</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_flush</name></name> <operator>=</operator> <name>di_flush</name></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

<label><name>fail</name>:</label>

<expr_stmt><expr><call><name>CloseMmalDeinterlace</name><argument_list>(<argument><expr><name>p_this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>ret</name></expr>;</return>

</block_content>}</block></function>

</unit>
