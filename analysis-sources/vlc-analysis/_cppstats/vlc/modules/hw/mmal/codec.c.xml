<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\hw\mmal\codec.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdatomic.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_codec.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;interface/mmal/mmal.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;interface/mmal/util/mmal_util.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;interface/mmal/util/mmal_default_components.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mmal_picture.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NUM_EXTRA_BUFFERS</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>OpenDecoder</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>CloseDecoder</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<macro><name>vlc_module_begin</name><argument_list>()</argument_list></macro>

<macro><name>set_category</name><argument_list>( <argument>CAT_INPUT</argument> )</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_INPUT_VCODEC</argument> )</argument_list></macro>

<macro><name>set_shortname</name><argument_list>(<argument>N_(<literal type="string">"MMAL decoder"</literal>)</argument>)</argument_list></macro>

<macro><name>set_description</name><argument_list>(<argument>N_(<literal type="string">"MMAL-based decoder plugin for Raspberry Pi"</literal>)</argument>)</argument_list></macro>

<macro><name>set_capability</name><argument_list>(<argument><literal type="string">"video decoder"</literal></argument>, <argument><literal type="number">90</literal></argument>)</argument_list></macro>

<macro><name>add_shortcut</name><argument_list>(<argument><literal type="string">"mmal_decoder"</literal></argument>)</argument_list></macro>

<macro><name>add_obsolete_bool</name><argument_list>(<argument><literal type="string">"mmal-opaque"</literal></argument>)</argument_list></macro>

<macro><name>set_callbacks</name><argument_list>(<argument>OpenDecoder</argument>, <argument>CloseDecoder</argument>)</argument_list></macro>

<macro><name>vlc_module_end</name><argument_list>()</argument_list></macro>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>MMAL_COMPONENT_T</name> <modifier>*</modifier></type><name>component</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_PORT_T</name> <modifier>*</modifier></type><name>input</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_POOL_T</name> <modifier>*</modifier></type><name>input_pool</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_PORT_T</name> <modifier>*</modifier></type><name>output</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>hw_mmal_port_pool_ref_t</name> <modifier>*</modifier></type><name>ppr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_ES_FORMAT_T</name> <modifier>*</modifier></type><name>output_format</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>err_stream</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_top_field_first</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_progressive</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_flushed</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type><name>vctx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>pic_lock</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>started</name></decl>;</decl_stmt>

}</block></struct></type> <name>decoder_sys_t</name>;</typedef>

<typedef>typedef <type><struct>struct <name>supported_mmal_enc_s</name> <block>{

<struct>struct <block>{

<decl_stmt><decl><type><name>MMAL_PARAMETER_HEADER_T</name></type> <name>header</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_FOURCC_T</name></type> <name><name>encodings</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>

}</block> <decl><name>supported</name></decl>;</struct>

<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>

}</block></struct></type> <name>supported_mmal_enc_t</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUPPORTED_MMAL_ENC_INIT</name></cpp:macro> <cpp:value>{ {{MMAL_PARAMETER_SUPPORTED_ENCODINGS, sizeof(((supported_mmal_enc_t *)0)-&gt;supported)}, {0}}, -1 }</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <name>supported_mmal_enc_t</name></type> <name>supported_decode_in_enc</name> <init>= <expr><name>SUPPORTED_MMAL_ENC_INIT</name></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>is_enc_supported</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>supported_mmal_enc_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>support</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>MMAL_FOURCC_T</name></type> <name>fcc</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>support</name><operator>-&gt;</operator><name>n</name></name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>true</name></expr>;</return></block_content></block></if></if_stmt> 

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>support</name><operator>-&gt;</operator><name>n</name></name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>support</name><operator>-&gt;</operator><name>supported</name><operator>.</operator><name>encodings</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <name>fcc</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>true</name></expr>;</return></block_content></block></if></if_stmt>

</block_content>}</block></for>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>set_and_test_enc_supported</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><name>supported_mmal_enc_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>support</name></decl></parameter>,

<parameter><decl><type><name>MMAL_PORT_T</name> <modifier>*</modifier></type> <name>port</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>MMAL_FOURCC_T</name></type> <name>fcc</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>support</name><operator>-&gt;</operator><name>n</name></name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>mmal_port_parameter_get</name><argument_list>(<argument><expr><name>port</name></expr></argument>, <argument><expr><operator>(</operator><name>MMAL_PARAMETER_HEADER_T</name> <operator>*</operator><operator>)</operator><operator>&amp;</operator><name><name>support</name><operator>-&gt;</operator><name>supported</name></name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>support</name><operator>-&gt;</operator><name>n</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"Failed to get the supported codecs"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>support</name><operator>-&gt;</operator><name>n</name></name> <operator>=</operator> <operator>(</operator><name><name>support</name><operator>-&gt;</operator><name>supported</name><operator>.</operator><name>header</name><operator>.</operator><name>size</name></name> <operator>-</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>support</name><operator>-&gt;</operator><name>supported</name><operator>.</operator><name>header</name></name></expr></argument>)</argument_list></sizeof><operator>)</operator> <operator>/</operator>

<sizeof>sizeof<argument_list>(<argument><expr><name><name>support</name><operator>-&gt;</operator><name>supported</name><operator>.</operator><name>encodings</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name><name>support</name><operator>-&gt;</operator><name>n</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"%4.4s supported"</literal></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name><operator>*</operator><operator>)</operator><operator>&amp;</operator><name><name>support</name><operator>-&gt;</operator><name>supported</name><operator>.</operator><name>encodings</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

</block_content>}</block></if></if_stmt>

<return>return <expr><call><name>is_enc_supported</name><argument_list>(<argument><expr><name>support</name></expr></argument>, <argument><expr><name>fcc</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>MMAL_FOURCC_T</name></type> <name>vlc_to_mmal_es_fourcc</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>int</name></type> <name>fcc</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<switch>switch <condition>(<expr><name>fcc</name></expr>)</condition><block>{<block_content>

<case>case <expr><name>VLC_CODEC_MJPG</name></expr>:</case>

<return>return <expr><name>MMAL_ENCODING_MJPEG</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_MP1V</name></expr>:</case>

<return>return <expr><name>MMAL_ENCODING_MP1V</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_MPGV</name></expr>:</case>

<case>case <expr><name>VLC_CODEC_MP2V</name></expr>:</case>

<return>return <expr><name>MMAL_ENCODING_MP2V</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_H263</name></expr>:</case>

<return>return <expr><name>MMAL_ENCODING_H263</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_MP4V</name></expr>:</case>

<return>return <expr><name>MMAL_ENCODING_MP4V</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_H264</name></expr>:</case>

<return>return <expr><name>MMAL_ENCODING_H264</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_VP6</name></expr>:</case>

<return>return <expr><name>MMAL_ENCODING_VP6</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_VP8</name></expr>:</case>

<return>return <expr><name>MMAL_ENCODING_VP8</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_WMV1</name></expr>:</case>

<return>return <expr><name>MMAL_ENCODING_WMV1</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_WMV2</name></expr>:</case>

<return>return <expr><name>MMAL_ENCODING_WMV2</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_WMV3</name></expr>:</case>

<return>return <expr><name>MMAL_ENCODING_WMV3</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_VC1</name></expr>:</case>

<return>return <expr><name>MMAL_ENCODING_WVC1</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_THEORA</name></expr>:</case>

<return>return <expr><name>MMAL_ENCODING_THEORA</name></expr>;</return>

<default>default:</default>

<break>break;</break>

</block_content>}</block></switch>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>picture_t</name> <modifier>*</modifier></type> <name>alloc_opaque_pic</name><parameter_list>(<parameter><decl><type><name>decoder_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>dec</name></decl></parameter>, <parameter><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>buf</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>decoder_sys_t</name> <modifier>*</modifier><specifier>const</specifier></type> <name>dec_sys</name> <init>= <expr><name><name>dec</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>dec_sys</name><operator>-&gt;</operator><name>pic_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>pic</name> <init>= <expr><call><name>decoder_NewPicture</name><argument_list>(<argument><expr><name>dec</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>dec_sys</name><operator>-&gt;</operator><name>pic_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>pic</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>fail1</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>buf</name><operator>-&gt;</operator><name>length</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><literal type="string">"Empty buffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail2</name>;</goto>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>pic</name><operator>-&gt;</operator><name>context</name></name> <operator>=</operator> <call><name>hw_mmal_gen_context</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><name><name>dec_sys</name><operator>-&gt;</operator><name>ppr</name></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>fail2</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>buf_to_pic_copy_props</name><argument_list>(<argument><expr><name>pic</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>pic</name></expr>;</return>

<label><name>fail2</name>:</label>

<expr_stmt><expr><call><name>picture_Release</name><argument_list>(<argument><expr><name>pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label><name>fail1</name>:</label>

<expr_stmt><expr><call><name>hw_mmal_port_pool_ref_recycle</name><argument_list>(<argument><expr><name><name>dec_sys</name><operator>-&gt;</operator><name>ppr</name></name></expr></argument>, <argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>control_port_cb</name><parameter_list>(<parameter><decl><type><name>MMAL_PORT_T</name> <modifier>*</modifier></type><name>port</name></decl></parameter>, <parameter><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>decoder_t</name> <modifier>*</modifier></type><name>dec</name> <init>= <expr><operator>(</operator><name>decoder_t</name> <operator>*</operator><operator>)</operator><name><name>port</name><operator>-&gt;</operator><name>userdata</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>status</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>buffer</name><operator>-&gt;</operator><name>cmd</name></name> <operator>==</operator> <name>MMAL_EVENT_ERROR</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>status</name> <operator>=</operator> <operator>*</operator><operator>(</operator><name>uint32_t</name> <operator>*</operator><operator>)</operator><name><name>buffer</name><operator>-&gt;</operator><name>data</name></name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>decoder_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name> <init>= <expr><name><name>dec</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>err_stream</name></name> <operator>=</operator> <name>status</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><literal type="string">"MMAL error %"</literal><name>PRIx32</name><literal type="string">" \"%s\""</literal></expr></argument>, <argument><expr><name>status</name></expr></argument>,

<argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>input_port_cb</name><parameter_list>(<parameter><decl><type><name>MMAL_PORT_T</name> <modifier>*</modifier></type><name>port</name></decl></parameter>, <parameter><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>block</name> <init>= <expr><operator>(</operator><name>block_t</name> <operator>*</operator><operator>)</operator><name><name>buffer</name><operator>-&gt;</operator><name>user_data</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>port</name></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>mmal_buffer_header_reset</name><argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>block</name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>block_Release</name><argument_list>(<argument><expr><name>block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>decoder_output_cb</name><parameter_list>(<parameter><decl><type><name>MMAL_PORT_T</name> <modifier>*</modifier></type><name>port</name></decl></parameter>, <parameter><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>decoder_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>dec</name> <init>= <expr><operator>(</operator><name>decoder_t</name> <operator>*</operator><operator>)</operator><name><name>port</name><operator>-&gt;</operator><name>userdata</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>buffer</name><operator>-&gt;</operator><name>cmd</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>buffer</name><operator>-&gt;</operator><name>length</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>pic</name> <init>= <expr><call><name>alloc_opaque_pic</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><name>buffer</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>pic</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><literal type="string">"Failed to allocate new picture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><call><name>decoder_QueueVideo</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><name>pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>buffer</name><operator>-&gt;</operator><name>cmd</name></name> <operator>==</operator> <name>MMAL_EVENT_FORMAT_CHANGED</name></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>decoder_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name> <init>= <expr><name><name>dec</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_EVENT_FORMAT_CHANGED_T</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>fmt</name> <init>= <expr><call><name>mmal_event_format_changed_get</name><argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_ES_FORMAT_T</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>format</name> <init>= <expr><call><name>mmal_format_alloc</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>format</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><literal type="string">"Failed to allocate new format"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><call><name>mmal_format_full_copy</name><argument_list>(<argument><expr><name>format</name></expr></argument>, <argument><expr><name><name>fmt</name><operator>-&gt;</operator><name>format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>format</name><operator>-&gt;</operator><name>encoding</name></name> <operator>=</operator> <name>MMAL_ENCODING_OPAQUE</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>output_format</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>mmal_format_free</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>output_format</name></name> <operator>=</operator> <name>format</name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></if>

<if type="elseif">else if <condition>(<expr><name><name>buffer</name><operator>-&gt;</operator><name>cmd</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><literal type="string">"Unexpected output cb event: %4.4s"</literal></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name><operator>*</operator><operator>)</operator><operator>&amp;</operator><name><name>buffer</name><operator>-&gt;</operator><name>cmd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>mmal_buffer_header_reset</name><argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>buffer</name><operator>-&gt;</operator><name>user_data</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>fill_output_port</name><parameter_list>(<parameter><decl><type><name>decoder_t</name> <modifier>*</modifier></type><name>dec</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>decoder_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>dec</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>decoder_UpdateVideoOutput</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>vctx</name></name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>hw_mmal_port_pool_ref_fill</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>ppr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>change_output_format</name><parameter_list>(<parameter><decl><type><name>decoder_t</name> <modifier>*</modifier></type><name>dec</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>MMAL_PARAMETER_VIDEO_INTERLACE_TYPE_T</name></type> <name>interlace_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>decoder_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name> <init>= <expr><name><name>dec</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>status</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>started</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>mmal_format_full_copy</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>format</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_port_format_commit</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>status</name> <operator>==</operator> <name>MMAL_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>apply_fmt</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><literal type="string">"Failed to commit output format (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,

<argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_port_disable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><literal type="string">"Failed to disable output port (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,

<argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>mmal_format_full_copy</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>format</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_port_format_commit</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><literal type="string">"Failed to commit output format (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,

<argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>buffer_num</name></name> <operator>=</operator> <name>NUM_DECODER_BUFFER_HEADERS</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>buffer_size</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>buffer_size_recommended</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_port_enable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name></expr></argument>, <argument><expr><name>decoder_output_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><literal type="string">"Failed to enable output port (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,

<argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>sys</name><operator>-&gt;</operator><name>started</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>started</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dec</name><operator>-&gt;</operator><name>i_extra_picture_buffers</name></name> <operator>=</operator> <literal type="number">10</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<label><name>apply_fmt</name>:</label>

<expr_stmt><expr><name><name>dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_width</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>format</name><operator>-&gt;</operator><name>es</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>width</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_height</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>format</name><operator>-&gt;</operator><name>es</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>height</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_x_offset</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>format</name><operator>-&gt;</operator><name>es</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>crop</name><operator>.</operator><name>x</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_y_offset</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>format</name><operator>-&gt;</operator><name>es</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>crop</name><operator>.</operator><name>y</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_visible_width</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>format</name><operator>-&gt;</operator><name>es</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>crop</name><operator>.</operator><name>width</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_visible_height</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>format</name><operator>-&gt;</operator><name>es</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>crop</name><operator>.</operator><name>height</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_sar_num</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>format</name><operator>-&gt;</operator><name>es</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>par</name><operator>.</operator><name>num</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_sar_den</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>format</name><operator>-&gt;</operator><name>es</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>par</name><operator>.</operator><name>den</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_frame_rate</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>format</name><operator>-&gt;</operator><name>es</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>frame_rate</name><operator>.</operator><name>num</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_frame_rate_base</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>format</name><operator>-&gt;</operator><name>es</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>frame_rate</name><operator>.</operator><name>den</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>interlace_type</name><operator>.</operator><name>hdr</name><operator>.</operator><name>id</name></name> <operator>=</operator> <name>MMAL_PARAMETER_VIDEO_INTERLACE_TYPE</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>interlace_type</name><operator>.</operator><name>hdr</name><operator>.</operator><name>size</name></name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>MMAL_PARAMETER_VIDEO_INTERLACE_TYPE_T</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_port_parameter_get</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>interlace_type</name><operator>.</operator><name>hdr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><literal type="string">"Failed to query interlace type from decoder output port (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,

<argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>b_progressive</name></name> <operator>=</operator> <operator>(</operator><name><name>interlace_type</name><operator>.</operator><name>eMode</name></name> <operator>==</operator> <name>MMAL_InterlaceProgressive</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>b_top_field_first</name></name> <operator>=</operator> <ternary><condition><expr><name><name>sys</name><operator>-&gt;</operator><name>b_progressive</name></name></expr> ?</condition><then> <expr><name>true</name></expr> </then><else>:

<expr><operator>(</operator><name><name>interlace_type</name><operator>.</operator><name>eMode</name></name> <operator>==</operator> <name>MMAL_InterlaceFieldsInterleavedUpperFirst</name><operator>)</operator></expr></else></ternary></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>pic_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>decoder_UpdateVideoOutput</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>vctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>pic_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>ret</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>MMAL_STATUS_T</name></type>

<name>set_extradata_and_commit</name><parameter_list>(<parameter><decl><type><name>decoder_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>dec</name></decl></parameter>, <parameter><decl><type><name>decoder_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>status</name></decl>;</decl_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_port_format_commit</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><literal type="string">"Failed to commit format for input port %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>status</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>MMAL_STATUS_T</name></type> <name>decoder_send_extradata</name><parameter_list>(<parameter><decl><type><name>decoder_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>dec</name></decl></parameter>, <parameter><decl><type><name>decoder_sys_t</name> <modifier>*</modifier><specifier>const</specifier></type> <name>sys</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>dec</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>i_codec</name></name> <operator>==</operator> <name>VLC_CODEC_H264</name> <operator>&amp;&amp;</operator>

<name><name>dec</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>i_extra</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>buf</name> <init>= <expr><call><name>mmal_queue_wait</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input_pool</name><operator>-&gt;</operator><name>queue</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>status</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>mmal_buffer_header_reset</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>buf</name><operator>-&gt;</operator><name>cmd</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>buf</name><operator>-&gt;</operator><name>user_data</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>buf</name><operator>-&gt;</operator><name>alloc_size</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_size</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>buf</name><operator>-&gt;</operator><name>length</name></name> <operator>=</operator> <name><name>dec</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>i_extra</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>buf</name><operator>-&gt;</operator><name>data</name></name> <operator>=</operator> <name><name>dec</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>p_extra</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>buf</name><operator>-&gt;</operator><name>flags</name></name> <operator>=</operator> <name>MMAL_BUFFER_HEADER_FLAG_CONFIG</name></expr>;</expr_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_port_send_buffer</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><literal type="string">"Failed to send extradata buffer to input port (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,

<argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>status</name></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>MMAL_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>flush_decoder</name><parameter_list>(<parameter><decl><type><name>decoder_t</name> <modifier>*</modifier></type><name>dec</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>decoder_sys_t</name> <modifier>*</modifier><specifier>const</specifier></type> <name>sys</name> <init>= <expr><name><name>dec</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>sys</name><operator>-&gt;</operator><name>b_flushed</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>mmal_port_disable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>mmal_port_disable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>mmal_port_enable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name></expr></argument>, <argument><expr><name>decoder_output_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>b_flushed</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>decode</name><parameter_list>(<parameter><decl><type><name>decoder_t</name> <modifier>*</modifier></type><name>dec</name></decl></parameter>, <parameter><decl><type><name>block_t</name> <modifier>*</modifier></type><name>block</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>decoder_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>dec</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type><name>buffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>len</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>flags</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>status</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>err_stream</name></name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><literal type="string">"MMAL error reported by ctrl"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>flush_decoder</name><argument_list>(<argument><expr><name>dec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLCDEC_ECRITICAL</name></expr>;</return> 

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>output_format</name></name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>change_output_format</name><argument_list>(<argument><expr><name>dec</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><literal type="string">"Failed to change output port format"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>mmal_format_free</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>output_format</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>block</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLCDEC_SUCCESS</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>block</name><operator>-&gt;</operator><name>i_flags</name></name> <operator>&amp;</operator> <name>BLOCK_FLAG_DISCONTINUITY</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>flush_decoder</name><argument_list>(<argument><expr><name>dec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>block</name><operator>-&gt;</operator><name>i_buffer</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>block_Release</name><argument_list>(<argument><expr><name>block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLCDEC_SUCCESS</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>is_enabled</name></name> <operator>&amp;&amp;</operator>

<operator>(</operator><name>status</name> <operator>=</operator> <call><name>mmal_port_enable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name></expr></argument>, <argument><expr><name>decoder_output_cb</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><literal type="string">"Output port enable failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>is_enabled</name></name></expr>)</condition>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>status</name> <operator>=</operator> <call><name>set_extradata_and_commit</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><name>sys</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>status</name> <operator>=</operator> <call><name>mmal_port_enable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><name>input_port_cb</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><literal type="string">"Input port enable failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>status</name> <operator>=</operator> <call><name>decoder_send_extradata</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><name>sys</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>started</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fill_output_port</name><argument_list>(<argument><expr><name>dec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>block</name><operator>-&gt;</operator><name>i_flags</name></name> <operator>&amp;</operator> <name>BLOCK_FLAG_CORRUPTED</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>flags</name> <operator>|=</operator> <name>MMAL_BUFFER_HEADER_FLAG_CORRUPTED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<while>while <condition>(<expr><name>block</name> <operator>!=</operator> <name>NULL</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name>buffer</name> <operator>=</operator> <call><name>mmal_queue_wait</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input_pool</name><operator>-&gt;</operator><name>queue</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>buffer</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><literal type="string">"Failed to retrieve buffer header for input data"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>mmal_buffer_header_reset</name><argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>buffer</name><operator>-&gt;</operator><name>cmd</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>buffer</name><operator>-&gt;</operator><name>pts</name></name> <operator>=</operator> <ternary><condition><expr><name><name>block</name><operator>-&gt;</operator><name>i_pts</name></name> <operator>!=</operator> <name>VLC_TICK_INVALID</name></expr> ?</condition><then> <expr><name><name>block</name><operator>-&gt;</operator><name>i_pts</name></name></expr> </then><else>:

<expr><ternary><condition><expr><name><name>block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>!=</operator> <name>VLC_TICK_INVALID</name></expr> ?</condition><then> <expr><name><name>block</name><operator>-&gt;</operator><name>i_dts</name></name></expr> </then><else>: <expr><name>MMAL_TIME_UNKNOWN</name></expr></else></ternary></expr></else></ternary></expr>;</expr_stmt>

<expr_stmt><expr><name><name>buffer</name><operator>-&gt;</operator><name>dts</name></name> <operator>=</operator> <name><name>block</name><operator>-&gt;</operator><name>i_dts</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>buffer</name><operator>-&gt;</operator><name>alloc_size</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_size</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>buffer</name><operator>-&gt;</operator><name>user_data</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name>len</name> <operator>=</operator> <name><name>block</name><operator>-&gt;</operator><name>i_buffer</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>len</name> <operator>&gt;</operator> <name><name>buffer</name><operator>-&gt;</operator><name>alloc_size</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>len</name> <operator>=</operator> <name><name>buffer</name><operator>-&gt;</operator><name>alloc_size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>buffer</name><operator>-&gt;</operator><name>data</name></name> <operator>=</operator> <name><name>block</name><operator>-&gt;</operator><name>p_buffer</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>block</name><operator>-&gt;</operator><name>p_buffer</name></name> <operator>+=</operator> <name>len</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>block</name><operator>-&gt;</operator><name>i_buffer</name></name> <operator>-=</operator> <name>len</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>buffer</name><operator>-&gt;</operator><name>length</name></name> <operator>=</operator> <name>len</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>block</name><operator>-&gt;</operator><name>i_buffer</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>buffer</name><operator>-&gt;</operator><name>user_data</name></name> <operator>=</operator> <name>block</name></expr>;</expr_stmt>

<expr_stmt><expr><name>block</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>buffer</name><operator>-&gt;</operator><name>flags</name></name> <operator>=</operator> <name>flags</name></expr>;</expr_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_port_send_buffer</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><name>buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><literal type="string">"Failed to send buffer to input port (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,

<argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>b_flushed</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

</block_content>}</block></while>

<return>return <expr><name>VLCDEC_SUCCESS</name></expr>;</return>

<label><name>fail</name>:</label>

<expr_stmt><expr><call><name>flush_decoder</name><argument_list>(<argument><expr><name>dec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLCDEC_ECRITICAL</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>CloseDecoder</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>decoder_t</name> <modifier>*</modifier></type><name>dec</name> <init>= <expr><operator>(</operator><name>decoder_t</name><operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>decoder_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>dec</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>sys</name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>component</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>is_enabled</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>mmal_port_disable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>is_enabled</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>mmal_port_disable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name><operator>-&gt;</operator><name>is_enabled</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>mmal_port_disable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>is_enabled</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>mmal_component_disable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>mmal_component_release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>input_pool</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>mmal_pool_destroy</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input_pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>output_format</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>mmal_format_free</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>hw_mmal_port_pool_ref_release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>ppr</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>vctx</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>vlc_video_context_Release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>vctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>OpenDecoder</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>decoder_t</name> <modifier>*</modifier></type><name>dec</name> <init>= <expr><operator>(</operator><name>decoder_t</name><operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><name>VLC_EGENERIC</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>decoder_sys_t</name> <modifier>*</modifier></type><name>sys</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>status</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>MMAL_FOURCC_T</name></type> <name>in_fcc</name> <init>= <expr><call><name>vlc_to_mmal_es_fourcc</name><argument_list>(<argument><expr><name><name>dec</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>i_codec</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>in_fcc</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_this</name></expr></argument>, <argument><expr><literal type="string">"codec %4.4s not supported"</literal></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name><operator>*</operator><operator>)</operator><operator>&amp;</operator><name><name>dec</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>i_codec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>is_enc_supported</name><argument_list>(<argument><expr><operator>&amp;</operator><name>supported_decode_in_enc</name></expr></argument>, <argument><expr><name>in_fcc</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_this</name></expr></argument>, <argument><expr><literal type="string">"codec %4.4s (MMAL %4.4s) not supported"</literal></expr></argument>,

<argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name><operator>*</operator><operator>)</operator><operator>&amp;</operator><name><name>dec</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>i_codec</name></name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>in_fcc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>sys</name> <operator>=</operator> <call><name>calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>decoder_sys_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>sys</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>vlc_decoder_device</name> <modifier>*</modifier></type><name>dec_dev</name> <init>= <expr><call><name>decoder_GetDecoderDevice</name><argument_list>(<argument><expr><name>dec</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>mmal_decoder_device_t</name> <modifier>*</modifier></type><name>devsys</name> <init>= <expr><call><name>GetMMALDeviceOpaque</name><argument_list>(<argument><expr><name>dec_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>devsys</name> <operator>==</operator> <name>NULL</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><literal type="string">"Could not find a MMAL decoder device"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>vctx</name></name> <operator>=</operator> <call><name>vlc_video_context_Create</name><argument_list>(<argument><expr><name>dec_dev</name></expr></argument>, <argument><expr><name>VLC_VIDEO_CONTEXT_MMAL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_decoder_device_Release</name><argument_list>(<argument><expr><name>dec_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dec</name><operator>-&gt;</operator><name>p_sys</name></name> <operator>=</operator> <name>sys</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>pic_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>err_stream</name></name> <operator>=</operator> <name>MMAL_SUCCESS</name></expr>;</expr_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_component_create</name><argument_list>(<argument><expr><name>MMAL_COMPONENT_DEFAULT_VIDEO_DECODER</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>component</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><literal type="string">"Failed to create MMAL component %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,

<argument><expr><name>MMAL_COMPONENT_DEFAULT_VIDEO_DECODER</name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>input</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>output</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>userdata</name></name> <operator>=</operator> <operator>(</operator>struct <name>MMAL_PORT_USERDATA_T</name> <operator>*</operator><operator>)</operator><name>dec</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>format</name><operator>-&gt;</operator><name>encoding</name></name> <operator>=</operator> <name>in_fcc</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>set_and_test_enc_supported</name><argument_list>(<argument><expr><name>p_this</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>supported_decode_in_enc</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><name>in_fcc</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>p_this</name></expr></argument>, <argument><expr><literal type="string">"codec %4.4s not supported"</literal></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name><operator>*</operator><operator>)</operator><operator>&amp;</operator><name><name>dec</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>i_codec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name><operator>-&gt;</operator><name>userdata</name></name> <operator>=</operator> <operator>(</operator>struct <name>MMAL_PORT_USERDATA_T</name> <operator>*</operator><operator>)</operator><name>dec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_port_enable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name></name></expr></argument>, <argument><expr><name>control_port_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><literal type="string">"Failed to enable control port %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>status</name> <operator>=</operator> <call><name>set_extradata_and_commit</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><name>sys</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_size</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_size_recommended</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_num</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_num_recommended</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_port_enable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><name>input_port_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><literal type="string">"Failed to enable input port %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>status</name> <operator>=</operator> <call><name>hw_mmal_opaque_output</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>dec</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>ppr</name></name></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name></expr></argument>, <argument><expr><name>NUM_EXTRA_BUFFERS</name></expr></argument>, <argument><expr><name>decoder_output_cb</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_component_enable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><literal type="string">"Failed to enable component %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,

<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>sys</name><operator>-&gt;</operator><name>input_pool</name></name> <operator>=</operator> <call><name>mmal_pool_create</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_num</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>)</operator> <operator>==</operator> <name>NULL</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><literal type="string">"Failed to create input pool"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>b_flushed</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>i_codec</name></name> <operator>=</operator> <name>VLC_CODEC_MMAL_OPAQUE</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name> <operator>=</operator> <name>VLC_CODEC_MMAL_OPAQUE</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>status</name> <operator>=</operator> <call><name>decoder_send_extradata</name><argument_list>(<argument><expr><name>dec</name></expr></argument>, <argument><expr><name>sys</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>dec</name><operator>-&gt;</operator><name>pf_decode</name></name> <operator>=</operator> <name>decode</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dec</name><operator>-&gt;</operator><name>pf_flush</name></name> <operator>=</operator> <name>flush_decoder</name></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

<label><name>fail</name>:</label>

<expr_stmt><expr><call><name>CloseDecoder</name><argument_list>(<argument><expr><name>p_this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>ret</name></expr>;</return>

</block_content>}</block></function>

</unit>
