<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\video_chroma\omxdl.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_filter.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_picture.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;omxtypes.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;omxIP.h&gt;</cpp:file></cpp:include>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Open</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>OpenScaler</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<macro><name>vlc_module_begin</name> <argument_list>()</argument_list></macro>

<macro><name>set_description</name> <argument_list>(<argument>N_(<literal type="string">"OpenMAX DL image processing"</literal>)</argument>)</argument_list></macro>

<macro><name>set_capability</name> <argument_list>(<argument><literal type="string">"video converter"</literal></argument>, <argument><literal type="number">90</literal></argument>)</argument_list></macro>

<macro><name>set_callback</name><argument_list>(<argument>Open</argument>)</argument_list></macro>

<macro><name>vlc_module_end</name> <argument_list>()</argument_list></macro>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRC_WIDTH</name></cpp:macro> <cpp:value>(filter-&gt;fmt_in.video.i_width)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRC_HEIGHT</name></cpp:macro> <cpp:value>(filter-&gt;fmt_in.video.i_height)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DST_WIDTH</name></cpp:macro> <cpp:value>(filter-&gt;fmt_out.video.i_width)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DST_HEIGHT</name></cpp:macro> <cpp:value>(filter-&gt;fmt_out.video.i_height)</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>void</name></type> <name>I420_RV16</name> <parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>OMX_U8</name> <modifier>*</modifier></type><name><name>in</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name><name>instep</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PITCH</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U16</name> <modifier>*</modifier></type><name>out</name> <init>= <expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>p_pixels</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name>outstep</name> <init>= <expr><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMXSize</name></type> <name>size</name> <init>= <expr><block>{ <expr><name>SRC_WIDTH</name></expr>, <expr><name>SRC_HEIGHT</name></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>omxIPCS_YCbCr420ToBGR565_U8_U16_P3C3R</name> <argument_list>(<argument><expr><name>in</name></expr></argument>, <argument><expr><name>instep</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>outstep</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<macro><name>VIDEO_FILTER_WRAPPER</name> <argument_list>(<argument>I420_RV16</argument>)</argument_list></macro>

<function><type><specifier>static</specifier> <name>void</name></type> <name>YV12_RV16</name> <parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>OMX_U8</name> <modifier>*</modifier></type><name><name>in</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name><name>instep</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PITCH</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U16</name> <modifier>*</modifier></type><name>out</name> <init>= <expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>p_pixels</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name>outstep</name> <init>= <expr><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMXSize</name></type> <name>size</name> <init>= <expr><block>{ <expr><name>SRC_WIDTH</name></expr>, <expr><name>SRC_HEIGHT</name></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>omxIPCS_YCbCr420ToBGR565_U8_U16_P3C3R</name> <argument_list>(<argument><expr><name>in</name></expr></argument>, <argument><expr><name>instep</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>outstep</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<macro><name>VIDEO_FILTER_WRAPPER</name> <argument_list>(<argument>YV12_RV16</argument>)</argument_list></macro>

<function><type><specifier>static</specifier> <name>void</name></type> <name>I422_I420</name> <parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>OMX_U8</name> <modifier>*</modifier></type><name><name>in</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name><name>instep</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PITCH</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U8</name> <modifier>*</modifier></type><name><name>out</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>dst</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name><name>outstep</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>dst</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>U_PITCH</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>V_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMXSize</name></type> <name>size</name> <init>= <expr><block>{ <expr><name>SRC_WIDTH</name></expr>, <expr><name>SRC_HEIGHT</name></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>omxIPCS_YCbCr422ToYCbCr420Rotate_U8_P3R</name> <argument_list>(

<argument><expr><name>in</name></expr></argument>, <argument><expr><name>instep</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>outstep</name></expr></argument>, <argument><expr><name>size</name></expr></argument>, <argument><expr><name>OMX_IP_DISABLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<macro><name>VIDEO_FILTER_WRAPPER</name> <argument_list>(<argument>I422_I420</argument>)</argument_list></macro>

<function><type><specifier>static</specifier> <name>void</name></type> <name>I422_YV12</name> <parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>OMX_U8</name> <modifier>*</modifier></type><name><name>in</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name><name>instep</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PITCH</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U8</name> <modifier>*</modifier></type><name><name>out</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>dst</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name><name>outstep</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>dst</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>V_PITCH</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>U_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMXSize</name></type> <name>size</name> <init>= <expr><block>{ <expr><name>SRC_WIDTH</name></expr>, <expr><name>SRC_HEIGHT</name></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>omxIPCS_YCbCr422ToYCbCr420Rotate_U8_P3R</name> <argument_list>(

<argument><expr><name>in</name></expr></argument>, <argument><expr><name>instep</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>outstep</name></expr></argument>, <argument><expr><name>size</name></expr></argument>, <argument><expr><name>OMX_IP_DISABLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<macro><name>VIDEO_FILTER_WRAPPER</name> <argument_list>(<argument>I422_YV12</argument>)</argument_list></macro>

<function><type><specifier>static</specifier> <name>void</name></type> <name>I444_RV16</name> <parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>OMX_U8</name> <modifier>*</modifier></type><name><name>in</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name>instep</name> <init>= <expr><name><name>src</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U16</name> <modifier>*</modifier></type><name>out</name> <init>= <expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>p_pixels</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name>outstep</name> <init>= <expr><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMXSize</name></type> <name>size</name> <init>= <expr><block>{

<expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_width</name></name></expr>,

<expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_height</name></name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>omxIPCS_YCbCr444ToBGR565_U8_U16_P3C3R</name> <argument_list>(<argument><expr><name>in</name></expr></argument>, <argument><expr><name>instep</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>outstep</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<macro><name>VIDEO_FILTER_WRAPPER</name> <argument_list>(<argument>I444_RV16</argument>)</argument_list></macro>

<function><type><specifier>static</specifier> <name>void</name></type> <name>YUYV_RV24</name> <parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>OMX_U8</name> <modifier>*</modifier></type><name>in</name> <init>= <expr><name><name>src</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>p_pixels</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name>instep</name> <init>= <expr><name><name>src</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U8</name> <modifier>*</modifier></type><name>out</name> <init>= <expr><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>p_pixels</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name>outstep</name> <init>= <expr><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMXSize</name></type> <name>size</name> <init>= <expr><block>{ <expr><name>SRC_WIDTH</name></expr>, <expr><name>SRC_HEIGHT</name></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>omxIPCS_YCbYCr422ToBGR888_U8_C2C3R</name> <argument_list>(<argument><expr><name>in</name></expr></argument>, <argument><expr><name>instep</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>outstep</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<macro><name>VIDEO_FILTER_WRAPPER</name> <argument_list>(<argument>YUYV_RV24</argument>)</argument_list></macro>

<function><type><specifier>static</specifier> <name>void</name></type> <name>YUYV_RV16</name> <parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>OMX_U8</name> <modifier>*</modifier></type><name>in</name> <init>= <expr><name><name>src</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>p_pixels</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name>instep</name> <init>= <expr><name><name>src</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U16</name> <modifier>*</modifier></type><name>out</name> <init>= <expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>p_pixels</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name>outstep</name> <init>= <expr><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMXSize</name></type> <name>size</name> <init>= <expr><block>{ <expr><name>SRC_WIDTH</name></expr>, <expr><name>SRC_HEIGHT</name></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>omxIPCS_YCbYCr422ToBGR565_U8_U16_C2C3R</name> <argument_list>(<argument><expr><name>in</name></expr></argument>, <argument><expr><name>instep</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>outstep</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<macro><name>VIDEO_FILTER_WRAPPER</name> <argument_list>(<argument>YUYV_RV16</argument>)</argument_list></macro>

<function><type><specifier>static</specifier> <name>void</name></type> <name>UYVY_I420</name> <parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>OMX_U8</name> <modifier>*</modifier></type><name>in</name> <init>= <expr><name><name>src</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>p_pixels</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name>instep</name> <init>= <expr><name><name>src</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U8</name> <modifier>*</modifier></type><name><name>out</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>dst</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name><name>outstep</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>dst</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>U_PITCH</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>V_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMXSize</name></type> <name>size</name> <init>= <expr><block>{ <expr><name>SRC_WIDTH</name></expr>, <expr><name>SRC_HEIGHT</name></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>omxIPCS_CbYCrY422ToYCbCr420Rotate_U8_C2P3R</name> <argument_list>(

<argument><expr><name>in</name></expr></argument>, <argument><expr><name>instep</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>outstep</name></expr></argument>, <argument><expr><name>size</name></expr></argument>, <argument><expr><name>OMX_IP_DISABLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<macro><name>VIDEO_FILTER_WRAPPER</name> <argument_list>(<argument>UYVY_I420</argument>)</argument_list></macro>

<function><type><specifier>static</specifier> <name>void</name></type> <name>UYVY_YV12</name> <parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>OMX_U8</name> <modifier>*</modifier></type><name>in</name> <init>= <expr><name><name>src</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>p_pixels</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name>instep</name> <init>= <expr><name><name>src</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U8</name> <modifier>*</modifier></type><name><name>out</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>dst</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name><name>outstep</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>dst</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>V_PITCH</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>U_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMXSize</name></type> <name>size</name> <init>= <expr><block>{ <expr><name>SRC_WIDTH</name></expr>, <expr><name>SRC_HEIGHT</name></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>omxIPCS_CbYCrY422ToYCbCr420Rotate_U8_C2P3R</name> <argument_list>(

<argument><expr><name>in</name></expr></argument>, <argument><expr><name>instep</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>outstep</name></expr></argument>, <argument><expr><name>size</name></expr></argument>, <argument><expr><name>OMX_IP_DISABLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<macro><name>VIDEO_FILTER_WRAPPER</name> <argument_list>(<argument>UYVY_YV12</argument>)</argument_list></macro>

<function><type><specifier>static</specifier> <name>int</name></type> <name>FixRV24</name> <parameter_list>(<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>WORDS_BIGENDIAN</name></expr></argument>)</argument_list></call></expr></cpp:if>
<if_stmt><if>if <condition>(<expr><name><name>fmt</name><operator>-&gt;</operator><name>i_rmask</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_gmask</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_bmask</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_rmask</name></name> <operator>=</operator> <literal type="number">0xff0000</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_gmask</name></name> <operator>=</operator> <literal type="number">0x00ff00</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_bmask</name></name> <operator>=</operator> <literal type="number">0x0000ff</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><ternary><condition><expr><operator>(</operator><name><name>fmt</name><operator>-&gt;</operator><name>i_rmask</name></name> <operator>==</operator> <literal type="number">0xff0000</literal> <operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_gmask</name></name> <operator>==</operator> <literal type="number">0x00ff00</literal>

<operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_bmask</name></name> <operator>==</operator> <literal type="number">0x0000ff</literal><operator>)</operator></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><operator>-</operator><literal type="number">1</literal></expr></else></ternary></expr>;</return>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<if_stmt><if>if <condition>(<expr><name><name>fmt</name><operator>-&gt;</operator><name>i_rmask</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_gmask</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_bmask</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_rmask</name></name> <operator>=</operator> <literal type="number">0x0000ff</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_gmask</name></name> <operator>=</operator> <literal type="number">0x00ff00</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_bmask</name></name> <operator>=</operator> <literal type="number">0xff0000</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><ternary><condition><expr><operator>(</operator><name><name>fmt</name><operator>-&gt;</operator><name>i_rmask</name></name> <operator>==</operator> <literal type="number">0x0000ff</literal> <operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_gmask</name></name> <operator>==</operator> <literal type="number">0x00ff00</literal>

<operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_bmask</name></name> <operator>==</operator> <literal type="number">0xff0000</literal><operator>)</operator></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><operator>-</operator><literal type="number">1</literal></expr></else></ternary></expr>;</return>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>FixRV16</name> <parameter_list>(<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>WORDS_BIGENDIAN</name></expr></argument>)</argument_list></call></expr></cpp:if>
<if_stmt><if>if <condition>(<expr><name><name>fmt</name><operator>-&gt;</operator><name>i_rmask</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_gmask</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_bmask</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_rmask</name></name> <operator>=</operator> <literal type="number">0xf800</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_gmask</name></name> <operator>=</operator> <literal type="number">0x07e0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_bmask</name></name> <operator>=</operator> <literal type="number">0x001f</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><ternary><condition><expr><operator>(</operator><name><name>fmt</name><operator>-&gt;</operator><name>i_rmask</name></name> <operator>==</operator> <literal type="number">0xf800</literal> <operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_gmask</name></name> <operator>==</operator> <literal type="number">0x07e0</literal>

<operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_bmask</name></name> <operator>==</operator> <literal type="number">0x001f</literal><operator>)</operator></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><operator>-</operator><literal type="number">1</literal></expr></else></ternary></expr>;</return>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>fmt</name></expr>;</expr_stmt>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>FixRV15</name> <parameter_list>(<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>WORDS_BIGENDIAN</name></expr></argument>)</argument_list></call></expr></cpp:if>
<if_stmt><if>if <condition>(<expr><name><name>fmt</name><operator>-&gt;</operator><name>i_rmask</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_gmask</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_bmask</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_rmask</name></name> <operator>=</operator> <literal type="number">0x7c00</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_gmask</name></name> <operator>=</operator> <literal type="number">0x03e0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_bmask</name></name> <operator>=</operator> <literal type="number">0x001f</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><ternary><condition><expr><operator>(</operator><name><name>fmt</name><operator>-&gt;</operator><name>i_rmask</name></name> <operator>==</operator> <literal type="number">0x7c00</literal> <operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_gmask</name></name> <operator>==</operator> <literal type="number">0x03e0</literal>

<operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_bmask</name></name> <operator>==</operator> <literal type="number">0x001f</literal><operator>)</operator></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><operator>-</operator><literal type="number">1</literal></expr></else></ternary></expr>;</return>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>fmt</name></expr>;</expr_stmt>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>FixRV12</name> <parameter_list>(<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>WORDS_BIGENDIAN</name></expr></argument>)</argument_list></call></expr></cpp:if>
<if_stmt><if>if <condition>(<expr><name><name>fmt</name><operator>-&gt;</operator><name>i_rmask</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_gmask</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_bmask</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_rmask</name></name> <operator>=</operator> <literal type="number">0x0f00</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_gmask</name></name> <operator>=</operator> <literal type="number">0x00f0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_bmask</name></name> <operator>=</operator> <literal type="number">0x000f</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><ternary><condition><expr><operator>(</operator><name><name>fmt</name><operator>-&gt;</operator><name>i_rmask</name></name> <operator>==</operator> <literal type="number">0x0f00</literal> <operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_gmask</name></name> <operator>==</operator> <literal type="number">0x00f0</literal>

<operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_bmask</name></name> <operator>==</operator> <literal type="number">0x000f</literal><operator>)</operator></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><operator>-</operator><literal type="number">1</literal></expr></else></ternary></expr>;</return>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<if_stmt><if>if <condition>(<expr><name><name>fmt</name><operator>-&gt;</operator><name>i_rmask</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_gmask</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_bmask</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_rmask</name></name> <operator>=</operator> <literal type="number">0x000f</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_gmask</name></name> <operator>=</operator> <literal type="number">0xf000</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_bmask</name></name> <operator>=</operator> <literal type="number">0x0f00</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><ternary><condition><expr><operator>(</operator><name><name>fmt</name><operator>-&gt;</operator><name>i_rmask</name></name> <operator>==</operator> <literal type="number">0x000f</literal> <operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_gmask</name></name> <operator>==</operator> <literal type="number">0xf000</literal>

<operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_bmask</name></name> <operator>==</operator> <literal type="number">0x0f00</literal><operator>)</operator></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><operator>-</operator><literal type="number">1</literal></expr></else></ternary></expr>;</return>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Open</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><operator>(</operator><name>filter_t</name> <operator>*</operator><operator>)</operator><name>obj</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>orientation</name></name> <operator>!=</operator> <name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>orientation</name></name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_width</name></name> <operator>!=</operator> <name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_width</name></name><operator>)</operator>

<operator>||</operator> <operator>(</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_height</name></name> <operator>!=</operator> <name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_height</name></name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><call><name>OpenScaler</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<switch>switch <condition>(<expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>VLC_CODEC_I420</name></expr>:</case>

<switch>switch <condition>(<expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>VLC_CODEC_RGB16</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><call><name>FixRV16</name> <argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>I420_RV16_Filter</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></switch>

<break>break;</break>

<case>case <expr><name>VLC_CODEC_YV12</name></expr>:</case>

<switch>switch <condition>(<expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>VLC_CODEC_RGB16</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><call><name>FixRV16</name> <argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>YV12_RV16_Filter</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></switch>

<break>break;</break>

<case>case <expr><name>VLC_CODEC_I422</name></expr>:</case>

<switch>switch <condition>(<expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>VLC_CODEC_I420</name></expr>:</case>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>I422_I420_Filter</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_YV12</name></expr>:</case>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>I422_YV12_Filter</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></switch>

<break>break;</break>

<case>case <expr><name>VLC_CODEC_I444</name></expr>:</case>

<switch>switch <condition>(<expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>VLC_CODEC_RGB16</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><call><name>FixRV16</name> <argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>I444_RV16_Filter</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></switch>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_YUYV</name></expr>:</case>

<switch>switch <condition>(<expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>VLC_CODEC_RGB24</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><call><name>FixRV24</name> <argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>YUYV_RV24_Filter</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_RGB16</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><call><name>FixRV16</name> <argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>YUYV_RV16_Filter</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></switch>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_UYVY</name></expr>:</case>

<switch>switch <condition>(<expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>VLC_CODEC_I420</name></expr>:</case>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>UYVY_I420_Filter</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_YV12</name></expr>:</case>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>UYVY_YV12_Filter</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></switch>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></switch>

<return>return <expr><call><name>OpenScaler</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>XRR_MAX</name></cpp:macro> <cpp:value>(OMX_INT)(((float)((SRC_WIDTH &amp; ~1) - 1)) / ((DST_WIDTH &amp; ~1) - 1) * (1 &lt;&lt; 16) + .5)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>YRR_MAX</name></cpp:macro> <cpp:value>(OMX_INT)(((float)((SRC_HEIGHT &amp; ~1) - 1)) / ((DST_HEIGHT &amp; ~1) - 1) * (1 &lt;&lt; 16) + .5)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CNV</name></cpp:macro> <cpp:value>(*(int *)(filter-&gt;p_sys))</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>void</name></type> <name>I420_I420_Scale</name> <parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>OMX_U8</name> <modifier>*</modifier></type><name><name>in</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name><name>instep</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PITCH</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMXSize</name></type> <name>insize</name> <init>= <expr><block>{ <expr><name>SRC_WIDTH</name></expr>, <expr><name>SRC_HEIGHT</name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U8</name> <modifier>*</modifier></type><name><name>out</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>dst</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name><name>outstep</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>dst</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>U_PITCH</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>V_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMXSize</name></type> <name>outsize</name> <init>= <expr><block>{ <expr><name>DST_WIDTH</name></expr>, <expr><name>DST_HEIGHT</name></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>omxIPCS_YCbCr420RszRot_U8_P3R</name> <argument_list>(

<argument><expr><name>in</name></expr></argument>, <argument><expr><name>instep</name></expr></argument>, <argument><expr><name>insize</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>outstep</name></expr></argument>, <argument><expr><name>outsize</name></expr></argument>,

<argument><expr><name>OMX_IP_NEAREST</name></expr></argument>, <argument><expr><name>OMX_IP_DISABLE</name></expr></argument>, <argument><expr><name>XRR_MAX</name></expr></argument>, <argument><expr><name>YRR_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<macro><name>VIDEO_FILTER_WRAPPER</name> <argument_list>(<argument>I420_I420_Scale</argument>)</argument_list></macro>

<function><type><specifier>static</specifier> <name>void</name></type> <name>I420_YV12_Scale</name> <parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>OMX_U8</name> <modifier>*</modifier></type><name><name>in</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name><name>instep</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PITCH</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMXSize</name></type> <name>insize</name> <init>= <expr><block>{ <expr><name>SRC_WIDTH</name></expr>, <expr><name>SRC_HEIGHT</name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U8</name> <modifier>*</modifier></type><name><name>out</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>dst</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name><name>outstep</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>dst</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>V_PITCH</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>U_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMXSize</name></type> <name>outsize</name> <init>= <expr><block>{ <expr><name>DST_WIDTH</name></expr>, <expr><name>DST_HEIGHT</name></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>omxIPCS_YCbCr420RszRot_U8_P3R</name> <argument_list>(

<argument><expr><name>in</name></expr></argument>, <argument><expr><name>instep</name></expr></argument>, <argument><expr><name>insize</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>outstep</name></expr></argument>, <argument><expr><name>outsize</name></expr></argument>,

<argument><expr><name>OMX_IP_NEAREST</name></expr></argument>, <argument><expr><name>OMX_IP_DISABLE</name></expr></argument>, <argument><expr><name>XRR_MAX</name></expr></argument>, <argument><expr><name>YRR_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<macro><name>VIDEO_FILTER_WRAPPER</name> <argument_list>(<argument>I420_YV12_Scale</argument>)</argument_list></macro>

<function><type><specifier>static</specifier> <name>void</name></type> <name>I420_RGB_Scale</name> <parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>OMX_U8</name> <modifier>*</modifier></type><name><name>in</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name><name>instep</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PITCH</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMXSize</name></type> <name>insize</name> <init>= <expr><block>{ <expr><name>SRC_WIDTH</name></expr>, <expr><name>SRC_HEIGHT</name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U8</name> <modifier>*</modifier></type><name>out</name> <init>= <expr><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>p_pixels</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name>outstep</name> <init>= <expr><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMXSize</name></type> <name>outsize</name> <init>= <expr><block>{ <expr><name>DST_WIDTH</name></expr>, <expr><name>DST_HEIGHT</name></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>omxIPCS_YCbCr420RszCscRotBGR_U8_P3C3R</name> <argument_list>(

<argument><expr><name>in</name></expr></argument>, <argument><expr><name>instep</name></expr></argument>, <argument><expr><name>insize</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>outstep</name></expr></argument>, <argument><expr><name>outsize</name></expr></argument>,

<argument><expr><name>CNV</name></expr></argument>, <argument><expr><name>OMX_IP_NEAREST</name></expr></argument>, <argument><expr><name>OMX_IP_DISABLE</name></expr></argument>, <argument><expr><name>XRR_MAX</name></expr></argument>, <argument><expr><name>YRR_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<macro><name>VIDEO_FILTER_WRAPPER</name> <argument_list>(<argument>I420_RGB_Scale</argument>)</argument_list></macro>

<function><type><specifier>static</specifier> <name>void</name></type> <name>YV12_I420_Scale</name> <parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>OMX_U8</name> <modifier>*</modifier></type><name><name>in</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name><name>instep</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PITCH</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMXSize</name></type> <name>insize</name> <init>= <expr><block>{ <expr><name>SRC_WIDTH</name></expr>, <expr><name>SRC_HEIGHT</name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U8</name> <modifier>*</modifier></type><name><name>out</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>dst</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name><name>outstep</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>dst</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>U_PITCH</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>V_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMXSize</name></type> <name>outsize</name> <init>= <expr><block>{ <expr><name>DST_WIDTH</name></expr>, <expr><name>DST_HEIGHT</name></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>omxIPCS_YCbCr420RszRot_U8_P3R</name> <argument_list>(

<argument><expr><name>in</name></expr></argument>, <argument><expr><name>instep</name></expr></argument>, <argument><expr><name>insize</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>outstep</name></expr></argument>, <argument><expr><name>outsize</name></expr></argument>,

<argument><expr><name>OMX_IP_NEAREST</name></expr></argument>, <argument><expr><name>OMX_IP_DISABLE</name></expr></argument>, <argument><expr><name>XRR_MAX</name></expr></argument>, <argument><expr><name>YRR_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<macro><name>VIDEO_FILTER_WRAPPER</name> <argument_list>(<argument>YV12_I420_Scale</argument>)</argument_list></macro>

<function><type><specifier>static</specifier> <name>void</name></type> <name>YV12_YV12_Scale</name> <parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>OMX_U8</name> <modifier>*</modifier></type><name><name>in</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name><name>instep</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PITCH</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMXSize</name></type> <name>insize</name> <init>= <expr><block>{ <expr><name>SRC_WIDTH</name></expr>, <expr><name>SRC_HEIGHT</name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U8</name> <modifier>*</modifier></type><name><name>out</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>dst</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name><name>outstep</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>dst</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>V_PITCH</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>U_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMXSize</name></type> <name>outsize</name> <init>= <expr><block>{ <expr><name>DST_WIDTH</name></expr>, <expr><name>DST_HEIGHT</name></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>omxIPCS_YCbCr420RszRot_U8_P3R</name> <argument_list>(

<argument><expr><name>in</name></expr></argument>, <argument><expr><name>instep</name></expr></argument>, <argument><expr><name>insize</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>outstep</name></expr></argument>, <argument><expr><name>outsize</name></expr></argument>,

<argument><expr><name>OMX_IP_NEAREST</name></expr></argument>, <argument><expr><name>OMX_IP_DISABLE</name></expr></argument>, <argument><expr><name>XRR_MAX</name></expr></argument>, <argument><expr><name>YRR_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<macro><name>VIDEO_FILTER_WRAPPER</name> <argument_list>(<argument>YV12_YV12_Scale</argument>)</argument_list></macro>

<function><type><specifier>static</specifier> <name>void</name></type> <name>YV12_RGB_Scale</name> <parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>OMX_U8</name> <modifier>*</modifier></type><name><name>in</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name><name>instep</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PITCH</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMXSize</name></type> <name>insize</name> <init>= <expr><block>{ <expr><name>SRC_WIDTH</name></expr>, <expr><name>SRC_HEIGHT</name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U8</name> <modifier>*</modifier></type><name>out</name> <init>= <expr><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>p_pixels</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name>outstep</name> <init>= <expr><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMXSize</name></type> <name>outsize</name> <init>= <expr><block>{ <expr><name>DST_WIDTH</name></expr>, <expr><name>DST_HEIGHT</name></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>omxIPCS_YCbCr420RszCscRotBGR_U8_P3C3R</name> <argument_list>(

<argument><expr><name>in</name></expr></argument>, <argument><expr><name>instep</name></expr></argument>, <argument><expr><name>insize</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>outstep</name></expr></argument>, <argument><expr><name>outsize</name></expr></argument>,

<argument><expr><name>CNV</name></expr></argument>, <argument><expr><name>OMX_IP_NEAREST</name></expr></argument>, <argument><expr><name>OMX_IP_DISABLE</name></expr></argument>, <argument><expr><name>XRR_MAX</name></expr></argument>, <argument><expr><name>YRR_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<macro><name>VIDEO_FILTER_WRAPPER</name> <argument_list>(<argument>YV12_RGB_Scale</argument>)</argument_list></macro>

<function><type><specifier>static</specifier> <name>void</name></type> <name>I422_I422_Scale</name> <parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>OMX_U8</name> <modifier>*</modifier></type><name><name>in</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name><name>instep</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PITCH</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMXSize</name></type> <name>insize</name> <init>= <expr><block>{ <expr><name>SRC_WIDTH</name></expr>, <expr><name>SRC_HEIGHT</name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U8</name> <modifier>*</modifier></type><name><name>out</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>dst</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name><name>outstep</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>dst</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>U_PITCH</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>V_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMXSize</name></type> <name>outsize</name> <init>= <expr><block>{ <expr><name>DST_WIDTH</name></expr>, <expr><name>DST_HEIGHT</name></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>omxIPCS_YCbCr422RszRot_U8_P3R</name> <argument_list>(

<argument><expr><name>in</name></expr></argument>, <argument><expr><name>instep</name></expr></argument>, <argument><expr><name>insize</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>outstep</name></expr></argument>, <argument><expr><name>outsize</name></expr></argument>,

<argument><expr><name>OMX_IP_NEAREST</name></expr></argument>, <argument><expr><name>OMX_IP_DISABLE</name></expr></argument>, <argument><expr><name>XRR_MAX</name></expr></argument>, <argument><expr><name>YRR_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<macro><name>VIDEO_FILTER_WRAPPER</name> <argument_list>(<argument>I422_I422_Scale</argument>)</argument_list></macro>

<function><type><specifier>static</specifier> <name>void</name></type> <name>I422_RGB_Scale</name> <parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>OMX_U8</name> <modifier>*</modifier></type><name><name>in</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name><name>instep</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PITCH</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMXSize</name></type> <name>insize</name> <init>= <expr><block>{ <expr><name>SRC_WIDTH</name></expr>, <expr><name>SRC_HEIGHT</name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_U8</name> <modifier>*</modifier></type><name>out</name> <init>= <expr><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>p_pixels</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_INT</name></type> <name>outstep</name> <init>= <expr><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMXSize</name></type> <name>outsize</name> <init>= <expr><block>{ <expr><name>DST_WIDTH</name></expr>, <expr><name>DST_HEIGHT</name></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>omxIPCS_YCbCr422RszCscRotBGR_U8_P3C3R</name> <argument_list>(

<argument><expr><name>in</name></expr></argument>, <argument><expr><name>instep</name></expr></argument>, <argument><expr><name>insize</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>outstep</name></expr></argument>, <argument><expr><name>outsize</name></expr></argument>,

<argument><expr><name>CNV</name></expr></argument>, <argument><expr><name>OMX_IP_NEAREST</name></expr></argument>, <argument><expr><name>OMX_IP_DISABLE</name></expr></argument>, <argument><expr><name>XRR_MAX</name></expr></argument>, <argument><expr><name>YRR_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<macro><name>VIDEO_FILTER_WRAPPER</name> <argument_list>(<argument>I422_RGB_Scale</argument>)</argument_list></macro>

<function><type><specifier>static</specifier> <name>int</name></type> <name>OpenScaler</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><operator>(</operator><name>filter_t</name> <operator>*</operator><operator>)</operator><name>obj</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>conv</name> <init>= <expr><call><name>vlc_obj_malloc</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><sizeof>sizeof <argument_list>(<argument><expr><operator>*</operator><name>conv</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>conv</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>p_sys</name></name> <operator>=</operator> <name>conv</name></expr>;</expr_stmt>

<switch>switch <condition>(<expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>VLC_CODEC_I420</name></expr>:</case>

<switch>switch <condition>(<expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>VLC_CODEC_I420</name></expr>:</case>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>I420_I420_Scale_Filter</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_YV12</name></expr>:</case>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>I420_YV12_Scale_Filter</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_RGB16</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><call><name>FixRV16</name> <argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>I420_RGB_Scale_Filter</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>conv</name> <operator>=</operator> <name>OMX_IP_BGR565</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_RGB15</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><call><name>FixRV15</name> <argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>I420_RGB_Scale_Filter</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>conv</name> <operator>=</operator> <name>OMX_IP_BGR555</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_RGB12</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><call><name>FixRV12</name> <argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>I420_RGB_Scale_Filter</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>conv</name> <operator>=</operator> <name>OMX_IP_BGR444</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_RGB24</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><call><name>FixRV24</name> <argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>I420_RGB_Scale_Filter</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>conv</name> <operator>=</operator> <name>OMX_IP_BGR888</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></switch>

<break>break;</break>

<case>case <expr><name>VLC_CODEC_YV12</name></expr>:</case>

<switch>switch <condition>(<expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>VLC_CODEC_I420</name></expr>:</case>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>YV12_I420_Scale_Filter</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_YV12</name></expr>:</case>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>YV12_YV12_Scale_Filter</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_RGB16</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><call><name>FixRV16</name> <argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>YV12_RGB_Scale_Filter</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>conv</name> <operator>=</operator> <name>OMX_IP_BGR565</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_RGB15</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><call><name>FixRV15</name> <argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>YV12_RGB_Scale_Filter</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>conv</name> <operator>=</operator> <name>OMX_IP_BGR555</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_RGB12</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><call><name>FixRV12</name> <argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>YV12_RGB_Scale_Filter</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>conv</name> <operator>=</operator> <name>OMX_IP_BGR444</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_RGB24</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><call><name>FixRV24</name> <argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>YV12_RGB_Scale_Filter</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>conv</name> <operator>=</operator> <name>OMX_IP_BGR888</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></switch>

<break>break;</break>

<case>case <expr><name>VLC_CODEC_I422</name></expr>:</case>

<switch>switch <condition>(<expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>VLC_CODEC_I422</name></expr>:</case>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>I422_I422_Scale_Filter</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_RGB16</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><call><name>FixRV16</name> <argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>I422_RGB_Scale_Filter</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>conv</name> <operator>=</operator> <name>OMX_IP_BGR565</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_RGB15</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><call><name>FixRV15</name> <argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>I422_RGB_Scale_Filter</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>conv</name> <operator>=</operator> <name>OMX_IP_BGR555</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_RGB12</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><call><name>FixRV12</name> <argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>I422_RGB_Scale_Filter</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>conv</name> <operator>=</operator> <name>OMX_IP_BGR444</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>VLC_CODEC_RGB24</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><call><name>FixRV24</name> <argument_list>(<argument><expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>I422_RGB_Scale_Filter</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>conv</name> <operator>=</operator> <name>OMX_IP_BGR888</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></switch>

<break>break;</break>

</block_content>}</block></switch>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></function>

</unit>
