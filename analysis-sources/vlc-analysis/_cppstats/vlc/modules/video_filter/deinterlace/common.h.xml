<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\video_filter\deinterlace\common.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_filter.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FFMAX</name><parameter_list>(<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__MAX(a,b)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FFMAX3</name><parameter_list>(<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>,<parameter><type><name>c</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>FFMAX(FFMAX(a,b),c)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FFMIN</name><parameter_list>(<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__MIN(a,b)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FFMIN3</name><parameter_list>(<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>,<parameter><type><name>c</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>FFMIN(FFMIN(a,b),c)</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>pi_date</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>pi_nb_fields</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>pb_top_field_first</name></decl>;</decl_stmt>

}</block></struct></type> <name>metadata_history_t</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>METADATA_SIZE</name></cpp:macro> <cpp:value>(3)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HISTORY_SIZE</name></cpp:macro> <cpp:value>(3)</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>bool</name></type> <name>b_double_rate</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>bool</name></type> <name>b_use_frame_history</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>bool</name></type> <name>b_custom_pts</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>bool</name></type> <name>b_half_height</name></decl>;</decl_stmt> 

}</block></struct></type> <name>deinterlace_algo</name>;</typedef>

<struct>struct <name>deinterlace_ctx</name>

<block>{

<decl_stmt><decl><type><name>deinterlace_algo</name></type> <name>settings</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>metadata_history_t</name></type> <name><name>meta</name><index>[<expr><name>METADATA_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_frame_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier></type><name><name>pp_history</name><index>[<expr><name>HISTORY_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

<union>union <block>{

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>pf_render_ordered</name>)<parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>p_dst</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>p_pic</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>order</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_field</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>pf_render_single_pic</name>)<parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>p_dst</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>p_pic</name></decl></parameter>)</parameter_list>;</function_decl>

}</block>;</union>

}</block>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEINTERLACE_DST_SIZE</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>

<function_decl><type><name>void</name></type> <name>InitDeinterlacingContext</name><parameter_list>( <parameter><decl><type><name><name>struct</name> <name>deinterlace_ctx</name></name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>vlc_tick_t</name></type> <name>GetFieldDuration</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>deinterlace_ctx</name></name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>picture_t</name> <modifier>*</modifier></type><name>p_pic</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>GetDeinterlacingOutput</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>deinterlace_ctx</name></name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>p_dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>p_src</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>picture_t</name> <modifier>*</modifier></type><name>DoDeinterlacing</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>deinterlace_ctx</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>FlushDeinterlacing</name><parameter_list>( <parameter><decl><type><name><name>struct</name> <name>deinterlace_ctx</name></name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>picture_t</name> <modifier>*</modifier></type><name>AllocPicture</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

</unit>
