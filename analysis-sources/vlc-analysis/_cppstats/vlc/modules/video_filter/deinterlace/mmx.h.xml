<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\video_filter\deinterlace\mmx.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<typedef>typedef <type><union>union <block>{

<decl_stmt><decl><type><name>int64_t</name></type> <name>q</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint64_t</name></type> <name>uq</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int32_t</name></type> <name><name>d</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>ud</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int16_t</name></type> <name><name>w</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>uw</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int8_t</name></type> <name><name>b</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>ub</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>float</name></type> <name><name>s</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt> 

}</block></union></type> <name>mmx_t</name>;</typedef> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mmx_i2r</name><parameter_list>(<parameter><type><name>op</name></type></parameter>,<parameter><type><name>imm</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__asm__ __volatile__ (#op " %0, %%" #reg : : "i" (imm) : #reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mmx_m2r</name><parameter_list>(<parameter><type><name>op</name></type></parameter>,<parameter><type><name>mem</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__asm__ __volatile__ (#op " %0, %%" #reg : : "m" (mem) : #reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mmx_r2m</name><parameter_list>(<parameter><type><name>op</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>,<parameter><type><name>mem</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__asm__ __volatile__ (#op " %%" #reg ", %0" : "=m" (mem) : : "memory")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mmx_r2r</name><parameter_list>(<parameter><type><name>op</name></type></parameter>,<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__asm__ __volatile__ (#op " %%" #regs ", %%" #regd ::: #regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>emms</name><parameter_list>()</parameter_list></cpp:macro> <cpp:value>__asm__ __volatile__ ("emms")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>movd_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (movd, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>movd_r2m</name><parameter_list>(<parameter><type><name>reg</name></type></parameter>,<parameter><type><name>var</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2m (movd, reg, var)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>movd_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (movd, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>movq_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (movq, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>movq_r2m</name><parameter_list>(<parameter><type><name>reg</name></type></parameter>,<parameter><type><name>var</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2m (movq, reg, var)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>movq_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (movq, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>packssdw_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (packssdw, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>packssdw_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (packssdw, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>packsswb_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (packsswb, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>packsswb_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (packsswb, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>packuswb_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (packuswb, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>packuswb_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (packuswb, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>paddb_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (paddb, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>paddb_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (paddb, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>paddd_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (paddd, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>paddd_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (paddd, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>paddw_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (paddw, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>paddw_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (paddw, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>paddsb_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (paddsb, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>paddsb_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (paddsb, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>paddsw_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (paddsw, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>paddsw_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (paddsw, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>paddusb_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (paddusb, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>paddusb_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (paddusb, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>paddusw_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (paddusw, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>paddusw_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (paddusw, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pand_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (pand, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pand_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (pand, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pandn_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (pandn, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pandn_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (pandn, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pcmpeqb_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (pcmpeqb, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pcmpeqb_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (pcmpeqb, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pcmpeqd_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (pcmpeqd, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pcmpeqd_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (pcmpeqd, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pcmpeqw_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (pcmpeqw, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pcmpeqw_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (pcmpeqw, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pcmpgtb_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (pcmpgtb, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pcmpgtb_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (pcmpgtb, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pcmpgtd_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (pcmpgtd, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pcmpgtd_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (pcmpgtd, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pcmpgtw_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (pcmpgtw, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pcmpgtw_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (pcmpgtw, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pmaddwd_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (pmaddwd, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pmaddwd_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (pmaddwd, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pmulhw_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (pmulhw, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pmulhw_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (pmulhw, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pmullw_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (pmullw, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pmullw_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (pmullw, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>por_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (por, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>por_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (por, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pslld_i2r</name><parameter_list>(<parameter><type><name>imm</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_i2r (pslld, imm, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pslld_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (pslld, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pslld_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (pslld, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psllq_i2r</name><parameter_list>(<parameter><type><name>imm</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_i2r (psllq, imm, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psllq_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (psllq, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psllq_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (psllq, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psllw_i2r</name><parameter_list>(<parameter><type><name>imm</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_i2r (psllw, imm, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psllw_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (psllw, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psllw_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (psllw, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psrad_i2r</name><parameter_list>(<parameter><type><name>imm</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_i2r (psrad, imm, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psrad_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (psrad, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psrad_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (psrad, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psraw_i2r</name><parameter_list>(<parameter><type><name>imm</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_i2r (psraw, imm, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psraw_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (psraw, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psraw_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (psraw, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psrld_i2r</name><parameter_list>(<parameter><type><name>imm</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_i2r (psrld, imm, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psrld_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (psrld, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psrld_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (psrld, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psrlq_i2r</name><parameter_list>(<parameter><type><name>imm</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_i2r (psrlq, imm, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psrlq_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (psrlq, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psrlq_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (psrlq, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psrlw_i2r</name><parameter_list>(<parameter><type><name>imm</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_i2r (psrlw, imm, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psrlw_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (psrlw, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psrlw_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (psrlw, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psubb_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (psubb, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psubb_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (psubb, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psubd_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (psubd, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psubd_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (psubd, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psubw_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (psubw, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psubw_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (psubw, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psubsb_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (psubsb, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psubsb_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (psubsb, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psubsw_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (psubsw, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psubsw_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (psubsw, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psubusb_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (psubusb, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psubusb_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (psubusb, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psubusw_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (psubusw, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psubusw_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (psubusw, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>punpckhbw_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (punpckhbw, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>punpckhbw_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (punpckhbw, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>punpckhdq_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (punpckhdq, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>punpckhdq_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (punpckhdq, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>punpckhwd_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (punpckhwd, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>punpckhwd_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (punpckhwd, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>punpcklbw_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (punpcklbw, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>punpcklbw_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (punpcklbw, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>punpckldq_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (punpckldq, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>punpckldq_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (punpckldq, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>punpcklwd_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (punpcklwd, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>punpcklwd_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (punpcklwd, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pxor_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (pxor, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pxor_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (pxor, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pavgusb_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (pavgusb, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pavgusb_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (pavgusb, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mmx_m2ri</name><parameter_list>(<parameter><type><name>op</name></type></parameter>,<parameter><type><name>mem</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>,<parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__asm__ __volatile__ (#op " %1, %0, %%" #reg : : "X" (mem), "X" (imm) : #reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mmx_r2ri</name><parameter_list>(<parameter><type><name>op</name></type></parameter>,<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>,<parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__asm__ __volatile__ (#op " %0, %%" #regs ", %%" #regd : : "X" (imm) : #regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mmx_fetch</name><parameter_list>(<parameter><type><name>mem</name></type></parameter>,<parameter><type><name>hint</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__asm__ __volatile__ ("prefetch" #hint " %0" : : "X" (mem))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>maskmovq</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>maskreg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2ri (maskmovq, regs, maskreg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>movntq_r2m</name><parameter_list>(<parameter><type><name>mmreg</name></type></parameter>,<parameter><type><name>var</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2m (movntq, mmreg, var)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pavgb_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (pavgb, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pavgb_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (pavgb, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pavgw_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (pavgw, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pavgw_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (pavgw, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pextrw_r2r</name><parameter_list>(<parameter><type><name>mmreg</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>,<parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2ri (pextrw, mmreg, reg, imm)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pinsrw_r2r</name><parameter_list>(<parameter><type><name>reg</name></type></parameter>,<parameter><type><name>mmreg</name></type></parameter>,<parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2ri (pinsrw, reg, mmreg, imm)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pmaxsw_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (pmaxsw, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pmaxsw_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (pmaxsw, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pmaxub_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (pmaxub, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pmaxub_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (pmaxub, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pminsw_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (pminsw, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pminsw_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (pminsw, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pminub_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (pminub, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pminub_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (pminub, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pmovmskb</name><parameter_list>(<parameter><type><name>mmreg</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__asm__ __volatile__ ("movmskps %" #mmreg ", %" #reg : : : #reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pmulhuw_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (pmulhuw, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pmulhuw_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (pmulhuw, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prefetcht0</name><parameter_list>(<parameter><type><name>mem</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_fetch (mem, t0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prefetcht1</name><parameter_list>(<parameter><type><name>mem</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_fetch (mem, t1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prefetcht2</name><parameter_list>(<parameter><type><name>mem</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_fetch (mem, t2)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prefetchnta</name><parameter_list>(<parameter><type><name>mem</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_fetch (mem, nta)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psadbw_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2r (psadbw, var, reg)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>psadbw_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2r (psadbw, regs, regd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pshufw_m2r</name><parameter_list>(<parameter><type><name>var</name></type></parameter>,<parameter><type><name>reg</name></type></parameter>,<parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_m2ri(pshufw, var, reg, imm)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pshufw_r2r</name><parameter_list>(<parameter><type><name>regs</name></type></parameter>,<parameter><type><name>regd</name></type></parameter>,<parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mmx_r2ri(pshufw, regs, regd, imm)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>sfence</name><parameter_list>()</parameter_list></cpp:macro> <cpp:value>__asm__ __volatile__ ("sfence\n\t")</cpp:value></cpp:define>

</unit>
