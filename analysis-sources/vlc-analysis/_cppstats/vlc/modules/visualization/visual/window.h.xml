<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\visualization\visual\window.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<enum>enum <name>_enum_window_type</name> <block>{ <decl><name>NONE</name></decl>, <decl><name>HANN</name></decl>, <decl><name>FLATTOP</name></decl>, <decl><name>BLACKMANHARRIS</name></decl>, <decl><name>KAISER</name></decl> }</block>;</enum>

<struct>struct <name>_struct_window_context</name> <block>{

<decl_stmt><decl><type><name>float</name> <modifier>*</modifier></type> <name>pf_window_table</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_buffer_size</name></decl>;</decl_stmt>

}</block>;</struct>

<typedef>typedef <type><name><name>enum</name> <name>_enum_window_type</name></name></type> <name>window_type</name>;</typedef>

<struct>struct <name>_struct_window_param</name> <block>{

<decl_stmt><decl><type><name>window_type</name></type> <name>wind_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>f_kaiser_alpha</name></decl>;</decl_stmt>

}</block>;</struct>

<typedef>typedef <type><name><name>struct</name> <name>_struct_window_context</name></name></type> <name>window_context</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>_struct_window_param</name></name></type> <name>window_param</name>;</typedef>

<function_decl><type><name>void</name></type> <name>window_get_param</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type> <name>p_aout</name></decl></parameter>, <parameter><decl><type><name>window_param</name> <modifier>*</modifier></type> <name>p_param</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> <name>window_init</name><parameter_list>( <parameter><decl><type><name>int</name></type> <name>i_buffer_size</name></decl></parameter>, <parameter><decl><type><name>window_param</name> <modifier>*</modifier></type> <name>p_param</name></decl></parameter>,

<parameter><decl><type><name>window_context</name> <modifier>*</modifier></type> <name>p_ctx</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>window_scale_in_place</name><parameter_list>( <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type> <name>p_buffer</name></decl></parameter>, <parameter><decl><type><name>window_context</name> <modifier>*</modifier></type> <name>p_ctx</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>window_close</name><parameter_list>( <parameter><decl><type><name>window_context</name> <modifier>*</modifier></type> <name>p_ctx</name></decl></parameter> )</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEFINE_WIND_CONTEXT</name><parameter_list>(<parameter><type><name>name</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>window_context name = {NULL, 0}</cpp:value></cpp:define>

</unit>
