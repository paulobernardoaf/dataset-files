<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\access\http\h2frame.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdbool.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<struct>struct <name>vlc_h2_frame</name>

<block>{

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_h2_frame</name></name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>data</name><index>[]</index></name></decl>;</decl_stmt>

}</block>;</struct>

<function_decl><type><name>size_t</name></type> <name>vlc_h2_frame_size</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_h2_frame</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>vlc_h2_frame</name></name> <modifier>*</modifier></type>

<name>vlc_h2_frame_headers</name><parameter_list>(<parameter><decl><type><name>uint_fast32_t</name></type> <name>stream_id</name></decl></parameter>, <parameter><decl><type><name>uint_fast32_t</name></type> <name>mtu</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>eos</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name></type> <name>count</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>headers</name><index>[]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>vlc_h2_frame</name></name> <modifier>*</modifier></type>

<name>vlc_h2_frame_data</name><parameter_list>(<parameter><decl><type><name>uint_fast32_t</name></type> <name>stream_id</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>eos</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>vlc_h2_frame</name></name> <modifier>*</modifier></type>

<name>vlc_h2_frame_rst_stream</name><parameter_list>(<parameter><decl><type><name>uint_fast32_t</name></type> <name>stream_id</name></decl></parameter>, <parameter><decl><type><name>uint_fast32_t</name></type> <name>error_code</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>vlc_h2_frame</name></name> <modifier>*</modifier></type><name>vlc_h2_frame_settings</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>vlc_h2_frame</name></name> <modifier>*</modifier></type><name>vlc_h2_frame_settings_ack</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>vlc_h2_frame</name></name> <modifier>*</modifier></type><name>vlc_h2_frame_ping</name><parameter_list>(<parameter><decl><type><name>uint64_t</name></type> <name>opaque</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>vlc_h2_frame</name></name> <modifier>*</modifier></type><name>vlc_h2_frame_pong</name><parameter_list>(<parameter><decl><type><name>uint64_t</name></type> <name>opaque</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>vlc_h2_frame</name></name> <modifier>*</modifier></type>

<name>vlc_h2_frame_goaway</name><parameter_list>(<parameter><decl><type><name>uint_fast32_t</name></type> <name>last_stream_id</name></decl></parameter>, <parameter><decl><type><name>uint_fast32_t</name></type> <name>error_code</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>vlc_h2_frame</name></name> <modifier>*</modifier></type>

<name>vlc_h2_frame_window_update</name><parameter_list>(<parameter><decl><type><name>uint_fast32_t</name></type> <name>stream_id</name></decl></parameter>, <parameter><decl><type><name>uint_fast32_t</name></type> <name>credit</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>vlc_h2_frame_dump</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_h2_frame</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<enum>enum <name>vlc_h2_error</name> <block>{

<decl><name>VLC_H2_NO_ERROR</name></decl>,

<decl><name>VLC_H2_PROTOCOL_ERROR</name></decl>,

<decl><name>VLC_H2_INTERNAL_ERROR</name></decl>,

<decl><name>VLC_H2_FLOW_CONTROL_ERROR</name></decl>,

<decl><name>VLC_H2_SETTINGS_TIMEOUT</name></decl>,

<decl><name>VLC_H2_STREAM_CLOSED</name></decl>,

<decl><name>VLC_H2_FRAME_SIZE_ERROR</name></decl>,

<decl><name>VLC_H2_REFUSED_STREAM</name></decl>,

<decl><name>VLC_H2_CANCEL</name></decl>,

<decl><name>VLC_H2_COMPRESSION_ERROR</name></decl>,

<decl><name>VLC_H2_CONNECT_ERROR</name></decl>,

<decl><name>VLC_H2_ENHANCE_YOUR_CALM</name></decl>,

<decl><name>VLC_H2_INADEQUATE_SECURITY</name></decl>,

<decl><name>VLC_H2_HTTP_1_1_REQUIRED</name></decl>,

}</block>;</enum>

<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>vlc_h2_strerror</name><parameter_list>(<parameter><decl><type><name>uint_fast32_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<enum>enum <name>vlc_h2_setting</name> <block>{

<decl><name>VLC_H2_SETTING_HEADER_TABLE_SIZE</name> <init>= <expr><literal type="number">0x0001</literal></expr></init></decl>,

<decl><name>VLC_H2_SETTING_ENABLE_PUSH</name></decl>,

<decl><name>VLC_H2_SETTING_MAX_CONCURRENT_STREAMS</name></decl>,

<decl><name>VLC_H2_SETTING_INITIAL_WINDOW_SIZE</name></decl>,

<decl><name>VLC_H2_SETTING_MAX_FRAME_SIZE</name></decl>,

<decl><name>VLC_H2_SETTING_MAX_HEADER_LIST_SIZE</name></decl>,

}</block>;</enum>

<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>vlc_h2_setting_name</name><parameter_list>(<parameter><decl><type><name>uint_fast16_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_H2_MAX_HEADER_TABLE</name></cpp:macro> <cpp:value>4096</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_H2_MAX_STREAMS</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_H2_INIT_WINDOW</name></cpp:macro> <cpp:value>1048575</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_H2_MAX_FRAME</name></cpp:macro> <cpp:value>1048576</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_H2_MAX_HEADER_LIST</name></cpp:macro> <cpp:value>65536</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_H2_DEFAULT_MAX_HEADER_TABLE</name></cpp:macro> <cpp:value>4096</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_H2_DEFAULT_INIT_WINDOW</name></cpp:macro> <cpp:value>65535</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_H2_DEFAULT_MAX_FRAME</name></cpp:macro> <cpp:value>16384</cpp:value></cpp:define>

<struct_decl>struct <name>vlc_h2_parser</name>;</struct_decl>

<struct>struct <name>vlc_h2_parser_cbs</name>

<block>{

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>setting</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>uint_fast16_t</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>uint_fast32_t</name></type> <name>value</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>settings_done</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>ping</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>uint_fast64_t</name></type> <name>opaque</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>error</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>uint_fast32_t</name></type> <name>code</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>reset</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>uint_fast32_t</name></type> <name>last_seq</name></decl></parameter>, <parameter><decl><type><name>uint_fast32_t</name></type> <name>code</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>window_status</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>rcwd</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>window_update</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>uint_fast32_t</name></type> <name>credit</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>stream_lookup</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>uint_fast32_t</name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>stream_error</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>uint_fast32_t</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>uint_fast32_t</name></type> <name>code</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>stream_headers</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>count</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>headers</name><index>[]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>stream_data</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>vlc_h2_frame</name></name> <modifier>*</modifier></type><name>f</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>stream_end</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>stream_reset</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>uint_fast32_t</name></type> <name>code</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>stream_window_update</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>uint_fast32_t</name></type> <name>credit</name></decl></parameter>)</parameter_list>;</function_decl>

}</block>;</struct>

<function_decl><type><name><name>struct</name> <name>vlc_h2_parser</name></name> <modifier>*</modifier></type><name>vlc_h2_parse_init</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_h2_parser_cbs</name></name> <modifier>*</modifier></type><name>cbs</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>vlc_h2_parse</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_h2_parser</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>vlc_h2_frame</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>vlc_h2_parse_destroy</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_h2_parser</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_H2_MAX_HEADERS</name></cpp:macro> <cpp:value>255</cpp:value></cpp:define>

<function_decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>vlc_h2_frame_data_get</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_h2_frame</name></name> <modifier>*</modifier></type><name>f</name></decl></parameter>,

<parameter><decl><type><name>size_t</name> <modifier>*</modifier><specifier>restrict</specifier></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vlc_h2_frame_data_get</name><parameter_list>(<parameter><type><name>f</name></type></parameter>, <parameter><type><name>l</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_Generic((f), const struct vlc_h2_frame *: (vlc_h2_frame_data_get)(f, l), struct vlc_h2_frame *: (uint8_t *)(vlc_h2_frame_data_get)(f, l))</cpp:value></cpp:define>

</unit>
