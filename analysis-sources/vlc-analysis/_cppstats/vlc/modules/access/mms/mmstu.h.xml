<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\access\mms\mmstu.h"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMS_PACKET_ANY</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMS_PACKET_CMD</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMS_PACKET_HEADER</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMS_PACKET_MEDIA</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMS_PACKET_UDP_TIMING</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMS_CMD_HEADERSIZE</name></cpp:macro> <cpp:value>48</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMS_BUFFER_SIZE</name></cpp:macro> <cpp:value>100000</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>int</name></type> <name>i_proto</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>i_handle_tcp</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>i_handle_udp</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>char</name></type> <name><name>sz_bind_addr</name><index>[<expr><name>NI_MAXNUMERICHOST</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>vlc_url_t</name></type> <name>url</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>i_position</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>i_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>asf_header_t</name></type> <name>asfh</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>i_timeout</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>buffer_tcp</name><index>[<expr><name>MMS_BUFFER_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>i_buffer_tcp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>buffer_udp</name><index>[<expr><name>MMS_BUFFER_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>i_buffer_udp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_guid_t</name></type> <name>guid</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_command_level</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_seq_num</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>i_header_packet_id_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>i_media_packet_id_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_packet_seq_num</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>p_cmd</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>size_t</name></type> <name>i_cmd</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>p_header</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>size_t</name></type> <name>i_header</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>p_media</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>size_t</name></type> <name>i_media</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>i_media_used</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_command</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>i_flags_broadcast</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>i_media_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>i_packet_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>i_packet_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>i_max_bit_rate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>i_header_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_seekable</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_eof</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>lock_netwrite</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_keep_alive</name></decl>;</decl_stmt>

<struct>struct <block>{

<decl_stmt><decl><type><name>vlc_thread_t</name></type> <name>thread</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_sem_t</name></type> <name>sem</name></decl>;</decl_stmt>

}</block> <decl><name>keep_alive</name></decl>;</struct>

}</block></struct></type> <name>access_sys_t</name>;</typedef>

</unit>
