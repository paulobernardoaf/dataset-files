<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\access\mms\mms.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_access.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mms.h"</cpp:file></cpp:include>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Open</name> <parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALL_TEXT</name></cpp:macro> <cpp:value>N_("Force selection of all streams")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALL_LONGTEXT</name></cpp:macro> <cpp:value>N_( "MMS streams can contain several elementary streams, with different " "bitrates. You can choose to select all of them." )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITRATE_TEXT</name></cpp:macro> <cpp:value>N_( "Maximum bitrate" )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITRATE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Select the stream with the maximum bitrate under that limit." )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TIMEOUT_TEXT</name></cpp:macro> <cpp:value>N_("TCP/UDP timeout (ms)")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TIMEOUT_LONGTEXT</name></cpp:macro> <cpp:value>N_("Amount of time (in ms) to wait before aborting network reception of data. Note that there will be 10 retries before completely giving up.")</cpp:value></cpp:define>

<macro><name>vlc_module_begin</name> <argument_list>()</argument_list></macro>

<macro><name>set_shortname</name><argument_list>( <argument><literal type="string">"MMS"</literal></argument> )</argument_list></macro>

<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"Microsoft Media Server (MMS) input"</literal>)</argument> )</argument_list></macro>

<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"access"</literal></argument>, <argument>-<literal type="number">1</literal></argument> )</argument_list></macro>

<macro><name>set_category</name><argument_list>( <argument>CAT_INPUT</argument> )</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_INPUT_ACCESS</argument> )</argument_list></macro>

<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"mms-timeout"</literal></argument>, <argument><literal type="number">5000</literal></argument>, <argument>TIMEOUT_TEXT</argument>, <argument>TIMEOUT_LONGTEXT</argument>,

<argument>true</argument> )</argument_list></macro>

<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"mms-all"</literal></argument>, <argument>false</argument>, <argument>ALL_TEXT</argument>, <argument>ALL_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>

<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"mms-maxbitrate"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>BITRATE_TEXT</argument>, <argument>BITRATE_LONGTEXT</argument> ,

<argument>false</argument> )</argument_list></macro>

<macro><name>add_obsolete_string</name><argument_list>( <argument><literal type="string">"mmsh-proxy"</literal></argument> )</argument_list></macro> 

<macro><name>add_shortcut</name><argument_list>( <argument><literal type="string">"mms"</literal></argument>, <argument><literal type="string">"mmsu"</literal></argument>, <argument><literal type="string">"mmst"</literal></argument>, <argument><literal type="string">"mmsh"</literal></argument> )</argument_list></macro>

<macro><name>set_callbacks</name><argument_list>( <argument>Open</argument>, <argument>Close</argument> )</argument_list></macro>

<macro><name>vlc_module_end</name> <argument_list>()</argument_list></macro>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>int</name></type> <name>i_proto</name></decl>;</decl_stmt>

}</block></struct></type> <name>access_sys_t</name>;</typedef>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Open</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name> <init>= <expr><operator>(</operator><name>stream_t</name><operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>strncmp</name><argument_list>( <argument><expr><name><name>p_access</name><operator>-&gt;</operator><name>psz_name</name></name></expr></argument>, <argument><expr><literal type="string">"mmsu"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><call><name>MMSTUOpen</name> <argument_list>( <argument><expr><name>p_access</name></expr></argument> )</argument_list></call></expr>;</return></block_content></block></if>

<if type="elseif">else if<condition>( <expr><operator>!</operator><call><name>strncmp</name><argument_list>( <argument><expr><name><name>p_access</name><operator>-&gt;</operator><name>psz_name</name></name></expr></argument>, <argument><expr><literal type="string">"mmst"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><call><name>MMSTUOpen</name> <argument_list>( <argument><expr><name>p_access</name></expr></argument> )</argument_list></call></expr>;</return></block_content></block></if>

<if type="elseif">else if<condition>( <expr><operator>!</operator><call><name>strncmp</name><argument_list>( <argument><expr><name><name>p_access</name><operator>-&gt;</operator><name>psz_name</name></name></expr></argument>, <argument><expr><literal type="string">"mmsh"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><call><name>MMSHOpen</name> <argument_list>( <argument><expr><name>p_access</name></expr></argument> )</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><call><name>MMSTUOpen</name> <argument_list>( <argument><expr><name>p_access</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content> 

<return>return <expr><call><name>MMSHOpen</name> <argument_list>( <argument><expr><name>p_access</name></expr></argument> )</argument_list></call></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name> <init>= <expr><operator>(</operator><name>stream_t</name><operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>(</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_proto</name></name> <operator>==</operator> <name>MMS_PROTO_TCP</name> <operator>)</operator> <operator>||</operator>

<operator>(</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_proto</name></name> <operator>==</operator> <name>MMS_PROTO_UDP</name> <operator>)</operator></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>MMSTUClose</name> <argument_list>( <argument><expr><name>p_access</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_proto</name></name> <operator>==</operator> <name>MMS_PROTO_HTTP</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>MMSHClose</name> <argument_list>( <argument><expr><name>p_access</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

</unit>
