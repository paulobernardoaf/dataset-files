<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\access\mms\mmsh.h"><typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>uint16_t</name></type> <name>i_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>i_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>i_sequence</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>i_unknown</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>i_size2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>p_data</name></decl>;</decl_stmt>

}</block></struct></type> <name>chunk_t</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BUFFER_SIZE</name></cpp:macro> <cpp:value>65536</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>int</name></type> <name>i_proto</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_tls</name></name> <modifier>*</modifier></type><name>stream</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_url_t</name></type> <name>url</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_proxy</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_url_t</name></type> <name>proxy</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_request_context</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>buffer</name><index>[<expr><name>BUFFER_SIZE</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_broadcast</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>p_header</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_header</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>p_packet</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>i_packet_sequence</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_packet_used</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_packet_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>i_start</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>i_position</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>asf_header_t</name></type> <name>asfh</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_guid_t</name></type> <name>guid</name></decl>;</decl_stmt>

}</block></struct></type> <name>access_sys_t</name>;</typedef>

</unit>
