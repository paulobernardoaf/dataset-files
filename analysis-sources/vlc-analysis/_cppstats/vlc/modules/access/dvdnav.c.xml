<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\access\dvdnav.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/stat.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;fcntl.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;errno.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;unistd.h&gt;</cpp:file></cpp:include> 

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_input.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_access.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_demux.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_charset.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_fs.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_mouse.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_dialog.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_iso_lang.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../src/text/iso-639_def.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dvdnav/dvdnav.h&gt;</cpp:file></cpp:include>

<function_decl><type><name>dvdnav_status_t</name></type> <name>dvdnav_jump_to_sector_by_time</name><parameter_list>(<parameter><decl><type><name>dvdnav_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>int32_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../demux/mpeg/pes.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../demux/mpeg/ps.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../demux/timestamps_filter.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ANGLE_TEXT</name></cpp:macro> <cpp:value>N_("DVD angle")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ANGLE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Default DVD angle." )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MENU_TEXT</name></cpp:macro> <cpp:value>N_("Start directly in menu")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MENU_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Start the DVD directly in the main menu. This ""will try to skip all the useless warning introductions." )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LANGUAGE_DEFAULT</name></cpp:macro> <cpp:value>("en")</cpp:value></cpp:define>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>AccessDemuxOpen</name> <parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>DemuxOpen</name> <parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<macro><name>vlc_module_begin</name> <argument_list>()</argument_list></macro>

<macro><name>set_shortname</name><argument_list>( <argument>N_(<literal type="string">"DVD with menus"</literal>)</argument> )</argument_list></macro>

<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"DVDnav Input"</literal>)</argument> )</argument_list></macro>

<macro><name>set_category</name><argument_list>( <argument>CAT_INPUT</argument> )</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_INPUT_ACCESS</argument> )</argument_list></macro>

<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"dvdnav-angle"</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>ANGLE_TEXT</argument>,

<argument>ANGLE_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>

<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"dvdnav-menu"</literal></argument>, <argument>true</argument>,

<argument>MENU_TEXT</argument>, <argument>MENU_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>

<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"access"</literal></argument>, <argument><literal type="number">305</literal></argument> )</argument_list></macro>

<macro><name>add_shortcut</name><argument_list>( <argument><literal type="string">"dvd"</literal></argument>, <argument><literal type="string">"dvdnav"</literal></argument>, <argument><literal type="string">"file"</literal></argument> )</argument_list></macro>

<macro><name>set_callbacks</name><argument_list>( <argument>AccessDemuxOpen</argument>, <argument>Close</argument> )</argument_list></macro>

<macro><name>add_submodule</name><argument_list>()</argument_list></macro>

<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"DVDnav demuxer"</literal>)</argument> )</argument_list></macro>

<macro><name>set_category</name><argument_list>( <argument>CAT_INPUT</argument> )</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_INPUT_DEMUX</argument> )</argument_list></macro>

<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"demux"</literal></argument>, <argument><literal type="number">5</literal></argument> )</argument_list></macro>

<macro><name>set_callbacks</name><argument_list>( <argument>DemuxOpen</argument>, <argument>Close</argument> )</argument_list></macro>

<macro><name>add_shortcut</name><argument_list>( <argument><literal type="string">"dvd"</literal></argument>, <argument><literal type="string">"iso"</literal></argument> )</argument_list></macro>

<macro><name>vlc_module_end</name> <argument_list>()</argument_list></macro>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__OS2__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DVD_READ_CACHE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DVD_READ_CACHE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BLOCK_FLAG_CELL_DISCONTINUITY</name></cpp:macro> <cpp:value>(BLOCK_FLAG_PRIVATE_SHIFT &lt;&lt; 1)</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>dvdnav_t</name> <modifier>*</modifier></type><name>dvdnav</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>p_tf_out</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_reset_pcr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_readahead</name></decl>;</decl_stmt>

<struct>struct

<block>{

<decl_stmt><decl><type><name>bool</name></type> <name>b_created</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_enabled</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>lock</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_timer_t</name></type> <name>timer</name></decl>;</decl_stmt>

}</block> <decl><name>still</name></decl>;</struct>

<decl_stmt><decl><type><name>ps_track_t</name></type> <name><name>tk</name><index>[<expr><name>PS_TK_COUNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_mux_rate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>event_lock</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>es_out_id_t</name> <modifier>*</modifier></type><name>spu_es</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>clut</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_spu_change</name></decl>;</decl_stmt>

<struct>struct

<block>{

<decl_stmt><decl><type><name>bool</name></type> <name>b_pending</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_from_user</name></decl>;</decl_stmt>

}</block> <decl><name>highlight</name></decl>;</struct>

<struct>struct <block>{

<decl_stmt><decl><type><name>unsigned</name></type> <name>i_num</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>i_den</name></decl>;</decl_stmt>

}</block> <decl><name>sar</name></decl>;</struct>

<decl_stmt><decl><type><name>int</name></type> <name>i_title</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>input_title_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>title</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>cur_title</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>cur_seekpoint</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>updates</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_pgc_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_vobu_index</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_vobu_flush</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_mouse_t</name></type> <name>oldmouse</name></decl>;</decl_stmt>

}</block></struct></type> <name>demux_sys_t</name>;</typedef>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Control</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>va_list</name></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Demux</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>DemuxBlock</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>DemuxForceStill</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>DemuxTitles</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>ESSubtitleUpdate</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>ButtonUpdate</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>bool</name></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>ESNew</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>ProbeDVD</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type><name>DemuxGetLanguageCode</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_var</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>ControlInternal</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>StillTimer</name><parameter_list>( <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>EventMouse</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>vlc_mouse_t</name> <modifier>*</modifier></type><name>mouse</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_data</name></decl></parameter> )</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>DVDNAV_VERSION</name> <operator>&gt;=</operator> <literal type="number">60100</literal></expr></cpp:if>

<function><type><specifier>static</specifier> <name>void</name></type> <name>DvdNavLog</name><parameter_list>( <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>foo</name></decl></parameter>, <parameter><decl><type><name>dvdnav_logger_level_t</name></type> <name>i</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>z</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_GenericVa</name><argument_list>( <argument><expr><operator>(</operator><name>demux_t</name><operator>*</operator><operator>)</operator><name>foo</name></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><name>p</name></expr></argument>, <argument><expr><name>z</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><specifier>static</specifier> <name>int</name></type> <name>CommonOpen</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter>,

<parameter><decl><type><name>dvdnav_t</name> <modifier>*</modifier></type><name>p_dvdnav</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b_readahead</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name> <init>= <expr><operator>(</operator><name>demux_t</name><operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_angle</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_code</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><name>p_dvdnav</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DEMUX_INIT_COMMON</name><argument_list>()</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>p_sys</name> <operator>=</operator> <name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name> <operator>=</operator> <name>p_dvdnav</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_tf_out</name></name> <operator>=</operator> <call><name>timestamps_filter_es_out_New</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>out</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_sys</name><operator>-&gt;</operator><name>p_tf_out</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>ps_track_init</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>tk</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_readahead</name></name> <operator>=</operator> <name>b_readahead</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mouse_Init</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>oldmouse</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_set_readahead_flag</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_readahead</name></name></expr></argument> )</argument_list></call> <operator>!=</operator>

<name>DVDNAV_STATUS_OK</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"cannot set read-a-head flag"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_set_PGC_positioning_flag</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument> )</argument_list></call> <operator>!=</operator>

<name>DVDNAV_STATUS_OK</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"cannot set PGC positioning flag"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>psz_code</name> <operator>=</operator> <call><name>DemuxGetLanguageCode</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"menu-language"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_menu_language_select</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name>psz_code</name></expr></argument> )</argument_list></call> <operator>!=</operator>

<name>DVDNAV_STATUS_OK</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"can't set menu language to '%s' (%s)"</literal></expr></argument>,

<argument><expr><name>psz_code</name></expr></argument>, <argument><expr><call><name>dvdnav_err_to_string</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>strcmp</name><argument_list>( <argument><expr><name>psz_code</name></expr></argument>, <argument><expr><name>LANGUAGE_DEFAULT</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>dvdnav_menu_language_select</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><operator>(</operator><name>char</name><operator>*</operator><operator>)</operator><name>LANGUAGE_DEFAULT</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>psz_code</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>psz_code</name> <operator>=</operator> <call><name>DemuxGetLanguageCode</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"audio-language"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_audio_language_select</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name>psz_code</name></expr></argument> )</argument_list></call> <operator>!=</operator>

<name>DVDNAV_STATUS_OK</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"can't set audio language to '%s' (%s)"</literal></expr></argument>,

<argument><expr><name>psz_code</name></expr></argument>, <argument><expr><call><name>dvdnav_err_to_string</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>strcmp</name><argument_list>( <argument><expr><name>psz_code</name></expr></argument>, <argument><expr><name>LANGUAGE_DEFAULT</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>dvdnav_audio_language_select</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><operator>(</operator><name>char</name><operator>*</operator><operator>)</operator><name>LANGUAGE_DEFAULT</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>psz_code</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>psz_code</name> <operator>=</operator> <call><name>DemuxGetLanguageCode</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"sub-language"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_spu_language_select</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name>psz_code</name></expr></argument> )</argument_list></call> <operator>!=</operator>

<name>DVDNAV_STATUS_OK</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"can't set spu language to '%s' (%s)"</literal></expr></argument>,

<argument><expr><name>psz_code</name></expr></argument>, <argument><expr><call><name>dvdnav_err_to_string</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>strcmp</name><argument_list>( <argument><expr><name>psz_code</name></expr></argument>, <argument><expr><name>LANGUAGE_DEFAULT</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>dvdnav_spu_language_select</name><argument_list>(<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><operator>(</operator><name>char</name><operator>*</operator><operator>)</operator><name>LANGUAGE_DEFAULT</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>psz_code</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DemuxTitles</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>var_CreateGetBool</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"dvdnav-menu"</literal></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"trying to go to dvd menu"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_title_play</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <name>DVDNAV_STATUS_OK</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"cannot set title (can't decrypt DVD?)"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_dialog_display_error</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><call><name>_</name><argument_list>(<argument><expr><literal type="string">"Playback failure"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"%s"</literal></expr></argument>,

<argument><expr><call><name>_</name><argument_list>(<argument><expr><literal type="string">"VLC cannot set the DVD's title. It possibly "</literal>

<literal type="string">"cannot decrypt the entire disc."</literal></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>timestamps_filter_es_out_Delete</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_tf_out</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_menu_call</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name>DVD_MENU_Title</name></expr></argument> )</argument_list></call> <operator>!=</operator>

<name>DVDNAV_STATUS_OK</name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_menu_call</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name>DVD_MENU_Root</name></expr></argument> )</argument_list></call> <operator>!=</operator>

<name>DVDNAV_STATUS_OK</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"cannot go to dvd menu"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>i_angle</name> <operator>=</operator> <call><name>var_CreateGetInteger</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"dvdnav-angle"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i_angle</name> <operator>&lt;=</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>i_angle</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>still</name><operator>.</operator><name>b_enabled</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_init</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>still</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_init</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>event_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>vlc_timer_create</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>still</name><operator>.</operator><name>timer</name></name></expr></argument>, <argument><expr><name>StillTimer</name></expr></argument>, <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>still</name><operator>.</operator><name>b_created</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>AccessDemuxOpen</name> <parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name> <init>= <expr><operator>(</operator><name>demux_t</name><operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>dvdnav_t</name> <modifier>*</modifier></type><name>p_dvdnav</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_file</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_path</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name> <init>= <expr><name>VLC_EGENERIC</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>forced</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>p_demux</name><operator>-&gt;</operator><name>out</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>strncasecmp</name><argument_list>(<argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>psz_url</name></name></expr></argument>, <argument><expr><literal type="string">"dvd"</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>forced</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_demux</name><operator>-&gt;</operator><name>psz_filepath</name></name> <operator>||</operator> <operator>!</operator><operator>*</operator><name><name>p_demux</name><operator>-&gt;</operator><name>psz_filepath</name></name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name>forced</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>psz_file</name> <operator>=</operator> <call><name>var_InheritString</name><argument_list>( <argument><expr><name>p_this</name></expr></argument>, <argument><expr><literal type="string">"dvd"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name>psz_file</name> <operator>=</operator> <call><name>strdup</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>psz_filepath</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>( <argument><expr><name>_WIN32</name></expr></argument> )</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>( <argument><expr><name>__OS2__</name></expr></argument> )</argument_list></call></expr></cpp:if>

<if_stmt><if>if<condition>( <expr><name>psz_file</name> <operator>!=</operator> <name>NULL</name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>size_t</name></type> <name>flen</name> <init>= <expr><call><name>strlen</name><argument_list>( <argument><expr><name>psz_file</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>flen</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>psz_file</name><index>[<expr><name>flen</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'\\'</literal></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>psz_file</name><index>[<expr><name>flen</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name>psz_file</name> <operator>=</operator> <call><name>strdup</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<if_stmt><if>if<condition>( <expr><call><name>unlikely</name><argument_list>(<argument><expr><name>psz_file</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name>forced</name> <operator>&amp;&amp;</operator> <call><name>ProbeDVD</name><argument_list>( <argument><expr><name>psz_file</name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>VLC_SUCCESS</name></expr> )</condition><block type="pseudo"><block_content>

<goto>goto <name>bailout</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><name>psz_path</name> <operator>=</operator> <call><name>ToLocale</name><argument_list>( <argument><expr><name>psz_file</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>DVDNAV_VERSION</name> <operator>&gt;=</operator> <literal type="number">60100</literal></expr></cpp:if>

<decl_stmt><decl><type><name>dvdnav_logger_cb</name></type> <name>cbs</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>cbs</name><operator>.</operator><name>pf_log</name></name> <operator>=</operator> <name>DvdNavLog</name></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_open2</name><argument_list>( <argument><expr><operator>&amp;</operator><name>p_dvdnav</name></expr></argument>, <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>cbs</name></expr></argument>, <argument><expr><name>psz_path</name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>DVDNAV_STATUS_OK</name></expr> )</condition><block type="pseudo"><block_content>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_open</name><argument_list>( <argument><expr><operator>&amp;</operator><name>p_dvdnav</name></expr></argument>, <argument><expr><name>psz_path</name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>DVDNAV_STATUS_OK</name></expr> )</condition>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"cannot open DVD (%s)"</literal></expr></argument>, <argument><expr><name>psz_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__APPLE__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>vlc_dialog_display_error</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><call><name>_</name><argument_list>(<argument><expr><literal type="string">"Problem accessing a system resource"</literal></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><call><name>_</name><argument_list>(<argument><expr><literal type="string">"Potentially, macOS blocks access to your disc. "</literal>

<literal type="string">"Please open \"System Preferences\" -&gt; \"Security &amp; Privacy\" "</literal>

<literal type="string">"and allow VLC to access your external media in \"Files and Folders\" section."</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<goto>goto <name>bailout</name>;</goto>

</block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>i_ret</name> <operator>=</operator> <call><name>CommonOpen</name><argument_list>( <argument><expr><name>p_this</name></expr></argument>, <argument><expr><name>p_dvdnav</name></expr></argument>, <argument><expr><operator>!</operator><operator>!</operator><name>DVD_READ_CACHE</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i_ret</name> <operator>!=</operator> <name>VLC_SUCCESS</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>dvdnav_close</name><argument_list>( <argument><expr><name>p_dvdnav</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<label><name>bailout</name>:</label>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>psz_file</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>psz_path</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>LocaleFree</name><argument_list>( <argument><expr><name>psz_path</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>i_ret</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>StreamProbeDVD</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>s</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ssize_t</name></type> <name>i_peek</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_peek</name></decl>;</decl_stmt>

<expr_stmt><expr><name>i_peek</name> <operator>=</operator> <call><name>vlc_stream_Peek</name><argument_list>( <argument><expr><name>s</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>p_peek</name></expr></argument>, <argument><expr><literal type="number">2048</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i_peek</name> <operator>&lt;</operator> <literal type="number">512</literal></expr> )</condition> <block>{<block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<while>while <condition>(<expr><name>i_peek</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>p_peek</name><index>[ <expr><operator>--</operator><name>i_peek</name></expr> ]</index></name></expr>)</condition> <block>{<block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></while>

<decl_stmt><decl><type><name>char</name></type> <name><name>iso_dsc</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>vlc_stream_Seek</name><argument_list>( <argument><expr><name>s</name></expr></argument>, <argument><expr><literal type="number">0x8000</literal> <operator>+</operator> <literal type="number">1</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <name>VLC_SUCCESS</name>

<operator>||</operator> <call><name>vlc_stream_Read</name><argument_list>( <argument><expr><name>s</name></expr></argument>, <argument><expr><name>iso_dsc</name></expr></argument>, <argument><expr><sizeof>sizeof <argument_list>(<argument><expr><name>iso_dsc</name></expr></argument>)</argument_list></sizeof></expr></argument> )</argument_list></call> <operator>&lt;</operator> <operator>(</operator><name>int</name><operator>)</operator><sizeof>sizeof <argument_list>(<argument><expr><name>iso_dsc</name></expr></argument>)</argument_list></sizeof>

<operator>||</operator> <call><name>memcmp</name><argument_list>( <argument><expr><name>iso_dsc</name></expr></argument>, <argument><expr><literal type="string">"CD001\x01"</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>anchor</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>vlc_stream_Seek</name><argument_list>( <argument><expr><name>s</name></expr></argument>, <argument><expr><literal type="number">256</literal> <operator>*</operator> <name>DVD_VIDEO_LB_LEN</name></expr></argument> )</argument_list></call> <operator>==</operator> <name>VLC_SUCCESS</name>

<operator>&amp;&amp;</operator> <call><name>vlc_stream_Read</name><argument_list>( <argument><expr><name>s</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>anchor</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument> )</argument_list></call> <operator>==</operator> <literal type="number">2</literal>

<operator>&amp;&amp;</operator> <call><name>GetWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name>anchor</name></expr></argument> )</argument_list></call> <operator>==</operator> <literal type="number">2</literal></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>stream_cb_seek</name><parameter_list>( <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>demux</name></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type> <name>pos</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>vlc_stream_Seek</name><argument_list>( <argument><expr><operator>(</operator><operator>(</operator><name>demux_t</name> <operator>*</operator><operator>)</operator><name>demux</name><operator>)</operator><operator>-&gt;</operator><name>s</name></expr></argument>, <argument><expr><name>pos</name></expr></argument> )</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>stream_cb_read</name><parameter_list>( <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>demux</name></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>buffer</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>vlc_stream_Read</name><argument_list>( <argument><expr><operator>(</operator><operator>(</operator><name>demux_t</name> <operator>*</operator><operator>)</operator><name>demux</name><operator>)</operator><operator>-&gt;</operator><name>s</name></expr></argument>, <argument><expr><name>buffer</name></expr></argument>, <argument><expr><name>size</name></expr></argument> )</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>DemuxOpen</name> <parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name> <init>= <expr><operator>(</operator><name>demux_t</name><operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>dvdnav_t</name> <modifier>*</modifier></type><name>p_dvdnav</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>forced</name> <init>= <expr><name>false</name></expr></init></decl>, <decl><type ref="prev"/><name>b_seekable</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_demux</name><operator>-&gt;</operator><name>psz_name</name></name> <operator>!=</operator> <name>NULL</name> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>strncmp</name><argument_list>(<argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>psz_name</name></name></expr></argument>, <argument><expr><literal type="string">"dvd"</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>forced</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_stream_Control</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><ternary><condition><expr><name>forced</name></expr> ?</condition><then> <expr><name>STREAM_CAN_SEEK</name></expr> </then><else>: <expr><name>STREAM_CAN_FASTSEEK</name></expr></else></ternary></expr></argument>,

<argument><expr><operator>&amp;</operator><name>b_seekable</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name>b_seekable</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name>forced</name> <operator>&amp;&amp;</operator> <call><name>StreamProbeDVD</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>VLC_SUCCESS</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>dvdnav_stream_cb</name></type> <name>stream_cb</name> <init>=

<expr><block>{

<expr><operator>.</operator><name>pf_seek</name> <operator>=</operator> <name>stream_cb_seek</name></expr>,

<expr><operator>.</operator><name>pf_read</name> <operator>=</operator> <name>stream_cb_read</name></expr>,

<expr><operator>.</operator><name>pf_readv</name> <operator>=</operator> <name>NULL</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>DVDNAV_VERSION</name> <operator>&gt;=</operator> <literal type="number">60100</literal></expr></cpp:if>

<decl_stmt><decl><type><name>dvdnav_logger_cb</name></type> <name>cbs</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>cbs</name><operator>.</operator><name>pf_log</name></name> <operator>=</operator> <name>DvdNavLog</name></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_open_stream2</name><argument_list>( <argument><expr><operator>&amp;</operator><name>p_dvdnav</name></expr></argument>, <argument><expr><name>p_demux</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>cbs</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>stream_cb</name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>DVDNAV_STATUS_OK</name></expr> )</condition><block type="pseudo"><block_content>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_open_stream</name><argument_list>( <argument><expr><operator>&amp;</operator><name>p_dvdnav</name></expr></argument>, <argument><expr><name>p_demux</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>stream_cb</name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>DVDNAV_STATUS_OK</name></expr> )</condition>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"cannot open DVD with open_stream"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name> <init>= <expr><call><name>CommonOpen</name><argument_list>( <argument><expr><name>p_this</name></expr></argument>, <argument><expr><name>p_dvdnav</name></expr></argument>, <argument><expr><name>false</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>i_ret</name> <operator>!=</operator> <name>VLC_SUCCESS</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>dvdnav_close</name><argument_list>( <argument><expr><name>p_dvdnav</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>i_ret</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name> <init>= <expr><operator>(</operator><name>demux_t</name><operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>still</name><operator>.</operator><name>b_created</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>vlc_timer_destroy</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>still</name><operator>.</operator><name>timer</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>PS_TK_COUNT</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<decl_stmt><decl><type><name>ps_track_t</name> <modifier>*</modifier></type><name>tk</name> <init>= <expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>tk</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>tk</name><operator>-&gt;</operator><name>b_configured</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>es_format_Clean</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>tk</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>tk</name><operator>-&gt;</operator><name>es</name></name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>es_out_Del</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_tf_out</name></name></expr></argument>, <argument><expr><name><name>tk</name><operator>-&gt;</operator><name>es</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_title</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>vlc_input_title_Delete</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>title</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><call><name>TAB_CLEAN</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_title</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>title</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>timestamps_filter_es_out_Delete</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_tf_out</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dvdnav_close</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>RandomAccessCleanup</name><parameter_list>(<parameter><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>highlight</name><operator>.</operator><name>b_pending</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Control</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_query</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>args</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>input_title_t</name> <modifier>*</modifier><modifier>*</modifier><modifier>*</modifier></type><name>ppp_title</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<switch>switch<condition>( <expr><name>i_query</name></expr> )</condition>

<block>{<block_content>

<case>case <expr><name>DEMUX_SET_POSITION</name></expr>:</case>

<case>case <expr><name>DEMUX_GET_POSITION</name></expr>:</case>

<case>case <expr><name>DEMUX_GET_LENGTH</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>pos</name></decl>, <decl><type ref="prev"/><name>len</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_get_position</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>pos</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>len</name></expr></argument> )</argument_list></call> <operator>!=</operator>

<name>DVDNAV_STATUS_OK</name> <operator>||</operator> <name>len</name> <operator>==</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<switch>switch<condition>( <expr><name>i_query</name></expr> )</condition>

<block>{<block_content>

<case>case <expr><name>DEMUX_GET_POSITION</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>double</name><operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator> <operator>(</operator><name>double</name><operator>)</operator><name>pos</name> <operator>/</operator> <operator>(</operator><name>double</name><operator>)</operator><name>len</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>DEMUX_SET_POSITION</name></expr>:</case>

<expr_stmt><expr><name>pos</name> <operator>=</operator> <call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>double</name></expr></argument> )</argument_list></call> <operator>*</operator> <name>len</name></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_sector_search</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name>pos</name></expr></argument>, <argument><expr><name>SEEK_SET</name></expr></argument> )</argument_list></call> <operator>==</operator>

<name>DVDNAV_STATUS_OK</name></expr> )</condition>

<block>{<block_content>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>RandomAccessCleanup</name><argument_list>( <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>DEMUX_GET_LENGTH</name></expr>:</case>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_pgc_length</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>vlc_tick_t</name> <operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_pgc_length</name></name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<break>break;</break>

</block_content>}</block></switch>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block>

<case>case <expr><name>DEMUX_GET_TIME</name></expr>:</case>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_pgc_length</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>vlc_tick_t</name> <operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator>

<call><name>dvdnav_get_current_time</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument> )</argument_list></call> <operator>*</operator> <literal type="number">100</literal> <operator>/</operator> <literal type="number">9</literal></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>DEMUX_SET_TIME</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_time</name> <init>= <expr><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>vlc_tick_t</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_jump_to_sector_by_time</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>,

<argument><expr><name>i_time</name> <operator>*</operator> <literal type="number">9</literal> <operator>/</operator> <literal type="number">100</literal></expr></argument>,

<argument><expr><name>SEEK_SET</name></expr></argument> )</argument_list></call> <operator>==</operator> <name>DVDNAV_STATUS_OK</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"can't set time to %"</literal> <name>PRId64</name></expr></argument>, <argument><expr><name>i_time</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block>

<case>case <expr><name>DEMUX_CAN_PAUSE</name></expr>:</case>

<case>case <expr><name>DEMUX_CAN_SEEK</name></expr>:</case>

<case>case <expr><name>DEMUX_CAN_CONTROL_PACE</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>bool</name> <operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>DEMUX_SET_PAUSE_STATE</name></expr>:</case>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>DEMUX_GET_TITLE_INFO</name></expr>:</case>

<expr_stmt><expr><name>ppp_title</name> <operator>=</operator> <call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>input_title_t</name><operator>*</operator><operator>*</operator><operator>*</operator></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>ppp_title</name> <operator>=</operator> <call><name>vlc_alloc</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_title</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><name>input_title_t</name> <operator>*</operator></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><operator>*</operator><name>ppp_title</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<for>for<control>( <init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_title</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<expr_stmt><expr><operator>(</operator><operator>*</operator><name>ppp_title</name><operator>)</operator><index>[<expr><name>i</name></expr>]</index> <operator>=</operator> <call><name>vlc_input_title_Duplicate</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>title</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><operator>!</operator><operator>(</operator><operator>*</operator><name>ppp_title</name><operator>)</operator><index>[<expr><name>i</name></expr>]</index></expr>)</condition>

<block>{<block_content>

<while>while<condition>( <expr><name>i</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><operator>(</operator><operator>*</operator><name>ppp_title</name><operator>)</operator><index>[<expr><operator>--</operator><name>i</name></expr>]</index></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></while>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><operator>*</operator><name>ppp_title</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>int</name><operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_title</name></name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>int</name><operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt> 

<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>int</name><operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt> 

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>DEMUX_SET_TITLE</name></expr>:</case>

<expr_stmt><expr><name>i</name> <operator>=</operator> <call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>int</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i</name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <call><name>dvdnav_menu_call</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name>DVD_MENU_Root</name></expr></argument> )</argument_list></call>

<operator>!=</operator> <name>DVDNAV_STATUS_OK</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"cannot set title/chapter"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name>i</name> <operator>!=</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>dvdnav_still_skip</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_title_play</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name>i</name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>DVDNAV_STATUS_OK</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"cannot set title/chapter"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>updates</name></name> <operator>|=</operator> <name>INPUT_UPDATE_TITLE</name> <operator>|</operator> <name>INPUT_UPDATE_SEEKPOINT</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>cur_title</name></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>cur_seekpoint</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>RandomAccessCleanup</name><argument_list>( <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>DEMUX_SET_SEEKPOINT</name></expr>:</case>

<expr_stmt><expr><name>i</name> <operator>=</operator> <call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>int</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>cur_title</name></name> <operator>==</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>argtab</name><index>[]</index></name> <init>= <expr><block>{

<expr><name>DVD_MENU_Escape</name></expr>,

<expr><name>DVD_MENU_Root</name></expr>,

<expr><name>DVD_MENU_Title</name></expr>,

<expr><name>DVD_MENU_Part</name></expr>,

<expr><name>DVD_MENU_Subpicture</name></expr>,

<expr><name>DVD_MENU_Audio</name></expr>,

<expr><name>DVD_MENU_Angle</name></expr>

}</block></expr></init></decl>;</decl_stmt>

<enum>enum <block>{ <decl><name>numargs</name> <init>= <expr><sizeof>sizeof<argument_list>(<argument><expr><name>argtab</name></expr></argument>)</argument_list></sizeof><operator>/</operator>sizeof<operator>(</operator><name>int</name><operator>)</operator></expr></init></decl> }</block>;</enum>

<if_stmt><if>if<condition>( <expr><operator>(</operator><name>unsigned</name><operator>)</operator><name>i</name> <operator>&gt;=</operator> <name>numargs</name> <operator>||</operator> <name>DVDNAV_STATUS_OK</name> <operator>!=</operator>

<call><name>dvdnav_menu_call</name><argument_list>(<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>,<argument><expr><name><name>argtab</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

</block_content>}</block></if>

<if type="elseif">else if<condition>( <expr><call><name>dvdnav_part_play</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>cur_title</name></name></expr></argument>,

<argument><expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <name>DVDNAV_STATUS_OK</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"cannot set title/chapter"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>updates</name></name> <operator>|=</operator> <name>INPUT_UPDATE_SEEKPOINT</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>cur_seekpoint</name></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>RandomAccessCleanup</name><argument_list>( <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>DEMUX_TEST_AND_CLEAR_FLAGS</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name> <modifier>*</modifier><specifier>restrict</specifier></type> <name>flags</name> <init>= <expr><call><name>va_arg</name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr><name>unsigned</name> <operator>*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><operator>*</operator><name>flags</name> <operator>&amp;=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>updates</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>updates</name></name> <operator>&amp;=</operator> <operator>~</operator><operator>*</operator><name>flags</name></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block>

<case>case <expr><name>DEMUX_GET_TITLE</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>int</name> <operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>cur_title</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>DEMUX_GET_SEEKPOINT</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>int</name> <operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>cur_seekpoint</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>DEMUX_GET_PTS_DELAY</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>vlc_tick_t</name> <operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator>

<call><name>VLC_TICK_FROM_MS</name><argument_list>( <argument><expr><call><name>var_InheritInteger</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"disc-caching"</literal></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>DEMUX_GET_META</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>title_name</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>dvdnav_get_title_string</name><argument_list>(<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>title_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>(</operator><name>NULL</name> <operator>!=</operator> <name>title_name</name><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><literal type="char">'\0'</literal> <operator>!=</operator> <name><name>title_name</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>)</operator> <operator>&amp;&amp;</operator> <call><name>IsUTF8</name><argument_list>(<argument><expr><name>title_name</name></expr></argument>)</argument_list></call></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>vlc_meta_t</name> <modifier>*</modifier></type><name>p_meta</name> <init>= <expr><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>vlc_meta_t</name><operator>*</operator></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_meta_Set</name><argument_list>( <argument><expr><name>p_meta</name></expr></argument>, <argument><expr><name>vlc_meta_Title</name></expr></argument>, <argument><expr><name>title_name</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block>

<case>case <expr><name>DEMUX_NAV_ACTIVATE</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name>pci_t</name> <modifier>*</modifier></type><name>pci</name> <init>= <expr><call><name>dvdnav_get_current_nav_pci</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_button_activate</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name>pci</name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>DVDNAV_STATUS_OK</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>event_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ButtonUpdate</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>true</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>event_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block>

<case>case <expr><name>DEMUX_NAV_UP</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name>pci_t</name> <modifier>*</modifier></type><name>pci</name> <init>= <expr><call><name>dvdnav_get_current_nav_pci</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_upper_button_select</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name>pci</name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>DVDNAV_STATUS_OK</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<break>break;</break>

</block_content>}</block>

<case>case <expr><name>DEMUX_NAV_DOWN</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name>pci_t</name> <modifier>*</modifier></type><name>pci</name> <init>= <expr><call><name>dvdnav_get_current_nav_pci</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_lower_button_select</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name>pci</name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>DVDNAV_STATUS_OK</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<break>break;</break>

</block_content>}</block>

<case>case <expr><name>DEMUX_NAV_LEFT</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name>pci_t</name> <modifier>*</modifier></type><name>pci</name> <init>= <expr><call><name>dvdnav_get_current_nav_pci</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_left_button_select</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name>pci</name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>DVDNAV_STATUS_OK</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<break>break;</break>

</block_content>}</block>

<case>case <expr><name>DEMUX_NAV_RIGHT</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name>pci_t</name> <modifier>*</modifier></type><name>pci</name> <init>= <expr><call><name>dvdnav_get_current_nav_pci</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_right_button_select</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name>pci</name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>DVDNAV_STATUS_OK</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<break>break;</break>

</block_content>}</block>

<case>case <expr><name>DEMUX_NAV_MENU</name></expr>:</case>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_menu_call</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name>DVD_MENU_Title</name></expr></argument> )</argument_list></call>

<operator>!=</operator> <name>DVDNAV_STATUS_OK</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"cannot select Title menu"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_menu_call</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name>DVD_MENU_Root</name></expr></argument> )</argument_list></call>

<operator>!=</operator> <name>DVDNAV_STATUS_OK</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"cannot select Root menu"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>updates</name></name> <operator>|=</operator> <name>INPUT_UPDATE_TITLE</name> <operator>|</operator> <name>INPUT_UPDATE_SEEKPOINT</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>cur_title</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>cur_seekpoint</name></name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block>

<default>default:</default>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></switch>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>ControlInternal</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_query</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>va_list</name></type> <name>args</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_result</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>va_start</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>i_query</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_result</name> <operator>=</operator> <call><name>Control</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>i_query</name></expr></argument>, <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>va_end</name><argument_list>( <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>i_result</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Demux</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>buffer</name><index>[<expr><name>DVD_VIDEO_LB_LEN</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>packet</name> <init>= <expr><name>buffer</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_event</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_len</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>dvdnav_status_t</name></type> <name>status</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_readahead</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>dvdnav_get_next_cache_block</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>packet</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_event</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>i_len</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>dvdnav_get_next_block</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name>packet</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_event</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>i_len</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if<condition>( <expr><name>status</name> <operator>==</operator> <name>DVDNAV_STATUS_ERR</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"cannot get next block (%s)"</literal></expr></argument>,

<argument><expr><call><name>dvdnav_err_to_string</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>cur_title</name></name> <operator>==</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"jumping to first title"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><ternary><condition><expr><call><name>ControlInternal</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>DEMUX_SET_TITLE</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument> )</argument_list></call> <operator>==</operator> <name>VLC_SUCCESS</name></expr> ?</condition><then>

<expr><name>VLC_DEMUXER_SUCCESS</name></expr> </then><else>: <expr><name>VLC_DEMUXER_EGENERIC</name></expr></else></ternary></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>VLC_DEMUXER_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>event_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name><name>p_sys</name><operator>-&gt;</operator><name>highlight</name><operator>.</operator><name>b_pending</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>ButtonUpdate</name><argument_list>(<argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>highlight</name><operator>.</operator><name>b_from_user</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>event_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<switch>switch<condition>( <expr><name>i_event</name></expr> )</condition>

<block>{<block_content>

<case>case <expr><name>DVDNAV_BLOCK_OK</name></expr>:</case> 

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>still</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_timer_disarm</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>still</name><operator>.</operator><name>timer</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>still</name><operator>.</operator><name>b_enabled</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>still</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_reset_pcr</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_tf_out</name></name></expr></argument>, <argument><expr><name>ES_OUT_RESET_PCR</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_reset_pcr</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>DemuxBlock</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>packet</name></expr></argument>, <argument><expr><name>i_len</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_vobu_index</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_vobu_flush</name></name> <operator>==</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_vobu_index</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>DemuxForceStill</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_vobu_index</name></name><operator>++</operator></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>DVDNAV_NOP</name></expr>:</case> 

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"DVDNAV_NOP"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>DVDNAV_STILL_FRAME</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name>dvdnav_still_event_t</name> <modifier>*</modifier></type><name>event</name> <init>= <expr><operator>(</operator><name>dvdnav_still_event_t</name><operator>*</operator><operator>)</operator><name>packet</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_still_init</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>still</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_sys</name><operator>-&gt;</operator><name>still</name><operator>.</operator><name>b_enabled</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"DVDNAV_STILL_FRAME"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">" - length=0x%x"</literal></expr></argument>, <argument><expr><name><name>event</name><operator>-&gt;</operator><name>length</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>still</name><operator>.</operator><name>b_enabled</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>event</name><operator>-&gt;</operator><name>length</name></name> <operator>!=</operator> <literal type="number">0xff</literal> <operator>&amp;&amp;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>still</name><operator>.</operator><name>b_created</name></name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>delay</name> <init>= <expr><call><name>vlc_tick_from_sec</name><argument_list>( <argument><expr><name><name>event</name><operator>-&gt;</operator><name>length</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_timer_schedule</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>still</name><operator>.</operator><name>timer</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>delay</name></expr></argument>, <argument><expr><name>VLC_TIMER_FIRE_ONCE</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>b_still_init</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>still</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>b_still_init</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>DemuxForceStill</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_reset_pcr</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_tick_sleep</name><argument_list>( <argument><expr><call><name>VLC_TICK_FROM_MS</name><argument_list>(<argument><expr><literal type="number">40</literal></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block>

<case>case <expr><name>DVDNAV_SPU_CLUT_CHANGE</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"DVDNAV_SPU_CLUT_CHANGE"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>clut</name></name></expr></argument>, <argument><expr><name>packet</name></expr></argument>, <argument><expr><literal type="number">16</literal> <operator>*</operator> <sizeof>sizeof<argument_list>( <argument><expr><name>uint32_t</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<for>for<control>( <init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">0x1f</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_spu_stream_to_lang</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name>i</name></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0xffff</literal></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>ESNew</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="number">0xbd20</literal> <operator>+</operator> <name>i</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></for>

<break>break;</break>

</block_content>}</block>

<case>case <expr><name>DVDNAV_SPU_STREAM_CHANGE</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name>dvdnav_spu_stream_change_event_t</name> <modifier>*</modifier></type><name>event</name> <init>=

<expr><operator>(</operator><name>dvdnav_spu_stream_change_event_t</name><operator>*</operator><operator>)</operator><name>packet</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"DVDNAV_SPU_STREAM_CHANGE"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">" - physical_wide=%d"</literal></expr></argument>,

<argument><expr><name><name>event</name><operator>-&gt;</operator><name>physical_wide</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">" - physical_letterbox=%d"</literal></expr></argument>,

<argument><expr><name><name>event</name><operator>-&gt;</operator><name>physical_letterbox</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">" - physical_pan_scan=%d"</literal></expr></argument>,

<argument><expr><name><name>event</name><operator>-&gt;</operator><name>physical_pan_scan</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ESSubtitleUpdate</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_spu_change</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<for>for<control>( <init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">0x1f</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_spu_stream_to_lang</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name>i</name></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0xffff</literal></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>ESNew</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="number">0xbd20</literal> <operator>+</operator> <name>i</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></for>

<break>break;</break>

</block_content>}</block>

<case>case <expr><name>DVDNAV_AUDIO_STREAM_CHANGE</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name>dvdnav_audio_stream_change_event_t</name> <modifier>*</modifier></type><name>event</name> <init>=

<expr><operator>(</operator><name>dvdnav_audio_stream_change_event_t</name><operator>*</operator><operator>)</operator><name>packet</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"DVDNAV_AUDIO_STREAM_CHANGE"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">" - physical=%d"</literal></expr></argument>, <argument><expr><name><name>event</name><operator>-&gt;</operator><name>physical</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block>

<case>case <expr><name>DVDNAV_VTS_CHANGE</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name>int32_t</name></type> <name>i_title</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name>i_part</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>dvdnav_vts_change_event_t</name> <modifier>*</modifier></type><name>event</name> <init>= <expr><operator>(</operator><name>dvdnav_vts_change_event_t</name><operator>*</operator><operator>)</operator><name>packet</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"DVDNAV_VTS_CHANGE"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">" - vtsN=%d"</literal></expr></argument>, <argument><expr><name><name>event</name><operator>-&gt;</operator><name>new_vtsN</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">" - domain=%d"</literal></expr></argument>, <argument><expr><name><name>event</name><operator>-&gt;</operator><name>new_domain</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_tf_out</name></name></expr></argument>, <argument><expr><name>ES_OUT_RESET_PCR</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>PS_TK_COUNT</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<decl_stmt><decl><type><name>ps_track_t</name> <modifier>*</modifier></type><name>tk</name> <init>= <expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>tk</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>tk</name><operator>-&gt;</operator><name>b_configured</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>es_format_Clean</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>tk</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>tk</name><operator>-&gt;</operator><name>es</name></name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name><name>tk</name><operator>-&gt;</operator><name>es</name></name> <operator>==</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>spu_es</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>event_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>spu_es</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>highlight</name><operator>.</operator><name>b_pending</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>event_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>es_out_Del</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_tf_out</name></name></expr></argument>, <argument><expr><name><name>tk</name><operator>-&gt;</operator><name>es</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>b_configured</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

</block_content>}</block></for>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>i_width</name></decl>, <decl><type ref="prev"/><name>i_height</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_get_video_resolution</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>i_width</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_height</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>i_width</name> <operator>=</operator> <name>i_height</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<switch>switch<condition>( <expr><call><name>dvdnav_get_video_aspect</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<case>case <expr><literal type="number">0</literal></expr>:</case>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>sar</name><operator>.</operator><name>i_num</name></name> <operator>=</operator> <literal type="number">4</literal> <operator>*</operator> <name>i_height</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>sar</name><operator>.</operator><name>i_den</name></name> <operator>=</operator> <literal type="number">3</literal> <operator>*</operator> <name>i_width</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">3</literal></expr>:</case>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>sar</name><operator>.</operator><name>i_num</name></name> <operator>=</operator> <literal type="number">16</literal> <operator>*</operator> <name>i_height</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>sar</name><operator>.</operator><name>i_den</name></name> <operator>=</operator> <literal type="number">9</literal> <operator>*</operator> <name>i_width</name></expr>;</expr_stmt>

<break>break;</break>

<default>default:</default>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>sar</name><operator>.</operator><name>i_num</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>sar</name><operator>.</operator><name>i_den</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></switch>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_current_title_info</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_title</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>i_part</name></expr></argument> )</argument_list></call> <operator>==</operator> <name>DVDNAV_STATUS_OK</name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name>i_title</name> <operator>&gt;=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>i_title</name> <operator>&lt;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_title</name></name> <operator>&amp;&amp;</operator>

<name><name>p_sys</name><operator>-&gt;</operator><name>cur_title</name></name> <operator>!=</operator> <name>i_title</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>updates</name></name> <operator>|=</operator> <name>INPUT_UPDATE_TITLE</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>cur_title</name></name> <operator>=</operator> <name>i_title</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<break>break;</break>

</block_content>}</block>

<case>case <expr><name>DVDNAV_CELL_CHANGE</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name>int32_t</name></type> <name>i_title</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name>i_part</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>dvdnav_cell_change_event_t</name> <modifier>*</modifier></type><name>event</name> <init>=

<expr><operator>(</operator><name>dvdnav_cell_change_event_t</name><operator>*</operator><operator>)</operator><name>packet</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"DVDNAV_CELL_CHANGE"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">" - cellN=%d"</literal></expr></argument>, <argument><expr><name><name>event</name><operator>-&gt;</operator><name>cellN</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">" - pgN=%d"</literal></expr></argument>, <argument><expr><name><name>event</name><operator>-&gt;</operator><name>pgN</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">" - cell_length=%"</literal><name>PRId64</name></expr></argument>, <argument><expr><name><name>event</name><operator>-&gt;</operator><name>cell_length</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">" - pg_length=%"</literal><name>PRId64</name></expr></argument>, <argument><expr><name><name>event</name><operator>-&gt;</operator><name>pg_length</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">" - pgc_length=%"</literal><name>PRId64</name></expr></argument>, <argument><expr><name><name>event</name><operator>-&gt;</operator><name>pgc_length</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">" - cell_start=%"</literal><name>PRId64</name></expr></argument>, <argument><expr><name><name>event</name><operator>-&gt;</operator><name>cell_start</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">" - pg_start=%"</literal><name>PRId64</name></expr></argument>, <argument><expr><name><name>event</name><operator>-&gt;</operator><name>pg_start</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_pgc_length</name></name> <operator>=</operator> <call><name>FROM_SCALE_NZ</name><argument_list>(<argument><expr><name><name>event</name><operator>-&gt;</operator><name>pgc_length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_vobu_index</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_vobu_flush</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>PS_TK_COUNT</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>tk</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>i_next_block_flags</name> <operator>|=</operator> <name>BLOCK_FLAG_CELL_DISCONTINUITY</name></expr>;</expr_stmt></block_content></block></for>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_current_title_info</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_title</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>i_part</name></expr></argument> )</argument_list></call> <operator>==</operator> <name>DVDNAV_STATUS_OK</name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name>i_title</name> <operator>&gt;=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>i_title</name> <operator>&lt;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_title</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>updates</name></name> <operator>|=</operator> <name>INPUT_UPDATE_TITLE</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>cur_title</name></name> <operator>=</operator> <name>i_title</name></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i_part</name> <operator>&gt;=</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <name>i_part</name> <operator>&lt;=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>title</name><index>[<expr><name>i_title</name></expr>]</index></name><operator>-&gt;</operator><name>i_seekpoint</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>updates</name></name> <operator>|=</operator> <name>INPUT_UPDATE_SEEKPOINT</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>cur_seekpoint</name></name> <operator>=</operator> <name>i_part</name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<break>break;</break>

</block_content>}</block>

<case>case <expr><name>DVDNAV_NAV_PACKET</name></expr>:</case>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_vobu_index</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_vobu_flush</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>pci_t</name> <modifier>*</modifier></type><name>p_pci</name> <init>= <expr><call><name>dvdnav_get_current_nav_pci</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>unlikely</name><argument_list>(<argument><expr><operator>!</operator><name>p_pci</name></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>pci_gi_t</name> <modifier>*</modifier></type><name>p_pci_gi</name> <init>= <expr><operator>&amp;</operator><name><name>p_pci</name><operator>-&gt;</operator><name>pci_gi</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_pci_gi</name><operator>-&gt;</operator><name>vobu_se_e_ptm</name></name> <operator>!=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>p_pci_gi</name><operator>-&gt;</operator><name>vobu_se_e_ptm</name></name> <operator>&lt;</operator> <name><name>p_pci_gi</name><operator>-&gt;</operator><name>vobu_e_ptm</name></name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>dsi_t</name> <modifier>*</modifier></type><name>p_dsi</name> <init>= <expr><call><name>dvdnav_get_current_nav_dsi</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>unlikely</name><argument_list>(<argument><expr><operator>!</operator><name>p_dsi</name></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>dsi_gi_t</name> <modifier>*</modifier></type><name>p_dsi_gi</name> <init>= <expr><operator>&amp;</operator><name><name>p_dsi</name><operator>-&gt;</operator><name>dsi_gi</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_dsi_gi</name><operator>-&gt;</operator><name>vobu_3rdref_ea</name></name> <operator>!=</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_vobu_flush</name></name> <operator>=</operator> <name><name>p_dsi_gi</name><operator>-&gt;</operator><name>vobu_3rdref_ea</name></name></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if<condition>( <expr><name><name>p_dsi_gi</name><operator>-&gt;</operator><name>vobu_2ndref_ea</name></name> <operator>!=</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_vobu_flush</name></name> <operator>=</operator> <name><name>p_dsi_gi</name><operator>-&gt;</operator><name>vobu_2ndref_ea</name></name></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if<condition>( <expr><name><name>p_dsi_gi</name><operator>-&gt;</operator><name>vobu_1stref_ea</name></name> <operator>!=</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_vobu_flush</name></name> <operator>=</operator> <name><name>p_dsi_gi</name><operator>-&gt;</operator><name>vobu_1stref_ea</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>DVDNAV_DEBUG</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"DVDNAV_NAV_PACKET"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>DemuxBlock</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>packet</name></expr></argument>, <argument><expr><name>i_len</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_spu_change</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>event_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ButtonUpdate</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>false</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>event_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_spu_change</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<break>break;</break>

</block_content>}</block>

<case>case <expr><name>DVDNAV_STOP</name></expr>:</case> 

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"DVDNAV_STOP"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_readahead</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>dvdnav_free_cache_block</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name>packet</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>VLC_DEMUXER_EOF</name></expr>;</return>

<case>case <expr><name>DVDNAV_HIGHLIGHT</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name>dvdnav_highlight_event_t</name> <modifier>*</modifier></type><name>event</name> <init>= <expr><operator>(</operator><name>dvdnav_highlight_event_t</name><operator>*</operator><operator>)</operator><name>packet</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"DVDNAV_HIGHLIGHT"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">" - display=%d"</literal></expr></argument>, <argument><expr><name><name>event</name><operator>-&gt;</operator><name>display</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">" - buttonN=%d"</literal></expr></argument>, <argument><expr><name><name>event</name><operator>-&gt;</operator><name>buttonN</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>event_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ButtonUpdate</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>false</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>event_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block>

<case>case <expr><name>DVDNAV_HOP_CHANNEL</name></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"DVDNAV_HOP_CHANNEL"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_vobu_index</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_vobu_flush</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_tf_out</name></name></expr></argument>, <argument><expr><name>ES_OUT_RESET_PCR</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>DVDNAV_WAIT</name></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"DVDNAV_WAIT"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_empty</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_tf_out</name></name></expr></argument>, <argument><expr><name>ES_OUT_GET_EMPTY</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>b_empty</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name>b_empty</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_tick_sleep</name><argument_list>( <argument><expr><call><name>VLC_TICK_FROM_MS</name><argument_list>(<argument><expr><literal type="number">40</literal></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><call><name>dvdnav_wait_skip</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_reset_pcr</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<break>break;</break>

<default>default:</default>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"Unknown event (0x%x)"</literal></expr></argument>, <argument><expr><name>i_event</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></switch>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_readahead</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>dvdnav_free_cache_block</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name>packet</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>VLC_DEMUXER_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type><name>DemuxGetLanguageCode</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_var</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>iso639_lang_t</name> <modifier>*</modifier></type><name>pl</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_lang</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>p</name></decl>;</decl_stmt>

<expr_stmt><expr><name>psz_lang</name> <operator>=</operator> <call><name>var_CreateGetString</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>psz_var</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name>psz_lang</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><call><name>strdup</name><argument_list>(<argument><expr><name>LANGUAGE_DEFAULT</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><operator>(</operator> <name>p</name> <operator>=</operator> <call><name>strchr</name><argument_list>( <argument><expr><name>psz_lang</name></expr></argument>, <argument><expr><literal type="char">','</literal></expr></argument> )</argument_list></call> <operator>)</operator></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><operator>*</operator><name>p</name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<for>for<control>( <init><expr><name>pl</name> <operator>=</operator> <name>p_languages</name></expr>;</init> <condition><expr><name><name>pl</name><operator>-&gt;</operator><name>psz_eng_name</name></name> <operator>!=</operator> <name>NULL</name></expr>;</condition> <incr><expr><name>pl</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><operator>*</operator><name>psz_lang</name> <operator>==</operator> <literal type="char">'\0'</literal></expr> )</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>strcasecmp</name><argument_list>( <argument><expr><name><name>pl</name><operator>-&gt;</operator><name>psz_eng_name</name></name></expr></argument>, <argument><expr><name>psz_lang</name></expr></argument> )</argument_list></call> <operator>||</operator>

<operator>!</operator><call><name>strcasecmp</name><argument_list>( <argument><expr><name><name>pl</name><operator>-&gt;</operator><name>psz_iso639_1</name></name></expr></argument>, <argument><expr><name>psz_lang</name></expr></argument> )</argument_list></call> <operator>||</operator>

<operator>!</operator><call><name>strcasecmp</name><argument_list>( <argument><expr><name><name>pl</name><operator>-&gt;</operator><name>psz_iso639_2T</name></name></expr></argument>, <argument><expr><name>psz_lang</name></expr></argument> )</argument_list></call> <operator>||</operator>

<operator>!</operator><call><name>strcasecmp</name><argument_list>( <argument><expr><name><name>pl</name><operator>-&gt;</operator><name>psz_iso639_2B</name></name></expr></argument>, <argument><expr><name>psz_lang</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>psz_lang</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>pl</name><operator>-&gt;</operator><name>psz_eng_name</name></name> <operator>!=</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><call><name>strdup</name><argument_list>( <argument><expr><name><name>pl</name><operator>-&gt;</operator><name>psz_iso639_1</name></name></expr></argument> )</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><call><name>strdup</name><argument_list>(<argument><expr><name>LANGUAGE_DEFAULT</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>DemuxTitles</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>input_title_t</name> <modifier>*</modifier></type><name>t</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>seekpoint_t</name> <modifier>*</modifier></type><name>s</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name>i_titles</name></decl>;</decl_stmt>

<expr_stmt><expr><name>t</name> <operator>=</operator> <call><name>vlc_input_title_New</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>t</name><operator>-&gt;</operator><name>i_flags</name></name> <operator>=</operator> <name>INPUT_TITLE_MENU</name> <operator>|</operator> <name>INPUT_TITLE_INTERACTIVE</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>t</name><operator>-&gt;</operator><name>psz_name</name></name> <operator>=</operator> <call><name>strdup</name><argument_list>( <argument><expr><literal type="string">"DVD Menu"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>s</name> <operator>=</operator> <call><name>vlc_seekpoint_New</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>psz_name</name></name> <operator>=</operator> <call><name>strdup</name><argument_list>( <argument><expr><literal type="string">"Resume"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>TAB_APPEND</name><argument_list>( <argument><expr><name><name>t</name><operator>-&gt;</operator><name>i_seekpoint</name></name></expr></argument>, <argument><expr><name><name>t</name><operator>-&gt;</operator><name>seekpoint</name></name></expr></argument>, <argument><expr><name>s</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>s</name> <operator>=</operator> <call><name>vlc_seekpoint_New</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>psz_name</name></name> <operator>=</operator> <call><name>strdup</name><argument_list>( <argument><expr><literal type="string">"Root"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>TAB_APPEND</name><argument_list>( <argument><expr><name><name>t</name><operator>-&gt;</operator><name>i_seekpoint</name></name></expr></argument>, <argument><expr><name><name>t</name><operator>-&gt;</operator><name>seekpoint</name></name></expr></argument>, <argument><expr><name>s</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>s</name> <operator>=</operator> <call><name>vlc_seekpoint_New</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>psz_name</name></name> <operator>=</operator> <call><name>strdup</name><argument_list>( <argument><expr><literal type="string">"Title"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>TAB_APPEND</name><argument_list>( <argument><expr><name><name>t</name><operator>-&gt;</operator><name>i_seekpoint</name></name></expr></argument>, <argument><expr><name><name>t</name><operator>-&gt;</operator><name>seekpoint</name></name></expr></argument>, <argument><expr><name>s</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>s</name> <operator>=</operator> <call><name>vlc_seekpoint_New</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>psz_name</name></name> <operator>=</operator> <call><name>strdup</name><argument_list>( <argument><expr><literal type="string">"Chapter"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>TAB_APPEND</name><argument_list>( <argument><expr><name><name>t</name><operator>-&gt;</operator><name>i_seekpoint</name></name></expr></argument>, <argument><expr><name><name>t</name><operator>-&gt;</operator><name>seekpoint</name></name></expr></argument>, <argument><expr><name>s</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>s</name> <operator>=</operator> <call><name>vlc_seekpoint_New</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>psz_name</name></name> <operator>=</operator> <call><name>strdup</name><argument_list>( <argument><expr><literal type="string">"Subtitle"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>TAB_APPEND</name><argument_list>( <argument><expr><name><name>t</name><operator>-&gt;</operator><name>i_seekpoint</name></name></expr></argument>, <argument><expr><name><name>t</name><operator>-&gt;</operator><name>seekpoint</name></name></expr></argument>, <argument><expr><name>s</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>s</name> <operator>=</operator> <call><name>vlc_seekpoint_New</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>psz_name</name></name> <operator>=</operator> <call><name>strdup</name><argument_list>( <argument><expr><literal type="string">"Audio"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>TAB_APPEND</name><argument_list>( <argument><expr><name><name>t</name><operator>-&gt;</operator><name>i_seekpoint</name></name></expr></argument>, <argument><expr><name><name>t</name><operator>-&gt;</operator><name>seekpoint</name></name></expr></argument>, <argument><expr><name>s</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>s</name> <operator>=</operator> <call><name>vlc_seekpoint_New</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>psz_name</name></name> <operator>=</operator> <call><name>strdup</name><argument_list>( <argument><expr><literal type="string">"Angle"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>TAB_APPEND</name><argument_list>( <argument><expr><name><name>t</name><operator>-&gt;</operator><name>i_seekpoint</name></name></expr></argument>, <argument><expr><name><name>t</name><operator>-&gt;</operator><name>seekpoint</name></name></expr></argument>, <argument><expr><name>s</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>TAB_APPEND</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_title</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>title</name></name></expr></argument>, <argument><expr><name>t</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dvdnav_get_number_of_titles</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_titles</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i_titles</name> <operator>&gt;</operator> <literal type="number">90</literal></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"This is probably an Arccos Protected DVD. This could take time..."</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>i_titles</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>i_title_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name> <modifier>*</modifier></type><name>p_chapters_time</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name>i_chapters</name> <init>= <expr><call><name>dvdnav_describe_title_chapters</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name>i</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>p_chapters_time</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>i_title_length</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>i_chapters</name> <operator>&lt;</operator> <literal type="number">1</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>i_title_length</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>p_chapters_time</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>t</name> <operator>=</operator> <call><name>vlc_input_title_New</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>t</name><operator>-&gt;</operator><name>i_length</name></name> <operator>=</operator> <call><name>FROM_SCALE_NZ</name><argument_list>(<argument><expr><name>i_title_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for<control>( <init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <call><name>__MAX</name><argument_list>( <argument><expr><name>i_chapters</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument> )</argument_list></call></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<expr_stmt><expr><name>s</name> <operator>=</operator> <call><name>vlc_seekpoint_New</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>p_chapters_time</name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><name>j</name> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>i_time_offset</name></name> <operator>=</operator> <call><name>FROM_SCALE_NZ</name><argument_list>(<argument><expr><name><name>p_chapters_time</name><index>[<expr><name>j</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>i_time_offset</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>TAB_APPEND</name><argument_list>( <argument><expr><name><name>t</name><operator>-&gt;</operator><name>i_seekpoint</name></name></expr></argument>, <argument><expr><name><name>t</name><operator>-&gt;</operator><name>seekpoint</name></name></expr></argument>, <argument><expr><name>s</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_chapters_time</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>TAB_APPEND</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_title</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>title</name></name></expr></argument>, <argument><expr><name>t</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>ButtonUpdate</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b_mode</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name>i_title</name></decl>, <decl><type ref="prev"/><name>i_part</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>highlight</name><operator>.</operator><name>b_pending</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>highlight</name><operator>.</operator><name>b_from_user</name></name> <operator>=</operator> <name>b_mode</name></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_sys</name><operator>-&gt;</operator><name>spu_es</name></name></expr> )</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>dvdnav_current_title_info</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_title</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_part</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>dvdnav_highlight_area_t</name></type> <name>hl</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name>i_button</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_button_ok</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_get_current_highlight</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_button</name></expr></argument> )</argument_list></call>

<operator>!=</operator> <name>DVDNAV_STATUS_OK</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"dvdnav_get_current_highlight failed"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>b_button_ok</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i_button</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>i_title</name> <operator>==</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>pci_t</name> <modifier>*</modifier></type><name>pci</name> <init>= <expr><call><name>dvdnav_get_current_nav_pci</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>b_button_ok</name> <operator>=</operator> <name>DVDNAV_STATUS_OK</name> <operator>==</operator>

<call><name>dvdnav_get_highlight_area</name><argument_list>( <argument><expr><name>pci</name></expr></argument>, <argument><expr><name>i_button</name></expr></argument>, <argument><expr><name>b_mode</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>hl</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name>b_button_ok</name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>vlc_spu_highlight_t</name></type> <name>spu_hl</name> <init>= <expr><block>{

<expr><operator>.</operator><name>x_start</name> <operator>=</operator> <name><name>hl</name><operator>.</operator><name>sx</name></name></expr>,

<expr><operator>.</operator><name>x_end</name> <operator>=</operator> <name><name>hl</name><operator>.</operator><name>ex</name></name></expr>,

<expr><operator>.</operator><name>y_start</name> <operator>=</operator> <name><name>hl</name><operator>.</operator><name>sy</name></name></expr>,

<expr><operator>.</operator><name>y_end</name> <operator>=</operator> <name><name>hl</name><operator>.</operator><name>ey</name></name></expr>,

<expr><operator>.</operator><name>palette</name> <operator>=</operator> <block>{

<expr><operator>.</operator><name>i_entries</name> <operator>=</operator> <literal type="number">4</literal></expr>,

}</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<for>for<control>( <init><decl><type><name>unsigned</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>i_yuv</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>clut</name><index>[<expr><operator>(</operator><name><name>hl</name><operator>.</operator><name>palette</name></name><operator>&gt;&gt;</operator><operator>(</operator><literal type="number">16</literal><operator>+</operator><name>i</name><operator>*</operator><literal type="number">4</literal><operator>)</operator><operator>)</operator><operator>&amp;</operator><literal type="number">0x0f</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_alpha</name> <init>= <expr><operator>(</operator> <operator>(</operator><name><name>hl</name><operator>.</operator><name>palette</name></name><operator>&gt;&gt;</operator><operator>(</operator><name>i</name><operator>*</operator><literal type="number">4</literal><operator>)</operator><operator>)</operator><operator>&amp;</operator><literal type="number">0x0f</literal> <operator>)</operator> <operator>*</operator> <literal type="number">0xff</literal> <operator>/</operator> <literal type="number">0xf</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>spu_hl</name><operator>.</operator><name>palette</name><operator>.</operator><name>palette</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>i_yuv</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xff</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>spu_hl</name><operator>.</operator><name>palette</name><operator>.</operator><name>palette</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>i_yuv</name> <operator>&gt;&gt;</operator> <literal type="number">0</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xff</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>spu_hl</name><operator>.</operator><name>palette</name><operator>.</operator><name>palette</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>i_yuv</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xff</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>spu_hl</name><operator>.</operator><name>palette</name><operator>.</operator><name>palette</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>i_alpha</name></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name>i_ret</name> <operator>=</operator> <call><name>es_out_Control</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_tf_out</name></name></expr></argument>, <argument><expr><name>ES_OUT_SPU_SET_HIGHLIGHT</name></expr></argument>,

<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>spu_es</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>spu_hl</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><name>i_ret</name> <operator>=</operator> <call><name>es_out_Control</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_tf_out</name></name></expr></argument>, <argument><expr><name>ES_OUT_SPU_SET_HIGHLIGHT</name></expr></argument>,

<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>spu_es</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if<condition>( <expr><name>i_ret</name> <operator>==</operator> <name>VLC_SUCCESS</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"menu highlight %s button=%d title=%d"</literal></expr></argument>,

<argument><expr><ternary><condition><expr><name>b_button_ok</name></expr> ?</condition><then> <expr><literal type="string">"set"</literal></expr> </then><else>: <expr><literal type="string">"cleared"</literal></expr></else></ternary></expr></argument>,

<argument><expr><name>i_button</name></expr></argument>, <argument><expr><name>i_title</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>highlight</name><operator>.</operator><name>b_pending</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>ESSubtitleUpdate</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_spu</name> <init>= <expr><call><name>dvdnav_get_active_spu_stream</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name>i_title</name></decl>, <decl><type ref="prev"/><name>i_part</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>event_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ButtonUpdate</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>false</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>event_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dvdnav_current_title_info</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_title</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_part</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i_title</name> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name>i_spu</name> <operator>&gt;=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>i_spu</name> <operator>&lt;=</operator> <literal type="number">0x1f</literal></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>ps_track_t</name> <modifier>*</modifier></type><name>tk</name> <init>= <expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>tk</name><index>[<expr><call><name>ps_id_to_tk</name><argument_list>(<argument><expr><literal type="number">0xbd20</literal> <operator>+</operator> <name>i_spu</name></expr></argument>)</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ESNew</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="number">0xbd20</literal> <operator>+</operator> <name>i_spu</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>tk</name><operator>-&gt;</operator><name>es</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_tf_out</name></name></expr></argument>, <argument><expr><name>ES_OUT_SET_ES_STATE</name></expr></argument>, <argument><expr><name><name>tk</name><operator>-&gt;</operator><name>es</name></name></expr></argument>,

<argument><expr><operator>(</operator><name>bool</name><operator>)</operator><name>false</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_tf_out</name></name></expr></argument>, <argument><expr><name>ES_OUT_SET_ES</name></expr></argument>, <argument><expr><name><name>tk</name><operator>-&gt;</operator><name>es</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>tk</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_cat</name></name> <operator>==</operator> <name>SPU_ES</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>event_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>spu_es</name></name> <operator>=</operator> <name><name>tk</name><operator>-&gt;</operator><name>es</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ButtonUpdate</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>false</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>event_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<for>for<control>( <init><expr><name>i_spu</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i_spu</name> <operator>&lt;=</operator> <literal type="number">0x1F</literal></expr>;</condition> <incr><expr><name>i_spu</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<decl_stmt><decl><type><name>ps_track_t</name> <modifier>*</modifier></type><name>tk</name> <init>= <expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>tk</name><index>[<expr><call><name>ps_id_to_tk</name><argument_list>(<argument><expr><literal type="number">0xbd20</literal> <operator>+</operator> <name>i_spu</name></expr></argument>)</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>tk</name><operator>-&gt;</operator><name>es</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_tf_out</name></name></expr></argument>, <argument><expr><name>ES_OUT_SET_ES_STATE</name></expr></argument>, <argument><expr><name><name>tk</name><operator>-&gt;</operator><name>es</name></name></expr></argument>,

<argument><expr><operator>(</operator><name>bool</name><operator>)</operator><name>false</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

</block_content>}</block></else></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>DemuxBlock</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<while>while<condition>( <expr><name>len</name> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i_size</name> <init>= <expr><call><name>ps_pkt_size</name><argument_list>( <argument><expr><name>p</name></expr></argument>, <argument><expr><name>len</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>i_size</name> <operator>&lt;=</operator> <literal type="number">0</literal> <operator>||</operator> <name>i_size</name> <operator>&gt;</operator> <name>len</name></expr> )</condition>

<block>{<block_content>

<break>break;</break>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_pkt</name> <init>= <expr><call><name>block_Alloc</name><argument_list>( <argument><expr><name>i_size</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name>p_pkt</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>( <argument><expr><name><name>p_pkt</name><operator>-&gt;</operator><name>p_buffer</name></name></expr></argument>, <argument><expr><name>p</name></expr></argument>, <argument><expr><name>i_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<switch>switch<condition>( <expr><literal type="number">0x100</literal> <operator>|</operator> <name><name>p</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr> )</condition>

<block>{<block_content>

<case>case <expr><literal type="number">0x1b9</literal></expr>:</case>

<case>case <expr><literal type="number">0x1bb</literal></expr>:</case>

<case>case <expr><literal type="number">0x1bc</literal></expr>:</case>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>DVDNAV_DEBUG</name></expr></argument>)</argument_list></call></expr></cpp:if>
<if_stmt><if>if<condition>( <expr><name><name>p</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>==</operator> <literal type="number">0xbc</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"received a PSM packet"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if<condition>( <expr><name><name>p</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>==</operator> <literal type="number">0xbb</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"received a SYSTEM packet"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>block_Release</name><argument_list>( <argument><expr><name>p_pkt</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">0x1ba</literal></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_scr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_mux_rate</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>ps_pkt_parse_pack</name><argument_list>( <argument><expr><name><name>p_pkt</name><operator>-&gt;</operator><name>p_buffer</name></name></expr></argument>, <argument><expr><name><name>p_pkt</name><operator>-&gt;</operator><name>i_buffer</name></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>i_scr</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_mux_rate</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>es_out_SetPCR</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_tf_out</name></name></expr></argument>, <argument><expr><name>i_scr</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i_mux_rate</name> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_mux_rate</name></name> <operator>=</operator> <name>i_mux_rate</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>block_Release</name><argument_list>( <argument><expr><name>p_pkt</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block>

<default>default:</default>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i_id</name> <init>= <expr><call><name>ps_pkt_id</name><argument_list>( <argument><expr><name><name>p_pkt</name><operator>-&gt;</operator><name>p_buffer</name></name></expr></argument>, <argument><expr><name><name>p_pkt</name><operator>-&gt;</operator><name>i_buffer</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>i_id</name> <operator>&gt;=</operator> <literal type="number">0xc0</literal></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>ps_track_t</name> <modifier>*</modifier></type><name>tk</name> <init>= <expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>tk</name><index>[<expr><call><name>ps_id_to_tk</name><argument_list>(<argument><expr><name>i_id</name></expr></argument>)</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>tk</name><operator>-&gt;</operator><name>b_configured</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>ESNew</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>i_id</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>tk</name><operator>-&gt;</operator><name>es</name></name> <operator>&amp;&amp;</operator>

<operator>!</operator><call><name>ps_pkt_parse_pes</name><argument_list>( <argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>p_demux</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>p_pkt</name></expr></argument>, <argument><expr><name><name>tk</name><operator>-&gt;</operator><name>i_skip</name></name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i_next_block_flags</name> <init>= <expr><name><name>tk</name><operator>-&gt;</operator><name>i_next_block_flags</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>i_next_block_flags</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i_next_block_flags</name> <operator>&amp;</operator> <name>BLOCK_FLAG_CELL_DISCONTINUITY</name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name><name>p_pkt</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>!=</operator> <name>VLC_TICK_INVALID</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>i_next_block_flags</name> <operator>&amp;=</operator> <operator>~</operator><name>BLOCK_FLAG_CELL_DISCONTINUITY</name></expr>;</expr_stmt>

<expr_stmt><expr><name>i_next_block_flags</name> <operator>|=</operator> <name>BLOCK_FLAG_DISCONTINUITY</name></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else<block type="pseudo"><block_content> <expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>i_next_block_flags</name></name> <operator>=</operator> <name>BLOCK_FLAG_CELL_DISCONTINUITY</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_pkt</name><operator>-&gt;</operator><name>i_flags</name></name> <operator>|=</operator> <name>i_next_block_flags</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_out_Send</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_tf_out</name></name></expr></argument>, <argument><expr><name><name>tk</name><operator>-&gt;</operator><name>es</name></name></expr></argument>, <argument><expr><name>p_pkt</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>i_next_block_flags</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>block_Release</name><argument_list>( <argument><expr><name>p_pkt</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><call><name>block_Release</name><argument_list>( <argument><expr><name>p_pkt</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<break>break;</break>

</block_content>}</block>

</block_content>}</block></switch>

<expr_stmt><expr><name>p</name> <operator>+=</operator> <name>i_size</name></expr>;</expr_stmt>

<expr_stmt><expr><name>len</name> <operator>-=</operator> <name>i_size</name></expr>;</expr_stmt>

</block_content>}</block></while>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>DemuxForceStill</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>buffer</name><index>[]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0xe0</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x07</literal></expr>,

<expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>,

<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0xB7</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>DemuxBlock</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>buffer</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_empty</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_tf_out</name></name></expr></argument>, <argument><expr><name>ES_OUT_GET_EMPTY</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>b_empty</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>ESNew</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_id</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ps_track_t</name> <modifier>*</modifier></type><name>tk</name> <init>= <expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>tk</name><index>[<expr><call><name>ps_id_to_tk</name><argument_list>(<argument><expr><name>i_id</name></expr></argument>)</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_select</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_lang</name> <init>= <expr><literal type="number">0xffff</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>tk</name><operator>-&gt;</operator><name>b_configured</name></name></expr> )</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><call><name>ps_track_fill</name><argument_list>( <argument><expr><name>tk</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>i_id</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>true</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"unknown codec for id=0x%x"</literal></expr></argument>, <argument><expr><name>i_id</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>tk</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_cat</name></name> <operator>==</operator> <name>VIDEO_ES</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_sar_num</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>sar</name><operator>.</operator><name>i_num</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_sar_den</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>sar</name><operator>.</operator><name>i_den</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>b_select</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if<condition>( <expr><name><name>tk</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_cat</name></name> <operator>==</operator> <name>AUDIO_ES</name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i_audio</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>(</operator><name>i_id</name><operator>&amp;</operator><literal type="number">0xbdf8</literal><operator>)</operator> <operator>==</operator> <literal type="number">0xbd88</literal></expr> )</condition> 

<block>{<block_content>

<expr_stmt><expr><name>i_audio</name> <operator>=</operator> <name>i_id</name><operator>&amp;</operator><literal type="number">0x07</literal></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if<condition>( <expr><operator>(</operator><name>i_id</name><operator>&amp;</operator><literal type="number">0xbdf0</literal><operator>)</operator> <operator>==</operator> <literal type="number">0xbd80</literal></expr> )</condition> 

<block>{<block_content>

<expr_stmt><expr><name>i_audio</name> <operator>=</operator> <name>i_id</name><operator>&amp;</operator><literal type="number">0xf</literal></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if<condition>( <expr><operator>(</operator><name>i_id</name><operator>&amp;</operator><literal type="number">0xbdf0</literal><operator>)</operator> <operator>==</operator> <literal type="number">0xbda0</literal></expr> )</condition> 

<block>{<block_content>

<expr_stmt><expr><name>i_audio</name> <operator>=</operator> <name>i_id</name><operator>&amp;</operator><literal type="number">0x1f</literal></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if<condition>( <expr><operator>(</operator> <name>i_id</name><operator>&amp;</operator><literal type="number">0xe0</literal> <operator>)</operator> <operator>==</operator> <literal type="number">0xc0</literal></expr> )</condition> 

<block>{<block_content>

<expr_stmt><expr><name>i_audio</name> <operator>=</operator> <name>i_id</name><operator>&amp;</operator><literal type="number">0x1f</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name>i_audio</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>i_lang</name> <operator>=</operator> <call><name>dvdnav_audio_stream_to_lang</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name>i_audio</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>dvdnav_get_active_audio_stream</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument> )</argument_list></call> <operator>==</operator> <name>i_audio</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>b_select</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if>

<if type="elseif">else if<condition>( <expr><name><name>tk</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_cat</name></name> <operator>==</operator> <name>SPU_ES</name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>int32_t</name></type> <name>i_title</name></decl>, <decl><type ref="prev"/><name>i_part</name></decl>;</decl_stmt>

<expr_stmt><expr><name>i_lang</name> <operator>=</operator> <call><name>dvdnav_spu_stream_to_lang</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name>i_id</name><operator>&amp;</operator><literal type="number">0x1f</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>subs</name><operator>.</operator><name>spu</name><operator>.</operator><name>palette</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>SPU_PALETTE_DEFINED</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>tk</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>subs</name><operator>.</operator><name>spu</name><operator>.</operator><name>palette</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>clut</name></name></expr></argument>,

<argument><expr><literal type="number">16</literal> <operator>*</operator> <sizeof>sizeof<argument_list>( <argument><expr><name>uint32_t</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dvdnav_current_title_info</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_title</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_part</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i_title</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>

<call><name>dvdnav_get_active_spu_stream</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument> )</argument_list></call> <operator>==</operator> <operator>(</operator><name>i_id</name><operator>&amp;</operator><literal type="number">0x1f</literal><operator>)</operator></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>b_select</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name>i_lang</name> <operator>!=</operator> <literal type="number">0xffff</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>psz_language</name></name> <operator>=</operator> <call><name>malloc</name><argument_list>( <argument><expr><literal type="number">3</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>tk</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>psz_language</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>psz_language</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>i_lang</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator><operator>&amp;</operator><literal type="number">0xff</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>psz_language</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>i_lang</name> <operator>)</operator><operator>&amp;</operator><literal type="number">0xff</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>psz_language</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_id</name></name> <operator>=</operator> <name>i_id</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>es</name></name> <operator>=</operator> <call><name>es_out_Add</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_tf_out</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>tk</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>b_select</name> <operator>&amp;&amp;</operator> <name><name>tk</name><operator>-&gt;</operator><name>es</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_tf_out</name></name></expr></argument>, <argument><expr><name>ES_OUT_SET_ES</name></expr></argument>, <argument><expr><name><name>tk</name><operator>-&gt;</operator><name>es</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>tk</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_cat</name></name> <operator>==</operator> <name>VIDEO_ES</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_tf_out</name></name></expr></argument>, <argument><expr><name>ES_OUT_VOUT_SET_MOUSE_EVENT</name></expr></argument>, <argument><expr><name><name>tk</name><operator>-&gt;</operator><name>es</name></name></expr></argument>,

<argument><expr><name>EventMouse</name></expr></argument>, <argument><expr><name>p_demux</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>event_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ButtonUpdate</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>false</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>event_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>tk</name><operator>-&gt;</operator><name>b_configured</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>StillTimer</name><parameter_list>( <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_data</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name>p_data</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>still</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>likely</name><argument_list>(<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>still</name><operator>.</operator><name>b_enabled</name></name></expr></argument>)</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>still</name><operator>.</operator><name>b_enabled</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dvdnav_still_skip</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>still</name><operator>.</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>EventMouse</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>vlc_mouse_t</name> <modifier>*</modifier></type><name>newmouse</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_data</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name> <init>= <expr><name>p_data</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name>newmouse</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_mouse_Init</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>oldmouse</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>pci_t</name> <modifier>*</modifier></type><name>pci</name> <init>= <expr><call><name>dvdnav_get_current_nav_pci</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>vlc_mouse_HasMoved</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>oldmouse</name></name></expr></argument>, <argument><expr><name>newmouse</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>dvdnav_mouse_select</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name>pci</name></expr></argument>, <argument><expr><name><name>newmouse</name><operator>-&gt;</operator><name>i_x</name></name></expr></argument>, <argument><expr><name><name>newmouse</name><operator>-&gt;</operator><name>i_y</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><call><name>vlc_mouse_HasPressed</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>oldmouse</name></name></expr></argument>, <argument><expr><name>newmouse</name></expr></argument>, <argument><expr><name>MOUSE_BUTTON_LEFT</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>event_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ButtonUpdate</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>true</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>event_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dvdnav_mouse_activate</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>dvdnav</name></name></expr></argument>, <argument><expr><name>pci</name></expr></argument>, <argument><expr><name><name>newmouse</name><operator>-&gt;</operator><name>i_x</name></name></expr></argument>, <argument><expr><name><name>newmouse</name><operator>-&gt;</operator><name>i_y</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>oldmouse</name></name> <operator>=</operator> <operator>*</operator><name>newmouse</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>ProbeDVD</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_name</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><operator>!</operator><operator>*</operator><name>psz_name</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>fd</name> <init>= <expr><call><name>vlc_open</name><argument_list>( <argument><expr><name>psz_name</name></expr></argument>, <argument><expr><name>O_RDONLY</name> <operator>|</operator> <name>O_NONBLOCK</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>fd</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition><block type="pseudo"><block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_FDOPENDIR</name></expr></argument>)</argument_list></call></expr></cpp:if>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<return>return <expr><ternary><condition><expr><operator>(</operator><name>errno</name> <operator>==</operator> <name>ENOENT</name><operator>)</operator></expr> ?</condition><then> <expr><name>VLC_EGENERIC</name></expr> </then><else>: <expr><name>VLC_SUCCESS</name></expr></else></ternary></expr>;</return>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><name>VLC_EGENERIC</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>stat</name></name></type> <name>stat_info</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>fstat</name><argument_list>( <argument><expr><name>fd</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>stat_info</name></expr></argument> )</argument_list></call> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition><block type="pseudo"><block_content>

<goto>goto <name>bailout</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>S_ISREG</name><argument_list>( <argument><expr><name><name>stat_info</name><operator>.</operator><name>st_mode</name></name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><call><name>S_ISDIR</name><argument_list>( <argument><expr><name><name>stat_info</name><operator>.</operator><name>st_mode</name></name></expr></argument> )</argument_list></call> <operator>||</operator> <call><name>S_ISBLK</name><argument_list>( <argument><expr><name><name>stat_info</name><operator>.</operator><name>st_mode</name></name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <name>VLC_SUCCESS</name></expr>;</expr_stmt></block_content></block></if></if_stmt> 

<goto>goto <name>bailout</name>;</goto>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>iso_dsc</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>lseek</name><argument_list>( <argument><expr><name>fd</name></expr></argument>, <argument><expr><literal type="number">0x8000</literal> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>SEEK_SET</name></expr></argument> )</argument_list></call> <operator>==</operator> <operator>-</operator><literal type="number">1</literal>

<operator>||</operator> <call><name>read</name><argument_list>( <argument><expr><name>fd</name></expr></argument>, <argument><expr><name>iso_dsc</name></expr></argument>, <argument><expr><sizeof>sizeof <argument_list>(<argument><expr><name>iso_dsc</name></expr></argument>)</argument_list></sizeof></expr></argument> )</argument_list></call> <operator>&lt;</operator> <operator>(</operator><name>int</name><operator>)</operator><sizeof>sizeof <argument_list>(<argument><expr><name>iso_dsc</name></expr></argument>)</argument_list></sizeof>

<operator>||</operator> <call><name>memcmp</name><argument_list>( <argument><expr><name>iso_dsc</name></expr></argument>, <argument><expr><literal type="string">"CD001\x01"</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<goto>goto <name>bailout</name>;</goto></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>anchor</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>lseek</name><argument_list>( <argument><expr><name>fd</name></expr></argument>, <argument><expr><literal type="number">256</literal> <operator>*</operator> <name>DVD_VIDEO_LB_LEN</name></expr></argument>, <argument><expr><name>SEEK_SET</name></expr></argument> )</argument_list></call> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal>

<operator>&amp;&amp;</operator> <call><name>read</name><argument_list>( <argument><expr><name>fd</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>anchor</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument> )</argument_list></call> <operator>==</operator> <literal type="number">2</literal>

<operator>&amp;&amp;</operator> <call><name>GetWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name>anchor</name></expr></argument> )</argument_list></call> <operator>==</operator> <literal type="number">2</literal></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <name>VLC_SUCCESS</name></expr>;</expr_stmt></block_content></block></if></if_stmt> 

<label><name>bailout</name>:</label>

<expr_stmt><expr><call><name>vlc_close</name><argument_list>( <argument><expr><name>fd</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>ret</name></expr>;</return>

</block_content>}</block></function>

</unit>
