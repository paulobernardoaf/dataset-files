<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\access\v4l2\linux\v4l2-controls.h"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CTRL_CLASS_USER</name></cpp:macro> <cpp:value>0x00980000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CTRL_CLASS_MPEG</name></cpp:macro> <cpp:value>0x00990000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CTRL_CLASS_CAMERA</name></cpp:macro> <cpp:value>0x009a0000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CTRL_CLASS_FM_TX</name></cpp:macro> <cpp:value>0x009b0000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CTRL_CLASS_FLASH</name></cpp:macro> <cpp:value>0x009c0000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CTRL_CLASS_JPEG</name></cpp:macro> <cpp:value>0x009d0000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CTRL_CLASS_IMAGE_SOURCE</name></cpp:macro> <cpp:value>0x009e0000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CTRL_CLASS_IMAGE_PROC</name></cpp:macro> <cpp:value>0x009f0000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CTRL_CLASS_DV</name></cpp:macro> <cpp:value>0x00a00000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_BASE</name></cpp:macro> <cpp:value>(V4L2_CTRL_CLASS_USER | 0x900)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_USER_BASE</name></cpp:macro> <cpp:value>V4L2_CID_BASE</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_USER_CLASS</name></cpp:macro> <cpp:value>(V4L2_CTRL_CLASS_USER | 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_BRIGHTNESS</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_CONTRAST</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_SATURATION</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+2)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_HUE</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+3)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_AUDIO_VOLUME</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+5)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_AUDIO_BALANCE</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+6)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_AUDIO_BASS</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+7)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_AUDIO_TREBLE</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+8)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_AUDIO_MUTE</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+9)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_AUDIO_LOUDNESS</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+10)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_BLACK_LEVEL</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+11)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_AUTO_WHITE_BALANCE</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+12)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_DO_WHITE_BALANCE</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+13)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_RED_BALANCE</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+14)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_BLUE_BALANCE</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+15)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_GAMMA</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+16)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_WHITENESS</name></cpp:macro> <cpp:value>(V4L2_CID_GAMMA)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_EXPOSURE</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+17)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_AUTOGAIN</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+18)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_GAIN</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+19)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_HFLIP</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+20)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_VFLIP</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+21)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_POWER_LINE_FREQUENCY</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+24)</cpp:value></cpp:define>

<enum>enum <name>v4l2_power_line_frequency</name> <block>{

<decl><name>V4L2_CID_POWER_LINE_FREQUENCY_DISABLED</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_CID_POWER_LINE_FREQUENCY_50HZ</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_CID_POWER_LINE_FREQUENCY_60HZ</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>V4L2_CID_POWER_LINE_FREQUENCY_AUTO</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_HUE_AUTO</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+25)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_WHITE_BALANCE_TEMPERATURE</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+26)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_SHARPNESS</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+27)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_BACKLIGHT_COMPENSATION</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+28)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_CHROMA_AGC</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+29)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_COLOR_KILLER</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+30)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_COLORFX</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+31)</cpp:value></cpp:define>

<enum>enum <name>v4l2_colorfx</name> <block>{

<decl><name>V4L2_COLORFX_NONE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_COLORFX_BW</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_COLORFX_SEPIA</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>V4L2_COLORFX_NEGATIVE</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

<decl><name>V4L2_COLORFX_EMBOSS</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

<decl><name>V4L2_COLORFX_SKETCH</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,

<decl><name>V4L2_COLORFX_SKY_BLUE</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,

<decl><name>V4L2_COLORFX_GRASS_GREEN</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>,

<decl><name>V4L2_COLORFX_SKIN_WHITEN</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,

<decl><name>V4L2_COLORFX_VIVID</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>,

<decl><name>V4L2_COLORFX_AQUA</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>,

<decl><name>V4L2_COLORFX_ART_FREEZE</name> <init>= <expr><literal type="number">11</literal></expr></init></decl>,

<decl><name>V4L2_COLORFX_SILHOUETTE</name> <init>= <expr><literal type="number">12</literal></expr></init></decl>,

<decl><name>V4L2_COLORFX_SOLARIZATION</name> <init>= <expr><literal type="number">13</literal></expr></init></decl>,

<decl><name>V4L2_COLORFX_ANTIQUE</name> <init>= <expr><literal type="number">14</literal></expr></init></decl>,

<decl><name>V4L2_COLORFX_SET_CBCR</name> <init>= <expr><literal type="number">15</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_AUTOBRIGHTNESS</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+32)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_BAND_STOP_FILTER</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+33)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_ROTATE</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+34)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_BG_COLOR</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+35)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_CHROMA_GAIN</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+36)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_ILLUMINATORS_1</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+37)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_ILLUMINATORS_2</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+38)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MIN_BUFFERS_FOR_CAPTURE</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+39)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MIN_BUFFERS_FOR_OUTPUT</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+40)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_ALPHA_COMPONENT</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+41)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_COLORFX_CBCR</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+42)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_LASTP1</name></cpp:macro> <cpp:value>(V4L2_CID_BASE+43)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_USER_MEYE_BASE</name></cpp:macro> <cpp:value>(V4L2_CID_USER_BASE + 0x1000)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_BASE</name></cpp:macro> <cpp:value>(V4L2_CTRL_CLASS_MPEG | 0x900)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_CLASS</name></cpp:macro> <cpp:value>(V4L2_CTRL_CLASS_MPEG | 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_STREAM_TYPE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+0)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_stream_type</name> <block>{

<decl><name>V4L2_MPEG_STREAM_TYPE_MPEG2_PS</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, 

<decl><name>V4L2_MPEG_STREAM_TYPE_MPEG2_TS</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>, 

<decl><name>V4L2_MPEG_STREAM_TYPE_MPEG1_SS</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>, 

<decl><name>V4L2_MPEG_STREAM_TYPE_MPEG2_DVD</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>, 

<decl><name>V4L2_MPEG_STREAM_TYPE_MPEG1_VCD</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>, 

<decl><name>V4L2_MPEG_STREAM_TYPE_MPEG2_SVCD</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>, 

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_STREAM_PID_PMT</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_STREAM_PID_AUDIO</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+2)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_STREAM_PID_VIDEO</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+3)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_STREAM_PID_PCR</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+4)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_STREAM_PES_ID_AUDIO</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+5)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_STREAM_PES_ID_VIDEO</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+6)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_STREAM_VBI_FMT</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+7)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_stream_vbi_fmt</name> <block>{

<decl><name>V4L2_MPEG_STREAM_VBI_FMT_NONE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, 

<decl><name>V4L2_MPEG_STREAM_VBI_FMT_IVTV</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>, 

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_AUDIO_SAMPLING_FREQ</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+100)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_audio_sampling_freq</name> <block>{

<decl><name>V4L2_MPEG_AUDIO_SAMPLING_FREQ_44100</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_SAMPLING_FREQ_48000</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_SAMPLING_FREQ_32000</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_AUDIO_ENCODING</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+101)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_audio_encoding</name> <block>{

<decl><name>V4L2_MPEG_AUDIO_ENCODING_LAYER_1</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_ENCODING_LAYER_2</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_ENCODING_LAYER_3</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_ENCODING_AAC</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_ENCODING_AC3</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_AUDIO_L1_BITRATE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+102)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_audio_l1_bitrate</name> <block>{

<decl><name>V4L2_MPEG_AUDIO_L1_BITRATE_32K</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L1_BITRATE_64K</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L1_BITRATE_96K</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L1_BITRATE_128K</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L1_BITRATE_160K</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L1_BITRATE_192K</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L1_BITRATE_224K</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L1_BITRATE_256K</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L1_BITRATE_288K</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L1_BITRATE_320K</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L1_BITRATE_352K</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L1_BITRATE_384K</name> <init>= <expr><literal type="number">11</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L1_BITRATE_416K</name> <init>= <expr><literal type="number">12</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L1_BITRATE_448K</name> <init>= <expr><literal type="number">13</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_AUDIO_L2_BITRATE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+103)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_audio_l2_bitrate</name> <block>{

<decl><name>V4L2_MPEG_AUDIO_L2_BITRATE_32K</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L2_BITRATE_48K</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L2_BITRATE_56K</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L2_BITRATE_64K</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L2_BITRATE_80K</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L2_BITRATE_96K</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L2_BITRATE_112K</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L2_BITRATE_128K</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L2_BITRATE_160K</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L2_BITRATE_192K</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L2_BITRATE_224K</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L2_BITRATE_256K</name> <init>= <expr><literal type="number">11</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L2_BITRATE_320K</name> <init>= <expr><literal type="number">12</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L2_BITRATE_384K</name> <init>= <expr><literal type="number">13</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_AUDIO_L3_BITRATE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+104)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_audio_l3_bitrate</name> <block>{

<decl><name>V4L2_MPEG_AUDIO_L3_BITRATE_32K</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L3_BITRATE_40K</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L3_BITRATE_48K</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L3_BITRATE_56K</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L3_BITRATE_64K</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L3_BITRATE_80K</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L3_BITRATE_96K</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L3_BITRATE_112K</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L3_BITRATE_128K</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L3_BITRATE_160K</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L3_BITRATE_192K</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L3_BITRATE_224K</name> <init>= <expr><literal type="number">11</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L3_BITRATE_256K</name> <init>= <expr><literal type="number">12</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_L3_BITRATE_320K</name> <init>= <expr><literal type="number">13</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_AUDIO_MODE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+105)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_audio_mode</name> <block>{

<decl><name>V4L2_MPEG_AUDIO_MODE_STEREO</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_MODE_JOINT_STEREO</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_MODE_DUAL</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_MODE_MONO</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_AUDIO_MODE_EXTENSION</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+106)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_audio_mode_extension</name> <block>{

<decl><name>V4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_4</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_8</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_12</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_16</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_AUDIO_EMPHASIS</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+107)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_audio_emphasis</name> <block>{

<decl><name>V4L2_MPEG_AUDIO_EMPHASIS_NONE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_EMPHASIS_50_DIV_15_uS</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_EMPHASIS_CCITT_J17</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_AUDIO_CRC</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+108)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_audio_crc</name> <block>{

<decl><name>V4L2_MPEG_AUDIO_CRC_NONE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_CRC_CRC16</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_AUDIO_MUTE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+109)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_AUDIO_AAC_BITRATE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+110)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_AUDIO_AC3_BITRATE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+111)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_audio_ac3_bitrate</name> <block>{

<decl><name>V4L2_MPEG_AUDIO_AC3_BITRATE_32K</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_AC3_BITRATE_40K</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_AC3_BITRATE_48K</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_AC3_BITRATE_56K</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_AC3_BITRATE_64K</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_AC3_BITRATE_80K</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_AC3_BITRATE_96K</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_AC3_BITRATE_112K</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_AC3_BITRATE_128K</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_AC3_BITRATE_160K</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_AC3_BITRATE_192K</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_AC3_BITRATE_224K</name> <init>= <expr><literal type="number">11</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_AC3_BITRATE_256K</name> <init>= <expr><literal type="number">12</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_AC3_BITRATE_320K</name> <init>= <expr><literal type="number">13</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_AC3_BITRATE_384K</name> <init>= <expr><literal type="number">14</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_AC3_BITRATE_448K</name> <init>= <expr><literal type="number">15</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_AC3_BITRATE_512K</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_AC3_BITRATE_576K</name> <init>= <expr><literal type="number">17</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_AC3_BITRATE_640K</name> <init>= <expr><literal type="number">18</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_AUDIO_DEC_PLAYBACK</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+112)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_audio_dec_playback</name> <block>{

<decl><name>V4L2_MPEG_AUDIO_DEC_PLAYBACK_AUTO</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_DEC_PLAYBACK_STEREO</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_DEC_PLAYBACK_LEFT</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_DEC_PLAYBACK_RIGHT</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_DEC_PLAYBACK_MONO</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_AUDIO_DEC_PLAYBACK_SWAPPED_STEREO</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_AUDIO_DEC_MULTILINGUAL_PLAYBACK</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+113)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_ENCODING</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+200)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_video_encoding</name> <block>{

<decl><name>V4L2_MPEG_VIDEO_ENCODING_MPEG_1</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_ENCODING_MPEG_2</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_ENCODING_MPEG_4_AVC</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_ASPECT</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+201)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_video_aspect</name> <block>{

<decl><name>V4L2_MPEG_VIDEO_ASPECT_1x1</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_ASPECT_4x3</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_ASPECT_16x9</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_ASPECT_221x100</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_B_FRAMES</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+202)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_GOP_SIZE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+203)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_GOP_CLOSURE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+204)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_PULLDOWN</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+205)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_BITRATE_MODE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+206)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_video_bitrate_mode</name> <block>{

<decl><name>V4L2_MPEG_VIDEO_BITRATE_MODE_VBR</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_BITRATE_MODE_CBR</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_BITRATE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+207)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_BITRATE_PEAK</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+208)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_TEMPORAL_DECIMATION</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+209)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_MUTE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+210)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_MUTE_YUV</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+211)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_DECODER_SLICE_INTERFACE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+212)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_DECODER_MPEG4_DEBLOCK_FILTER</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+213)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_CYCLIC_INTRA_REFRESH_MB</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+214)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_FRAME_RC_ENABLE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+215)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_HEADER_MODE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+216)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_video_header_mode</name> <block>{

<decl><name>V4L2_MPEG_VIDEO_HEADER_MODE_SEPARATE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_HEADER_MODE_JOINED_WITH_1ST_FRAME</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_MAX_REF_PIC</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+217)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_MB_RC_ENABLE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+218)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_MULTI_SLICE_MAX_BYTES</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+219)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_MULTI_SLICE_MAX_MB</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+220)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_MULTI_SLICE_MODE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+221)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_video_multi_slice_mode</name> <block>{

<decl><name>V4L2_MPEG_VIDEO_MULTI_SLICE_MODE_SINGLE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_MULTI_SICE_MODE_MAX_MB</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_MULTI_SICE_MODE_MAX_BYTES</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_VBV_SIZE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+222)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_DEC_PTS</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+223)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_DEC_FRAME</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+224)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_VBV_DELAY</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+225)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H263_I_FRAME_QP</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+300)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H263_P_FRAME_QP</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+301)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H263_B_FRAME_QP</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+302)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H263_MIN_QP</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+303)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H263_MAX_QP</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+304)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_I_FRAME_QP</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+350)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_P_FRAME_QP</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+351)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_B_FRAME_QP</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+352)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_MIN_QP</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+353)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_MAX_QP</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+354)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_8X8_TRANSFORM</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+355)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_CPB_SIZE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+356)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_ENTROPY_MODE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+357)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_video_h264_entropy_mode</name> <block>{

<decl><name>V4L2_MPEG_VIDEO_H264_ENTROPY_MODE_CAVLC</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_ENTROPY_MODE_CABAC</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_I_PERIOD</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+358)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_LEVEL</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+359)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_video_h264_level</name> <block>{

<decl><name>V4L2_MPEG_VIDEO_H264_LEVEL_1_0</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_LEVEL_1B</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_LEVEL_1_1</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_LEVEL_1_2</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_LEVEL_1_3</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_LEVEL_2_0</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_LEVEL_2_1</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_LEVEL_2_2</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_LEVEL_3_0</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_LEVEL_3_1</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_LEVEL_3_2</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_LEVEL_4_0</name> <init>= <expr><literal type="number">11</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_LEVEL_4_1</name> <init>= <expr><literal type="number">12</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_LEVEL_4_2</name> <init>= <expr><literal type="number">13</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_LEVEL_5_0</name> <init>= <expr><literal type="number">14</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_LEVEL_5_1</name> <init>= <expr><literal type="number">15</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_LOOP_FILTER_ALPHA</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+360)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_LOOP_FILTER_BETA</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+361)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_LOOP_FILTER_MODE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+362)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_video_h264_loop_filter_mode</name> <block>{

<decl><name>V4L2_MPEG_VIDEO_H264_LOOP_FILTER_MODE_ENABLED</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_LOOP_FILTER_MODE_DISABLED</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_LOOP_FILTER_MODE_DISABLED_AT_SLICE_BOUNDARY</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_PROFILE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+363)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_video_h264_profile</name> <block>{

<decl><name>V4L2_MPEG_VIDEO_H264_PROFILE_BASELINE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_PROFILE_CONSTRAINED_BASELINE</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_PROFILE_MAIN</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_PROFILE_EXTENDED</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_PROFILE_HIGH</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_PROFILE_HIGH_10</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_PROFILE_HIGH_422</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_PROFILE_HIGH_444_PREDICTIVE</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_PROFILE_HIGH_10_INTRA</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_PROFILE_HIGH_422_INTRA</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_PROFILE_HIGH_444_INTRA</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_PROFILE_CAVLC_444_INTRA</name> <init>= <expr><literal type="number">11</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_PROFILE_SCALABLE_BASELINE</name> <init>= <expr><literal type="number">12</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_PROFILE_SCALABLE_HIGH</name> <init>= <expr><literal type="number">13</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_PROFILE_SCALABLE_HIGH_INTRA</name> <init>= <expr><literal type="number">14</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_PROFILE_STEREO_HIGH</name> <init>= <expr><literal type="number">15</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_PROFILE_MULTIVIEW_HIGH</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_VUI_EXT_SAR_HEIGHT</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+364)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_VUI_EXT_SAR_WIDTH</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+365)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_VUI_SAR_ENABLE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+366)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_VUI_SAR_IDC</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+367)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_video_h264_vui_sar_idc</name> <block>{

<decl><name>V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_UNSPECIFIED</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_1x1</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_12x11</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_10x11</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_16x11</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_40x33</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_24x11</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_20x11</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_32x11</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_80x33</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_18x11</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_15x11</name> <init>= <expr><literal type="number">11</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_64x33</name> <init>= <expr><literal type="number">12</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_160x99</name> <init>= <expr><literal type="number">13</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_4x3</name> <init>= <expr><literal type="number">14</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_3x2</name> <init>= <expr><literal type="number">15</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_2x1</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_EXTENDED</name> <init>= <expr><literal type="number">17</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_SEI_FRAME_PACKING</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+368)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_SEI_FP_CURRENT_FRAME_0</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+369)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_SEI_FP_ARRANGEMENT_TYPE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+370)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_video_h264_sei_fp_arrangement_type</name> <block>{

<decl><name>V4L2_MPEG_VIDEO_H264_SEI_FP_ARRANGEMENT_TYPE_CHECKERBOARD</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_SEI_FP_ARRANGEMENT_TYPE_COLUMN</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_SEI_FP_ARRANGEMENT_TYPE_ROW</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_SEI_FP_ARRANGEMENT_TYPE_SIDE_BY_SIDE</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_SEI_FP_ARRANGEMENT_TYPE_TOP_BOTTOM</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_SEI_FP_ARRANGEMENT_TYPE_TEMPORAL</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_FMO</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+371)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_FMO_MAP_TYPE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+372)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_video_h264_fmo_map_type</name> <block>{

<decl><name>V4L2_MPEG_VIDEO_H264_FMO_MAP_TYPE_INTERLEAVED_SLICES</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_FMO_MAP_TYPE_SCATTERED_SLICES</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_FMO_MAP_TYPE_FOREGROUND_WITH_LEFT_OVER</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_FMO_MAP_TYPE_BOX_OUT</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_FMO_MAP_TYPE_RASTER_SCAN</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_FMO_MAP_TYPE_WIPE_SCAN</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_FMO_MAP_TYPE_EXPLICIT</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_FMO_SLICE_GROUP</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+373)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_FMO_CHANGE_DIRECTION</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+374)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_video_h264_fmo_change_dir</name> <block>{

<decl><name>V4L2_MPEG_VIDEO_H264_FMO_CHANGE_DIR_RIGHT</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_FMO_CHANGE_DIR_LEFT</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_FMO_CHANGE_RATE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+375)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_FMO_RUN_LENGTH</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+376)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_ASO</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+377)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_ASO_SLICE_ORDER</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+378)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_HIERARCHICAL_CODING</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+379)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_HIERARCHICAL_CODING_TYPE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+380)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_video_h264_hierarchical_coding_type</name> <block>{

<decl><name>V4L2_MPEG_VIDEO_H264_HIERARCHICAL_CODING_B</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_H264_HIERARCHICAL_CODING_P</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_HIERARCHICAL_CODING_LAYER</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+381)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_H264_HIERARCHICAL_CODING_LAYER_QP</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+382)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_MPEG4_I_FRAME_QP</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+400)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_MPEG4_P_FRAME_QP</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+401)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_MPEG4_B_FRAME_QP</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+402)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_MPEG4_MIN_QP</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+403)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_MPEG4_MAX_QP</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+404)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_MPEG4_LEVEL</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+405)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_video_mpeg4_level</name> <block>{

<decl><name>V4L2_MPEG_VIDEO_MPEG4_LEVEL_0</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_MPEG4_LEVEL_0B</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_MPEG4_LEVEL_1</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_MPEG4_LEVEL_2</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_MPEG4_LEVEL_3</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_MPEG4_LEVEL_3B</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_MPEG4_LEVEL_4</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_MPEG4_LEVEL_5</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_MPEG4_PROFILE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+406)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_video_mpeg4_profile</name> <block>{

<decl><name>V4L2_MPEG_VIDEO_MPEG4_PROFILE_SIMPLE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_MPEG4_PROFILE_ADVANCED_SIMPLE</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_MPEG4_PROFILE_CORE</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_MPEG4_PROFILE_SIMPLE_SCALABLE</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_VIDEO_MPEG4_PROFILE_ADVANCED_CODING_EFFICIENCY</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_VIDEO_MPEG4_QPEL</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_BASE+407)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_CX2341X_BASE</name></cpp:macro> <cpp:value>(V4L2_CTRL_CLASS_MPEG | 0x1000)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_CX2341X_BASE+0)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_cx2341x_video_spatial_filter_mode</name> <block>{

<decl><name>V4L2_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE_MANUAL</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE_AUTO</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_CX2341X_VIDEO_SPATIAL_FILTER</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_CX2341X_BASE+1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_CX2341X_BASE+2)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_cx2341x_video_luma_spatial_filter_type</name> <block>{

<decl><name>V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_OFF</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_1D_HOR</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_1D_VERT</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_2D_HV_SEPARABLE</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_2D_SYM_NON_SEPARABLE</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_CX2341X_BASE+3)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_cx2341x_video_chroma_spatial_filter_type</name> <block>{

<decl><name>V4L2_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE_OFF</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE_1D_HOR</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_CX2341X_BASE+4)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_cx2341x_video_temporal_filter_mode</name> <block>{

<decl><name>V4L2_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE_MANUAL</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE_AUTO</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_CX2341X_BASE+5)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_CX2341X_BASE+6)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_cx2341x_video_median_filter_type</name> <block>{

<decl><name>V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_OFF</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_HOR</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_VERT</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_HOR_VERT</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_DIAG</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_CX2341X_VIDEO_LUMA_MEDIAN_FILTER_BOTTOM</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_CX2341X_BASE+7)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_CX2341X_VIDEO_LUMA_MEDIAN_FILTER_TOP</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_CX2341X_BASE+8)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_CX2341X_VIDEO_CHROMA_MEDIAN_FILTER_BOTTOM</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_CX2341X_BASE+9)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_CX2341X_VIDEO_CHROMA_MEDIAN_FILTER_TOP</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_CX2341X_BASE+10)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_CX2341X_STREAM_INSERT_NAV_PACKETS</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_CX2341X_BASE+11)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_MFC51_BASE</name></cpp:macro> <cpp:value>(V4L2_CTRL_CLASS_MPEG | 0x1100)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_MFC51_VIDEO_DECODER_H264_DISPLAY_DELAY</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_MFC51_BASE+0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_MFC51_VIDEO_DECODER_H264_DISPLAY_DELAY_ENABLE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_MFC51_BASE+1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_MFC51_VIDEO_FRAME_SKIP_MODE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_MFC51_BASE+2)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_mfc51_video_frame_skip_mode</name> <block>{

<decl><name>V4L2_MPEG_MFC51_VIDEO_FRAME_SKIP_MODE_DISABLED</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_MFC51_VIDEO_FRAME_SKIP_MODE_LEVEL_LIMIT</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_MFC51_VIDEO_FRAME_SKIP_MODE_BUF_LIMIT</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_MFC51_VIDEO_FORCE_FRAME_TYPE</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_MFC51_BASE+3)</cpp:value></cpp:define>

<enum>enum <name>v4l2_mpeg_mfc51_video_force_frame_type</name> <block>{

<decl><name>V4L2_MPEG_MFC51_VIDEO_FORCE_FRAME_TYPE_DISABLED</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_MFC51_VIDEO_FORCE_FRAME_TYPE_I_FRAME</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_MPEG_MFC51_VIDEO_FORCE_FRAME_TYPE_NOT_CODED</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_MFC51_VIDEO_PADDING</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_MFC51_BASE+4)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_MFC51_VIDEO_PADDING_YUV</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_MFC51_BASE+5)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_MFC51_VIDEO_RC_FIXED_TARGET_BIT</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_MFC51_BASE+6)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_MFC51_VIDEO_RC_REACTION_COEFF</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_MFC51_BASE+7)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_MFC51_VIDEO_H264_ADAPTIVE_RC_ACTIVITY</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_MFC51_BASE+50)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_MFC51_VIDEO_H264_ADAPTIVE_RC_DARK</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_MFC51_BASE+51)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_MFC51_VIDEO_H264_ADAPTIVE_RC_SMOOTH</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_MFC51_BASE+52)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_MFC51_VIDEO_H264_ADAPTIVE_RC_STATIC</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_MFC51_BASE+53)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_MPEG_MFC51_VIDEO_H264_NUM_REF_PIC_FOR_P</name></cpp:macro> <cpp:value>(V4L2_CID_MPEG_MFC51_BASE+54)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_CAMERA_CLASS_BASE</name></cpp:macro> <cpp:value>(V4L2_CTRL_CLASS_CAMERA | 0x900)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_CAMERA_CLASS</name></cpp:macro> <cpp:value>(V4L2_CTRL_CLASS_CAMERA | 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_EXPOSURE_AUTO</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+1)</cpp:value></cpp:define>

<enum>enum <name>v4l2_exposure_auto_type</name> <block>{

<decl><name>V4L2_EXPOSURE_AUTO</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_EXPOSURE_MANUAL</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_EXPOSURE_SHUTTER_PRIORITY</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>V4L2_EXPOSURE_APERTURE_PRIORITY</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_EXPOSURE_ABSOLUTE</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+2)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_EXPOSURE_AUTO_PRIORITY</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+3)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_PAN_RELATIVE</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+4)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_TILT_RELATIVE</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+5)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_PAN_RESET</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+6)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_TILT_RESET</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+7)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_PAN_ABSOLUTE</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+8)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_TILT_ABSOLUTE</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+9)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_FOCUS_ABSOLUTE</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+10)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_FOCUS_RELATIVE</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+11)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_FOCUS_AUTO</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+12)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_ZOOM_ABSOLUTE</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+13)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_ZOOM_RELATIVE</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+14)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_ZOOM_CONTINUOUS</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+15)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_PRIVACY</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+16)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_IRIS_ABSOLUTE</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+17)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_IRIS_RELATIVE</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+18)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_AUTO_EXPOSURE_BIAS</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+19)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_AUTO_N_PRESET_WHITE_BALANCE</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+20)</cpp:value></cpp:define>

<enum>enum <name>v4l2_auto_n_preset_white_balance</name> <block>{

<decl><name>V4L2_WHITE_BALANCE_MANUAL</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_WHITE_BALANCE_AUTO</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_WHITE_BALANCE_INCANDESCENT</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>V4L2_WHITE_BALANCE_FLUORESCENT</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

<decl><name>V4L2_WHITE_BALANCE_FLUORESCENT_H</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

<decl><name>V4L2_WHITE_BALANCE_HORIZON</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,

<decl><name>V4L2_WHITE_BALANCE_DAYLIGHT</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,

<decl><name>V4L2_WHITE_BALANCE_FLASH</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>,

<decl><name>V4L2_WHITE_BALANCE_CLOUDY</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,

<decl><name>V4L2_WHITE_BALANCE_SHADE</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_WIDE_DYNAMIC_RANGE</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+21)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_IMAGE_STABILIZATION</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+22)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_ISO_SENSITIVITY</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+23)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_ISO_SENSITIVITY_AUTO</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+24)</cpp:value></cpp:define>

<enum>enum <name>v4l2_iso_sensitivity_auto_type</name> <block>{

<decl><name>V4L2_ISO_SENSITIVITY_MANUAL</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_ISO_SENSITIVITY_AUTO</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_EXPOSURE_METERING</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+25)</cpp:value></cpp:define>

<enum>enum <name>v4l2_exposure_metering</name> <block>{

<decl><name>V4L2_EXPOSURE_METERING_AVERAGE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_EXPOSURE_METERING_CENTER_WEIGHTED</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_EXPOSURE_METERING_SPOT</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_SCENE_MODE</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+26)</cpp:value></cpp:define>

<enum>enum <name>v4l2_scene_mode</name> <block>{

<decl><name>V4L2_SCENE_MODE_NONE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_SCENE_MODE_BACKLIGHT</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_SCENE_MODE_BEACH_SNOW</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>V4L2_SCENE_MODE_CANDLE_LIGHT</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

<decl><name>V4L2_SCENE_MODE_DAWN_DUSK</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

<decl><name>V4L2_SCENE_MODE_FALL_COLORS</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,

<decl><name>V4L2_SCENE_MODE_FIREWORKS</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,

<decl><name>V4L2_SCENE_MODE_LANDSCAPE</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>,

<decl><name>V4L2_SCENE_MODE_NIGHT</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,

<decl><name>V4L2_SCENE_MODE_PARTY_INDOOR</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>,

<decl><name>V4L2_SCENE_MODE_PORTRAIT</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>,

<decl><name>V4L2_SCENE_MODE_SPORTS</name> <init>= <expr><literal type="number">11</literal></expr></init></decl>,

<decl><name>V4L2_SCENE_MODE_SUNSET</name> <init>= <expr><literal type="number">12</literal></expr></init></decl>,

<decl><name>V4L2_SCENE_MODE_TEXT</name> <init>= <expr><literal type="number">13</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_3A_LOCK</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+27)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_LOCK_EXPOSURE</name></cpp:macro> <cpp:value>(1 &lt;&lt; 0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_LOCK_WHITE_BALANCE</name></cpp:macro> <cpp:value>(1 &lt;&lt; 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_LOCK_FOCUS</name></cpp:macro> <cpp:value>(1 &lt;&lt; 2)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_AUTO_FOCUS_START</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+28)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_AUTO_FOCUS_STOP</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+29)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_AUTO_FOCUS_STATUS</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+30)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_AUTO_FOCUS_STATUS_IDLE</name></cpp:macro> <cpp:value>(0 &lt;&lt; 0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_AUTO_FOCUS_STATUS_BUSY</name></cpp:macro> <cpp:value>(1 &lt;&lt; 0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_AUTO_FOCUS_STATUS_REACHED</name></cpp:macro> <cpp:value>(1 &lt;&lt; 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_AUTO_FOCUS_STATUS_FAILED</name></cpp:macro> <cpp:value>(1 &lt;&lt; 2)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_AUTO_FOCUS_RANGE</name></cpp:macro> <cpp:value>(V4L2_CID_CAMERA_CLASS_BASE+31)</cpp:value></cpp:define>

<enum>enum <name>v4l2_auto_focus_range</name> <block>{

<decl><name>V4L2_AUTO_FOCUS_RANGE_AUTO</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_AUTO_FOCUS_RANGE_NORMAL</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_AUTO_FOCUS_RANGE_MACRO</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>V4L2_AUTO_FOCUS_RANGE_INFINITY</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_FM_TX_CLASS_BASE</name></cpp:macro> <cpp:value>(V4L2_CTRL_CLASS_FM_TX | 0x900)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_FM_TX_CLASS</name></cpp:macro> <cpp:value>(V4L2_CTRL_CLASS_FM_TX | 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_RDS_TX_DEVIATION</name></cpp:macro> <cpp:value>(V4L2_CID_FM_TX_CLASS_BASE + 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_RDS_TX_PI</name></cpp:macro> <cpp:value>(V4L2_CID_FM_TX_CLASS_BASE + 2)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_RDS_TX_PTY</name></cpp:macro> <cpp:value>(V4L2_CID_FM_TX_CLASS_BASE + 3)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_RDS_TX_PS_NAME</name></cpp:macro> <cpp:value>(V4L2_CID_FM_TX_CLASS_BASE + 5)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_RDS_TX_RADIO_TEXT</name></cpp:macro> <cpp:value>(V4L2_CID_FM_TX_CLASS_BASE + 6)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_AUDIO_LIMITER_ENABLED</name></cpp:macro> <cpp:value>(V4L2_CID_FM_TX_CLASS_BASE + 64)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_AUDIO_LIMITER_RELEASE_TIME</name></cpp:macro> <cpp:value>(V4L2_CID_FM_TX_CLASS_BASE + 65)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_AUDIO_LIMITER_DEVIATION</name></cpp:macro> <cpp:value>(V4L2_CID_FM_TX_CLASS_BASE + 66)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_AUDIO_COMPRESSION_ENABLED</name></cpp:macro> <cpp:value>(V4L2_CID_FM_TX_CLASS_BASE + 80)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_AUDIO_COMPRESSION_GAIN</name></cpp:macro> <cpp:value>(V4L2_CID_FM_TX_CLASS_BASE + 81)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_AUDIO_COMPRESSION_THRESHOLD</name></cpp:macro> <cpp:value>(V4L2_CID_FM_TX_CLASS_BASE + 82)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_AUDIO_COMPRESSION_ATTACK_TIME</name></cpp:macro> <cpp:value>(V4L2_CID_FM_TX_CLASS_BASE + 83)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_AUDIO_COMPRESSION_RELEASE_TIME</name></cpp:macro> <cpp:value>(V4L2_CID_FM_TX_CLASS_BASE + 84)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_PILOT_TONE_ENABLED</name></cpp:macro> <cpp:value>(V4L2_CID_FM_TX_CLASS_BASE + 96)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_PILOT_TONE_DEVIATION</name></cpp:macro> <cpp:value>(V4L2_CID_FM_TX_CLASS_BASE + 97)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_PILOT_TONE_FREQUENCY</name></cpp:macro> <cpp:value>(V4L2_CID_FM_TX_CLASS_BASE + 98)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_TUNE_PREEMPHASIS</name></cpp:macro> <cpp:value>(V4L2_CID_FM_TX_CLASS_BASE + 112)</cpp:value></cpp:define>

<enum>enum <name>v4l2_preemphasis</name> <block>{

<decl><name>V4L2_PREEMPHASIS_DISABLED</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_PREEMPHASIS_50_uS</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_PREEMPHASIS_75_uS</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_TUNE_POWER_LEVEL</name></cpp:macro> <cpp:value>(V4L2_CID_FM_TX_CLASS_BASE + 113)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_TUNE_ANTENNA_CAPACITOR</name></cpp:macro> <cpp:value>(V4L2_CID_FM_TX_CLASS_BASE + 114)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_FLASH_CLASS_BASE</name></cpp:macro> <cpp:value>(V4L2_CTRL_CLASS_FLASH | 0x900)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_FLASH_CLASS</name></cpp:macro> <cpp:value>(V4L2_CTRL_CLASS_FLASH | 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_FLASH_LED_MODE</name></cpp:macro> <cpp:value>(V4L2_CID_FLASH_CLASS_BASE + 1)</cpp:value></cpp:define>

<enum>enum <name>v4l2_flash_led_mode</name> <block>{

<decl><name>V4L2_FLASH_LED_MODE_NONE</name></decl>,

<decl><name>V4L2_FLASH_LED_MODE_FLASH</name></decl>,

<decl><name>V4L2_FLASH_LED_MODE_TORCH</name></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_FLASH_STROBE_SOURCE</name></cpp:macro> <cpp:value>(V4L2_CID_FLASH_CLASS_BASE + 2)</cpp:value></cpp:define>

<enum>enum <name>v4l2_flash_strobe_source</name> <block>{

<decl><name>V4L2_FLASH_STROBE_SOURCE_SOFTWARE</name></decl>,

<decl><name>V4L2_FLASH_STROBE_SOURCE_EXTERNAL</name></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_FLASH_STROBE</name></cpp:macro> <cpp:value>(V4L2_CID_FLASH_CLASS_BASE + 3)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_FLASH_STROBE_STOP</name></cpp:macro> <cpp:value>(V4L2_CID_FLASH_CLASS_BASE + 4)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_FLASH_STROBE_STATUS</name></cpp:macro> <cpp:value>(V4L2_CID_FLASH_CLASS_BASE + 5)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_FLASH_TIMEOUT</name></cpp:macro> <cpp:value>(V4L2_CID_FLASH_CLASS_BASE + 6)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_FLASH_INTENSITY</name></cpp:macro> <cpp:value>(V4L2_CID_FLASH_CLASS_BASE + 7)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_FLASH_TORCH_INTENSITY</name></cpp:macro> <cpp:value>(V4L2_CID_FLASH_CLASS_BASE + 8)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_FLASH_INDICATOR_INTENSITY</name></cpp:macro> <cpp:value>(V4L2_CID_FLASH_CLASS_BASE + 9)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_FLASH_FAULT</name></cpp:macro> <cpp:value>(V4L2_CID_FLASH_CLASS_BASE + 10)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_FLASH_FAULT_OVER_VOLTAGE</name></cpp:macro> <cpp:value>(1 &lt;&lt; 0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_FLASH_FAULT_TIMEOUT</name></cpp:macro> <cpp:value>(1 &lt;&lt; 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_FLASH_FAULT_OVER_TEMPERATURE</name></cpp:macro> <cpp:value>(1 &lt;&lt; 2)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_FLASH_FAULT_SHORT_CIRCUIT</name></cpp:macro> <cpp:value>(1 &lt;&lt; 3)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_FLASH_FAULT_OVER_CURRENT</name></cpp:macro> <cpp:value>(1 &lt;&lt; 4)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_FLASH_FAULT_INDICATOR</name></cpp:macro> <cpp:value>(1 &lt;&lt; 5)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_FLASH_CHARGE</name></cpp:macro> <cpp:value>(V4L2_CID_FLASH_CLASS_BASE + 11)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_FLASH_READY</name></cpp:macro> <cpp:value>(V4L2_CID_FLASH_CLASS_BASE + 12)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_JPEG_CLASS_BASE</name></cpp:macro> <cpp:value>(V4L2_CTRL_CLASS_JPEG | 0x900)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_JPEG_CLASS</name></cpp:macro> <cpp:value>(V4L2_CTRL_CLASS_JPEG | 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_JPEG_CHROMA_SUBSAMPLING</name></cpp:macro> <cpp:value>(V4L2_CID_JPEG_CLASS_BASE + 1)</cpp:value></cpp:define>

<enum>enum <name>v4l2_jpeg_chroma_subsampling</name> <block>{

<decl><name>V4L2_JPEG_CHROMA_SUBSAMPLING_444</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_JPEG_CHROMA_SUBSAMPLING_422</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_JPEG_CHROMA_SUBSAMPLING_420</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>V4L2_JPEG_CHROMA_SUBSAMPLING_411</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

<decl><name>V4L2_JPEG_CHROMA_SUBSAMPLING_410</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

<decl><name>V4L2_JPEG_CHROMA_SUBSAMPLING_GRAY</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_JPEG_RESTART_INTERVAL</name></cpp:macro> <cpp:value>(V4L2_CID_JPEG_CLASS_BASE + 2)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_JPEG_COMPRESSION_QUALITY</name></cpp:macro> <cpp:value>(V4L2_CID_JPEG_CLASS_BASE + 3)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_JPEG_ACTIVE_MARKER</name></cpp:macro> <cpp:value>(V4L2_CID_JPEG_CLASS_BASE + 4)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_JPEG_ACTIVE_MARKER_APP0</name></cpp:macro> <cpp:value>(1 &lt;&lt; 0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_JPEG_ACTIVE_MARKER_APP1</name></cpp:macro> <cpp:value>(1 &lt;&lt; 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_JPEG_ACTIVE_MARKER_COM</name></cpp:macro> <cpp:value>(1 &lt;&lt; 16)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_JPEG_ACTIVE_MARKER_DQT</name></cpp:macro> <cpp:value>(1 &lt;&lt; 17)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_JPEG_ACTIVE_MARKER_DHT</name></cpp:macro> <cpp:value>(1 &lt;&lt; 18)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_IMAGE_SOURCE_CLASS_BASE</name></cpp:macro> <cpp:value>(V4L2_CTRL_CLASS_IMAGE_SOURCE | 0x900)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_IMAGE_SOURCE_CLASS</name></cpp:macro> <cpp:value>(V4L2_CTRL_CLASS_IMAGE_SOURCE | 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_VBLANK</name></cpp:macro> <cpp:value>(V4L2_CID_IMAGE_SOURCE_CLASS_BASE + 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_HBLANK</name></cpp:macro> <cpp:value>(V4L2_CID_IMAGE_SOURCE_CLASS_BASE + 2)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_ANALOGUE_GAIN</name></cpp:macro> <cpp:value>(V4L2_CID_IMAGE_SOURCE_CLASS_BASE + 3)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_IMAGE_PROC_CLASS_BASE</name></cpp:macro> <cpp:value>(V4L2_CTRL_CLASS_IMAGE_PROC | 0x900)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_IMAGE_PROC_CLASS</name></cpp:macro> <cpp:value>(V4L2_CTRL_CLASS_IMAGE_PROC | 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_LINK_FREQ</name></cpp:macro> <cpp:value>(V4L2_CID_IMAGE_PROC_CLASS_BASE + 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_PIXEL_RATE</name></cpp:macro> <cpp:value>(V4L2_CID_IMAGE_PROC_CLASS_BASE + 2)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_TEST_PATTERN</name></cpp:macro> <cpp:value>(V4L2_CID_IMAGE_PROC_CLASS_BASE + 3)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_DV_CLASS_BASE</name></cpp:macro> <cpp:value>(V4L2_CTRL_CLASS_DV | 0x900)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_DV_CLASS</name></cpp:macro> <cpp:value>(V4L2_CTRL_CLASS_DV | 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_DV_TX_HOTPLUG</name></cpp:macro> <cpp:value>(V4L2_CID_DV_CLASS_BASE + 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_DV_TX_RXSENSE</name></cpp:macro> <cpp:value>(V4L2_CID_DV_CLASS_BASE + 2)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_DV_TX_EDID_PRESENT</name></cpp:macro> <cpp:value>(V4L2_CID_DV_CLASS_BASE + 3)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_DV_TX_MODE</name></cpp:macro> <cpp:value>(V4L2_CID_DV_CLASS_BASE + 4)</cpp:value></cpp:define>

<enum>enum <name>v4l2_dv_tx_mode</name> <block>{

<decl><name>V4L2_DV_TX_MODE_DVI_D</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_DV_TX_MODE_HDMI</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_DV_TX_RGB_RANGE</name></cpp:macro> <cpp:value>(V4L2_CID_DV_CLASS_BASE + 5)</cpp:value></cpp:define>

<enum>enum <name>v4l2_dv_rgb_range</name> <block>{

<decl><name>V4L2_DV_RGB_RANGE_AUTO</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>V4L2_DV_RGB_RANGE_LIMITED</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>V4L2_DV_RGB_RANGE_FULL</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_DV_RX_POWER_PRESENT</name></cpp:macro> <cpp:value>(V4L2_CID_DV_CLASS_BASE + 100)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L2_CID_DV_RX_RGB_RANGE</name></cpp:macro> <cpp:value>(V4L2_CID_DV_CLASS_BASE + 101)</cpp:value></cpp:define>

</unit>
