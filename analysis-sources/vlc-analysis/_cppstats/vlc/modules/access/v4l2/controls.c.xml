<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\access\v4l2\controls.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ctype.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;errno.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/ioctl.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"v4l2.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <name>vlc_v4l2_ctrl_name</name>

<block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>name</name><index>[<expr><literal type="number">28</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>cid</name></decl>;</decl_stmt>

}</block></struct></type> <name>vlc_v4l2_ctrl_name_t</name>;</typedef>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>vlc_v4l2_ctrl_name_t</name></type> <name><name>controls</name><index>[]</index></name> <init>=

<expr><block>{

<expr><block>{ <expr><literal type="string">"brightness"</literal></expr>, <expr><name>V4L2_CID_BRIGHTNESS</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"contrast"</literal></expr>, <expr><name>V4L2_CID_CONTRAST</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"saturation"</literal></expr>, <expr><name>V4L2_CID_SATURATION</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"hue"</literal></expr>, <expr><name>V4L2_CID_HUE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"audio-volume"</literal></expr>, <expr><name>V4L2_CID_AUDIO_VOLUME</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"audio-balance"</literal></expr>, <expr><name>V4L2_CID_AUDIO_BALANCE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"audio-bass"</literal></expr>, <expr><name>V4L2_CID_AUDIO_BASS</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"audio-treble"</literal></expr>, <expr><name>V4L2_CID_AUDIO_TREBLE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"audio-mute"</literal></expr>, <expr><name>V4L2_CID_AUDIO_MUTE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"audio-loudness"</literal></expr>, <expr><name>V4L2_CID_AUDIO_LOUDNESS</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"auto-white-balance"</literal></expr>, <expr><name>V4L2_CID_AUTO_WHITE_BALANCE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"do-white-balance"</literal></expr>, <expr><name>V4L2_CID_DO_WHITE_BALANCE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"red-balance"</literal></expr>, <expr><name>V4L2_CID_RED_BALANCE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"blue-balance"</literal></expr>, <expr><name>V4L2_CID_BLUE_BALANCE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"gamma"</literal></expr>, <expr><name>V4L2_CID_GAMMA</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"autogain"</literal></expr>, <expr><name>V4L2_CID_AUTOGAIN</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"gain"</literal></expr>, <expr><name>V4L2_CID_GAIN</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"hflip"</literal></expr>, <expr><name>V4L2_CID_HFLIP</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"vflip"</literal></expr>, <expr><name>V4L2_CID_VFLIP</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"power-line-frequency"</literal></expr>, <expr><name>V4L2_CID_POWER_LINE_FREQUENCY</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"hue-auto"</literal></expr>, <expr><name>V4L2_CID_HUE_AUTO</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"white-balance-temperature"</literal></expr>, <expr><name>V4L2_CID_WHITE_BALANCE_TEMPERATURE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"sharpness"</literal></expr>, <expr><name>V4L2_CID_SHARPNESS</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"backlight-compensation"</literal></expr>, <expr><name>V4L2_CID_BACKLIGHT_COMPENSATION</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"chroma-gain-auto"</literal></expr>, <expr><name>V4L2_CID_CHROMA_AGC</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"color-killer"</literal></expr>, <expr><name>V4L2_CID_COLOR_KILLER</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"color-effect"</literal></expr>, <expr><name>V4L2_CID_COLORFX</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"rotate"</literal></expr>, <expr><name>V4L2_CID_ROTATE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"bg-color"</literal></expr>, <expr><name>V4L2_CID_BG_COLOR</name></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="string">"chroma-gain"</literal></expr>, <expr><name>V4L2_CID_CHROMA_GAIN</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"brightness-auto"</literal></expr>, <expr><name>V4L2_CID_AUTOBRIGHTNESS</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"band-stop-filter"</literal></expr>, <expr><name>V4L2_CID_BAND_STOP_FILTER</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"illuminators-1"</literal></expr>, <expr><name>V4L2_CID_ILLUMINATORS_1</name></expr> }</block></expr>, 

<expr><block>{ <expr><literal type="string">"illuminators-2"</literal></expr>, <expr><name>V4L2_CID_ILLUMINATORS_2</name></expr> }</block></expr>,

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CTRL_CID_KNOWN</name><parameter_list>(<parameter><type><name>cid</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((((uint32_t)cid) - V4L2_CID_BRIGHTNESS) &lt;= (V4L2_CID_BAND_STOP_FILTER - V4L2_CID_BRIGHTNESS))</cpp:value></cpp:define>

}</block></expr></init></decl>;</decl_stmt>

<struct>struct <name>vlc_v4l2_ctrl</name>

<block>{

<decl_stmt><decl><type><name>int</name></type> <name>fd</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>name</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name>default_value</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_v4l2_ctrl</name></name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>

}</block>;</struct>

<function><type><specifier>static</specifier> <name>int</name></type> <name>ControlSet</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>int_fast32_t</name></type> <name>value</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>v4l2_control</name></name></type> <name>ctrl</name> <init>= <expr><block>{

<expr><operator>.</operator><name>id</name> <operator>=</operator> <name><name>c</name><operator>-&gt;</operator><name>id</name></name></expr>,

<expr><operator>.</operator><name>value</name> <operator>=</operator> <name>value</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>v4l2_ioctl</name> <argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>, <argument><expr><name>VIDIOC_S_CTRL</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>ctrl</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>ControlSet64</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>value</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>v4l2_ext_control</name></name></type> <name>ext_ctrl</name> <init>= <expr><block>{

<expr><operator>.</operator><name>id</name> <operator>=</operator> <name><name>c</name><operator>-&gt;</operator><name>id</name></name></expr>,

<expr><operator>.</operator><name>size</name> <operator>=</operator> <literal type="number">0</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>ext_ctrl</name><operator>.</operator><name>value64</name></name> <operator>=</operator> <name>value</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>v4l2_ext_controls</name></name></type> <name>ext_ctrls</name> <init>= <expr><block>{

<expr><operator>.</operator><name>ctrl_class</name> <operator>=</operator> <call><name>V4L2_CTRL_ID2CLASS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>id</name></name></expr></argument>)</argument_list></call></expr>,

<expr><operator>.</operator><name>count</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>error_idx</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>controls</name> <operator>=</operator> <operator>&amp;</operator><name>ext_ctrl</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>v4l2_ioctl</name> <argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>, <argument><expr><name>VIDIOC_S_EXT_CTRLS</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>ext_ctrls</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>ControlSetStr</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>restrict</specifier></type> <name>value</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>v4l2_ext_control</name></name></type> <name>ext_ctrl</name> <init>= <expr><block>{

<expr><operator>.</operator><name>id</name> <operator>=</operator> <name><name>c</name><operator>-&gt;</operator><name>id</name></name></expr>,

<expr><operator>.</operator><name>size</name> <operator>=</operator> <call><name>strlen</name> <argument_list>(<argument><expr><name>value</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>ext_ctrl</name><operator>.</operator><name>string</name></name> <operator>=</operator> <operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><name>value</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>v4l2_ext_controls</name></name></type> <name>ext_ctrls</name> <init>= <expr><block>{

<expr><operator>.</operator><name>ctrl_class</name> <operator>=</operator> <call><name>V4L2_CTRL_ID2CLASS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>id</name></name></expr></argument>)</argument_list></call></expr>,

<expr><operator>.</operator><name>count</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>error_idx</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>controls</name> <operator>=</operator> <operator>&amp;</operator><name>ext_ctrl</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>v4l2_ioctl</name> <argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>, <argument><expr><name>VIDIOC_S_EXT_CTRLS</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>ext_ctrls</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>ControlSetCallback</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>var</name></decl></parameter>,

<parameter><decl><type><name>vlc_value_t</name></type> <name>old</name></decl></parameter>, <parameter><decl><type><name>vlc_value_t</name></type> <name>cur</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>ctrl</name> <init>= <expr><name>data</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>;</decl_stmt>

<switch>switch <condition>(<expr><name><name>ctrl</name><operator>-&gt;</operator><name>type</name></name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>V4L2_CTRL_TYPE_INTEGER</name></expr>:</case>

<case>case <expr><name>V4L2_CTRL_TYPE_MENU</name></expr>:</case>

<case>case <expr><name>V4L2_CTRL_TYPE_BITMASK</name></expr>:</case>

<case>case <expr><name>V4L2_CTRL_TYPE_INTEGER_MENU</name></expr>:</case>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>ControlSet</name> <argument_list>(<argument><expr><name>ctrl</name></expr></argument>, <argument><expr><name><name>cur</name><operator>.</operator><name>i_int</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>V4L2_CTRL_TYPE_BOOLEAN</name></expr>:</case>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>ControlSet</name> <argument_list>(<argument><expr><name>ctrl</name></expr></argument>, <argument><expr><name><name>cur</name><operator>.</operator><name>b_bool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>V4L2_CTRL_TYPE_BUTTON</name></expr>:</case>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>ControlSet</name> <argument_list>(<argument><expr><name>ctrl</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>V4L2_CTRL_TYPE_INTEGER64</name></expr>:</case>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>ControlSet64</name> <argument_list>(<argument><expr><name>ctrl</name></expr></argument>, <argument><expr><name><name>cur</name><operator>.</operator><name>i_int</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>V4L2_CTRL_TYPE_STRING</name></expr>:</case>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>ControlSetStr</name> <argument_list>(<argument><expr><name>ctrl</name></expr></argument>, <argument><expr><name><name>cur</name><operator>.</operator><name>psz_string</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<default>default:</default>

<expr_stmt><expr><call><name>vlc_assert_unreachable</name> <argument_list>()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></switch>

<if_stmt><if>if <condition>(<expr><name>ret</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"cannot set control %s: %s"</literal></expr></argument>, <argument><expr><name>var</name></expr></argument>, <argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>old</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>ControlsReset</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>list</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<while>while <condition>(<expr><name>list</name> <operator>!=</operator> <name>NULL</name></expr>)</condition>

<block>{<block_content>

<switch>switch <condition>(<expr><name><name>list</name><operator>-&gt;</operator><name>type</name></name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>V4L2_CTRL_TYPE_INTEGER</name></expr>:</case>

<case>case <expr><name>V4L2_CTRL_TYPE_MENU</name></expr>:</case>

<case>case <expr><name>V4L2_CTRL_TYPE_INTEGER_MENU</name></expr>:</case>

<expr_stmt><expr><call><name>var_SetInteger</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>list</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name><name>list</name><operator>-&gt;</operator><name>default_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>V4L2_CTRL_TYPE_BOOLEAN</name></expr>:</case>

<expr_stmt><expr><call><name>var_SetBool</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>list</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name><name>list</name><operator>-&gt;</operator><name>default_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<default>default:</default><empty_stmt>;</empty_stmt>

</block_content>}</block></switch>

<expr_stmt><expr><name>list</name> <operator>=</operator> <name><name>list</name><operator>-&gt;</operator><name>next</name></name></expr>;</expr_stmt>

</block_content>}</block></while>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>ControlsResetCallback</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>var</name></decl></parameter>,

<parameter><decl><type><name>vlc_value_t</name></type> <name>old</name></decl></parameter>, <parameter><decl><type><name>vlc_value_t</name></type> <name>cur</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ControlsReset</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>var</name></expr>;</expr_stmt> <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>old</name></expr>;</expr_stmt> <expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>cur</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>ControlsSetFromString</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>list</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>buf</name> <init>= <expr><call><name>var_InheritString</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name>CFG_PREFIX</name><literal type="string">"set-ctrls"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>buf</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>p</name> <init>= <expr><name>buf</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>*</operator><name>p</name> <operator>==</operator> <literal type="char">'{'</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>p</name><operator>++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>end</name> <init>= <expr><call><name>strchr</name> <argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><literal type="char">'}'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>end</name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><operator>*</operator><name>end</name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<label><name>next</name>:</label>

<while>while <condition>(<expr><name>p</name> <operator>!=</operator> <name>NULL</name> <operator>&amp;&amp;</operator> <operator>*</operator><name>p</name></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>value</name></decl>;</decl_stmt>

<expr_stmt><expr><name>p</name> <operator>+=</operator> <call><name>strspn</name> <argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><literal type="string">", "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>name</name> <operator>=</operator> <name>p</name></expr>;</expr_stmt>

<expr_stmt><expr><name>end</name> <operator>=</operator> <call><name>strchr</name> <argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><literal type="char">','</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>end</name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><operator>*</operator><operator>(</operator><name>end</name><operator>++</operator><operator>)</operator> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>p</name> <operator>=</operator> <name>end</name></expr>;</expr_stmt> 

<expr_stmt><expr><name>end</name> <operator>=</operator> <call><name>strchr</name> <argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><literal type="char">'='</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>end</name> <operator>==</operator> <name>NULL</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"syntax error in \"%s\": missing '='"</literal></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<continue>continue;</continue>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><operator>*</operator><operator>(</operator><name>end</name><operator>++</operator><operator>)</operator> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>value</name> <operator>=</operator> <name>end</name></expr>;</expr_stmt>

<for>for <control>(<init><decl><type><specifier>const</specifier> <name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>c</name> <init>= <expr><name>list</name></expr></init></decl>;</init> <condition><expr><name>c</name> <operator>!=</operator> <name>NULL</name></expr>;</condition> <incr><expr><name>c</name> <operator>=</operator> <name><name>c</name><operator>-&gt;</operator><name>next</name></name></expr></incr>)</control><block type="pseudo"><block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>strcasecmp</name> <argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name><name>c</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<switch>switch <condition>(<expr><name><name>c</name><operator>-&gt;</operator><name>type</name></name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>V4L2_CTRL_TYPE_INTEGER</name></expr>:</case>

<case>case <expr><name>V4L2_CTRL_TYPE_BOOLEAN</name></expr>:</case>

<case>case <expr><name>V4L2_CTRL_TYPE_MENU</name></expr>:</case>

<case>case <expr><name>V4L2_CTRL_TYPE_INTEGER_MENU</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name>long</name></type> <name>val</name> <init>= <expr><call><name>strtol</name> <argument_list>(<argument><expr><name>value</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>*</operator><name>end</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"syntax error in \"%s\": "</literal>

<literal type="string">" not an integer"</literal></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>next</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>ControlSet</name> <argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block>

<case>case <expr><name>V4L2_CTRL_TYPE_INTEGER64</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>val</name> <init>= <expr><call><name>strtoll</name> <argument_list>(<argument><expr><name>value</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>*</operator><name>end</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"syntax error in \"%s\": "</literal>

<literal type="string">" not an integer"</literal></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>next</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>ControlSet64</name> <argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block>

<case>case <expr><name>V4L2_CTRL_TYPE_STRING</name></expr>:</case>

<expr_stmt><expr><call><name>ControlSetStr</name> <argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>V4L2_CTRL_TYPE_BITMASK</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name>val</name> <init>= <expr><call><name>strtoul</name> <argument_list>(<argument><expr><name>value</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>*</operator><name>end</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"syntax error in \"%s\": "</literal>

<literal type="string">" not an integer"</literal></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>next</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>ControlSet</name> <argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block>

<default>default:</default>

<expr_stmt><expr><call><name>msg_Err</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"setting \"%s\" not supported"</literal></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>next</name>;</goto>

</block_content>}</block></switch></block_content></block></if></if_stmt></block_content></block></for>

<expr_stmt><expr><call><name>msg_Err</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"control \"%s\" not available"</literal></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></while>

<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>cidcmp</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint32_t</name> <modifier>*</modifier></type><name>id</name> <init>= <expr><name>a</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>vlc_v4l2_ctrl_name_t</name> <modifier>*</modifier></type><name>name</name> <init>= <expr><name>b</name></expr></init></decl>;</decl_stmt>

<return>return <expr><operator>(</operator><name>int32_t</name><operator>)</operator><operator>(</operator><operator>*</operator><name>id</name> <operator>-</operator> <name><name>name</name><operator>-&gt;</operator><name>cid</name></name><operator>)</operator></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>ControlCreate</name> <parameter_list>(<parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>v4l2_queryctrl</name></name> <modifier>*</modifier></type><name>query</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>ctrl</name> <init>= <expr><call><name>malloc</name> <argument_list>(<argument><expr><sizeof>sizeof <argument_list>(<argument><expr><operator>*</operator><name>ctrl</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>ctrl</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>ctrl</name><operator>-&gt;</operator><name>fd</name></name> <operator>=</operator> <name>fd</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ctrl</name><operator>-&gt;</operator><name>id</name></name> <operator>=</operator> <name><name>query</name><operator>-&gt;</operator><name>id</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ctrl</name><operator>-&gt;</operator><name>type</name></name> <operator>=</operator> <name><name>query</name><operator>-&gt;</operator><name>type</name></name></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>vlc_v4l2_ctrl_name_t</name> <modifier>*</modifier></type><name>known</name></decl>;</decl_stmt>

<expr_stmt><expr><name>known</name> <operator>=</operator> <call><name>bsearch</name> <argument_list>(<argument><expr><operator>&amp;</operator><name><name>query</name><operator>-&gt;</operator><name>id</name></name></expr></argument>, <argument><expr><name>controls</name></expr></argument>, <argument><expr><sizeof>sizeof <argument_list>(<argument><expr><name>controls</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof <argument_list>(<argument><expr><operator>*</operator><name>known</name></expr></argument>)</argument_list></sizeof></expr></argument>,

<argument><expr><sizeof>sizeof <argument_list>(<argument><expr><operator>*</operator><name>known</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>cidcmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>known</name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>strcpy</name> <argument_list>(<argument><expr><name><name>ctrl</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name><name>known</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<else>else

<block>{<block_content>

<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name><name>query</name><operator>-&gt;</operator><name>name</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>

<block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name>c</name> <init>= <expr><name><name>query</name><operator>-&gt;</operator><name>name</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">' '</literal> <operator>||</operator> <name>c</name> <operator>==</operator> <literal type="char">','</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>c</name> <operator>=</operator> <literal type="char">'_'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>c</name> <operator>&lt;</operator> <literal type="number">128</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>c</name> <operator>=</operator> <call><name>tolower</name> <argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>ctrl</name><operator>-&gt;</operator><name>name</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>c</name></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name><name>ctrl</name><operator>-&gt;</operator><name>name</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name><name>ctrl</name><operator>-&gt;</operator><name>default_value</name></name> <operator>=</operator> <name><name>query</name><operator>-&gt;</operator><name>default_value</name></name></expr>;</expr_stmt>

<return>return <expr><name>ctrl</name></expr>;</return>

</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CTRL_FLAGS_IGNORE</name></cpp:macro> <cpp:value>(V4L2_CTRL_FLAG_DISABLED |V4L2_CTRL_FLAG_READ_ONLY |V4L2_CTRL_FLAG_VOLATILE )</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>ControlAddInteger</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>v4l2_queryctrl</name></name> <modifier>*</modifier></type><name>query</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">" integer %s (%08"</literal><name>PRIX32</name><literal type="string">")"</literal></expr></argument>, <argument><expr><name><name>query</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name><name>query</name><operator>-&gt;</operator><name>id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>query</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>CTRL_FLAGS_IGNORE</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>c</name> <init>= <expr><call><name>ControlCreate</name> <argument_list>(<argument><expr><name>fd</name></expr></argument>, <argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>c</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>var_Create</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>c</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>VLC_VAR_INTEGER</name> <operator>|</operator> <name>VLC_VAR_ISCOMMAND</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>vlc_value_t</name></type> <name>val</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>v4l2_control</name></name></type> <name>ctrl</name> <init>= <expr><block>{ <expr><operator>.</operator><name>id</name> <operator>=</operator> <name><name>query</name><operator>-&gt;</operator><name>id</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>v4l2_ioctl</name> <argument_list>(<argument><expr><name>fd</name></expr></argument>, <argument><expr><name>VIDIOC_G_CTRL</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>ctrl</name></expr></argument>)</argument_list></call> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">" current: %3"</literal><name>PRId32</name><literal type="string">", default: %3"</literal><name>PRId32</name></expr></argument>,

<argument><expr><name><name>ctrl</name><operator>.</operator><name>value</name></name></expr></argument>, <argument><expr><name><name>query</name><operator>-&gt;</operator><name>default_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>val</name><operator>.</operator><name>i_int</name></name> <operator>=</operator> <name><name>ctrl</name><operator>.</operator><name>value</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_Change</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>c</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>VLC_VAR_SETVALUE</name></expr></argument>, <argument><expr><name>val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<macro><name>var_Change</name> <argument_list>(<argument>obj</argument>, <argument>c-&gt;name</argument>, <argument>VLC_VAR_SETMINMAX</argument>,

<argument>(vlc_value_t){ .i_int = query-&gt;minimum }</argument>,

<argument>(vlc_value_t){ .i_int = query-&gt;maximum }</argument> )</argument_list></macro><empty_stmt>;</empty_stmt>

<if_stmt><if>if <condition>(<expr><name><name>query</name><operator>-&gt;</operator><name>step</name></name> <operator>!=</operator> <literal type="number">1</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>val</name><operator>.</operator><name>i_int</name></name> <operator>=</operator> <name><name>query</name><operator>-&gt;</operator><name>step</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_Change</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>c</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>VLC_VAR_SETSTEP</name></expr></argument>, <argument><expr><name>val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>c</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>ControlAddBoolean</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>v4l2_queryctrl</name></name> <modifier>*</modifier></type><name>query</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">" boolean %s (%08"</literal><name>PRIX32</name><literal type="string">")"</literal></expr></argument>, <argument><expr><name><name>query</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name><name>query</name><operator>-&gt;</operator><name>id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>query</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>CTRL_FLAGS_IGNORE</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>c</name> <init>= <expr><call><name>ControlCreate</name> <argument_list>(<argument><expr><name>fd</name></expr></argument>, <argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>c</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>var_Create</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>c</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>VLC_VAR_BOOL</name> <operator>|</operator> <name>VLC_VAR_ISCOMMAND</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>vlc_value_t</name></type> <name>val</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>v4l2_control</name></name></type> <name>ctrl</name> <init>= <expr><block>{ <expr><operator>.</operator><name>id</name> <operator>=</operator> <name><name>query</name><operator>-&gt;</operator><name>id</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>v4l2_ioctl</name> <argument_list>(<argument><expr><name>fd</name></expr></argument>, <argument><expr><name>VIDIOC_G_CTRL</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>ctrl</name></expr></argument>)</argument_list></call> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">" current: %s, default: %s"</literal></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>ctrl</name><operator>.</operator><name>value</name></name></expr> ?</condition><then> <expr><literal type="string">" true"</literal></expr> </then><else>: <expr><literal type="string">"false"</literal></expr></else></ternary></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>query</name><operator>-&gt;</operator><name>default_value</name></name></expr> ?</condition><then> <expr><literal type="string">" true"</literal></expr> </then><else>: <expr><literal type="string">"false"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>val</name><operator>.</operator><name>b_bool</name></name> <operator>=</operator> <name><name>ctrl</name><operator>.</operator><name>value</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_Change</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>c</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>VLC_VAR_SETVALUE</name></expr></argument>, <argument><expr><name>val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>c</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>ControlAddMenu</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>v4l2_queryctrl</name></name> <modifier>*</modifier></type><name>query</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">" menu %s (%08"</literal><name>PRIX32</name><literal type="string">")"</literal></expr></argument>, <argument><expr><name><name>query</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name><name>query</name><operator>-&gt;</operator><name>id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>query</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>CTRL_FLAGS_IGNORE</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>c</name> <init>= <expr><call><name>ControlCreate</name> <argument_list>(<argument><expr><name>fd</name></expr></argument>, <argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>c</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>var_Create</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>c</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>VLC_VAR_INTEGER</name> <operator>|</operator> <name>VLC_VAR_ISCOMMAND</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>vlc_value_t</name></type> <name>val</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>v4l2_control</name></name></type> <name>ctrl</name> <init>= <expr><block>{ <expr><operator>.</operator><name>id</name> <operator>=</operator> <name><name>query</name><operator>-&gt;</operator><name>id</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>v4l2_ioctl</name> <argument_list>(<argument><expr><name>fd</name></expr></argument>, <argument><expr><name>VIDIOC_G_CTRL</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>ctrl</name></expr></argument>)</argument_list></call> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">" current: %"</literal><name>PRId32</name><literal type="string">", default: %"</literal><name>PRId32</name></expr></argument>,

<argument><expr><name><name>ctrl</name><operator>.</operator><name>value</name></name></expr></argument>, <argument><expr><name><name>query</name><operator>-&gt;</operator><name>default_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>val</name><operator>.</operator><name>i_int</name></name> <operator>=</operator> <name><name>ctrl</name><operator>.</operator><name>value</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_Change</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>c</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>VLC_VAR_SETVALUE</name></expr></argument>, <argument><expr><name>val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<macro><name>var_Change</name> <argument_list>(<argument>obj</argument>, <argument>c-&gt;name</argument>, <argument>VLC_VAR_SETMINMAX</argument>,

<argument>(vlc_value_t){ .i_int = query-&gt;minimum }</argument>,

<argument>(vlc_value_t){ .i_int = query-&gt;maximum }</argument> )</argument_list></macro><empty_stmt>;</empty_stmt>

<for>for <control>(<init><decl><type><name>uint_fast32_t</name></type> <name>idx</name> <init>= <expr><name><name>query</name><operator>-&gt;</operator><name>minimum</name></name></expr></init></decl>;</init>

<condition><expr><name>idx</name> <operator>&lt;=</operator> <operator>(</operator><name>uint_fast32_t</name><operator>)</operator><name><name>query</name><operator>-&gt;</operator><name>maximum</name></name></expr>;</condition>

<incr><expr><name>idx</name><operator>++</operator></expr></incr>)</control>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>v4l2_querymenu</name></name></type> <name>menu</name> <init>= <expr><block>{ <expr><operator>.</operator><name>id</name> <operator>=</operator> <name><name>query</name><operator>-&gt;</operator><name>id</name></name></expr>, <expr><operator>.</operator><name>index</name> <operator>=</operator> <name>idx</name></expr> }</block></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>v4l2_ioctl</name> <argument_list>(<argument><expr><name>fd</name></expr></argument>, <argument><expr><name>VIDIOC_QUERYMENU</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>menu</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">" choice %"</literal><name>PRIu32</name><literal type="string">") %s"</literal></expr></argument>, <argument><expr><name><name>menu</name><operator>.</operator><name>index</name></name></expr></argument>, <argument><expr><name><name>menu</name><operator>.</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>val</name><operator>.</operator><name>i_int</name></name> <operator>=</operator> <name><name>menu</name><operator>.</operator><name>index</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_Change</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>c</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>VLC_VAR_ADDCHOICE</name></expr></argument>, <argument><expr><name>val</name></expr></argument>,

<argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><name><name>menu</name><operator>.</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<return>return <expr><name>c</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>ControlAddButton</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>v4l2_queryctrl</name></name> <modifier>*</modifier></type><name>query</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">" button %s (%08"</literal><name>PRIX32</name><literal type="string">")"</literal></expr></argument>, <argument><expr><name><name>query</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name><name>query</name><operator>-&gt;</operator><name>id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>query</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>CTRL_FLAGS_IGNORE</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>c</name> <init>= <expr><call><name>ControlCreate</name> <argument_list>(<argument><expr><name>fd</name></expr></argument>, <argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>c</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>var_Create</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>c</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>VLC_VAR_VOID</name> <operator>|</operator> <name>VLC_VAR_ISCOMMAND</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>c</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>ControlAddInteger64</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>v4l2_queryctrl</name></name> <modifier>*</modifier></type><name>query</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">" 64-bits %s (%08"</literal><name>PRIX32</name><literal type="string">")"</literal></expr></argument>, <argument><expr><name><name>query</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name><name>query</name><operator>-&gt;</operator><name>id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>query</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>CTRL_FLAGS_IGNORE</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>c</name> <init>= <expr><call><name>ControlCreate</name> <argument_list>(<argument><expr><name>fd</name></expr></argument>, <argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>c</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>var_Create</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>c</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>VLC_VAR_INTEGER</name> <operator>|</operator> <name>VLC_VAR_ISCOMMAND</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>v4l2_ext_control</name></name></type> <name>ext_ctrl</name> <init>= <expr><block>{ <expr><operator>.</operator><name>id</name> <operator>=</operator> <name><name>c</name><operator>-&gt;</operator><name>id</name></name></expr>, <expr><operator>.</operator><name>size</name> <operator>=</operator> <literal type="number">0</literal></expr>, }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>v4l2_ext_controls</name></name></type> <name>ext_ctrls</name> <init>= <expr><block>{

<expr><operator>.</operator><name>ctrl_class</name> <operator>=</operator> <call><name>V4L2_CTRL_ID2CLASS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>id</name></name></expr></argument>)</argument_list></call></expr>,

<expr><operator>.</operator><name>count</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>error_idx</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>controls</name> <operator>=</operator> <operator>&amp;</operator><name>ext_ctrl</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>v4l2_ioctl</name> <argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>, <argument><expr><name>VIDIOC_G_EXT_CTRLS</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>ext_ctrls</name></expr></argument>)</argument_list></call> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>vlc_value_t</name></type> <name>val</name> <init>= <expr><block>{ <expr><operator>.</operator><name>i_int</name> <operator>=</operator> <name><name>ext_ctrl</name><operator>.</operator><name>value64</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">" current: %"</literal><name>PRId64</name></expr></argument>, <argument><expr><name><name>val</name><operator>.</operator><name>i_int</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_Change</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>c</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>VLC_VAR_SETVALUE</name></expr></argument>, <argument><expr><name>val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>c</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>ControlAddClass</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>v4l2_queryctrl</name></name> <modifier>*</modifier></type><name>query</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"control class %s:"</literal></expr></argument>, <argument><expr><name><name>query</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>fd</name></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>ControlAddString</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>v4l2_queryctrl</name></name> <modifier>*</modifier></type><name>query</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">" string %s (%08"</literal><name>PRIX32</name><literal type="string">")"</literal></expr></argument>, <argument><expr><name><name>query</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name><name>query</name><operator>-&gt;</operator><name>id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>query</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>CTRL_FLAGS_IGNORE</name><operator>)</operator> <operator>||</operator> <name><name>query</name><operator>-&gt;</operator><name>maximum</name></name> <operator>&gt;</operator> <literal type="number">65535</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>c</name> <init>= <expr><call><name>ControlCreate</name> <argument_list>(<argument><expr><name>fd</name></expr></argument>, <argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>c</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>var_Create</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>c</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>VLC_VAR_STRING</name> <operator>|</operator> <name>VLC_VAR_ISCOMMAND</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>buf</name> <init>= <expr><call><name>malloc</name> <argument_list>(<argument><expr><name><name>query</name><operator>-&gt;</operator><name>maximum</name></name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>likely</name><argument_list>(<argument><expr><name>buf</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>v4l2_ext_control</name></name></type> <name>ext_ctrl</name> <init>= <expr><block>{

<expr><operator>.</operator><name>id</name> <operator>=</operator> <name><name>c</name><operator>-&gt;</operator><name>id</name></name></expr>,

<expr><operator>.</operator><name>size</name> <operator>=</operator> <name><name>query</name><operator>-&gt;</operator><name>maximum</name></name> <operator>+</operator> <literal type="number">1</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>ext_ctrl</name><operator>.</operator><name>string</name></name> <operator>=</operator> <name>buf</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>v4l2_ext_controls</name></name></type> <name>ext_ctrls</name> <init>= <expr><block>{

<expr><operator>.</operator><name>ctrl_class</name> <operator>=</operator> <call><name>V4L2_CTRL_ID2CLASS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>id</name></name></expr></argument>)</argument_list></call></expr>,

<expr><operator>.</operator><name>count</name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name>error_idx</name> <operator>=</operator> <literal type="number">0</literal></expr>,

<expr><operator>.</operator><name>controls</name> <operator>=</operator> <operator>&amp;</operator><name>ext_ctrl</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>v4l2_ioctl</name> <argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>, <argument><expr><name>VIDIOC_G_EXT_CTRLS</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>ext_ctrls</name></expr></argument>)</argument_list></call> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>vlc_value_t</name></type> <name>val</name> <init>= <expr><block>{ <expr><operator>.</operator><name>psz_string</name> <operator>=</operator> <name>buf</name></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">" current: \"%s\""</literal></expr></argument>, <argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_Change</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>c</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>VLC_VAR_SETVALUE</name></expr></argument>, <argument><expr><name>val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>c</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>ControlAddBitMask</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>v4l2_queryctrl</name></name> <modifier>*</modifier></type><name>query</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">" bit mask %s (%08"</literal><name>PRIX32</name><literal type="string">")"</literal></expr></argument>, <argument><expr><name><name>query</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name><name>query</name><operator>-&gt;</operator><name>id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>query</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>CTRL_FLAGS_IGNORE</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>c</name> <init>= <expr><call><name>ControlCreate</name> <argument_list>(<argument><expr><name>fd</name></expr></argument>, <argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>c</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>var_Create</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>c</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>VLC_VAR_INTEGER</name> <operator>|</operator> <name>VLC_VAR_ISCOMMAND</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>vlc_value_t</name></type> <name>val</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>v4l2_control</name></name></type> <name>ctrl</name> <init>= <expr><block>{ <expr><operator>.</operator><name>id</name> <operator>=</operator> <name><name>query</name><operator>-&gt;</operator><name>id</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>v4l2_ioctl</name> <argument_list>(<argument><expr><name>fd</name></expr></argument>, <argument><expr><name>VIDIOC_G_CTRL</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>ctrl</name></expr></argument>)</argument_list></call> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">" current: 0x%08"</literal><name>PRIX32</name><literal type="string">", default: 0x%08"</literal><name>PRIX32</name></expr></argument>,

<argument><expr><name><name>ctrl</name><operator>.</operator><name>value</name></name></expr></argument>, <argument><expr><name><name>query</name><operator>-&gt;</operator><name>default_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>val</name><operator>.</operator><name>i_int</name></name> <operator>=</operator> <name><name>ctrl</name><operator>.</operator><name>value</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_Change</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>c</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>VLC_VAR_SETVALUE</name></expr></argument>, <argument><expr><name>val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<macro><name>var_Change</name> <argument_list>(<argument>obj</argument>, <argument>c-&gt;name</argument>, <argument>VLC_VAR_SETMINMAX</argument>,

<argument>(vlc_value_t){ .i_int = <literal type="number">0</literal> }</argument>,

<argument>(vlc_value_t){ .i_int = (uint32_t)query-&gt;maximum }</argument> )</argument_list></macro><empty_stmt>;</empty_stmt>

<return>return <expr><name>c</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>ControlAddIntMenu</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>v4l2_queryctrl</name></name> <modifier>*</modifier></type><name>query</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">" int menu %s (%08"</literal><name>PRIX32</name><literal type="string">")"</literal></expr></argument>, <argument><expr><name><name>query</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name><name>query</name><operator>-&gt;</operator><name>id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>query</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>CTRL_FLAGS_IGNORE</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>c</name> <init>= <expr><call><name>ControlCreate</name> <argument_list>(<argument><expr><name>fd</name></expr></argument>, <argument><expr><name>query</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>c</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>var_Create</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>c</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>VLC_VAR_INTEGER</name> <operator>|</operator> <name>VLC_VAR_ISCOMMAND</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>vlc_value_t</name></type> <name>val</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>v4l2_control</name></name></type> <name>ctrl</name> <init>= <expr><block>{ <expr><operator>.</operator><name>id</name> <operator>=</operator> <name><name>query</name><operator>-&gt;</operator><name>id</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>v4l2_ioctl</name> <argument_list>(<argument><expr><name>fd</name></expr></argument>, <argument><expr><name>VIDIOC_G_CTRL</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>ctrl</name></expr></argument>)</argument_list></call> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">" current: %"</literal><name>PRId32</name><literal type="string">", default: %"</literal><name>PRId32</name></expr></argument>,

<argument><expr><name><name>ctrl</name><operator>.</operator><name>value</name></name></expr></argument>, <argument><expr><name><name>query</name><operator>-&gt;</operator><name>default_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>val</name><operator>.</operator><name>i_int</name></name> <operator>=</operator> <name><name>ctrl</name><operator>.</operator><name>value</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_Change</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>c</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>VLC_VAR_SETVALUE</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<macro><name>var_Change</name> <argument_list>(<argument>obj</argument>, <argument>c-&gt;name</argument>, <argument>VLC_VAR_SETMINMAX</argument>,

<argument>(vlc_value_t){ .i_int = query-&gt;minimum }</argument>,

<argument>(vlc_value_t){ .i_int = query-&gt;maximum }</argument> )</argument_list></macro><empty_stmt>;</empty_stmt>

<for>for <control>(<init><decl><type><name>uint_fast32_t</name></type> <name>idx</name> <init>= <expr><name><name>query</name><operator>-&gt;</operator><name>minimum</name></name></expr></init></decl>;</init>

<condition><expr><name>idx</name> <operator>&lt;=</operator> <operator>(</operator><name>uint_fast32_t</name><operator>)</operator><name><name>query</name><operator>-&gt;</operator><name>maximum</name></name></expr>;</condition>

<incr><expr><name>idx</name><operator>++</operator></expr></incr>)</control>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>v4l2_querymenu</name></name></type> <name>menu</name> <init>= <expr><block>{ <expr><operator>.</operator><name>id</name> <operator>=</operator> <name><name>query</name><operator>-&gt;</operator><name>id</name></name></expr>, <expr><operator>.</operator><name>index</name> <operator>=</operator> <name>idx</name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>name</name><index>[<expr><sizeof>sizeof <argument_list>(<argument><expr><literal type="string">"-9223372036854775808"</literal></expr></argument>)</argument_list></sizeof></expr>]</index></name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>v4l2_ioctl</name> <argument_list>(<argument><expr><name>fd</name></expr></argument>, <argument><expr><name>VIDIOC_QUERYMENU</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>menu</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">" choice %"</literal><name>PRIu32</name><literal type="string">") %"</literal><name>PRId64</name></expr></argument>, <argument><expr><name><name>menu</name><operator>.</operator><name>index</name></name></expr></argument>,

<argument><expr><operator>(</operator><name>uint64_t</name><operator>)</operator><name><name>menu</name><operator>.</operator><name>value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>val</name><operator>.</operator><name>i_int</name></name> <operator>=</operator> <name><name>menu</name><operator>.</operator><name>index</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>sprintf</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><literal type="string">"%"</literal><name>PRId64</name></expr></argument>, <argument><expr><operator>(</operator><name>int64_t</name><operator>)</operator><name><name>menu</name><operator>.</operator><name>value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_Change</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>c</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>VLC_VAR_ADDCHOICE</name></expr></argument>, <argument><expr><name>val</name></expr></argument>,

<argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<return>return <expr><name>c</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>ControlAddUnknown</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>v4l2_queryctrl</name></name> <modifier>*</modifier></type><name>query</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">" unknown %s (%08"</literal><name>PRIX32</name><literal type="string">")"</literal></expr></argument>, <argument><expr><name><name>query</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name><name>query</name><operator>-&gt;</operator><name>id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Warn</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">" unknown control type %u"</literal></expr></argument>, <argument><expr><operator>(</operator><name>unsigned</name><operator>)</operator><name><name>query</name><operator>-&gt;</operator><name>type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>fd</name></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></function>

<typedef>typedef <function_decl><type><name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>ctrl_type_cb</name>) <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>v4l2_queryctrl</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function><type><name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>ControlsInit</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>var_Create</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"controls"</literal></expr></argument>, <argument><expr><name>VLC_VAR_INTEGER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ctrl_type_cb</name></type> <name><name>handlers</name><index>[]</index></name> <init>=

<expr><block>{

<expr><index>[<expr><name>V4L2_CTRL_TYPE_INTEGER</name></expr>]</index> <operator>=</operator> <name>ControlAddInteger</name></expr>,

<expr><index>[<expr><name>V4L2_CTRL_TYPE_BOOLEAN</name></expr>]</index> <operator>=</operator> <name>ControlAddBoolean</name></expr>,

<expr><index>[<expr><name>V4L2_CTRL_TYPE_MENU</name></expr>]</index> <operator>=</operator> <name>ControlAddMenu</name></expr>,

<expr><index>[<expr><name>V4L2_CTRL_TYPE_BUTTON</name></expr>]</index> <operator>=</operator> <name>ControlAddButton</name></expr>,

<expr><index>[<expr><name>V4L2_CTRL_TYPE_INTEGER64</name></expr>]</index> <operator>=</operator> <name>ControlAddInteger64</name></expr>,

<expr><index>[<expr><name>V4L2_CTRL_TYPE_CTRL_CLASS</name></expr>]</index> <operator>=</operator> <name>ControlAddClass</name></expr>,

<expr><index>[<expr><name>V4L2_CTRL_TYPE_STRING</name></expr>]</index> <operator>=</operator> <name>ControlAddString</name></expr>,

<expr><index>[<expr><name>V4L2_CTRL_TYPE_BITMASK</name></expr>]</index> <operator>=</operator> <name>ControlAddBitMask</name></expr>,

<expr><index>[<expr><name>V4L2_CTRL_TYPE_INTEGER_MENU</name></expr>]</index> <operator>=</operator> <name>ControlAddIntMenu</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>list</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>v4l2_queryctrl</name></name></type> <name>query</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>query</name><operator>.</operator><name>id</name></name> <operator>=</operator> <name>V4L2_CTRL_FLAG_NEXT_CTRL</name></expr>;</expr_stmt>

<while>while <condition>(<expr><call><name>v4l2_ioctl</name> <argument_list>(<argument><expr><name>fd</name></expr></argument>, <argument><expr><name>VIDIOC_QUERYCTRL</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>query</name></expr></argument>)</argument_list></call> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>ctrl_type_cb</name></type> <name>handler</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>query</name><operator>.</operator><name>type</name></name> <operator>&lt;</operator> <operator>(</operator><sizeof>sizeof <argument_list>(<argument><expr><name>handlers</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof <argument_list>(<argument><expr><name><name>handlers</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>handler</name> <operator>=</operator> <name><name>handlers</name><index>[<expr><name><name>query</name><operator>.</operator><name>type</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>handler</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>handler</name> <operator>=</operator> <name>ControlAddUnknown</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>c</name> <init>= <expr><call><name>handler</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name>fd</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>query</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>c</name> <operator>!=</operator> <name>NULL</name></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>vlc_value_t</name></type> <name>val</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>var_AddCallback</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>c</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>ControlSetCallback</name></expr></argument>, <argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_Change</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>c</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>VLC_VAR_SETTEXT</name></expr></argument>,

<argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><name><name>query</name><operator>.</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>val</name><operator>.</operator><name>i_int</name></name> <operator>=</operator> <name><name>query</name><operator>.</operator><name>id</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_Change</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"controls"</literal></expr></argument>, <argument><expr><name>VLC_VAR_ADDCHOICE</name></expr></argument>, <argument><expr><name>val</name></expr></argument>,

<argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><name><name>c</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>next</name></name> <operator>=</operator> <name>list</name></expr>;</expr_stmt>

<expr_stmt><expr><name>list</name> <operator>=</operator> <name>c</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>query</name><operator>.</operator><name>id</name></name> <operator>|=</operator> <name>V4L2_CTRL_FLAG_NEXT_CTRL</name></expr>;</expr_stmt>

</block_content>}</block></while>

<for>for <control>(<init><decl><type><name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>ctrl</name> <init>= <expr><name>list</name></expr></init></decl>;</init> <condition><expr><name>ctrl</name> <operator>!=</operator> <name>NULL</name></expr>;</condition> <incr><expr><name>ctrl</name> <operator>=</operator> <name><name>ctrl</name><operator>-&gt;</operator><name>next</name></name></expr></incr>)</control>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>CTRL_CID_KNOWN</name> <argument_list>(<argument><expr><name><name>ctrl</name><operator>-&gt;</operator><name>id</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>varname</name><index>[<expr><sizeof>sizeof <argument_list>(<argument><expr><name>CFG_PREFIX</name></expr></argument>)</argument_list></sizeof> <operator>+</operator> <sizeof>sizeof <argument_list>(<argument><expr><name><name>ctrl</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></sizeof> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>sprintf</name> <argument_list>(<argument><expr><name>varname</name></expr></argument>, <argument><expr><name>CFG_PREFIX</name><literal type="string">"%s"</literal></expr></argument>, <argument><expr><name><name>ctrl</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>val</name> <init>= <expr><call><name>var_InheritInteger</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name>varname</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>val</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt> 

<expr_stmt><expr><call><name>ControlSet</name> <argument_list>(<argument><expr><name>ctrl</name></expr></argument>, <argument><expr><name>val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

</block_content>}</block></for>

<expr_stmt><expr><call><name>ControlsSetFromString</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name>list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<block>{<block_content>

<decl_stmt><decl><type><name>vlc_value_t</name></type> <name>val</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>var_Create</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"reset"</literal></expr></argument>, <argument><expr><name>VLC_VAR_VOID</name> <operator>|</operator> <name>VLC_VAR_ISCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_Change</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"reset"</literal></expr></argument>, <argument><expr><name>VLC_VAR_SETTEXT</name></expr></argument>, <argument><expr><call><name>_</name><argument_list>(<argument><expr><literal type="string">"Reset defaults"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>val</name><operator>.</operator><name>i_int</name></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_Change</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"controls"</literal></expr></argument>, <argument><expr><name>VLC_VAR_ADDCHOICE</name></expr></argument>, <argument><expr><name>val</name></expr></argument>, <argument><expr><literal type="string">"reset"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_AddCallback</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"reset"</literal></expr></argument>, <argument><expr><name>ControlsResetCallback</name></expr></argument>, <argument><expr><name>list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>

<if_stmt><if>if <condition>(<expr><call><name>var_InheritBool</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name>CFG_PREFIX</name><literal type="string">"controls-reset"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>ControlsReset</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name>list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>list</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ControlsDeinit</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>list</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>var_DelCallback</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"reset"</literal></expr></argument>, <argument><expr><name>ControlsResetCallback</name></expr></argument>, <argument><expr><name>list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_Destroy</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"reset"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<while>while <condition>(<expr><name>list</name> <operator>!=</operator> <name>NULL</name></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>vlc_v4l2_ctrl_t</name> <modifier>*</modifier></type><name>next</name> <init>= <expr><name><name>list</name><operator>-&gt;</operator><name>next</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>var_DelCallback</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>list</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>ControlSetCallback</name></expr></argument>, <argument><expr><name>list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_Destroy</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name><name>list</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>list</name> <operator>=</operator> <name>next</name></expr>;</expr_stmt>

</block_content>}</block></while>

<expr_stmt><expr><call><name>var_Destroy</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"controls"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
