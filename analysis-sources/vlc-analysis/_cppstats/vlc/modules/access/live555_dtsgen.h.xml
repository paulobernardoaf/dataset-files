<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\access\live555_dtsgen.h"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTSGEN_REORDER_MAX</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTSGEN_HISTORY_COUNT</name></cpp:macro> <cpp:value>(DTSGEN_REORDER_MAX + 2)</cpp:value></cpp:define>

<struct>struct <name>dtsgen_t</name>

<block>{

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name><name>history</name><index>[<expr><name>DTSGEN_HISTORY_COUNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name><name>ordereddts</name><index>[<expr><name>DTSGEN_HISTORY_COUNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_startingdts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_startingdiff</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>reorderdepth</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>count</name></decl>;</decl_stmt>

}</block>;</struct>

<function><type><specifier>static</specifier> <name>int</name></type> <name>cmpvlctickp</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>p1</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>p2</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>*</operator><operator>(</operator><operator>(</operator><name>vlc_tick_t</name> <operator>*</operator><operator>)</operator><name>p1</name><operator>)</operator> <operator>&gt;=</operator> <operator>*</operator><operator>(</operator><operator>(</operator><name>vlc_tick_t</name> <operator>*</operator><operator>)</operator><name>p2</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><ternary><condition><expr><operator>*</operator><operator>(</operator><operator>(</operator><name>vlc_tick_t</name> <operator>*</operator><operator>)</operator><name>p1</name><operator>)</operator> <operator>&gt;</operator> <operator>*</operator><operator>(</operator><operator>(</operator><name>vlc_tick_t</name> <operator>*</operator><operator>)</operator><name>p2</name><operator>)</operator></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr>;</return></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>dtsgen_Init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>dtsgen_t</name></name> <modifier>*</modifier></type><name>d</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>count</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>reorderdepth</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>dtsgen_Resync</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>dtsgen_t</name></name> <modifier>*</modifier></type><name>d</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>count</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>reorderdepth</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>dtsgen_Clean</name><parameter_list>(<parameter><type><name>d</name></type></parameter>)</parameter_list></cpp:macro></cpp:define>

<function><type><specifier>static</specifier> <name>void</name></type> <name>dtsgen_AddNextPTS</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>dtsgen_t</name></name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>i_pts</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if<condition>(<expr><name><name>d</name><operator>-&gt;</operator><name>count</name></name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>d</name><operator>-&gt;</operator><name>count</name></name> <operator>&lt;</operator> <name>DTSGEN_HISTORY_COUNT</name></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name></type> <name>i</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name><name>d</name><operator>-&gt;</operator><name>count</name></name> <operator>&gt;</operator> <operator>(</operator><literal type="number">1</literal> <operator>+</operator> <name><name>d</name><operator>-&gt;</operator><name>reorderdepth</name></name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>i</name> <operator>=</operator> <name><name>d</name><operator>-&gt;</operator><name>count</name></name> <operator>-</operator> <operator>(</operator><literal type="number">1</literal> <operator>+</operator> <name><name>d</name><operator>-&gt;</operator><name>reorderdepth</name></name><operator>)</operator></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

<for>for<control>(<init>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>d</name><operator>-&gt;</operator><name>count</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>

<block>{<block_content>

<if_stmt><if>if<condition>(<expr><name><name>d</name><operator>-&gt;</operator><name>history</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&gt;</operator> <name>i_pts</name></expr>)</condition>

<block>{<block_content>

<if_stmt><if>if<condition>(<expr><name><name>d</name><operator>-&gt;</operator><name>reorderdepth</name></name> <operator>&lt;</operator> <name>DTSGEN_REORDER_MAX</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>reorderdepth</name></name><operator>++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<break>break;</break>

</block_content>}</block></for>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name><name>d</name><operator>-&gt;</operator><name>count</name></name> <operator>==</operator> <name>DTSGEN_HISTORY_COUNT</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>ordereddts</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>i_pts</name></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>memmove</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>history</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>d</name><operator>-&gt;</operator><name>history</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>,

<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>history</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator>*</operator> <operator>(</operator><name><name>d</name><operator>-&gt;</operator><name>count</name></name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>history</name><index>[<expr><name><name>d</name><operator>-&gt;</operator><name>count</name></name></expr>]</index></name> <operator>=</operator> <name>i_pts</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>ordereddts</name><index>[<expr><name><name>d</name><operator>-&gt;</operator><name>count</name></name><operator>++</operator></expr>]</index></name> <operator>=</operator> <name>i_pts</name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>qsort</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>d</name><operator>-&gt;</operator><name>ordereddts</name></name></expr></argument>, <argument><expr><name><name>d</name><operator>-&gt;</operator><name>count</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>ordereddts</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>cmpvlctickp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>vlc_tick_t</name></type> <name>dtsgen_GetDTS</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>dtsgen_t</name></name> <modifier>*</modifier></type><name>d</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_dts</name> <init>= <expr><name>VLC_TICK_INVALID</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name><name>d</name><operator>-&gt;</operator><name>count</name></name> <operator>&gt;</operator> <name>DTSGEN_REORDER_MAX</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name>i_dts</name> <operator>=</operator> <name><name>d</name><operator>-&gt;</operator><name>ordereddts</name><index>[<expr><name><name>d</name><operator>-&gt;</operator><name>count</name></name> <operator>-</operator> <name><name>d</name><operator>-&gt;</operator><name>reorderdepth</name></name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if<condition>(<expr><name><name>d</name><operator>-&gt;</operator><name>count</name></name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>i_startingdts</name></name> <operator>=</operator>

<name>i_dts</name> <operator>=</operator> <call><name>__MAX</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>history</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>-</operator> <call><name>VLC_TICK_FROM_MS</name><argument_list>(<argument><expr><literal type="number">150</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>VLC_TICK_0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>i_startingdiff</name></name> <operator>=</operator> <name><name>d</name><operator>-&gt;</operator><name>history</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>-</operator> <name>i_dts</name></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if<condition>(<expr><name><name>d</name><operator>-&gt;</operator><name>count</name></name> <operator>&gt;</operator> <literal type="number">1</literal></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_diff</name> <init>= <expr><name><name>d</name><operator>-&gt;</operator><name>ordereddts</name><index>[<expr><name><name>d</name><operator>-&gt;</operator><name>count</name></name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>-</operator>

<name><name>d</name><operator>-&gt;</operator><name>ordereddts</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>i_diff</name> <operator>=</operator> <call><name>__MIN</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>i_startingdiff</name></name></expr></argument>, <argument><expr><name>i_diff</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>i_startingdts</name></name> <operator>+=</operator> <name>i_diff</name> <operator>/</operator> <name>DTSGEN_REORDER_MAX</name></expr>;</expr_stmt>

<expr_stmt><expr><name>i_dts</name> <operator>=</operator> <name><name>d</name><operator>-&gt;</operator><name>i_startingdts</name></name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>i_dts</name></expr>;</return>

</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>DTSGEN_DEBUG</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function><type><specifier>static</specifier> <name>void</name></type> <name>dtsgen_Debug</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>dtsgen_t</name></name> <modifier>*</modifier></type><name>d</name></decl></parameter>,

<parameter><decl><type><name>vlc_tick_t</name></type> <name>dts</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>pts</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if<condition>(<expr><name>pts</name> <operator>==</operator> <name>VLC_TICK_INVALID</name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"dtsgen %"</literal> <name>PRId64</name> <literal type="string">" / pts %"</literal> <name>PRId64</name> <literal type="string">" diff %"</literal> <name>PRId64</name> <literal type="string">", "</literal>

<literal type="string">"pkt count %u, reorder %u"</literal></expr></argument>,

<argument><expr><name>dts</name> <operator>%</operator> <operator>(</operator><literal type="number">10</literal> <operator>*</operator> <name>CLOCK_FREQ</name><operator>)</operator></expr></argument>,

<argument><expr><name>pts</name> <operator>%</operator> <operator>(</operator><literal type="number">10</literal> <operator>*</operator> <name>CLOCK_FREQ</name><operator>)</operator></expr></argument>,

<argument><expr><operator>(</operator><name>pts</name> <operator>-</operator> <name>dts</name><operator>)</operator> <operator>%</operator> <operator>(</operator><literal type="number">10</literal> <operator>*</operator> <name>CLOCK_FREQ</name><operator>)</operator></expr></argument>,

<argument><expr><name><name>d</name><operator>-&gt;</operator><name>count</name></name></expr></argument>, <argument><expr><name><name>d</name><operator>-&gt;</operator><name>reorderdepth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>dtsgen_Debug</name><parameter_list>(<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>,<parameter><type><name>c</name></type></parameter>,<parameter><type><name>d</name></type></parameter>)</parameter_list></cpp:macro></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
