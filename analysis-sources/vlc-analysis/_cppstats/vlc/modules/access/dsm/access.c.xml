<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\access\dsm\access.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_services_discovery.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_url.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_access.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_variables.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_keystore.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_network.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_interrupt.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;errno.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_SYS_SOCKET_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/socket.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;netinet/in.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;netdb.h&gt;</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_ARPA_INET_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;arpa/inet.h&gt;</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bdsm/bdsm.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../smb_common.h"</cpp:file></cpp:include>

<function_decl><type><name>int</name></type> <name>bdsm_SdOpen</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>bdsm_SdClose</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>bdsm_sd_probe_Open</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SMB_FORCE_V1_TEXT</name></cpp:macro> <cpp:value>N_("Force the SMBv1 protocol (At your own risk)")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SMB_FORCE_V1_LONGTEXT</name></cpp:macro> <cpp:value>N_("Enable it, at your own risk, if you can't connect to Windows shares. " "If this option is needed, you should consider updating your Windows / " "Samba server and disabling the SMBv1 protocol as using this protocol " "has security implications.")</cpp:value></cpp:define>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>OpenNotForced</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>OpenForced</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<macro><name>VLC_SD_PROBE_HELPER</name><argument_list>( <argument><literal type="string">"dsm"</literal></argument>, <argument>N_(<literal type="string">"Windows networks"</literal>)</argument>, <argument>SD_CAT_LAN</argument> )</argument_list></macro>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BDSM_HELP</name></cpp:macro> <cpp:value>N_("libdsm's SMB (Windows network shares) input and browser")</cpp:value></cpp:define>

<macro><name>vlc_module_begin</name> <argument_list>()</argument_list></macro>

<macro><name>set_shortname</name><argument_list>( <argument><literal type="string">"dsm"</literal></argument> )</argument_list></macro>

<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"libdsm SMB input"</literal>)</argument> )</argument_list></macro>

<macro><name>set_help</name><argument_list>(<argument>BDSM_HELP</argument>)</argument_list></macro>

<macro><name>set_category</name><argument_list>( <argument>CAT_INPUT</argument> )</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_INPUT_ACCESS</argument> )</argument_list></macro>

<macro><name>add_string</name><argument_list>( <argument><literal type="string">"smb-user"</literal></argument>, <argument>NULL</argument>, <argument>SMB_USER_TEXT</argument>, <argument>SMB_USER_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>

<macro><name>add_password</name><argument_list>(<argument><literal type="string">"smb-pwd"</literal></argument>, <argument>NULL</argument>, <argument>SMB_PASS_TEXT</argument>, <argument>SMB_PASS_LONGTEXT</argument>)</argument_list></macro>

<macro><name>add_string</name><argument_list>( <argument><literal type="string">"smb-domain"</literal></argument>, <argument>NULL</argument>, <argument>SMB_DOMAIN_TEXT</argument>, <argument>SMB_DOMAIN_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>

<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"smb-force-v1"</literal></argument>, <argument>false</argument>, <argument>SMB_FORCE_V1_TEXT</argument>, <argument>SMB_FORCE_V1_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>

<macro><name>add_shortcut</name><argument_list>( <argument><literal type="string">"smb"</literal></argument>, <argument><literal type="string">"cifs"</literal></argument> )</argument_list></macro>

<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"access"</literal></argument>, <argument><literal type="number">22</literal></argument> )</argument_list></macro>

<macro><name>set_callbacks</name><argument_list>( <argument>OpenForced</argument>, <argument>Close</argument> )</argument_list></macro>

<macro><name>add_submodule</name><argument_list>()</argument_list></macro>

<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"access"</literal></argument>, <argument><literal type="number">20</literal></argument> )</argument_list></macro>

<macro><name>set_callbacks</name><argument_list>( <argument>OpenNotForced</argument>, <argument>Close</argument> )</argument_list></macro>

<macro><name>add_shortcut</name><argument_list>( <argument><literal type="string">"smb"</literal></argument>, <argument><literal type="string">"cifs"</literal></argument> )</argument_list></macro>

<macro><name>add_submodule</name><argument_list>()</argument_list></macro>

<macro><name>add_shortcut</name><argument_list>( <argument><literal type="string">"dsm-sd"</literal></argument> )</argument_list></macro>

<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"libdsm NETBIOS discovery module"</literal>)</argument> )</argument_list></macro>

<macro><name>set_category</name><argument_list>( <argument>CAT_PLAYLIST</argument> )</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_PLAYLIST_SD</argument> )</argument_list></macro>

<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"services_discovery"</literal></argument>, <argument><literal type="number">0</literal></argument> )</argument_list></macro>

<macro><name>set_callbacks</name><argument_list>( <argument>bdsm_SdOpen</argument>, <argument>bdsm_SdClose</argument> )</argument_list></macro>

<expr_stmt><expr><name>VLC_SD_PROBE_SUBMODULE</name>

<macro><name>vlc_module_end</name> <argument_list>()</argument_list></macro>

<specifier>static</specifier> <name>ssize_t</name> <call><name>Read</name><argument_list>( <argument><expr><name>stream_t</name> <operator>*</operator></expr></argument>, <argument><expr><name>void</name> <operator>*</operator></expr></argument>, <argument><expr><name>size_t</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Seek</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Control</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>va_list</name></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>BrowserInit</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>get_address</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>login</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>bool</name></type> <name>get_path</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>add_item</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>vlc_readdir_helper</name></name> <modifier>*</modifier></type><name>p_rdh</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_name</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_type</name></decl></parameter> )</parameter_list>;</function_decl>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>netbios_ns</name> <modifier>*</modifier></type><name>p_ns</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>smb_session</name> <modifier>*</modifier></type><name>p_session</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>vlc_url_t</name></type> <name>url</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_fullpath</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_share</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_path</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>netbios_name</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>in_addr</name></name></type> <name>addr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>smb_fd</name></type> <name>i_fd</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>smb_tid</name></type> <name>i_tid</name></decl>;</decl_stmt> 

}</block></struct></type> <name>access_sys_t</name>;</typedef>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Open</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name> <init>= <expr><operator>(</operator><name>stream_t</name><operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>smb_stat</name></type> <name>st</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>status</name> <init>= <expr><name>DSM_ERROR_GENERIC</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>p_sys</name> <operator>=</operator> <name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name> <operator>=</operator> <operator>(</operator><name>access_sys_t</name><operator>*</operator><operator>)</operator><call><name>calloc</name><argument_list>( <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><name>access_sys_t</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_ns</name></name> <operator>=</operator> <call><name>netbios_ns_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_ns</name></name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>

<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_session</name></name> <operator>=</operator> <call><name>smb_session_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_session</name></name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>

<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><call><name>vlc_UrlParseFixup</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>url</name></name></expr></argument>, <argument><expr><name><name>p_access</name><operator>-&gt;</operator><name>psz_url</name></name></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>

<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><call><name>get_address</name><argument_list>( <argument><expr><name>p_access</name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>VLC_SUCCESS</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>status</name> <operator>=</operator> <name>DSM_ERROR_NETWORK</name></expr>;</expr_stmt>

<goto>goto <name>error</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"Session: Host name = %s, ip = %s"</literal></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>netbios_name</name></name></expr></argument>,

<argument><expr><call><name>inet_ntoa</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>addr</name></name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>smb_session_connect</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_session</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>netbios_name</name></name></expr></argument>,

<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>addr</name><operator>.</operator><name>s_addr</name></name></expr></argument>, <argument><expr><name>SMB_TRANSPORT_TCP</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>status</name> <operator>!=</operator> <name>DSM_SUCCESS</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"Unable to connect/negotiate SMB session"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <name>DSM_ERROR_GENERIC</name></expr>;</expr_stmt>

<goto>goto <name>error</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>get_path</name><argument_list>( <argument><expr><name>p_access</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>login</name><argument_list>( <argument><expr><name>p_access</name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>VLC_SUCCESS</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"Unable to open file with path %s (in share %s)"</literal></expr></argument>,

<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>psz_path</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>psz_share</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>error</name>;</goto>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_sys</name><operator>-&gt;</operator><name>psz_share</name></name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><call><name>BrowserInit</name><argument_list>( <argument><expr><name>p_access</name></expr></argument> )</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_fd</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"Path: Share name = %s, path = %s"</literal></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>psz_share</name></name></expr></argument>,

<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>psz_path</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>st</name> <operator>=</operator> <call><name>smb_stat_fd</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_session</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_fd</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>smb_stat_get</name><argument_list>( <argument><expr><name>st</name></expr></argument>, <argument><expr><name>SMB_STAT_ISDIR</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>smb_fclose</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_session</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_fd</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>BrowserInit</name><argument_list>( <argument><expr><name>p_access</name></expr></argument> )</argument_list></call></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"Successfully opened smb://%s"</literal></expr></argument>, <argument><expr><name><name>p_access</name><operator>-&gt;</operator><name>psz_location</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ACCESS_SET_CALLBACKS</name><argument_list>( <argument><expr><name>Read</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>Control</name></expr></argument>, <argument><expr><name>Seek</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<label><name>error</name>:</label>

<expr_stmt><expr><call><name>Close</name><argument_list>( <argument><expr><name>p_this</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><ternary><condition><expr><call><name>vlc_killed</name><argument_list>()</argument_list></call> <operator>||</operator> <name>status</name> <operator>==</operator> <name>DSM_ERROR_NETWORK</name></expr> ?</condition><then> <expr><name>VLC_ETIMEOUT</name></expr>

</then><else>: <expr><name>VLC_EGENERIC</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>OpenForced</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>var_InheritBool</name><argument_list>( <argument><expr><name>p_this</name></expr></argument> , <argument><expr><literal type="string">"smb-force-v1"</literal></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_this</name></expr></argument>, <argument><expr><literal type="string">"SMB 2/3 disabled by the user, using *unsafe* SMB 1"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>Open</name><argument_list>( <argument><expr><name>p_this</name></expr></argument> )</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>OpenNotForced</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><call><name>var_InheritBool</name><argument_list>( <argument><expr><name>p_this</name></expr></argument> , <argument><expr><literal type="string">"smb-force-v1"</literal></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt> 

<return>return <expr><call><name>Open</name><argument_list>( <argument><expr><name>p_this</name></expr></argument> )</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name> <init>= <expr><operator>(</operator><name>stream_t</name><operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_ns</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>netbios_ns_destroy</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_ns</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_fd</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>smb_fclose</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_session</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_fd</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_session</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>smb_session_destroy</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_session</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_UrlClean</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>url</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>psz_fullpath</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>get_address</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>url</name><operator>.</operator><name>psz_host</name></name> <operator>!=</operator> <name>NULL</name> <operator>&amp;&amp;</operator>

<operator>!</operator><call><name>inet_pton</name><argument_list>( <argument><expr><name>AF_INET</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>url</name><operator>.</operator><name>psz_host</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>addr</name></name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>addrinfo</name></name> <modifier>*</modifier></type><name>p_info</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>netbios_ns_resolve</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_ns</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>url</name><operator>.</operator><name>psz_host</name></name></expr></argument>,

<argument><expr><name>NETBIOS_FILESERVER</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>addr</name><operator>.</operator><name>s_addr</name></name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>strlcpy</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>netbios_name</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>url</name><operator>.</operator><name>psz_host</name></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></if>

<if type="elseif">else if<condition>( <expr><call><name>getaddrinfo</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>url</name><operator>.</operator><name>psz_host</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>p_info</name></expr></argument> )</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name><name>p_info</name><operator>-&gt;</operator><name>ai_family</name></name> <operator>==</operator> <name>AF_INET</name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>sockaddr_in</name></name> <modifier>*</modifier></type><name>in</name> <init>= <expr><operator>(</operator>struct <name>sockaddr_in</name> <operator>*</operator><operator>)</operator><name><name>p_info</name><operator>-&gt;</operator><name>ai_addr</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>addr</name><operator>.</operator><name>s_addr</name></name> <operator>=</operator> <name><name>in</name><operator>-&gt;</operator><name>sin_addr</name><operator>.</operator><name>s_addr</name></name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_info</name><operator>-&gt;</operator><name>ai_family</name></name> <operator>!=</operator> <name>AF_INET</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>freeaddrinfo</name><argument_list>( <argument><expr><name>p_info</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>freeaddrinfo</name><argument_list>( <argument><expr><name>p_info</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else<block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_nbt</name> <init>= <expr><call><name>netbios_ns_inverse</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_ns</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>addr</name><operator>.</operator><name>s_addr</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>psz_nbt</name> <operator>!=</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>strlcpy</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>netbios_name</name></name></expr></argument>, <argument><expr><name>psz_nbt</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"Unable to get netbios name of %s"</literal></expr></argument>,

<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>url</name><operator>.</operator><name>psz_host</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>netbios_name</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>smb_connect</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_login</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_password</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_domain</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>smb_session_set_creds</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_session</name></name></expr></argument>, <argument><expr><name>psz_domain</name></expr></argument>,

<argument><expr><name>psz_login</name></expr></argument>, <argument><expr><name>psz_password</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>smb_session_login</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_session</name></name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>DSM_SUCCESS</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>EACCES</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_sys</name><operator>-&gt;</operator><name>psz_share</name></name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>smb_tree_connect</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_session</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>psz_share</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>i_tid</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>ret</name> <operator>!=</operator> <name>DSM_SUCCESS</name></expr> )</condition><block type="pseudo"><block_content>

<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>smb_fopen</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_session</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_tid</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>psz_path</name></name></expr></argument>,

<argument><expr><name>SMB_MOD_RO</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>i_fd</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>ret</name> <operator>!=</operator> <name>DSM_SUCCESS</name></expr> )</condition><block type="pseudo"><block_content>

<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

<label><name>error</name>:</label>

<return>return <expr><ternary><condition><expr><name>ret</name> <operator>==</operator> <name>DSM_ERROR_NT</name> <operator>&amp;&amp;</operator> <call><name>smb_session_get_nt_status</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_session</name></name></expr></argument> )</argument_list></call>

<operator>==</operator> <name>NT_STATUS_ACCESS_DENIED</name></expr> ?</condition><then> <expr><name>EACCES</name></expr> </then><else>: <expr><name>ENOENT</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>login</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name> <init>= <expr><name>VLC_EGENERIC</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_credential</name></type> <name>credential</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_var_domain</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_login</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>psz_password</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>psz_domain</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_guest</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_credential_init</name><argument_list>( <argument><expr><operator>&amp;</operator><name>credential</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>url</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>psz_var_domain</name> <operator>=</operator> <call><name>var_InheritString</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"smb-domain"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>credential</name><operator>.</operator><name>psz_realm</name></name> <operator>=</operator> <ternary><condition><expr><name>psz_var_domain</name></expr> ?</condition><then> <expr><name>psz_var_domain</name></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_credential_get</name><argument_list>( <argument><expr><operator>&amp;</operator><name>credential</name></expr></argument>, <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"smb-user"</literal></expr></argument>, <argument><expr><literal type="string">"smb-pwd"</literal></expr></argument>,

<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>credential</name><operator>.</operator><name>psz_username</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>psz_login</name> <operator>=</operator> <literal type="string">"Guest"</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>psz_password</name> <operator>=</operator> <literal type="string">""</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>b_guest</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><name>psz_login</name> <operator>=</operator> <name><name>credential</name><operator>.</operator><name>psz_username</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>psz_password</name> <operator>=</operator> <name><name>credential</name><operator>.</operator><name>psz_password</name></name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>psz_domain</name> <operator>=</operator> <ternary><condition><expr><name><name>credential</name><operator>.</operator><name>psz_realm</name></name></expr> ?</condition><then> <expr><name><name>credential</name><operator>.</operator><name>psz_realm</name></name></expr> </then><else>: <expr><name><name>p_sys</name><operator>-&gt;</operator><name>netbios_name</name></name></expr></else></ternary></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>connect_err</name> <init>= <expr><call><name>smb_connect</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><name>psz_login</name></expr></argument>, <argument><expr><name>psz_password</name></expr></argument>, <argument><expr><name>psz_domain</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>connect_err</name> <operator>==</operator> <name>ENOENT</name></expr> )</condition><block type="pseudo"><block_content>

<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name>connect_err</name> <operator>==</operator> <name>EACCES</name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>var_Type</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"smb-dialog-failed"</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<goto>goto <name>error</name>;</goto>

</block_content>}</block></if></if_stmt>

<while>while<condition>( <expr><name>connect_err</name> <operator>==</operator> <name>EACCES</name>

<operator>&amp;&amp;</operator> <call><name>vlc_credential_get</name><argument_list>( <argument><expr><operator>&amp;</operator><name>credential</name></expr></argument>, <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"smb-user"</literal></expr></argument>, <argument><expr><literal type="string">"smb-pwd"</literal></expr></argument>,

<argument><expr><name>SMB1_LOGIN_DIALOG_TITLE</name></expr></argument>,

<argument><expr><name>SMB_LOGIN_DIALOG_TEXT</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>netbios_name</name></name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>b_guest</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><name>psz_login</name> <operator>=</operator> <name><name>credential</name><operator>.</operator><name>psz_username</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>psz_password</name> <operator>=</operator> <name><name>credential</name><operator>.</operator><name>psz_password</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>psz_domain</name> <operator>=</operator> <ternary><condition><expr><name><name>credential</name><operator>.</operator><name>psz_realm</name></name></expr> ?</condition><then> <expr><name><name>credential</name><operator>.</operator><name>psz_realm</name></name></expr>

</then><else>: <expr><name><name>p_sys</name><operator>-&gt;</operator><name>netbios_name</name></name></expr></else></ternary></expr>;</expr_stmt>

<expr_stmt><expr><name>connect_err</name> <operator>=</operator> <call><name>smb_connect</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><name>psz_login</name></expr></argument>, <argument><expr><name>psz_password</name></expr></argument>, <argument><expr><name>psz_domain</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></while>

<if_stmt><if>if<condition>( <expr><name>connect_err</name> <operator>!=</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"Unable to login"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>error</name>;</goto>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><name>connect_err</name> <operator>==</operator> <literal type="number">0</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>smb_session_is_guest</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_session</name></name></expr></argument> )</argument_list></call> <operator>==</operator> <literal type="number">1</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"Login failure but you were logged in as a Guest"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>b_guest</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"Creds: username = '%s', domain = '%s'"</literal></expr></argument>,

<argument><expr><name>psz_login</name></expr></argument>, <argument><expr><name>psz_domain</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name>b_guest</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>vlc_credential_store</name><argument_list>( <argument><expr><operator>&amp;</operator><name>credential</name></expr></argument>, <argument><expr><name>p_access</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>i_ret</name> <operator>=</operator> <name>VLC_SUCCESS</name></expr>;</expr_stmt>

<label><name>error</name>:</label>

<expr_stmt><expr><call><name>vlc_credential_clean</name><argument_list>( <argument><expr><operator>&amp;</operator><name>credential</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>psz_var_domain</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>i_ret</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>backslash_path</name><parameter_list>( <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_path</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>iter</name> <init>= <expr><name>psz_path</name></expr></init></decl>;</decl_stmt>

<while>while<condition>( <expr><operator>*</operator><name>iter</name> <operator>!=</operator> <literal type="char">'\0'</literal></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><operator>*</operator><name>iter</name> <operator>==</operator> <literal type="char">'/'</literal></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><operator>*</operator><name>iter</name> <operator>=</operator> <literal type="char">'\\'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>iter</name><operator>++</operator></expr>;</expr_stmt>

</block_content>}</block></while>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>get_path</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>iter</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>url</name><operator>.</operator><name>psz_path</name></name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>psz_fullpath</name></name> <operator>=</operator> <call><name>vlc_uri_decode_duplicate</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>url</name><operator>.</operator><name>psz_path</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>psz_fullpath</name></name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>backslash_path</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>psz_fullpath</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>strlen</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>psz_fullpath</name></name></expr></argument> )</argument_list></call> <operator>&gt;</operator> <literal type="number">1</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>iter</name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>psz_fullpath</name></name></expr>;</expr_stmt>

<while>while<condition>( <expr><operator>*</operator><name>iter</name> <operator>==</operator> <literal type="char">'\\'</literal></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>iter</name><operator>++</operator></expr>;</expr_stmt></block_content></block></while> 

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>psz_share</name></name> <operator>=</operator> <name>iter</name></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"no share, nor file path provided, will switch to browser"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>iter</name> <operator>=</operator> <call><name>strchr</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>psz_share</name></name></expr></argument>, <argument><expr><literal type="char">'\\'</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>iter</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <call><name>strlen</name><argument_list>(<argument><expr><name>iter</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name>iter</name> <operator>!=</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content> 

<expr_stmt><expr><operator>*</operator><name>iter</name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>psz_path</name></name> <operator>=</operator> <literal type="string">""</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"no file path provided, will switch to browser "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>psz_path</name></name> <operator>=</operator> <name>iter</name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt> 

<expr_stmt><expr><operator>*</operator><name>iter</name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Seek</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type> <name>i_pos</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>i_pos</name> <operator>&gt;=</operator> <name>INT64_MAX</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"seeking to %"</literal><name>PRId64</name></expr></argument>, <argument><expr><name>i_pos</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>smb_fseek</name><argument_list>(<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_session</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_fd</name></name></expr></argument>, <argument><expr><name>i_pos</name></expr></argument>, <argument><expr><name>SMB_SEEK_SET</name></expr></argument>)</argument_list></call> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>ssize_t</name></type> <name>Read</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_buffer</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>i_len</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_read</name></decl>;</decl_stmt>

<expr_stmt><expr><name>i_read</name> <operator>=</operator> <call><name>smb_fread</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_session</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_fd</name></name></expr></argument>, <argument><expr><name>p_buffer</name></expr></argument>, <argument><expr><name>i_len</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i_read</name> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"read failed"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>errno</name> <operator>!=</operator> <name>EINTR</name> <operator>&amp;&amp;</operator> <name>errno</name> <operator>!=</operator> <name>EAGAIN</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>i_read</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Control</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_query</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>args</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<switch>switch<condition>( <expr><name>i_query</name></expr> )</condition>

<block>{<block_content>

<case>case <expr><name>STREAM_CAN_SEEK</name></expr>:</case>

<case>case <expr><name>STREAM_CAN_PAUSE</name></expr>:</case>

<case>case <expr><name>STREAM_CAN_CONTROL_PACE</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>bool</name><operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>STREAM_CAN_FASTSEEK</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>bool</name><operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>STREAM_GET_SIZE</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name>smb_stat</name></type> <name>st</name> <init>= <expr><call><name>smb_stat_fd</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_session</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_fd</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>uint64_t</name> <operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator> <call><name>smb_stat_get</name><argument_list>( <argument><expr><name>st</name></expr></argument>, <argument><expr><name>SMB_STAT_SIZE</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block>

<case>case <expr><name>STREAM_GET_PTS_DELAY</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>vlc_tick_t</name> <operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator> <call><name>VLC_TICK_FROM_MS</name><argument_list>(

<argument><expr><call><name>var_InheritInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"network-caching"</literal></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>STREAM_SET_PAUSE_STATE</name></expr>:</case>

<break>break;</break>

<default>default:</default>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></switch>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>add_item</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>vlc_readdir_helper</name></name> <modifier>*</modifier></type><name>p_rdh</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_name</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_type</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_uri</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_encoded_name</name> <init>= <expr><call><name>vlc_uri_encode</name><argument_list>( <argument><expr><name>psz_name</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>psz_encoded_name</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_sep</name> <init>= <expr><ternary><condition><expr><name><name>p_access</name><operator>-&gt;</operator><name>psz_location</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>!=</operator> <literal type="char">'\0'</literal>

<operator>&amp;&amp;</operator> <name><name>p_access</name><operator>-&gt;</operator><name>psz_location</name><index>[<expr><call><name>strlen</name><argument_list>(<argument><expr><name><name>p_access</name><operator>-&gt;</operator><name>psz_location</name></name></expr></argument>)</argument_list></call> <operator>-</operator><literal type="number">1</literal></expr>]</index></name> <operator>!=</operator> <literal type="char">'/'</literal></expr>

?</condition><then> <expr><literal type="string">"/"</literal></expr> </then><else>: <expr><literal type="string">""</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>i_ret</name> <operator>=</operator> <call><name>asprintf</name><argument_list>( <argument><expr><operator>&amp;</operator><name>psz_uri</name></expr></argument>, <argument><expr><literal type="string">"smb://%s%s%s"</literal></expr></argument>, <argument><expr><name><name>p_access</name><operator>-&gt;</operator><name>psz_location</name></name></expr></argument>,

<argument><expr><name>psz_sep</name></expr></argument>, <argument><expr><name>psz_encoded_name</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>psz_encoded_name</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i_ret</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>i_ret</name> <operator>=</operator> <call><name>vlc_readdir_helper_additem</name><argument_list>( <argument><expr><name>p_rdh</name></expr></argument>, <argument><expr><name>psz_uri</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>psz_name</name></expr></argument>, <argument><expr><name>i_type</name></expr></argument>,

<argument><expr><name>ITEM_NET</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>psz_uri</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>i_ret</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>BrowseShare</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>input_item_node_t</name> <modifier>*</modifier></type><name>p_node</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>smb_share_list</name></type> <name>shares</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>share_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name> <init>= <expr><name>VLC_SUCCESS</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>smb_share_get_list</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_session</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>shares</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>share_count</name></expr></argument> )</argument_list></call>

<operator>!=</operator> <name>DSM_SUCCESS</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_readdir_helper</name></name></type> <name>rdh</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_readdir_helper_init</name><argument_list>( <argument><expr><operator>&amp;</operator><name>rdh</name></expr></argument>, <argument><expr><name>p_access</name></expr></argument>, <argument><expr><name>p_node</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<for>for<control>( <init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>share_count</name> <operator>&amp;&amp;</operator> <name>i_ret</name> <operator>==</operator> <name>VLC_SUCCESS</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<expr_stmt><expr><name>psz_name</name> <operator>=</operator> <call><name>smb_share_list_at</name><argument_list>( <argument><expr><name>shares</name></expr></argument>, <argument><expr><name>i</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>psz_name</name><index>[<expr><call><name>strlen</name><argument_list>( <argument><expr><name>psz_name</name></expr></argument> )</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'$'</literal></expr>)</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt>

<expr_stmt><expr><name>i_ret</name> <operator>=</operator> <call><name>add_item</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>rdh</name></expr></argument>, <argument><expr><name>psz_name</name></expr></argument>, <argument><expr><name>ITEM_TYPE_DIRECTORY</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>vlc_readdir_helper_finish</name><argument_list>( <argument><expr><operator>&amp;</operator><name>rdh</name></expr></argument>, <argument><expr><name>i_ret</name> <operator>==</operator> <name>VLC_SUCCESS</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>smb_share_list_destroy</name><argument_list>( <argument><expr><name>shares</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>i_ret</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>BrowseDirectory</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>input_item_node_t</name> <modifier>*</modifier></type><name>p_node</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>smb_stat_list</name></type> <name>files</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>smb_stat</name></type> <name>st</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_query</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>files_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name> <init>= <expr><name>VLC_SUCCESS</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>psz_path</name></name> <operator>!=</operator> <name>NULL</name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><call><name>asprintf</name><argument_list>( <argument><expr><operator>&amp;</operator><name>psz_query</name></expr></argument>, <argument><expr><literal type="string">"%s\\*"</literal></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>psz_path</name></name></expr></argument> )</argument_list></call> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>files</name> <operator>=</operator> <call><name>smb_find</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_session</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_tid</name></name></expr></argument>, <argument><expr><name>psz_query</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>psz_query</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name>files</name> <operator>=</operator> <call><name>smb_find</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_session</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_tid</name></name></expr></argument>, <argument><expr><literal type="string">"\\*"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if<condition>( <expr><name>files</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_readdir_helper</name></name></type> <name>rdh</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_readdir_helper_init</name><argument_list>( <argument><expr><operator>&amp;</operator><name>rdh</name></expr></argument>, <argument><expr><name>p_access</name></expr></argument>, <argument><expr><name>p_node</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>files_count</name> <operator>=</operator> <call><name>smb_stat_list_count</name><argument_list>( <argument><expr><name>files</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<for>for<control>( <init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>files_count</name> <operator>&amp;&amp;</operator> <name>i_ret</name> <operator>==</operator> <name>VLC_SUCCESS</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i_type</name></decl>;</decl_stmt>

<expr_stmt><expr><name>st</name> <operator>=</operator> <call><name>smb_stat_list_at</name><argument_list>( <argument><expr><name>files</name></expr></argument>, <argument><expr><name>i</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>st</name> <operator>==</operator> <name>NULL</name></expr> )</condition>

<block>{<block_content>

<continue>continue;</continue>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>psz_name</name> <operator>=</operator> <call><name>smb_stat_name</name><argument_list>( <argument><expr><name>st</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_type</name> <operator>=</operator> <ternary><condition><expr><call><name>smb_stat_get</name><argument_list>( <argument><expr><name>st</name></expr></argument>, <argument><expr><name>SMB_STAT_ISDIR</name></expr></argument> )</argument_list></call></expr> ?</condition><then>

<expr><name>ITEM_TYPE_DIRECTORY</name></expr> </then><else>: <expr><name>ITEM_TYPE_FILE</name></expr></else></ternary></expr>;</expr_stmt>

<expr_stmt><expr><name>i_ret</name> <operator>=</operator> <call><name>add_item</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>rdh</name></expr></argument>, <argument><expr><name>psz_name</name></expr></argument>, <argument><expr><name>i_type</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>vlc_readdir_helper_finish</name><argument_list>( <argument><expr><operator>&amp;</operator><name>rdh</name></expr></argument>, <argument><expr><name>i_ret</name> <operator>==</operator> <name>VLC_SUCCESS</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>smb_stat_list_destroy</name><argument_list>( <argument><expr><name>files</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>i_ret</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>BrowserInit</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>psz_share</name></name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_access</name><operator>-&gt;</operator><name>pf_readdir</name></name> <operator>=</operator> <name>BrowseShare</name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_access</name><operator>-&gt;</operator><name>pf_readdir</name></name> <operator>=</operator> <name>BrowseDirectory</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><name><name>p_access</name><operator>-&gt;</operator><name>pf_control</name></name> <operator>=</operator> <name>access_vaDirectoryControlHelper</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

</unit>
