<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\access\dvb\linux_dvb.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_access.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_fs.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;errno.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/types.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/ioctl.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;fcntl.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;unistd.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;linux/dvb/version.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;linux/dvb/dmx.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;linux/dvb/frontend.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"dvb.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"scan.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DMX</name></cpp:macro> <cpp:value>"/dev/dvb/adapter%d/demux%d"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FRONTEND</name></cpp:macro> <cpp:value>"/dev/dvb/adapter%d/frontend%d"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DVR</name></cpp:macro> <cpp:value>"/dev/dvb/adapter%d/dvr%d"</cpp:value></cpp:define>

<struct>struct <name>frontend_t</name>

<block>{

<decl_stmt><decl><type><name>fe_status_t</name></type> <name>i_last_status</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>dvb_frontend_info</name></name></type> <name>info</name></decl>;</decl_stmt>

}</block>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FRONTEND_LOCK_TIMEOUT</name></cpp:macro> <cpp:value>10000000</cpp:value></cpp:define> 

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>FrontendInfo</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dvb_sys_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>FrontendSetQPSK</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dvb_sys_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>FrontendSetQAM</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dvb_sys_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>FrontendSetOFDM</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dvb_sys_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>FrontendSetATSC</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dvb_sys_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function><type><name>int</name></type> <name>FrontendOpen</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>dvb_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_access</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>frontend_t</name> <modifier>*</modifier></type> <name>p_frontend</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_adapter</name></decl>, <decl><type ref="prev"/><name>i_device</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_probe</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>frontend</name><index>[<expr><literal type="number">128</literal></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><name>i_adapter</name> <operator>=</operator> <call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-adapter"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_device</name> <operator>=</operator> <call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-device"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>b_probe</name> <operator>=</operator> <call><name>var_GetBool</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-probe"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>snprintf</name><argument_list>( <argument><expr><name>frontend</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>frontend</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>FRONTEND</name></expr></argument>, <argument><expr><name>i_adapter</name></expr></argument>, <argument><expr><name>i_device</name></expr></argument> )</argument_list></call> <operator>&gt;=</operator> <operator>(</operator><name>int</name><operator>)</operator><sizeof>sizeof<argument_list>(<argument><expr><name>frontend</name></expr></argument>)</argument_list></sizeof></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"snprintf() truncated string for FRONTEND"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>frontend</name><index>[<expr><sizeof>sizeof<argument_list>(<argument><expr><name>frontend</name></expr></argument>)</argument_list></sizeof> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_frontend</name></name> <operator>=</operator> <name>p_frontend</name> <operator>=</operator> <call><name>malloc</name><argument_list>( <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>frontend_t</name></expr></argument>)</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name>p_frontend</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"Opening device %s"</literal></expr></argument>, <argument><expr><name>frontend</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>(</operator><name><name>p_sys</name><operator>-&gt;</operator><name>i_frontend_handle</name></name> <operator>=</operator> <call><name>vlc_open</name><argument_list>(<argument><expr><name>frontend</name></expr></argument>, <argument><expr><name>O_RDWR</name> <operator>|</operator> <name>O_NONBLOCK</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"FrontEndOpen: opening device failed: %s"</literal></expr></argument>,

<argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_frontend</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name>b_probe</name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>psz_expected</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>psz_real</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>FrontendInfo</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_close</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frontend_handle</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_frontend</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<switch>switch<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>type</name></name></expr> )</condition>

<block>{<block_content>

<case>case <expr><name>FE_OFDM</name></expr>:</case>

<expr_stmt><expr><name>psz_real</name> <operator>=</operator> <literal type="string">"DVB-T"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>FE_QAM</name></expr>:</case>

<expr_stmt><expr><name>psz_real</name> <operator>=</operator> <literal type="string">"DVB-C"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>FE_QPSK</name></expr>:</case>

<expr_stmt><expr><name>psz_real</name> <operator>=</operator> <literal type="string">"DVB-S"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>FE_ATSC</name></expr>:</case>

<expr_stmt><expr><name>psz_real</name> <operator>=</operator> <literal type="string">"ATSC"</literal></expr>;</expr_stmt>

<break>break;</break>

<default>default:</default>

<expr_stmt><expr><name>psz_real</name> <operator>=</operator> <literal type="string">"unknown"</literal></expr>;</expr_stmt>

</block_content>}</block></switch>

<if_stmt><if>if<condition>( <expr><operator>(</operator><operator>!</operator><call><name>strncmp</name><argument_list>( <argument><expr><name>psz_access</name></expr></argument>, <argument><expr><literal type="string">"qpsk"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument> )</argument_list></call> <operator>||</operator>

<operator>!</operator><call><name>strncmp</name><argument_list>( <argument><expr><name>psz_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-s"</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument> )</argument_list></call> <operator>||</operator>

<operator>!</operator><call><name>strncmp</name><argument_list>( <argument><expr><name>psz_access</name></expr></argument>, <argument><expr><literal type="string">"satellite"</literal></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument> )</argument_list></call> <operator>)</operator> <operator>&amp;&amp;</operator>

<operator>(</operator><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>type</name></name> <operator>!=</operator> <name>FE_QPSK</name><operator>)</operator></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>psz_expected</name> <operator>=</operator> <literal type="string">"DVB-S"</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><operator>(</operator><operator>!</operator><call><name>strncmp</name><argument_list>( <argument><expr><name>psz_access</name></expr></argument>, <argument><expr><literal type="string">"cable"</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument> )</argument_list></call> <operator>||</operator>

<operator>!</operator><call><name>strncmp</name><argument_list>( <argument><expr><name>psz_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-c"</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument> )</argument_list></call> <operator>)</operator> <operator>&amp;&amp;</operator>

<operator>(</operator><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>type</name></name> <operator>!=</operator> <name>FE_QAM</name><operator>)</operator></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>psz_expected</name> <operator>=</operator> <literal type="string">"DVB-C"</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><operator>(</operator><operator>!</operator><call><name>strncmp</name><argument_list>( <argument><expr><name>psz_access</name></expr></argument>, <argument><expr><literal type="string">"terrestrial"</literal></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument> )</argument_list></call> <operator>||</operator>

<operator>!</operator><call><name>strncmp</name><argument_list>( <argument><expr><name>psz_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-t"</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument> )</argument_list></call> <operator>)</operator> <operator>&amp;&amp;</operator>

<operator>(</operator><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>type</name></name> <operator>!=</operator> <name>FE_OFDM</name><operator>)</operator></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>psz_expected</name> <operator>=</operator> <literal type="string">"DVB-T"</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><operator>(</operator><operator>!</operator><call><name>strncmp</name><argument_list>( <argument><expr><name>psz_access</name></expr></argument>, <argument><expr><literal type="string">"usdigital"</literal></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument> )</argument_list></call> <operator>||</operator>

<operator>!</operator><call><name>strncmp</name><argument_list>( <argument><expr><name>psz_access</name></expr></argument>, <argument><expr><literal type="string">"atsc"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument> )</argument_list></call> <operator>)</operator> <operator>&amp;&amp;</operator>

<operator>(</operator><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>type</name></name> <operator>!=</operator> <name>FE_ATSC</name><operator>)</operator></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>psz_expected</name> <operator>=</operator> <literal type="string">"ATSC"</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name>psz_expected</name> <operator>!=</operator> <name>NULL</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"requested type %s not supported by %s tuner"</literal></expr></argument>,

<argument><expr><name>psz_expected</name></expr></argument>, <argument><expr><name>psz_real</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_close</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frontend_handle</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_frontend</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if>

<else>else 

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"using default values for frontend info"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"method of access is %s"</literal></expr></argument>, <argument><expr><name>psz_access</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>FE_QPSK</name></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>strncmp</name><argument_list>( <argument><expr><name>psz_access</name></expr></argument>, <argument><expr><literal type="string">"qpsk"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument> )</argument_list></call> <operator>||</operator>

<operator>!</operator><call><name>strncmp</name><argument_list>( <argument><expr><name>psz_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-s"</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>FE_QPSK</name></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if<condition>( <expr><operator>!</operator><call><name>strncmp</name><argument_list>( <argument><expr><name>psz_access</name></expr></argument>, <argument><expr><literal type="string">"cable"</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument> )</argument_list></call> <operator>||</operator>

<operator>!</operator><call><name>strncmp</name><argument_list>( <argument><expr><name>psz_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-c"</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>FE_QAM</name></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if<condition>( <expr><operator>!</operator><call><name>strncmp</name><argument_list>( <argument><expr><name>psz_access</name></expr></argument>, <argument><expr><literal type="string">"terrestrial"</literal></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument> )</argument_list></call> <operator>||</operator>

<operator>!</operator><call><name>strncmp</name><argument_list>( <argument><expr><name>psz_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-t"</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>FE_OFDM</name></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if<condition>( <expr><operator>!</operator><call><name>strncmp</name><argument_list>( <argument><expr><name>psz_access</name></expr></argument>, <argument><expr><literal type="string">"usdigital"</literal></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument> )</argument_list></call> <operator>||</operator>

<operator>!</operator><call><name>strncmp</name><argument_list>( <argument><expr><name>psz_access</name></expr></argument>, <argument><expr><literal type="string">"atsc"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>FE_ATSC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></else></if_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>FrontendClose</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>dvb_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_frontend</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vlc_close</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frontend_handle</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_frontend</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_frontend</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>FrontendSet</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>dvb_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<switch>switch<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>type</name></name></expr> )</condition>

<block>{<block_content>

<case>case <expr><name>FE_QPSK</name></expr>:</case>

<if_stmt><if>if<condition>( <expr><call><name>FrontendSetQPSK</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DVB-S tuning error"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>FE_QAM</name></expr>:</case>

<if_stmt><if>if<condition>( <expr><call><name>FrontendSetQAM</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DVB-C tuning error"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>FE_OFDM</name></expr>:</case>

<if_stmt><if>if<condition>( <expr><call><name>FrontendSetOFDM</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DVB-T tuning error"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>FE_ATSC</name></expr>:</case>

<if_stmt><if>if<condition>( <expr><call><name>FrontendSetATSC</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"ATSC tuning error"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<break>break;</break>

<default>default:</default>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"tuner type %s not supported"</literal></expr></argument>,

<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>name</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></switch>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_frontend</name><operator>-&gt;</operator><name>i_last_status</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>FrontendPoll</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>dvb_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>frontend_t</name> <modifier>*</modifier></type> <name>p_frontend</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_frontend</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>dvb_frontend_event</name></name></type> <name>event</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>fe_status_t</name></type> <name>i_status</name></decl>, <decl><type ref="prev"/><name>i_diff</name></decl>;</decl_stmt>

<for>for<control>( <init>;</init><condition>;</condition> <incr/>)</control>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><call><name>ioctl</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frontend_handle</name></name></expr></argument>, <argument><expr><name>FE_GET_EVENT</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>event</name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name>errno</name> <operator>!=</operator> <name>EWOULDBLOCK</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"frontend event error: %s"</literal></expr></argument>,

<argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>i_status</name> <operator>=</operator> <name><name>event</name><operator>.</operator><name>status</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>i_diff</name> <operator>=</operator> <name>i_status</name> <operator>^</operator> <name><name>p_frontend</name><operator>-&gt;</operator><name>i_last_status</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_frontend</name><operator>-&gt;</operator><name>i_last_status</name></name> <operator>=</operator> <name>i_status</name></expr>;</expr_stmt>

<block>{<block_content>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IF_UP</name><parameter_list>( <parameter><type><name>x</name></type></parameter> )</parameter_list></cpp:macro> <cpp:value>} if ( i_diff &amp; (x) ) { if ( i_status &amp; (x) )</cpp:value></cpp:define>

<macro><name>IF_UP</name><argument_list>( <argument>FE_HAS_SIGNAL</argument> )</argument_list></macro>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"frontend has acquired signal"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><else>else<block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"frontend has lost signal"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<macro><name>IF_UP</name><argument_list>( <argument>FE_HAS_CARRIER</argument> )</argument_list></macro>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"frontend has acquired carrier"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><else>else<block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"frontend has lost carrier"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<macro><name>IF_UP</name><argument_list>( <argument>FE_HAS_VITERBI</argument> )</argument_list></macro>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"frontend has acquired stable FEC"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><else>else<block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"frontend has lost FEC"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<macro><name>IF_UP</name><argument_list>( <argument>FE_HAS_SYNC</argument> )</argument_list></macro>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"frontend has acquired sync"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><else>else<block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"frontend has lost sync"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<macro><name>IF_UP</name><argument_list>( <argument>FE_HAS_LOCK</argument> )</argument_list></macro>

<block>{<block_content>

<decl_stmt><decl><type><name>frontend_statistic_t</name></type> <name>stat</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"frontend has acquired lock"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>FrontendGetStatistic</name><argument_list>( <argument><expr><name>p_sys</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>stat</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name><name>stat</name><operator>.</operator><name>i_ber</name></name> <operator>&gt;=</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"- Bit error rate: %d"</literal></expr></argument>, <argument><expr><name><name>stat</name><operator>.</operator><name>i_ber</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>stat</name><operator>.</operator><name>i_signal_strenth</name></name> <operator>&gt;=</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"- Signal strength: %d"</literal></expr></argument>, <argument><expr><name><name>stat</name><operator>.</operator><name>i_signal_strenth</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>stat</name><operator>.</operator><name>i_snr</name></name> <operator>&gt;=</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"- SNR: %d"</literal></expr></argument>, <argument><expr><name><name>stat</name><operator>.</operator><name>i_snr</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block>

<if_stmt><else>else

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"frontend has lost lock"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<macro><name>IF_UP</name><argument_list>( <argument>FE_REINIT</argument> )</argument_list></macro>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"reiniting frontend"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>FrontendSet</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>

</block_content>}</block>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>IF_UP</name></cpp:undef>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>FrontendGetStatistic</name><parameter_list>( <parameter><decl><type><name>dvb_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl></parameter>, <parameter><decl><type><name>frontend_statistic_t</name> <modifier>*</modifier></type><name>p_stat</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>frontend_t</name> <modifier>*</modifier></type> <name>p_frontend</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_frontend</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>(</operator><name><name>p_frontend</name><operator>-&gt;</operator><name>i_last_status</name></name> <operator>&amp;</operator> <name>FE_HAS_LOCK</name><operator>)</operator> <operator>==</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>memset</name><argument_list>( <argument><expr><name>p_stat</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>p_stat</name></expr></argument>)</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>ioctl</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frontend_handle</name></name></expr></argument>, <argument><expr><name>FE_READ_BER</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_stat</name><operator>-&gt;</operator><name>i_ber</name></name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_stat</name><operator>-&gt;</operator><name>i_ber</name></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><call><name>ioctl</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frontend_handle</name></name></expr></argument>, <argument><expr><name>FE_READ_SIGNAL_STRENGTH</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_stat</name><operator>-&gt;</operator><name>i_signal_strenth</name></name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_stat</name><operator>-&gt;</operator><name>i_signal_strenth</name></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><call><name>ioctl</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frontend_handle</name></name></expr></argument>, <argument><expr><name>FE_READ_SNR</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_stat</name><operator>-&gt;</operator><name>i_snr</name></name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_stat</name><operator>-&gt;</operator><name>i_snr</name></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>FrontendGetStatus</name><parameter_list>( <parameter><decl><type><name>dvb_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl></parameter>, <parameter><decl><type><name>frontend_status_t</name> <modifier>*</modifier></type><name>p_status</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>frontend_t</name> <modifier>*</modifier></type> <name>p_frontend</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_frontend</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p_status</name><operator>-&gt;</operator><name>b_has_signal</name></name> <operator>=</operator> <operator>(</operator><name><name>p_frontend</name><operator>-&gt;</operator><name>i_last_status</name></name> <operator>&amp;</operator> <name>FE_HAS_SIGNAL</name><operator>)</operator> <operator>!=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_status</name><operator>-&gt;</operator><name>b_has_carrier</name></name> <operator>=</operator> <operator>(</operator><name><name>p_frontend</name><operator>-&gt;</operator><name>i_last_status</name></name> <operator>&amp;</operator> <name>FE_HAS_CARRIER</name><operator>)</operator> <operator>!=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_status</name><operator>-&gt;</operator><name>b_has_lock</name></name> <operator>=</operator> <operator>(</operator><name><name>p_frontend</name><operator>-&gt;</operator><name>i_last_status</name></name> <operator>&amp;</operator> <name>FE_HAS_LOCK</name><operator>)</operator> <operator>!=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>ScanParametersDvbS</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>dvb_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl></parameter>, <parameter><decl><type><name>scan_parameter_t</name> <modifier>*</modifier></type><name>p_scan</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>frontend_t</name> <modifier>*</modifier></type><name>p_frontend</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_frontend</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p_scan</name><operator>-&gt;</operator><name>type</name></name> <operator>=</operator> <name>SCAN_DVB_S</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_scan</name><operator>-&gt;</operator><name>frequency</name><operator>.</operator><name>i_min</name></name> <operator>=</operator> <name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>frequency_min</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_scan</name><operator>-&gt;</operator><name>frequency</name><operator>.</operator><name>i_max</name></name> <operator>=</operator> <name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>frequency_max</name></name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_name</name> <init>= <expr><call><name>var_InheritString</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-satellite"</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>psz_name</name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>data_dir</name> <init>= <expr><call><name>config_GetSysPath</name><argument_list>(<argument><expr><name>VLC_SYSDATA_DIR</name></expr></argument>, <argument><expr><literal type="string">"dvb/dvb-s"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name>data_dir</name> <operator>||</operator> <operator>-</operator><literal type="number">1</literal> <operator>==</operator> <call><name>asprintf</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_scan</name><operator>-&gt;</operator><name>psz_scanlist_file</name></name></expr></argument>,

<argument><expr><literal type="string">"%s/%s"</literal></expr></argument>, <argument><expr><name>data_dir</name></expr></argument>, <argument><expr><name>psz_name</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_scan</name><operator>-&gt;</operator><name>psz_scanlist_file</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_scan</name><operator>-&gt;</operator><name>scanlist_format</name></name> <operator>=</operator> <name>FORMAT_DVBv3</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>data_dir</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>psz_name</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>ScanParametersDvbC</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>dvb_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl></parameter>, <parameter><decl><type><name>scan_parameter_t</name> <modifier>*</modifier></type><name>p_scan</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>frontend_t</name> <modifier>*</modifier></type><name>p_frontend</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_frontend</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p_scan</name><operator>-&gt;</operator><name>type</name></name> <operator>=</operator> <name>SCAN_DVB_C</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_scan</name><operator>-&gt;</operator><name>b_exhaustive</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_scan</name><operator>-&gt;</operator><name>frequency</name><operator>.</operator><name>i_min</name></name> <operator>=</operator> <name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>frequency_min</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_scan</name><operator>-&gt;</operator><name>frequency</name><operator>.</operator><name>i_max</name></name> <operator>=</operator> <name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>frequency_max</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_scan</name><operator>-&gt;</operator><name>frequency</name><operator>.</operator><name>i_step</name></name> <operator>=</operator> <name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>frequency_stepsize</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_scan</name><operator>-&gt;</operator><name>b_modulation_set</name></name> <operator>=</operator> <operator>(</operator> <name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_QAM_AUTO</name> <operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_scan</name><operator>-&gt;</operator><name>i_symbolrate</name></name> <operator>=</operator> <call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-srate"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>ScanParametersDvbT</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>dvb_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl></parameter>, <parameter><decl><type><name>scan_parameter_t</name> <modifier>*</modifier></type><name>p_scan</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>frontend_t</name> <modifier>*</modifier></type><name>p_frontend</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_frontend</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p_scan</name><operator>-&gt;</operator><name>type</name></name> <operator>=</operator> <name>SCAN_DVB_T</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_scan</name><operator>-&gt;</operator><name>b_exhaustive</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_scan</name><operator>-&gt;</operator><name>psz_scanlist_file</name></name> <operator>=</operator> <call><name>var_InheritString</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-scanlist"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_scan</name><operator>-&gt;</operator><name>scanlist_format</name></name> <operator>=</operator> <name>FORMAT_DVBv5</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_scan</name><operator>-&gt;</operator><name>frequency</name><operator>.</operator><name>i_min</name></name> <operator>=</operator> <name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>frequency_min</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_scan</name><operator>-&gt;</operator><name>frequency</name><operator>.</operator><name>i_max</name></name> <operator>=</operator> <name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>frequency_max</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_scan</name><operator>-&gt;</operator><name>frequency</name><operator>.</operator><name>i_step</name></name> <operator>=</operator> <name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>frequency_stepsize</name></name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>FrontendFillScanParameter</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>dvb_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl></parameter>, <parameter><decl><type><name>scan_parameter_t</name> <modifier>*</modifier></type><name>p_scan</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>frontend_t</name> <modifier>*</modifier></type><name>p_frontend</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_frontend</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>type</name></name> <operator>==</operator> <name>FE_OFDM</name></expr> )</condition><block type="pseudo"><block_content> 

<return>return <expr><call><name>ScanParametersDvbT</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><name>p_sys</name></expr></argument>, <argument><expr><name>p_scan</name></expr></argument> )</argument_list></call></expr>;</return></block_content></block></if>

<if type="elseif">else if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>type</name></name> <operator>==</operator> <name>FE_QAM</name></expr> )</condition><block type="pseudo"><block_content> 

<return>return <expr><call><name>ScanParametersDvbC</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><name>p_sys</name></expr></argument>, <argument><expr><name>p_scan</name></expr></argument> )</argument_list></call></expr>;</return></block_content></block></if>

<if type="elseif">else if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>type</name></name> <operator>==</operator> <name>FE_QPSK</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><call><name>ScanParametersDvbS</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><name>p_sys</name></expr></argument>, <argument><expr><name>p_scan</name></expr></argument> )</argument_list></call></expr>;</return></block_content></block></if></if_stmt> 

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"frontend scanning not supported"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>FrontendInfo</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>dvb_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>frontend_t</name> <modifier>*</modifier></type><name>p_frontend</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_frontend</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>ioctl</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frontend_handle</name></name></expr></argument>, <argument><expr><name>FE_GET_INFO</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name></name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"frontend info request error: %s"</literal></expr></argument>,

<argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"Frontend Info:"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" name = %s"</literal></expr></argument>, <argument><expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>name</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<switch>switch<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>type</name></name></expr> )</condition>

<block>{<block_content>

<case>case <expr><name>FE_QPSK</name></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" type = QPSK (DVB-S)"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>FE_QAM</name></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" type = QAM (DVB-C)"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>FE_OFDM</name></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" type = OFDM (DVB-T)"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>FE_ATSC</name></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" type = ATSC (USA)"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if> 

case FE_MEMORY:

msg_Dbg( p_access, " type = MEMORY" );

break;

case FE_NET:

msg_Dbg( p_access, " type = NETWORK" );

break;

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<default>default:</default>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" unknown frontend type (%d)"</literal></expr></argument>,

<argument><expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>type</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></switch>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" frequency_min = %u (kHz)"</literal></expr></argument>,

<argument><expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>frequency_min</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" frequency_max = %u (kHz)"</literal></expr></argument>,

<argument><expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>frequency_max</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" frequency_stepsize = %u"</literal></expr></argument>,

<argument><expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>frequency_stepsize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" frequency_tolerance = %u"</literal></expr></argument>,

<argument><expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>frequency_tolerance</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" symbol_rate_min = %u (kHz)"</literal></expr></argument>,

<argument><expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>symbol_rate_min</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" symbol_rate_max = %u (kHz)"</literal></expr></argument>,

<argument><expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>symbol_rate_max</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" symbol_rate_tolerance (ppm) = %u"</literal></expr></argument>,

<argument><expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>symbol_rate_tolerance</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" notifier_delay (ms) = %u"</literal></expr></argument>,

<argument><expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>notifier_delay</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"Frontend Info capability list:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>==</operator> <name>FE_IS_STUPID</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" no capabilities - frontend is stupid!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_INVERSION_AUTO</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" inversion auto"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_FEC_1_2</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" forward error correction 1/2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_FEC_2_3</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" forward error correction 2/3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_FEC_3_4</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" forward error correction 3/4"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_FEC_4_5</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" forward error correction 4/5"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_FEC_5_6</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" forward error correction 5/6"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_FEC_6_7</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" forward error correction 6/7"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_FEC_7_8</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" forward error correction 7/8"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_FEC_8_9</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" forward error correction 8/9"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_FEC_AUTO</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" forward error correction auto"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_QPSK</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" QPSK modulation"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_QAM_16</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" QAM 16 modulation"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_QAM_32</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" QAM 32 modulation"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_QAM_64</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" QAM 64 modulation"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_QAM_128</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" QAM 128 modulation"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_QAM_256</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" QAM 256 modulation"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_QAM_AUTO</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" QAM auto modulation"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_TRANSMISSION_MODE_AUTO</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" transmission mode auto"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_BANDWIDTH_AUTO</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" bandwidth mode auto"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_GUARD_INTERVAL_AUTO</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" guard interval mode auto"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_HIERARCHY_AUTO</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" hierarchy mode auto"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_8VSB</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" 8-level VSB modulation"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_16VSB</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" 16-level VSB modulation"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_HAS_EXTENDED_CAPS</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" extended capabilities"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>(</operator><name>DVB_API_VERSION</name> <operator>&gt;</operator> <literal type="number">5</literal><operator>)</operator> <operator>||</operator> <operator>(</operator><operator>(</operator><name>DVB_API_VERSION</name> <operator>==</operator> <literal type="number">5</literal> <operator>&amp;&amp;</operator> <name>DVB_API_VERSION_MINOR</name> <operator>&gt;=</operator> <literal type="number">2</literal><operator>)</operator><operator>)</operator></expr></cpp:if>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_TURBO_FEC</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" Turbo FEC modulation"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:warning>#<cpp:directive>warning</cpp:directive> Please update your Linux kernel headers!</cpp:warning>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_2G_MODULATION</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" 2nd generation modulation (DVB-S2)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_RECOVER</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" cable unplug recovery"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>caps</name></name> <operator>&amp;</operator> <name>FE_CAN_MUTE_TS</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">" spurious TS muting"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"End of capability list"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>fe_spectral_inversion_t</name></type> <name>DecodeInversion</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i_val</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>fe_spectral_inversion_t</name></type> <name>fe_inversion</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>i_val</name> <operator>=</operator> <call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-inversion"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"using inversion=%d"</literal></expr></argument>, <argument><expr><name>i_val</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<switch>switch<condition>( <expr><name>i_val</name></expr> )</condition>

<block>{<block_content>

<case>case <expr><literal type="number">0</literal></expr>:</case> <expr_stmt><expr><name>fe_inversion</name> <operator>=</operator> <name>INVERSION_OFF</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><literal type="number">1</literal></expr>:</case> <expr_stmt><expr><name>fe_inversion</name> <operator>=</operator> <name>INVERSION_ON</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><literal type="number">2</literal></expr>:</case> <expr_stmt><expr><name>fe_inversion</name> <operator>=</operator> <name>INVERSION_AUTO</name></expr>;</expr_stmt> <break>break;</break>

<default>default:</default>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb has inversion not set, using auto"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>fe_inversion</name> <operator>=</operator> <name>INVERSION_AUTO</name></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></switch>

<return>return <expr><name>fe_inversion</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>fe_sec_voltage_t</name></type> <name>DecodeVoltage</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<switch>switch<condition>( <expr><call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-voltage"</literal></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<case>case <expr><literal type="number">0</literal></expr>:</case> <return>return <expr><name>SEC_VOLTAGE_OFF</name></expr>;</return>

<case>case <expr><literal type="number">13</literal></expr>:</case> <return>return <expr><name>SEC_VOLTAGE_13</name></expr>;</return>

<case>case <expr><literal type="number">18</literal></expr>:</case> <return>return <expr><name>SEC_VOLTAGE_18</name></expr>;</return>

<default>default:</default> <return>return <expr><name>SEC_VOLTAGE_OFF</name></expr>;</return>

</block_content>}</block></switch>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>fe_sec_tone_mode_t</name></type> <name>DecodeTone</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<switch>switch<condition>( <expr><call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-tone"</literal></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<case>case <expr><literal type="number">0</literal></expr>:</case> <return>return <expr><name>SEC_TONE_OFF</name></expr>;</return>

<case>case <expr><literal type="number">1</literal></expr>:</case> <return>return <expr><name>SEC_TONE_ON</name></expr>;</return>

<default>default:</default> <return>return <expr><name>SEC_TONE_OFF</name></expr>;</return>

</block_content>}</block></switch>

</block_content>}</block></function>

<struct>struct <name>diseqc_cmd_t</name>

<block>{

<decl_stmt><decl><type><name><name>struct</name> <name>dvb_diseqc_master_cmd</name></name></type> <name>cmd</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>wait</name></decl>;</decl_stmt>

}</block>;</struct>

<function><type><specifier>static</specifier> <name>int</name></type> <name>DoDiseqc</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>dvb_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i_val</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_val</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_frequency</name></decl>, <decl><type ref="prev"/><name>i_lnb_slof</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>fe_sec_voltage_t</name></type> <name>fe_voltage</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>fe_sec_tone_mode_t</name></type> <name>fe_tone</name></decl>;</decl_stmt>

<expr_stmt><expr><name>i_frequency</name> <operator>=</operator> <call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-frequency"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_lnb_slof</name> <operator>=</operator> <call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-lnb-slof"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_val</name> <operator>=</operator> <call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-tone"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i_val</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name>i_frequency</name> <operator>&gt;=</operator> <name>i_lnb_slof</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>i_val</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name>i_val</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><call><name>var_SetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-tone"</literal></expr></argument>, <argument><expr><name>i_val</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>fe_voltage</name> <operator>=</operator> <call><name>DecodeVoltage</name><argument_list>( <argument><expr><name>p_access</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>fe_tone</name> <operator>=</operator> <call><name>DecodeTone</name><argument_list>( <argument><expr><name>p_access</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>ioctl</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frontend_handle</name></name></expr></argument>, <argument><expr><name>FE_SET_TONE</name></expr></argument>, <argument><expr><name>SEC_TONE_OFF</name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"switching tone %s error: %s"</literal></expr></argument>, <argument><expr><literal type="string">"off"</literal></expr></argument>,

<argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><call><name>ioctl</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frontend_handle</name></name></expr></argument>, <argument><expr><name>FE_SET_VOLTAGE</name></expr></argument>, <argument><expr><name>fe_voltage</name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"voltage error: %s"</literal></expr></argument>, <argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>b_val</name> <operator>=</operator> <call><name>var_GetBool</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-high-voltage"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>ioctl</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frontend_handle</name></name></expr></argument>,

<argument><expr><name>FE_ENABLE_HIGH_LNB_VOLTAGE</name></expr></argument>, <argument><expr><name>b_val</name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>b_val</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"high LNB voltage error: %s"</literal></expr></argument>,

<argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_tick_sleep</name><argument_list>(<argument><expr><call><name>VLC_TICK_FROM_MS</name><argument_list>(<argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_val</name> <operator>=</operator> <call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-satno"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i_val</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>i_val</name> <operator>&lt;</operator> <literal type="number">5</literal></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>diseqc_cmd_t</name></name></type> <name>cmd</name> <init>= <expr><block>{ <expr><block>{<expr><block>{<expr><literal type="number">0xe0</literal></expr>, <expr><literal type="number">0x10</literal></expr>, <expr><literal type="number">0x38</literal></expr>, <expr><literal type="number">0xf0</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>}</block></expr>, <expr><literal type="number">4</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>cmd</name><operator>.</operator><name>cmd</name><operator>.</operator><name>msg</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0xf0</literal> 

<operator>|</operator> <operator>(</operator><operator>(</operator><operator>(</operator><name>i_val</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>*</operator> <literal type="number">4</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xc</literal><operator>)</operator>

<operator>|</operator> <operator>(</operator><ternary><condition><expr><name>fe_voltage</name> <operator>==</operator> <name>SEC_VOLTAGE_13</name></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><literal type="number">2</literal></expr></else></ternary><operator>)</operator>

<operator>|</operator> <operator>(</operator><ternary><condition><expr><name>fe_tone</name> <operator>==</operator> <name>SEC_TONE_ON</name></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary><operator>)</operator></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>ioctl</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frontend_handle</name></name></expr></argument>, <argument><expr><name>FE_DISEQC_SEND_MASTER_CMD</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>cmd</name><operator>.</operator><name>cmd</name></name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"master command sending error: %s"</literal></expr></argument>,

<argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_tick_sleep</name><argument_list>(<argument><expr><call><name>VLC_TICK_FROM_MS</name><argument_list>(<argument><expr><literal type="number">15</literal> <operator>+</operator> <name><name>cmd</name><operator>.</operator><name>wait</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>ioctl</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frontend_handle</name></name></expr></argument>, <argument><expr><name>FE_DISEQC_SEND_BURST</name></expr></argument>,

<argument><expr><ternary><condition><expr><operator>(</operator><operator>(</operator><name>i_val</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>%</operator> <literal type="number">2</literal><operator>)</operator></expr> ?</condition><then> <expr><name>SEC_MINI_B</name></expr> </then><else>: <expr><name>SEC_MINI_A</name></expr></else></ternary></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"burst sending error: %s"</literal></expr></argument>,

<argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_tick_sleep</name><argument_list>(<argument><expr><call><name>VLC_TICK_FROM_MS</name><argument_list>(<argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><call><name>ioctl</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frontend_handle</name></name></expr></argument>, <argument><expr><name>FE_SET_TONE</name></expr></argument>, <argument><expr><name>fe_tone</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"switching tone %s error: %s"</literal></expr></argument>,

<argument><expr><ternary><condition><expr><operator>(</operator><name>fe_tone</name> <operator>==</operator> <name>SEC_TONE_ON</name><operator>)</operator></expr> ?</condition><then> <expr><literal type="string">"on"</literal></expr> </then><else>: <expr><literal type="string">"off"</literal></expr></else></ternary></expr></argument>,

<argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_tick_sleep</name><argument_list>(<argument><expr><call><name>VLC_TICK_FROM_MS</name><argument_list>(<argument><expr><literal type="number">50</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>FrontendSetQPSK</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>dvb_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>dvb_frontend_parameters</name></name></type> <name>fep</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_val</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_frequency</name></decl>, <decl><type ref="prev"/><name>i_lnb_slof</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>i_lnb_lof1</name></decl>, <decl><type ref="prev"/><name>i_lnb_lof2</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>i_frequency</name> <operator>=</operator> <call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-frequency"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_val</name> <operator>=</operator> <call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-lnb-lof1"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i_val</name> <operator>==</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if <condition>( <expr><name>i_frequency</name> <operator>&gt;=</operator> <literal type="number">950000</literal> <operator>&amp;&amp;</operator> <name>i_frequency</name> <operator>&lt;=</operator> <literal type="number">2150000</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"frequency %d is in IF-band"</literal></expr></argument>, <argument><expr><name>i_frequency</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_lnb_lof1</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if <condition>( <expr><name>i_frequency</name> <operator>&gt;=</operator> <literal type="number">2500000</literal> <operator>&amp;&amp;</operator> <name>i_frequency</name> <operator>&lt;=</operator> <literal type="number">2700000</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"frequency %d is in S-band"</literal></expr></argument>, <argument><expr><name>i_frequency</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_lnb_lof1</name> <operator>=</operator> <literal type="number">3650000</literal></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if <condition>( <expr><name>i_frequency</name> <operator>&gt;=</operator> <literal type="number">3400000</literal> <operator>&amp;&amp;</operator> <name>i_frequency</name> <operator>&lt;=</operator> <literal type="number">4200000</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"frequency %d is in C-band (lower)"</literal></expr></argument>,

<argument><expr><name>i_frequency</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_lnb_lof1</name> <operator>=</operator> <literal type="number">5150000</literal></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if <condition>( <expr><name>i_frequency</name> <operator>&gt;=</operator> <literal type="number">4500000</literal> <operator>&amp;&amp;</operator> <name>i_frequency</name> <operator>&lt;=</operator> <literal type="number">4800000</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"frequency %d is in C-band (higher)"</literal></expr></argument>,

<argument><expr><name>i_frequency</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_lnb_lof1</name> <operator>=</operator> <literal type="number">5950000</literal></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if <condition>( <expr><name>i_frequency</name> <operator>&gt;=</operator> <literal type="number">10700000</literal> <operator>&amp;&amp;</operator> <name>i_frequency</name> <operator>&lt;=</operator> <literal type="number">13250000</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"frequency %d is in Ku-band"</literal></expr></argument>,

<argument><expr><name>i_frequency</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_lnb_lof1</name> <operator>=</operator> <literal type="number">9750000</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>i_lnb_lof2</name> <operator>=</operator> <literal type="number">10600000</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>i_lnb_slof</name> <operator>=</operator> <literal type="number">11700000</literal></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"frequency %d is out of any known band"</literal></expr></argument>,

<argument><expr><name>i_frequency</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"specify dvb-lnb-lof1 manually for the local "</literal>

<literal type="string">"oscillator frequency"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>var_SetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-lnb-lof1"</literal></expr></argument>, <argument><expr><name>i_lnb_lof1</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_SetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-lnb-lof2"</literal></expr></argument>, <argument><expr><name>i_lnb_lof2</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_SetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-lnb-slof"</literal></expr></argument>, <argument><expr><name>i_lnb_slof</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><name>i_lnb_lof1</name> <operator>=</operator> <name>i_val</name></expr>;</expr_stmt>

<expr_stmt><expr><name>i_lnb_lof2</name> <operator>=</operator> <call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-lnb-lof2"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_lnb_slof</name> <operator>=</operator> <call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-lnb-slof"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if<condition>( <expr><name>i_lnb_slof</name> <operator>&amp;&amp;</operator> <name>i_frequency</name> <operator>&gt;=</operator> <name>i_lnb_slof</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>i_frequency</name> <operator>-=</operator> <name>i_lnb_lof2</name></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><name>i_frequency</name> <operator>-=</operator> <name>i_lnb_lof1</name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name><name>fep</name><operator>.</operator><name>frequency</name></name> <operator>=</operator> <ternary><condition><expr><name>i_frequency</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr> ?</condition><then> <expr><name>i_frequency</name></expr> </then><else>: <expr><operator>-</operator><name>i_frequency</name></expr></else></ternary></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fep</name><operator>.</operator><name>inversion</name></name> <operator>=</operator> <call><name>DecodeInversion</name><argument_list>( <argument><expr><name>p_access</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fep</name><operator>.</operator><name>u</name><operator>.</operator><name>qpsk</name><operator>.</operator><name>symbol_rate</name></name> <operator>=</operator> <call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-srate"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fep</name><operator>.</operator><name>u</name><operator>.</operator><name>qpsk</name><operator>.</operator><name>fec_inner</name></name> <operator>=</operator> <name>FEC_NONE</name></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>DoDiseqc</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<for>for<control>( <init>;</init> <condition>;</condition> <incr/>)</control>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>dvb_frontend_event</name></name></type> <name>event</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><call><name>ioctl</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frontend_handle</name></name></expr></argument>, <argument><expr><name>FE_GET_EVENT</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>event</name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal>

<operator>&amp;&amp;</operator> <name>errno</name> <operator>==</operator> <name>EWOULDBLOCK</name></expr> )</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

</block_content>}</block></for>

<if_stmt><if>if<condition>( <expr><call><name>ioctl</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frontend_handle</name></name></expr></argument>, <argument><expr><name>FE_SET_FRONTEND</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fep</name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"frontend error: %s"</literal></expr></argument>, <argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>FrontendSetQAM</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>dvb_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>frontend_t</name> <modifier>*</modifier></type><name>p_frontend</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_frontend</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>dvb_frontend_parameters</name></name></type> <name>fep</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_val</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>fep</name><operator>.</operator><name>frequency</name></name> <operator>=</operator> <call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-frequency"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fep</name><operator>.</operator><name>inversion</name></name> <operator>=</operator> <call><name>DecodeInversion</name><argument_list>( <argument><expr><name>p_access</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_val</name> <operator>=</operator> <call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-srate"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>i_val</name> <argument_list type="generic">&lt; <argument><expr><name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>symbol_rate_max</name></name> <operator>&amp;&amp;</operator>

<name>i_val</name></expr></argument> &gt;</argument_list></name> <name><name>p_frontend</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>symbol_rate_min</name></name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>fep</name><operator>.</operator><name>u</name><operator>.</operator><name>qam</name><operator>.</operator><name>symbol_rate</name></name> <operator>=</operator> <name>i_val</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>fep</name><operator>.</operator><name>u</name><operator>.</operator><name>qam</name><operator>.</operator><name>fec_inner</name></name> <operator>=</operator> <name>FEC_NONE</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fep</name><operator>.</operator><name>u</name><operator>.</operator><name>qam</name><operator>.</operator><name>modulation</name></name> <operator>=</operator> <name>QAM_AUTO</name></expr>;</expr_stmt>

<for>for<control>( <init>;</init> <condition>;</condition> <incr/>)</control>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>dvb_frontend_event</name></name></type> <name>event</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><call><name>ioctl</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frontend_handle</name></name></expr></argument>, <argument><expr><name>FE_GET_EVENT</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>event</name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal>

<operator>&amp;&amp;</operator> <name>errno</name> <operator>==</operator> <name>EWOULDBLOCK</name></expr> )</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

</block_content>}</block></for>

<if_stmt><if>if<condition>( <expr><call><name>ioctl</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frontend_handle</name></name></expr></argument>, <argument><expr><name>FE_SET_FRONTEND</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fep</name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"frontend error: %s"</literal></expr></argument>, <argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>fe_bandwidth_t</name></type> <name>DecodeBandwidth</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>fe_bandwidth_t</name></type> <name>fe_bandwidth</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_bandwidth</name> <init>= <expr><call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-bandwidth"</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"using bandwidth=%d"</literal></expr></argument>, <argument><expr><name>i_bandwidth</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<switch>switch<condition>( <expr><name>i_bandwidth</name></expr> )</condition>

<block>{<block_content>

<case>case <expr><literal type="number">0</literal></expr>:</case> <expr_stmt><expr><name>fe_bandwidth</name> <operator>=</operator> <name>BANDWIDTH_AUTO</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><literal type="number">6</literal></expr>:</case> <expr_stmt><expr><name>fe_bandwidth</name> <operator>=</operator> <name>BANDWIDTH_6_MHZ</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><literal type="number">7</literal></expr>:</case> <expr_stmt><expr><name>fe_bandwidth</name> <operator>=</operator> <name>BANDWIDTH_7_MHZ</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><literal type="number">8</literal></expr>:</case> <expr_stmt><expr><name>fe_bandwidth</name> <operator>=</operator> <name>BANDWIDTH_8_MHZ</name></expr>;</expr_stmt> <break>break;</break>

<default>default:</default>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"terrestrial dvb has bandwidth not set, using auto"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>fe_bandwidth</name> <operator>=</operator> <name>BANDWIDTH_AUTO</name></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></switch>

<return>return <expr><name>fe_bandwidth</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>fe_transmit_mode_t</name></type> <name>DecodeTransmission</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>fe_transmit_mode_t</name></type> <name>fe_transmission</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_transmission</name> <init>= <expr><call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-transmission"</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"using transmission=%d"</literal></expr></argument>, <argument><expr><name>i_transmission</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<switch>switch<condition>( <expr><name>i_transmission</name></expr> )</condition>

<block>{<block_content>

<case>case <expr><literal type="number">0</literal></expr>:</case> <expr_stmt><expr><name>fe_transmission</name> <operator>=</operator> <name>TRANSMISSION_MODE_AUTO</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><literal type="number">2</literal></expr>:</case> <expr_stmt><expr><name>fe_transmission</name> <operator>=</operator> <name>TRANSMISSION_MODE_2K</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><literal type="number">8</literal></expr>:</case> <expr_stmt><expr><name>fe_transmission</name> <operator>=</operator> <name>TRANSMISSION_MODE_8K</name></expr>;</expr_stmt> <break>break;</break>

<default>default:</default>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"terrestrial dvb has transmission mode not set, using auto"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>fe_transmission</name> <operator>=</operator> <name>TRANSMISSION_MODE_AUTO</name></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></switch>

<return>return <expr><name>fe_transmission</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>fe_hierarchy_t</name></type> <name>DecodeHierarchy</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>fe_hierarchy_t</name></type> <name>fe_hierarchy</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_hierarchy</name> <init>= <expr><call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-hierarchy"</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"using hierarchy=%d"</literal></expr></argument>, <argument><expr><name>i_hierarchy</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<switch>switch<condition>( <expr><name>i_hierarchy</name></expr> )</condition>

<block>{<block_content>

<case>case <expr><operator>-</operator><literal type="number">1</literal></expr>:</case> <expr_stmt><expr><name>fe_hierarchy</name> <operator>=</operator> <name>HIERARCHY_NONE</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><literal type="number">0</literal></expr>:</case> <expr_stmt><expr><name>fe_hierarchy</name> <operator>=</operator> <name>HIERARCHY_AUTO</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><literal type="number">1</literal></expr>:</case> <expr_stmt><expr><name>fe_hierarchy</name> <operator>=</operator> <name>HIERARCHY_1</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><literal type="number">2</literal></expr>:</case> <expr_stmt><expr><name>fe_hierarchy</name> <operator>=</operator> <name>HIERARCHY_2</name></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><literal type="number">4</literal></expr>:</case> <expr_stmt><expr><name>fe_hierarchy</name> <operator>=</operator> <name>HIERARCHY_4</name></expr>;</expr_stmt> <break>break;</break>

<default>default:</default>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"terrestrial dvb has hierarchy not set, using auto"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>fe_hierarchy</name> <operator>=</operator> <name>HIERARCHY_AUTO</name></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></switch>

<return>return <expr><name>fe_hierarchy</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>FrontendSetOFDM</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>dvb_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>dvb_frontend_parameters</name></name></type> <name>fep</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>fep</name><operator>.</operator><name>frequency</name></name> <operator>=</operator> <call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-frequency"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fep</name><operator>.</operator><name>inversion</name></name> <operator>=</operator> <call><name>DecodeInversion</name><argument_list>( <argument><expr><name>p_access</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fep</name><operator>.</operator><name>u</name><operator>.</operator><name>ofdm</name><operator>.</operator><name>bandwidth</name></name> <operator>=</operator> <call><name>DecodeBandwidth</name><argument_list>( <argument><expr><name>p_access</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fep</name><operator>.</operator><name>u</name><operator>.</operator><name>ofdm</name><operator>.</operator><name>code_rate_HP</name></name> <operator>=</operator> <name>FEC_NONE</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fep</name><operator>.</operator><name>u</name><operator>.</operator><name>ofdm</name><operator>.</operator><name>code_rate_LP</name></name> <operator>=</operator> <name>FEC_NONE</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fep</name><operator>.</operator><name>u</name><operator>.</operator><name>ofdm</name><operator>.</operator><name>constellation</name></name> <operator>=</operator> <name>QAM_AUTO</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fep</name><operator>.</operator><name>u</name><operator>.</operator><name>ofdm</name><operator>.</operator><name>transmission_mode</name></name> <operator>=</operator> <call><name>DecodeTransmission</name><argument_list>( <argument><expr><name>p_access</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fep</name><operator>.</operator><name>u</name><operator>.</operator><name>ofdm</name><operator>.</operator><name>guard_interval</name></name> <operator>=</operator> <name>GUARD_INTERVAL_AUTO</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fep</name><operator>.</operator><name>u</name><operator>.</operator><name>ofdm</name><operator>.</operator><name>hierarchy_information</name></name> <operator>=</operator> <call><name>DecodeHierarchy</name><argument_list>( <argument><expr><name>p_access</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<for>for<control>( <init>;</init> <condition>;</condition> <incr/>)</control>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>dvb_frontend_event</name></name></type> <name>event</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><call><name>ioctl</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frontend_handle</name></name></expr></argument>, <argument><expr><name>FE_GET_EVENT</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>event</name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal>

<operator>&amp;&amp;</operator> <name>errno</name> <operator>==</operator> <name>EWOULDBLOCK</name></expr> )</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

</block_content>}</block></for>

<if_stmt><if>if<condition>( <expr><call><name>ioctl</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frontend_handle</name></name></expr></argument>, <argument><expr><name>FE_SET_FRONTEND</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fep</name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"frontend error: %s"</literal></expr></argument>, <argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>FrontendSetATSC</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>dvb_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>dvb_frontend_parameters</name></name></type> <name>fep</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>fep</name><operator>.</operator><name>frequency</name></name> <operator>=</operator> <call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-frequency"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fep</name><operator>.</operator><name>u</name><operator>.</operator><name>vsb</name><operator>.</operator><name>modulation</name></name> <operator>=</operator> <name>VSB_8</name></expr>;</expr_stmt>

<for>for<control>( <init>;</init> <condition>;</condition> <incr/>)</control>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>dvb_frontend_event</name></name></type> <name>event</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><call><name>ioctl</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frontend_handle</name></name></expr></argument>, <argument><expr><name>FE_GET_EVENT</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>event</name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal>

<operator>&amp;&amp;</operator> <name>errno</name> <operator>==</operator> <name>EWOULDBLOCK</name></expr> )</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

</block_content>}</block></for>

<if_stmt><if>if<condition>( <expr><call><name>ioctl</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frontend_handle</name></name></expr></argument>, <argument><expr><name>FE_SET_FRONTEND</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fep</name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"frontend error: %s"</literal></expr></argument>, <argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>DMXSetFilter</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_pid</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type> <name>pi_fd</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_type</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>dmx_pes_filter_params</name></name></type> <name>s_filter_params</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_adapter</name></decl>, <decl><type ref="prev"/><name>i_device</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>dmx</name><index>[<expr><literal type="number">128</literal></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><name>i_adapter</name> <operator>=</operator> <call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-adapter"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_device</name> <operator>=</operator> <call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-device"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>snprintf</name><argument_list>( <argument><expr><name>dmx</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>dmx</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>DMX</name></expr></argument>, <argument><expr><name>i_adapter</name></expr></argument>, <argument><expr><name>i_device</name></expr></argument> )</argument_list></call>

<operator>&gt;=</operator> <operator>(</operator><name>int</name><operator>)</operator><sizeof>sizeof<argument_list>(<argument><expr><name>dmx</name></expr></argument>)</argument_list></sizeof></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"snprintf() truncated string for DMX"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dmx</name><index>[<expr><sizeof>sizeof<argument_list>(<argument><expr><name>dmx</name></expr></argument>)</argument_list></sizeof> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"Opening device %s"</literal></expr></argument>, <argument><expr><name>dmx</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>(</operator><operator>*</operator><name>pi_fd</name> <operator>=</operator> <call><name>vlc_open</name><argument_list>(<argument><expr><name>dmx</name></expr></argument>, <argument><expr><name>O_RDWR</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DMXSetFilter: opening device failed: %s"</literal></expr></argument>,

<argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>s_filter_params</name><operator>.</operator><name>pid</name></name> <operator>=</operator> <name>i_pid</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s_filter_params</name><operator>.</operator><name>input</name></name> <operator>=</operator> <name>DMX_IN_FRONTEND</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s_filter_params</name><operator>.</operator><name>output</name></name> <operator>=</operator> <name>DMX_OUT_TS_TAP</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s_filter_params</name><operator>.</operator><name>flags</name></name> <operator>=</operator> <name>DMX_IMMEDIATE_START</name></expr>;</expr_stmt>

<switch>switch <condition>( <expr><name>i_type</name></expr> )</condition>

<block>{<block_content> 

<case>case <expr><literal type="number">1</literal></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DMXSetFilter: DMX_PES_VIDEO0 for PID %d"</literal></expr></argument>, <argument><expr><name>i_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s_filter_params</name><operator>.</operator><name>pes_type</name></name> <operator>=</operator> <name>DMX_PES_VIDEO0</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">2</literal></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DMXSetFilter: DMX_PES_AUDIO0 for PID %d"</literal></expr></argument>, <argument><expr><name>i_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s_filter_params</name><operator>.</operator><name>pes_type</name></name> <operator>=</operator> <name>DMX_PES_AUDIO0</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">3</literal></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DMXSetFilter: DMX_PES_TELETEXT0 for PID %d"</literal></expr></argument>, <argument><expr><name>i_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s_filter_params</name><operator>.</operator><name>pes_type</name></name> <operator>=</operator> <name>DMX_PES_TELETEXT0</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">4</literal></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DMXSetFilter: DMX_PES_SUBTITLE0 for PID %d"</literal></expr></argument>, <argument><expr><name>i_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s_filter_params</name><operator>.</operator><name>pes_type</name></name> <operator>=</operator> <name>DMX_PES_SUBTITLE0</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">5</literal></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DMXSetFilter: DMX_PES_PCR0 for PID %d"</literal></expr></argument>, <argument><expr><name>i_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s_filter_params</name><operator>.</operator><name>pes_type</name></name> <operator>=</operator> <name>DMX_PES_PCR0</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">6</literal></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DMXSetFilter: DMX_PES_VIDEO1 for PID %d"</literal></expr></argument>, <argument><expr><name>i_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s_filter_params</name><operator>.</operator><name>pes_type</name></name> <operator>=</operator> <name>DMX_PES_VIDEO1</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">7</literal></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DMXSetFilter: DMX_PES_AUDIO1 for PID %d"</literal></expr></argument>, <argument><expr><name>i_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s_filter_params</name><operator>.</operator><name>pes_type</name></name> <operator>=</operator> <name>DMX_PES_AUDIO1</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">8</literal></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DMXSetFilter: DMX_PES_TELETEXT1 for PID %d"</literal></expr></argument>, <argument><expr><name>i_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s_filter_params</name><operator>.</operator><name>pes_type</name></name> <operator>=</operator> <name>DMX_PES_TELETEXT1</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">9</literal></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DMXSetFilter: DMX_PES_SUBTITLE1 for PID %d"</literal></expr></argument>, <argument><expr><name>i_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s_filter_params</name><operator>.</operator><name>pes_type</name></name> <operator>=</operator> <name>DMX_PES_SUBTITLE1</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">10</literal></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DMXSetFilter: DMX_PES_PCR1 for PID %d"</literal></expr></argument>, <argument><expr><name>i_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s_filter_params</name><operator>.</operator><name>pes_type</name></name> <operator>=</operator> <name>DMX_PES_PCR1</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">11</literal></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DMXSetFilter: DMX_PES_VIDEO2 for PID %d"</literal></expr></argument>, <argument><expr><name>i_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s_filter_params</name><operator>.</operator><name>pes_type</name></name> <operator>=</operator> <name>DMX_PES_VIDEO2</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">12</literal></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DMXSetFilter: DMX_PES_AUDIO2 for PID %d"</literal></expr></argument>, <argument><expr><name>i_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s_filter_params</name><operator>.</operator><name>pes_type</name></name> <operator>=</operator> <name>DMX_PES_AUDIO2</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">13</literal></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DMXSetFilter: DMX_PES_TELETEXT2 for PID %d"</literal></expr></argument>, <argument><expr><name>i_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s_filter_params</name><operator>.</operator><name>pes_type</name></name> <operator>=</operator> <name>DMX_PES_TELETEXT2</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">14</literal></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DMXSetFilter: DMX_PES_SUBTITLE2 for PID %d"</literal></expr></argument>, <argument><expr><name>i_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s_filter_params</name><operator>.</operator><name>pes_type</name></name> <operator>=</operator> <name>DMX_PES_SUBTITLE2</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">15</literal></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DMXSetFilter: DMX_PES_PCR2 for PID %d"</literal></expr></argument>, <argument><expr><name>i_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s_filter_params</name><operator>.</operator><name>pes_type</name></name> <operator>=</operator> <name>DMX_PES_PCR2</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">16</literal></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DMXSetFilter: DMX_PES_VIDEO3 for PID %d"</literal></expr></argument>, <argument><expr><name>i_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s_filter_params</name><operator>.</operator><name>pes_type</name></name> <operator>=</operator> <name>DMX_PES_VIDEO3</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">17</literal></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DMXSetFilter: DMX_PES_AUDIO3 for PID %d"</literal></expr></argument>, <argument><expr><name>i_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s_filter_params</name><operator>.</operator><name>pes_type</name></name> <operator>=</operator> <name>DMX_PES_AUDIO3</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">18</literal></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DMXSetFilter: DMX_PES_TELETEXT3 for PID %d"</literal></expr></argument>, <argument><expr><name>i_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s_filter_params</name><operator>.</operator><name>pes_type</name></name> <operator>=</operator> <name>DMX_PES_TELETEXT3</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">19</literal></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DMXSetFilter: DMX_PES_SUBTITLE3 for PID %d"</literal></expr></argument>, <argument><expr><name>i_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s_filter_params</name><operator>.</operator><name>pes_type</name></name> <operator>=</operator> <name>DMX_PES_SUBTITLE3</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">20</literal></expr>:</case>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DMXSetFilter: DMX_PES_PCR3 for PID %d"</literal></expr></argument>, <argument><expr><name>i_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s_filter_params</name><operator>.</operator><name>pes_type</name></name> <operator>=</operator> <name>DMX_PES_PCR3</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">21</literal></expr>:</case>

<default>default:</default>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DMXSetFilter: DMX_PES_OTHER for PID %d"</literal></expr></argument>, <argument><expr><name>i_pid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s_filter_params</name><operator>.</operator><name>pes_type</name></name> <operator>=</operator> <name>DMX_PES_OTHER</name></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></switch>

<if_stmt><if>if<condition>( <expr><call><name>ioctl</name><argument_list>( <argument><expr><operator>*</operator><name>pi_fd</name></expr></argument>, <argument><expr><name>DMX_SET_PES_FILTER</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>s_filter_params</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"setting demux PES filter failed: %s"</literal></expr></argument>,

<argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>DMXUnsetFilter</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_fd</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><call><name>ioctl</name><argument_list>( <argument><expr><name>i_fd</name></expr></argument>, <argument><expr><name>DMX_STOP</name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"stopping demux failed: %s"</literal></expr></argument>,

<argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DMXUnsetFilter: closing demux %d"</literal></expr></argument>, <argument><expr><name>i_fd</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_close</name><argument_list>( <argument><expr><name>i_fd</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>DVROpen</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>dvb_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_adapter</name></decl>, <decl><type ref="prev"/><name>i_device</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>dvr</name><index>[<expr><literal type="number">128</literal></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><name>i_adapter</name> <operator>=</operator> <call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-adapter"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_device</name> <operator>=</operator> <call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"dvb-device"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>snprintf</name><argument_list>( <argument><expr><name>dvr</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>dvr</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>DVR</name></expr></argument>, <argument><expr><name>i_adapter</name></expr></argument>, <argument><expr><name>i_device</name></expr></argument> )</argument_list></call>

<operator>&gt;=</operator> <operator>(</operator><name>int</name><operator>)</operator><sizeof>sizeof<argument_list>(<argument><expr><name>dvr</name></expr></argument>)</argument_list></sizeof></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"snprintf() truncated string for DVR"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dvr</name><index>[<expr><sizeof>sizeof<argument_list>(<argument><expr><name>dvr</name></expr></argument>)</argument_list></sizeof> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"Opening device %s"</literal></expr></argument>, <argument><expr><name>dvr</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>(</operator><name><name>p_sys</name><operator>-&gt;</operator><name>i_handle</name></name> <operator>=</operator> <call><name>vlc_open</name><argument_list>(<argument><expr><name>dvr</name></expr></argument>, <argument><expr><name>O_RDONLY</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DVROpen: opening device failed: %s"</literal></expr></argument>,

<argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><call><name>fcntl</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_handle</name></name></expr></argument>, <argument><expr><name>F_SETFL</name></expr></argument>, <argument><expr><name>O_NONBLOCK</name></expr></argument> )</argument_list></call> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"DVROpen: couldn't set non-blocking mode: %s"</literal></expr></argument>,

<argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>DVRClose</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>dvb_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_close</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_handle</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
