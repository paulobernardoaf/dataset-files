<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\access\vcd\vcd.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_input.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_access.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_charset.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cdrom.h"</cpp:file></cpp:include>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Open</name> <parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<macro><name>vlc_module_begin</name> <argument_list>()</argument_list></macro>

<macro><name>set_shortname</name><argument_list>( <argument>N_(<literal type="string">"VCD"</literal>)</argument>)</argument_list></macro>

<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"VCD input"</literal>)</argument> )</argument_list></macro>

<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"access"</literal></argument>, <argument><literal type="number">0</literal></argument> )</argument_list></macro>

<macro><name>set_callbacks</name><argument_list>( <argument>Open</argument>, <argument>Close</argument> )</argument_list></macro>

<macro><name>set_category</name><argument_list>( <argument>CAT_INPUT</argument> )</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_INPUT_ACCESS</argument> )</argument_list></macro>

<macro><name>add_usage_hint</name><argument_list>( <argument>N_(<literal type="string">"[vcd:][device][#[title][,[chapter]]]"</literal>)</argument> )</argument_list></macro>

<macro><name>add_shortcut</name><argument_list>( <argument><literal type="string">"vcd"</literal></argument>, <argument><literal type="string">"svcd"</literal></argument> )</argument_list></macro>

<macro><name>vlc_module_end</name> <argument_list>()</argument_list></macro>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VCD_BLOCKS_ONCE</name></cpp:macro> <cpp:value>20</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VCD_DATA_ONCE</name></cpp:macro> <cpp:value>(VCD_BLOCKS_ONCE * VCD_DATA_SIZE)</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>vcddev_t</name> <modifier>*</modifier></type><name>vcddev</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint64_t</name></type> <name>offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vcddev_toc_t</name> <modifier>*</modifier></type><name>p_toc</name></decl>;</decl_stmt>

<struct>struct

<block>{

<decl_stmt><decl><type><name>uint64_t</name> <modifier>*</modifier></type><name>seekpoints</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>count</name></decl>;</decl_stmt>

}</block> <decl><name><name>titles</name><index>[<expr><literal type="number">99</literal></expr>]</index></name></decl>;</struct> 

<decl_stmt><decl><type><name>int</name></type> <name>i_current_title</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>i_current_seekpoint</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_sector</name></decl>;</decl_stmt> 

}</block></struct></type> <name>access_sys_t</name>;</typedef>

<function_decl><type><specifier>static</specifier> <name>block_t</name> <modifier>*</modifier></type><name>Block</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>bool</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Seek</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Control</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>va_list</name></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>EntryPoints</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Open</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name> <init>= <expr><operator>(</operator><name>stream_t</name> <operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_access</name><operator>-&gt;</operator><name>psz_filepath</name></name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_dup</name> <init>= <expr><call><name>ToLocaleDup</name><argument_list>( <argument><expr><name><name>p_access</name><operator>-&gt;</operator><name>psz_filepath</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_title</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_chapter</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vcddev_t</name> <modifier>*</modifier></type><name>vcddev</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>(</operator> <name>psz</name> <operator>=</operator> <call><name>strchr</name><argument_list>( <argument><expr><name>psz_dup</name></expr></argument>, <argument><expr><literal type="char">'#'</literal></expr></argument> )</argument_list></call> <operator>)</operator></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>psz</name><operator>++</operator> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>i_title</name> <operator>=</operator> <call><name>strtol</name><argument_list>( <argument><expr><name>psz</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>psz</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>*</operator><name>psz</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>i_chapter</name> <operator>=</operator> <call><name>strtol</name><argument_list>( <argument><expr><name>psz</name><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>psz</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><operator>*</operator><name>psz_dup</name> <operator>==</operator> <literal type="char">'\0'</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>psz_dup</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>strcmp</name><argument_list>( <argument><expr><name><name>p_access</name><operator>-&gt;</operator><name>psz_name</name></name></expr></argument>, <argument><expr><literal type="string">"vcd"</literal></expr></argument> )</argument_list></call> <operator>&amp;&amp;</operator>

<call><name>strcmp</name><argument_list>( <argument><expr><name><name>p_access</name><operator>-&gt;</operator><name>psz_name</name></name></expr></argument>, <argument><expr><literal type="string">"svcd"</literal></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>psz_dup</name> <operator>=</operator> <call><name>var_CreateGetString</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"vcd"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>*</operator><name>psz_dup</name> <operator>==</operator> <literal type="char">'\0'</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>psz_dup</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>( <argument><expr><name>_WIN32</name></expr></argument> )</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>( <argument><expr><name>__OS2__</name></expr></argument> )</argument_list></call></expr></cpp:if>

<if_stmt><if>if<condition>( <expr><name><name>psz_dup</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&amp;&amp;</operator> <name><name>psz_dup</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>==</operator> <literal type="char">':'</literal> <operator>&amp;&amp;</operator>

<name><name>psz_dup</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'\\'</literal> <operator>&amp;&amp;</operator> <name><name>psz_dup</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'\0'</literal></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>psz_dup</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><name>vcddev</name> <operator>=</operator> <call><name>ioctl_Open</name><argument_list>( <argument><expr><name>p_this</name></expr></argument>, <argument><expr><name>psz_dup</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>psz_dup</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name>vcddev</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name> <operator>=</operator> <name>p_sys</name> <operator>=</operator> <call><name>calloc</name><argument_list>( <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><name>access_sys_t</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>unlikely</name><argument_list>(<argument><expr><operator>!</operator><name>p_sys</name></expr></argument> )</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>vcddev</name></name> <operator>=</operator> <name>vcddev</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>offset</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<for>for<control>( <init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>ARRAY_SIZE</name><argument_list>(<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>titles</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>titles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>seekpoints</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_toc</name></name> <operator>=</operator> <call><name>ioctl_GetTOC</name><argument_list>( <argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>vcddev</name></name></expr></argument>, <argument><expr><name>true</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_toc</name></name> <operator>==</operator> <name>NULL</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"unable to count tracks"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>error</name>;</goto>

</block_content>}</block></if>

<if type="elseif">else if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_toc</name><operator>-&gt;</operator><name>i_tracks</name></name> <operator>&lt;=</operator> <literal type="number">1</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>vcddev_toc_Free</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_toc</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_toc</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"no movie tracks found"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>error</name>;</goto>

</block_content>}</block></if></if_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>USABLE_TITLES</name><parameter_list>(<parameter><type><name>a</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(a - 1)</cpp:value></cpp:define>

<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>USABLE_TITLES</name><argument_list>(<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_toc</name><operator>-&gt;</operator><name>i_tracks</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"title[%d] start=%d"</literal></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_toc</name><operator>-&gt;</operator><name>p_sectors</name><index>[<expr><literal type="number">1</literal><operator>+</operator><name>i</name></expr>]</index></name><operator>.</operator><name>i_lba</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"title[%d] end=%d"</literal></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_toc</name><operator>-&gt;</operator><name>p_sectors</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>i_lba</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<if_stmt><if>if<condition>( <expr><call><name>EntryPoints</name><argument_list>( <argument><expr><name>p_access</name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"could not read entry points, will not use them"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name>i_title</name> <operator>&gt;</operator> <call><name>USABLE_TITLES</name><argument_list>(<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_toc</name><operator>-&gt;</operator><name>i_tracks</name></name></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>i_title</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><operator>(</operator><name>unsigned</name><operator>)</operator><name>i_chapter</name> <operator>&gt;=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>titles</name><index>[<expr><name>i_title</name></expr>]</index></name><operator>.</operator><name>count</name></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>i_chapter</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_sector</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>p_toc</name><operator>-&gt;</operator><name>p_sectors</name><index>[<expr><literal type="number">1</literal><operator>+</operator><name>i_title</name></expr>]</index></name><operator>.</operator><name>i_lba</name></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i_chapter</name> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_sector</name></name> <operator>+=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>titles</name><index>[<expr><name>i_title</name></expr>]</index></name><operator>.</operator><name><name>seekpoints</name><index>[<expr><name>i_chapter</name></expr>]</index></name>

<operator>/</operator> <name>VCD_DATA_SIZE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_access</name><operator>-&gt;</operator><name>pf_read</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_access</name><operator>-&gt;</operator><name>pf_block</name></name> <operator>=</operator> <name>Block</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_access</name><operator>-&gt;</operator><name>pf_control</name></name> <operator>=</operator> <name>Control</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_access</name><operator>-&gt;</operator><name>pf_seek</name></name> <operator>=</operator> <name>Seek</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_current_title</name></name> <operator>=</operator> <name>i_title</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_current_seekpoint</name></name> <operator>=</operator> <name>i_chapter</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>offset</name></name> <operator>=</operator> <operator>(</operator><name>uint64_t</name><operator>)</operator><operator>(</operator><name><name>p_sys</name><operator>-&gt;</operator><name>i_sector</name></name> <operator>-</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>p_toc</name><operator>-&gt;</operator><name>p_sectors</name><index>[<expr><literal type="number">1</literal><operator>+</operator><name>i_title</name></expr>]</index></name><operator>.</operator><name>i_lba</name><operator>)</operator> <operator>*</operator>

<name>VCD_DATA_SIZE</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<label><name>error</name>:</label>

<expr_stmt><expr><call><name>ioctl_Close</name><argument_list>( <argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>vcddev</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name> <init>= <expr><operator>(</operator><name>stream_t</name> <operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<for>for<control>( <init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>ARRAY_SIZE</name><argument_list>(<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>titles</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>titles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>seekpoints</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><call><name>vcddev_toc_Free</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_toc</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ioctl_Close</name><argument_list>( <argument><expr><name>p_this</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>vcddev</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Control</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_query</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>args</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>input_title_t</name> <modifier>*</modifier><modifier>*</modifier><modifier>*</modifier></type><name>ppp_title</name></decl>;</decl_stmt>

<switch>switch<condition>( <expr><name>i_query</name></expr> )</condition>

<block>{<block_content>

<case>case <expr><name>STREAM_CAN_SEEK</name></expr>:</case>

<case>case <expr><name>STREAM_CAN_FASTSEEK</name></expr>:</case>

<case>case <expr><name>STREAM_CAN_PAUSE</name></expr>:</case>

<case>case <expr><name>STREAM_CAN_CONTROL_PACE</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>bool</name><operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>STREAM_GET_SIZE</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_current_title</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>uint64_t</name> <operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator>

<operator>(</operator><name><name>p_sys</name><operator>-&gt;</operator><name>p_toc</name><operator>-&gt;</operator><name>p_sectors</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>i_lba</name> <operator>-</operator>

<name><name>p_sys</name><operator>-&gt;</operator><name>p_toc</name><operator>-&gt;</operator><name>p_sectors</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>i_lba</name><operator>)</operator> <operator>*</operator> <operator>(</operator><name>uint64_t</name><operator>)</operator><name>VCD_DATA_SIZE</name></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block>

<case>case <expr><name>STREAM_GET_PTS_DELAY</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>vlc_tick_t</name> <operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator> <call><name>VLC_TICK_FROM_MS</name><argument_list>(

<argument><expr><call><name>var_InheritInteger</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"disc-caching"</literal></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>STREAM_SET_PAUSE_STATE</name></expr>:</case>

<break>break;</break>

<case>case <expr><name>STREAM_GET_TITLE_INFO</name></expr>:</case>

<expr_stmt><expr><name>ppp_title</name> <operator>=</operator> <call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>input_title_t</name><operator>*</operator><operator>*</operator><operator>*</operator></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>ppp_title</name> <operator>=</operator> <call><name>vlc_alloc</name><argument_list>( <argument><expr><call><name>USABLE_TITLES</name><argument_list>(<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_toc</name><operator>-&gt;</operator><name>i_tracks</name></name></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>input_title_t</name> <operator>*</operator></expr></argument>)</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>*</operator><name>ppp_title</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>int</name><operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator> <call><name>USABLE_TITLES</name><argument_list>(<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_toc</name><operator>-&gt;</operator><name>i_tracks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>USABLE_TITLES</name><argument_list>(<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_toc</name><operator>-&gt;</operator><name>i_tracks</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control><block type="pseudo"><block_content>

<expr_stmt><expr><operator>(</operator><operator>*</operator><name>ppp_title</name><operator>)</operator><index>[<expr><name>i</name></expr>]</index> <operator>=</operator> <call><name>vlc_input_title_New</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<break>break;</break>

<case>case <expr><name>STREAM_GET_TITLE</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>unsigned</name> <operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_current_title</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>STREAM_GET_SEEKPOINT</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>unsigned</name> <operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_current_seekpoint</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>STREAM_GET_CONTENT_TYPE</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>char</name> <operator>*</operator><operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator> <call><name>strdup</name><argument_list>(<argument><expr><literal type="string">"video/MP2P"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>STREAM_SET_TITLE</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>int</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>i</name> <operator>!=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_current_title</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>offset</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_current_title</name></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_current_seekpoint</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_sector</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>p_toc</name><operator>-&gt;</operator><name>p_sectors</name><index>[<expr><literal type="number">1</literal><operator>+</operator><name>i</name></expr>]</index></name><operator>.</operator><name>i_lba</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<break>break;</break>

</block_content>}</block>

<case>case <expr><name>STREAM_SET_SEEKPOINT</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>int</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>i_title</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_current_title</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>titles</name><index>[<expr><name>i_title</name></expr>]</index></name><operator>.</operator><name>count</name> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_current_seekpoint</name></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_sector</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>p_toc</name><operator>-&gt;</operator><name>p_sectors</name><index>[<expr><literal type="number">1</literal> <operator>+</operator> <name>i_title</name></expr>]</index></name><operator>.</operator><name>i_lba</name> <operator>+</operator>

<name><name>p_sys</name><operator>-&gt;</operator><name>titles</name><index>[<expr><name>i_title</name></expr>]</index></name><operator>.</operator><name><name>seekpoints</name><index>[<expr><name>i</name></expr>]</index></name> <operator>/</operator> <name>VCD_DATA_SIZE</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>offset</name></name> <operator>=</operator> <operator>(</operator><name>uint64_t</name><operator>)</operator><operator>(</operator><name><name>p_sys</name><operator>-&gt;</operator><name>i_sector</name></name> <operator>-</operator>

<name><name>p_sys</name><operator>-&gt;</operator><name>p_toc</name><operator>-&gt;</operator><name>p_sectors</name><index>[<expr><literal type="number">1</literal> <operator>+</operator> <name>i_title</name></expr>]</index></name><operator>.</operator><name>i_lba</name><operator>)</operator> <operator>*</operator> <name>VCD_DATA_SIZE</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<break>break;</break>

</block_content>}</block>

<default>default:</default>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></switch>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>block_t</name> <modifier>*</modifier></type><name>Block</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>bool</name> <modifier>*</modifier><specifier>restrict</specifier></type> <name>eof</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>vcddev_toc_t</name> <modifier>*</modifier></type><name>p_toc</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_toc</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_blocks</name> <init>= <expr><name>VCD_BLOCKS_ONCE</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_block</name></decl>;</decl_stmt>

<while>while<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_sector</name></name> <operator>&gt;=</operator> <name><name>p_toc</name><operator>-&gt;</operator><name>p_sectors</name><index>[<expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_current_title</name></name> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>i_lba</name></expr> )</condition>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_current_title</name></name> <operator>+</operator> <literal type="number">2</literal> <operator>&gt;=</operator> <call><name>USABLE_TITLES</name><argument_list>(<argument><expr><name><name>p_toc</name><operator>-&gt;</operator><name>i_tracks</name></name></expr></argument>)</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>eof</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_current_title</name></name><operator>++</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_current_seekpoint</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>offset</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></while>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_sector</name></name> <operator>+</operator> <name>i_blocks</name> <operator>&gt;=</operator>

<name><name>p_toc</name><operator>-&gt;</operator><name>p_sectors</name><index>[<expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_current_title</name></name> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>i_lba</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name>i_blocks</name> <operator>=</operator> <name><name>p_toc</name><operator>-&gt;</operator><name>p_sectors</name><index>[<expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_current_title</name></name> <operator>+</operator> <literal type="number">2</literal></expr> ]</index></name><operator>.</operator><name>i_lba</name> <operator>-</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_sector</name></name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name>i_blocks</name> <operator>&lt;</operator> <literal type="number">0</literal> <operator>||</operator> <operator>!</operator><operator>(</operator> <name>p_block</name> <operator>=</operator> <call><name>block_Alloc</name><argument_list>( <argument><expr><name>i_blocks</name> <operator>*</operator> <name>VCD_DATA_SIZE</name></expr></argument> )</argument_list></call> <operator>)</operator></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"cannot get a new block of size: %i"</literal></expr></argument>,

<argument><expr><name>i_blocks</name> <operator>*</operator> <name>VCD_DATA_SIZE</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><call><name>ioctl_ReadSectors</name><argument_list>( <argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>vcddev</name></name></expr></argument>,

<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_sector</name></name></expr></argument>, <argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>p_buffer</name></name></expr></argument>, <argument><expr><name>i_blocks</name></expr></argument>, <argument><expr><name>VCD_TYPE</name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"cannot read sector %i"</literal></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_sector</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>block_Release</name><argument_list>( <argument><expr><name>p_block</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>offset</name></name> <operator>+=</operator> <name>VCD_DATA_SIZE</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_sector</name></name><operator>++</operator></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<for>for<control>( <init><decl><type><name>int</name></type> <name>i_read</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i_read</name> <operator>&lt;</operator> <name>i_blocks</name></expr>;</condition> <incr><expr><name>i_read</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i_title</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_current_title</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>titles</name><index>[<expr><name>i_title</name></expr>]</index></name><operator>.</operator><name>count</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>

<name><name>p_sys</name><operator>-&gt;</operator><name>i_current_seekpoint</name></name> <operator>+</operator> <literal type="number">1</literal> <operator>&lt;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>titles</name><index>[<expr><name>i_title</name></expr>]</index></name><operator>.</operator><name>count</name> <operator>&amp;&amp;</operator>

<operator>(</operator><name><name>p_sys</name><operator>-&gt;</operator><name>offset</name></name> <operator>+</operator> <name>i_read</name> <operator>*</operator> <name>VCD_DATA_SIZE</name><operator>)</operator> <operator>&gt;=</operator>

<name><name>p_sys</name><operator>-&gt;</operator><name>titles</name><index>[<expr><name>i_title</name></expr>]</index></name><operator>.</operator><name><name>seekpoints</name><index>[<expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_current_seekpoint</name></name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"seekpoint change"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_current_seekpoint</name></name><operator>++</operator></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>offset</name></name> <operator>+=</operator> <name><name>p_block</name><operator>-&gt;</operator><name>i_buffer</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_sector</name></name> <operator>+=</operator> <name>i_blocks</name></expr>;</expr_stmt>

<return>return <expr><name>p_block</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Seek</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type> <name>i_pos</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>vcddev_toc_t</name> <modifier>*</modifier></type><name>p_toc</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_toc</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_title</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_current_title</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>i_seekpoint</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>offset</name></name> <operator>=</operator> <name>i_pos</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_sector</name></name> <operator>=</operator> <name>i_pos</name> <operator>/</operator> <name>VCD_DATA_SIZE</name> <operator>+</operator> <name><name>p_toc</name><operator>-&gt;</operator><name>p_sectors</name><index>[<expr><name>i_title</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>i_lba</name></expr>;</expr_stmt>

<for>for<control>( <init><expr><name>i_seekpoint</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i_seekpoint</name> <operator>&lt;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>titles</name><index>[<expr><name>i_title</name></expr>]</index></name><operator>.</operator><name>count</name></expr>;</condition> <incr><expr><name>i_seekpoint</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name>i_seekpoint</name> <operator>+</operator> <literal type="number">1</literal> <operator>&gt;=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>titles</name><index>[<expr><name>i_title</name></expr>]</index></name><operator>.</operator><name>count</name></expr> )</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><literal type="number">0</literal> <operator>&lt;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>titles</name><index>[<expr><name>i_title</name></expr>]</index></name><operator>.</operator><name><name>seekpoints</name><index>[<expr><name>i_seekpoint</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>&amp;&amp;</operator>

<name>i_pos</name> <operator>&lt;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>titles</name><index>[<expr><name>i_title</name></expr>]</index></name><operator>.</operator><name><name>seekpoints</name><index>[<expr><name>i_seekpoint</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr> )</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>

</block_content>}</block></for>

<if_stmt><if>if<condition>( <expr><name>i_seekpoint</name> <operator>!=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_current_seekpoint</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"seekpoint change"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_current_seekpoint</name></name> <operator>=</operator> <name>i_seekpoint</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>EntryPoints</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>vcddev_toc_t</name> <modifier>*</modifier></type><name>p_toc</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_toc</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sector</name><index>[<expr><name>VCD_DATA_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>entries_sect_t</name></type> <name>entries</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_nb</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>ioctl_ReadSectors</name><argument_list>( <argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>p_access</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>vcddev</name></name></expr></argument>,

<argument><expr><name>VCD_ENTRIES_SECTOR</name></expr></argument>, <argument><expr><name>sector</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>VCD_TYPE</name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"could not read entry points sector"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>( <argument><expr><operator>&amp;</operator><name>entries</name></expr></argument>, <argument><expr><name>sector</name></expr></argument>, <argument><expr><name>CD_SECTOR_SIZE</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_nb</name> <operator>=</operator> <call><name>GetWBE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>entries</name><operator>.</operator><name>i_entries_nb</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i_nb</name> <operator>&gt;</operator> <literal type="number">500</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"invalid entry points number"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><call><name>strncmp</name><argument_list>( <argument><expr><name><name>entries</name><operator>.</operator><name>psz_id</name></name></expr></argument>, <argument><expr><literal type="string">"ENTRYVCD"</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><name><name>entries</name><operator>.</operator><name>psz_id</name></name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call> <operator>&amp;&amp;</operator>

<call><name>strncmp</name><argument_list>( <argument><expr><name><name>entries</name><operator>.</operator><name>psz_id</name></name></expr></argument>, <argument><expr><literal type="string">"ENTRYSVD"</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><name><name>entries</name><operator>.</operator><name>psz_id</name></name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"unrecognized entry points format"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>i_nb</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>i_title</name> <init>= <expr><call><name>BCD_TO_BIN</name><argument_list>(<argument><expr><name><name>entries</name><operator>.</operator><name>entry</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>i_track</name></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">2</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>i_sector</name> <init>=

<expr><operator>(</operator><call><name>MSF_TO_LBA2</name><argument_list>( <argument><expr><call><name>BCD_TO_BIN</name><argument_list>( <argument><expr><name><name>entries</name><operator>.</operator><name>entry</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name><name>msf</name><operator>.</operator><name>minute</name></name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><call><name>BCD_TO_BIN</name><argument_list>( <argument><expr><name><name>entries</name><operator>.</operator><name>entry</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name><name>msf</name><operator>.</operator><name>second</name></name></expr></argument> )</argument_list></call></expr></argument>,

<argument><expr><call><name>BCD_TO_BIN</name><argument_list>( <argument><expr><name><name>entries</name><operator>.</operator><name>entry</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name><name>msf</name><operator>.</operator><name>frame</name></name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call><operator>)</operator></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>i_title</name> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content> <continue>continue;</continue></block_content></block></if></if_stmt> 

<if_stmt><if>if<condition>( <expr><name>i_title</name> <operator>&gt;=</operator> <call><name>USABLE_TITLES</name><argument_list>(<argument><expr><name><name>p_toc</name><operator>-&gt;</operator><name>i_tracks</name></name></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo"><block_content> <continue>continue;</continue></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"Entry[%d] title=%d sector=%d"</literal></expr></argument>,

<argument><expr><name>i</name></expr></argument>, <argument><expr><name>i_title</name></expr></argument>, <argument><expr><name>i_sector</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>titles</name><index>[<expr><name>i_title</name></expr>]</index></name><operator>.</operator><name>seekpoints</name> <operator>=</operator> <call><name>xrealloc</name><argument_list>(

<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>titles</name><index>[<expr><name>i_title</name></expr>]</index></name><operator>.</operator><name>seekpoints</name></expr></argument>,

<argument><expr><sizeof>sizeof<argument_list>( <argument><expr><name>uint64_t</name></expr></argument> )</argument_list></sizeof> <operator>*</operator> <operator>(</operator><name><name>p_sys</name><operator>-&gt;</operator><name>titles</name><index>[<expr><name>i_title</name></expr>]</index></name><operator>.</operator><name>count</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>titles</name><index>[<expr><name>i_title</name></expr>]</index></name><operator>.</operator><name><name>seekpoints</name><index>[<expr><name><name>p_sys</name><operator>-&gt;</operator><name>titles</name><index>[<expr><name>i_title</name></expr>]</index></name><operator>.</operator><name>count</name><operator>++</operator></expr>]</index></name> <operator>=</operator>

<operator>(</operator><name>i_sector</name> <operator>-</operator> <name><name>p_toc</name><operator>-&gt;</operator><name>p_sectors</name><index>[<expr><name>i_title</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>i_lba</name><operator>)</operator> <operator>*</operator> <name>VCD_DATA_SIZE</name></expr>;</expr_stmt>

</block_content>}</block></for>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

</unit>
