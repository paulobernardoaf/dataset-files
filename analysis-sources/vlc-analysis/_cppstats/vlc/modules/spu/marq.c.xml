<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\spu\marq.c"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;errno.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_filter.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_block.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_fs.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_strings.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_subpicture.h&gt;</cpp:file></cpp:include>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>CreateFilter</name> <parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>DestroyFilter</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>subpicture_t</name> <modifier>*</modifier></type><name>Filter</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type><name>MarqueeReadFile</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>MarqueeCallback</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter>, <parameter><decl><type><name>char</name> <specifier>const</specifier> <modifier>*</modifier></type><name>psz_var</name></decl></parameter>,

<parameter><decl><type><name>vlc_value_t</name></type> <name>oldval</name></decl></parameter>, <parameter><decl><type><name>vlc_value_t</name></type> <name>newval</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_data</name></decl></parameter> )</parameter_list>;</function_decl>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>pi_color_values</name><index>[]</index></name> <init>= <expr><block>{

<expr><literal type="number">0xf0000000</literal></expr>, <expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x00808080</literal></expr>, <expr><literal type="number">0x00C0C0C0</literal></expr>,

<expr><literal type="number">0x00FFFFFF</literal></expr>, <expr><literal type="number">0x00800000</literal></expr>, <expr><literal type="number">0x00FF0000</literal></expr>, <expr><literal type="number">0x00FF00FF</literal></expr>, <expr><literal type="number">0x00FFFF00</literal></expr>,

<expr><literal type="number">0x00808000</literal></expr>, <expr><literal type="number">0x00008000</literal></expr>, <expr><literal type="number">0x00008080</literal></expr>, <expr><literal type="number">0x0000FF00</literal></expr>, <expr><literal type="number">0x00800080</literal></expr>,

<expr><literal type="number">0x00000080</literal></expr>, <expr><literal type="number">0x000000FF</literal></expr>, <expr><literal type="number">0x0000FFFF</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>ppsz_color_descriptions</name><index>[]</index></name> <init>= <expr><block>{

<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Default"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Black"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Gray"</literal></expr></argument>)</argument_list></call></expr>,

<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Silver"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"White"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Maroon"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Red"</literal></expr></argument>)</argument_list></call></expr>,

<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Fuchsia"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Yellow"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Olive"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Green"</literal></expr></argument>)</argument_list></call></expr>,

<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Teal"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Lime"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Purple"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Navy"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Blue"</literal></expr></argument>)</argument_list></call></expr>,

<macro><name>N_</name><argument_list>(<argument><literal type="string">"Aqua"</literal></argument>)</argument_list></macro> }</block></expr></init></decl>;</decl_stmt>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>lock</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_xoff</name></decl>, <name>i_yoff</name>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>i_pos</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_timeout</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>format</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>filepath</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>message</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>text_style_t</name> <modifier>*</modifier></type><name>p_style</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>last_time</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_refresh</name></decl>;</decl_stmt>

}</block></struct></type> <name>filter_sys_t</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MSG_TEXT</name></cpp:macro> <cpp:value>N_("Text")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MSG_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Marquee text to display. " "(Available format strings: " "%Y = year, %m = month, %d = day, %H = hour, " "%M = minute, %S = second, ...)" )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FILE_TEXT</name></cpp:macro> <cpp:value>N_("Text file")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FILE_LONGTEXT</name></cpp:macro> <cpp:value>N_("File to read the marquee text from.")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>POSX_TEXT</name></cpp:macro> <cpp:value>N_("X offset")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>POSX_LONGTEXT</name></cpp:macro> <cpp:value>N_("X offset, from the left screen edge." )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>POSY_TEXT</name></cpp:macro> <cpp:value>N_("Y offset")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>POSY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Y offset, down from the top." )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TIMEOUT_TEXT</name></cpp:macro> <cpp:value>N_("Timeout")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TIMEOUT_LONGTEXT</name></cpp:macro> <cpp:value>N_("Number of milliseconds the marquee must remain " "displayed. Default value is " "0 (remains forever).")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REFRESH_TEXT</name></cpp:macro> <cpp:value>N_("Refresh period in ms")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REFRESH_LONGTEXT</name></cpp:macro> <cpp:value>N_("Number of milliseconds between string updates. " "This is mainly useful when using meta data " "or time format string sequences.")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPACITY_TEXT</name></cpp:macro> <cpp:value>N_("Opacity")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPACITY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Opacity (inverse of transparency) of " "overlayed text. 0 = transparent, 255 = totally opaque." )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SIZE_TEXT</name></cpp:macro> <cpp:value>N_("Font size, pixels")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SIZE_LONGTEXT</name></cpp:macro> <cpp:value>N_("Font size, in pixels. Default is 0 (use default " "font size)." )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COLOR_TEXT</name></cpp:macro> <cpp:value>N_("Color")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COLOR_LONGTEXT</name></cpp:macro> <cpp:value>N_("Color of the text that will be rendered on ""the video. This must be an hexadecimal (like HTML colors). The first two ""chars are for red, then green, then blue. #000000 = black, #FF0000 = red,"" #00FF00 = green, #FFFF00 = yellow (red + green), #FFFFFF = white" )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>POS_TEXT</name></cpp:macro> <cpp:value>N_("Marquee position")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>POS_LONGTEXT</name></cpp:macro> <cpp:value>N_( "You can enforce the marquee position on the video " "(0=center, 1=left, 2=right, 4=top, 8=bottom, you can " "also use combinations of these values, eg 6 = top-right).")</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>pi_pos_values</name><index>[]</index></name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>ppsz_pos_descriptions</name><index>[]</index></name> <init>=

<expr><block>{ <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Center"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Left"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Right"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Top"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Bottom"</literal></expr></argument>)</argument_list></call></expr>,

<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Top-Left"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Top-Right"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Bottom-Left"</literal></expr></argument>)</argument_list></call></expr>, <macro><name>N_</name><argument_list>(<argument><literal type="string">"Bottom-Right"</literal></argument>)</argument_list></macro> }</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CFG_PREFIX</name></cpp:macro> <cpp:value>"marq-"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MARQUEE_HELP</name></cpp:macro> <cpp:value>N_("Display text above the video")</cpp:value></cpp:define>

<macro><name>vlc_module_begin</name> <argument_list>()</argument_list></macro>

<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"sub source"</literal></argument>, <argument><literal type="number">0</literal></argument> )</argument_list></macro>

<macro><name>set_shortname</name><argument_list>( <argument>N_(<literal type="string">"Marquee"</literal> )</argument>)</argument_list></macro>

<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"Marquee display"</literal>)</argument> )</argument_list></macro>

<macro><name>set_help</name><argument_list>(<argument>MARQUEE_HELP</argument>)</argument_list></macro>

<macro><name>set_callbacks</name><argument_list>( <argument>CreateFilter</argument>, <argument>DestroyFilter</argument> )</argument_list></macro>

<macro><name>set_category</name><argument_list>( <argument>CAT_VIDEO</argument> )</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_VIDEO_SUBPIC</argument> )</argument_list></macro>

<macro><name>add_string</name><argument_list>( <argument>CFG_PREFIX <literal type="string">"marquee"</literal></argument>, <argument><literal type="string">"VLC"</literal></argument>, <argument>MSG_TEXT</argument>, <argument>MSG_LONGTEXT</argument>,

<argument>false</argument> )</argument_list></macro>

<macro><name>add_loadfile</name><argument_list>(<argument>CFG_PREFIX <literal type="string">"file"</literal></argument>, <argument>NULL</argument>, <argument>FILE_TEXT</argument>, <argument>FILE_LONGTEXT</argument>)</argument_list></macro>

<macro><name>set_section</name><argument_list>( <argument>N_(<literal type="string">"Position"</literal>)</argument>, <argument>NULL</argument> )</argument_list></macro>

<macro><name>add_integer</name><argument_list>( <argument>CFG_PREFIX <literal type="string">"x"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>POSX_TEXT</argument>, <argument>POSX_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>

<macro><name>add_integer</name><argument_list>( <argument>CFG_PREFIX <literal type="string">"y"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>POSY_TEXT</argument>, <argument>POSY_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>

<macro><name>add_integer</name><argument_list>( <argument>CFG_PREFIX <literal type="string">"position"</literal></argument>, <argument>-<literal type="number">1</literal></argument>, <argument>POS_TEXT</argument>, <argument>POS_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>

<macro><name>change_integer_list</name><argument_list>( <argument>pi_pos_values</argument>, <argument>ppsz_pos_descriptions</argument> )</argument_list></macro>

<macro><name>set_section</name><argument_list>( <argument>N_(<literal type="string">"Font"</literal>)</argument>, <argument>NULL</argument> )</argument_list></macro>

<macro><name>add_integer_with_range</name><argument_list>( <argument>CFG_PREFIX <literal type="string">"opacity"</literal></argument>, <argument><literal type="number">255</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">255</literal></argument>,

<argument>OPACITY_TEXT</argument>, <argument>OPACITY_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>

<macro><name>add_rgb</name><argument_list>(<argument>CFG_PREFIX <literal type="string">"color"</literal></argument>, <argument><literal type="number">0xFFFFFF</literal></argument>, <argument>COLOR_TEXT</argument>, <argument>COLOR_LONGTEXT</argument>)</argument_list></macro>

<macro><name>change_integer_list</name><argument_list>( <argument>pi_color_values</argument>, <argument>ppsz_color_descriptions</argument> )</argument_list></macro>

<macro><name>add_integer</name><argument_list>( <argument>CFG_PREFIX <literal type="string">"size"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>SIZE_TEXT</argument>, <argument>SIZE_LONGTEXT</argument>,

<argument>false</argument> )</argument_list></macro>

<macro><name>change_integer_range</name><argument_list>( <argument><literal type="number">0</literal></argument>, <argument><literal type="number">4096</literal></argument>)</argument_list></macro>

<macro><name>set_section</name><argument_list>( <argument>N_(<literal type="string">"Misc"</literal>)</argument>, <argument>NULL</argument> )</argument_list></macro>

<macro><name>add_integer</name><argument_list>( <argument>CFG_PREFIX <literal type="string">"timeout"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>TIMEOUT_TEXT</argument>, <argument>TIMEOUT_LONGTEXT</argument>,

<argument>false</argument> )</argument_list></macro>

<macro><name>add_integer</name><argument_list>( <argument>CFG_PREFIX <literal type="string">"refresh"</literal></argument>, <argument><literal type="number">1000</literal></argument>, <argument>REFRESH_TEXT</argument>,

<argument>REFRESH_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>

<macro><name>add_shortcut</name><argument_list>( <argument><literal type="string">"time"</literal></argument> )</argument_list></macro>

<macro><name>vlc_module_end</name> <argument_list>()</argument_list></macro>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>ppsz_filter_options</name><index>[]</index></name> <init>= <expr><block>{

<expr><literal type="string">"marquee"</literal></expr>, <expr><literal type="string">"x"</literal></expr>, <expr><literal type="string">"y"</literal></expr>, <expr><literal type="string">"position"</literal></expr>, <expr><literal type="string">"color"</literal></expr>, <expr><literal type="string">"size"</literal></expr>, <expr><literal type="string">"timeout"</literal></expr>, <expr><literal type="string">"refresh"</literal></expr>,

<expr><literal type="string">"opacity"</literal></expr>,<expr><literal type="string">"file"</literal></expr>,

<expr><name>NULL</name></expr>

}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>int</name></type> <name>CreateFilter</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name> <init>= <expr><operator>(</operator><name>filter_t</name> <operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>filter_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl>;</decl_stmt>

<expr_stmt><expr><name>p_sys</name> <operator>=</operator> <name><name>p_filter</name><operator>-&gt;</operator><name>p_sys</name></name> <operator>=</operator> <call><name>malloc</name><argument_list>( <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><name>filter_sys_t</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>p_sys</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>

<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_style</name></name> <operator>=</operator> <call><name>text_style_Create</name><argument_list>( <argument><expr><name>STYLE_NO_DEFAULTS</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><operator>!</operator><name><name>p_sys</name><operator>-&gt;</operator><name>p_style</name></name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>p_sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_ENOMEM</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_mutex_init</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>config_ChainParse</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><name>CFG_PREFIX</name></expr></argument>, <argument><expr><name>ppsz_filter_options</name></expr></argument>,

<argument><expr><name><name>p_filter</name><operator>-&gt;</operator><name>p_cfg</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CREATE_VAR</name><parameter_list>( <parameter><type><name>stor</name></type></parameter>, <parameter><type><name>type</name></type></parameter>, <parameter><type><name>var</name></type></parameter> )</parameter_list></cpp:macro> <cpp:value>p_sys-&gt;stor = var_CreateGet##type##Command( p_filter, var ); var_AddCallback( p_filter, var, MarqueeCallback, p_sys );</cpp:value></cpp:define>

<expr_stmt><expr><call><name>CREATE_VAR</name><argument_list>( <argument><expr><name>i_xoff</name></expr></argument>, <argument><expr><name>Integer</name></expr></argument>, <argument><expr><literal type="string">"marq-x"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>CREATE_VAR</name><argument_list>( <argument><expr><name>i_yoff</name></expr></argument>, <argument><expr><name>Integer</name></expr></argument>, <argument><expr><literal type="string">"marq-y"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_timeout</name></name> <operator>=</operator> <call><name>VLC_TICK_FROM_MS</name><argument_list>(<argument><expr><call><name>var_CreateGetIntegerCommand</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>,

<argument><expr><literal type="string">"marq-timeout"</literal></expr></argument> )</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_AddCallback</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"marq-timeout"</literal></expr></argument>, <argument><expr><name>MarqueeCallback</name></expr></argument>, <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_refresh</name></name> <operator>=</operator> <call><name>VLC_TICK_FROM_MS</name><argument_list>(<argument><expr><call><name>var_CreateGetIntegerCommand</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>,

<argument><expr><literal type="string">"marq-refresh"</literal></expr></argument> )</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_AddCallback</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"marq-refresh"</literal></expr></argument>, <argument><expr><name>MarqueeCallback</name></expr></argument>, <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>CREATE_VAR</name><argument_list>( <argument><expr><name>i_pos</name></expr></argument>, <argument><expr><name>Integer</name></expr></argument>, <argument><expr><literal type="string">"marq-position"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>CREATE_VAR</name><argument_list>( <argument><expr><name>format</name></expr></argument>, <argument><expr><name>String</name></expr></argument>, <argument><expr><literal type="string">"marq-marquee"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>filepath</name></name> <operator>=</operator> <call><name>var_InheritString</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"marq-file"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>message</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_style</name><operator>-&gt;</operator><name>i_font_alpha</name></name> <operator>=</operator> <call><name>var_CreateGetIntegerCommand</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>,

<argument><expr><literal type="string">"marq-opacity"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_AddCallback</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"marq-opacity"</literal></expr></argument>, <argument><expr><name>MarqueeCallback</name></expr></argument>, <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_style</name><operator>-&gt;</operator><name>i_features</name></name> <operator>|=</operator> <name>STYLE_HAS_FONT_ALPHA</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>CREATE_VAR</name><argument_list>( <argument><expr><name><name>p_style</name><operator>-&gt;</operator><name>i_font_color</name></name></expr></argument>, <argument><expr><name>Integer</name></expr></argument>, <argument><expr><literal type="string">"marq-color"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_style</name><operator>-&gt;</operator><name>i_features</name></name> <operator>|=</operator> <name>STYLE_HAS_FONT_COLOR</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>CREATE_VAR</name><argument_list>( <argument><expr><name><name>p_style</name><operator>-&gt;</operator><name>i_font_size</name></name></expr></argument>, <argument><expr><name>Integer</name></expr></argument>, <argument><expr><literal type="string">"marq-size"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_filter</name><operator>-&gt;</operator><name>pf_sub_source</name></name> <operator>=</operator> <name>Filter</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>last_time</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>DestroyFilter</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name> <init>= <expr><operator>(</operator><name>filter_t</name> <operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>filter_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_filter</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEL_VAR</name><parameter_list>(<parameter><type><name>var</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>var_DelCallback( p_filter, var, MarqueeCallback, p_sys ); var_Destroy( p_filter, var );</cpp:value></cpp:define>

<expr_stmt><expr><call><name>DEL_VAR</name><argument_list>( <argument><expr><literal type="string">"marq-x"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DEL_VAR</name><argument_list>( <argument><expr><literal type="string">"marq-y"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DEL_VAR</name><argument_list>( <argument><expr><literal type="string">"marq-timeout"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DEL_VAR</name><argument_list>( <argument><expr><literal type="string">"marq-refresh"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DEL_VAR</name><argument_list>( <argument><expr><literal type="string">"marq-position"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DEL_VAR</name><argument_list>( <argument><expr><literal type="string">"marq-marquee"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DEL_VAR</name><argument_list>( <argument><expr><literal type="string">"marq-opacity"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DEL_VAR</name><argument_list>( <argument><expr><literal type="string">"marq-color"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DEL_VAR</name><argument_list>( <argument><expr><literal type="string">"marq-size"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>text_style_Delete</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_style</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>format</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>filepath</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>message</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>subpicture_t</name> <modifier>*</modifier></type><name>Filter</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>date</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>filter_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_filter</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>p_spu</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>last_time</name></name> <operator>+</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_refresh</name></name> <operator>&gt;</operator> <name>date</name></expr> )</condition><block type="pseudo"><block_content>

<goto>goto <name>out</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>filepath</name></name> <operator>!=</operator> <name>NULL</name></expr> )</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>fmt</name> <init>= <expr><call><name>MarqueeReadFile</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>filepath</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>fmt</name> <operator>!=</operator> <name>NULL</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>format</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>format</name></name> <operator>=</operator> <name>fmt</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>msg</name> <init>= <expr><call><name>vlc_strftime</name><argument_list>( <argument><expr><ternary><condition><expr><name><name>p_sys</name><operator>-&gt;</operator><name>format</name></name></expr> ?</condition><then> <expr><name><name>p_sys</name><operator>-&gt;</operator><name>format</name></name></expr> </then><else>: <expr><literal type="string">""</literal></expr></else></ternary></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>unlikely</name><argument_list>( <argument><expr><name>msg</name> <operator>==</operator> <name>NULL</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>

<goto>goto <name>out</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>message</name></name> <operator>!=</operator> <name>NULL</name> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>strcmp</name><argument_list>( <argument><expr><name>msg</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>message</name></name></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>msg</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>out</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>message</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>message</name></name> <operator>=</operator> <name>msg</name></expr>;</expr_stmt>

<expr_stmt><expr><name>p_spu</name> <operator>=</operator> <call><name>filter_NewSubpicture</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name>p_spu</name></expr> )</condition><block type="pseudo"><block_content>

<goto>goto <name>out</name>;</goto></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>video_format_t</name></type> <name>vfmt</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>video_format_Init</name><argument_list>( <argument><expr><operator>&amp;</operator><name>vfmt</name></expr></argument>, <argument><expr><name>VLC_CODEC_TEXT</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vfmt</name><operator>.</operator><name>i_sar_den</name></name> <operator>=</operator> <name><name>vfmt</name><operator>.</operator><name>i_sar_num</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_spu</name><operator>-&gt;</operator><name>p_region</name></name> <operator>=</operator> <call><name>subpicture_region_New</name><argument_list>( <argument><expr><operator>&amp;</operator><name>vfmt</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_spu</name><operator>-&gt;</operator><name>p_region</name></name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>subpicture_Delete</name><argument_list>( <argument><expr><name>p_spu</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>p_spu</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<goto>goto <name>out</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>last_time</name></name> <operator>=</operator> <name>date</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_spu</name><operator>-&gt;</operator><name>p_region</name><operator>-&gt;</operator><name>p_text</name></name> <operator>=</operator> <call><name>text_segment_New</name><argument_list>( <argument><expr><name>msg</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_spu</name><operator>-&gt;</operator><name>i_start</name></name> <operator>=</operator> <name>date</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_spu</name><operator>-&gt;</operator><name>i_stop</name></name> <operator>=</operator> <ternary><condition><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_timeout</name></name> <operator>==</operator> <literal type="number">0</literal></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><name>date</name> <operator>+</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_timeout</name></name></expr></else></ternary></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_spu</name><operator>-&gt;</operator><name>b_ephemer</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_pos</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>

<block>{<block_content> 

<expr_stmt><expr><name><name>p_spu</name><operator>-&gt;</operator><name>p_region</name><operator>-&gt;</operator><name>i_align</name></name> <operator>=</operator> <name>SUBPICTURE_ALIGN_LEFT</name> <operator>|</operator> <name>SUBPICTURE_ALIGN_TOP</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_spu</name><operator>-&gt;</operator><name>b_absolute</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content> 

<expr_stmt><expr><name><name>p_spu</name><operator>-&gt;</operator><name>p_region</name><operator>-&gt;</operator><name>i_align</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_pos</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_spu</name><operator>-&gt;</operator><name>b_absolute</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name><name>p_spu</name><operator>-&gt;</operator><name>p_region</name><operator>-&gt;</operator><name>i_x</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_xoff</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_spu</name><operator>-&gt;</operator><name>p_region</name><operator>-&gt;</operator><name>i_y</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_yoff</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_spu</name><operator>-&gt;</operator><name>p_region</name><operator>-&gt;</operator><name>p_text</name><operator>-&gt;</operator><name>style</name></name> <operator>=</operator> <call><name>text_style_Duplicate</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_style</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<label><name>out</name>:</label>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>p_spu</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type><name>MarqueeReadFile</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>FILE</name> <modifier>*</modifier></type><name>stream</name> <init>= <expr><call><name>vlc_fopen</name><argument_list>( <argument><expr><name>path</name></expr></argument>, <argument><expr><literal type="string">"rt"</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>stream</name> <operator>==</operator> <name>NULL</name></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"cannot open %s: %s"</literal></expr></argument>, <argument><expr><name>path</name></expr></argument>, <argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>line</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ssize_t</name></type> <name>len</name> <init>= <macro><name>getline</name><argument_list>( <argument>&amp;line</argument>, <argument>&amp;(size_t){ <literal type="number">0</literal> }</argument>, <argument>stream</argument> )</argument_list></macro></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>len</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"cannot read %s: %s"</literal></expr></argument>, <argument><expr><name>path</name></expr></argument>, <argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>clearerr</name><argument_list>( <argument><expr><name>stream</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>line</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>fclose</name><argument_list>( <argument><expr><name>stream</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>len</name> <operator>&gt;=</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <name><name>line</name><index>[<expr><name>len</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'\n'</literal></expr> )</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>line</name><index>[<expr><operator>--</operator><name>len</name></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>line</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>MarqueeCallback</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter>, <parameter><decl><type><name>char</name> <specifier>const</specifier> <modifier>*</modifier></type><name>psz_var</name></decl></parameter>,

<parameter><decl><type><name>vlc_value_t</name></type> <name>oldval</name></decl></parameter>, <parameter><decl><type><name>vlc_value_t</name></type> <name>newval</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_data</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>filter_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><operator>(</operator><name>filter_sys_t</name> <operator>*</operator><operator>)</operator> <name>p_data</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>oldval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>p_this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>strcmp</name><argument_list>( <argument><expr><name>psz_var</name></expr></argument>, <argument><expr><literal type="string">"marq-marquee"</literal></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>format</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>format</name></name> <operator>=</operator> <call><name>strdup</name><argument_list>( <argument><expr><name><name>newval</name><operator>.</operator><name>psz_string</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if <condition>( <expr><operator>!</operator><call><name>strcmp</name><argument_list>( <argument><expr><name>psz_var</name></expr></argument>, <argument><expr><literal type="string">"marq-x"</literal></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_xoff</name></name> <operator>=</operator> <name><name>newval</name><operator>.</operator><name>i_int</name></name></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if <condition>( <expr><operator>!</operator><call><name>strcmp</name><argument_list>( <argument><expr><name>psz_var</name></expr></argument>, <argument><expr><literal type="string">"marq-y"</literal></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_yoff</name></name> <operator>=</operator> <name><name>newval</name><operator>.</operator><name>i_int</name></name></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if <condition>( <expr><operator>!</operator><call><name>strcmp</name><argument_list>( <argument><expr><name>psz_var</name></expr></argument>, <argument><expr><literal type="string">"marq-color"</literal></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_style</name><operator>-&gt;</operator><name>i_font_color</name></name> <operator>=</operator> <name><name>newval</name><operator>.</operator><name>i_int</name></name></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if <condition>( <expr><operator>!</operator><call><name>strcmp</name><argument_list>( <argument><expr><name>psz_var</name></expr></argument>, <argument><expr><literal type="string">"marq-opacity"</literal></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_style</name><operator>-&gt;</operator><name>i_font_alpha</name></name> <operator>=</operator> <name><name>newval</name><operator>.</operator><name>i_int</name></name></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if <condition>( <expr><operator>!</operator><call><name>strcmp</name><argument_list>( <argument><expr><name>psz_var</name></expr></argument>, <argument><expr><literal type="string">"marq-size"</literal></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_style</name><operator>-&gt;</operator><name>i_font_size</name></name> <operator>=</operator> <name><name>newval</name><operator>.</operator><name>i_int</name></name></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if <condition>( <expr><operator>!</operator><call><name>strcmp</name><argument_list>( <argument><expr><name>psz_var</name></expr></argument>, <argument><expr><literal type="string">"marq-timeout"</literal></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_timeout</name></name> <operator>=</operator> <call><name>VLC_TICK_FROM_MS</name><argument_list>(<argument><expr><name><name>newval</name><operator>.</operator><name>i_int</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if <condition>( <expr><operator>!</operator><call><name>strcmp</name><argument_list>( <argument><expr><name>psz_var</name></expr></argument>, <argument><expr><literal type="string">"marq-refresh"</literal></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_refresh</name></name> <operator>=</operator> <call><name>VLC_TICK_FROM_MS</name><argument_list>(<argument><expr><name><name>newval</name><operator>.</operator><name>i_int</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if <condition>( <expr><operator>!</operator><call><name>strcmp</name><argument_list>( <argument><expr><name>psz_var</name></expr></argument>, <argument><expr><literal type="string">"marq-position"</literal></expr></argument> )</argument_list></call></expr> )</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_pos</name></name> <operator>=</operator> <name><name>newval</name><operator>.</operator><name>i_int</name></name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>message</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>message</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

</block_content>}</block></function>

</unit>
