<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\packetizer\hevc_nal.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_es.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_bits.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEVC_VPS_ID_MAX</name></cpp:macro> <cpp:value>15</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEVC_SPS_ID_MAX</name></cpp:macro> <cpp:value>15</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEVC_PPS_ID_MAX</name></cpp:macro> <cpp:value>63</cpp:value></cpp:define>

<enum>enum <name>hevc_general_profile_idc_e</name>

<block>{

<decl><name>HEVC_PROFILE_IDC_NONE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>HEVC_PROFILE_IDC_MAIN</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>HEVC_PROFILE_IDC_MAIN_10</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>HEVC_PROFILE_IDC_MAIN_STILL_PICTURE</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

<decl><name>HEVC_PROFILE_IDC_REXT</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>, 

<decl><name>HEVC_PROFILE_IDC_HIGH_THROUGHPUT</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,

<decl><name>HEVC_PROFILE_IDC_MULTIVIEW_MAIN</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,

<decl><name>HEVC_PROFILE_IDC_SCALABLE_MAIN</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>,

<decl><name>HEVC_PROFILE_IDC_3D_MAIN</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,

<decl><name>HEVC_PROFILE_IDC_SCREEN_EXTENDED</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>,

<decl><name>HEVC_PROFILE_IDC_SCALABLE_REXT</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>,

}</block>;</enum>

<enum>enum <name>hevc_level_idc_e</name>

<block>{

<decl><name>HEVC_LEVEL_IDC_1</name> <init>= <expr><literal type="number">30</literal></expr></init></decl>, 

<decl><name>HEVC_LEVEL_IDC_2</name> <init>= <expr><literal type="number">60</literal></expr></init></decl>,

<decl><name>HEVC_LEVEL_IDC_2_1</name> <init>= <expr><literal type="number">63</literal></expr></init></decl>,

<decl><name>HEVC_LEVEL_IDC_3</name> <init>= <expr><literal type="number">90</literal></expr></init></decl>,

<decl><name>HEVC_LEVEL_IDC_3_1</name> <init>= <expr><literal type="number">93</literal></expr></init></decl>,

<decl><name>HEVC_LEVEL_IDC_4</name> <init>= <expr><literal type="number">120</literal></expr></init></decl>,

<decl><name>HEVC_LEVEL_IDC_4_1</name> <init>= <expr><literal type="number">123</literal></expr></init></decl>,

<decl><name>HEVC_LEVEL_IDC_5</name> <init>= <expr><literal type="number">150</literal></expr></init></decl>,

<decl><name>HEVC_LEVEL_IDC_5_1</name> <init>= <expr><literal type="number">153</literal></expr></init></decl>,

<decl><name>HEVC_LEVEL_IDC_5_2</name> <init>= <expr><literal type="number">156</literal></expr></init></decl>,

<decl><name>HEVC_LEVEL_IDC_6</name> <init>= <expr><literal type="number">180</literal></expr></init></decl>,

<decl><name>HEVC_LEVEL_IDC_6_1</name> <init>= <expr><literal type="number">183</literal></expr></init></decl>,

<decl><name>HEVC_LEVEL_IDC_6_2</name> <init>= <expr><literal type="number">186</literal></expr></init></decl>,

<decl><name>HEVC_LEVEL_IDC_8_5</name> <init>= <expr><literal type="number">255</literal></expr></init></decl>,

}</block>;</enum>

<enum>enum <name>hevc_rext_indication_e</name>

<block>{

<decl><name>HEVC_REXT_INDICATION_MONOCHROME</name> <init>= <expr><literal type="number">0x1F9</literal></expr></init></decl>,

<decl><name>HEVC_REXT_INDICATION_MONOCHROME_10</name> <init>= <expr><literal type="number">0x1B9</literal></expr></init></decl>,

<decl><name>HEVC_REXT_INDICATION_MONOCHROME_12</name> <init>= <expr><literal type="number">0x139</literal></expr></init></decl>,

<decl><name>HEVC_REXT_INDICATION_MONOCHROME_16</name> <init>= <expr><literal type="number">0x039</literal></expr></init></decl>,

<decl><name>HEVC_REXT_INDICATION_MAIN_12</name> <init>= <expr><literal type="number">0x131</literal></expr></init></decl>,

<decl><name>HEVC_REXT_INDICATION_MAIN_422_10</name> <init>= <expr><literal type="number">0x1A1</literal></expr></init></decl>,

<decl><name>HEVC_REXT_INDICATION_MAIN_422_12</name> <init>= <expr><literal type="number">0x121</literal></expr></init></decl>,

<decl><name>HEVC_REXT_INDICATION_MAIN_444</name> <init>= <expr><literal type="number">0x1C1</literal></expr></init></decl>,

<decl><name>HEVC_REXT_INDICATION_MAIN_444_10</name> <init>= <expr><literal type="number">0x181</literal></expr></init></decl>,

<decl><name>HEVC_REXT_INDICATION_MAIN_444_12</name> <init>= <expr><literal type="number">0x101</literal></expr></init></decl>,

<decl><name>HEVC_REXT_INDICATION_MAIN_INTRA</name> <init>= <expr><literal type="number">0x1F4</literal></expr></init></decl>, 

<decl><name>HEVC_REXT_INDICATION_MAIN_10_INTRA</name> <init>= <expr><literal type="number">0x1B4</literal></expr></init></decl>,

<decl><name>HEVC_REXT_INDICATION_MAIN_12_INTRA</name> <init>= <expr><literal type="number">0x134</literal></expr></init></decl>,

<decl><name>HEVC_REXT_INDICATION_MAIN_422_10_INTRA</name> <init>= <expr><literal type="number">0x1A4</literal></expr></init></decl>,

<decl><name>HEVC_REXT_INDICATION_MAIN_422_12_INTRA</name> <init>= <expr><literal type="number">0x124</literal></expr></init></decl>,

<decl><name>HEVC_REXT_INDICATION_MAIN_444_INTRA</name> <init>= <expr><literal type="number">0x1C4</literal></expr></init></decl>,

<decl><name>HEVC_REXT_INDICATION_MAIN_444_10_INTRA</name> <init>= <expr><literal type="number">0x184</literal></expr></init></decl>,

<decl><name>HEVC_REXT_INDICATION_MAIN_444_12_INTRA</name> <init>= <expr><literal type="number">0x104</literal></expr></init></decl>,

<decl><name>HEVC_REXT_INDICATION_MAIN_444_16_INTRA</name> <init>= <expr><literal type="number">0x004</literal></expr></init></decl>,

<decl><name>HEVC_REXT_INDICATION_MAIN_444_STILL_PICTURE</name> <init>= <expr><literal type="number">0x1C6</literal></expr></init></decl>,

<decl><name>HEVC_REXT_INDICATION_MAIN_444_16_STILL_PICTURE</name> <init>= <expr><literal type="number">0x006</literal></expr></init></decl>,

}</block>;</enum>

<enum>enum <name>hevc_high_throughput_indication_e</name>

<block>{

<decl><name>HEVC_HIGH_THROUGHPUT_INDICATION_444</name> <init>= <expr><literal type="number">0x3C1</literal></expr></init></decl>,

<decl><name>HEVC_HIGH_THROUGHPUT_INDICATION_444_10</name> <init>= <expr><literal type="number">0x381</literal></expr></init></decl>,

<decl><name>HEVC_HIGH_THROUGHPUT_INDICATION_444_14</name> <init>= <expr><literal type="number">0x201</literal></expr></init></decl>,

<decl><name>HEVC_HIGH_THROUGHPUT_INDICATION_444_16_INTRA</name> <init>= <expr><literal type="number">0x002</literal></expr></init></decl>, 

}</block>;</enum>

<enum>enum <name>hevc_screen_extended_indication_e</name>

<block>{

<decl><name>HEVC_SCREEN_EXTENDED_INDICATION_MAIN</name> <init>= <expr><literal type="number">0x3F1</literal></expr></init></decl>,

<decl><name>HEVC_SCREEN_EXTENDED_INDICATION_MAIN_10</name> <init>= <expr><literal type="number">0x3B1</literal></expr></init></decl>,

<decl><name>HEVC_SCREEN_EXTENDED_INDICATION_MAIN_444</name> <init>= <expr><literal type="number">0x3C1</literal></expr></init></decl>,

<decl><name>HEVC_SCREEN_EXTENDED_INDICATION_MAIN_444_10</name> <init>= <expr><literal type="number">0x381</literal></expr></init></decl>,

<decl><name>HEVC_SCREEN_EXTENDED_INDICATION_HIGH_THROUGHPUT_444_14</name> <init>= <expr><literal type="number">0x201</literal></expr></init></decl>,

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEVC_INDICATION_SHIFT</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MKPROF</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((HEVC_##a##_INDICATION_##b &lt;&lt; HEVC_INDICATION_SHIFT) | HEVC_PROFILE_IDC_##a)</cpp:value></cpp:define>

<enum>enum <name>vlc_hevc_profile_e</name>

<block>{

<decl><name>VLC_HEVC_PROFILE_NONE</name> <init>= <expr><name>HEVC_PROFILE_IDC_NONE</name></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_MAIN</name> <init>= <expr><name>HEVC_PROFILE_IDC_MAIN</name></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_MAIN_10</name> <init>= <expr><name>HEVC_PROFILE_IDC_MAIN_10</name></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_MAIN_STILL_PICTURE</name> <init>= <expr><name>HEVC_PROFILE_IDC_MAIN_STILL_PICTURE</name></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_MONOCHROME</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>REXT</name></expr></argument>,<argument><expr><name>MONOCHROME</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_MONOCHROME_10</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>REXT</name></expr></argument>,<argument><expr><name>MONOCHROME_10</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_MONOCHROME_12</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>REXT</name></expr></argument>,<argument><expr><name>MONOCHROME_12</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_MONOCHROME_16</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>REXT</name></expr></argument>,<argument><expr><name>MONOCHROME_16</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_MAIN_12</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>REXT</name></expr></argument>,<argument><expr><name>MAIN_12</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_MAIN_422_10</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>REXT</name></expr></argument>,<argument><expr><name>MAIN_422_10</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_MAIN_422_12</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>REXT</name></expr></argument>,<argument><expr><name>MAIN_422_12</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_MAIN_444</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>REXT</name></expr></argument>,<argument><expr><name>MAIN_444</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_MAIN_444_10</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>REXT</name></expr></argument>,<argument><expr><name>MAIN_444_10</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_MAIN_444_12</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>REXT</name></expr></argument>,<argument><expr><name>MAIN_444_12</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_MAIN_INTRA</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>REXT</name></expr></argument>,<argument><expr><name>MAIN_INTRA</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_MAIN_10_INTRA</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>REXT</name></expr></argument>,<argument><expr><name>MAIN_10_INTRA</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_MAIN_12_INTRA</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>REXT</name></expr></argument>,<argument><expr><name>MAIN_12_INTRA</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_MAIN_422_10_INTRA</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>REXT</name></expr></argument>,<argument><expr><name>MAIN_422_10_INTRA</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_MAIN_422_12_INTRA</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>REXT</name></expr></argument>,<argument><expr><name>MAIN_422_12_INTRA</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_MAIN_444_INTRA</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>REXT</name></expr></argument>,<argument><expr><name>MAIN_444_INTRA</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_MAIN_444_10_INTRA</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>REXT</name></expr></argument>,<argument><expr><name>MAIN_444_10_INTRA</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_MAIN_444_12_INTRA</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>REXT</name></expr></argument>,<argument><expr><name>MAIN_444_12_INTRA</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_MAIN_444_16_INTRA</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>REXT</name></expr></argument>,<argument><expr><name>MAIN_444_16_INTRA</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_MAIN_444_STILL_PICTURE</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>REXT</name></expr></argument>,<argument><expr><name>MAIN_444_STILL_PICTURE</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_MAIN_444_16_STILL_PICTURE</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>REXT</name></expr></argument>,<argument><expr><name>MAIN_444_16_STILL_PICTURE</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_HIGH_THROUGHPUT_444</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>HIGH_THROUGHPUT</name></expr></argument>,<argument><expr><literal type="number">444</literal></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_HIGH_THROUGHPUT_444_10</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>HIGH_THROUGHPUT</name></expr></argument>,<argument><expr><literal type="number">444_10</literal></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_HIGH_THROUGHPUT_444_14</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>HIGH_THROUGHPUT</name></expr></argument>,<argument><expr><literal type="number">444_14</literal></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_HIGH_THROUGHPUT_444_16_INTRA</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>HIGH_THROUGHPUT</name></expr></argument>,<argument><expr><literal type="number">444_16_INTRA</literal></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_MULTIVIEW_MAIN</name> <init>= <expr><name>HEVC_PROFILE_IDC_MULTIVIEW_MAIN</name></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_SCALABLE_MAIN</name> <init>= <expr><name>HEVC_PROFILE_IDC_SCALABLE_MAIN</name></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_3D_MAIN</name> <init>= <expr><name>HEVC_PROFILE_IDC_3D_MAIN</name></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_SCREEN_EXTENDED_MAIN</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>SCREEN_EXTENDED</name></expr></argument>,<argument><expr><name>MAIN</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_SCREEN_EXTENDED_MAIN_10</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>SCREEN_EXTENDED</name></expr></argument>,<argument><expr><name>MAIN_10</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_SCREEN_EXTENDED_MAIN_444</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>SCREEN_EXTENDED</name></expr></argument>,<argument><expr><name>MAIN_444</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_SCREEN_EXTENDED_MAIN_444_10</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>SCREEN_EXTENDED</name></expr></argument>,<argument><expr><name>MAIN_444_10</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_SCREEN_EXTENDED_HIGH_THROUGHPUT_444_14</name> <init>= <expr><call><name>MKPROF</name><argument_list>(<argument><expr><name>SCREEN_EXTENDED</name></expr></argument>,<argument><expr><name>HIGH_THROUGHPUT_444_14</name></expr></argument>)</argument_list></call></expr></init></decl>,

<decl><name>VLC_HEVC_PROFILE_SCALABLE_REXT</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>,

}</block>;</enum>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>MKPROF</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vlc_hevc_profile_is_Intra</name><parameter_list>(<parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(p &amp;&amp; (1 &lt;&lt; (2+HEVC_INDICATION_SHIFT)))</cpp:value></cpp:define>

<enum>enum <name>hevc_nal_unit_type_e</name>

<block>{

<decl><name>HEVC_NAL_TRAIL_N</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, 

<decl><name>HEVC_NAL_TRAIL_R</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>, 

<decl><name>HEVC_NAL_TSA_N</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>, 

<decl><name>HEVC_NAL_TSA_R</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>, 

<decl><name>HEVC_NAL_STSA_N</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>, 

<decl><name>HEVC_NAL_STSA_R</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>, 

<decl><name>HEVC_NAL_RADL_N</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>, 

<decl><name>HEVC_NAL_RADL_R</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>, 

<decl><name>HEVC_NAL_RASL_N</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>, 

<decl><name>HEVC_NAL_RASL_R</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>, 

<decl><name>HEVC_NAL_RSV_VCL_N10</name><init>= <expr><literal type="number">10</literal></expr></init></decl>,

<decl><name>HEVC_NAL_RSV_VCL_N12</name><init>= <expr><literal type="number">12</literal></expr></init></decl>,

<decl><name>HEVC_NAL_RSV_VCL_N14</name><init>= <expr><literal type="number">14</literal></expr></init></decl>,

<decl><name>HEVC_NAL_BLA_W_LP</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>, 

<decl><name>HEVC_NAL_BLA_W_RADL</name> <init>= <expr><literal type="number">17</literal></expr></init></decl>, 

<decl><name>HEVC_NAL_BLA_N_LP</name> <init>= <expr><literal type="number">18</literal></expr></init></decl>, 

<decl><name>HEVC_NAL_IDR_W_RADL</name> <init>= <expr><literal type="number">19</literal></expr></init></decl>, 

<decl><name>HEVC_NAL_IDR_N_LP</name> <init>= <expr><literal type="number">20</literal></expr></init></decl>, 

<decl><name>HEVC_NAL_CRA</name> <init>= <expr><literal type="number">21</literal></expr></init></decl>, 

<decl><name>HEVC_NAL_IRAP_VCL22</name> <init>= <expr><literal type="number">22</literal></expr></init></decl>, 

<decl><name>HEVC_NAL_IRAP_VCL23</name> <init>= <expr><literal type="number">23</literal></expr></init></decl>,

<decl><name>HEVC_NAL_VPS</name> <init>= <expr><literal type="number">32</literal></expr></init></decl>,

<decl><name>HEVC_NAL_SPS</name> <init>= <expr><literal type="number">33</literal></expr></init></decl>,

<decl><name>HEVC_NAL_PPS</name> <init>= <expr><literal type="number">34</literal></expr></init></decl>,

<decl><name>HEVC_NAL_AUD</name> <init>= <expr><literal type="number">35</literal></expr></init></decl>, 

<decl><name>HEVC_NAL_EOS</name> <init>= <expr><literal type="number">36</literal></expr></init></decl>, 

<decl><name>HEVC_NAL_EOB</name> <init>= <expr><literal type="number">37</literal></expr></init></decl>, 

<decl><name>HEVC_NAL_FD</name> <init>= <expr><literal type="number">38</literal></expr></init></decl>, 

<decl><name>HEVC_NAL_PREF_SEI</name> <init>= <expr><literal type="number">39</literal></expr></init></decl>, 

<decl><name>HEVC_NAL_SUFF_SEI</name> <init>= <expr><literal type="number">40</literal></expr></init></decl>, 

<decl><name>HEVC_NAL_RSV_NVCL41</name> <init>= <expr><literal type="number">41</literal></expr></init></decl>, 

<decl><name>HEVC_NAL_RSV_NVCL44</name> <init>= <expr><literal type="number">44</literal></expr></init></decl>,

<decl><name>HEVC_NAL_RSV_NVCL45</name> <init>= <expr><literal type="number">45</literal></expr></init></decl>,

<decl><name>HEVC_NAL_RSV_NVCL47</name> <init>= <expr><literal type="number">47</literal></expr></init></decl>,

<decl><name>HEVC_NAL_UNSPEC48</name> <init>= <expr><literal type="number">48</literal></expr></init></decl>, 

<decl><name>HEVC_NAL_UNSPEC55</name> <init>= <expr><literal type="number">55</literal></expr></init></decl>,

<decl><name>HEVC_NAL_UNSPEC56</name> <init>= <expr><literal type="number">56</literal></expr></init></decl>,

<decl><name>HEVC_NAL_UNSPEC63</name> <init>= <expr><literal type="number">63</literal></expr></init></decl>,

<decl><name>HEVC_NAL_UNKNOWN</name></decl>

}</block>;</enum>

<enum>enum <name>hevc_slice_type_e</name>

<block>{

<decl><name>HEVC_SLICE_TYPE_B</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>HEVC_SLICE_TYPE_P</name></decl>,

<decl><name>HEVC_SLICE_TYPE_I</name></decl>

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEVC_MIN_HVCC_SIZE</name></cpp:macro> <cpp:value>23</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type> <name>hevc_ishvcC</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_buf</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>i_buf</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<return>return <expr><operator>(</operator> <name>i_buf</name> <operator>&gt;=</operator> <name>HEVC_MIN_HVCC_SIZE</name> <operator>&amp;&amp;</operator>

<name><name>p_buf</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>!=</operator> <literal type="number">0x00</literal>

<operator>)</operator></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>uint8_t</name></type> <name>hevc_getNALLengthSize</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_hvcC</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<return>return <expr><operator>(</operator><name><name>p_hvcC</name><index>[<expr><literal type="number">21</literal></expr>]</index></name> <operator>&amp;</operator> <literal type="number">0x03</literal><operator>)</operator> <operator>+</operator> <literal type="number">1</literal></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>uint8_t</name></type> <name>hevc_getNALType</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_buf</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<return>return <expr><operator>(</operator><operator>(</operator><name><name>p_buf</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&amp;</operator> <literal type="number">0x7E</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>uint8_t</name></type> <name>hevc_getNALLayer</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_buf</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<return>return <expr><operator>(</operator><operator>(</operator><name><name>p_buf</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&amp;</operator> <literal type="number">0x01</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><name><name>p_buf</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">3</literal><operator>)</operator></expr>;</return>

</block_content>}</block></function>

<typedef>typedef <type><name><name>struct</name> <name>hevc_video_parameter_set_t</name></name></type> <name>hevc_video_parameter_set_t</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>hevc_sequence_parameter_set_t</name></name></type> <name>hevc_sequence_parameter_set_t</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>hevc_picture_parameter_set_t</name></name></type> <name>hevc_picture_parameter_set_t</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>hevc_slice_segment_header_t</name></name></type> <name>hevc_slice_segment_header_t</name>;</typedef>

<function_decl><type><name>hevc_video_parameter_set_t</name> <modifier>*</modifier></type> <name>hevc_decode_vps</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>, <parameter><decl><type><name>bool</name></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>hevc_sequence_parameter_set_t</name> <modifier>*</modifier></type> <name>hevc_decode_sps</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>, <parameter><decl><type><name>bool</name></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>hevc_picture_parameter_set_t</name> <modifier>*</modifier></type> <name>hevc_decode_pps</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>, <parameter><decl><type><name>bool</name></type></decl></parameter> )</parameter_list>;</function_decl>

<typedef>typedef <function_decl><type><name>void</name></type>(<modifier>*</modifier><name>pf_get_matchedxps</name>)<parameter_list>(<parameter><decl><type><name>uint8_t</name></type> <name>i_pps_id</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>priv</name></decl></parameter>,

<parameter><decl><type><name>hevc_picture_parameter_set_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><name>hevc_sequence_parameter_set_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><name>hevc_video_parameter_set_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><name>hevc_slice_segment_header_t</name> <modifier>*</modifier></type> <name>hevc_decode_slice_header</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>, <parameter><decl><type><name>bool</name></type></decl></parameter>,

<parameter><decl><type><name>pf_get_matchedxps</name></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>priv</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>hevc_rbsp_release_vps</name><parameter_list>( <parameter><decl><type><name>hevc_video_parameter_set_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>hevc_rbsp_release_sps</name><parameter_list>( <parameter><decl><type><name>hevc_sequence_parameter_set_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>hevc_rbsp_release_pps</name><parameter_list>( <parameter><decl><type><name>hevc_picture_parameter_set_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>hevc_rbsp_release_slice_header</name><parameter_list>( <parameter><decl><type><name>hevc_slice_segment_header_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>uint8_t</name></type> <name>hevc_get_sps_vps_id</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>hevc_sequence_parameter_set_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>uint8_t</name></type> <name>hevc_get_pps_sps_id</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>hevc_picture_parameter_set_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>uint8_t</name></type> <name>hevc_get_slice_pps_id</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>hevc_slice_segment_header_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> <name>hevc_get_xps_id</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_nalbuf</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>i_nalbuf</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>pi_id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> <name>hevc_get_sps_profile_tier_level</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>hevc_sequence_parameter_set_t</name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>pi_profile</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>pi_level</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>vlc_hevc_profile_e</name></name></type>

<name>hevc_get_vlc_profile</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>hevc_sequence_parameter_set_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> <name>hevc_get_picture_size</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>hevc_sequence_parameter_set_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>p_w</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>p_h</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>p_vw</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>p_vh</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> <name>hevc_get_frame_rate</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>hevc_sequence_parameter_set_t</name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>hevc_video_parameter_set_t</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>pi_num</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>pi_den</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> <name>hevc_get_aspect_ratio</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>hevc_sequence_parameter_set_t</name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>pi_num</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>pi_den</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> <name>hevc_get_chroma_luma</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>hevc_sequence_parameter_set_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>pi_chroma_format</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>pi_depth_luma</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>pi_depth_chroma</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> <name>hevc_get_colorimetry</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>hevc_sequence_parameter_set_t</name> <modifier>*</modifier></type><name>p_sps</name></decl></parameter>,

<parameter><decl><type><name>video_color_primaries_t</name> <modifier>*</modifier></type><name>p_primaries</name></decl></parameter>,

<parameter><decl><type><name>video_transfer_func_t</name> <modifier>*</modifier></type><name>p_transfer</name></decl></parameter>,

<parameter><decl><type><name>video_color_space_t</name> <modifier>*</modifier></type><name>p_colorspace</name></decl></parameter>,

<parameter><decl><type><name>video_color_range_t</name> <modifier>*</modifier></type><name>p_full_range</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>uint8_t</name></type> <name>hevc_get_max_num_reorder</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>hevc_video_parameter_set_t</name> <modifier>*</modifier></type><name>p_vps</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> <name>hevc_get_slice_type</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>hevc_slice_segment_header_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>hevc_slice_type_e</name></name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> <name>hevc_get_profile_level</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type><name>p_fmt</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>pi_profile</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>pi_level</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>pi_nal_length_size</name></decl></parameter>)</parameter_list>;</function_decl>

<struct>struct <name>hevc_dcr_values</name>

<block>{

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>general_configuration</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_numTemporalLayer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_chroma_idc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_bit_depth_luma_minus8</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_bit_depth_chroma_minus8</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_temporalIdNested</name></decl>;</decl_stmt>

}</block>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEVC_DCR_VPS_COUNT</name></cpp:macro> <cpp:value>(HEVC_VPS_ID_MAX + 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEVC_DCR_SPS_COUNT</name></cpp:macro> <cpp:value>(HEVC_SPS_ID_MAX + 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEVC_DCR_PPS_COUNT</name></cpp:macro> <cpp:value>(HEVC_PPS_ID_MAX + 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEVC_DCR_SEI_COUNT</name></cpp:macro> <cpp:value>(16)</cpp:value></cpp:define>

<struct>struct <name>hevc_dcr_params</name>

<block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name><name>p_vps</name><index>[<expr><name>HEVC_DCR_VPS_COUNT</name></expr>]</index></name></decl>,

<decl><type ref="prev"><modifier>*</modifier></type><name><name>p_sps</name><index>[<expr><name>HEVC_DCR_SPS_COUNT</name></expr>]</index></name></decl>,

<decl><type ref="prev"><modifier>*</modifier></type><name><name>p_pps</name><index>[<expr><name>HEVC_DCR_VPS_COUNT</name></expr>]</index></name></decl>,

<decl><type ref="prev"><modifier>*</modifier></type><name><name>p_seipref</name><index>[<expr><name>HEVC_DCR_SEI_COUNT</name></expr>]</index></name></decl>,

<decl><type ref="prev"><modifier>*</modifier></type><name><name>p_seisuff</name><index>[<expr><name>HEVC_DCR_SEI_COUNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>rgi_vps</name><index>[<expr><name>HEVC_DCR_VPS_COUNT</name></expr>]</index></name></decl>,

<decl><type ref="prev"/><name><name>rgi_sps</name><index>[<expr><name>HEVC_DCR_SPS_COUNT</name></expr>]</index></name></decl>,

<decl><type ref="prev"/><name><name>rgi_pps</name><index>[<expr><name>HEVC_DCR_PPS_COUNT</name></expr>]</index></name></decl>,

<decl><type ref="prev"/><name><name>rgi_seipref</name><index>[<expr><name>HEVC_DCR_SEI_COUNT</name></expr>]</index></name></decl>,

<decl><type ref="prev"/><name><name>rgi_seisuff</name><index>[<expr><name>HEVC_DCR_SEI_COUNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_vps_count</name></decl>, <decl><type ref="prev"/><name>i_sps_count</name></decl>, <decl><type ref="prev"/><name>i_pps_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_seipref_count</name></decl>, <decl><type ref="prev"/><name>i_seisuff_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>hevc_dcr_values</name></name> <modifier>*</modifier></type><name>p_values</name></decl>;</decl_stmt>

}</block>;</struct>

<function_decl><type><name>uint8_t</name> <modifier>*</modifier></type> <name>hevc_create_dcr</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>hevc_dcr_params</name></name> <modifier>*</modifier></type><name>p_params</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name></type> <name>i_nal_length_size</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>b_completeness</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>pi_size</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>uint8_t</name> <modifier>*</modifier></type> <name>hevc_hvcC_to_AnnexB_NAL</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_buf</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>i_buf</name></decl></parameter>,

<parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>pi_res</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>pi_nal_length_size</name></decl></parameter> )</parameter_list>;</function_decl>

<typedef>typedef <type><struct>struct

<block>{

<struct>struct

<block>{

<decl_stmt><decl><type><name>int</name></type> <name>lsb</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>msb</name></decl>;</decl_stmt>

}</block> <decl><name>prevTid0PicOrderCnt</name></decl>;</struct>

<decl_stmt><decl><type><name>bool</name></type> <name>HandleCraAsBlaFlag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>first_picture</name></decl>;</decl_stmt> 

}</block></struct></type> <name>hevc_poc_ctx_t</name>;</typedef>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>hevc_poc_cxt_init</name><parameter_list>( <parameter><decl><type><name>hevc_poc_ctx_t</name> <modifier>*</modifier></type><name>p_ctx</name></decl></parameter> )</parameter_list>

<block>{<block_content>

<expr_stmt><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>prevTid0PicOrderCnt</name><operator>.</operator><name>lsb</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>prevTid0PicOrderCnt</name><operator>.</operator><name>msb</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_ctx</name><operator>-&gt;</operator><name>first_picture</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function_decl><type><name>int</name></type> <name>hevc_compute_picture_order_count</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>hevc_sequence_parameter_set_t</name> <modifier>*</modifier></type><name>p_sps</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>hevc_slice_segment_header_t</name> <modifier>*</modifier></type><name>slice</name></decl></parameter>,

<parameter><decl><type><name>hevc_poc_ctx_t</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter> )</parameter_list>;</function_decl>

<typedef>typedef <type><name><name>struct</name> <name>hevc_sei_pic_timing_t</name></name></type> <name>hevc_sei_pic_timing_t</name>;</typedef>

<function_decl><type><name>hevc_sei_pic_timing_t</name> <modifier>*</modifier></type> <name>hevc_decode_sei_pic_timing</name><parameter_list>( <parameter><decl><type><name>bs_t</name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>hevc_sequence_parameter_set_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>hevc_release_sei_pic_timing</name><parameter_list>( <parameter><decl><type><name>hevc_sei_pic_timing_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>uint8_t</name></type> <name>hevc_get_num_clock_ts</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>hevc_sequence_parameter_set_t</name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>hevc_sei_pic_timing_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> <name>hevc_frame_is_progressive</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>hevc_sequence_parameter_set_t</name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>hevc_sei_pic_timing_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

</unit>
