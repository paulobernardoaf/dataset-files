<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\gui\skins2\src\ft2_err.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ft2build.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ft2_err.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FT_NOERRORDEF_</name><parameter_list>( <parameter><type><name>sym</name></type></parameter>, <parameter><type><name>num</name></type></parameter>, <parameter><type><name>str</name></type></parameter> )</parameter_list></cpp:macro> <cpp:value>num,</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FT_ERRORDEF_</name><parameter_list>( <parameter><type><name>sym</name></type></parameter>, <parameter><type><name>num</name></type></parameter>, <parameter><type><name>str</name></type></parameter> )</parameter_list></cpp:macro> <cpp:value>num,</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>short</name></type> <name><name>ft2_errorindex</name><index>[]</index></name> <init>=

<expr><block>{

<cpp:include>#<cpp:directive>include</cpp:directive> FT_ERROR_DEFINITIONS_H</cpp:include>

}</block></expr></init></decl>;</decl_stmt>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>FT_NOERRORDEF_</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>FT_ERRORDEF_</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FT_NOERRORDEF_</name><parameter_list>( <parameter><type><name>sym</name></type></parameter>, <parameter><type><name>num</name></type></parameter>, <parameter><type><name>str</name></type></parameter> )</parameter_list></cpp:macro> <cpp:value>str,</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FT_ERRORDEF_</name><parameter_list>( <parameter><type><name>sym</name></type></parameter>, <parameter><type><name>num</name></type></parameter>, <parameter><type><name>str</name></type></parameter> )</parameter_list></cpp:macro> <cpp:value>str,</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>ft2_errorstrings</name><index>[]</index></name> <init>=

<expr><block>{

<cpp:include>#<cpp:directive>include</cpp:directive> FT_ERROR_DEFINITIONS_H</cpp:include>

}</block></expr></init></decl>;</decl_stmt>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>FT_NOERRORDEF_</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>FT_ERRORDEF_</name></cpp:undef>

<enum>enum <block>{ <decl><name>ft2_num_errors</name> <init>= <expr><sizeof>sizeof<argument_list>(<argument><expr><name>ft2_errorindex</name></expr></argument>)</argument_list></sizeof><operator>/</operator>sizeof<operator>(</operator><operator>*</operator><name>ft2_errorindex</name><operator>)</operator></expr></init></decl> }</block>;</enum>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ft2_strerror</name><parameter_list>(<parameter><decl><type><name>unsigned</name></type> <name>err</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name></type> <name>i</name></decl>;</decl_stmt>

<for>for<control>( <init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>ft2_num_errors</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr> )</control><block type="pseudo"><block_content>

<if_stmt><if>if<condition>( <expr><name>err</name><operator>==</operator><name><name>ft2_errorindex</name><index>[<expr><name>i</name></expr>]</index></name></expr> )</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt></block_content></block></for>

<return>return <expr><ternary><condition><expr><name>i</name><operator>&lt;</operator><name>ft2_num_errors</name></expr> ?</condition><then> <expr><name><name>ft2_errorstrings</name><index>[<expr><name>i</name></expr>]</index></name></expr> </then><else>:

<expr><literal type="string">"An error freetype2 neglected to specify"</literal></expr></else></ternary></expr>;</return>

</block_content>}</block></function>

</unit>
