<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\gui\macosx\windows\extensions\VLCExtensionsManager.h"><cpp:empty>#import &lt;Cocoa/Cocoa.h&gt;</cpp:empty>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:empty>#import "VLCExtensionsDialogProvider.h"</cpp:empty>

@<decl_stmt><decl><type><name>interface</name></type> <name>VLCExtensionsManager</name> <range>: <expr><name>NSObject</name>

<operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>buildMenu</name><operator>:</operator><operator>(</operator><name>NSMenu</name> <operator>*</operator><operator>)</operator><name>extMenu</name></expr></range></decl>;</decl_stmt>

<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>BOOL</name><operator>)</operator><name>loadExtensions</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>unloadExtensions</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>reloadExtensions</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>triggerMenu</name><operator>:</operator><operator>(</operator><name>id</name><operator>)</operator><name>sender</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>playingChanged</name><operator>:</operator><operator>(</operator><name>int</name><operator>)</operator><name>state</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>metaChanged</name><operator>:</operator><operator>(</operator><name>input_item_t</name> <operator>*</operator><operator>)</operator><name>p_input</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>BOOL</name><operator>)</operator><name>isLoaded</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>BOOL</name><operator>)</operator><name>cannotLoad</name></expr>;</expr_stmt>

@<macro><name>property</name> <argument_list>(<argument>readonly</argument>)</argument_list></macro> <decl_stmt><decl><type><name>BOOL</name></type> <name>isUnloading</name></decl>;</decl_stmt>

@<expr><name>end</name></expr>

</unit>
