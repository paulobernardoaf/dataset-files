<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\modules\lua\extension.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_extensions.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_arrays.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_dialog.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WATCH_TIMER_PERIOD</name></cpp:macro> <cpp:value>VLC_TICK_FROM_SEC(10)</cpp:value></cpp:define> 

<typedef>typedef <type><enum>enum

<block>{

<decl><name>CMD_ACTIVATE</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>CMD_DEACTIVATE</name></decl>,

<decl><name>CMD_TRIGGERMENU</name></decl>, 

<decl><name>CMD_CLICK</name></decl>, 

<decl><name>CMD_CLOSE</name></decl>,

<decl><name>CMD_SET_INPUT</name></decl>, 

<decl><name>CMD_UPDATE_META</name></decl>, 

<decl><name>CMD_PLAYING_CHANGED</name></decl> 

}</block></enum></type> <name>command_type_e</name>;</typedef>

<typedef>typedef <type><enum>enum

<block>{

<decl><name>LUA_END</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>LUA_NUM</name></decl>,

<decl><name>LUA_TEXT</name></decl>

}</block></enum></type> <name>lua_datatype_e</name>;</typedef>

<struct>struct <name>extension_sys_t</name>

<block>{

<decl_stmt><decl><type><name>int</name></type> <name>i_capabilities</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlclua_dtable_t</name></type> <name>dtable</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_thread_t</name></type> <name>thread</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>command_lock</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>running_lock</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_cond_t</name></type> <name>wait</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>input_item_t</name></name> <modifier>*</modifier></type><name>p_item</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>extensions_manager_t</name> <modifier>*</modifier></type><name>p_mgr</name></decl>;</decl_stmt> 

<struct>struct <name>command_t</name>

<block>{

<decl_stmt><decl><type><name>command_type_e</name></type> <name>i_command</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name><name>data</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name><name>struct</name> <name>command_t</name></name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt> 

}</block> <decl><modifier>*</modifier><name>command</name></decl>;</struct>

<decl_stmt><decl><type><name>vlc_dialog_id</name> <modifier>*</modifier></type><name>p_progress_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_timer_t</name></type> <name>timer</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>bool</name></type> <name>b_exiting</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_thread_running</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>bool</name></type> <name>b_activated</name></decl>;</decl_stmt> 

}</block>;</struct>

<function_decl><type><name>int</name></type> <name>Activate</name><parameter_list>( <parameter><decl><type><name>extensions_manager_t</name> <modifier>*</modifier></type><name>p_mgr</name></decl></parameter>, <parameter><decl><type><name>extension_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>Deactivate</name><parameter_list>( <parameter><decl><type><name>extensions_manager_t</name> <modifier>*</modifier></type><name>p_mgr</name></decl></parameter>, <parameter><decl><type><name>extension_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> <name>QueueDeactivateCommand</name><parameter_list>( <parameter><decl><type><name>extension_t</name> <modifier>*</modifier></type><name>p_ext</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>KillExtension</name><parameter_list>( <parameter><decl><type><name>extensions_manager_t</name> <modifier>*</modifier></type><name>p_mgr</name></decl></parameter>, <parameter><decl><type><name>extension_t</name> <modifier>*</modifier></type><name>p_ext</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>PushCommand__</name><parameter_list>( <parameter><decl><type><name>extension_t</name> <modifier>*</modifier></type><name>ext</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>unique</name></decl></parameter>, <parameter><decl><type><name>command_type_e</name></type> <name>cmd</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>options</name></decl></parameter> )</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>PushCommand</name><parameter_list>( <parameter><decl><type><name>extension_t</name> <modifier>*</modifier></type><name>ext</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>cmd</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>va_list</name></type> <name>args</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>va_start</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>cmd</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name> <init>= <expr><call><name>PushCommand__</name><argument_list>( <argument><expr><name>ext</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>cmd</name></expr></argument>, <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>va_end</name><argument_list>( <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>i_ret</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>PushCommandUnique</name><parameter_list>( <parameter><decl><type><name>extension_t</name> <modifier>*</modifier></type><name>ext</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>cmd</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter> )</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>va_list</name></type> <name>args</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>va_start</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>cmd</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name> <init>= <expr><call><name>PushCommand__</name><argument_list>( <argument><expr><name>ext</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>cmd</name></expr></argument>, <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>va_end</name><argument_list>( <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>i_ret</name></expr>;</return>

</block_content>}</block></function>

<function_decl><type><name>void</name></type> <name>vlclua_extension_set</name><parameter_list>( <parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter>, <parameter><decl><type><name>extension_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>extension_t</name> <modifier>*</modifier></type><name>vlclua_extension_get</name><parameter_list>( <parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>lua_ExtensionActivate</name><parameter_list>( <parameter><decl><type><name>extensions_manager_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>extension_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>lua_ExtensionDeactivate</name><parameter_list>( <parameter><decl><type><name>extensions_manager_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>extension_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>lua_ExecuteFunctionVa</name><parameter_list>( <parameter><decl><type><name>extensions_manager_t</name> <modifier>*</modifier></type><name>p_mgr</name></decl></parameter>, <parameter><decl><type><name>extension_t</name> <modifier>*</modifier></type><name>p_ext</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_function</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>args</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>lua_ExecuteFunction</name><parameter_list>( <parameter><decl><type><name>extensions_manager_t</name> <modifier>*</modifier></type><name>p_mgr</name></decl></parameter>, <parameter><decl><type><name>extension_t</name> <modifier>*</modifier></type><name>p_ext</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_function</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>lua_ExtensionWidgetClick</name><parameter_list>( <parameter><decl><type><name>extensions_manager_t</name> <modifier>*</modifier></type><name>p_mgr</name></decl></parameter>,

<parameter><decl><type><name>extension_t</name> <modifier>*</modifier></type><name>p_ext</name></decl></parameter>,

<parameter><decl><type><name>extension_widget_t</name> <modifier>*</modifier></type><name>p_widget</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>lua_ExtensionTriggerMenu</name><parameter_list>( <parameter><decl><type><name>extensions_manager_t</name> <modifier>*</modifier></type><name>p_mgr</name></decl></parameter>,

<parameter><decl><type><name>extension_t</name> <modifier>*</modifier></type><name>p_ext</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>id</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>lua_DialogFlush</name><parameter_list>( <parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter> )</parameter_list>;</function_decl>

</unit>
