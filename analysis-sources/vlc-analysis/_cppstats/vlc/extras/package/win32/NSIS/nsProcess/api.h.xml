<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats\vlc\extras\package\win32\NSIS\nsProcess\api.h"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NSISPIAPIVER_1_0</name></cpp:macro> <cpp:value>0x00010000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NSISPIAPIVER_CURR</name></cpp:macro> <cpp:value>NSISPIAPIVER_1_0</cpp:value></cpp:define>

<enum>enum <name>NSPIM</name> 

<block>{

<decl><name>NSPIM_UNLOAD</name></decl>, 

<decl><name>NSPIM_GUIUNLOAD</name></decl>, 

}</block>;</enum>

<typedef>typedef <function_decl><type><name>UINT_PTR</name></type> (<modifier>*</modifier><name>NSISPLUGINCALLBACK</name>)<parameter_list>(<parameter><decl><type><name><name>enum</name> <name>NSPIM</name></name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>int</name></type> <name>autoclose</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>all_user_var</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>exec_error</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>abort</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>exec_reboot</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>reboot_called</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>XXX_cur_insttype</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>plugin_api_version</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>silent</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>instdir_error</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>rtl</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>errlvl</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>alter_reg_view</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>status_update</name></decl>;</decl_stmt>

}</block></struct></type> <name>exec_flags_t</name>;</typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>NSISCALL</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NSISCALL</name></cpp:macro> <cpp:value>__stdcall</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>exec_flags_t</name> <modifier>*</modifier></type><name>exec_flags</name></decl>;</decl_stmt>

<function_decl><type><name>int</name></type> (<name>NSISCALL</name> <modifier>*</modifier><name>ExecuteCodeSegment</name>)<parameter_list>(<parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>HWND</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<name>NSISCALL</name> <modifier>*</modifier><name>validate_filename</name>)<parameter_list>(<parameter><decl><type><name>TCHAR</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>BOOL</name></type> (<name>NSISCALL</name> <modifier>*</modifier><name>RegisterPluginCallback</name>)<parameter_list>(<parameter><decl><type><name>HMODULE</name></type></decl></parameter>, <parameter><decl><type><name>NSISPLUGINCALLBACK</name></type></decl></parameter>)</parameter_list>;</function_decl>

}</block></struct></type> <name>extra_parameters</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WM_NOTIFY_OUTER_NEXT</name></cpp:macro> <cpp:value>(WM_USER+0x8)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WM_NOTIFY_CUSTOM_READY</name></cpp:macro> <cpp:value>(WM_USER+0xd)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NOTIFY_BYE_BYE</name></cpp:macro> <cpp:value>'x'</cpp:value></cpp:define>

</unit>
