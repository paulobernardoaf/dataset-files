<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\src\modules\modules.h">





















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LIBVLC_MODULES_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LIBVLC_MODULES_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdatomic.h&gt;</cpp:file></cpp:include>


<typedef>typedef <type><struct>struct <name>vlc_plugin_t</name>
<block>{
<decl_stmt><decl><type><name><name>struct</name> <name>vlc_plugin_t</name></name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>module_t</name> <modifier>*</modifier></type><name>module</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>modules_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>textdomain</name></decl>;</decl_stmt> 




<struct>struct
<block>{
<decl_stmt><decl><type><name>module_config_t</name> <modifier>*</modifier></type><name>items</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>size_t</name></type> <name>size</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>size_t</name></type> <name>count</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>size_t</name></type> <name>booleans</name></decl>;</decl_stmt> 
}</block> <decl><name>conf</name></decl>;</struct>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_DYNAMIC_PLUGINS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>bool</name></type> <name>unloadable</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>atomic_uintptr_t</name></type> <name>handle</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>abspath</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>path</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int64_t</name></type> <name>mtime</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint64_t</name></type> <name>size</name></decl>;</decl_stmt> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>vlc_plugin_t</name>;</typedef>




<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>vlc_plugin_t</name></name> <modifier>*</modifier></type><name>vlc_plugins</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MODULE_SHORTCUT_MAX</name></cpp:macro> <cpp:value>20</cpp:value></cpp:define>


<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>vlc_plugin_cb</name>) <parameter_list>(<parameter><function_decl><type><name>int</name></type> (<modifier>*</modifier>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>


<function_decl><type><name>int</name></type> <name>vlc_entry__core</name> <parameter_list>(<parameter><function_decl><type><name>int</name></type> (<modifier>*</modifier>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>




<struct>struct <name>module_t</name>
<block>{
<decl_stmt><decl><type><name>vlc_plugin_t</name> <modifier>*</modifier></type><name>plugin</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>module_t</name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>unsigned</name></type> <name>i_shortcuts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_shortcuts</name></decl>;</decl_stmt>




<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_shortname</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_longname</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_help</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_capability</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>i_score</name></decl>;</decl_stmt> 


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>activate_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>deactivate_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>pf_activate</name></decl>;</decl_stmt>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>deactivate</name>)<parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
}</block>;</struct>

<function_decl><type><name>vlc_plugin_t</name> <modifier>*</modifier></type><name>vlc_plugin_create</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>vlc_plugin_destroy</name><parameter_list>(<parameter><decl><type><name>vlc_plugin_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>module_t</name> <modifier>*</modifier></type><name>vlc_module_create</name><parameter_list>(<parameter><decl><type><name>vlc_plugin_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>vlc_module_destroy</name> <parameter_list>(<parameter><decl><type><name>module_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>vlc_plugin_t</name> <modifier>*</modifier></type><name>vlc_plugin_describe</name><parameter_list>(<parameter><decl><type><name>vlc_plugin_cb</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>vlc_plugin_resolve</name><parameter_list>(<parameter><decl><type><name>vlc_plugin_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>vlc_plugin_cb</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>module_InitBank</name> <parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>module_LoadPlugins</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>module_LoadPlugins</name><parameter_list>(<parameter><type><name>a</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>module_LoadPlugins(VLC_OBJECT(a))</cpp:value></cpp:define>
<function_decl><type><name>void</name></type> <name>module_EndBank</name> <parameter_list>(<parameter><decl><type><name>bool</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>module_Map</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_logger</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>vlc_plugin_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name> <modifier>*</modifier></type><name>module_Symbol</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_logger</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>vlc_plugin_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>ssize_t</name></type> <name>module_list_cap</name> <parameter_list>(<parameter><decl><type><name>module_t</name> <modifier>*</modifier><modifier>*</modifier><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>vlc_bindtextdomain</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>










<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>vlc_dlopen</name><argument_list>(<argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator><name>path</name></expr></argument>, <argument><expr><name>bool</name></expr></argument>)</argument_list> <name>VLC_USED</name></decl>;</decl_stmt>










<function_decl><type><name>int</name></type> <name>vlc_dlclose</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>














<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>vlc_dlsym</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>handle</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator></expr></argument>)</argument_list> <name>VLC_USED</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>vlc_dlerror</name><argument_list>(<argument><expr><name>void</name></expr></argument>)</argument_list> <name>VLC_USED</name></decl>;</decl_stmt>


<function_decl><type><name>vlc_plugin_t</name> <modifier>*</modifier></type><name>vlc_cache_load</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>block_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>vlc_plugin_t</name> <modifier>*</modifier></type><name>vlc_cache_lookup</name><parameter_list>(<parameter><decl><type><name>vlc_plugin_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>relpath</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>CacheSave</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>vlc_plugin_t</name> <modifier>*</modifier><specifier>const</specifier> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
