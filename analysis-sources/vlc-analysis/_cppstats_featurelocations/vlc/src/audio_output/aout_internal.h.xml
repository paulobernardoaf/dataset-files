<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\src\audio_output\aout_internal.h">





















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LIBVLC_AOUT_INTERNAL_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LIBVLC_AOUT_INTERNAL_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdatomic.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_atomic.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_viewpoint.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../clock/clock.h"</cpp:file></cpp:include>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_MAX_INPUT_RATE</name></cpp:macro> <cpp:value>(4)</cpp:value></cpp:define>

<enum>enum <block>{
<decl><name>AOUT_RESAMPLING_NONE</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>AOUT_RESAMPLING_UP</name></decl>,
<decl><name>AOUT_RESAMPLING_DOWN</name></decl>
}</block>;</enum>

<typedef>typedef <type><name><name>struct</name> <name>aout_volume</name></name></type> <name>aout_volume_t</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>aout_dev</name></name></type> <name>aout_dev_t</name>;</typedef>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>lock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>module_t</name> <modifier>*</modifier></type><name>module</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>aout_filters_t</name> <modifier>*</modifier></type><name>filters</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>aout_volume_t</name> <modifier>*</modifier></type><name>volume</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>bitexact</name></decl>;</decl_stmt>

<struct>struct
<block>{
<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>lock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>aout_dev_t</name> <modifier>*</modifier></type><name>list</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>count</name></decl>;</decl_stmt>
}</block> <decl><name>dev</name></decl>;</struct>

<struct>struct
<block>{
<decl_stmt><decl><type><name>atomic_bool</name></type> <name>update</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>lock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_viewpoint_t</name></type> <name>value</name></decl>;</decl_stmt>
}</block> <decl><name>vp</name></decl>;</struct>

<struct>struct
<block>{
<decl_stmt><decl><type><name><name>struct</name> <name>vlc_clock_t</name></name> <modifier>*</modifier></type><name>clock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>rate</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>resamp_start_drift</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>resamp_type</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>bool</name></type> <name>discontinuity</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>request_delay</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>delay</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>first_pts</name></decl>;</decl_stmt>
}</block> <decl><name>sync</name></decl>;</struct>
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>original_pts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>requested_stereo_mode</name></decl>;</decl_stmt> 



<decl_stmt><decl><type><name>int</name></type> <name>input_profile</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>audio_sample_format_t</name></type> <name>input_format</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>audio_sample_format_t</name></type> <name>filter_format</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>audio_sample_format_t</name></type> <name>mixer_format</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>aout_filters_cfg_t</name></type> <name>filters_cfg</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>atomic_uint</name></type> <name>buffers_lost</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>atomic_uint</name></type> <name>buffers_played</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>atomic_uchar</name></type> <name>restart</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_atomic_rc_t</name></type> <name>rc</name></decl>;</decl_stmt>
}</block></struct></type> <name>aout_owner_t</name>;</typedef>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>audio_output_t</name></type> <name>output</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>aout_owner_t</name></type> <name>owner</name></decl>;</decl_stmt>
}</block></struct></type> <name>aout_instance_t</name>;</typedef>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>aout_owner_t</name> <modifier>*</modifier></type><name>aout_owner</name> <parameter_list>(<parameter><decl><type><name>audio_output_t</name> <modifier>*</modifier></type><name>aout</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>&amp;</operator><operator>(</operator><operator>(</operator><name>aout_instance_t</name> <operator>*</operator><operator>)</operator><name>aout</name><operator>)</operator><operator>-&gt;</operator><name>owner</name></expr>;</return>
</block_content>}</block></function>






<function_decl><type><name>aout_volume_t</name> <modifier>*</modifier></type><name>aout_volume_New</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>audio_replay_gain_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>aout_volume_New</name><parameter_list>(<parameter><type><name>o</name></type></parameter>, <parameter><type><name>g</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>aout_volume_New(VLC_OBJECT(o), g)</cpp:value></cpp:define>
<function_decl><type><name>int</name></type> <name>aout_volume_SetFormat</name><parameter_list>(<parameter><decl><type><name>aout_volume_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>vlc_fourcc_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>aout_volume_SetVolume</name><parameter_list>(<parameter><decl><type><name>aout_volume_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>float</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>aout_volume_Amplify</name><parameter_list>(<parameter><decl><type><name>aout_volume_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>block_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>aout_volume_Delete</name><parameter_list>(<parameter><decl><type><name>aout_volume_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>audio_output_t</name> <modifier>*</modifier></type><name>aout_New</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>aout_New</name><parameter_list>(<parameter><type><name>a</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>aout_New(VLC_OBJECT(a))</cpp:value></cpp:define>
<function_decl><type><name>void</name></type> <name>aout_Destroy</name> <parameter_list>(<parameter><decl><type><name>audio_output_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>aout_OutputNew</name><parameter_list>(<parameter><decl><type><name>audio_output_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>aout_OutputDelete</name><parameter_list>( <parameter><decl><type><name>audio_output_t</name> <modifier>*</modifier></type> <name>p_aout</name></decl></parameter> )</parameter_list>;</function_decl>



<function_decl><type><name>void</name></type> <name>aout_FormatsPrint</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>audio_sample_format_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>audio_sample_format_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>aout_FormatsPrint</name><parameter_list>(<parameter><type><name>o</name></type></parameter>, <parameter><type><name>t</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>aout_FormatsPrint(VLC_OBJECT(o), t, a, b)</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_DEC_SUCCESS</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_DEC_CHANGED</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_DEC_FAILED</name></cpp:macro> <cpp:value>VLC_EGENERIC</cpp:value></cpp:define>

<function_decl><type><name>int</name></type> <name>aout_DecNew</name><parameter_list>(<parameter><decl><type><name>audio_output_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>audio_sample_format_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>profile</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>vlc_clock_t</name></name> <modifier>*</modifier></type><name>clock</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>audio_replay_gain_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>aout_DecDelete</name><parameter_list>(<parameter><decl><type><name>audio_output_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>aout_DecPlay</name><parameter_list>(<parameter><decl><type><name>audio_output_t</name> <modifier>*</modifier></type><name>aout</name></decl></parameter>, <parameter><decl><type><name>block_t</name> <modifier>*</modifier></type><name>block</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>aout_DecGetResetStats</name><parameter_list>(<parameter><decl><type><name>audio_output_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>aout_DecChangePause</name><parameter_list>(<parameter><decl><type><name>audio_output_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b_paused</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>i_date</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>aout_DecChangeRate</name><parameter_list>(<parameter><decl><type><name>audio_output_t</name> <modifier>*</modifier></type><name>aout</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>rate</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>aout_DecChangeDelay</name><parameter_list>(<parameter><decl><type><name>audio_output_t</name> <modifier>*</modifier></type><name>aout</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>delay</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>aout_DecFlush</name><parameter_list>(<parameter><decl><type><name>audio_output_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>aout_DecDrain</name><parameter_list>(<parameter><decl><type><name>audio_output_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>aout_RequestRestart</name> <parameter_list>(<parameter><decl><type><name>audio_output_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>aout_RequestRetiming</name><parameter_list>(<parameter><decl><type><name>audio_output_t</name> <modifier>*</modifier></type><name>aout</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>system_ts</name></decl></parameter>,
<parameter><decl><type><name>vlc_tick_t</name></type> <name>audio_ts</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>aout_InputRequestRestart</name><parameter_list>(<parameter><decl><type><name>audio_output_t</name> <modifier>*</modifier></type><name>aout</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>aout_RequestRestart</name><argument_list>(<argument><expr><name>aout</name></expr></argument>, <argument><expr><name>AOUT_RESTART_FILTERS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>aout_SetWavePhysicalChannels</name><parameter_list>(<parameter><decl><type><name>audio_sample_format_t</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint32_t</name></type> <name><name>wave_channels</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>AOUT_CHAN_LEFT</name></expr>, <expr><name>AOUT_CHAN_RIGHT</name></expr>, <expr><name>AOUT_CHAN_CENTER</name></expr>,
<expr><name>AOUT_CHAN_LFE</name></expr>, <expr><name>AOUT_CHAN_REARLEFT</name></expr>, <expr><name>AOUT_CHAN_REARRIGHT</name></expr>,
<expr><name>AOUT_CHAN_MIDDLELEFT</name></expr>, <expr><name>AOUT_CHAN_MIDDLERIGHT</name></expr>, <expr><name>AOUT_CHAN_REARCENTER</name></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_physical_channels</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_channels</name></name> <operator>&amp;&amp;</operator> <name>i</name> <operator>&lt;</operator> <name>AOUT_CHAN_MAX</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_physical_channels</name></name> <operator>|=</operator> <name><name>wave_channels</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
<expr_stmt><expr><call><name>aout_FormatPrepare</name><argument_list>(<argument><expr><name>fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>








<decl_stmt><decl><type><name>aout_filters_t</name> <modifier>*</modifier></type><name>aout_FiltersNewWithClock</name><argument_list>(<argument><expr><name>vlc_object_t</name> <operator>*</operator></expr></argument>, <argument><expr><specifier>const</specifier> <name>vlc_clock_t</name> <operator>*</operator></expr></argument>,
<argument><expr><specifier>const</specifier> <name>audio_sample_format_t</name> <operator>*</operator></expr></argument>,
<argument><expr><specifier>const</specifier> <name>audio_sample_format_t</name> <operator>*</operator></expr></argument>,
<argument><expr><specifier>const</specifier> <name>aout_filters_cfg_t</name> <operator>*</operator><name>cfg</name></expr></argument>)</argument_list> <name>VLC_USED</name></decl>;</decl_stmt>
<function_decl><type><name>void</name></type> <name>aout_FiltersResetClock</name><parameter_list>(<parameter><decl><type><name>aout_filters_t</name> <modifier>*</modifier></type><name>filters</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>aout_FiltersSetClockDelay</name><parameter_list>(<parameter><decl><type><name>aout_filters_t</name> <modifier>*</modifier></type><name>filters</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>delay</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>aout_FiltersCanResample</name> <parameter_list>(<parameter><decl><type><name>aout_filters_t</name> <modifier>*</modifier></type><name>filters</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
