<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\src\libvlc-module.c">

























<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MODULE_NAME</name></cpp:macro> <cpp:value>core</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;limits.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_cpu.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libvlc.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"modules/modules.h"</cpp:file></cpp:include>


<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vlc_actions.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vlc_meta.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_aout.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_vout.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_player.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"clock/clock.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>ppsz_snap_formats</name><index>[]</index></name> <init>=
<expr><block>{ <expr><literal type="string">"png"</literal></expr>, <expr><literal type="string">"jpg"</literal></expr>, <expr><literal type="string">"tiff"</literal></expr> }</block></expr></init></decl>;</decl_stmt>













<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INTF_CAT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "These options allow you to configure the interfaces used by VLC. " "You can select the main interface, additional " "interface modules, and define various related options." )</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INTF_TEXT</name></cpp:macro> <cpp:value>N_("Interface module")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INTF_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This is the main interface used by VLC. " "The default behavior is to automatically select the best module " "available.")</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EXTRAINTF_TEXT</name></cpp:macro> <cpp:value>N_("Extra interface modules")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EXTRAINTF_LONGTEXT</name></cpp:macro> <cpp:value>N_( "You can select \"additional interfaces\" for VLC. " "They will be launched in the background in addition to the default " "interface. Use a colon separated list of interface modules. (common " "values are \"rc\" (remote control), \"http\", \"gestures\" ...)")</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CONTROL_TEXT</name></cpp:macro> <cpp:value>N_("Control interfaces")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CONTROL_LONGTEXT</name></cpp:macro> <cpp:value>N_( "You can select control interfaces for VLC.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VERBOSE_TEXT</name></cpp:macro> <cpp:value>N_("Verbosity (0,1,2)")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VERBOSE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This is the verbosity level (0=only errors and " "standard messages, 1=warnings, 2=debug).")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPEN_TEXT</name></cpp:macro> <cpp:value>N_("Default stream")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPEN_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This stream will always be opened at VLC startup." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COLOR_TEXT</name></cpp:macro> <cpp:value>N_("Color messages")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COLOR_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This enables colorization of the messages sent to the console. " "Your terminal needs Linux color support for this to work.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INTERACTION_TEXT</name></cpp:macro> <cpp:value>N_("Interface interaction")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INTERACTION_LONGTEXT</name></cpp:macro> <cpp:value>N_( "When this is enabled, the interface will show a dialog box each time " "some user input is required." )</cpp:value></cpp:define>









<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_CAT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "These options allow you to modify the behavior of the audio " "subsystem, and to add audio filters which can be used for " "post processing or visual effects (spectrum analyzer, etc.). " "Enable these filters here, and configure them in the \"audio filters\" " "modules section.")</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_TEXT</name></cpp:macro> <cpp:value>N_("Audio output module")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This is the audio output method used by VLC. " "The default behavior is to automatically select the best method " "available.")</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ROLE_TEXT</name></cpp:macro> <cpp:value>N_("Media role")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ROLE_LONGTEXT</name></cpp:macro> <cpp:value>N_("Media (player) role for operating system policy.")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIO_BITEXACT_TEXT</name></cpp:macro> <cpp:value>N_("Enable bit-exact mode (pure mode)")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIO_BITEXACT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This will disable all audio filters, even audio converters. " "This may result on audio not working if the output can't adapt to the " "input format.")</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIO_TEXT</name></cpp:macro> <cpp:value>N_("Enable audio")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIO_LONGTEXT</name></cpp:macro> <cpp:value>N_( "You can completely disable the audio output. The audio " "decoding stage will not take place, thus saving some processing power.")</cpp:value></cpp:define>


<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>ppsz_roles</name><index>[]</index></name> <init>= <expr><block>{
<expr><literal type="string">"video"</literal></expr>, <expr><literal type="string">"music"</literal></expr>, <expr><literal type="string">"communication"</literal></expr>, <expr><literal type="string">"game"</literal></expr>,
<expr><literal type="string">"notification"</literal></expr>, <expr><literal type="string">"animation"</literal></expr>, <expr><literal type="string">"production"</literal></expr>,
<expr><literal type="string">"accessibility"</literal></expr>, <expr><literal type="string">"test"</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>ppsz_roles_text</name><index>[]</index></name> <init>= <expr><block>{
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Video"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Music"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Communication"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Game"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Notification"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Animation"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Production"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Accessibility"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Test"</literal></expr></argument>)</argument_list></call></expr>,
}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GAIN_TEXT</name></cpp:macro> <cpp:value>N_("Audio gain")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GAIN_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This linear gain will be applied to outputted audio.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VOLUME_STEP_TEXT</name></cpp:macro> <cpp:value>N_("Audio output volume step")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VOLUME_STEP_LONGTEXT</name></cpp:macro> <cpp:value>N_( "The step size of the volume is adjustable using this option.")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AOUT_VOLUME_STEP</name></cpp:macro> <cpp:value>12.8</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VOLUME_SAVE_TEXT</name></cpp:macro> <cpp:value>N_( "Remember the audio volume" )</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VOLUME_SAVE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "The volume can be recorded and automatically restored next time " "VLC is used." )</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DESYNC_TEXT</name></cpp:macro> <cpp:value>N_("Audio desynchronization compensation")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DESYNC_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This delays the audio output. The delay must be given in milliseconds. " "This can be handy if you notice a lag between the video and the audio.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIO_RESAMPLER_TEXT</name></cpp:macro> <cpp:value>N_("Audio resampler")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIO_RESAMPLER_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This selects which plugin to use for audio resampling." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MULTICHA_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Sets the audio output channels mode that will be used by default " "if your hardware and the audio stream are compatible.")</cpp:value></cpp:define>



<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__ANDROID__</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>__APPLE__</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SPDIF_TEXT</name></cpp:macro> <cpp:value>N_("Force S/PDIF support")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SPDIF_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This option should be used when the audio output can't negotiate S/PDIF support.")</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FORCE_DOLBY_TEXT</name></cpp:macro> <cpp:value>N_("Force detection of Dolby Surround")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FORCE_DOLBY_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Use this when you know your stream is (or is not) encoded with Dolby ""Surround but fails to be detected as such. Even if the stream is ""not actually encoded with Dolby Surround, turning on this option might ""enhance your experience, especially when combined with the Headphone ""Channel Mixer." )</cpp:value></cpp:define>





<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>pi_force_dolby_values</name><index>[]</index></name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>ppsz_force_dolby_descriptions</name><index>[]</index></name> <init>= <expr><block>{
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Auto"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"On"</literal></expr></argument>)</argument_list></call></expr>, <macro><name>N_</name><argument_list>(<argument><literal type="string">"Off"</literal></argument>)</argument_list></macro> }</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STEREO_MODE_TEXT</name></cpp:macro> <cpp:value>N_("Stereo audio output mode")</cpp:value></cpp:define>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>pi_stereo_mode_values</name><index>[]</index></name> <init>= <expr><block>{ <expr><name>AOUT_VAR_CHAN_UNSET</name></expr>,
<expr><name>AOUT_VAR_CHAN_STEREO</name></expr>, <expr><name>AOUT_VAR_CHAN_RSTEREO</name></expr>,
<expr><name>AOUT_VAR_CHAN_LEFT</name></expr>, <expr><name>AOUT_VAR_CHAN_RIGHT</name></expr>, <expr><name>AOUT_VAR_CHAN_DOLBYS</name></expr>,
<expr><name>AOUT_VAR_CHAN_HEADPHONES</name></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>ppsz_stereo_mode_texts</name><index>[]</index></name> <init>= <expr><block>{ <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Unset"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Stereo"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Reverse stereo"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Left"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Right"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Dolby Surround"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Headphones"</literal></expr></argument>)</argument_list></call></expr>,
}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIO_FILTER_TEXT</name></cpp:macro> <cpp:value>N_("Audio filters")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIO_FILTER_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This adds audio post processing filters, to modify " "the sound rendering." )</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIO_VISUAL_TEXT</name></cpp:macro> <cpp:value>N_("Audio visualizations")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIO_VISUAL_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This adds visualization modules (spectrum analyzer, etc.).")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIO_REPLAY_GAIN_MODE_TEXT</name></cpp:macro> <cpp:value>N_( "Replay gain mode" )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIO_REPLAY_GAIN_MODE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Select the replay gain mode" )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIO_REPLAY_GAIN_PREAMP_TEXT</name></cpp:macro> <cpp:value>N_( "Replay preamp" )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIO_REPLAY_GAIN_PREAMP_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This allows you to change the default target level (89 dB) " "for stream with replay gain information" )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIO_REPLAY_GAIN_DEFAULT_TEXT</name></cpp:macro> <cpp:value>N_( "Default replay gain" )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIO_REPLAY_GAIN_DEFAULT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This is the gain used for stream without replay gain information" )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIO_REPLAY_GAIN_PEAK_PROTECTION_TEXT</name></cpp:macro> <cpp:value>N_( "Peak protection" )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIO_REPLAY_GAIN_PEAK_PROTECTION_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Protect against sound clipping" )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIO_TIME_STRETCH_TEXT</name></cpp:macro> <cpp:value>N_( "Enable time stretching audio" )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIO_TIME_STRETCH_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This allows playing audio at lower or higher speed without " "affecting the audio pitch" )</cpp:value></cpp:define>




<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>ppsz_replay_gain_mode</name><index>[]</index></name> <init>= <expr><block>{
<expr><literal type="string">"none"</literal></expr>, <expr><literal type="string">"track"</literal></expr>, <expr><literal type="string">"album"</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>ppsz_replay_gain_mode_text</name><index>[]</index></name> <init>= <expr><block>{
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"None"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Track"</literal></expr></argument>)</argument_list></call></expr>, <macro><name>N_</name><argument_list>(<argument><literal type="string">"Album"</literal></argument>)</argument_list></macro> }</block></expr></init></decl>;</decl_stmt>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VOUT_CAT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "These options allow you to modify the behavior of the video output " "subsystem. You can for example enable video filters (deinterlacing, " "image adjusting, etc.). Enable these filters here and configure " "them in the \"video filters\" modules section. You can also set many " "miscellaneous video options." )</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VOUT_TEXT</name></cpp:macro> <cpp:value>N_("Video output module")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VOUT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This is the the video output method used by VLC. " "The default behavior is to automatically select the best method available.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VIDEO_TEXT</name></cpp:macro> <cpp:value>N_("Enable video")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VIDEO_LONGTEXT</name></cpp:macro> <cpp:value>N_( "You can completely disable the video output. The video " "decoding stage will not take place, thus saving some processing power.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WIDTH_TEXT</name></cpp:macro> <cpp:value>N_("Video width")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WIDTH_LONGTEXT</name></cpp:macro> <cpp:value>N_( "You can enforce the video width. By default (-1) VLC will " "adapt to the video characteristics.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEIGHT_TEXT</name></cpp:macro> <cpp:value>N_("Video height")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEIGHT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "You can enforce the video height. By default (-1) VLC will " "adapt to the video characteristics.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VIDEOX_TEXT</name></cpp:macro> <cpp:value>N_("Video X coordinate")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VIDEOX_LONGTEXT</name></cpp:macro> <cpp:value>N_( "You can enforce the position of the top left corner of the video window ""(X coordinate).")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VIDEOY_TEXT</name></cpp:macro> <cpp:value>N_("Video Y coordinate")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VIDEOY_LONGTEXT</name></cpp:macro> <cpp:value>N_( "You can enforce the position of the top left corner of the video window ""(Y coordinate).")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VIDEO_TITLE_TEXT</name></cpp:macro> <cpp:value>N_("Video title")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VIDEO_TITLE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Custom title for the video window (in case the video is not embedded in ""the interface).")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALIGN_TEXT</name></cpp:macro> <cpp:value>N_("Video alignment")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALIGN_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Enforce the alignment of the video in its window. By default (0) it " "will be centered (0=center, 1=left, 2=right, 4=top, 8=bottom, you can " "also use combinations of these values, like 6=4+2 meaning top-right).")</cpp:value></cpp:define>



<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>pi_align_values</name><index>[]</index></name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><name>VOUT_ALIGN_LEFT</name></expr>, <expr><name>VOUT_ALIGN_RIGHT</name></expr>,
<expr><name>VOUT_ALIGN_TOP</name></expr>, <expr><name>VOUT_ALIGN_BOTTOM</name></expr>,
<expr><name>VOUT_ALIGN_TOP</name><operator>|</operator><name>VOUT_ALIGN_LEFT</name></expr>,
<expr><name>VOUT_ALIGN_TOP</name><operator>|</operator><name>VOUT_ALIGN_RIGHT</name></expr>,
<expr><name>VOUT_ALIGN_BOTTOM</name><operator>|</operator><name>VOUT_ALIGN_LEFT</name></expr>,
<expr><name>VOUT_ALIGN_BOTTOM</name><operator>|</operator><name>VOUT_ALIGN_RIGHT</name></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>ppsz_align_descriptions</name><index>[]</index></name> <init>=
<expr><block>{ <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Center"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Left"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Right"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Top"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Bottom"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Top-Left"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Top-Right"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Bottom-Left"</literal></expr></argument>)</argument_list></call></expr>, <macro><name>N_</name><argument_list>(<argument><literal type="string">"Bottom-Right"</literal></argument>)</argument_list></macro> }</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ZOOM_TEXT</name></cpp:macro> <cpp:value>N_("Zoom video")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ZOOM_LONGTEXT</name></cpp:macro> <cpp:value>N_( "You can zoom the video by the specified factor.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRAYSCALE_TEXT</name></cpp:macro> <cpp:value>N_("Grayscale video output")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GRAYSCALE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Output video in grayscale. As the color information aren't decoded, " "this can save some processing power." )</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EMBEDDED_TEXT</name></cpp:macro> <cpp:value>N_("Embedded video")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EMBEDDED_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Embed the video output in the main interface." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FULLSCREEN_TEXT</name></cpp:macro> <cpp:value>N_("Fullscreen video output")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FULLSCREEN_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Start video in fullscreen mode" )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VIDEO_ON_TOP_TEXT</name></cpp:macro> <cpp:value>N_("Always on top")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VIDEO_ON_TOP_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Always place the video window on top of other windows." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WALLPAPER_TEXT</name></cpp:macro> <cpp:value>N_("Enable wallpaper mode")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WALLPAPER_LONGTEXT</name></cpp:macro> <cpp:value>N_( "The wallpaper mode allows you to display the video as the desktop " "background." )</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VIDEO_TITLE_SHOW_TEXT</name></cpp:macro> <cpp:value>N_("Show media title on video")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VIDEO_TITLE_SHOW_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Display the title of the video on top of the movie.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VIDEO_TITLE_TIMEOUT_TEXT</name></cpp:macro> <cpp:value>N_("Show video title for x milliseconds")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VIDEO_TITLE_TIMEOUT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Show the video title for n milliseconds, default is 5000 ms (5 sec.)")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VIDEO_TITLE_POSITION_TEXT</name></cpp:macro> <cpp:value>N_("Position of video title")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VIDEO_TITLE_POSITION_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Place on video where to display the title (default bottom center).")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOUSE_HIDE_TIMEOUT_TEXT</name></cpp:macro> <cpp:value>N_("Hide cursor and fullscreen " "controller after x milliseconds")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOUSE_HIDE_TIMEOUT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Hide mouse cursor and fullscreen controller after " "n milliseconds.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEINTERLACE_TEXT</name></cpp:macro> <cpp:value>N_("Deinterlace")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEINTERLACE_LONGTEXT</name></cpp:macro> <cpp:value>N_("Deinterlace")</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>pi_deinterlace</name><index>[]</index></name> <init>= <expr><block>{
<expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>ppsz_deinterlace_text</name><index>[]</index></name> <init>= <expr><block>{
<expr><literal type="string">"Off"</literal></expr>, <expr><literal type="string">"Automatic"</literal></expr>, <expr><literal type="string">"On"</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEINTERLACE_MODE_TEXT</name></cpp:macro> <cpp:value>N_("Deinterlace mode")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEINTERLACE_MODE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Deinterlace method to use for video processing.")</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>ppsz_deinterlace_mode</name><index>[]</index></name> <init>= <expr><block>{
<expr><literal type="string">"auto"</literal></expr>, <expr><literal type="string">"discard"</literal></expr>, <expr><literal type="string">"blend"</literal></expr>, <expr><literal type="string">"mean"</literal></expr>, <expr><literal type="string">"bob"</literal></expr>,
<expr><literal type="string">"linear"</literal></expr>, <expr><literal type="string">"x"</literal></expr>, <expr><literal type="string">"yadif"</literal></expr>, <expr><literal type="string">"yadif2x"</literal></expr>, <expr><literal type="string">"phosphor"</literal></expr>,
<expr><literal type="string">"ivtc"</literal></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>ppsz_deinterlace_mode_text</name><index>[]</index></name> <init>= <expr><block>{
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Auto"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Discard"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Blend"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Mean"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Bob"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Linear"</literal></expr></argument>)</argument_list></call></expr>, <expr><literal type="string">"X"</literal></expr>, <expr><literal type="string">"Yadif"</literal></expr>, <expr><literal type="string">"Yadif (2x)"</literal></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Phosphor"</literal></expr></argument>)</argument_list></call></expr>,
<macro><name>N_</name><argument_list>(<argument><literal type="string">"Film NTSC (IVTC)"</literal></argument>)</argument_list></macro>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>pi_pos_values</name><index>[]</index></name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>ppsz_pos_descriptions</name><index>[]</index></name> <init>=
<expr><block>{ <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Center"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Left"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Right"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Top"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Bottom"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Top-Left"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Top-Right"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Bottom-Left"</literal></expr></argument>)</argument_list></call></expr>, <macro><name>N_</name><argument_list>(<argument><literal type="string">"Bottom-Right"</literal></argument>)</argument_list></macro> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>pi_sub_align_values</name><index>[]</index></name> <init>= <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>ppsz_sub_align_descriptions</name><index>[]</index></name> <init>=
<expr><block>{ <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Unset"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Center"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Left"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Right"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Top"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Bottom"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Top-Left"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Top-Right"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Bottom-Left"</literal></expr></argument>)</argument_list></call></expr>, <macro><name>N_</name><argument_list>(<argument><literal type="string">"Bottom-Right"</literal></argument>)</argument_list></macro> }</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SS_TEXT</name></cpp:macro> <cpp:value>N_("Disable screensaver")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SS_LONGTEXT</name></cpp:macro> <cpp:value>N_("Disable the screensaver during video playback." )</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>screensaver_values</name><index>[]</index></name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>screensaver_texts</name><index>[]</index></name> <init>= <expr><block>{
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Never"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"When fullscreen"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Always"</literal></expr></argument>)</argument_list></call></expr>,
}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VIDEO_DECO_TEXT</name></cpp:macro> <cpp:value>N_("Window decorations")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VIDEO_DECO_LONGTEXT</name></cpp:macro> <cpp:value>N_( "VLC can avoid creating window caption, frames, etc... around the video" ", giving a \"minimal\" window.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VIDEO_FILTER_TEXT</name></cpp:macro> <cpp:value>N_("Video filter module")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VIDEO_FILTER_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This adds post-processing filters to enhance the " "picture quality, for instance deinterlacing, or distort " "the video.")</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SNAP_PATH_TEXT</name></cpp:macro> <cpp:value>N_("Video snapshot directory (or filename)")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SNAP_PATH_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Directory where the video snapshots will be stored.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SNAP_PREFIX_TEXT</name></cpp:macro> <cpp:value>N_("Video snapshot file prefix")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SNAP_PREFIX_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Video snapshot file prefix" )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SNAP_FORMAT_TEXT</name></cpp:macro> <cpp:value>N_("Video snapshot format")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SNAP_FORMAT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Image format which will be used to store the video snapshots" )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SNAP_PREVIEW_TEXT</name></cpp:macro> <cpp:value>N_("Display video snapshot preview")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SNAP_PREVIEW_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Display the snapshot preview in the screen's top-left corner.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SNAP_SEQUENTIAL_TEXT</name></cpp:macro> <cpp:value>N_("Use sequential numbers instead of timestamps")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SNAP_SEQUENTIAL_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Use sequential numbers instead of timestamps for snapshot numbering")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SNAP_WIDTH_TEXT</name></cpp:macro> <cpp:value>N_("Video snapshot width")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SNAP_WIDTH_LONGTEXT</name></cpp:macro> <cpp:value>N_( "You can enforce the width of the video snapshot. By default " "it will keep the original width (-1). Using 0 will scale the width " "to keep the aspect ratio." )</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SNAP_HEIGHT_TEXT</name></cpp:macro> <cpp:value>N_("Video snapshot height")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SNAP_HEIGHT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "You can enforce the height of the video snapshot. By default " "it will keep the original height (-1). Using 0 will scale the height " "to keep the aspect ratio." )</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CROP_TEXT</name></cpp:macro> <cpp:value>N_("Video cropping")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CROP_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This forces the cropping of the source video. " "Accepted formats are x:y (4:3, 16:9, etc.) expressing the global image " "aspect.")</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASPECT_RATIO_TEXT</name></cpp:macro> <cpp:value>N_("Source aspect ratio")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASPECT_RATIO_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This forces the source aspect ratio. For instance, some DVDs claim " "to be 16:9 while they are actually 4:3. This can also be used as a " "hint for VLC when a movie does not have aspect ratio information. " "Accepted formats are x:y (4:3, 16:9, etc.) expressing the global image " "aspect, or a float value (1.25, 1.3333, etc.) expressing pixel " "squareness.")</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUTOSCALE_TEXT</name></cpp:macro> <cpp:value>N_("Video Auto Scaling")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUTOSCALE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Let the video scale to fit a given window or fullscreen.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCALEFACTOR_TEXT</name></cpp:macro> <cpp:value>N_("Video scaling factor")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCALEFACTOR_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Scaling factor used when Auto Scaling is disabled.\n" "Default value is 1.0 (original video size).")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CUSTOM_CROP_RATIOS_TEXT</name></cpp:macro> <cpp:value>N_("Custom crop ratios list")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CUSTOM_CROP_RATIOS_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Comma separated list of crop ratios which will be added in the " "interface's crop ratios list.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CUSTOM_ASPECT_RATIOS_TEXT</name></cpp:macro> <cpp:value>N_("Custom aspect ratios list")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CUSTOM_ASPECT_RATIOS_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Comma separated list of aspect ratios which will be added in the " "interface's aspect ratio list.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HDTV_FIX_TEXT</name></cpp:macro> <cpp:value>N_("Fix HDTV height")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HDTV_FIX_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This allows proper handling of HDTV-1080 video format " "even if broken encoder incorrectly sets height to 1088 lines. " "You should only disable this option if your video has a " "non-standard format requiring all 1088 lines.")</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MASPECT_RATIO_TEXT</name></cpp:macro> <cpp:value>N_("Monitor pixel aspect ratio")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MASPECT_RATIO_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This forces the monitor aspect ratio. Most monitors have square " "pixels (1:1). If you have a 16:9 screen, you might need to change this " "to 4:3 in order to keep proportions.")</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SKIP_FRAMES_TEXT</name></cpp:macro> <cpp:value>N_("Skip frames")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SKIP_FRAMES_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Enables framedropping on MPEG2 stream. Framedropping " "occurs when your computer is not powerful enough" )</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DROP_LATE_FRAMES_TEXT</name></cpp:macro> <cpp:value>N_("Drop late frames")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DROP_LATE_FRAMES_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This drops frames that are late (arrive to the video output after " "their intended display date)." )</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QUIET_SYNCHRO_TEXT</name></cpp:macro> <cpp:value>N_("Quiet synchro")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QUIET_SYNCHRO_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This avoids flooding the message log with debug output from the " "video output synchronization mechanism.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEYBOARD_EVENTS_TEXT</name></cpp:macro> <cpp:value>N_("Key press events")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEYBOARD_EVENTS_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This enables VLC hotkeys from the (non-embedded) video window." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOUSE_EVENTS_TEXT</name></cpp:macro> <cpp:value>N_("Mouse events")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOUSE_EVENTS_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This enables handling of mouse clicks on the video." )</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_CAT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "These options allow you to modify the behavior of the input " "subsystem, such as the DVD or VCD device, the network interface " "settings or the subtitle channel.")</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CACHING_TEXT</name></cpp:macro> <cpp:value>N_("File caching (ms)")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CACHING_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Caching value for local files, in milliseconds." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CAPTURE_CACHING_TEXT</name></cpp:macro> <cpp:value>N_("Live capture caching (ms)")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CAPTURE_CACHING_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Caching value for cameras and microphones, in milliseconds." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DISC_CACHING_TEXT</name></cpp:macro> <cpp:value>N_("Disc caching (ms)")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DISC_CACHING_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Caching value for optical media, in milliseconds." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NETWORK_CACHING_TEXT</name></cpp:macro> <cpp:value>N_("Network caching (ms)")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NETWORK_CACHING_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Caching value for network resources, in milliseconds." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CR_AVERAGE_TEXT</name></cpp:macro> <cpp:value>N_("Clock reference average counter")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CR_AVERAGE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "When using the PVR input (or a very irregular source), you should " "set this to 10000.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CLOCK_SYNCHRO_TEXT</name></cpp:macro> <cpp:value>N_("Clock synchronisation")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CLOCK_SYNCHRO_LONGTEXT</name></cpp:macro> <cpp:value>N_( "It is possible to disable the input clock synchronisation for " "real-time sources. Use this if you experience jerky playback of " "network streams.")</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CLOCK_JITTER_TEXT</name></cpp:macro> <cpp:value>N_("Clock jitter")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CLOCK_JITTER_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This defines the maximum input delay jitter that the synchronization " "algorithms should try to compensate (in milliseconds)." )</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CLOCK_MASTER_TEXT</name></cpp:macro> <cpp:value>N_("Clock master source")</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>pi_clock_master_values</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>VLC_CLOCK_MASTER_AUDIO</name></expr>,
<expr><name>VLC_CLOCK_MASTER_MONOTONIC</name></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>ppsz_clock_master_descriptions</name><index>[]</index></name> <init>= <expr><block>{
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Audio"</literal></expr></argument>)</argument_list></call></expr>,
<macro><name>N_</name><argument_list>(<argument><literal type="string">"Monotonic"</literal></argument>)</argument_list></macro>
}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NETSYNC_TEXT</name></cpp:macro> <cpp:value>N_("Network synchronisation" )</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NETSYNC_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This allows you to remotely " "synchronise clocks for server and client. The detailed settings " "are available in Advanced / Network Sync." )</cpp:value></cpp:define>



<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>pi_clock_values</name><index>[]</index></name> <init>= <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>ppsz_clock_descriptions</name><index>[]</index></name> <init>=
<expr><block>{ <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Default"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Disable"</literal></expr></argument>)</argument_list></call></expr>, <macro><name>N_</name><argument_list>(<argument><literal type="string">"Enable"</literal></argument>)</argument_list></macro> }</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MTU_TEXT</name></cpp:macro> <cpp:value>N_("MTU of the network interface")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MTU_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This is the maximum application-layer packet size that can be " "transmitted over the network (in bytes).")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MTU_DEFAULT</name></cpp:macro> <cpp:value>1400</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TTL_TEXT</name></cpp:macro> <cpp:value>N_("Hop limit (TTL)")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TTL_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This is the hop limit (also known as \"Time-To-Live\" or TTL) of " "the multicast packets sent by the stream output (-1 = use operating " "system built-in default).")</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MIFACE_TEXT</name></cpp:macro> <cpp:value>N_("Multicast output interface")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MIFACE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Default multicast interface. This overrides the routing table.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DSCP_TEXT</name></cpp:macro> <cpp:value>N_("DiffServ Code Point")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DSCP_LONGTEXT</name></cpp:macro> <cpp:value>N_("Differentiated Services Code Point " "for outgoing UDP streams (or IPv4 Type Of Service, " "or IPv6 Traffic Class). This is used for network Quality of Service.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_PROGRAM_TEXT</name></cpp:macro> <cpp:value>N_("Program")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_PROGRAM_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Choose the program to select by giving its Service ID. " "Only use this option if you want to read a multi-program stream " "(like DVB streams for example)." )</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_PROGRAMS_TEXT</name></cpp:macro> <cpp:value>N_("Programs")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_PROGRAMS_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Choose the programs to select by giving a comma-separated list of " "Service IDs (SIDs). " "Only use this option if you want to read a multi-program stream " "(like DVB streams for example)." )</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_VIDEOTRACK_TEXT</name></cpp:macro> <cpp:value>N_("Video track")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_VIDEOTRACK_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Stream number of the video track to use " "(from 0 to n).")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_AUDIOTRACK_TEXT</name></cpp:macro> <cpp:value>N_("Audio track")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_AUDIOTRACK_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Stream number of the audio track to use " "(from 0 to n).")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_SUBTRACK_TEXT</name></cpp:macro> <cpp:value>N_("Subtitle track")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_SUBTRACK_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Stream number of the subtitle track to use " "(from 0 to n).")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_AUDIOTRACK_LANG_TEXT</name></cpp:macro> <cpp:value>N_("Audio language")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_AUDIOTRACK_LANG_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Language of the audio track you want to use " "(comma separated, two or three letter country code, you may use 'none' to avoid a fallback to another language).")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_SUBTRACK_LANG_TEXT</name></cpp:macro> <cpp:value>N_("Subtitle language")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_SUBTRACK_LANG_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Language of the subtitle track you want to use " "(comma separated, two or three letters country code, you may use 'any' as a fallback).")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_MENUTRACK_LANG_TEXT</name></cpp:macro> <cpp:value>N_("Menu language")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_MENUTRACK_LANG_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Language of the menus you want to use with DVD/BluRay " "(comma separated, two or three letters country code, you may use 'any' as a fallback).")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_VIDEOTRACK_ID_TEXT</name></cpp:macro> <cpp:value>N_("Video track ID")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_VIDEOTRACK_ID_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Stream ID of the video track to use.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_AUDIOTRACK_ID_TEXT</name></cpp:macro> <cpp:value>N_("Audio track ID")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_AUDIOTRACK_ID_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Stream ID of the audio track to use.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_SUBTRACK_ID_TEXT</name></cpp:macro> <cpp:value>N_("Subtitle track ID")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_SUBTRACK_ID_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Stream ID of the subtitle track to use.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_CAPTIONS_TEXT</name></cpp:macro> <cpp:value>N_(N_("Preferred Closed Captions decoder"))</cpp:value></cpp:define>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>pi_captions</name><index>[]</index></name> <init>= <expr><block>{ <expr><literal type="number">608</literal></expr>, <expr><literal type="number">708</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>ppsz_captions</name><index>[]</index></name> <init>= <expr><block>{ <expr><literal type="string">"EIA/CEA 608"</literal></expr>, <expr><literal type="string">"CEA 708"</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_PREFERREDRESOLUTION_TEXT</name></cpp:macro> <cpp:value>N_("Preferred video resolution")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_PREFERREDRESOLUTION_LONGTEXT</name></cpp:macro> <cpp:value>N_( "When several video formats are available, select one whose " "resolution is closest to (but not higher than) this setting, " "in number of lines. Use this option if you don't have enough CPU " "power or network bandwidth to play higher resolutions.")</cpp:value></cpp:define>




<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>pi_prefres</name><index>[]</index></name> <init>= <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1080</literal></expr>, <expr><literal type="number">720</literal></expr>, <expr><literal type="number">576</literal></expr>, <expr><literal type="number">360</literal></expr>, <expr><literal type="number">240</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>ppsz_prefres</name><index>[]</index></name> <init>= <expr><block>{
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Best available"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Full HD (1080p)"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"HD (720p)"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Standard Definition (576 or 480 lines)"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Low Definition (360 lines)"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Very Low Definition (240 lines)"</literal></expr></argument>)</argument_list></call></expr>,
}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_LOWDELAY_TEXT</name></cpp:macro> <cpp:value>N_("Low delay mode")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_LOWDELAY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Try to minimize delay along decoding chain.""Might break with non compliant streams.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_REPEAT_TEXT</name></cpp:macro> <cpp:value>N_("Input repetitions")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_REPEAT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Number of time the same input will be repeated")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>START_TIME_TEXT</name></cpp:macro> <cpp:value>N_("Start time")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>START_TIME_LONGTEXT</name></cpp:macro> <cpp:value>N_( "The stream will start at this position (in seconds)." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STOP_TIME_TEXT</name></cpp:macro> <cpp:value>N_("Stop time")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STOP_TIME_LONGTEXT</name></cpp:macro> <cpp:value>N_( "The stream will stop at this position (in seconds)." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RUN_TIME_TEXT</name></cpp:macro> <cpp:value>N_("Run time")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RUN_TIME_LONGTEXT</name></cpp:macro> <cpp:value>N_( "The stream will run this duration (in seconds)." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_FAST_SEEK_TEXT</name></cpp:macro> <cpp:value>N_("Fast seek")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_FAST_SEEK_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Favor speed over precision while seeking" )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_RATE_TEXT</name></cpp:macro> <cpp:value>N_("Playback speed")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_RATE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This defines the playback speed (nominal speed is 1.0)." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_LIST_TEXT</name></cpp:macro> <cpp:value>N_("Input list")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_LIST_LONGTEXT</name></cpp:macro> <cpp:value>N_( "You can give a comma-separated list " "of inputs that will be concatenated together after the normal one.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_SLAVE_TEXT</name></cpp:macro> <cpp:value>N_("Input slave (experimental)")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_SLAVE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This allows you to play from several inputs at " "the same time. This feature is experimental, not all formats " "are supported. Use a '#' separated list of inputs.")</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BOOKMARKS_TEXT</name></cpp:macro> <cpp:value>N_("Bookmarks list for a stream")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BOOKMARKS_LONGTEXT</name></cpp:macro> <cpp:value>N_( "You can manually give a list of bookmarks for a stream in " "the form \"{name=bookmark-name,time=optional-time-offset," "bytes=optional-byte-offset},{...}\"")</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RESTORE_PLAYBACK_POS_TEXT</name></cpp:macro> <cpp:value>N_("Continue playback?")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RESTORE_PLAYBACK_STATE_TEXT</name></cpp:macro> <cpp:value>N_("Resume last playback states")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RESTORE_PLAYBACK_STATE_LONGTEXT</name></cpp:macro> <cpp:value>N_("This will resume the last playback " "state, such as the selected tracks, rate, aspect-ratio, ..." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_RECORD_PATH_TEXT</name></cpp:macro> <cpp:value>N_("Record directory")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_RECORD_PATH_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Directory where the records will be stored" )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_RECORD_NATIVE_TEXT</name></cpp:macro> <cpp:value>N_("Prefer native stream recording")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_RECORD_NATIVE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "When possible, the input stream will be recorded instead of using " "the stream output module" )</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_TIMESHIFT_PATH_TEXT</name></cpp:macro> <cpp:value>N_("Timeshift directory")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_TIMESHIFT_PATH_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Directory used to store the timeshift temporary files." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_TIMESHIFT_GRANULARITY_TEXT</name></cpp:macro> <cpp:value>N_("Timeshift granularity")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_TIMESHIFT_GRANULARITY_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This is the maximum size in bytes of the temporary files " "that will be used to store the timeshifted streams." )</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_TITLE_FORMAT_TEXT</name></cpp:macro> <cpp:value>N_( "Change title according to current media" )</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_TITLE_FORMAT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This option allows you to set the title according to what's being played&lt;br&gt;" "$a: Artist&lt;br&gt;$b: Album&lt;br&gt;$c: Copyright&lt;br&gt;$t: Title&lt;br&gt;$g: Genre&lt;br&gt;" "$n: Track num&lt;br&gt;$p: Now playing&lt;br&gt;$A: Date&lt;br&gt;$D: Duration&lt;br&gt;" "$Z: \"Now playing\" (Fall back on Title - Artist)" )</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INPUT_LUA_TEXT</name></cpp:macro> <cpp:value>N_( "Disable all lua plugins" )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUB_CAT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "These options allow you to modify the behavior of the subpictures " "subsystem. You can for example enable subpictures sources (logo, etc.). " "Enable these filters here and configure them in the " "\"subsources filters\" modules section. You can also set many " "miscellaneous subpictures options." )</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUB_MARGIN_TEXT</name></cpp:macro> <cpp:value>N_("Force subtitle position")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUB_MARGIN_LONGTEXT</name></cpp:macro> <cpp:value>N_( "You can use this option to place the subtitles under the movie, " "instead of over the movie. Try several positions.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUB_TEXT_SCALE_TEXT</name></cpp:macro> <cpp:value>N_("Subtitles text scaling factor")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUB_TEXT_SCALE_LONGTEXT</name></cpp:macro> <cpp:value>N_("Changes the subtitles size where possible")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SPU_TEXT</name></cpp:macro> <cpp:value>N_("Enable sub-pictures")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SPU_LONGTEXT</name></cpp:macro> <cpp:value>N_( "You can completely disable the sub-picture processing.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SECONDARY_SUB_POSITION_TEXT</name></cpp:macro> <cpp:value>N_("Position of secondary subtitles")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SECONDARY_SUB_POSITION_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Place on video where to display secondary subtitles (default bottom center).")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SECONDARY_SUB_MARGIN_TEXT</name></cpp:macro> <cpp:value>N_("Force secondary subtitle position")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SECONDARY_SUB_MARGIN_LONGTEXT</name></cpp:macro> <cpp:value>N_( "You can use this option to vertically adjust the position secondary " "subtitles are displayed.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OSD_TEXT</name></cpp:macro> <cpp:value>N_("On Screen Display")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OSD_LONGTEXT</name></cpp:macro> <cpp:value>N_( "VLC can display messages on the video. This is called OSD (On Screen " "Display).")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TEXTRENDERER_TEXT</name></cpp:macro> <cpp:value>N_("Text rendering module")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TEXTRENDERER_LONGTEXT</name></cpp:macro> <cpp:value>N_( "VLC normally uses Freetype for rendering, but this allows you to use svg for instance.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUB_SOURCE_TEXT</name></cpp:macro> <cpp:value>N_("Subpictures source module")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUB_SOURCE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This adds so-called \"subpicture sources\". These filters overlay " "some images or text over the video (like a logo, arbitrary text, ...)." )</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUB_FILTER_TEXT</name></cpp:macro> <cpp:value>N_("Subpictures filter module")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUB_FILTER_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This adds so-called \"subpicture filters\". These filter subpictures " "created by subtitle decoders or other subpictures sources." )</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUB_AUTO_TEXT</name></cpp:macro> <cpp:value>N_("Autodetect subtitle files")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUB_AUTO_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Automatically detect a subtitle file, if no subtitle filename is " "specified (based on the filename of the movie).")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUB_FUZZY_TEXT</name></cpp:macro> <cpp:value>N_("Subtitle autodetection fuzziness")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUB_FUZZY_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This determines how fuzzy subtitle and movie filename matching " "will be. Options are:\n" "0 = no subtitles autodetected\n" "1 = any subtitle file\n" "2 = any subtitle file containing the movie name\n" "3 = subtitle file matching the movie name with additional chars\n" "4 = subtitle file matching the movie name exactly")</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUB_PATH_TEXT</name></cpp:macro> <cpp:value>N_("Subtitle autodetection paths")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUB_PATH_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Look for a subtitle file in those paths too, if your subtitle " "file was not found in the current directory.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUB_FPS_TEXT</name></cpp:macro> <cpp:value>N_("Subtitle Frames per Second")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUB_FPS_LONGTEXT</name></cpp:macro> <cpp:value>N_("Override the normal frames per second settings. ")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUB_DELAY_TEXT</name></cpp:macro> <cpp:value>N_("Subtitle delay")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUB_DELAY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Apply a delay to all subtitles (in 1/10s, eg 100 means 10s).")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUB_FILE_TEXT</name></cpp:macro> <cpp:value>N_("Use subtitle file")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUB_FILE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Load this subtitle file. To be used when autodetect cannot detect " "your subtitle file.")</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DVD_DEV_TEXT</name></cpp:macro> <cpp:value>N_("DVD device")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VCD_DEV_TEXT</name></cpp:macro> <cpp:value>N_("VCD device")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CDAUDIO_DEV_TEXT</name></cpp:macro> <cpp:value>N_("Audio CD device")</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>( <argument><expr><name>_WIN32</name></expr></argument> )</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>( <argument><expr><name>__OS2__</name></expr></argument> )</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DVD_DEV_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This is the default DVD drive (or file) to use. Don't forget the colon " "after the drive letter (e.g. D:)")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VCD_DEV_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This is the default VCD drive (or file) to use. Don't forget the colon " "after the drive letter (e.g. D:)")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CDAUDIO_DEV_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This is the default Audio CD drive (or file) to use. Don't forget the " "colon after the drive letter (e.g. D:)")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DVD_DEVICE</name></cpp:macro> <cpp:value>NULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VCD_DEVICE</name></cpp:macro> <cpp:value>"D:"</cpp:value></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DVD_DEV_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This is the default DVD device to use.")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VCD_DEV_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This is the default VCD device to use." )</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CDAUDIO_DEV_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This is the default Audio CD device to use." )</cpp:value></cpp:define>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__OpenBSD__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DVD_DEVICE</name></cpp:macro> <cpp:value>"/dev/cd0c"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VCD_DEVICE</name></cpp:macro> <cpp:value>"/dev/cd0c"</cpp:value></cpp:define>
<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__linux__</name></expr></argument>)</argument_list></call></expr></cpp:elif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DVD_DEVICE</name></cpp:macro> <cpp:value>"/dev/sr0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VCD_DEVICE</name></cpp:macro> <cpp:value>"/dev/sr0"</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DVD_DEVICE</name></cpp:macro> <cpp:value>"/dev/dvd"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VCD_DEVICE</name></cpp:macro> <cpp:value>"/dev/cdrom"</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TIMEOUT_TEXT</name></cpp:macro> <cpp:value>N_("TCP connection timeout")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TIMEOUT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Default TCP connection timeout (in milliseconds)." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HTTP_HOST_TEXT</name></cpp:macro> <cpp:value>N_( "HTTP server address" )</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HOST_LONGTEXT</name></cpp:macro> <cpp:value>N_( "By default, the server will listen on any local IP address. " "Specify an IP address (e.g. ::1 or 127.0.0.1) or a host name " "(e.g. localhost) to restrict them to a specific network interface." )</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTSP_HOST_TEXT</name></cpp:macro> <cpp:value>N_( "RTSP server address" )</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTSP_HOST_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This defines the address the RTSP server will listen on, along " "with the base path of the RTSP VOD media. Syntax is address/path. " "By default, the server will listen on any local IP address. " "Specify an IP address (e.g. ::1 or 127.0.0.1) or a host name " "(e.g. localhost) to restrict them to a specific network interface." )</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HTTP_PORT_TEXT</name></cpp:macro> <cpp:value>N_( "HTTP server port" )</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HTTP_PORT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "The HTTP server will listen on this TCP port. " "The standard HTTP port number is 80. " "However allocation of port numbers below 1025 is usually restricted " "by the operating system." )</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HTTPS_PORT_TEXT</name></cpp:macro> <cpp:value>N_( "HTTPS server port" )</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HTTPS_PORT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "The HTTPS server will listen on this TCP port. " "The standard HTTPS port number is 443. " "However allocation of port numbers below 1025 is usually restricted " "by the operating system." )</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTSP_PORT_TEXT</name></cpp:macro> <cpp:value>N_( "RTSP server port" )</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTSP_PORT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "The RTSP server will listen on this TCP port. " "The standard RTSP port number is 554. " "However allocation of port numbers below 1025 is usually restricted " "by the operating system." )</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HTTP_CERT_TEXT</name></cpp:macro> <cpp:value>N_("HTTP/TLS server certificate")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CERT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This X.509 certicate file (PEM format) is used for server-side TLS. " "On OS X, the string is used as a label to search the certificate in the keychain." )</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HTTP_KEY_TEXT</name></cpp:macro> <cpp:value>N_("HTTP/TLS server private key")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This private key file (PEM format) is used for server-side TLS.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROXY_TEXT</name></cpp:macro> <cpp:value>N_("HTTP proxy")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROXY_LONGTEXT</name></cpp:macro> <cpp:value>N_( "HTTP proxy to be used It must be of the form " "http://[user@]myproxy.mydomain:myport/ ; " "if empty, the http_proxy environment variable will be tried." )</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROXY_PASS_TEXT</name></cpp:macro> <cpp:value>N_("HTTP proxy password")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROXY_PASS_LONGTEXT</name></cpp:macro> <cpp:value>N_( "If your HTTP proxy requires a password, set it here." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SOCKS_SERVER_TEXT</name></cpp:macro> <cpp:value>N_("SOCKS server")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SOCKS_SERVER_LONGTEXT</name></cpp:macro> <cpp:value>N_( "SOCKS proxy server to use. This must be of the form " "address:port. It will be used for all TCP connections" )</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SOCKS_USER_TEXT</name></cpp:macro> <cpp:value>N_("SOCKS user name")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SOCKS_USER_LONGTEXT</name></cpp:macro> <cpp:value>N_( "User name to be used for connection to the SOCKS proxy." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SOCKS_PASS_TEXT</name></cpp:macro> <cpp:value>N_("SOCKS password")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SOCKS_PASS_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Password to be used for connection to the SOCKS proxy." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>META_TITLE_TEXT</name></cpp:macro> <cpp:value>N_("Title metadata")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>META_TITLE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Allows you to specify a \"title\" metadata for an input.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>META_AUTHOR_TEXT</name></cpp:macro> <cpp:value>N_("Author metadata")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>META_AUTHOR_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Allows you to specify an \"author\" metadata for an input.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>META_ARTIST_TEXT</name></cpp:macro> <cpp:value>N_("Artist metadata")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>META_ARTIST_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Allows you to specify an \"artist\" metadata for an input.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>META_GENRE_TEXT</name></cpp:macro> <cpp:value>N_("Genre metadata")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>META_GENRE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Allows you to specify a \"genre\" metadata for an input.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>META_CPYR_TEXT</name></cpp:macro> <cpp:value>N_("Copyright metadata")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>META_CPYR_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Allows you to specify a \"copyright\" metadata for an input.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>META_DESCR_TEXT</name></cpp:macro> <cpp:value>N_("Description metadata")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>META_DESCR_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Allows you to specify a \"description\" metadata for an input.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>META_DATE_TEXT</name></cpp:macro> <cpp:value>N_("Date metadata")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>META_DATE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Allows you to specify a \"date\" metadata for an input.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>META_URL_TEXT</name></cpp:macro> <cpp:value>N_("URL metadata")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>META_URL_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Allows you to specify a \"url\" metadata for an input.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CODEC_CAT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This option can be used to alter the way VLC selects " "its codecs (decompression methods). Only advanced users should " "alter this option as it can break playback of all your streams." )</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CODEC_TEXT</name></cpp:macro> <cpp:value>N_("Preferred decoders list")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CODEC_LONGTEXT</name></cpp:macro> <cpp:value>N_( "List of codecs that VLC will use in " "priority. For instance, 'dummy,a52' will try the dummy and a52 codecs " "before trying the other ones. Only advanced users should " "alter this option as it can break playback of all your streams." )</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HW_DEC_TEXT</name></cpp:macro> <cpp:value>N_("Enable hardware decoders")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HW_DEC_LONGTEXT</name></cpp:macro> <cpp:value>N_( "VLC will fallback automatically to software decoders in case of " "hardware decoder failure." )</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ENCODER_TEXT</name></cpp:macro> <cpp:value>N_("Preferred encoders list")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ENCODER_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This allows you to select a list of encoders that VLC will use in " "priority.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEC_DEV_TEXT</name></cpp:macro> <cpp:value>N_("Preferred decoder hardware device")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEC_DEV_LONGTEXT</name></cpp:macro> <cpp:value>N_("This allows hardware decoding when available.")</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SOUT_CAT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "These options allow you to set default global options for the " "stream output subsystem." )</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SOUT_TEXT</name></cpp:macro> <cpp:value>N_("Default stream output chain")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SOUT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "You can enter here a default stream output chain. Refer to ""the documentation to learn how to build such chains. " "Warning: this chain will be enabled for all streams." )</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SOUT_ALL_TEXT</name></cpp:macro> <cpp:value>N_("Enable streaming of all ES")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SOUT_ALL_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Stream all elementary streams (video, audio and subtitles)")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SOUT_DISPLAY_TEXT</name></cpp:macro> <cpp:value>N_("Display while streaming")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SOUT_DISPLAY_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Play locally the stream while streaming it.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SOUT_VIDEO_TEXT</name></cpp:macro> <cpp:value>N_("Enable video stream output")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SOUT_VIDEO_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Choose whether the video stream should be redirected to " "the stream output facility when this last one is enabled.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SOUT_AUDIO_TEXT</name></cpp:macro> <cpp:value>N_("Enable audio stream output")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SOUT_AUDIO_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Choose whether the audio stream should be redirected to " "the stream output facility when this last one is enabled.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SOUT_SPU_TEXT</name></cpp:macro> <cpp:value>N_("Enable SPU stream output")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SOUT_SPU_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Choose whether the SPU streams should be redirected to " "the stream output facility when this last one is enabled.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SOUT_KEEP_TEXT</name></cpp:macro> <cpp:value>N_("Keep stream output open" )</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SOUT_KEEP_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This allows you to keep an unique stream output instance across " "multiple playlist item (automatically insert the gather stream output " "if not specified)" )</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SOUT_MUX_CACHING_TEXT</name></cpp:macro> <cpp:value>N_("Stream output muxer caching (ms)")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SOUT_MUX_CACHING_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This allow you to configure the initial caching amount for stream output " "muxer. This value should be set in milliseconds." )</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACKETIZER_TEXT</name></cpp:macro> <cpp:value>N_("Preferred packetizer list")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACKETIZER_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This allows you to select the order in which VLC will choose its " "packetizers." )</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MUX_TEXT</name></cpp:macro> <cpp:value>N_("Mux module")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MUX_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This is a legacy entry to let you configure mux modules")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ACCESS_OUTPUT_TEXT</name></cpp:macro> <cpp:value>N_("Access output module")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ACCESS_OUTPUT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This is a legacy entry to let you configure access output modules")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ANN_SAPCTRL_LONGTEXT</name></cpp:macro> <cpp:value>N_( "If this option is enabled, the flow on " "the SAP multicast address will be controlled. This is needed if you " "want to make announcements on the MBone." )</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ANN_SAPINTV_TEXT</name></cpp:macro> <cpp:value>N_("SAP announcement interval")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ANN_SAPINTV_LONGTEXT</name></cpp:macro> <cpp:value>N_( "When the SAP flow control is disabled, " "this lets you set the fixed interval between SAP announcements." )</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MISC_CAT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "These options allow you to select default modules. Leave these " "alone unless you really know what you are doing." )</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ACCESS_TEXT</name></cpp:macro> <cpp:value>N_("Access module")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ACCESS_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This allows you to force an access module. You can use it if " "the correct access is not automatically detected. You should not ""set this as a global option unless you really know what you are doing." )</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STREAM_FILTER_TEXT</name></cpp:macro> <cpp:value>N_("Stream filter module")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STREAM_FILTER_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Stream filters are used to modify the stream that is being read." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEMUX_FILTER_TEXT</name></cpp:macro> <cpp:value>N_("Demux filter module")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEMUX_FILTER_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Demux filters are used to modify/control the stream that is being read." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEMUX_TEXT</name></cpp:macro> <cpp:value>N_("Demux module")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEMUX_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Demultiplexers are used to separate the \"elementary\" streams " "(like audio and video streams). You can use it if " "the correct demuxer is not automatically detected. You should not ""set this as a global option unless you really know what you are doing." )</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VOD_SERVER_TEXT</name></cpp:macro> <cpp:value>N_("VoD server module")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VOD_SERVER_LONGTEXT</name></cpp:macro> <cpp:value>N_( "You can select which VoD server module you want to use. Set this " "to 'vod_rtsp' to switch back to the old, legacy module." )</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>USE_STREAM_IMMEDIATE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This option is useful if you want to lower the latency when " "reading a stream")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLM_CONF_TEXT</name></cpp:macro> <cpp:value>N_("VLM configuration file")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLM_CONF_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Read a VLM configuration file as soon as VLM is started." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLUGINS_CACHE_TEXT</name></cpp:macro> <cpp:value>N_("Use a plugins cache")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLUGINS_CACHE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Use a plugins cache which will greatly improve the startup time of VLC.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLUGINS_SCAN_TEXT</name></cpp:macro> <cpp:value>N_("Scan for new plugins")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLUGINS_SCAN_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Scan plugin directories for new plugins at startup. " "This increases the startup time of VLC.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEYSTORE_TEXT</name></cpp:macro> <cpp:value>N_("Preferred keystore list")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEYSTORE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "List of keystores that VLC will use in priority." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STATS_TEXT</name></cpp:macro> <cpp:value>N_("Locally collect statistics")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STATS_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Collect miscellaneous local statistics about the playing media.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONEINSTANCE_TEXT</name></cpp:macro> <cpp:value>N_("Allow only one running instance")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONEINSTANCE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Allowing only one running instance of VLC can sometimes be useful, " "for example if you associated VLC with some media types and you " "don't want a new instance of VLC to be opened each time you " "open a file in your file manager. This option will allow you " "to play the file with the already running instance or enqueue it.")</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STARTEDFROMFILE_TEXT</name></cpp:macro> <cpp:value>N_("VLC is started from file association")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STARTEDFROMFILE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Tell VLC that it is being launched due to a file association in the OS" )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONEINSTANCEWHENSTARTEDFROMFILE_TEXT</name></cpp:macro> <cpp:value>N_( "Use only one instance when started from file manager")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HPRIORITY_TEXT</name></cpp:macro> <cpp:value>N_("Increase the priority of the process")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HPRIORITY_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Increasing the priority of the process will very likely improve your " "playing experience as it allows VLC not to be disturbed by other " "applications that could otherwise take too much processor time. " "However be advised that in certain circumstances (bugs) VLC could take " "all the processor time and render the whole system unresponsive which " "might require a reboot of your machine.")</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CLOCK_SOURCE_TEXT</name></cpp:macro> <cpp:value>N_("Clock source")</cpp:value></cpp:define>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>clock_sources</name><index>[]</index></name> <init>= <expr><block>{
<expr><literal type="string">""</literal></expr>, <expr><literal type="string">"interrupt"</literal></expr>, <expr><literal type="string">"tick"</literal></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><name>VLC_WINSTORE_APP</name></expr></cpp:if>
<expr><literal type="string">"multimedia"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><literal type="string">"perf"</literal></expr>, <expr><literal type="string">"wall"</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>clock_sources_text</name><index>[]</index></name> <init>= <expr><block>{
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Auto"</literal></expr></argument>)</argument_list></call></expr>, <expr><literal type="string">"Interrupt time"</literal></expr>, <expr><literal type="string">"Windows time"</literal></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><name>VLC_WINSTORE_APP</name></expr></cpp:if>
<expr><literal type="string">"Multimedia timers"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><literal type="string">"Performance counters"</literal></expr>, <expr><literal type="string">"System time (DANGEROUS!)"</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLAYLISTENQUEUE_TEXT</name></cpp:macro> <cpp:value>N_( "Enqueue items into playlist in one instance mode")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLAYLISTENQUEUE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "When using the one instance only option, enqueue items to playlist " "and keep playing current item.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DBUS_TEXT</name></cpp:macro> <cpp:value>N_("Expose media player via D-Bus")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DBUS_LONGTEXT</name></cpp:macro> <cpp:value>N_("Allow other applications to control VLC " "using the D-Bus MPRIS protocol.")</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLAYLIST_CAT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "These options define the behavior of the playlist. Some " "of them can be overridden in the playlist dialog box." )</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PREPARSE_TEXT</name></cpp:macro> <cpp:value>N_( "Automatically preparse items")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PREPARSE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Automatically preparse items added to the playlist " "(to retrieve some metadata)." )</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PREPARSE_TIMEOUT_TEXT</name></cpp:macro> <cpp:value>N_( "Preparsing timeout" )</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PREPARSE_TIMEOUT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Maximum time allowed to preparse an item, in milliseconds" )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PREPARSE_THREADS_TEXT</name></cpp:macro> <cpp:value>N_( "Preparsing threads" )</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PREPARSE_THREADS_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Maximum number of threads used to preparse items" )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FETCH_ART_THREADS_TEXT</name></cpp:macro> <cpp:value>N_( "Fetch-art threads" )</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FETCH_ART_THREADS_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Maximum number of threads used to fetch art" )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>METADATA_NETWORK_TEXT</name></cpp:macro> <cpp:value>N_( "Allow metadata network access" )</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>psz_recursive_list</name><index>[]</index></name> <init>= <expr><block>{
<expr><literal type="string">"none"</literal></expr>, <expr><literal type="string">"collapse"</literal></expr>, <expr><literal type="string">"expand"</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>psz_recursive_list_text</name><index>[]</index></name> <init>= <expr><block>{
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"None"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Collapse"</literal></expr></argument>)</argument_list></call></expr>, <macro><name>N_</name><argument_list>(<argument><literal type="string">"Expand"</literal></argument>)</argument_list></macro> }</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RECURSIVE_TEXT</name></cpp:macro> <cpp:value>N_("Subdirectory behavior")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RECURSIVE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Select whether subdirectories must be expanded.\n" "none: subdirectories do not appear in the playlist.\n" "collapse: subdirectories appear but are expanded on first play.\n" "expand: all subdirectories are expanded.\n" )</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IGNORE_TEXT</name></cpp:macro> <cpp:value>N_("Ignored extensions")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IGNORE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Files with these extensions will not be added to playlist when " "opening a directory.\n" "This is useful if you add directories that contain playlist files " "for instance. Use a comma-separated list of extensions." )</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHOW_HIDDENFILES_TEXT</name></cpp:macro> <cpp:value>N_("Show hidden files")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHOW_HIDDENFILES_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Ignore files starting with '.'" )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SD_TEXT</name></cpp:macro> <cpp:value>N_( "Services discovery modules")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SD_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Specifies the services discovery modules to preload, separated by " "colons. Typical value is \"sap\"." )</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RANDOM_TEXT</name></cpp:macro> <cpp:value>N_("Play files randomly forever")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RANDOM_LONGTEXT</name></cpp:macro> <cpp:value>N_( "VLC will randomly play files in the playlist until interrupted.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LOOP_TEXT</name></cpp:macro> <cpp:value>N_("Repeat all")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LOOP_LONGTEXT</name></cpp:macro> <cpp:value>N_( "VLC will keep playing the playlist indefinitely." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REPEAT_TEXT</name></cpp:macro> <cpp:value>N_("Repeat current item")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REPEAT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "VLC will keep playing the current playlist item." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PAS_TEXT</name></cpp:macro> <cpp:value>N_("Play and stop")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PAS_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Stop the playlist after each played playlist item." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PAE_TEXT</name></cpp:macro> <cpp:value>N_("Play and exit")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PAE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Exit if there are no more items in the playlist." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PAP_TEXT</name></cpp:macro> <cpp:value>N_("Play and pause")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PAP_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Pause each item in the playlist on the last frame." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SP_TEXT</name></cpp:macro> <cpp:value>N_("Start paused")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SP_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Pause each item in the playlist on the first frame." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUTOSTART_TEXT</name></cpp:macro> <cpp:value>N_( "Auto start" )</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUTOSTART_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Automatically start playing the playlist " "content once it's loaded." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CORK_TEXT</name></cpp:macro> <cpp:value>N_("Pause on audio communication")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CORK_LONGTEXT</name></cpp:macro> <cpp:value>N_( "If pending audio communication is detected, playback will be paused " "automatically." )</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ML_TEXT</name></cpp:macro> <cpp:value>N_("Use media library")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ML_LONGTEXT</name></cpp:macro> <cpp:value>N_( "The media library is automatically saved and reloaded each time you " "start VLC." )</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLTREE_TEXT</name></cpp:macro> <cpp:value>N_("Display playlist tree")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLTREE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "The playlist can use a tree to categorize some items, like the " "contents of a directory." )</cpp:value></cpp:define>









<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HOTKEY_CAT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "These settings are the global VLC key " "bindings, known as \"hotkeys\"." )</cpp:value></cpp:define>


<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>mouse_wheel_values</name><index>[]</index></name> <init>= <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>mouse_wheel_texts</name><index>[]</index></name> <init>= <expr><block>{
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Ignore"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Volume control"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Position control"</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Position control reversed"</literal></expr></argument>)</argument_list></call></expr>,
}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOUSE_Y_WHEEL_MODE_TEXT</name></cpp:macro> <cpp:value>N_("Mouse wheel vertical axis control")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOUSE_Y_WHEEL_MODE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "The mouse wheel vertical (up/down) axis can control volume, " "position or be ignored.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOUSE_X_WHEEL_MODE_TEXT</name></cpp:macro> <cpp:value>N_("Mouse wheel horizontal axis control")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOUSE_X_WHEEL_MODE_LONGTEXT</name></cpp:macro> <cpp:value>N_( "The mouse wheel horizontal (left/right) axis can control volume, " "position or be ignored.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TOGGLE_FULLSCREEN_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Fullscreen")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TOGGLE_FULLSCREEN_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the hotkey to use to swap fullscreen state.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LEAVE_FULLSCREEN_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Exit fullscreen")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LEAVE_FULLSCREEN_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the hotkey to use to exit fullscreen state.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLAY_PAUSE_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Play/Pause")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLAY_PAUSE_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the hotkey to use to swap paused state.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PAUSE_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Pause only")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PAUSE_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the hotkey to use to pause.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLAY_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Play only")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLAY_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the hotkey to use to play.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FASTER_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Faster")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FASTER_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the hotkey to use for fast forward playback.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SLOWER_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Slower")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SLOWER_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the hotkey to use for slow motion playback.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RATE_NORMAL_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Normal rate")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RATE_NORMAL_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the hotkey to set the playback rate back to normal.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RATE_FASTER_FINE_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Faster (fine)")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RATE_FASTER_FINE_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the hotkey to use for fast forward playback.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RATE_SLOWER_FINE_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Slower (fine)")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RATE_SLOWER_FINE_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the hotkey to use for slow motion playback.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NEXT_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Next")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NEXT_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the hotkey to use to skip to the next item in the playlist.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PREV_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Previous")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PREV_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the hotkey to use to skip to the previous item in the playlist.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STOP_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Stop")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STOP_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the hotkey to stop playback.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>POSITION_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Position")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>POSITION_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the hotkey to display the position.")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JBEXTRASHORT_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Very short backwards jump")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JBEXTRASHORT_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the hotkey to make a very short backwards jump.")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JBSHORT_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Short backwards jump")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JBSHORT_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the hotkey to make a short backwards jump.")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JBMEDIUM_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Medium backwards jump")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JBMEDIUM_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the hotkey to make a medium backwards jump.")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JBLONG_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Long backwards jump")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JBLONG_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the hotkey to make a long backwards jump.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JFEXTRASHORT_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Very short forward jump")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JFEXTRASHORT_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the hotkey to make a very short forward jump.")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JFSHORT_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Short forward jump")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JFSHORT_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the hotkey to make a short forward jump.")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JFMEDIUM_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Medium forward jump")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JFMEDIUM_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the hotkey to make a medium forward jump.")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JFLONG_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Long forward jump")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JFLONG_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the hotkey to make a long forward jump.")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FRAME_NEXT_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Next frame")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FRAME_NEXT_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the hotkey to got to the next video frame.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JIEXTRASHORT_TEXT</name></cpp:macro> <cpp:value>N_("Very short jump length")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JIEXTRASHORT_LONGTEXT</name></cpp:macro> <cpp:value>N_("Very short jump length, in seconds.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JISHORT_TEXT</name></cpp:macro> <cpp:value>N_("Short jump length")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JISHORT_LONGTEXT</name></cpp:macro> <cpp:value>N_("Short jump length, in seconds.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JIMEDIUM_TEXT</name></cpp:macro> <cpp:value>N_("Medium jump length")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JIMEDIUM_LONGTEXT</name></cpp:macro> <cpp:value>N_("Medium jump length, in seconds.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JILONG_TEXT</name></cpp:macro> <cpp:value>N_("Long jump length")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JILONG_LONGTEXT</name></cpp:macro> <cpp:value>N_("Long jump length, in seconds.")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QUIT_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Quit")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QUIT_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the hotkey to quit the application.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NAV_UP_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Navigate up")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NAV_UP_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to move the selector up in DVD menus / Move viewpoint to up (pitch).")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NAV_DOWN_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Navigate down")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NAV_DOWN_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to move the selector down in DVD menus / Move viewpoint to down (pitch).")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NAV_LEFT_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Navigate left")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NAV_LEFT_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to move the selector left in DVD menus / Move viewpoint to left (yaw).")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NAV_RIGHT_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Navigate right")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NAV_RIGHT_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to move the selector right in DVD menus / Move viewpoint to right (yaw).")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NAV_ACTIVATE_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Activate")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NAV_ACTIVATE_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to activate selected item in DVD menus.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DISC_MENU_TEXT</name></cpp:macro> <cpp:value>N_("Go to the DVD menu")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DISC_MENU_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to take you to the DVD menu")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TITLE_PREV_TEXT</name></cpp:macro> <cpp:value>N_("Select previous DVD title")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TITLE_PREV_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to choose the previous title from the DVD")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TITLE_NEXT_TEXT</name></cpp:macro> <cpp:value>N_("Select next DVD title")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TITLE_NEXT_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to choose the next title from the DVD")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CHAPTER_PREV_TEXT</name></cpp:macro> <cpp:value>N_("Select prev DVD chapter")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CHAPTER_PREV_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to choose the previous chapter from the DVD")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CHAPTER_NEXT_TEXT</name></cpp:macro> <cpp:value>N_("Select next DVD chapter")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CHAPTER_NEXT_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to choose the next chapter from the DVD")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VOL_UP_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Volume up")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VOL_UP_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to increase audio volume.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VOL_DOWN_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Volume down")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VOL_DOWN_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to decrease audio volume.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VOL_MUTE_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Mute")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VOL_MUTE_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to mute audio.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBDELAY_UP_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Subtitle delay up")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBDELAY_UP_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to increase the subtitle delay.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBDELAY_DOWN_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Subtitle delay down")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBDELAY_DOWN_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to decrease the subtitle delay.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBTEXT_SCALE_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Reset subtitles text scale")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBTEXT_SCALEDOWN_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Scale up subtitles text")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBTEXT_SCALEUP_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Scale down subtitles text")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBTEXT_SCALE_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to change subtitles text scaling")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBSYNC_MARKAUDIO_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Subtitle sync / bookmark audio timestamp")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBSYNC_MARKAUDIO_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to bookmark audio timestamp when syncing subtitles.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBSYNC_MARKSUB_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Subtitle sync / bookmark subtitle timestamp")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBSYNC_MARKSUB_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to bookmark subtitle timestamp when syncing subtitles.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBSYNC_APPLY_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Subtitle sync / synchronize audio &amp; subtitle timestamps")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBSYNC_APPLY_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to synchronize bookmarked audio &amp; subtitle timestamps.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBSYNC_RESET_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Subtitle sync / reset audio &amp; subtitle synchronization")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBSYNC_RESET_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to reset synchronization of audio &amp; subtitle timestamps.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBPOS_UP_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Subtitle position up")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBPOS_UP_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to move subtitles higher.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBPOS_DOWN_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Subtitle position down")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBPOS_DOWN_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to move subtitles lower.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIODELAY_UP_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Audio delay up")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIODELAY_UP_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to increase the audio delay.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIODELAY_DOWN_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Audio delay down")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIODELAY_DOWN_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to decrease the audio delay.")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ZOOM_QUARTER_KEY_TEXT</name></cpp:macro> <cpp:value>N_("1:4 Quarter")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ZOOM_HALF_KEY_TEXT</name></cpp:macro> <cpp:value>N_("1:2 Half")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ZOOM_ORIGINAL_KEY_TEXT</name></cpp:macro> <cpp:value>N_("1:1 Original")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ZOOM_DOUBLE_KEY_TEXT</name></cpp:macro> <cpp:value>N_("2:1 Double")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLAY_BOOKMARK1_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Play playlist bookmark 1")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLAY_BOOKMARK2_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Play playlist bookmark 2")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLAY_BOOKMARK3_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Play playlist bookmark 3")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLAY_BOOKMARK4_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Play playlist bookmark 4")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLAY_BOOKMARK5_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Play playlist bookmark 5")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLAY_BOOKMARK6_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Play playlist bookmark 6")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLAY_BOOKMARK7_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Play playlist bookmark 7")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLAY_BOOKMARK8_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Play playlist bookmark 8")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLAY_BOOKMARK9_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Play playlist bookmark 9")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLAY_BOOKMARK10_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Play playlist bookmark 10")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLAY_BOOKMARK_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to play this bookmark.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SET_BOOKMARK1_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Set playlist bookmark 1")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SET_BOOKMARK2_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Set playlist bookmark 2")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SET_BOOKMARK3_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Set playlist bookmark 3")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SET_BOOKMARK4_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Set playlist bookmark 4")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SET_BOOKMARK5_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Set playlist bookmark 5")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SET_BOOKMARK6_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Set playlist bookmark 6")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SET_BOOKMARK7_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Set playlist bookmark 7")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SET_BOOKMARK8_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Set playlist bookmark 8")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SET_BOOKMARK9_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Set playlist bookmark 9")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SET_BOOKMARK10_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Set playlist bookmark 10")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SET_BOOKMARK_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to set this playlist bookmark.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLAY_CLEAR_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Clear the playlist")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLAY_CLEAR_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Select the key to clear the current playlist.")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BOOKMARK1_TEXT</name></cpp:macro> <cpp:value>N_("Playlist bookmark 1")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BOOKMARK2_TEXT</name></cpp:macro> <cpp:value>N_("Playlist bookmark 2")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BOOKMARK3_TEXT</name></cpp:macro> <cpp:value>N_("Playlist bookmark 3")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BOOKMARK4_TEXT</name></cpp:macro> <cpp:value>N_("Playlist bookmark 4")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BOOKMARK5_TEXT</name></cpp:macro> <cpp:value>N_("Playlist bookmark 5")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BOOKMARK6_TEXT</name></cpp:macro> <cpp:value>N_("Playlist bookmark 6")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BOOKMARK7_TEXT</name></cpp:macro> <cpp:value>N_("Playlist bookmark 7")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BOOKMARK8_TEXT</name></cpp:macro> <cpp:value>N_("Playlist bookmark 8")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BOOKMARK9_TEXT</name></cpp:macro> <cpp:value>N_("Playlist bookmark 9")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BOOKMARK10_TEXT</name></cpp:macro> <cpp:value>N_("Playlist bookmark 10")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BOOKMARK_LONGTEXT</name></cpp:macro> <cpp:value>N_( "This allows you to define playlist bookmarks.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIO_TRACK_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Cycle audio track")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIO_TRACK_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Cycle through the available audio tracks(languages).")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBTITLE_REVERSE_TRACK_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Cycle subtitle track in reverse order")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBTITLE_REVERSE_TRACK_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Cycle through the available subtitle tracks in reverse order.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBTITLE_TRACK_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Cycle subtitle track")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBTITLE_TRACK_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Cycle through the available subtitle tracks.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBTITLE_TOGGLE_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Toggle subtitles")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBTITLE_TOGGLE_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Toggle subtitle track visibility.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBTITLE_CONTROL_SECONDARY_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Toggle secondary subtitle control")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBTITLE_CONTROL_SECONDARY_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Use original subtitle controls to manage secondary subtitles.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROGRAM_SID_NEXT_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Cycle next program Service ID")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROGRAM_SID_NEXT_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Cycle through the available next program Service IDs (SIDs).")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROGRAM_SID_PREV_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Cycle previous program Service ID")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROGRAM_SID_PREV_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Cycle through the available previous program Service IDs (SIDs).")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASPECT_RATIO_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Cycle source aspect ratio")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASPECT_RATIO_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Cycle through a predefined list of source aspect ratios.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CROP_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Cycle video crop")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CROP_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Cycle through a predefined list of crop formats.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TOGGLE_AUTOSCALE_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Toggle autoscaling")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TOGGLE_AUTOSCALE_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Activate or deactivate autoscaling.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCALE_UP_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Increase scale factor")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCALE_UP_KEY_LONGTEXT</name></cpp:macro> <cpp:value>SCALE_UP_KEY_TEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCALE_DOWN_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Decrease scale factor")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCALE_DOWN_KEY_LONGTEXT</name></cpp:macro> <cpp:value>SCALE_DOWN_KEY_TEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEINTERLACE_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Toggle deinterlacing")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEINTERLACE_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Activate or deactivate deinterlacing.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEINTERLACE_MODE_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Cycle deinterlace modes")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEINTERLACE_MODE_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Cycle through available deinterlace modes.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INTF_TOGGLE_FSC_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Show controller in fullscreen")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INTF_BOSS_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Boss key")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INTF_BOSS_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Hide the interface and pause playback.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INTF_POPUP_MENU_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Context menu")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INTF_POPUP_MENU_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Show the contextual popup menu.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SNAP_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Take video snapshot")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SNAP_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Takes a video snapshot and writes it to disk.")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RECORD_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Record")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RECORD_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Record access filter start/stop.")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LOOP_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Normal/Loop/Repeat")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LOOP_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Toggle Normal/Loop/Repeat playlist modes")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RANDOM_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Random")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RANDOM_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Toggle random playlist playback")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ZOOM_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Zoom")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ZOOM_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Zoom")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>UNZOOM_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Un-Zoom")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>UNZOOM_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Un-Zoom")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CROP_TOP_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Crop one pixel from the top of the video")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CROP_TOP_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Crop one pixel from the top of the video")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>UNCROP_TOP_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Uncrop one pixel from the top of the video")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>UNCROP_TOP_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Uncrop one pixel from the top of the video")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CROP_LEFT_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Crop one pixel from the left of the video")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CROP_LEFT_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Crop one pixel from the left of the video")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>UNCROP_LEFT_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Uncrop one pixel from the left of the video")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>UNCROP_LEFT_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Uncrop one pixel from the left of the video")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CROP_BOTTOM_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Crop one pixel from the bottom of the video")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CROP_BOTTOM_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Crop one pixel from the bottom of the video")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>UNCROP_BOTTOM_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Uncrop one pixel from the bottom of the video")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>UNCROP_BOTTOM_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Uncrop one pixel from the bottom of the video")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CROP_RIGHT_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Crop one pixel from the right of the video")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CROP_RIGHT_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Crop one pixel from the right of the video")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>UNCROP_RIGHT_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Uncrop one pixel from the right of the video")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>UNCROP_RIGHT_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Uncrop one pixel from the right of the video")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VIEWPOINT_FOV_IN_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Shrink the viewpoint field of view (360Â°)")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VIEWPOINT_FOV_OUT_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Expand the viewpoint field of view (360Â°)")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VIEWPOINT_ROLL_CLOCK_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Roll the viewpoint clockwise (360Â°)")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VIEWPOINT_ROLL_ANTICLOCK_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Roll the viewpoint anti-clockwise (360Â°)")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WALLPAPER_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Toggle wallpaper mode in video output")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WALLPAPER_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Toggle wallpaper mode in video output." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIO_DEVICE_CYCLE_KEY_TEXT</name></cpp:macro> <cpp:value>N_("Cycle through audio devices")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AUDIO_DEVICE_CYCLE_KEY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Cycle through available audio devices")</cpp:value></cpp:define>


















<macro><name>vlc_module_begin</name> <argument_list>()</argument_list></macro>

<macro><name>set_category</name><argument_list>( <argument>CAT_AUDIO</argument> )</argument_list></macro>
<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_AUDIO_GENERAL</argument> )</argument_list></macro>
<macro><name>add_category_hint</name><argument_list>(<argument>N_(<literal type="string">"Audio"</literal>)</argument>, <argument>AOUT_CAT_LONGTEXT</argument>)</argument_list></macro>

<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"audio"</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>AUDIO_TEXT</argument>, <argument>AUDIO_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_float</name><argument_list>( <argument><literal type="string">"gain"</literal></argument>, <argument><literal type="number">1.</literal></argument>, <argument>GAIN_TEXT</argument>, <argument>GAIN_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_float_range</name><argument_list>( <argument><literal type="number">0.</literal></argument>, <argument><literal type="number">8.</literal></argument> )</argument_list></macro>
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"volume"</literal></argument> )</argument_list></macro> 
<macro><name>add_float</name><argument_list>( <argument><literal type="string">"volume-step"</literal></argument>, <argument>AOUT_VOLUME_STEP</argument>, <argument>VOLUME_STEP_TEXT</argument>,
<argument>VOLUME_STEP_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_float_range</name><argument_list>( <argument><literal type="number">1.</literal></argument>, <argument>AOUT_VOLUME_DEFAULT</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"volume-save"</literal></argument>, <argument>true</argument>, <argument>VOLUME_SAVE_TEXT</argument>, <argument>VOLUME_SAVE_TEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"aout-rate"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_bool</name><argument_list>( <argument><literal type="string">"hq-resampling"</literal></argument> )</argument_list></macro> 
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__ANDROID__</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>__APPLE__</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"spdif"</literal></argument>, <argument>false</argument>, <argument>SPDIF_TEXT</argument>, <argument>SPDIF_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<macro><name>add_obsolete_bool</name><argument_list>(<argument><literal type="string">"spdif"</literal></argument>)</argument_list></macro> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"force-dolby-surround"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>FORCE_DOLBY_TEXT</argument>,
<argument>FORCE_DOLBY_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_integer_list</name><argument_list>( <argument>pi_force_dolby_values</argument>, <argument>ppsz_force_dolby_descriptions</argument> )</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"stereo-mode"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>STEREO_MODE_TEXT</argument>, <argument>STEREO_MODE_TEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_integer_list</name><argument_list>( <argument>pi_stereo_mode_values</argument>, <argument>ppsz_stereo_mode_texts</argument> )</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"audio-desync"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>DESYNC_TEXT</argument>,
<argument>DESYNC_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>


<macro><name>add_string</name><argument_list>( <argument><literal type="string">"audio-replay-gain-mode"</literal></argument>, <argument>ppsz_replay_gain_mode[<literal type="number">0</literal>]</argument>, <argument>AUDIO_REPLAY_GAIN_MODE_TEXT</argument>,
<argument>AUDIO_REPLAY_GAIN_MODE_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_string_list</name><argument_list>( <argument>ppsz_replay_gain_mode</argument>, <argument>ppsz_replay_gain_mode_text</argument> )</argument_list></macro>
<macro><name>add_float</name><argument_list>( <argument><literal type="string">"audio-replay-gain-preamp"</literal></argument>, <argument><literal type="number">0.0</literal></argument>,
<argument>AUDIO_REPLAY_GAIN_PREAMP_TEXT</argument>, <argument>AUDIO_REPLAY_GAIN_PREAMP_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_float</name><argument_list>( <argument><literal type="string">"audio-replay-gain-default"</literal></argument>, <argument>-<literal type="number">7.0</literal></argument>,
<argument>AUDIO_REPLAY_GAIN_DEFAULT_TEXT</argument>, <argument>AUDIO_REPLAY_GAIN_DEFAULT_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"audio-replay-gain-peak-protection"</literal></argument>, <argument>true</argument>,
<argument>AUDIO_REPLAY_GAIN_PEAK_PROTECTION_TEXT</argument>, <argument>AUDIO_REPLAY_GAIN_PEAK_PROTECTION_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>

<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"audio-time-stretch"</literal></argument>, <argument>true</argument>,
<argument>AUDIO_TIME_STRETCH_TEXT</argument>, <argument>AUDIO_TIME_STRETCH_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_AUDIO_AOUT</argument> )</argument_list></macro>
<macro><name>add_module</name><argument_list>(<argument><literal type="string">"aout"</literal></argument>, <argument><literal type="string">"audio output"</literal></argument>, <argument>NULL</argument>, <argument>AOUT_TEXT</argument>, <argument>AOUT_LONGTEXT</argument>)</argument_list></macro>
<macro><name>change_short</name><argument_list>(<argument><literal type="char">'A'</literal></argument>)</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"role"</literal></argument>, <argument><literal type="string">"video"</literal></argument>, <argument>ROLE_TEXT</argument>, <argument>ROLE_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_string_list</name><argument_list>( <argument>ppsz_roles</argument>, <argument>ppsz_roles_text</argument> )</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_AUDIO_AFILTER</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"audio-bitexact"</literal></argument>, <argument>false</argument>, <argument>AUDIO_BITEXACT_TEXT</argument>,
<argument>AUDIO_BITEXACT_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_module_list</name><argument_list>(<argument><literal type="string">"audio-filter"</literal></argument>, <argument><literal type="string">"audio filter"</literal></argument>, <argument>NULL</argument>,
<argument>AUDIO_FILTER_TEXT</argument>, <argument>AUDIO_FILTER_LONGTEXT</argument>)</argument_list></macro>
<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_AUDIO_VISUAL</argument> )</argument_list></macro>
<macro><name>add_module</name><argument_list>(<argument><literal type="string">"audio-visual"</literal></argument>, <argument><literal type="string">"visualization"</literal></argument>, <argument><literal type="string">"none"</literal></argument>,
<argument>AUDIO_VISUAL_TEXT</argument>, <argument>AUDIO_VISUAL_LONGTEXT</argument>)</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_AUDIO_RESAMPLER</argument> )</argument_list></macro>
<macro><name>add_module</name><argument_list>(<argument><literal type="string">"audio-resampler"</literal></argument>, <argument><literal type="string">"audio resampler"</literal></argument>, <argument>NULL</argument>,
<argument>AUDIO_RESAMPLER_TEXT</argument>, <argument>AUDIO_RESAMPLER_LONGTEXT</argument>)</argument_list></macro>



<macro><name>set_category</name><argument_list>( <argument>CAT_VIDEO</argument> )</argument_list></macro>
<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_VIDEO_GENERAL</argument> )</argument_list></macro>
<macro><name>add_category_hint</name><argument_list>(<argument>N_(<literal type="string">"Video"</literal>)</argument>, <argument>VOUT_CAT_LONGTEXT</argument>)</argument_list></macro>

<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"video"</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>VIDEO_TEXT</argument>, <argument>VIDEO_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"grayscale"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>GRAYSCALE_TEXT</argument>,
<argument>GRAYSCALE_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"fullscreen"</literal></argument>, <argument>false</argument>, <argument>FULLSCREEN_TEXT</argument>, <argument>FULLSCREEN_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_short</name><argument_list>(<argument><literal type="char">'f'</literal></argument>)</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"embedded-video"</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>EMBEDDED_TEXT</argument>, <argument>EMBEDDED_LONGTEXT</argument>,
<argument>true</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"xlib"</literal></argument>, <argument>true</argument>, <argument><literal type="string">""</literal></argument>, <argument><literal type="string">""</literal></argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_private</name> <argument_list>()</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"drop-late-frames"</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>DROP_LATE_FRAMES_TEXT</argument>,
<argument>DROP_LATE_FRAMES_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>

<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"skip-frames"</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>SKIP_FRAMES_TEXT</argument>,
<argument>SKIP_FRAMES_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"quiet-synchro"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>QUIET_SYNCHRO_TEXT</argument>,
<argument>QUIET_SYNCHRO_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"keyboard-events"</literal></argument>, <argument>true</argument>, <argument>KEYBOARD_EVENTS_TEXT</argument>,
<argument>KEYBOARD_EVENTS_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"mouse-events"</literal></argument>, <argument>true</argument>, <argument>MOUSE_EVENTS_TEXT</argument>,
<argument>MOUSE_EVENTS_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"vout-event"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"x11-event"</literal></argument> )</argument_list></macro> 
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"video-on-top"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>VIDEO_ON_TOP_TEXT</argument>,
<argument>VIDEO_ON_TOP_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"video-wallpaper"</literal></argument>, <argument>false</argument>, <argument>WALLPAPER_TEXT</argument>,
<argument>WALLPAPER_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_integer</name><argument_list>(<argument><literal type="string">"disable-screensaver"</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>SS_TEXT</argument>, <argument>SS_LONGTEXT</argument>, <argument>true</argument>)</argument_list></macro>
<macro><name>change_integer_list</name><argument_list>(<argument>screensaver_values</argument>, <argument>screensaver_texts</argument>)</argument_list></macro>

<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"video-title-show"</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>VIDEO_TITLE_SHOW_TEXT</argument>,
<argument>VIDEO_TITLE_SHOW_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_safe</name><argument_list>()</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"video-title-timeout"</literal></argument>, <argument><literal type="number">5000</literal></argument>, <argument>VIDEO_TITLE_TIMEOUT_TEXT</argument>,
<argument>VIDEO_TITLE_TIMEOUT_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_safe</name><argument_list>()</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"video-title-position"</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument>VIDEO_TITLE_POSITION_TEXT</argument>,
<argument>VIDEO_TITLE_POSITION_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_safe</name><argument_list>()</argument_list></macro>
<macro><name>change_integer_list</name><argument_list>( <argument>pi_pos_values</argument>, <argument>ppsz_pos_descriptions</argument> )</argument_list></macro>

<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"mouse-hide-timeout"</literal></argument>, <argument><literal type="number">1000</literal></argument>, <argument>MOUSE_HIDE_TIMEOUT_TEXT</argument>,
<argument>MOUSE_HIDE_TIMEOUT_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>set_section</name><argument_list>( <argument>N_(<literal type="string">"Snapshot"</literal>)</argument> , <argument>NULL</argument> )</argument_list></macro>
<macro><name>add_directory</name><argument_list>(<argument><literal type="string">"snapshot-path"</literal></argument>, <argument>NULL</argument>, <argument>SNAP_PATH_TEXT</argument>, <argument>SNAP_PATH_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"snapshot-prefix"</literal></argument>, <argument><literal type="string">"vlcsnap-"</literal></argument>, <argument>SNAP_PREFIX_TEXT</argument>,
<argument>SNAP_PREFIX_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"snapshot-format"</literal></argument>, <argument><literal type="string">"png"</literal></argument>, <argument>SNAP_FORMAT_TEXT</argument>,
<argument>SNAP_FORMAT_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_string_list</name><argument_list>( <argument>ppsz_snap_formats</argument>, <argument>ppsz_snap_formats</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"snapshot-preview"</literal></argument>, <argument>true</argument>, <argument>SNAP_PREVIEW_TEXT</argument>,
<argument>SNAP_PREVIEW_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"snapshot-sequential"</literal></argument>, <argument>false</argument>, <argument>SNAP_SEQUENTIAL_TEXT</argument>,
<argument>SNAP_SEQUENTIAL_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"snapshot-width"</literal></argument>, <argument>-<literal type="number">1</literal></argument>, <argument>SNAP_WIDTH_TEXT</argument>,
<argument>SNAP_WIDTH_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"snapshot-height"</literal></argument>, <argument>-<literal type="number">1</literal></argument>, <argument>SNAP_HEIGHT_TEXT</argument>,
<argument>SNAP_HEIGHT_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>

<macro><name>set_section</name><argument_list>( <argument>N_(<literal type="string">"Window properties"</literal> )</argument>, <argument>NULL</argument> )</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"width"</literal></argument>, <argument>-<literal type="number">1</literal></argument>, <argument>WIDTH_TEXT</argument>, <argument>WIDTH_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"height"</literal></argument>, <argument>-<literal type="number">1</literal></argument>, <argument>HEIGHT_TEXT</argument>, <argument>HEIGHT_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__APPLE__</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"video-x"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>VIDEOX_TEXT</argument>, <argument>VIDEOX_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"video-y"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>VIDEOY_TEXT</argument>, <argument>VIDEOY_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"crop"</literal></argument>, <argument>NULL</argument>, <argument>CROP_TEXT</argument>, <argument>CROP_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"custom-crop-ratios"</literal></argument>, <argument>NULL</argument>, <argument>CUSTOM_CROP_RATIOS_TEXT</argument>,
<argument>CUSTOM_CROP_RATIOS_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"aspect-ratio"</literal></argument>, <argument>NULL</argument>,
<argument>ASPECT_RATIO_TEXT</argument>, <argument>ASPECT_RATIO_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"autoscale"</literal></argument>, <argument>true</argument>, <argument>AUTOSCALE_TEXT</argument>, <argument>AUTOSCALE_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_obsolete_float</name><argument_list>( <argument><literal type="string">"scale"</literal></argument> )</argument_list></macro> 
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"monitor-par"</literal></argument>, <argument>NULL</argument>,
<argument>MASPECT_RATIO_TEXT</argument>, <argument>MASPECT_RATIO_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"custom-aspect-ratios"</literal></argument>, <argument>NULL</argument>, <argument>CUSTOM_ASPECT_RATIOS_TEXT</argument>,
<argument>CUSTOM_ASPECT_RATIOS_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"hdtv-fix"</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>HDTV_FIX_TEXT</argument>, <argument>HDTV_FIX_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"video-deco"</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>VIDEO_DECO_TEXT</argument>,
<argument>VIDEO_DECO_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"video-title"</literal></argument>, <argument>NULL</argument>, <argument>VIDEO_TITLE_TEXT</argument>,
<argument>VIDEO_TITLE_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"align"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>ALIGN_TEXT</argument>, <argument>ALIGN_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_integer_list</name><argument_list>( <argument>pi_align_values</argument>, <argument>ppsz_align_descriptions</argument> )</argument_list></macro>
<macro><name>add_float</name><argument_list>( <argument><literal type="string">"zoom"</literal></argument>, <argument><literal type="number">1.</literal></argument>, <argument>ZOOM_TEXT</argument>, <argument>ZOOM_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name><argument_list>()</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"deinterlace"</literal></argument>, <argument>-<literal type="number">1</literal></argument>,
<argument>DEINTERLACE_TEXT</argument>, <argument>DEINTERLACE_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_integer_list</name><argument_list>( <argument>pi_deinterlace</argument>, <argument>ppsz_deinterlace_text</argument> )</argument_list></macro>
<macro><name>change_safe</name><argument_list>()</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"deinterlace-mode"</literal></argument>, <argument><literal type="string">"auto"</literal></argument>,
<argument>DEINTERLACE_MODE_TEXT</argument>, <argument>DEINTERLACE_MODE_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_string_list</name><argument_list>( <argument>ppsz_deinterlace_mode</argument>, <argument>ppsz_deinterlace_mode_text</argument> )</argument_list></macro>
<macro><name>change_safe</name><argument_list>()</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_VIDEO_VOUT</argument> )</argument_list></macro>
<macro><name>add_module</name><argument_list>(<argument><literal type="string">"vout"</literal></argument>, <argument><literal type="string">"vout display"</literal></argument>, <argument>NULL</argument>, <argument>VOUT_TEXT</argument>, <argument>VOUT_LONGTEXT</argument>)</argument_list></macro>
<macro><name>change_short</name><argument_list>(<argument><literal type="char">'V'</literal></argument>)</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_VIDEO_VFILTER</argument> )</argument_list></macro>
<macro><name>add_module_list</name><argument_list>(<argument><literal type="string">"video-filter"</literal></argument>, <argument><literal type="string">"video filter"</literal></argument>, <argument>NULL</argument>,
<argument>VIDEO_FILTER_TEXT</argument>, <argument>VIDEO_FILTER_LONGTEXT</argument>)</argument_list></macro>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>
add_string( "pixel-ratio", "1", PIXEL_RATIO_TEXT, PIXEL_RATIO_TEXT )
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_VIDEO_SUBPIC</argument> )</argument_list></macro>
<macro><name>set_section</name><argument_list>( <argument>N_(<literal type="string">"On Screen Display"</literal>)</argument> , <argument>NULL</argument> )</argument_list></macro>
<macro><name>add_category_hint</name><argument_list>(<argument>N_(<literal type="string">"Subpictures"</literal>)</argument>, <argument>SUB_CAT_LONGTEXT</argument>)</argument_list></macro>

<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"spu"</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>SPU_TEXT</argument>, <argument>SPU_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"osd"</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>OSD_TEXT</argument>, <argument>OSD_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_module</name><argument_list>(<argument><literal type="string">"text-renderer"</literal></argument>, <argument><literal type="string">"text renderer"</literal></argument>, <argument>NULL</argument>,
<argument>TEXTRENDERER_TEXT</argument>, <argument>TEXTRENDERER_LONGTEXT</argument>)</argument_list></macro>

<macro><name>set_section</name><argument_list>( <argument>N_(<literal type="string">"Subtitles"</literal>)</argument> , <argument>NULL</argument> )</argument_list></macro>
<macro><name>add_float</name><argument_list>( <argument><literal type="string">"sub-fps"</literal></argument>, <argument><literal type="number">0.0</literal></argument>, <argument>SUB_FPS_TEXT</argument>, <argument>SUB_FPS_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"sub-delay"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>SUB_DELAY_TEXT</argument>, <argument>SUB_DELAY_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_loadfile</name><argument_list>(<argument><literal type="string">"sub-file"</literal></argument>, <argument>NULL</argument>, <argument>SUB_FILE_TEXT</argument>, <argument>SUB_FILE_LONGTEXT</argument>)</argument_list></macro>
<macro><name>change_safe</name><argument_list>()</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"sub-autodetect-file"</literal></argument>, <argument>true</argument>,
<argument>SUB_AUTO_TEXT</argument>, <argument>SUB_AUTO_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"sub-autodetect-fuzzy"</literal></argument>, <argument><literal type="number">3</literal></argument>,
<argument>SUB_FUZZY_TEXT</argument>, <argument>SUB_FUZZY_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>( <argument><expr><name>_WIN32</name></expr></argument> )</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>( <argument><expr><name>__OS2__</name></expr></argument> )</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUB_PATH</name></cpp:macro> <cpp:value>".\\subtitles, .\\subs"</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUB_PATH</name></cpp:macro> <cpp:value>"./Subtitles, ./subtitles, ./Subs, ./subs"</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"sub-autodetect-path"</literal></argument>, <argument>SUB_PATH</argument>,
<argument>SUB_PATH_TEXT</argument>, <argument>SUB_PATH_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"sub-margin"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>SUB_MARGIN_TEXT</argument>,
<argument>SUB_MARGIN_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_integer_with_range</name><argument_list>( <argument><literal type="string">"sub-text-scale"</literal></argument>, <argument><literal type="number">100</literal></argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">500</literal></argument>,
<argument>SUB_TEXT_SCALE_TEXT</argument>, <argument>SUB_TEXT_SCALE_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>set_section</name><argument_list>( <argument>N_( <literal type="string">"Overlays"</literal> )</argument> , <argument>NULL</argument> )</argument_list></macro>
<macro><name>add_module_list</name><argument_list>(<argument><literal type="string">"sub-source"</literal></argument>, <argument><literal type="string">"sub source"</literal></argument>, <argument>NULL</argument>,
<argument>SUB_SOURCE_TEXT</argument>, <argument>SUB_SOURCE_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_module_list</name><argument_list>(<argument><literal type="string">"sub-filter"</literal></argument>, <argument><literal type="string">"sub filter"</literal></argument>, <argument>NULL</argument>,
<argument>SUB_FILTER_TEXT</argument>, <argument>SUB_FILTER_LONGTEXT</argument>)</argument_list></macro>

<macro><name>set_section</name><argument_list>( <argument>N_( <literal type="string">"Multiple Subtitles"</literal> )</argument> , <argument>NULL</argument> )</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"secondary-sub-alignment"</literal></argument>, <argument>-<literal type="number">1</literal></argument>, <argument>SECONDARY_SUB_POSITION_TEXT</argument>,
<argument>SECONDARY_SUB_POSITION_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_integer_list</name><argument_list>( <argument>pi_sub_align_values</argument>, <argument>ppsz_sub_align_descriptions</argument> )</argument_list></macro>


<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"secondary-sub-margin"</literal></argument>, <argument><literal type="number">100</literal></argument>, <argument>SECONDARY_SUB_MARGIN_TEXT</argument>,
<argument>SECONDARY_SUB_MARGIN_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>


<macro><name>set_category</name><argument_list>( <argument>CAT_INPUT</argument> )</argument_list></macro>
<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_INPUT_GENERAL</argument> )</argument_list></macro>

<macro><name>set_section</name><argument_list>( <argument>N_( <literal type="string">"Track settings"</literal> )</argument>, <argument>NULL</argument> )</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"program"</literal></argument>, <argument><literal type="number">0</literal></argument>,
<argument>INPUT_PROGRAM_TEXT</argument>, <argument>INPUT_PROGRAM_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"programs"</literal></argument>, <argument><literal type="string">""</literal></argument>,
<argument>INPUT_PROGRAMS_TEXT</argument>, <argument>INPUT_PROGRAMS_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"video-track"</literal></argument>, <argument>-<literal type="number">1</literal></argument>,
<argument>INPUT_VIDEOTRACK_TEXT</argument>, <argument>INPUT_VIDEOTRACK_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"audio-track"</literal></argument>, <argument>-<literal type="number">1</literal></argument>,
<argument>INPUT_AUDIOTRACK_TEXT</argument>, <argument>INPUT_AUDIOTRACK_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"sub-track"</literal></argument>, <argument>-<literal type="number">1</literal></argument>,
<argument>INPUT_SUBTRACK_TEXT</argument>, <argument>INPUT_SUBTRACK_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"audio-language"</literal></argument>, <argument><literal type="string">""</literal></argument>,
<argument>INPUT_AUDIOTRACK_LANG_TEXT</argument>, <argument>INPUT_AUDIOTRACK_LANG_LONGTEXT</argument>,
<argument>false</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"sub-language"</literal></argument>, <argument><literal type="string">""</literal></argument>,
<argument>INPUT_SUBTRACK_LANG_TEXT</argument>, <argument>INPUT_SUBTRACK_LANG_LONGTEXT</argument>,
<argument>false</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"menu-language"</literal></argument>, <argument><literal type="string">""</literal></argument>,
<argument>INPUT_MENUTRACK_LANG_TEXT</argument>, <argument>INPUT_MENUTRACK_LANG_LONGTEXT</argument>,
<argument>false</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"video-track-id"</literal></argument>, <argument>NULL</argument>, <argument>INPUT_VIDEOTRACK_ID_TEXT</argument>,
<argument>INPUT_VIDEOTRACK_ID_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"audio-track-id"</literal></argument>, <argument>NULL</argument>, <argument>INPUT_AUDIOTRACK_ID_TEXT</argument>,
<argument>INPUT_AUDIOTRACK_ID_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"sub-track-id"</literal></argument>, <argument>NULL</argument>,
<argument>INPUT_SUBTRACK_ID_TEXT</argument>, <argument>INPUT_SUBTRACK_ID_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"captions"</literal></argument>, <argument><literal type="number">608</literal></argument>,
<argument>INPUT_CAPTIONS_TEXT</argument>, <argument>INPUT_CAPTIONS_TEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_integer_list</name><argument_list>( <argument>pi_captions</argument>, <argument>ppsz_captions</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"preferred-resolution"</literal></argument>, <argument>-<literal type="number">1</literal></argument>, <argument>INPUT_PREFERREDRESOLUTION_TEXT</argument>,
<argument>INPUT_PREFERREDRESOLUTION_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>change_integer_list</name><argument_list>( <argument>pi_prefres</argument>, <argument>ppsz_prefres</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"low-delay"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>INPUT_LOWDELAY_TEXT</argument>,
<argument>INPUT_LOWDELAY_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>

<macro><name>set_section</name><argument_list>( <argument>N_( <literal type="string">"Playback control"</literal> )</argument> , <argument>NULL</argument>)</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"input-repeat"</literal></argument>, <argument><literal type="number">0</literal></argument>,
<argument>INPUT_REPEAT_TEXT</argument>, <argument>INPUT_REPEAT_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_integer_range</name><argument_list>( <argument><literal type="number">0</literal></argument>, <argument><literal type="number">65535</literal></argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_float</name><argument_list>( <argument><literal type="string">"start-time"</literal></argument>, <argument><literal type="number">0</literal></argument>,
<argument>START_TIME_TEXT</argument>, <argument>START_TIME_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_float</name><argument_list>( <argument><literal type="string">"stop-time"</literal></argument>, <argument><literal type="number">0</literal></argument>,
<argument>STOP_TIME_TEXT</argument>, <argument>STOP_TIME_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_float</name><argument_list>( <argument><literal type="string">"run-time"</literal></argument>, <argument><literal type="number">0</literal></argument>,
<argument>RUN_TIME_TEXT</argument>, <argument>RUN_TIME_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"input-fast-seek"</literal></argument>, <argument>false</argument>,
<argument>INPUT_FAST_SEEK_TEXT</argument>, <argument>INPUT_FAST_SEEK_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>
<macro><name>add_float</name><argument_list>( <argument><literal type="string">"rate"</literal></argument>, <argument><literal type="number">1.</literal></argument>,
<argument>INPUT_RATE_TEXT</argument>, <argument>INPUT_RATE_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>

<macro><name>add_string</name><argument_list>( <argument><literal type="string">"input-list"</literal></argument>, <argument>NULL</argument>,
<argument>INPUT_LIST_TEXT</argument>, <argument>INPUT_LIST_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"input-slave"</literal></argument>, <argument>NULL</argument>,
<argument>INPUT_SLAVE_TEXT</argument>, <argument>INPUT_SLAVE_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>

<macro><name>add_string</name><argument_list>( <argument><literal type="string">"bookmarks"</literal></argument>, <argument>NULL</argument>,
<argument>BOOKMARKS_TEXT</argument>, <argument>BOOKMARKS_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name> <argument_list>()</argument_list></macro>

<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"restore-playback-pos"</literal></argument>, <argument>VLC_PLAYER_RESTORE_PLAYBACK_POS_ASK</argument>,
<argument>RESTORE_PLAYBACK_POS_TEXT</argument>, <argument>RESTORE_PLAYBACK_POS_TEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"restore-playback-states"</literal></argument>, <argument>false</argument>,
<argument>RESTORE_PLAYBACK_STATE_TEXT</argument>, <argument>RESTORE_PLAYBACK_STATE_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>

<macro><name>set_section</name><argument_list>( <argument>N_( <literal type="string">"Default devices"</literal>)</argument> , <argument>NULL</argument> )</argument_list></macro>

<macro><name>add_loadfile</name><argument_list>(<argument><literal type="string">"dvd"</literal></argument>, <argument>DVD_DEVICE</argument>, <argument>DVD_DEV_TEXT</argument>, <argument>DVD_DEV_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_loadfile</name><argument_list>(<argument><literal type="string">"vcd"</literal></argument>, <argument>VCD_DEVICE</argument>, <argument>VCD_DEV_TEXT</argument>, <argument>VCD_DEV_LONGTEXT</argument>)</argument_list></macro>

<macro><name>set_section</name><argument_list>( <argument>N_( <literal type="string">"Network settings"</literal> )</argument>, <argument>NULL</argument> )</argument_list></macro>

<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"mtu"</literal></argument>, <argument>MTU_DEFAULT</argument>, <argument>MTU_TEXT</argument>, <argument>MTU_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_obsolete_bool</name><argument_list>( <argument><literal type="string">"ipv6"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_bool</name><argument_list>( <argument><literal type="string">"ipv4"</literal></argument> )</argument_list></macro> 
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"ipv4-timeout"</literal></argument>, <argument><literal type="number">5</literal> * <literal type="number">1000</literal></argument>, <argument>TIMEOUT_TEXT</argument>,
<argument>TIMEOUT_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_integer_range</name><argument_list>( <argument><literal type="number">0</literal></argument>, <argument>INT_MAX</argument> )</argument_list></macro>

<macro><name>add_string</name><argument_list>( <argument><literal type="string">"http-host"</literal></argument>, <argument>NULL</argument>, <argument>HTTP_HOST_TEXT</argument>, <argument>HOST_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"http-port"</literal></argument>, <argument><literal type="number">8080</literal></argument>, <argument>HTTP_PORT_TEXT</argument>, <argument>HTTP_PORT_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_integer_range</name><argument_list>( <argument><literal type="number">1</literal></argument>, <argument><literal type="number">65535</literal></argument> )</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"https-port"</literal></argument>, <argument><literal type="number">8443</literal></argument>, <argument>HTTPS_PORT_TEXT</argument>, <argument>HTTPS_PORT_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_integer_range</name><argument_list>( <argument><literal type="number">1</literal></argument>, <argument><literal type="number">65535</literal></argument> )</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"rtsp-host"</literal></argument>, <argument>NULL</argument>, <argument>RTSP_HOST_TEXT</argument>, <argument>RTSP_HOST_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"rtsp-port"</literal></argument>, <argument><literal type="number">554</literal></argument>, <argument>RTSP_PORT_TEXT</argument>, <argument>RTSP_PORT_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_integer_range</name><argument_list>( <argument><literal type="number">1</literal></argument>, <argument><literal type="number">65535</literal></argument> )</argument_list></macro>
<macro><name>add_loadfile</name><argument_list>(<argument><literal type="string">"http-cert"</literal></argument>, <argument>NULL</argument>, <argument>HTTP_CERT_TEXT</argument>, <argument>CERT_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_obsolete_string</name><argument_list>( <argument><literal type="string">"sout-http-cert"</literal></argument> )</argument_list></macro> 
<macro><name>add_loadfile</name><argument_list>(<argument><literal type="string">"http-key"</literal></argument>, <argument>NULL</argument>, <argument>HTTP_KEY_TEXT</argument>, <argument>KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_obsolete_string</name><argument_list>( <argument><literal type="string">"sout-http-key"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_string</name><argument_list>( <argument><literal type="string">"http-ca"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_string</name><argument_list>( <argument><literal type="string">"sout-http-ca"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_string</name><argument_list>( <argument><literal type="string">"http-crl"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_string</name><argument_list>( <argument><literal type="string">"sout-http-crl"</literal></argument> )</argument_list></macro> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"http-proxy"</literal></argument>, <argument>NULL</argument>, <argument>PROXY_TEXT</argument>, <argument>PROXY_LONGTEXT</argument>,
<argument>false</argument> )</argument_list></macro>
<macro><name>add_password</name><argument_list>(<argument><literal type="string">"http-proxy-pwd"</literal></argument>, <argument>NULL</argument>, <argument>PROXY_PASS_TEXT</argument>, <argument>PROXY_PASS_LONGTEXT</argument>)</argument_list></macro>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<macro><name>add_obsolete_string</name><argument_list>( <argument><literal type="string">"http-proxy"</literal></argument> )</argument_list></macro>
<macro><name>add_obsolete_string</name><argument_list>( <argument><literal type="string">"http-proxy-pwd"</literal></argument> )</argument_list></macro>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<macro><name>add_obsolete_bool</name><argument_list>( <argument><literal type="string">"http-use-IE-proxy"</literal></argument> )</argument_list></macro>

<macro><name>set_section</name><argument_list>( <argument>N_( <literal type="string">"Socks proxy"</literal>)</argument> , <argument>NULL</argument> )</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"socks"</literal></argument>, <argument>NULL</argument>,
<argument>SOCKS_SERVER_TEXT</argument>, <argument>SOCKS_SERVER_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"socks-user"</literal></argument>, <argument>NULL</argument>,
<argument>SOCKS_USER_TEXT</argument>, <argument>SOCKS_USER_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"socks-pwd"</literal></argument>, <argument>NULL</argument>,
<argument>SOCKS_PASS_TEXT</argument>, <argument>SOCKS_PASS_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>


<macro><name>set_section</name><argument_list>( <argument>N_(<literal type="string">"Metadata"</literal> )</argument> , <argument>NULL</argument> )</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"meta-title"</literal></argument>, <argument>NULL</argument>, <argument>META_TITLE_TEXT</argument>,
<argument>META_TITLE_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name><argument_list>()</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"meta-author"</literal></argument>, <argument>NULL</argument>, <argument>META_AUTHOR_TEXT</argument>,
<argument>META_AUTHOR_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name><argument_list>()</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"meta-artist"</literal></argument>, <argument>NULL</argument>, <argument>META_ARTIST_TEXT</argument>,
<argument>META_ARTIST_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name><argument_list>()</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"meta-genre"</literal></argument>, <argument>NULL</argument>, <argument>META_GENRE_TEXT</argument>,
<argument>META_GENRE_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name><argument_list>()</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"meta-copyright"</literal></argument>, <argument>NULL</argument>, <argument>META_CPYR_TEXT</argument>,
<argument>META_CPYR_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name><argument_list>()</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"meta-description"</literal></argument>, <argument>NULL</argument>, <argument>META_DESCR_TEXT</argument>,
<argument>META_DESCR_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name><argument_list>()</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"meta-date"</literal></argument>, <argument>NULL</argument>, <argument>META_DATE_TEXT</argument>,
<argument>META_DATE_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name><argument_list>()</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"meta-url"</literal></argument>, <argument>NULL</argument>, <argument>META_URL_TEXT</argument>,
<argument>META_URL_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name><argument_list>()</argument_list></macro>

<macro><name>set_section</name><argument_list>( <argument>N_( <literal type="string">"Advanced"</literal> )</argument>, <argument>NULL</argument> )</argument_list></macro>

<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"file-caching"</literal></argument>, <argument><literal type="number">1000</literal></argument>,
<argument>CACHING_TEXT</argument>, <argument>CACHING_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_integer_range</name><argument_list>( <argument><literal type="number">0</literal></argument>, <argument><literal type="number">60000</literal></argument> )</argument_list></macro>
<macro><name>change_safe</name><argument_list>()</argument_list></macro>
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"vdr-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"live-caching"</literal></argument>, <argument>MS_FROM_VLC_TICK(DEFAULT_PTS_DELAY)</argument>,
<argument>CAPTURE_CACHING_TEXT</argument>, <argument>CAPTURE_CACHING_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_integer_range</name><argument_list>( <argument><literal type="number">0</literal></argument>, <argument><literal type="number">60000</literal></argument> )</argument_list></macro>
<macro><name>change_safe</name><argument_list>()</argument_list></macro>
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"alsa-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"dshow-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"dv-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"dvb-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"eyetv-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"jack-input-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"linsys-hdsdi-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"linsys-sdi-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"oss-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"screen-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"v4l2-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"disc-caching"</literal></argument>, <argument>MS_FROM_VLC_TICK(DEFAULT_PTS_DELAY)</argument>,
<argument>DISC_CACHING_TEXT</argument>, <argument>DISC_CACHING_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_integer_range</name><argument_list>( <argument><literal type="number">0</literal></argument>, <argument><literal type="number">60000</literal></argument> )</argument_list></macro>
<macro><name>change_safe</name><argument_list>()</argument_list></macro>
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"bd-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"bluray-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"cdda-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"dvdnav-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"dvdread-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"vcd-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"network-caching"</literal></argument>, <argument><literal type="number">1000</literal></argument>,
<argument>NETWORK_CACHING_TEXT</argument>, <argument>NETWORK_CACHING_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_integer_range</name><argument_list>( <argument><literal type="number">0</literal></argument>, <argument><literal type="number">60000</literal></argument> )</argument_list></macro>
<macro><name>change_safe</name><argument_list>()</argument_list></macro>
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"ftp-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"http-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"mms-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"realrtsp-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"rtp-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"rtsp-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"sftp-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"smb-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"tcp-caching"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"udp-caching"</literal></argument> )</argument_list></macro> 

<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"cr-average"</literal></argument>, <argument><literal type="number">40</literal></argument>, <argument>CR_AVERAGE_TEXT</argument>,
<argument>CR_AVERAGE_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"clock-synchro"</literal></argument>, <argument>-<literal type="number">1</literal></argument>, <argument>CLOCK_SYNCHRO_TEXT</argument>,
<argument>CLOCK_SYNCHRO_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_integer_list</name><argument_list>( <argument>pi_clock_values</argument>, <argument>ppsz_clock_descriptions</argument> )</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"clock-jitter"</literal></argument>, <argument><literal type="number">5000</literal></argument>, <argument>CLOCK_JITTER_TEXT</argument>,
<argument>CLOCK_JITTER_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name><argument_list>()</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"clock-master"</literal></argument>, <argument>VLC_CLOCK_MASTER_DEFAULT</argument>,
<argument>CLOCK_MASTER_TEXT</argument>, <argument>NULL</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_integer_list</name><argument_list>( <argument>pi_clock_master_values</argument>, <argument>ppsz_clock_master_descriptions</argument> )</argument_list></macro>

<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"network-synchronisation"</literal></argument>, <argument>false</argument>, <argument>NETSYNC_TEXT</argument>,
<argument>NETSYNC_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>

<macro><name>add_directory</name><argument_list>(<argument><literal type="string">"input-record-path"</literal></argument>, <argument>NULL</argument>,
<argument>INPUT_RECORD_PATH_TEXT</argument>, <argument>INPUT_RECORD_PATH_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"input-record-native"</literal></argument>, <argument>true</argument>, <argument>INPUT_RECORD_NATIVE_TEXT</argument>,
<argument>INPUT_RECORD_NATIVE_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>

<macro><name>add_directory</name><argument_list>(<argument><literal type="string">"input-timeshift-path"</literal></argument>, <argument>NULL</argument>,
<argument>INPUT_TIMESHIFT_PATH_TEXT</argument>, <argument>INPUT_TIMESHIFT_PATH_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"input-timeshift-granularity"</literal></argument>, <argument>-<literal type="number">1</literal></argument>, <argument>INPUT_TIMESHIFT_GRANULARITY_TEXT</argument>,
<argument>INPUT_TIMESHIFT_GRANULARITY_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>

<expr_stmt><expr><call><name>add_string</name><argument_list>( <argument><expr><literal type="string">"input-title-format"</literal></expr></argument>, <argument><expr><literal type="string">"$Z"</literal></expr></argument>, <argument><expr><name>INPUT_TITLE_FORMAT_TEXT</name></expr></argument>, <argument><expr><name>INPUT_TITLE_FORMAT_LONGTEXT</name></expr></argument>, <argument><expr><name>false</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>add_bool</name><argument_list>( <argument><expr><literal type="string">"lua"</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>INPUT_LUA_TEXT</name></expr></argument>, <argument><expr><name>INPUT_LUA_TEXT</name></expr></argument>, <argument><expr><name>true</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>


<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_INPUT_VCODEC</argument> )</argument_list></macro>
<macro><name>add_category_hint</name><argument_list>(<argument>N_(<literal type="string">"Decoders"</literal>)</argument>, <argument>CODEC_CAT_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"codec"</literal></argument>, <argument>NULL</argument>, <argument>CODEC_TEXT</argument>,
<argument>CODEC_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"hw-dec"</literal></argument>, <argument>true</argument>, <argument>HW_DEC_TEXT</argument>, <argument>HW_DEC_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"encoder"</literal></argument>, <argument>NULL</argument>, <argument>ENCODER_TEXT</argument>,
<argument>ENCODER_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_module</name><argument_list>(<argument><literal type="string">"dec-dev"</literal></argument>, <argument><literal type="string">"decoder device"</literal></argument>, <argument><literal type="string">"any"</literal></argument>, <argument>DEC_DEV_TEXT</argument>, <argument>DEC_DEV_LONGTEXT</argument>)</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_INPUT_ACCESS</argument> )</argument_list></macro>
<macro><name>add_category_hint</name><argument_list>(<argument>N_(<literal type="string">"Input"</literal>)</argument>, <argument>INPUT_CAT_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_module</name><argument_list>(<argument><literal type="string">"access"</literal></argument>, <argument><literal type="string">"access"</literal></argument>, <argument>NULL</argument>, <argument>ACCESS_TEXT</argument>, <argument>ACCESS_LONGTEXT</argument>)</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_INPUT_DEMUX</argument> )</argument_list></macro>
<macro><name>add_module</name><argument_list>(<argument><literal type="string">"demux"</literal></argument>, <argument><literal type="string">"demux"</literal></argument>, <argument><literal type="string">"any"</literal></argument>, <argument>DEMUX_TEXT</argument>, <argument>DEMUX_LONGTEXT</argument>)</argument_list></macro>
<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_INPUT_ACODEC</argument> )</argument_list></macro>
<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_INPUT_SCODEC</argument> )</argument_list></macro>
<macro><name>add_obsolete_bool</name><argument_list>( <argument><literal type="string">"prefer-system-codecs"</literal></argument> )</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_INPUT_STREAM_FILTER</argument> )</argument_list></macro>
<macro><name>add_module_list</name><argument_list>(<argument><literal type="string">"stream-filter"</literal></argument>, <argument><literal type="string">"stream_filter"</literal></argument>, <argument>NULL</argument>,
<argument>STREAM_FILTER_TEXT</argument>, <argument>STREAM_FILTER_LONGTEXT</argument>)</argument_list></macro>

<macro><name>add_string</name><argument_list>( <argument><literal type="string">"demux-filter"</literal></argument>, <argument>NULL</argument>, <argument>DEMUX_FILTER_TEXT</argument>, <argument>DEMUX_FILTER_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>


<macro><name>set_category</name><argument_list>( <argument>CAT_SOUT</argument> )</argument_list></macro>
<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_SOUT_GENERAL</argument> )</argument_list></macro>
<macro><name>add_category_hint</name><argument_list>(<argument>N_(<literal type="string">"Stream output"</literal>)</argument>, <argument>SOUT_CAT_LONGTEXT</argument>)</argument_list></macro>

<macro><name>add_string</name><argument_list>( <argument><literal type="string">"sout"</literal></argument>, <argument>NULL</argument>, <argument>SOUT_TEXT</argument>, <argument>SOUT_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"sout-display"</literal></argument>, <argument>false</argument>, <argument>SOUT_DISPLAY_TEXT</argument>,
<argument>SOUT_DISPLAY_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"sout-keep"</literal></argument>, <argument>false</argument>, <argument>SOUT_KEEP_TEXT</argument>,
<argument>SOUT_KEEP_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"sout-all"</literal></argument>, <argument>true</argument>, <argument>SOUT_ALL_TEXT</argument>,
<argument>SOUT_ALL_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"sout-audio"</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>SOUT_AUDIO_TEXT</argument>,
<argument>SOUT_AUDIO_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"sout-video"</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>SOUT_VIDEO_TEXT</argument>,
<argument>SOUT_VIDEO_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"sout-spu"</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>SOUT_SPU_TEXT</argument>,
<argument>SOUT_SPU_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"sout-mux-caching"</literal></argument>, <argument><literal type="number">1500</literal></argument>, <argument>SOUT_MUX_CACHING_TEXT</argument>,
<argument>SOUT_MUX_CACHING_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>

<macro><name>set_section</name><argument_list>( <argument>N_(<literal type="string">"VLM"</literal>)</argument>, <argument>NULL</argument> )</argument_list></macro>
<macro><name>add_loadfile</name><argument_list>(<argument><literal type="string">"vlm-conf"</literal></argument>, <argument>NULL</argument>, <argument>VLM_CONF_TEXT</argument>, <argument>VLM_CONF_LONGTEXT</argument>)</argument_list></macro>


<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_SOUT_STREAM</argument> )</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"sap-interval"</literal></argument>, <argument><literal type="number">5</literal></argument>, <argument>ANN_SAPINTV_TEXT</argument>,
<argument>ANN_SAPINTV_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_SOUT_MUX</argument> )</argument_list></macro>
<macro><name>add_module</name><argument_list>(<argument><literal type="string">"mux"</literal></argument>, <argument><literal type="string">"sout mux"</literal></argument>, <argument>NULL</argument>, <argument>MUX_TEXT</argument>, <argument>MUX_LONGTEXT</argument>)</argument_list></macro>
<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_SOUT_ACO</argument> )</argument_list></macro>
<macro><name>add_module</name><argument_list>(<argument><literal type="string">"access_output"</literal></argument>, <argument><literal type="string">"sout access"</literal></argument>, <argument>NULL</argument>,
<argument>ACCESS_OUTPUT_TEXT</argument>, <argument>ACCESS_OUTPUT_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"ttl"</literal></argument>, <argument>-<literal type="number">1</literal></argument>, <argument>TTL_TEXT</argument>, <argument>TTL_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"miface"</literal></argument>, <argument>NULL</argument>, <argument>MIFACE_TEXT</argument>, <argument>MIFACE_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_obsolete_string</name><argument_list>( <argument><literal type="string">"miface-addr"</literal></argument> )</argument_list></macro> 
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"dscp"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>DSCP_TEXT</argument>, <argument>DSCP_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_SOUT_PACKETIZER</argument> )</argument_list></macro>
<macro><name>add_module</name><argument_list>(<argument><literal type="string">"packetizer"</literal></argument>, <argument><literal type="string">"packetizer"</literal></argument>, <argument>NULL</argument>,
<argument>PACKETIZER_TEXT</argument>, <argument>PACKETIZER_LONGTEXT</argument>)</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_SOUT_VOD</argument> )</argument_list></macro>


<macro><name>set_category</name><argument_list>( <argument>CAT_ADVANCED</argument> )</argument_list></macro>
<macro><name>add_obsolete_bool</name><argument_list>( <argument><literal type="string">"fpu"</literal></argument> )</argument_list></macro>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>( <argument><expr><name>__i386__</name></expr></argument> )</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>( <argument><expr><name>__x86_64__</name></expr></argument> )</argument_list></call></expr></cpp:if>
<macro><name>add_obsolete_bool</name><argument_list>( <argument><literal type="string">"mmx"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_bool</name><argument_list>( <argument><literal type="string">"3dn"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_bool</name><argument_list>( <argument><literal type="string">"mmxext"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_bool</name><argument_list>( <argument><literal type="string">"sse"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_bool</name><argument_list>( <argument><literal type="string">"sse2"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_bool</name><argument_list>( <argument><literal type="string">"sse3"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_bool</name><argument_list>( <argument><literal type="string">"ssse3"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_bool</name><argument_list>( <argument><literal type="string">"sse41"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_bool</name><argument_list>( <argument><literal type="string">"sse42"</literal></argument> )</argument_list></macro> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>( <argument><expr><name>__powerpc__</name></expr></argument> )</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>( <argument><expr><name>__ppc__</name></expr></argument> )</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>( <argument><expr><name>__ppc64__</name></expr></argument> )</argument_list></call></expr></cpp:if>
<macro><name>add_obsolete_bool</name><argument_list>( <argument><literal type="string">"altivec"</literal></argument> )</argument_list></macro> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_ADVANCED_MISC</argument> )</argument_list></macro>
<macro><name>set_section</name><argument_list>( <argument>N_(<literal type="string">"Special modules"</literal>)</argument>, <argument>NULL</argument> )</argument_list></macro>
<macro><name>add_category_hint</name><argument_list>(<argument>N_(<literal type="string">"Miscellaneous"</literal>)</argument>, <argument>MISC_CAT_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_module</name><argument_list>(<argument><literal type="string">"vod-server"</literal></argument>, <argument><literal type="string">"vod server"</literal></argument>, <argument>NULL</argument>,
<argument>VOD_SERVER_TEXT</argument>, <argument>VOD_SERVER_LONGTEXT</argument>)</argument_list></macro>

<macro><name>set_section</name><argument_list>( <argument>N_(<literal type="string">"Plugins"</literal> )</argument>, <argument>NULL</argument> )</argument_list></macro>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_DYNAMIC_PLUGINS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"plugins-cache"</literal></argument>, <argument>true</argument>, <argument>PLUGINS_CACHE_TEXT</argument>,
<argument>PLUGINS_CACHE_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_volatile</name> <argument_list>()</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"plugins-scan"</literal></argument>, <argument>true</argument>, <argument>PLUGINS_SCAN_TEXT</argument>,
<argument>PLUGINS_SCAN_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_volatile</name> <argument_list>()</argument_list></macro>
<macro><name>add_obsolete_string</name><argument_list>( <argument><literal type="string">"plugin-path"</literal></argument> )</argument_list></macro> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<macro><name>add_obsolete_string</name><argument_list>( <argument><literal type="string">"data-path"</literal></argument> )</argument_list></macro> 
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"keystore"</literal></argument>, <argument>NULL</argument>, <argument>KEYSTORE_TEXT</argument>,
<argument>KEYSTORE_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>

<macro><name>set_section</name><argument_list>( <argument>N_(<literal type="string">"Performance options"</literal>)</argument>, <argument>NULL</argument> )</argument_list></macro>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name> <argument_list>(<argument><expr><name>LIBVLC_USE_PTHREAD</name></expr></argument>)</argument_list></call></expr></cpp:if>
<macro><name>add_obsolete_bool</name><argument_list>( <argument><literal type="string">"rt-priority"</literal></argument> )</argument_list></macro> 
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"rt-offset"</literal></argument> )</argument_list></macro> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_DBUS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<macro><name>add_obsolete_bool</name><argument_list>( <argument><literal type="string">"inhibit"</literal></argument> )</argument_list></macro> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>__OS2__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"high-priority"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>HPRIORITY_TEXT</argument>,
<argument>HPRIORITY_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"clock-source"</literal></argument>, <argument>NULL</argument>, <argument>CLOCK_SOURCE_TEXT</argument>, <argument>CLOCK_SOURCE_TEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_string_list</name><argument_list>( <argument>clock_sources</argument>, <argument>clock_sources_text</argument> )</argument_list></macro>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<macro><name>set_category</name><argument_list>( <argument>CAT_PLAYLIST</argument> )</argument_list></macro>
<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_PLAYLIST_GENERAL</argument> )</argument_list></macro>
<macro><name>add_category_hint</name><argument_list>(<argument>N_(<literal type="string">"Playlist"</literal>)</argument>, <argument>PLAYLIST_CAT_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"random"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>RANDOM_TEXT</argument>, <argument>RANDOM_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_short</name><argument_list>(<argument><literal type="char">'Z'</literal></argument>)</argument_list></macro>
<macro><name>change_safe</name><argument_list>()</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"loop"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>LOOP_TEXT</argument>, <argument>LOOP_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_short</name><argument_list>(<argument><literal type="char">'L'</literal></argument>)</argument_list></macro>
<macro><name>change_safe</name><argument_list>()</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"repeat"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>REPEAT_TEXT</argument>, <argument>REPEAT_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_short</name><argument_list>(<argument><literal type="char">'R'</literal></argument>)</argument_list></macro>
<macro><name>change_safe</name><argument_list>()</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"play-and-exit"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>PAE_TEXT</argument>, <argument>PAE_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"play-and-stop"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>PAS_TEXT</argument>, <argument>PAS_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_safe</name><argument_list>()</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"play-and-pause"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>PAP_TEXT</argument>, <argument>PAP_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_safe</name><argument_list>()</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"start-paused"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>SP_TEXT</argument>, <argument>SP_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"playlist-autostart"</literal></argument>, <argument>true</argument>,
<argument>AUTOSTART_TEXT</argument>, <argument>AUTOSTART_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"playlist-cork"</literal></argument>, <argument>true</argument>, <argument>CORK_TEXT</argument>, <argument>CORK_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>HAVE_DBUS</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>__OS2__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"one-instance"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>ONEINSTANCE_TEXT</argument>,
<argument>ONEINSTANCE_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"started-from-file"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>STARTEDFROMFILE_TEXT</argument>,
<argument>STARTEDFROMFILE_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_volatile</name> <argument_list>()</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"one-instance-when-started-from-file"</literal></argument>, <argument><literal type="number">1</literal></argument>,
<argument>ONEINSTANCEWHENSTARTEDFROMFILE_TEXT</argument>,
<argument>ONEINSTANCEWHENSTARTEDFROMFILE_TEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"playlist-enqueue"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>PLAYLISTENQUEUE_TEXT</argument>,
<argument>PLAYLISTENQUEUE_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_DBUS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"dbus"</literal></argument>, <argument>false</argument>, <argument>DBUS_TEXT</argument>, <argument>DBUS_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"media-library"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>ML_TEXT</argument>, <argument>ML_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"playlist-tree"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>PLTREE_TEXT</argument>, <argument>PLTREE_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>

<macro><name>add_string</name><argument_list>( <argument><literal type="string">"open"</literal></argument>, <argument><literal type="string">""</literal></argument>, <argument>OPEN_TEXT</argument>, <argument>OPEN_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>

<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"auto-preparse"</literal></argument>, <argument>true</argument>, <argument>PREPARSE_TEXT</argument>,
<argument>PREPARSE_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>

<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"preparse-timeout"</literal></argument>, <argument><literal type="number">5000</literal></argument>, <argument>PREPARSE_TIMEOUT_TEXT</argument>,
<argument>PREPARSE_TIMEOUT_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>

<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"preparse-threads"</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>PREPARSE_THREADS_TEXT</argument>,
<argument>PREPARSE_THREADS_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>

<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"fetch-art-threads"</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>FETCH_ART_THREADS_TEXT</argument>,
<argument>FETCH_ART_THREADS_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>

<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"album-art"</literal></argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"metadata-network-access"</literal></argument>, <argument>false</argument>, <argument>METADATA_NETWORK_TEXT</argument>,
<argument>METADATA_NETWORK_TEXT</argument>, <argument>false</argument> )</argument_list></macro>

<macro><name>add_string</name><argument_list>( <argument><literal type="string">"recursive"</literal></argument>, <argument><literal type="string">"collapse"</literal></argument> , <argument>RECURSIVE_TEXT</argument>,
<argument>RECURSIVE_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_string_list</name><argument_list>( <argument>psz_recursive_list</argument>, <argument>psz_recursive_list_text</argument> )</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"ignore-filetypes"</literal></argument>, <argument><literal type="string">"m3u,db,nfo,ini,jpg,jpeg,ljpg,gif,png,pgm,"</literal>
<literal type="string">"pgmyuv,pbm,pam,tga,bmp,pnm,xpm,xcf,pcx,tif,tiff,lbm,sfv,txt,"</literal>
<literal type="string">"sub,idx,srt,cue,ssa"</literal></argument>,
<argument>IGNORE_TEXT</argument>, <argument>IGNORE_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"show-hiddenfiles"</literal></argument>, <argument>false</argument>,
<argument>SHOW_HIDDENFILES_TEXT</argument>, <argument>SHOW_HIDDENFILES_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"extractor-flatten"</literal></argument>, <argument>false</argument>,
<argument><literal type="string">"Flatten files listed by extractors (archive)"</literal></argument>, <argument>NULL</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_volatile</name><argument_list>()</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_PLAYLIST_SD</argument> )</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"services-discovery"</literal></argument>, <argument><literal type="string">""</literal></argument>, <argument>SD_TEXT</argument>, <argument>SD_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_short</name><argument_list>(<argument><literal type="char">'S'</literal></argument>)</argument_list></macro>


<macro><name>set_category</name><argument_list>( <argument>CAT_INTERFACE</argument> )</argument_list></macro>
<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_INTERFACE_GENERAL</argument> )</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"verbose"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>VERBOSE_TEXT</argument>, <argument>VERBOSE_LONGTEXT</argument>,
<argument>false</argument> )</argument_list></macro>
<macro><name>change_short</name><argument_list>(<argument><literal type="char">'v'</literal></argument>)</argument_list></macro>
<macro><name>change_volatile</name> <argument_list>()</argument_list></macro>
<macro><name>add_obsolete_string</name><argument_list>( <argument><literal type="string">"verbose-objects"</literal></argument> )</argument_list></macro> 
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__OS2__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<macro><name>add_obsolete_bool</name><argument_list>( <argument><literal type="string">"daemon"</literal></argument> )</argument_list></macro> 
<macro><name>change_short</name><argument_list>(<argument><literal type="char">'d'</literal></argument>)</argument_list></macro>
<macro><name>add_obsolete_string</name><argument_list>( <argument><literal type="string">"pidfile"</literal></argument> )</argument_list></macro> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name> <argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name> <argument_list>(<argument><expr><name>__APPLE__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<macro><name>add_obsolete_string</name><argument_list>( <argument><literal type="string">"language"</literal></argument> )</argument_list></macro> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"color"</literal></argument>, <argument>true</argument>, <argument>COLOR_TEXT</argument>, <argument>COLOR_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_volatile</name> <argument_list>()</argument_list></macro>
<macro><name>add_obsolete_bool</name><argument_list>( <argument><literal type="string">"advanced"</literal></argument> )</argument_list></macro> 
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"interact"</literal></argument>, <argument>true</argument>, <argument>INTERACTION_TEXT</argument>,
<argument>INTERACTION_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>

<macro><name>add_bool</name> <argument_list>( <argument><literal type="string">"stats"</literal></argument>, <argument>true</argument>, <argument>STATS_TEXT</argument>, <argument>STATS_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>

<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_INTERFACE_MAIN</argument> )</argument_list></macro>
<macro><name>add_module_cat</name><argument_list>(<argument><literal type="string">"intf"</literal></argument>, <argument>SUBCAT_INTERFACE_MAIN</argument>, <argument>NULL</argument>,
<argument>INTF_TEXT</argument>, <argument>INTF_LONGTEXT</argument>)</argument_list></macro>
<macro><name>change_short</name><argument_list>(<argument><literal type="char">'I'</literal></argument>)</argument_list></macro>
<macro><name>add_module_list_cat</name><argument_list>(<argument><literal type="string">"extraintf"</literal></argument>, <argument>SUBCAT_INTERFACE_MAIN</argument>, <argument>NULL</argument>,
<argument>EXTRAINTF_TEXT</argument>, <argument>EXTRAINTF_LONGTEXT</argument>)</argument_list></macro>


<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_INTERFACE_CONTROL</argument> )</argument_list></macro>
<macro><name>add_module_list_cat</name><argument_list>(<argument><literal type="string">"control"</literal></argument>, <argument>SUBCAT_INTERFACE_CONTROL</argument>, <argument>NULL</argument>,
<argument>CONTROL_TEXT</argument>, <argument>CONTROL_LONGTEXT</argument>)</argument_list></macro>


<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_INTERFACE_HOTKEYS</argument> )</argument_list></macro>
<macro><name>add_category_hint</name><argument_list>(<argument>N_(<literal type="string">"Hot keys"</literal>)</argument>, <argument>HOTKEY_CAT_LONGTEXT</argument>)</argument_list></macro>

<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"hotkeys-y-wheel-mode"</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument>MOUSE_Y_WHEEL_MODE_TEXT</argument>,
<argument>MOUSE_Y_WHEEL_MODE_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_integer_list</name><argument_list>( <argument>mouse_wheel_values</argument>, <argument>mouse_wheel_texts</argument> )</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"hotkeys-x-wheel-mode"</literal></argument>, <argument><literal type="number">2</literal></argument>, <argument>MOUSE_X_WHEEL_MODE_TEXT</argument>,
<argument>MOUSE_X_WHEEL_MODE_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_integer_list</name><argument_list>( <argument>mouse_wheel_values</argument>, <argument>mouse_wheel_texts</argument> )</argument_list></macro>
<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"hotkeys-mousewheel-mode"</literal></argument> )</argument_list></macro> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__APPLE__</name></expr></argument>)</argument_list></call></expr></cpp:if>
































<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_TOGGLE_FULLSCREEN</name></cpp:macro> <cpp:value>"Command+f"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_LEAVE_FULLSCREEN</name></cpp:macro> <cpp:value>"Esc"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY_PAUSE</name></cpp:macro> <cpp:value>"Space"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SIMPLE_PAUSE</name></cpp:macro> <cpp:value>NULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY</name></cpp:macro> <cpp:value>NULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_FASTER</name></cpp:macro> <cpp:value>"Command+="</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SLOWER</name></cpp:macro> <cpp:value>"Command+-"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_RATE_NORMAL</name></cpp:macro> <cpp:value>NULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_RATE_FASTER_FINE</name></cpp:macro> <cpp:value>NULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_RATE_SLOWER_FINE</name></cpp:macro> <cpp:value>NULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_NEXT</name></cpp:macro> <cpp:value>"Command+Right"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PREV</name></cpp:macro> <cpp:value>"Command+Left"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_STOP</name></cpp:macro> <cpp:value>"Command+."</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_POSITION</name></cpp:macro> <cpp:value>"t"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_JUMP_MEXTRASHORT</name></cpp:macro> <cpp:value>"Command+Ctrl+Left"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_JUMP_PEXTRASHORT</name></cpp:macro> <cpp:value>"Command+Ctrl+Right"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_JUMP_MSHORT</name></cpp:macro> <cpp:value>"Command+Alt+Left"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_JUMP_PSHORT</name></cpp:macro> <cpp:value>"Command+Alt+Right"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_JUMP_MMEDIUM</name></cpp:macro> <cpp:value>"Command+Shift+Left"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_JUMP_PMEDIUM</name></cpp:macro> <cpp:value>"Command+Shift+Right"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_JUMP_MLONG</name></cpp:macro> <cpp:value>"Command+Shift+Alt+Left"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_JUMP_PLONG</name></cpp:macro> <cpp:value>"Command+Shift+Alt+Right"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_FRAME_NEXT</name></cpp:macro> <cpp:value>"e"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_NAV_ACTIVATE</name></cpp:macro> <cpp:value>"Enter"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_NAV_UP</name></cpp:macro> <cpp:value>"Up"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_NAV_DOWN</name></cpp:macro> <cpp:value>"Down"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_NAV_LEFT</name></cpp:macro> <cpp:value>"Left"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_NAV_RIGHT</name></cpp:macro> <cpp:value>"Right"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_QUIT</name></cpp:macro> <cpp:value>"Command+q"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_VOL_UP</name></cpp:macro> <cpp:value>"Command+Up"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_VOL_DOWN</name></cpp:macro> <cpp:value>"Command+Down"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_VOL_MUTE</name></cpp:macro> <cpp:value>"Command+Alt+Down"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBDELAY_UP</name></cpp:macro> <cpp:value>"j"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBDELAY_DOWN</name></cpp:macro> <cpp:value>"h"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBPOS_DOWN</name></cpp:macro> <cpp:value>NULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBPOS_UP</name></cpp:macro> <cpp:value>NULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBTEXT_SCALEUP</name></cpp:macro> <cpp:value>"Command+Mouse Wheel Up"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBTEXT_SCALEDOWN</name></cpp:macro> <cpp:value>"Command+Mouse Wheel Down"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBTEXT_SCALE</name></cpp:macro> <cpp:value>"Command+0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBSYNC_MARKAUDIO</name></cpp:macro> <cpp:value>"Shift+h"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBSYNC_MARKSUB</name></cpp:macro> <cpp:value>"Shift+j"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBSYNC_APPLY</name></cpp:macro> <cpp:value>"Shift+k"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBSYNC_RESET</name></cpp:macro> <cpp:value>"Command+Shift+k"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_AUDIODELAY_UP</name></cpp:macro> <cpp:value>"g"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_AUDIODELAY_DOWN</name></cpp:macro> <cpp:value>"f"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_AUDIO_TRACK</name></cpp:macro> <cpp:value>"l"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBTITLE_TRACK</name></cpp:macro> <cpp:value>"s"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBTITLE_TOGGLE</name></cpp:macro> <cpp:value>"Shift+s"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBTITLE_CONTROL_S</name></cpp:macro> <cpp:value>"Command+Shift+v"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBTITLE_REVTRACK</name></cpp:macro> <cpp:value>"Alt+s"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PROGRAM_SID_NEXT</name></cpp:macro> <cpp:value>"x"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PROGRAM_SID_PREV</name></cpp:macro> <cpp:value>"Shift+x"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_ASPECT_RATIO</name></cpp:macro> <cpp:value>"a"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_CROP</name></cpp:macro> <cpp:value>"c"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_TOGGLE_AUTOSCALE</name></cpp:macro> <cpp:value>"o"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SCALE_UP</name></cpp:macro> <cpp:value>"Alt+o"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SCALE_DOWN</name></cpp:macro> <cpp:value>"Shift+Alt+o"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_DEINTERLACE</name></cpp:macro> <cpp:value>"d"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_DEINTERLACE_MODE</name></cpp:macro> <cpp:value>"Shift+d"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_INTF_TOGGLE_FSC</name></cpp:macro> <cpp:value>"i"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_INTF_BOSS</name></cpp:macro> <cpp:value>NULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_INTF_POPUP_MENU</name></cpp:macro> <cpp:value>"Menu"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_DISC_MENU</name></cpp:macro> <cpp:value>"Ctrl+m"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_TITLE_PREV</name></cpp:macro> <cpp:value>"Ctrl+p"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_TITLE_NEXT</name></cpp:macro> <cpp:value>"Ctrl+n"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_CHAPTER_PREV</name></cpp:macro> <cpp:value>"Ctrl+u"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_CHAPTER_NEXT</name></cpp:macro> <cpp:value>"Ctrl+d"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SNAPSHOT</name></cpp:macro> <cpp:value>"Command+Alt+s"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_ZOOM</name></cpp:macro> <cpp:value>"z"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_UNZOOM</name></cpp:macro> <cpp:value>"Shift+z"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_RANDOM</name></cpp:macro> <cpp:value>"Command+z"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_LOOP</name></cpp:macro> <cpp:value>"Shift+l"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_CROP_TOP</name></cpp:macro> <cpp:value>"Alt+i"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_UNCROP_TOP</name></cpp:macro> <cpp:value>"Alt+Shift+i"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_CROP_LEFT</name></cpp:macro> <cpp:value>"Alt+j"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_UNCROP_LEFT</name></cpp:macro> <cpp:value>"Alt+Shift+j"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_CROP_BOTTOM</name></cpp:macro> <cpp:value>"Alt+k"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_UNCROP_BOTTOM</name></cpp:macro> <cpp:value>"Alt+Shift+k"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_CROP_RIGHT</name></cpp:macro> <cpp:value>"Alt+l"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_UNCROP_RIGHT</name></cpp:macro> <cpp:value>"Alt+Shift+l"</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_VIEWPOINT_FOV_IN</name></cpp:macro> <cpp:value>"Page Up"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_VIEWPOINT_FOV_OUT</name></cpp:macro> <cpp:value>"Page Down"</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_ZOOM_QUARTER</name></cpp:macro> <cpp:value>NULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_ZOOM_HALF</name></cpp:macro> <cpp:value>"Command+0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_ZOOM_ORIGINAL</name></cpp:macro> <cpp:value>"Command+1"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_ZOOM_DOUBLE</name></cpp:macro> <cpp:value>"Command+2"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SET_BOOKMARK1</name></cpp:macro> <cpp:value>"Command+F1"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SET_BOOKMARK2</name></cpp:macro> <cpp:value>"Command+F2"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SET_BOOKMARK3</name></cpp:macro> <cpp:value>"Command+F3"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SET_BOOKMARK4</name></cpp:macro> <cpp:value>"Command+F4"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SET_BOOKMARK5</name></cpp:macro> <cpp:value>"Command+F5"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SET_BOOKMARK6</name></cpp:macro> <cpp:value>"Command+F6"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SET_BOOKMARK7</name></cpp:macro> <cpp:value>"Command+F7"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SET_BOOKMARK8</name></cpp:macro> <cpp:value>"Command+F8"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SET_BOOKMARK9</name></cpp:macro> <cpp:value>NULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SET_BOOKMARK10</name></cpp:macro> <cpp:value>NULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY_BOOKMARK1</name></cpp:macro> <cpp:value>"F1"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY_BOOKMARK2</name></cpp:macro> <cpp:value>"F2"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY_BOOKMARK3</name></cpp:macro> <cpp:value>"F3"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY_BOOKMARK4</name></cpp:macro> <cpp:value>"F4"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY_BOOKMARK5</name></cpp:macro> <cpp:value>"F5"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY_BOOKMARK6</name></cpp:macro> <cpp:value>"F6"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY_BOOKMARK7</name></cpp:macro> <cpp:value>"F7"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY_BOOKMARK8</name></cpp:macro> <cpp:value>"F8"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY_BOOKMARK9</name></cpp:macro> <cpp:value>NULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY_BOOKMARK10</name></cpp:macro> <cpp:value>NULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_RECORD</name></cpp:macro> <cpp:value>"Command+Shift+r"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_WALLPAPER</name></cpp:macro> <cpp:value>NULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_AUDIODEVICE_CYCLE</name></cpp:macro> <cpp:value>"Shift+a"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY_CLEAR</name></cpp:macro> <cpp:value>NULL</cpp:value></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else> 







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_TOGGLE_FULLSCREEN</name></cpp:macro> <cpp:value>"f"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_LEAVE_FULLSCREEN</name></cpp:macro> <cpp:value>"Esc"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SIMPLE_PAUSE</name></cpp:macro> <cpp:value>"Browser Stop"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY</name></cpp:macro> <cpp:value>"Browser Refresh"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_FASTER</name></cpp:macro> <cpp:value>"+"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SLOWER</name></cpp:macro> <cpp:value>"-"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_RATE_NORMAL</name></cpp:macro> <cpp:value>"="</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_RATE_FASTER_FINE</name></cpp:macro> <cpp:value>"]"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_RATE_SLOWER_FINE</name></cpp:macro> <cpp:value>"["</cpp:value></cpp:define>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY_PAUSE</name></cpp:macro> <cpp:value>"Space"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_NEXT</name></cpp:macro> <cpp:value>"n"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PREV</name></cpp:macro> <cpp:value>"p"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_STOP</name></cpp:macro> <cpp:value>"s"</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY_PAUSE</name></cpp:macro> <cpp:value>"Space\tMedia Play Pause"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_NEXT</name></cpp:macro> <cpp:value>"n\tMedia Next Track"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PREV</name></cpp:macro> <cpp:value>"p\tMedia Prev Track"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_STOP</name></cpp:macro> <cpp:value>"s\tMedia Stop"</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_POSITION</name></cpp:macro> <cpp:value>"t"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_JUMP_MEXTRASHORT</name></cpp:macro> <cpp:value>"Shift+Left"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_JUMP_PEXTRASHORT</name></cpp:macro> <cpp:value>"Shift+Right"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_JUMP_MSHORT</name></cpp:macro> <cpp:value>"Alt+Left"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_JUMP_PSHORT</name></cpp:macro> <cpp:value>"Alt+Right"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_JUMP_MMEDIUM</name></cpp:macro> <cpp:value>"Ctrl+Left"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_JUMP_PMEDIUM</name></cpp:macro> <cpp:value>"Ctrl+Right"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_JUMP_MLONG</name></cpp:macro> <cpp:value>"Ctrl+Alt+Left"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_JUMP_PLONG</name></cpp:macro> <cpp:value>"Ctrl+Alt+Right"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_NAV_ACTIVATE</name></cpp:macro> <cpp:value>"Enter"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_NAV_UP</name></cpp:macro> <cpp:value>"Up"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_NAV_DOWN</name></cpp:macro> <cpp:value>"Down"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_NAV_LEFT</name></cpp:macro> <cpp:value>"Left"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_NAV_RIGHT</name></cpp:macro> <cpp:value>"Right"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_QUIT</name></cpp:macro> <cpp:value>"Ctrl+q"</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_VOL_UP</name></cpp:macro> <cpp:value>"Ctrl+Up"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_VOL_DOWN</name></cpp:macro> <cpp:value>"Ctrl+Down"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_VOL_MUTE</name></cpp:macro> <cpp:value>"m"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_FRAME_NEXT</name></cpp:macro> <cpp:value>"e"</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_VOL_UP</name></cpp:macro> <cpp:value>"Ctrl+Up\tVolume Up"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_VOL_DOWN</name></cpp:macro> <cpp:value>"Ctrl+Down\tVolume Down"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_VOL_MUTE</name></cpp:macro> <cpp:value>"m\tVolume Mute"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_FRAME_NEXT</name></cpp:macro> <cpp:value>"e\tBrowser Next"</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBDELAY_UP</name></cpp:macro> <cpp:value>"h"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBDELAY_DOWN</name></cpp:macro> <cpp:value>"g"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBPOS_DOWN</name></cpp:macro> <cpp:value>NULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBPOS_UP</name></cpp:macro> <cpp:value>NULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBTEXT_SCALEUP</name></cpp:macro> <cpp:value>"Ctrl+Mouse Wheel Up"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBTEXT_SCALEDOWN</name></cpp:macro> <cpp:value>"Ctrl+Mouse Wheel Down"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBTEXT_SCALE</name></cpp:macro> <cpp:value>"Ctrl+0"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBSYNC_MARKAUDIO</name></cpp:macro> <cpp:value>"Shift+h"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBSYNC_MARKSUB</name></cpp:macro> <cpp:value>"Shift+j"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBSYNC_APPLY</name></cpp:macro> <cpp:value>"Shift+k"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBSYNC_RESET</name></cpp:macro> <cpp:value>"Ctrl+Shift+k"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_AUDIODELAY_UP</name></cpp:macro> <cpp:value>"k"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_AUDIODELAY_DOWN</name></cpp:macro> <cpp:value>"j"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_RANDOM</name></cpp:macro> <cpp:value>"r"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_LOOP</name></cpp:macro> <cpp:value>"l"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_AUDIO_TRACK</name></cpp:macro> <cpp:value>"b"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBTITLE_TRACK</name></cpp:macro> <cpp:value>"v"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBTITLE_TOGGLE</name></cpp:macro> <cpp:value>"Shift+v"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBTITLE_CONTROL_S</name></cpp:macro> <cpp:value>"Ctrl+Shift+v"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SUBTITLE_REVTRACK</name></cpp:macro> <cpp:value>"Alt+v"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PROGRAM_SID_NEXT</name></cpp:macro> <cpp:value>"x"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PROGRAM_SID_PREV</name></cpp:macro> <cpp:value>"Shift+x"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_ASPECT_RATIO</name></cpp:macro> <cpp:value>"a"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_CROP</name></cpp:macro> <cpp:value>"c"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_TOGGLE_AUTOSCALE</name></cpp:macro> <cpp:value>"o"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SCALE_UP</name></cpp:macro> <cpp:value>"Alt+o"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SCALE_DOWN</name></cpp:macro> <cpp:value>"Alt+Shift+o"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_DEINTERLACE</name></cpp:macro> <cpp:value>"d"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_DEINTERLACE_MODE</name></cpp:macro> <cpp:value>"Shift+d"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_INTF_TOGGLE_FSC</name></cpp:macro> <cpp:value>"i"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_INTF_BOSS</name></cpp:macro> <cpp:value>NULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_INTF_POPUP_MENU</name></cpp:macro> <cpp:value>"Menu"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_DISC_MENU</name></cpp:macro> <cpp:value>"Shift+m"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_TITLE_PREV</name></cpp:macro> <cpp:value>"Shift+o"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_TITLE_NEXT</name></cpp:macro> <cpp:value>"Shift+b"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_CHAPTER_PREV</name></cpp:macro> <cpp:value>"Shift+p"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_CHAPTER_NEXT</name></cpp:macro> <cpp:value>"Shift+n"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SNAPSHOT</name></cpp:macro> <cpp:value>"Shift+s"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_ZOOM</name></cpp:macro> <cpp:value>"z"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_UNZOOM</name></cpp:macro> <cpp:value>"Shift+z"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_AUDIODEVICE_CYCLE</name></cpp:macro> <cpp:value>"Shift+a"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_RECORD</name></cpp:macro> <cpp:value>"Shift+r"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_WALLPAPER</name></cpp:macro> <cpp:value>"w"</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_CROP_TOP</name></cpp:macro> <cpp:value>"Alt+r"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_UNCROP_TOP</name></cpp:macro> <cpp:value>"Alt+Shift+r"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_CROP_LEFT</name></cpp:macro> <cpp:value>"Alt+d"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_UNCROP_LEFT</name></cpp:macro> <cpp:value>"Alt+Shift+d"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_CROP_BOTTOM</name></cpp:macro> <cpp:value>"Alt+c"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_UNCROP_BOTTOM</name></cpp:macro> <cpp:value>"Alt+Shift+c"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_CROP_RIGHT</name></cpp:macro> <cpp:value>"Alt+f"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_UNCROP_RIGHT</name></cpp:macro> <cpp:value>"Alt+Shift+f"</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_VIEWPOINT_FOV_IN</name></cpp:macro> <cpp:value>"Page Up"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_VIEWPOINT_FOV_OUT</name></cpp:macro> <cpp:value>"Page Down"</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_ZOOM_QUARTER</name></cpp:macro> <cpp:value>"Alt+1"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_ZOOM_HALF</name></cpp:macro> <cpp:value>"Alt+2"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_ZOOM_ORIGINAL</name></cpp:macro> <cpp:value>"Alt+3"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_ZOOM_DOUBLE</name></cpp:macro> <cpp:value>"Alt+4"</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SET_BOOKMARK1</name></cpp:macro> <cpp:value>"Ctrl+F1"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SET_BOOKMARK2</name></cpp:macro> <cpp:value>"Ctrl+F2"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SET_BOOKMARK3</name></cpp:macro> <cpp:value>"Ctrl+F3"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SET_BOOKMARK4</name></cpp:macro> <cpp:value>"Ctrl+F4"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SET_BOOKMARK5</name></cpp:macro> <cpp:value>"Ctrl+F5"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SET_BOOKMARK6</name></cpp:macro> <cpp:value>"Ctrl+F6"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SET_BOOKMARK7</name></cpp:macro> <cpp:value>"Ctrl+F7"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SET_BOOKMARK8</name></cpp:macro> <cpp:value>"Ctrl+F8"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SET_BOOKMARK9</name></cpp:macro> <cpp:value>"Ctrl+F9"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_SET_BOOKMARK10</name></cpp:macro> <cpp:value>"Ctrl+F10"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY_BOOKMARK1</name></cpp:macro> <cpp:value>"F1"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY_BOOKMARK2</name></cpp:macro> <cpp:value>"F2"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY_BOOKMARK3</name></cpp:macro> <cpp:value>"F3"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY_BOOKMARK4</name></cpp:macro> <cpp:value>"F4"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY_BOOKMARK5</name></cpp:macro> <cpp:value>"F5"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY_BOOKMARK6</name></cpp:macro> <cpp:value>"F6"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY_BOOKMARK7</name></cpp:macro> <cpp:value>"F7"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY_BOOKMARK8</name></cpp:macro> <cpp:value>"F8"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY_BOOKMARK9</name></cpp:macro> <cpp:value>"F9"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY_BOOKMARK10</name></cpp:macro> <cpp:value>"F10"</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEY_PLAY_CLEAR</name></cpp:macro> <cpp:value>"Ctrl+w"</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-toggle-fullscreen"</literal></argument>, <argument>KEY_TOGGLE_FULLSCREEN</argument>,
<argument>TOGGLE_FULLSCREEN_KEY_TEXT</argument>, <argument>TOGGLE_FULLSCREEN_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-leave-fullscreen"</literal></argument>, <argument>KEY_LEAVE_FULLSCREEN</argument>,
<argument>LEAVE_FULLSCREEN_KEY_TEXT</argument>, <argument>LEAVE_FULLSCREEN_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-play-pause"</literal></argument>, <argument>KEY_PLAY_PAUSE</argument>,
<argument>PLAY_PAUSE_KEY_TEXT</argument>, <argument>PLAY_PAUSE_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-pause"</literal></argument>, <argument>KEY_SIMPLE_PAUSE</argument>, <argument>PAUSE_KEY_TEXT</argument>, <argument>PAUSE_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-play"</literal></argument>, <argument>KEY_PLAY</argument>, <argument>PLAY_KEY_TEXT</argument>, <argument>PLAY_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-faster"</literal></argument>, <argument>KEY_FASTER</argument>, <argument>FASTER_KEY_TEXT</argument>, <argument>FASTER_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-slower"</literal></argument>, <argument>KEY_SLOWER</argument>, <argument>SLOWER_KEY_TEXT</argument>, <argument>SLOWER_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-rate-normal"</literal></argument>, <argument>KEY_RATE_NORMAL</argument>,
<argument>RATE_NORMAL_KEY_TEXT</argument>, <argument>RATE_NORMAL_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-rate-faster-fine"</literal></argument>, <argument>KEY_RATE_FASTER_FINE</argument>,
<argument>RATE_FASTER_FINE_KEY_TEXT</argument>, <argument>RATE_FASTER_FINE_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-rate-slower-fine"</literal></argument>, <argument>KEY_RATE_SLOWER_FINE</argument>,
<argument>RATE_SLOWER_FINE_KEY_TEXT</argument>, <argument>RATE_SLOWER_FINE_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-next"</literal></argument>, <argument>KEY_NEXT</argument>, <argument>NEXT_KEY_TEXT</argument>, <argument>NEXT_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-prev"</literal></argument>, <argument>KEY_PREV</argument>, <argument>PREV_KEY_TEXT</argument>, <argument>PREV_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-stop"</literal></argument>, <argument>KEY_STOP</argument>, <argument>STOP_KEY_TEXT</argument>, <argument>STOP_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-position"</literal></argument>, <argument>KEY_POSITION</argument>, <argument>POSITION_KEY_TEXT</argument>,
<argument>POSITION_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-jump-extrashort"</literal></argument>, <argument>KEY_JUMP_MEXTRASHORT</argument>,
<argument>JBEXTRASHORT_KEY_TEXT</argument>, <argument>JBEXTRASHORT_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-jump+extrashort"</literal></argument>, <argument>KEY_JUMP_PEXTRASHORT</argument>,
<argument>JFEXTRASHORT_KEY_TEXT</argument>, <argument>JFEXTRASHORT_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-jump-short"</literal></argument>, <argument>KEY_JUMP_MSHORT</argument>,
<argument>JBSHORT_KEY_TEXT</argument>, <argument>JBSHORT_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-jump+short"</literal></argument>, <argument>KEY_JUMP_PSHORT</argument>,
<argument>JFSHORT_KEY_TEXT</argument>, <argument>JFSHORT_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-jump-medium"</literal></argument>, <argument>KEY_JUMP_MMEDIUM</argument>,
<argument>JBMEDIUM_KEY_TEXT</argument>, <argument>JBMEDIUM_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-jump+medium"</literal></argument>, <argument>KEY_JUMP_PMEDIUM</argument>,
<argument>JFMEDIUM_KEY_TEXT</argument>, <argument>JFMEDIUM_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-jump-long"</literal></argument>, <argument>KEY_JUMP_MLONG</argument>,
<argument>JBLONG_KEY_TEXT</argument>, <argument>JBLONG_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-jump+long"</literal></argument>, <argument>KEY_JUMP_PLONG</argument>,
<argument>JFLONG_KEY_TEXT</argument>, <argument>JFLONG_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-frame-next"</literal></argument>, <argument>KEY_FRAME_NEXT</argument>,
<argument>FRAME_NEXT_KEY_TEXT</argument>, <argument>FRAME_NEXT_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-nav-activate"</literal></argument>, <argument>KEY_NAV_ACTIVATE</argument>,
<argument>NAV_ACTIVATE_KEY_TEXT</argument>, <argument>NAV_ACTIVATE_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-nav-up"</literal></argument>, <argument>KEY_NAV_UP</argument>, <argument>NAV_UP_KEY_TEXT</argument>, <argument>NAV_UP_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-nav-down"</literal></argument>, <argument>KEY_NAV_DOWN</argument>,
<argument>NAV_DOWN_KEY_TEXT</argument>, <argument>NAV_DOWN_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-nav-left"</literal></argument>, <argument>KEY_NAV_LEFT</argument>,
<argument>NAV_LEFT_KEY_TEXT</argument>, <argument>NAV_LEFT_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-nav-right"</literal></argument>, <argument>KEY_NAV_RIGHT</argument>,
<argument>NAV_RIGHT_KEY_TEXT</argument>, <argument>NAV_RIGHT_KEY_LONGTEXT</argument>)</argument_list></macro>

<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-disc-menu"</literal></argument>, <argument>KEY_DISC_MENU</argument>, <argument>DISC_MENU_TEXT</argument>, <argument>DISC_MENU_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-title-prev"</literal></argument>, <argument>KEY_TITLE_PREV</argument>,
<argument>TITLE_PREV_TEXT</argument>, <argument>TITLE_PREV_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-title-next"</literal></argument>, <argument>KEY_TITLE_NEXT</argument>,
<argument>TITLE_NEXT_TEXT</argument>, <argument>TITLE_NEXT_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-chapter-prev"</literal></argument>, <argument>KEY_CHAPTER_PREV</argument>,
<argument>CHAPTER_PREV_TEXT</argument>, <argument>CHAPTER_PREV_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-chapter-next"</literal></argument>, <argument>KEY_CHAPTER_NEXT</argument>,
<argument>CHAPTER_NEXT_TEXT</argument>, <argument>CHAPTER_NEXT_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-quit"</literal></argument>, <argument>KEY_QUIT</argument>, <argument>QUIT_KEY_TEXT</argument>, <argument>QUIT_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-vol-up"</literal></argument>, <argument>KEY_VOL_UP</argument>, <argument>VOL_UP_KEY_TEXT</argument>, <argument>VOL_UP_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-vol-down"</literal></argument>, <argument>KEY_VOL_DOWN</argument>,
<argument>VOL_DOWN_KEY_TEXT</argument>, <argument>VOL_DOWN_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-vol-mute"</literal></argument>, <argument>KEY_VOL_MUTE</argument>,
<argument>VOL_MUTE_KEY_TEXT</argument>, <argument>VOL_MUTE_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-subdelay-up"</literal></argument>, <argument>KEY_SUBDELAY_UP</argument>,
<argument>SUBDELAY_UP_KEY_TEXT</argument>, <argument>SUBDELAY_UP_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-subdelay-down"</literal></argument>, <argument>KEY_SUBDELAY_DOWN</argument>,
<argument>SUBDELAY_DOWN_KEY_TEXT</argument>, <argument>SUBDELAY_DOWN_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-subsync-markaudio"</literal></argument>, <argument>KEY_SUBSYNC_MARKAUDIO</argument>,
<argument>SUBSYNC_MARKAUDIO_KEY_TEXT</argument>, <argument>SUBSYNC_MARKAUDIO_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-subsync-marksub"</literal></argument>, <argument>KEY_SUBSYNC_MARKSUB</argument>,
<argument>SUBSYNC_MARKSUB_KEY_TEXT</argument>, <argument>SUBSYNC_MARKSUB_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-subsync-apply"</literal></argument>, <argument>KEY_SUBSYNC_APPLY</argument>,
<argument>SUBSYNC_APPLY_KEY_TEXT</argument>, <argument>SUBSYNC_APPLY_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-subsync-reset"</literal></argument>, <argument>KEY_SUBSYNC_RESET</argument>,
<argument>SUBSYNC_RESET_KEY_TEXT</argument>, <argument>SUBSYNC_RESET_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-subpos-up"</literal></argument>, <argument>KEY_SUBPOS_UP</argument>,
<argument>SUBPOS_UP_KEY_TEXT</argument>, <argument>SUBPOS_UP_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-subpos-down"</literal></argument>, <argument>KEY_SUBPOS_DOWN</argument>,
<argument>SUBPOS_DOWN_KEY_TEXT</argument>, <argument>SUBPOS_DOWN_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-audiodelay-up"</literal></argument>, <argument>KEY_AUDIODELAY_UP</argument>,
<argument>AUDIODELAY_UP_KEY_TEXT</argument>, <argument>AUDIODELAY_UP_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-audiodelay-down"</literal></argument>, <argument>KEY_AUDIODELAY_DOWN</argument>,
<argument>AUDIODELAY_DOWN_KEY_TEXT</argument>, <argument>AUDIODELAY_DOWN_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-audio-track"</literal></argument>, <argument>KEY_AUDIO_TRACK</argument>, <argument>AUDIO_TRACK_KEY_TEXT</argument>,
<argument>AUDIO_TRACK_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-audiodevice-cycle"</literal></argument>, <argument>KEY_AUDIODEVICE_CYCLE</argument>,
<argument>AUDIO_DEVICE_CYCLE_KEY_TEXT</argument>,
<argument>AUDIO_DEVICE_CYCLE_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-subtitle-revtrack"</literal></argument>, <argument>KEY_SUBTITLE_REVTRACK</argument>,
<argument>SUBTITLE_REVERSE_TRACK_KEY_TEXT</argument>, <argument>SUBTITLE_REVERSE_TRACK_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-subtitle-track"</literal></argument>, <argument>KEY_SUBTITLE_TRACK</argument>,
<argument>SUBTITLE_TRACK_KEY_TEXT</argument>, <argument>SUBTITLE_TRACK_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-subtitle-toggle"</literal></argument>, <argument>KEY_SUBTITLE_TOGGLE</argument>,
<argument>SUBTITLE_TOGGLE_KEY_TEXT</argument>, <argument>SUBTITLE_TOGGLE_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-subtitle-control-secondary"</literal></argument>, <argument>KEY_SUBTITLE_CONTROL_S</argument>,
<argument>SUBTITLE_CONTROL_SECONDARY_KEY_TEXT</argument>, <argument>SUBTITLE_CONTROL_SECONDARY_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-program-sid-next"</literal></argument>, <argument>KEY_PROGRAM_SID_NEXT</argument>,
<argument>PROGRAM_SID_NEXT_KEY_TEXT</argument>, <argument>PROGRAM_SID_NEXT_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-program-sid-prev"</literal></argument>, <argument>KEY_PROGRAM_SID_PREV</argument>,
<argument>PROGRAM_SID_PREV_KEY_TEXT</argument>, <argument>PROGRAM_SID_PREV_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-aspect-ratio"</literal></argument>, <argument>KEY_ASPECT_RATIO</argument>,
<argument>ASPECT_RATIO_KEY_TEXT</argument>, <argument>ASPECT_RATIO_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-crop"</literal></argument>, <argument>KEY_CROP</argument>,
<argument>CROP_KEY_TEXT</argument>, <argument>CROP_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-toggle-autoscale"</literal></argument>, <argument>KEY_TOGGLE_AUTOSCALE</argument>,
<argument>TOGGLE_AUTOSCALE_KEY_TEXT</argument>, <argument>TOGGLE_AUTOSCALE_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-incr-scalefactor"</literal></argument>, <argument>KEY_SCALE_UP</argument>,
<argument>SCALE_UP_KEY_TEXT</argument>, <argument>SCALE_UP_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-decr-scalefactor"</literal></argument>, <argument>KEY_SCALE_DOWN</argument>,
<argument>SCALE_DOWN_KEY_TEXT</argument>, <argument>SCALE_DOWN_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-deinterlace"</literal></argument>, <argument>KEY_DEINTERLACE</argument>,
<argument>DEINTERLACE_KEY_TEXT</argument>, <argument>DEINTERLACE_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-deinterlace-mode"</literal></argument>, <argument>KEY_DEINTERLACE_MODE</argument>,
<argument>DEINTERLACE_MODE_KEY_TEXT</argument>, <argument>DEINTERLACE_MODE_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-intf-show"</literal></argument>, <argument>KEY_INTF_TOGGLE_FSC</argument>,
<argument>INTF_TOGGLE_FSC_KEY_TEXT</argument>, <argument>INTF_TOGGLE_FSC_KEY_TEXT</argument>)</argument_list></macro>
<macro><name>add_obsolete_inner</name><argument_list>( <argument><literal type="string">"key-intf-hide"</literal></argument>, <argument>CONFIG_ITEM_KEY</argument> )</argument_list></macro>

<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-intf-boss"</literal></argument>, <argument>KEY_INTF_BOSS</argument>,
<argument>INTF_BOSS_KEY_TEXT</argument>, <argument>INTF_BOSS_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-intf-popup-menu"</literal></argument>, <argument>KEY_INTF_POPUP_MENU</argument>,
<argument>INTF_POPUP_MENU_KEY_TEXT</argument>, <argument>INTF_POPUP_MENU_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-snapshot"</literal></argument>, <argument>KEY_SNAPSHOT</argument>, <argument>SNAP_KEY_TEXT</argument>, <argument>SNAP_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-record"</literal></argument>, <argument>KEY_RECORD</argument>, <argument>RECORD_KEY_TEXT</argument>, <argument>RECORD_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-zoom"</literal></argument>, <argument>KEY_ZOOM</argument>, <argument>ZOOM_KEY_TEXT</argument>, <argument>ZOOM_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-unzoom"</literal></argument>, <argument>KEY_UNZOOM</argument>, <argument>UNZOOM_KEY_TEXT</argument>, <argument>UNZOOM_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-wallpaper"</literal></argument>, <argument>KEY_WALLPAPER</argument>,
<argument>WALLPAPER_KEY_TEXT</argument>, <argument>WALLPAPER_KEY_LONGTEXT</argument>)</argument_list></macro>

<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-crop-top"</literal></argument>, <argument>KEY_CROP_TOP</argument>,
<argument>CROP_TOP_KEY_TEXT</argument>, <argument>CROP_TOP_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-uncrop-top"</literal></argument>, <argument>KEY_UNCROP_TOP</argument>,
<argument>UNCROP_TOP_KEY_TEXT</argument>, <argument>UNCROP_TOP_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-crop-left"</literal></argument>, <argument>KEY_CROP_LEFT</argument>,
<argument>CROP_LEFT_KEY_TEXT</argument>, <argument>CROP_LEFT_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-uncrop-left"</literal></argument>, <argument>KEY_UNCROP_LEFT</argument>,
<argument>UNCROP_LEFT_KEY_TEXT</argument>, <argument>UNCROP_LEFT_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-crop-bottom"</literal></argument>, <argument>KEY_CROP_BOTTOM</argument>,
<argument>CROP_BOTTOM_KEY_TEXT</argument>, <argument>CROP_BOTTOM_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-uncrop-bottom"</literal></argument>, <argument>KEY_UNCROP_BOTTOM</argument>,
<argument>UNCROP_BOTTOM_KEY_TEXT</argument>, <argument>UNCROP_BOTTOM_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-crop-right"</literal></argument>, <argument>KEY_CROP_RIGHT</argument>,
<argument>CROP_RIGHT_KEY_TEXT</argument>, <argument>CROP_RIGHT_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-uncrop-right"</literal></argument>, <argument>KEY_UNCROP_RIGHT</argument>,
<argument>UNCROP_RIGHT_KEY_TEXT</argument>, <argument>UNCROP_RIGHT_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-random"</literal></argument>, <argument>KEY_RANDOM</argument>, <argument>RANDOM_KEY_TEXT</argument>, <argument>RANDOM_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-loop"</literal></argument>, <argument>KEY_LOOP</argument>, <argument>LOOP_KEY_TEXT</argument>, <argument>LOOP_KEY_LONGTEXT</argument>)</argument_list></macro>

<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-viewpoint-fov-in"</literal></argument>, <argument>KEY_VIEWPOINT_FOV_IN</argument>,
<argument>VIEWPOINT_FOV_IN_KEY_TEXT</argument>, <argument>VIEWPOINT_FOV_IN_KEY_TEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-viewpoint-fov-out"</literal></argument>, <argument>KEY_VIEWPOINT_FOV_OUT</argument>,
<argument>VIEWPOINT_FOV_OUT_KEY_TEXT</argument>, <argument>VIEWPOINT_FOV_OUT_KEY_TEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-viewpoint-roll-clock"</literal></argument>, <argument>NULL</argument>,
<argument>VIEWPOINT_ROLL_CLOCK_KEY_TEXT</argument>, <argument>VIEWPOINT_ROLL_CLOCK_KEY_TEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-viewpoint-roll-anticlock"</literal></argument>, <argument>NULL</argument>,
<argument>VIEWPOINT_ROLL_ANTICLOCK_KEY_TEXT</argument>,
<argument>VIEWPOINT_ROLL_ANTICLOCK_KEY_TEXT</argument>)</argument_list></macro>

<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-zoom-quarter"</literal></argument>, <argument>KEY_ZOOM_QUARTER</argument>, <argument>ZOOM_QUARTER_KEY_TEXT</argument>, <argument>NULL</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-zoom-half"</literal></argument>, <argument>KEY_ZOOM_HALF</argument>, <argument>ZOOM_HALF_KEY_TEXT</argument>, <argument>NULL</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-zoom-original"</literal></argument>, <argument>KEY_ZOOM_ORIGINAL</argument>,
<argument>ZOOM_ORIGINAL_KEY_TEXT</argument>, <argument>NULL</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-zoom-double"</literal></argument>, <argument>KEY_ZOOM_DOUBLE</argument>, <argument>ZOOM_DOUBLE_KEY_TEXT</argument>, <argument>NULL</argument>)</argument_list></macro>

<macro><name>set_section</name> <argument_list>( <argument>N_(<literal type="string">"Jump sizes"</literal> )</argument>, <argument>NULL</argument> )</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"extrashort-jump-size"</literal></argument>, <argument><literal type="number">3</literal></argument>, <argument>JIEXTRASHORT_TEXT</argument>,
<argument>JIEXTRASHORT_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"short-jump-size"</literal></argument>, <argument><literal type="number">10</literal></argument>, <argument>JISHORT_TEXT</argument>,
<argument>JISHORT_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"medium-jump-size"</literal></argument>, <argument><literal type="number">60</literal></argument>, <argument>JIMEDIUM_TEXT</argument>,
<argument>JIMEDIUM_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_integer</name><argument_list>( <argument><literal type="string">"long-jump-size"</literal></argument>, <argument><literal type="number">300</literal></argument>, <argument>JILONG_TEXT</argument>,
<argument>JILONG_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>


<macro><name>set_category</name><argument_list>( <argument>-<literal type="number">1</literal></argument> )</argument_list></macro>
<macro><name>set_subcategory</name><argument_list>( <argument>-<literal type="number">1</literal></argument> )</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-set-bookmark1"</literal></argument>, <argument>KEY_SET_BOOKMARK1</argument>,
<argument>SET_BOOKMARK1_KEY_TEXT</argument>, <argument>SET_BOOKMARK_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-set-bookmark2"</literal></argument>, <argument>KEY_SET_BOOKMARK2</argument>,
<argument>SET_BOOKMARK2_KEY_TEXT</argument>, <argument>SET_BOOKMARK_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-set-bookmark3"</literal></argument>, <argument>KEY_SET_BOOKMARK3</argument>,
<argument>SET_BOOKMARK3_KEY_TEXT</argument>, <argument>SET_BOOKMARK_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-set-bookmark4"</literal></argument>, <argument>KEY_SET_BOOKMARK4</argument>,
<argument>SET_BOOKMARK4_KEY_TEXT</argument>, <argument>SET_BOOKMARK_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-set-bookmark5"</literal></argument>, <argument>KEY_SET_BOOKMARK5</argument>,
<argument>SET_BOOKMARK5_KEY_TEXT</argument>, <argument>SET_BOOKMARK_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-set-bookmark6"</literal></argument>, <argument>KEY_SET_BOOKMARK6</argument>,
<argument>SET_BOOKMARK6_KEY_TEXT</argument>, <argument>SET_BOOKMARK_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-set-bookmark7"</literal></argument>, <argument>KEY_SET_BOOKMARK7</argument>,
<argument>SET_BOOKMARK7_KEY_TEXT</argument>, <argument>SET_BOOKMARK_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-set-bookmark8"</literal></argument>, <argument>KEY_SET_BOOKMARK8</argument>,
<argument>SET_BOOKMARK8_KEY_TEXT</argument>, <argument>SET_BOOKMARK_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-set-bookmark9"</literal></argument>, <argument>KEY_SET_BOOKMARK9</argument>,
<argument>SET_BOOKMARK9_KEY_TEXT</argument>, <argument>SET_BOOKMARK_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-set-bookmark10"</literal></argument>, <argument>KEY_SET_BOOKMARK10</argument>,
<argument>SET_BOOKMARK10_KEY_TEXT</argument>, <argument>SET_BOOKMARK_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-play-bookmark1"</literal></argument>, <argument>KEY_PLAY_BOOKMARK1</argument>,
<argument>PLAY_BOOKMARK1_KEY_TEXT</argument>, <argument>PLAY_BOOKMARK_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-play-bookmark2"</literal></argument>, <argument>KEY_PLAY_BOOKMARK2</argument>,
<argument>PLAY_BOOKMARK2_KEY_TEXT</argument>, <argument>PLAY_BOOKMARK_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-play-bookmark3"</literal></argument>, <argument>KEY_PLAY_BOOKMARK3</argument>,
<argument>PLAY_BOOKMARK3_KEY_TEXT</argument>, <argument>PLAY_BOOKMARK_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-play-bookmark4"</literal></argument>, <argument>KEY_PLAY_BOOKMARK4</argument>,
<argument>PLAY_BOOKMARK4_KEY_TEXT</argument>, <argument>PLAY_BOOKMARK_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-play-bookmark5"</literal></argument>, <argument>KEY_PLAY_BOOKMARK5</argument>,
<argument>PLAY_BOOKMARK5_KEY_TEXT</argument>, <argument>PLAY_BOOKMARK_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-play-bookmark6"</literal></argument>, <argument>KEY_PLAY_BOOKMARK6</argument>,
<argument>PLAY_BOOKMARK6_KEY_TEXT</argument>, <argument>PLAY_BOOKMARK_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-play-bookmark7"</literal></argument>, <argument>KEY_PLAY_BOOKMARK7</argument>,
<argument>PLAY_BOOKMARK7_KEY_TEXT</argument>, <argument>PLAY_BOOKMARK_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-play-bookmark8"</literal></argument>, <argument>KEY_PLAY_BOOKMARK8</argument>,
<argument>PLAY_BOOKMARK8_KEY_TEXT</argument>, <argument>PLAY_BOOKMARK_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-play-bookmark9"</literal></argument>, <argument>KEY_PLAY_BOOKMARK9</argument>,
<argument>PLAY_BOOKMARK9_KEY_TEXT</argument>, <argument>PLAY_BOOKMARK_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-play-bookmark10"</literal></argument>, <argument>KEY_PLAY_BOOKMARK10</argument>,
<argument>PLAY_BOOKMARK10_KEY_TEXT</argument>, <argument>PLAY_BOOKMARK_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-clear-playlist"</literal></argument>, <argument>KEY_PLAY_CLEAR</argument>,
<argument>PLAY_CLEAR_KEY_TEXT</argument>, <argument>PLAY_CLEAR_KEY_LONGTEXT</argument>)</argument_list></macro>

<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-subtitle-text-scale-normal"</literal></argument>, <argument>KEY_SUBTEXT_SCALE</argument>,
<argument>SUBTEXT_SCALE_KEY_TEXT</argument>, <argument>SUBTEXT_SCALE_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-subtitle-text-scale-up"</literal></argument>, <argument>KEY_SUBTEXT_SCALEUP</argument>,
<argument>SUBTEXT_SCALEUP_KEY_TEXT</argument>, <argument>SUBTEXT_SCALE_KEY_LONGTEXT</argument>)</argument_list></macro>
<macro><name>add_key</name><argument_list>(<argument><literal type="string">"key-subtitle-text-scale-down"</literal></argument>, <argument>KEY_SUBTEXT_SCALEDOWN</argument>,
<argument>SUBTEXT_SCALEDOWN_KEY_TEXT</argument>, <argument>SUBTEXT_SCALE_KEY_LONGTEXT</argument>)</argument_list></macro>

<macro><name>add_string</name><argument_list>( <argument><literal type="string">"bookmark1"</literal></argument>, <argument>NULL</argument>,
<argument>BOOKMARK1_TEXT</argument>, <argument>BOOKMARK_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"bookmark2"</literal></argument>, <argument>NULL</argument>,
<argument>BOOKMARK2_TEXT</argument>, <argument>BOOKMARK_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"bookmark3"</literal></argument>, <argument>NULL</argument>,
<argument>BOOKMARK3_TEXT</argument>, <argument>BOOKMARK_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"bookmark4"</literal></argument>, <argument>NULL</argument>,
<argument>BOOKMARK4_TEXT</argument>, <argument>BOOKMARK_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"bookmark5"</literal></argument>, <argument>NULL</argument>,
<argument>BOOKMARK5_TEXT</argument>, <argument>BOOKMARK_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"bookmark6"</literal></argument>, <argument>NULL</argument>,
<argument>BOOKMARK6_TEXT</argument>, <argument>BOOKMARK_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"bookmark7"</literal></argument>, <argument>NULL</argument>,
<argument>BOOKMARK7_TEXT</argument>, <argument>BOOKMARK_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"bookmark8"</literal></argument>, <argument>NULL</argument>,
<argument>BOOKMARK8_TEXT</argument>, <argument>BOOKMARK_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"bookmark9"</literal></argument>, <argument>NULL</argument>,
<argument>BOOKMARK9_TEXT</argument>, <argument>BOOKMARK_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"bookmark10"</literal></argument>, <argument>NULL</argument>,
<argument>BOOKMARK10_TEXT</argument>, <argument>BOOKMARK_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HELP_TEXT</name></cpp:macro> <cpp:value>N_("print help for VLC (can be combined with --help-verbose)")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FULL_HELP_TEXT</name></cpp:macro> <cpp:value>N_("Exhaustive help for VLC and its modules")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LONGHELP_TEXT</name></cpp:macro> <cpp:value>N_("print help for VLC and all its modules (can be combined with " "--help-verbose)")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HELP_VERBOSE_TEXT</name></cpp:macro> <cpp:value>N_("ask for extra verbosity when displaying help")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LIST_TEXT</name></cpp:macro> <cpp:value>N_("print a list of available modules")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LIST_VERBOSE_TEXT</name></cpp:macro> <cpp:value>N_("print a list of available modules with extra detail")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MODULE_TEXT</name></cpp:macro> <cpp:value>N_("print help on a specific module (can be combined with " "--help-verbose). Prefix the module name with = for strict " "matches.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IGNORE_CONFIG_TEXT</name></cpp:macro> <cpp:value>N_("no configuration option will be loaded nor saved to config file")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RESET_CONFIG_TEXT</name></cpp:macro> <cpp:value>N_("reset the current config to the default values")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CONFIG_TEXT</name></cpp:macro> <cpp:value>N_("use alternate config file")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RESET_PLUGINS_CACHE_TEXT</name></cpp:macro> <cpp:value>N_("resets the current plugins cache")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VERSION_TEXT</name></cpp:macro> <cpp:value>N_("print version information")</cpp:value></cpp:define>


<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"help"</literal></argument>, <argument>false</argument>, <argument>HELP_TEXT</argument>, <argument><literal type="string">""</literal></argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_short</name><argument_list>( <argument><literal type="char">'h'</literal></argument> )</argument_list></macro>
<macro><name>change_volatile</name> <argument_list>()</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"full-help"</literal></argument>, <argument>false</argument>, <argument>FULL_HELP_TEXT</argument>, <argument><literal type="string">""</literal></argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_short</name><argument_list>( <argument><literal type="char">'H'</literal></argument> )</argument_list></macro>
<macro><name>change_volatile</name> <argument_list>()</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"longhelp"</literal></argument>, <argument>false</argument>, <argument>LONGHELP_TEXT</argument>, <argument><literal type="string">""</literal></argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_volatile</name> <argument_list>()</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"help-verbose"</literal></argument>, <argument>false</argument>, <argument>HELP_VERBOSE_TEXT</argument>, <argument><literal type="string">""</literal></argument>,
<argument>false</argument> )</argument_list></macro>
<macro><name>change_volatile</name> <argument_list>()</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"list"</literal></argument>, <argument>false</argument>, <argument>LIST_TEXT</argument>, <argument><literal type="string">""</literal></argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_short</name><argument_list>( <argument><literal type="char">'l'</literal></argument> )</argument_list></macro>
<macro><name>change_volatile</name> <argument_list>()</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"list-verbose"</literal></argument>, <argument>false</argument>, <argument>LIST_VERBOSE_TEXT</argument>, <argument><literal type="string">""</literal></argument>,
<argument>false</argument> )</argument_list></macro>
<macro><name>change_volatile</name> <argument_list>()</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"module"</literal></argument>, <argument>NULL</argument>, <argument>MODULE_TEXT</argument>, <argument><literal type="string">""</literal></argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_short</name><argument_list>( <argument><literal type="char">'p'</literal></argument> )</argument_list></macro>
<macro><name>change_volatile</name> <argument_list>()</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"ignore-config"</literal></argument>, <argument>true</argument>, <argument>IGNORE_CONFIG_TEXT</argument>, <argument><literal type="string">""</literal></argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_volatile</name> <argument_list>()</argument_list></macro>
<macro><name>add_obsolete_bool</name><argument_list>( <argument><literal type="string">"save-config"</literal></argument> )</argument_list></macro>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"reset-config"</literal></argument>, <argument>false</argument>, <argument>RESET_CONFIG_TEXT</argument>, <argument><literal type="string">""</literal></argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_volatile</name> <argument_list>()</argument_list></macro>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_DYNAMIC_PLUGINS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"reset-plugins-cache"</literal></argument>, <argument>false</argument>,
<argument>RESET_PLUGINS_CACHE_TEXT</argument>, <argument><literal type="string">""</literal></argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_volatile</name> <argument_list>()</argument_list></macro>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"version"</literal></argument>, <argument>false</argument>, <argument>VERSION_TEXT</argument>, <argument><literal type="string">""</literal></argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_volatile</name> <argument_list>()</argument_list></macro>
<macro><name>add_string</name><argument_list>( <argument><literal type="string">"config"</literal></argument>, <argument>NULL</argument>, <argument>CONFIG_TEXT</argument>, <argument><literal type="string">""</literal></argument>, <argument>false</argument> )</argument_list></macro>
<macro><name>change_volatile</name> <argument_list>()</argument_list></macro>

<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"core program"</literal>)</argument> )</argument_list></macro>
<macro><name>vlc_module_end</name> <argument_list>()</argument_list></macro>





<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_DYNAMIC_PLUGINS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>vlc_module_name</name><index>[]</index></name> <init>= <expr><literal type="string">"main"</literal></expr></init></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
