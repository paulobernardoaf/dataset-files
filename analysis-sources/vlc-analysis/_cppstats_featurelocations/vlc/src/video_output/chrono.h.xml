<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\src\video_output\chrono.h">





















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LIBVLC_VOUT_CHRONO_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LIBVLC_VOUT_CHRONO_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>int</name></type> <name>shift</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>avg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>avg_initial</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>shift_var</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>var</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>start</name></decl>;</decl_stmt>
}</block></struct></type> <name>vout_chrono_t</name>;</typedef>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>vout_chrono_Init</name><parameter_list>(<parameter><decl><type><name>vout_chrono_t</name> <modifier>*</modifier></type><name>chrono</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>shift</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>avg_initial</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>chrono</name><operator>-&gt;</operator><name>shift</name></name> <operator>=</operator> <name>shift</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>chrono</name><operator>-&gt;</operator><name>avg_initial</name></name> <operator>=</operator>
<name><name>chrono</name><operator>-&gt;</operator><name>avg</name></name> <operator>=</operator> <name>avg_initial</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>chrono</name><operator>-&gt;</operator><name>shift_var</name></name> <operator>=</operator> <name>shift</name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>chrono</name><operator>-&gt;</operator><name>var</name></name> <operator>=</operator> <name>avg_initial</name> <operator>/</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>chrono</name><operator>-&gt;</operator><name>start</name></name> <operator>=</operator> <name>VLC_TICK_INVALID</name></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>vout_chrono_Clean</name><parameter_list>(<parameter><decl><type><name>vout_chrono_t</name> <modifier>*</modifier></type><name>chrono</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>chrono</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>vout_chrono_Start</name><parameter_list>(<parameter><decl><type><name>vout_chrono_t</name> <modifier>*</modifier></type><name>chrono</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>chrono</name><operator>-&gt;</operator><name>start</name></name> <operator>=</operator> <call><name>vlc_tick_now</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>vlc_tick_t</name></type> <name>vout_chrono_GetHigh</name><parameter_list>(<parameter><decl><type><name>vout_chrono_t</name> <modifier>*</modifier></type><name>chrono</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>chrono</name><operator>-&gt;</operator><name>avg</name></name> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <name><name>chrono</name><operator>-&gt;</operator><name>var</name></name></expr>;</return>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>vlc_tick_t</name></type> <name>vout_chrono_GetLow</name><parameter_list>(<parameter><decl><type><name>vout_chrono_t</name> <modifier>*</modifier></type><name>chrono</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__MAX</name><argument_list>(<argument><expr><name><name>chrono</name><operator>-&gt;</operator><name>avg</name></name> <operator>-</operator> <literal type="number">2</literal> <operator>*</operator> <name><name>chrono</name><operator>-&gt;</operator><name>var</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>vout_chrono_Stop</name><parameter_list>(<parameter><decl><type><name>vout_chrono_t</name> <modifier>*</modifier></type><name>chrono</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>chrono</name><operator>-&gt;</operator><name>start</name></name> <operator>!=</operator> <name>VLC_TICK_INVALID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>vlc_tick_t</name></type> <name>duration</name> <init>= <expr><call><name>vlc_tick_now</name><argument_list>()</argument_list></call> <operator>-</operator> <name><name>chrono</name><operator>-&gt;</operator><name>start</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>vlc_tick_t</name></type> <name>var</name> <init>= <expr><call><name>llabs</name><argument_list>( <argument><expr><name>duration</name> <operator>-</operator> <name><name>chrono</name><operator>-&gt;</operator><name>avg</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>


<if_stmt><if>if<condition>( <expr><name>duration</name> <operator>&lt;</operator> <call><name>vout_chrono_GetHigh</name><argument_list>( <argument><expr><name>chrono</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>chrono</name><operator>-&gt;</operator><name>avg</name></name> <operator>=</operator> <operator>(</operator><operator>(</operator><operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <name><name>chrono</name><operator>-&gt;</operator><name>shift</name></name><operator>)</operator> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>*</operator> <name><name>chrono</name><operator>-&gt;</operator><name>avg</name></name> <operator>+</operator> <name>duration</name><operator>)</operator> <operator>&gt;&gt;</operator> <name><name>chrono</name><operator>-&gt;</operator><name>shift</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>chrono</name><operator>-&gt;</operator><name>var</name></name> <operator>=</operator> <operator>(</operator><operator>(</operator><operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <name><name>chrono</name><operator>-&gt;</operator><name>shift_var</name></name><operator>)</operator> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>*</operator> <name><name>chrono</name><operator>-&gt;</operator><name>var</name></name> <operator>+</operator> <name>var</name><operator>)</operator> <operator>&gt;&gt;</operator> <name><name>chrono</name><operator>-&gt;</operator><name>shift_var</name></name></expr>;</expr_stmt>


<expr_stmt><expr><name><name>chrono</name><operator>-&gt;</operator><name>start</name></name> <operator>=</operator> <name>VLC_TICK_INVALID</name></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>vout_chrono_Reset</name><parameter_list>(<parameter><decl><type><name>vout_chrono_t</name> <modifier>*</modifier></type><name>chrono</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_chrono_t</name></type> <name>ch</name> <init>= <expr><operator>*</operator><name>chrono</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>vout_chrono_Clean</name><argument_list>(<argument><expr><name>chrono</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vout_chrono_Init</name><argument_list>(<argument><expr><name>chrono</name></expr></argument>, <argument><expr><name><name>ch</name><operator>.</operator><name>shift</name></name></expr></argument>, <argument><expr><name><name>ch</name><operator>.</operator><name>avg_initial</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
