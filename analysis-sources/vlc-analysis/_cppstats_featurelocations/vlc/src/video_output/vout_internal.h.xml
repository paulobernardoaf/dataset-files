<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\src\video_output\vout_internal.h">






















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LIBVLC_VOUT_INTERNAL_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LIBVLC_VOUT_INTERNAL_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_atomic.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_picture_fifo.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_picture_pool.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_vout_display.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vout_wrapper.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"statistic.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"chrono.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../clock/clock.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../input/input_internal.h"</cpp:file></cpp:include>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VOUT_MAX_PICTURES</name></cpp:macro> <cpp:value>(20)</cpp:value></cpp:define>




<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type><name>vout</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_clock_t</name> <modifier>*</modifier></type><name>clock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>fmt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_mouse_event</name></type> <name>mouse_event</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>mouse_opaque</name></decl>;</decl_stmt>
}</block></struct></type> <name>vout_configuration_t</name>;</typedef>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"control.h"</cpp:file></cpp:include>

<struct_decl>struct <name>vout_snapshot</name>;</struct_decl>

<enum>enum <name>vout_crop_mode</name> <block>{
<decl><name>VOUT_CROP_NONE</name></decl>, <decl><name>VOUT_CROP_RATIO</name></decl>, <decl><name>VOUT_CROP_WINDOW</name></decl>, <decl><name>VOUT_CROP_BORDER</name></decl>,
}</block>;</enum>


<struct>struct <name>vout_thread_sys_t</name>
<block>{
<decl_stmt><decl><type><name>bool</name></type> <name>dummy</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>splitter_name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_clock_t</name> <modifier>*</modifier></type><name>clock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>rate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>delay</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>video_format_t</name></type> <name>original</name></decl>;</decl_stmt> 
<struct>struct <block>{
<struct>struct <block>{
<decl_stmt><decl><type><name>unsigned</name></type> <name>num</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>den</name></decl>;</decl_stmt>
}</block> <decl><name>dar</name></decl>;</struct>
<struct>struct <block>{
<decl_stmt><decl><type><name><name>enum</name> <name>vout_crop_mode</name></name></type> <name>mode</name></decl>;</decl_stmt>
<union>union <block>{
<struct>struct <block>{
<decl_stmt><decl><type><name>unsigned</name></type> <name>num</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>den</name></decl>;</decl_stmt>
}</block> <decl><name>ratio</name></decl>;</struct>
<struct>struct <block>{
<decl_stmt><decl><type><name>unsigned</name></type> <name>x</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>y</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>width</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>height</name></decl>;</decl_stmt>
}</block> <decl><name>window</name></decl>;</struct>
<struct>struct <block>{
<decl_stmt><decl><type><name>unsigned</name></type> <name>left</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>right</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>top</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>bottom</name></decl>;</decl_stmt>
}</block> <decl><name>border</name></decl>;</struct>
}</block>;</union>
}</block> <decl><name>crop</name></decl>;</struct>
}</block> <decl><name>source</name></decl>;</struct>


<decl_stmt><decl><type><name><name>struct</name> <name>vout_snapshot</name></name> <modifier>*</modifier></type><name>snapshot</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>vout_statistic_t</name></type> <name>statistic</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>spu_lock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>spu_t</name> <modifier>*</modifier></type><name>spu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_fourcc_t</name></type> <name>spu_blend_chroma</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_blender_t</name> <modifier>*</modifier></type><name>spu_blend</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>vlc_thread_t</name></type> <name>thread</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vout_control_t</name></type> <name>control</name></decl>;</decl_stmt>

<struct>struct <block>{
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>date</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>timestamp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>is_interlaced</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>decoded</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>current</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>
}</block> <decl><name>displayed</name></decl>;</struct>

<struct>struct <block>{
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>last</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>timestamp</name></decl>;</decl_stmt>
}</block> <decl><name>step</name></decl>;</struct>

<struct>struct <block>{
<decl_stmt><decl><type><name>bool</name></type> <name>is_on</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>date</name></decl>;</decl_stmt>
}</block> <decl><name>pause</name></decl>;</struct>


<struct>struct <block>{
<decl_stmt><decl><type><name>bool</name></type> <name>show</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>timeout</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>position</name></decl>;</decl_stmt>
}</block> <decl><name>title</name></decl>;</struct>

<struct>struct <block>{
<decl_stmt><decl><type><name>bool</name></type> <name>is_interlaced</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>date</name></decl>;</decl_stmt>
}</block> <decl><name>interlacing</name></decl>;</struct>


<decl_stmt><decl><type><name>bool</name></type> <name>is_late_dropped</name></decl>;</decl_stmt>


<struct>struct <block>{
<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>lock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>configuration</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>video_format_t</name></type> <name>src_fmt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type><name>src_vctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>filter_chain_t</name></name> <modifier>*</modifier></type><name>chain_static</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>filter_chain_t</name></name> <modifier>*</modifier></type><name>chain_interactive</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>has_deint</name></decl>;</decl_stmt>
}</block> <decl><name>filter</name></decl>;</struct>


<decl_stmt><decl><type><name>vlc_mouse_t</name></type> <name>mouse</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_mouse_event</name></type> <name>mouse_event</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>mouse_opaque</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>bool</name></type> <name>window_enabled</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>window_width</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>unsigned</name></type> <name>window_height</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>window_lock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_decoder_device</name> <modifier>*</modifier></type><name>dec_device</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>vout_display_cfg_t</name></type> <name>display_cfg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>display</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>display_lock</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>picture_pool_t</name> <modifier>*</modifier></type><name>private_pool</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>picture_pool_t</name> <modifier>*</modifier></type><name>display_pool</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>picture_fifo_t</name> <modifier>*</modifier></type><name>decoder_fifo</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vout_chrono_t</name></type> <name>render</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>vlc_atomic_rc_t</name></type> <name>rc</name></decl>;</decl_stmt>
}</block>;</struct>




<decl_stmt><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type><name>vout_Create</name><argument_list>(<argument><expr><name>vlc_object_t</name> <operator>*</operator><name>obj</name></expr></argument>)</argument_list> <name>VLC_USED</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type><name>vout_CreateDummy</name><argument_list>(<argument><expr><name>vlc_object_t</name> <operator>*</operator><name>obj</name></expr></argument>)</argument_list> <name>VLC_USED</name></decl>;</decl_stmt>







<function_decl><type><name>vlc_decoder_device</name> <modifier>*</modifier></type><name>vout_GetDevice</name><parameter_list>(<parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type><name>vout</name></decl></parameter>)</parameter_list>;</function_decl>
















<function_decl><type><name>int</name></type> <name>vout_Request</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>vout_configuration_t</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>, <parameter><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type><name>vctx</name></decl></parameter>, <parameter><decl><type><name>input_thread_t</name> <modifier>*</modifier></type><name>input</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>vout_Stop</name><parameter_list>(<parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>vout_StopDisplay</name><parameter_list>(<parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>void</name></type> <name>vout_Close</name><parameter_list>( <parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type><name>p_vout</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>int</name></type> <name>vout_ChangeSource</name><parameter_list>( <parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type><name>p_vout</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter> )</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type> <name>vout_ChangeFullscreen</name><parameter_list>(<parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>vout_ChangeWindowed</name><parameter_list>(<parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>vout_ChangeWindowState</name><parameter_list>(<parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>state</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>vout_ChangeDisplaySize</name><parameter_list>(<parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>height</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>vout_ChangeDisplayFilled</name><parameter_list>(<parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>is_filled</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>vout_ChangeZoom</name><parameter_list>(<parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>num</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>den</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>vout_ChangeDisplayAspectRatio</name><parameter_list>(<parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>num</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>den</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>vout_ChangeCropRatio</name><parameter_list>(<parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>num</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>den</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>vout_ChangeCropWindow</name><parameter_list>(<parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>vout_ChangeCropBorder</name><parameter_list>(<parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>left</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>top</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>right</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bottom</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>vout_ControlChangeFilters</name><parameter_list>(<parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>vout_ControlChangeSubSources</name><parameter_list>(<parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>vout_ControlChangeSubFilters</name><parameter_list>(<parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>vout_ChangeSpuChannelMargin</name><parameter_list>(<parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>vlc_vout_order</name></name></type> <name>order</name></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>vout_ChangeViewpoint</name><parameter_list>( <parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>vlc_viewpoint_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type> <name>vout_CreateVars</name><parameter_list>( <parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>vout_IntfInit</name><parameter_list>( <parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>vout_IntfReinit</name><parameter_list>( <parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>vout_IntfDeinit</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vout_OpenWrapper</name><parameter_list>(<parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>vout_CloseWrapper</name><parameter_list>(<parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>ssize_t</name></type> <name>vout_RegisterSubpictureChannelInternal</name><parameter_list>( <parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>vlc_clock_t</name> <modifier>*</modifier></type><name>clock</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>vlc_vout_order</name></name> <modifier>*</modifier></type><name>out_order</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>ssize_t</name></type> <name>spu_RegisterChannelInternal</name><parameter_list>( <parameter><decl><type><name>spu_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>vlc_clock_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>vlc_vout_order</name></name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>spu_Attach</name><parameter_list>( <parameter><decl><type><name>spu_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>input_thread_t</name> <modifier>*</modifier></type><name>input</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>spu_Detach</name><parameter_list>( <parameter><decl><type><name>spu_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>spu_SetClockDelay</name><parameter_list>(<parameter><decl><type><name>spu_t</name> <modifier>*</modifier></type><name>spu</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>channel_id</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>delay</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>spu_SetClockRate</name><parameter_list>(<parameter><decl><type><name>spu_t</name> <modifier>*</modifier></type><name>spu</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>channel_id</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>rate</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>spu_ChangeChannelOrderMargin</name><parameter_list>(<parameter><decl><type><name>spu_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>vlc_vout_order</name></name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>spu_SetHighlight</name><parameter_list>(<parameter><decl><type><name>spu_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>vlc_spu_highlight_t</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>vout_ChangePause</name><parameter_list>( <parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b_paused</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>i_date</name></decl></parameter> )</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>vout_ChangeRate</name><parameter_list>( <parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>rate</name></decl></parameter> )</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>vout_ChangeDelay</name><parameter_list>( <parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>delay</name></decl></parameter> )</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>vout_ChangeSpuRate</name><parameter_list>( <parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>channel_id</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>rate</name></decl></parameter> )</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>vout_ChangeSpuDelay</name><parameter_list>( <parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>channel_id</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>delay</name></decl></parameter> )</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>vout_MouseState</name><parameter_list>(<parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>vlc_mouse_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>vout_GetResetStatistic</name><parameter_list>( <parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type><name>p_vout</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>pi_displayed</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>pi_lost</name></decl></parameter> )</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>vout_NextPicture</name><parameter_list>( <parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type><name>p_vout</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name> <modifier>*</modifier></type><name>pi_duration</name></decl></parameter> )</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>vout_DisplayTitle</name><parameter_list>( <parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type><name>p_vout</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_title</name></decl></parameter> )</parameter_list>;</function_decl>




<function_decl><type><name>bool</name></type> <name>vout_IsEmpty</name><parameter_list>( <parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type><name>p_vout</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>vout_SetSpuHighlight</name><parameter_list>( <parameter><decl><type><name>vout_thread_t</name> <modifier>*</modifier></type><name>p_vout</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>vlc_spu_highlight_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
