<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\src\video_output\display.c">
























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdatomic.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_vout_display.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_vout.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_block.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_modules.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_filter.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_picture_pool.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_codec.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;libvlc.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"display.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"window.h"</cpp:file></cpp:include>




<function><type><specifier>static</specifier> <name>picture_t</name> <modifier>*</modifier></type><name>VideoBufferNew</name><parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name> <init>= <expr><name><name>filter</name><operator>-&gt;</operator><name>owner</name><operator>.</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>fmt</name> <init>= <expr><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_chroma</name></name> <operator>==</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_chroma</name></name> <operator>&amp;&amp;</operator>
<name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_width</name></name> <operator>==</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_width</name></name> <operator>&amp;&amp;</operator>
<name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_height</name></name> <operator>==</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>picture_pool_t</name> <modifier>*</modifier></type><name>pool</name> <init>= <expr><call><name>vout_GetPool</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>pool</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
<return>return <expr><call><name>picture_pool_Get</name><argument_list>(<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>vout_display_Control</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>query</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>va_list</name></type> <name>ap</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>va_start</name><argument_list>(<argument><expr><name>ap</name></expr></argument>, <argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name><name>vd</name><operator>-&gt;</operator><name>control</name></name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>query</name></expr></argument>, <argument><expr><name>ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>va_end</name><argument_list>(<argument><expr><name>ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>





<function><type><specifier>static</specifier> <name>int</name></type> <name>vout_display_start</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>func</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>forced</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>ap</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_open_cb</name></type> <name>activate</name> <init>= <expr><name>func</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name> <init>= <expr><call><name>va_arg</name><argument_list>(<argument><expr><name>ap</name></expr></argument>, <argument><expr><name>vout_display_t</name> <operator>*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type><name>cfg</name> <init>= <expr><call><name>va_arg</name><argument_list>(<argument><expr><name>ap</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>vout_display_cfg_t</name> <operator>*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type><name>context</name> <init>= <expr><call><name>va_arg</name><argument_list>(<argument><expr><name>ap</name></expr></argument>, <argument><expr><name>vlc_video_context</name> <operator>*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>


<expr_stmt><expr><call><name>video_format_Copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>source</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_sar_num</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_sar_den</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>obj</name><operator>.</operator><name>force</name></name> <operator>=</operator> <name>forced</name></expr>;</expr_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><call><name>activate</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>cfg</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>!=</operator> <name>VLC_SUCCESS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>video_format_Clean</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_objres_clear</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>vout_display_GetDefaultDisplaySize</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>width</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>height</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>width</name></name> <operator>!=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>height</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>width</name> <operator>=</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>height</name> <operator>=</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>height</name></name></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>width</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>width</name> <operator>=</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>height</name> <operator>=</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name><name>source</name><operator>-&gt;</operator><name>i_visible_height</name></name> <operator>*</operator> <name><name>source</name><operator>-&gt;</operator><name>i_sar_den</name></name> <operator>*</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>width</name></name> <operator>*</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>sar</name><operator>.</operator><name>num</name></name> <operator>/</operator>
<name><name>source</name><operator>-&gt;</operator><name>i_visible_width</name></name> <operator>/</operator> <name><name>source</name><operator>-&gt;</operator><name>i_sar_num</name></name> <operator>/</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>sar</name><operator>.</operator><name>den</name></name></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>height</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>width</name> <operator>=</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name><name>source</name><operator>-&gt;</operator><name>i_visible_width</name></name> <operator>*</operator> <name><name>source</name><operator>-&gt;</operator><name>i_sar_num</name></name> <operator>*</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>height</name></name> <operator>*</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>sar</name><operator>.</operator><name>den</name></name> <operator>/</operator>
<name><name>source</name><operator>-&gt;</operator><name>i_visible_height</name></name> <operator>/</operator> <name><name>source</name><operator>-&gt;</operator><name>i_sar_den</name></name> <operator>/</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>sar</name><operator>.</operator><name>num</name></name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>height</name> <operator>=</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>height</name></name></expr>;</expr_stmt>
</block_content>}</block></if>

<if type="elseif">else if <condition>(<expr><name><name>cfg</name><operator>-&gt;</operator><name>window_props</name><operator>.</operator><name>width</name></name> <operator>!=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>cfg</name><operator>-&gt;</operator><name>window_props</name><operator>.</operator><name>height</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>width</name> <operator>=</operator> <name><name>cfg</name><operator>-&gt;</operator><name>window_props</name><operator>.</operator><name>width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>height</name> <operator>=</operator> <name><name>cfg</name><operator>-&gt;</operator><name>window_props</name><operator>.</operator><name>height</name></name></expr>;</expr_stmt>
</block_content>}</block></if>

<if type="elseif">else if <condition>(<expr><name><name>source</name><operator>-&gt;</operator><name>i_sar_num</name></name> <operator>&gt;=</operator> <name><name>source</name><operator>-&gt;</operator><name>i_sar_den</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>width</name> <operator>=</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name><name>source</name><operator>-&gt;</operator><name>i_visible_width</name></name> <operator>*</operator> <name><name>source</name><operator>-&gt;</operator><name>i_sar_num</name></name> <operator>*</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>sar</name><operator>.</operator><name>den</name></name> <operator>/</operator> <name><name>source</name><operator>-&gt;</operator><name>i_sar_den</name></name> <operator>/</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>sar</name><operator>.</operator><name>num</name></name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>height</name> <operator>=</operator> <name><name>source</name><operator>-&gt;</operator><name>i_visible_height</name></name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>width</name> <operator>=</operator> <name><name>source</name><operator>-&gt;</operator><name>i_visible_width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>height</name> <operator>=</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name><name>source</name><operator>-&gt;</operator><name>i_visible_height</name></name> <operator>*</operator> <name><name>source</name><operator>-&gt;</operator><name>i_sar_den</name></name> <operator>*</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>sar</name><operator>.</operator><name>num</name></name> <operator>/</operator> <name><name>source</name><operator>-&gt;</operator><name>i_sar_num</name></name> <operator>/</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>sar</name><operator>.</operator><name>den</name></name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<expr_stmt><expr><operator>*</operator><name>width</name> <operator>=</operator> <operator>*</operator><name>width</name> <operator>*</operator> <name><name>cfg</name><operator>-&gt;</operator><name>zoom</name><operator>.</operator><name>num</name></name> <operator>/</operator> <name><name>cfg</name><operator>-&gt;</operator><name>zoom</name><operator>.</operator><name>den</name></name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>height</name> <operator>=</operator> <operator>*</operator><name>height</name> <operator>*</operator> <name><name>cfg</name><operator>-&gt;</operator><name>zoom</name><operator>.</operator><name>num</name></name> <operator>/</operator> <name><name>cfg</name><operator>-&gt;</operator><name>zoom</name><operator>.</operator><name>den</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ORIENT_IS_SWAP</name><argument_list>(<argument><expr><name><name>source</name><operator>-&gt;</operator><name>orientation</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name></type> <name>store</name> <init>= <expr><operator>*</operator><name>width</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><operator>*</operator><name>width</name> <operator>=</operator> <operator>*</operator><name>height</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>height</name> <operator>=</operator> <name>store</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>vout_display_PlacePicture</name><parameter_list>(<parameter><decl><type><name>vout_display_place_t</name> <modifier>*</modifier></type><name>place</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>)</parameter_list>
<block>{<block_content>


<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>cfg</name><operator>-&gt;</operator><name>window_props</name><operator>.</operator><name>width</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>cfg</name><operator>-&gt;</operator><name>window_props</name><operator>.</operator><name>height</name></name> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>place</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>place</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>width</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>||</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>height</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>


<decl_stmt><decl><type><name>unsigned</name></type> <name>display_width</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>display_height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>video_format_t</name></type> <name>source_rot</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>video_format_ApplyRotation</name><argument_list>(<argument><expr><operator>&amp;</operator><name>source_rot</name></expr></argument>, <argument><expr><name>source</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>source</name> <operator>=</operator> <operator>&amp;</operator><name>source_rot</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>cfg</name><operator>-&gt;</operator><name>is_display_filled</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>display_width</name> <operator>=</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>display_height</name> <operator>=</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>height</name></name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<decl_stmt><decl><type><name>vout_display_cfg_t</name></type> <name>cfg_tmp</name> <init>= <expr><operator>*</operator><name>cfg</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>cfg_tmp</name><operator>.</operator><name>display</name><operator>.</operator><name>width</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cfg_tmp</name><operator>.</operator><name>display</name><operator>.</operator><name>height</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vout_display_GetDefaultDisplaySize</name><argument_list>(<argument><expr><operator>&amp;</operator><name>display_width</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>display_height</name></expr></argument>,
<argument><expr><name>source</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>cfg_tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name></type> <name>width</name> <init>= <expr><name><name>source</name><operator>-&gt;</operator><name>i_visible_width</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name></type> <name>height</name> <init>= <expr><name><name>source</name><operator>-&gt;</operator><name>i_visible_height</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int64_t</name></type> <name>scaled_height</name> <init>= <expr><operator>(</operator><name>int64_t</name><operator>)</operator><name>height</name> <operator>*</operator> <name>display_width</name> <operator>*</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>sar</name><operator>.</operator><name>num</name></name> <operator>*</operator> <name><name>source</name><operator>-&gt;</operator><name>i_sar_den</name></name> <operator>/</operator> <operator>(</operator><name>width</name> <operator>*</operator> <name><name>source</name><operator>-&gt;</operator><name>i_sar_num</name></name> <operator>*</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>sar</name><operator>.</operator><name>den</name></name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int64_t</name></type> <name>scaled_width</name> <init>= <expr><operator>(</operator><name>int64_t</name><operator>)</operator><name>width</name> <operator>*</operator> <name>display_height</name> <operator>*</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>sar</name><operator>.</operator><name>den</name></name> <operator>*</operator> <name><name>source</name><operator>-&gt;</operator><name>i_sar_num</name></name> <operator>/</operator> <operator>(</operator><name>height</name> <operator>*</operator> <name><name>source</name><operator>-&gt;</operator><name>i_sar_den</name></name> <operator>*</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>sar</name><operator>.</operator><name>num</name></name><operator>)</operator></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>source</name><operator>-&gt;</operator><name>projection_mode</name></name> <operator>==</operator> <name>PROJECTION_MODE_RECTANGULAR</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>scaled_width</name> <operator>&lt;=</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>width</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>place</name><operator>-&gt;</operator><name>width</name></name> <operator>=</operator> <name>scaled_width</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>place</name><operator>-&gt;</operator><name>height</name></name> <operator>=</operator> <name>display_height</name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name><name>place</name><operator>-&gt;</operator><name>width</name></name> <operator>=</operator> <name>display_width</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>place</name><operator>-&gt;</operator><name>height</name></name> <operator>=</operator> <name>scaled_height</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>


<expr_stmt><expr><name><name>place</name><operator>-&gt;</operator><name>width</name></name> <operator>=</operator> <name>display_width</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>place</name><operator>-&gt;</operator><name>height</name></name> <operator>=</operator> <name>display_height</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>


<switch>switch <condition>(<expr><name><name>cfg</name><operator>-&gt;</operator><name>align</name><operator>.</operator><name>horizontal</name></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>VLC_VIDEO_ALIGN_LEFT</name></expr>:</case>
<expr_stmt><expr><name><name>place</name><operator>-&gt;</operator><name>x</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>VLC_VIDEO_ALIGN_RIGHT</name></expr>:</case>
<expr_stmt><expr><name><name>place</name><operator>-&gt;</operator><name>x</name></name> <operator>=</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>width</name></name> <operator>-</operator> <name><name>place</name><operator>-&gt;</operator><name>width</name></name></expr>;</expr_stmt>
<break>break;</break>
<default>default:</default>
<expr_stmt><expr><name><name>place</name><operator>-&gt;</operator><name>x</name></name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>int</name><operator>)</operator><name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>width</name></name> <operator>-</operator> <operator>(</operator><name>int</name><operator>)</operator><name><name>place</name><operator>-&gt;</operator><name>width</name></name><operator>)</operator> <operator>/</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>

<switch>switch <condition>(<expr><name><name>cfg</name><operator>-&gt;</operator><name>align</name><operator>.</operator><name>vertical</name></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>VLC_VIDEO_ALIGN_TOP</name></expr>:</case>
<expr_stmt><expr><name><name>place</name><operator>-&gt;</operator><name>y</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>VLC_VIDEO_ALIGN_BOTTOM</name></expr>:</case>
<expr_stmt><expr><name><name>place</name><operator>-&gt;</operator><name>y</name></name> <operator>=</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>height</name></name> <operator>-</operator> <name><name>place</name><operator>-&gt;</operator><name>height</name></name></expr>;</expr_stmt>
<break>break;</break>
<default>default:</default>
<expr_stmt><expr><name><name>place</name><operator>-&gt;</operator><name>y</name></name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>int</name><operator>)</operator><name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>height</name></name> <operator>-</operator> <operator>(</operator><name>int</name><operator>)</operator><name><name>place</name><operator>-&gt;</operator><name>height</name></name><operator>)</operator> <operator>/</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vout_display_TranslateMouseState</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>vlc_mouse_t</name> <modifier>*</modifier></type><name>video</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>vlc_mouse_t</name> <modifier>*</modifier></type><name>window</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_place_t</name></type> <name>place</name></decl>;</decl_stmt>


<expr_stmt><expr><call><name>vout_display_PlacePicture</name><argument_list>(<argument><expr><operator>&amp;</operator><name>place</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>source</name></name></expr></argument>, <argument><expr><name><name>vd</name><operator>-&gt;</operator><name>cfg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>place</name><operator>.</operator><name>width</name></name> <operator>&lt;=</operator> <literal type="number">0</literal> <operator>||</operator> <name><name>place</name><operator>.</operator><name>height</name></name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>video</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof <argument_list>(<argument><expr><operator>*</operator><name>video</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return;</return>
</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>wx</name> <init>= <expr><name><name>window</name><operator>-&gt;</operator><name>i_x</name></name></expr></init></decl>, <decl><type ref="prev"/><name>wy</name> <init>= <expr><name><name>window</name><operator>-&gt;</operator><name>i_y</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>, <decl><type ref="prev"/><name>y</name></decl>;</decl_stmt>

<switch>switch <condition>(<expr><name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>orientation</name></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>ORIENT_TOP_LEFT</name></expr>:</case>
<expr_stmt><expr><name>x</name> <operator>=</operator> <name>wx</name></expr>;</expr_stmt>
<expr_stmt><expr><name>y</name> <operator>=</operator> <name>wy</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ORIENT_TOP_RIGHT</name></expr>:</case>
<expr_stmt><expr><name>x</name> <operator>=</operator> <name><name>place</name><operator>.</operator><name>width</name></name> <operator>-</operator> <name>wx</name></expr>;</expr_stmt>
<expr_stmt><expr><name>y</name> <operator>=</operator> <name>wy</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ORIENT_BOTTOM_LEFT</name></expr>:</case>
<expr_stmt><expr><name>x</name> <operator>=</operator> <name>wx</name></expr>;</expr_stmt>
<expr_stmt><expr><name>y</name> <operator>=</operator> <name><name>place</name><operator>.</operator><name>height</name></name> <operator>-</operator> <name>wy</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ORIENT_BOTTOM_RIGHT</name></expr>:</case>
<expr_stmt><expr><name>x</name> <operator>=</operator> <name><name>place</name><operator>.</operator><name>width</name></name> <operator>-</operator> <name>wx</name></expr>;</expr_stmt>
<expr_stmt><expr><name>y</name> <operator>=</operator> <name><name>place</name><operator>.</operator><name>height</name></name> <operator>-</operator> <name>wy</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ORIENT_LEFT_TOP</name></expr>:</case>
<expr_stmt><expr><name>x</name> <operator>=</operator> <name>wy</name></expr>;</expr_stmt>
<expr_stmt><expr><name>y</name> <operator>=</operator> <name>wx</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ORIENT_LEFT_BOTTOM</name></expr>:</case>
<expr_stmt><expr><name>x</name> <operator>=</operator> <name>wy</name></expr>;</expr_stmt>
<expr_stmt><expr><name>y</name> <operator>=</operator> <name><name>place</name><operator>.</operator><name>width</name></name> <operator>-</operator> <name>wx</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ORIENT_RIGHT_TOP</name></expr>:</case>
<expr_stmt><expr><name>x</name> <operator>=</operator> <name><name>place</name><operator>.</operator><name>height</name></name> <operator>-</operator> <name>wy</name></expr>;</expr_stmt>
<expr_stmt><expr><name>y</name> <operator>=</operator> <name>wx</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ORIENT_RIGHT_BOTTOM</name></expr>:</case>
<expr_stmt><expr><name>x</name> <operator>=</operator> <name><name>place</name><operator>.</operator><name>height</name></name> <operator>-</operator> <name>wy</name></expr>;</expr_stmt>
<expr_stmt><expr><name>y</name> <operator>=</operator> <name><name>place</name><operator>.</operator><name>width</name></name> <operator>-</operator> <name>wx</name></expr>;</expr_stmt>
<break>break;</break>
<default>default:</default>
<expr_stmt><expr><call><name>vlc_assert_unreachable</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></switch>

<expr_stmt><expr><name><name>video</name><operator>-&gt;</operator><name>i_x</name></name> <operator>=</operator> <name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_x_offset</name></name>
<operator>+</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><operator>(</operator><name>x</name> <operator>-</operator> <name><name>place</name><operator>.</operator><name>x</name></name><operator>)</operator> <operator>*</operator> <name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_visible_width</name></name> <operator>/</operator> <name><name>place</name><operator>.</operator><name>width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>video</name><operator>-&gt;</operator><name>i_y</name></name> <operator>=</operator> <name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_y_offset</name></name>
<operator>+</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><operator>(</operator><name>y</name> <operator>-</operator> <name><name>place</name><operator>.</operator><name>y</name></name><operator>)</operator> <operator>*</operator> <name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_visible_height</name></name> <operator>/</operator> <name><name>place</name><operator>.</operator><name>height</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>video</name><operator>-&gt;</operator><name>i_pressed</name></name> <operator>=</operator> <name><name>window</name><operator>-&gt;</operator><name>i_pressed</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>video</name><operator>-&gt;</operator><name>b_double_click</name></name> <operator>=</operator> <name><name>window</name><operator>-&gt;</operator><name>b_double_click</name></name></expr>;</expr_stmt>
</block_content>}</block></function>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>vout_display_t</name></type> <name>display</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>vout_display_cfg_t</name></type> <name>cfg</name></decl>;</decl_stmt>

<struct>struct <block>{
<decl_stmt><decl><type><name>int</name></type> <name>left</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>top</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>right</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>bottom</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>den</name></decl>;</decl_stmt>
}</block> <decl><name>crop</name></decl>;</struct>


<decl_stmt><decl><type><name>video_format_t</name></type> <name>source</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type><name>src_vctx</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>filter_chain_t</name> <modifier>*</modifier></type><name>converters</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>bool</name></type> <name>reset_pictures</name></decl>;</decl_stmt> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<decl_stmt><decl><type><name>picture_pool_t</name> <modifier>*</modifier></type><name>pool</name></decl>;</decl_stmt>
}</block></struct></type> <name>vout_display_priv_t</name>;</typedef>

<function><type><specifier>static</specifier> <name>vlc_decoder_device</name> <modifier>*</modifier></type> <name>DisplayHoldDecoderDevice</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>o</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>sys</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>o</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name> <init>= <expr><name>sys</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vout_display_priv_t</name> <modifier>*</modifier></type><name>osys</name> <init>= <expr><call><name>container_of</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>vout_display_priv_t</name></expr></argument>, <argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<return>return <expr><ternary><condition><expr><name><name>osys</name><operator>-&gt;</operator><name>src_vctx</name></name></expr> ?</condition><then> <expr><call><name>vlc_video_context_HoldDevice</name><argument_list>(<argument><expr><name><name>osys</name><operator>-&gt;</operator><name>src_vctx</name></name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr>;</return>
</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name><name>struct</name> <name>filter_video_callbacks</name></name></type> <name>vout_display_filter_cbs</name> <init>= <expr><block>{
<expr><name>VideoBufferNew</name></expr>, <expr><name>DisplayHoldDecoderDevice</name></expr>,
}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>int</name></type> <name>VoutDisplayCreateRender</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_priv_t</name> <modifier>*</modifier></type><name>osys</name> <init>= <expr><call><name>container_of</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>vout_display_priv_t</name></expr></argument>, <argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>filter_owner_t</name></type> <name>owner</name> <init>= <expr><block>{
<expr><operator>.</operator><name>video</name> <operator>=</operator> <operator>&amp;</operator><name>vout_display_filter_cbs</name></expr>,
<expr><operator>.</operator><name>sys</name> <operator>=</operator> <name>vd</name></expr>,
}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>converters</name></name> <operator>=</operator> <call><name>filter_chain_NewVideo</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>owner</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name><name>osys</name><operator>-&gt;</operator><name>converters</name></name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>video_format_t</name></type> <name>v_src</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>source</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>v_src</name><operator>.</operator><name>i_sar_num</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>v_src</name><operator>.</operator><name>i_sar_den</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<decl_stmt><decl><type><name>video_format_t</name></type> <name>v_dst</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>fmt</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>v_dst</name><operator>.</operator><name>i_sar_num</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>v_dst</name><operator>.</operator><name>i_sar_den</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<decl_stmt><decl><type><name>video_format_t</name></type> <name>v_dst_cmp</name> <init>= <expr><name>v_dst</name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>v_src</name><operator>.</operator><name>i_chroma</name></name> <operator>==</operator> <name>VLC_CODEC_J420</name> <operator>&amp;&amp;</operator> <name><name>v_dst</name><operator>.</operator><name>i_chroma</name></name> <operator>==</operator> <name>VLC_CODEC_I420</name><operator>)</operator> <operator>||</operator>
<operator>(</operator><name><name>v_src</name><operator>.</operator><name>i_chroma</name></name> <operator>==</operator> <name>VLC_CODEC_J422</name> <operator>&amp;&amp;</operator> <name><name>v_dst</name><operator>.</operator><name>i_chroma</name></name> <operator>==</operator> <name>VLC_CODEC_I422</name><operator>)</operator> <operator>||</operator>
<operator>(</operator><name><name>v_src</name><operator>.</operator><name>i_chroma</name></name> <operator>==</operator> <name>VLC_CODEC_J440</name> <operator>&amp;&amp;</operator> <name><name>v_dst</name><operator>.</operator><name>i_chroma</name></name> <operator>==</operator> <name>VLC_CODEC_I440</name><operator>)</operator> <operator>||</operator>
<operator>(</operator><name><name>v_src</name><operator>.</operator><name>i_chroma</name></name> <operator>==</operator> <name>VLC_CODEC_J444</name> <operator>&amp;&amp;</operator> <name><name>v_dst</name><operator>.</operator><name>i_chroma</name></name> <operator>==</operator> <name>VLC_CODEC_I444</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>v_dst_cmp</name><operator>.</operator><name>i_chroma</name></name> <operator>=</operator> <name><name>v_src</name><operator>.</operator><name>i_chroma</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>bool</name></type> <name>convert</name> <init>= <expr><call><name>memcmp</name><argument_list>(<argument><expr><operator>&amp;</operator><name>v_src</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>v_dst_cmp</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>v_src</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>convert</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"A filter to adapt decoder %4.4s to display %4.4s is needed"</literal></expr></argument>,
<argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><operator>&amp;</operator><name><name>v_src</name><operator>.</operator><name>i_chroma</name></name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><operator>&amp;</operator><name><name>v_dst</name><operator>.</operator><name>i_chroma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<decl_stmt><decl><type><name>es_format_t</name></type> <name>src</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>es_format_InitFromVideo</name><argument_list>(<argument><expr><operator>&amp;</operator><name>src</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>v_src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">1</literal> <operator>+</operator> <operator>(</operator><name><name>v_dst_cmp</name><operator>.</operator><name>i_chroma</name></name> <operator>!=</operator> <name><name>v_dst</name><operator>.</operator><name>i_chroma</name></name><operator>)</operator></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>es_format_t</name></type> <name>dst</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>es_format_InitFromVideo</name><argument_list>(<argument><expr><operator>&amp;</operator><name>dst</name></expr></argument>, <argument><expr><ternary><condition><expr><name>i</name> <operator>==</operator> <literal type="number">0</literal></expr> ?</condition><then> <expr><operator>&amp;</operator><name>v_dst</name></expr> </then><else>: <expr><operator>&amp;</operator><name>v_dst_cmp</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>filter_chain_Reset</name><argument_list>(<argument><expr><name><name>osys</name><operator>-&gt;</operator><name>converters</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>src</name></expr></argument>, <argument><expr><name><name>osys</name><operator>-&gt;</operator><name>src_vctx</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>filter_chain_AppendConverter</name><argument_list>(<argument><expr><name><name>osys</name><operator>-&gt;</operator><name>converters</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>es_format_Clean</name><argument_list>(<argument><expr><operator>&amp;</operator><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>es_format_Clean</name><argument_list>(<argument><expr><operator>&amp;</operator><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to adapt decoder format to display"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>filter_chain_Delete</name><argument_list>(<argument><expr><name><name>osys</name><operator>-&gt;</operator><name>converters</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>converters</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vout_display_SendEventPicturesInvalid</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>vout_display_priv_t</name> <modifier>*</modifier></type><name>osys</name> <init>= <expr><call><name>container_of</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>vout_display_priv_t</name></expr></argument>, <argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"picture buffers invalidated asynchronously"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>reset_pictures</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>vd</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_assert_unreachable</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>VoutDisplayCropRatio</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>left</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>top</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>right</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>bottom</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>num</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>den</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name></type> <name>scaled_width</name> <init>= <expr><operator>(</operator><name>uint64_t</name><operator>)</operator><name><name>source</name><operator>-&gt;</operator><name>i_visible_height</name></name> <operator>*</operator> <name>num</name> <operator>*</operator> <name><name>source</name><operator>-&gt;</operator><name>i_sar_den</name></name> <operator>/</operator> <name>den</name> <operator>/</operator> <name><name>source</name><operator>-&gt;</operator><name>i_sar_num</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>scaled_height</name> <init>= <expr><operator>(</operator><name>uint64_t</name><operator>)</operator><name><name>source</name><operator>-&gt;</operator><name>i_visible_width</name></name> <operator>*</operator> <name>den</name> <operator>*</operator> <name><name>source</name><operator>-&gt;</operator><name>i_sar_num</name></name> <operator>/</operator> <name>num</name> <operator>/</operator> <name><name>source</name><operator>-&gt;</operator><name>i_sar_den</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>scaled_width</name> <operator>&lt;</operator> <name><name>source</name><operator>-&gt;</operator><name>i_visible_width</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>left</name> <operator>=</operator> <operator>(</operator><name><name>source</name><operator>-&gt;</operator><name>i_visible_width</name></name> <operator>-</operator> <name>scaled_width</name><operator>)</operator> <operator>/</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>top</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>right</name> <operator>=</operator> <operator>*</operator><name>left</name> <operator>+</operator> <name>scaled_width</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>bottom</name> <operator>=</operator> <operator>*</operator><name>top</name> <operator>+</operator> <name><name>source</name><operator>-&gt;</operator><name>i_visible_height</name></name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>left</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>top</name> <operator>=</operator> <operator>(</operator><name><name>source</name><operator>-&gt;</operator><name>i_visible_height</name></name> <operator>-</operator> <name>scaled_height</name><operator>)</operator> <operator>/</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>right</name> <operator>=</operator> <operator>*</operator><name>left</name> <operator>+</operator> <name><name>source</name><operator>-&gt;</operator><name>i_visible_width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>bottom</name> <operator>=</operator> <operator>*</operator><name>top</name> <operator>+</operator> <name>scaled_height</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>




<function><type><name>picture_pool_t</name> <modifier>*</modifier></type><name>vout_GetPool</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_priv_t</name> <modifier>*</modifier></type><name>osys</name> <init>= <expr><call><name>container_of</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>vout_display_priv_t</name></expr></argument>, <argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>osys</name><operator>-&gt;</operator><name>pool</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>pool</name></name> <operator>=</operator> <call><name>picture_pool_NewFromFormat</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument>, <argument><expr><name>count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<return>return <expr><name><name>osys</name><operator>-&gt;</operator><name>pool</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type> <name>vout_IsDisplayFiltered</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_priv_t</name> <modifier>*</modifier></type><name>osys</name> <init>= <expr><call><name>container_of</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>vout_display_priv_t</name></expr></argument>, <argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><name><name>osys</name><operator>-&gt;</operator><name>converters</name></name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <operator>!</operator><call><name>filter_chain_IsEmpty</name><argument_list>(<argument><expr><name><name>osys</name><operator>-&gt;</operator><name>converters</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>picture_t</name> <modifier>*</modifier></type><name>vout_ConvertForDisplay</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>picture</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_priv_t</name> <modifier>*</modifier></type><name>osys</name> <init>= <expr><call><name>container_of</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>vout_display_priv_t</name></expr></argument>, <argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>osys</name><operator>-&gt;</operator><name>converters</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>picture_Release</name><argument_list>(<argument><expr><name>picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<return>return <expr><call><name>filter_chain_VideoFilter</name><argument_list>(<argument><expr><name><name>osys</name><operator>-&gt;</operator><name>converters</name></name></expr></argument>, <argument><expr><name>picture</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>picture_t</name> <modifier>*</modifier></type><name>vout_display_Prepare</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>picture</name></decl></parameter>,
<parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>subpic</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>date</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>subpic</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><name>picture</name> <operator>=</operator> <call><name>vout_ConvertForDisplay</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>picture</name> <operator>!=</operator> <name>NULL</name> <operator>&amp;&amp;</operator> <name><name>vd</name><operator>-&gt;</operator><name>prepare</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name><name>vd</name><operator>-&gt;</operator><name>prepare</name></name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>picture</name></expr></argument>, <argument><expr><name>subpic</name></expr></argument>, <argument><expr><name>date</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<return>return <expr><name>picture</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vout_FilterFlush</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_priv_t</name> <modifier>*</modifier></type><name>osys</name> <init>= <expr><call><name>container_of</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>vout_display_priv_t</name></expr></argument>, <argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>osys</name><operator>-&gt;</operator><name>converters</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>filter_chain_VideoFlush</name><argument_list>(<argument><expr><name><name>osys</name><operator>-&gt;</operator><name>converters</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>vout_display_Reset</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_priv_t</name> <modifier>*</modifier></type><name>osys</name> <init>= <expr><call><name>container_of</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>vout_display_priv_t</name></expr></argument>, <argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>reset_pictures</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<if_stmt><if>if <condition>(<expr><name><name>osys</name><operator>-&gt;</operator><name>converters</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>filter_chain_Delete</name><argument_list>(<argument><expr><name><name>osys</name><operator>-&gt;</operator><name>converters</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>converters</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>osys</name><operator>-&gt;</operator><name>pool</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>picture_pool_Release</name><argument_list>(<argument><expr><name><name>osys</name><operator>-&gt;</operator><name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>pool</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>vout_display_Control</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>VOUT_DISPLAY_RESET_PICTURES</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>osys</name><operator>-&gt;</operator><name>cfg</name></name></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument>)</argument_list></call>
<operator>||</operator> <call><name>VoutDisplayCreateRender</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to adjust render format"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>vout_display_CheckReset</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>vout_display_priv_t</name> <modifier>*</modifier></type><name>osys</name> <init>= <expr><call><name>container_of</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>vout_display_priv_t</name></expr></argument>, <argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><name><name>osys</name><operator>-&gt;</operator><name>reset_pictures</name></name></expr>;</return>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>vout_UpdateSourceCrop</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_priv_t</name> <modifier>*</modifier></type><name>osys</name> <init>= <expr><call><name>container_of</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>vout_display_priv_t</name></expr></argument>, <argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>crop_num</name> <init>= <expr><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>num</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>crop_den</name> <init>= <expr><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>den</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>crop_num</name> <operator>!=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>crop_den</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>video_format_t</name></type> <name>fmt</name> <init>= <expr><name><name>osys</name><operator>-&gt;</operator><name>source</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_sar_num</name></name> <operator>=</operator> <name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_sar_num</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_sar_den</name></name> <operator>=</operator> <name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_sar_den</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VoutDisplayCropRatio</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>left</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>top</name></name></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>right</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>bottom</name></name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>, <argument><expr><name>crop_num</name></expr></argument>, <argument><expr><name>crop_den</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>right_max</name> <init>= <expr><name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_x_offset</name></name>
<operator>+</operator> <name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_visible_width</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>bottom_max</name> <init>= <expr><name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_y_offset</name></name>
<operator>+</operator> <name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_visible_height</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>left</name> <init>= <expr><call><name>VLC_CLIP</name><argument_list>(<argument><expr><operator>(</operator><name>int</name><operator>)</operator><name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_x_offset</name></name> <operator>+</operator> <name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>left</name></name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>right_max</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>top</name> <init>= <expr><call><name>VLC_CLIP</name><argument_list>(<argument><expr><operator>(</operator><name>int</name><operator>)</operator><name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_y_offset</name></name> <operator>+</operator> <name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>top</name></name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>bottom_max</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>right</name></decl>, <decl><type ref="prev"/><name>bottom</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>right</name></name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>right</name> <operator>=</operator> <operator>(</operator><name>int</name><operator>)</operator><operator>(</operator><name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_x_offset</name></name> <operator>+</operator> <name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_visible_width</name></name><operator>)</operator> <operator>+</operator> <name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>right</name></name></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name>right</name> <operator>=</operator> <operator>(</operator><name>int</name><operator>)</operator><name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_x_offset</name></name> <operator>+</operator> <name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>right</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>
<expr_stmt><expr><name>right</name> <operator>=</operator> <call><name>VLC_CLIP</name><argument_list>(<argument><expr><name>right</name></expr></argument>, <argument><expr><name>left</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>right_max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>bottom</name></name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>bottom</name> <operator>=</operator> <operator>(</operator><name>int</name><operator>)</operator><operator>(</operator><name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_y_offset</name></name> <operator>+</operator> <name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_visible_height</name></name><operator>)</operator> <operator>+</operator> <name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>bottom</name></name></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name>bottom</name> <operator>=</operator> <operator>(</operator><name>int</name><operator>)</operator><name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_y_offset</name></name> <operator>+</operator> <name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>bottom</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>
<expr_stmt><expr><name>bottom</name> <operator>=</operator> <call><name>VLC_CLIP</name><argument_list>(<argument><expr><name>bottom</name></expr></argument>, <argument><expr><name>top</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>bottom_max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_x_offset</name></name> <operator>=</operator> <name>left</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_y_offset</name></name> <operator>=</operator> <name>top</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_visible_width</name></name> <operator>=</operator> <name>right</name> <operator>-</operator> <name>left</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_visible_height</name></name> <operator>=</operator> <name>bottom</name> <operator>-</operator> <name>top</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>video_format_Print</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"SOURCE "</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>osys</name><operator>-&gt;</operator><name>source</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>video_format_Print</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"CROPPED"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>source</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><call><name>vout_display_Control</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>VOUT_DISPLAY_CHANGE_SOURCE_CROP</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>osys</name><operator>-&gt;</operator><name>cfg</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>left</name></name> <operator>=</operator> <name>left</name> <operator>-</operator> <name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_x_offset</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>top</name></name> <operator>=</operator> <name>top</name> <operator>-</operator> <name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_y_offset</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>right</name></name> <operator>=</operator> <name>right</name> <operator>-</operator>
<operator>(</operator><name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_x_offset</name></name> <operator>+</operator> <name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_visible_width</name></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>bottom</name></name> <operator>=</operator> <name>bottom</name> <operator>-</operator>
<operator>(</operator><name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_y_offset</name></name> <operator>+</operator> <name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_visible_height</name></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>num</name></name> <operator>=</operator> <name>crop_num</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>den</name></name> <operator>=</operator> <name>crop_den</name></expr>;</expr_stmt>
<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>vout_SetSourceAspect</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>sar_num</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>sar_den</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_priv_t</name> <modifier>*</modifier></type><name>osys</name> <init>= <expr><call><name>container_of</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>vout_display_priv_t</name></expr></argument>, <argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>sar_num</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>sar_den</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_sar_num</name></name> <operator>=</operator> <name>sar_num</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_sar_den</name></name> <operator>=</operator> <name>sar_den</name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_sar_num</name></name> <operator>=</operator> <name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_sar_num</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_sar_den</name></name> <operator>=</operator> <name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_sar_den</name></name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>vout_display_Control</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>VOUT_DISPLAY_CHANGE_SOURCE_ASPECT</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>osys</name><operator>-&gt;</operator><name>cfg</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>num</name></name> <operator>!=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>den</name></name> <operator>!=</operator> <literal type="number">0</literal>
<operator>&amp;&amp;</operator> <call><name>vout_UpdateSourceCrop</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>VoutFixFormatAR</name><parameter_list>(<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>vlc_ureduce</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>fmt</name><operator>-&gt;</operator><name>i_sar_num</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>fmt</name><operator>-&gt;</operator><name>i_sar_den</name></name></expr></argument>,
<argument><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_sar_num</name></name></expr></argument>, <argument><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_sar_den</name></name></expr></argument>, <argument><expr><literal type="number">50000</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>fmt</name><operator>-&gt;</operator><name>i_sar_num</name></name> <operator>&lt;=</operator> <literal type="number">0</literal> <operator>||</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_sar_den</name></name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_sar_num</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_sar_den</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vout_UpdateDisplaySourceProperties</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_priv_t</name> <modifier>*</modifier></type><name>osys</name> <init>= <expr><call><name>container_of</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>vout_display_priv_t</name></expr></argument>, <argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>err1</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>err2</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>video_format_t</name></type> <name>fixed_src</name> <init>= <expr><operator>*</operator><name>source</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>VoutFixFormatAR</name><argument_list>( <argument><expr><operator>&amp;</operator><name>fixed_src</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>fixed_src</name><operator>.</operator><name>i_sar_num</name></name> <operator>*</operator> <name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_sar_den</name></name> <operator>!=</operator>
<name><name>fixed_src</name><operator>.</operator><name>i_sar_den</name></name> <operator>*</operator> <name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_sar_num</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_sar_num</name></name> <operator>=</operator> <name><name>fixed_src</name><operator>.</operator><name>i_sar_num</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_sar_den</name></name> <operator>=</operator> <name><name>fixed_src</name><operator>.</operator><name>i_sar_den</name></name></expr>;</expr_stmt>


<expr_stmt><expr><name>err1</name> <operator>=</operator> <call><name>vout_SetSourceAspect</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_sar_num</name></name></expr></argument>,
<argument><expr><name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_sar_den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>source</name><operator>-&gt;</operator><name>i_x_offset</name></name> <operator>!=</operator> <name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_x_offset</name></name> <operator>||</operator>
<name><name>source</name><operator>-&gt;</operator><name>i_y_offset</name></name> <operator>!=</operator> <name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_y_offset</name></name> <operator>||</operator>
<name><name>source</name><operator>-&gt;</operator><name>i_visible_width</name></name> <operator>!=</operator> <name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_visible_width</name></name> <operator>||</operator>
<name><name>source</name><operator>-&gt;</operator><name>i_visible_height</name></name> <operator>!=</operator> <name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_visible_height</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>video_format_CopyCrop</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>osys</name><operator>-&gt;</operator><name>source</name></name></expr></argument>, <argument><expr><name>source</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<expr_stmt><expr><name>err2</name> <operator>=</operator> <call><name>vout_UpdateSourceCrop</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>err1</name> <operator>||</operator> <name>err2</name> <operator>||</operator> <call><name>vout_display_CheckReset</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>vout_display_Reset</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vout_display_SetSize</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_priv_t</name> <modifier>*</modifier></type><name>osys</name> <init>= <expr><call><name>container_of</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>vout_display_priv_t</name></expr></argument>, <argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>display</name><operator>.</operator><name>width</name></name> <operator>=</operator> <name>width</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>display</name><operator>.</operator><name>height</name></name> <operator>=</operator> <name>height</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>vout_display_Control</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>VOUT_DISPLAY_CHANGE_DISPLAY_SIZE</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>osys</name><operator>-&gt;</operator><name>cfg</name></name></expr></argument>)</argument_list></call>
<operator>||</operator> <call><name>vout_display_CheckReset</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>vout_display_Reset</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vout_SetDisplayFilled</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>is_filled</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_priv_t</name> <modifier>*</modifier></type><name>osys</name> <init>= <expr><call><name>container_of</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>vout_display_priv_t</name></expr></argument>, <argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>is_filled</name> <operator>==</operator> <name><name>osys</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>is_display_filled</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt> 

<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>is_display_filled</name></name> <operator>=</operator> <name>is_filled</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>vout_display_Control</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>VOUT_DISPLAY_CHANGE_DISPLAY_FILLED</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>osys</name><operator>-&gt;</operator><name>cfg</name></name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>vout_display_CheckReset</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>vout_display_Reset</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vout_SetDisplayZoom</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>num</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>den</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_priv_t</name> <modifier>*</modifier></type><name>osys</name> <init>= <expr><call><name>container_of</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>vout_display_priv_t</name></expr></argument>, <argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>osys</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>is_display_filled</name></name>
<operator>&amp;&amp;</operator> <name><name>osys</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>zoom</name><operator>.</operator><name>num</name></name> <operator>==</operator> <name>num</name> <operator>&amp;&amp;</operator> <name><name>osys</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>zoom</name><operator>.</operator><name>den</name></name> <operator>==</operator> <name>den</name></expr>)</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt> 

<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>zoom</name><operator>.</operator><name>num</name></name> <operator>=</operator> <name>num</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>zoom</name><operator>.</operator><name>den</name></name> <operator>=</operator> <name>den</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>vout_display_Control</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>VOUT_DISPLAY_CHANGE_ZOOM</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>osys</name><operator>-&gt;</operator><name>cfg</name></name></expr></argument>)</argument_list></call> <operator>||</operator>
<call><name>vout_display_CheckReset</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>vout_display_Reset</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vout_SetDisplayAspect</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>dar_num</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>dar_den</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_priv_t</name> <modifier>*</modifier></type><name>osys</name> <init>= <expr><call><name>container_of</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>vout_display_priv_t</name></expr></argument>, <argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>sar_num</name></decl>, <decl><type ref="prev"/><name>sar_den</name></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>dar_num</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>dar_den</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>sar_num</name> <operator>=</operator> <name>dar_num</name> <operator>*</operator> <name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_visible_height</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>sar_den</name> <operator>=</operator> <name>dar_den</name> <operator>*</operator> <name><name>osys</name><operator>-&gt;</operator><name>source</name><operator>.</operator><name>i_visible_width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_ureduce</name><argument_list>(<argument><expr><operator>&amp;</operator><name>sar_num</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>sar_den</name></expr></argument>, <argument><expr><name>sar_num</name></expr></argument>, <argument><expr><name>sar_den</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>sar_num</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>sar_den</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>vout_SetSourceAspect</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>sar_num</name></expr></argument>, <argument><expr><name>sar_den</name></expr></argument>)</argument_list></call> <operator>||</operator>
<call><name>vout_display_CheckReset</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>vout_display_Reset</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vout_SetDisplayCrop</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>crop_num</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>crop_den</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>left</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>top</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>right</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bottom</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_priv_t</name> <modifier>*</modifier></type><name>osys</name> <init>= <expr><call><name>container_of</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>vout_display_priv_t</name></expr></argument>, <argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>left</name></name> <operator>!=</operator> <operator>(</operator><name>int</name><operator>)</operator><name>left</name> <operator>||</operator> <name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>top</name></name> <operator>!=</operator> <operator>(</operator><name>int</name><operator>)</operator><name>top</name> <operator>||</operator>
<name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>right</name></name> <operator>!=</operator> <name>right</name> <operator>||</operator> <name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>bottom</name></name> <operator>!=</operator> <name>bottom</name> <operator>||</operator>
<operator>(</operator><name>crop_num</name> <operator>!=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>crop_den</name> <operator>!=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<operator>(</operator><name>crop_num</name> <operator>!=</operator> <name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>num</name></name> <operator>||</operator> <name>crop_den</name> <operator>!=</operator> <name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>den</name></name><operator>)</operator><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>left</name></name> <operator>=</operator> <name>left</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>top</name></name> <operator>=</operator> <name>top</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>right</name></name> <operator>=</operator> <name>right</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>bottom</name></name> <operator>=</operator> <name>bottom</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>num</name></name> <operator>=</operator> <name>crop_num</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>den</name></name> <operator>=</operator> <name>crop_den</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>vout_UpdateSourceCrop</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call><operator>||</operator> <call><name>vout_display_CheckReset</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>vout_display_Reset</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vout_SetDisplayViewpoint</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>vlc_viewpoint_t</name> <modifier>*</modifier></type><name>p_viewpoint</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_priv_t</name> <modifier>*</modifier></type><name>osys</name> <init>= <expr><call><name>container_of</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>vout_display_priv_t</name></expr></argument>, <argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>osys</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>viewpoint</name><operator>.</operator><name>yaw</name></name> <operator>!=</operator> <name><name>p_viewpoint</name><operator>-&gt;</operator><name>yaw</name></name> <operator>||</operator>
<name><name>osys</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>viewpoint</name><operator>.</operator><name>pitch</name></name> <operator>!=</operator> <name><name>p_viewpoint</name><operator>-&gt;</operator><name>pitch</name></name> <operator>||</operator>
<name><name>osys</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>viewpoint</name><operator>.</operator><name>roll</name></name> <operator>!=</operator> <name><name>p_viewpoint</name><operator>-&gt;</operator><name>roll</name></name> <operator>||</operator>
<name><name>osys</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>viewpoint</name><operator>.</operator><name>fov</name></name> <operator>!=</operator> <name><name>p_viewpoint</name><operator>-&gt;</operator><name>fov</name></name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>vlc_viewpoint_t</name></type> <name>old_vp</name> <init>= <expr><name><name>osys</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>viewpoint</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>viewpoint</name></name> <operator>=</operator> <operator>*</operator><name>p_viewpoint</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>vout_display_Control</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>VOUT_DISPLAY_CHANGE_VIEWPOINT</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>osys</name><operator>-&gt;</operator><name>cfg</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to change Viewpoint"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>viewpoint</name></name> <operator>=</operator> <name>old_vp</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vout_display_New</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>parent</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,
<parameter><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type><name>vctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>module</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>vout_display_owner_t</name> <modifier>*</modifier></type><name>owner</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_priv_t</name> <modifier>*</modifier></type><name>osys</name> <init>= <expr><call><name>vlc_custom_create</name><argument_list>(<argument><expr><name>parent</name></expr></argument>, <argument><expr><sizeof>sizeof <argument_list>(<argument><expr><operator>*</operator><name>osys</name></expr></argument>)</argument_list></sizeof></expr></argument>,
<argument><expr><literal type="string">"vout display"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>osys</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>display_width</name></decl>, <decl><type ref="prev"/><name>display_height</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>vout_display_GetDefaultDisplaySize</name><argument_list>(<argument><expr><operator>&amp;</operator><name>display_width</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>display_height</name></expr></argument>,
<argument><expr><name>source</name></expr></argument>, <argument><expr><name>cfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>cfg</name></name> <operator>=</operator> <operator>*</operator><name>cfg</name></expr>;</expr_stmt>


<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>display</name><operator>.</operator><name>width</name></name> <operator>=</operator> <name>display_width</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>display</name><operator>.</operator><name>height</name></name> <operator>=</operator> <name>display_height</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>window_props</name><operator>.</operator><name>width</name></name> <operator>=</operator> <name><name>osys</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>window_props</name><operator>.</operator><name>height</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>reset_pictures</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>pool</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>source</name></name> <operator>=</operator> <operator>*</operator><name>source</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>left</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>top</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>right</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>bottom</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>num</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>den</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>src_vctx</name></name> <operator>=</operator> <ternary><condition><expr><name>vctx</name></expr> ?</condition><then> <expr><call><name>vlc_video_context_Hold</name><argument_list>( <argument><expr><name>vctx</name></expr></argument> )</argument_list></call></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr>;</expr_stmt>


<decl_stmt><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name> <init>= <expr><operator>&amp;</operator><name><name>osys</name><operator>-&gt;</operator><name>display</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>video_format_Copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>source</name></name></expr></argument>, <argument><expr><name>source</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>info</name></name> <operator>=</operator> <operator>(</operator><name>vout_display_info_t</name><operator>)</operator><block>{ }</block></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>cfg</name></name> <operator>=</operator> <operator>&amp;</operator><name><name>osys</name><operator>-&gt;</operator><name>cfg</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>prepare</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>display</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>control</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>close</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>owner</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>owner</name></name> <operator>=</operator> <operator>*</operator><name>owner</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>vlc_module_load</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"vout display"</literal></expr></argument>, <argument><expr><name>module</name></expr></argument>, <argument><expr><name>module</name> <operator>&amp;&amp;</operator> <operator>*</operator><name>module</name> <operator>!=</operator> <literal type="char">'\0'</literal></expr></argument>,
<argument><expr><name>vout_display_start</name></expr></argument>, <argument><expr><name>vd</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>osys</name><operator>-&gt;</operator><name>cfg</name></name></expr></argument>,
<argument><expr><name><name>osys</name><operator>-&gt;</operator><name>src_vctx</name></name></expr></argument>)</argument_list></call> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__OS2__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<if_stmt><if>if <condition>(<expr><operator>(</operator><call><name>var_GetBool</name><argument_list>(<argument><expr><name>parent</name></expr></argument>, <argument><expr><literal type="string">"fullscreen"</literal></expr></argument>)</argument_list></call>
<operator>||</operator> <call><name>var_GetBool</name><argument_list>(<argument><expr><name>parent</name></expr></argument>, <argument><expr><literal type="string">"video-wallpaper"</literal></expr></argument>)</argument_list></call><operator>)</operator>
<operator>&amp;&amp;</operator> <call><name>vout_display_Control</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>VOUT_DISPLAY_CHANGE_FULLSCREEN</name></expr></argument>,
<argument><expr><name>true</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>VLC_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>cfg</name><operator>.</operator><name>is_fullscreen</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>var_InheritBool</name><argument_list>(<argument><expr><name>parent</name></expr></argument>, <argument><expr><literal type="string">"video-on-top"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>vout_display_Control</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>VOUT_DISPLAY_CHANGE_WINDOW_STATE</name></expr></argument>,
<argument><expr><operator>(</operator><name>unsigned</name><operator>)</operator><name>VOUT_WINDOW_STATE_ABOVE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<if_stmt><if>if <condition>(<expr><call><name>VoutDisplayCreateRender</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>vd</name><operator>-&gt;</operator><name>close</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name><name>vd</name><operator>-&gt;</operator><name>close</name></name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>vlc_objres_clear</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>video_format_Clean</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>vd</name></expr>;</return>
<label><name>error</name>:</label>
<expr_stmt><expr><call><name>video_format_Clean</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>source</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_object_delete</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vout_display_Delete</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_priv_t</name> <modifier>*</modifier></type><name>osys</name> <init>= <expr><call><name>container_of</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>vout_display_priv_t</name></expr></argument>, <argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>osys</name><operator>-&gt;</operator><name>src_vctx</name></name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>vlc_video_context_Release</name><argument_list>( <argument><expr><name><name>osys</name><operator>-&gt;</operator><name>src_vctx</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>osys</name><operator>-&gt;</operator><name>src_vctx</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>osys</name><operator>-&gt;</operator><name>converters</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>filter_chain_Delete</name><argument_list>(<argument><expr><name><name>osys</name><operator>-&gt;</operator><name>converters</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>osys</name><operator>-&gt;</operator><name>pool</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>picture_pool_Release</name><argument_list>(<argument><expr><name><name>osys</name><operator>-&gt;</operator><name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>vd</name><operator>-&gt;</operator><name>close</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name><name>vd</name><operator>-&gt;</operator><name>close</name></name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>vlc_objres_clear</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>video_format_Clean</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>source</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>video_format_Clean</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_object_delete</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
