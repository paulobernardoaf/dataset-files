<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\src\input\es_out.h">






















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LIBVLC_INPUT_ES_OUT_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LIBVLC_INPUT_ES_OUT_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<enum>enum <name>es_out_mode_e</name>
<block>{
<decl><name>ES_OUT_MODE_NONE</name></decl>, 
<decl><name>ES_OUT_MODE_ALL</name></decl>, 
<decl><name>ES_OUT_MODE_AUTO</name></decl>, 
<decl><name>ES_OUT_MODE_PARTIAL</name></decl>,
<decl><name>ES_OUT_MODE_END</name></decl> 
}</block>;</enum>

<enum>enum <name>es_out_query_private_e</name>
<block>{

<decl><name>ES_OUT_PRIV_SET_MODE</name></decl>, 


<decl><name>ES_OUT_PRIV_SET_ES</name></decl>, 
<decl><name>ES_OUT_PRIV_UNSET_ES</name></decl>, 
<decl><name>ES_OUT_PRIV_RESTART_ES</name></decl>, 


<decl><name>ES_OUT_PRIV_GET_WAKE_UP</name></decl>, 


<decl><name>ES_OUT_PRIV_SET_ES_LIST</name></decl>, 

<decl><name>ES_OUT_PRIV_SET_ES_CAT_IDS</name></decl>, 



<decl><name>ES_OUT_PRIV_STOP_ALL_ES</name></decl>, 

<decl><name>ES_OUT_PRIV_START_ALL_ES</name></decl>, 


<decl><name>ES_OUT_PRIV_GET_BUFFERING</name></decl>, 


<decl><name>ES_OUT_PRIV_SET_ES_DELAY</name></decl>, 


<decl><name>ES_OUT_PRIV_SET_DELAY</name></decl>, 


<decl><name>ES_OUT_PRIV_SET_RECORD_STATE</name></decl>, 


<decl><name>ES_OUT_PRIV_SET_PAUSE_STATE</name></decl>, 


<decl><name>ES_OUT_PRIV_SET_RATE</name></decl>, 


<decl><name>ES_OUT_PRIV_SET_FRAME_NEXT</name></decl>, 


<decl><name>ES_OUT_PRIV_SET_TIMES</name></decl>, 


<decl><name>ES_OUT_PRIV_SET_JITTER</name></decl>, 


<decl><name>ES_OUT_PRIV_GET_GROUP_FORCED</name></decl>, 


<decl><name>ES_OUT_PRIV_SET_EOS</name></decl>, 


<decl><name>ES_OUT_PRIV_SET_VBI_PAGE</name></decl>, 


<decl><name>ES_OUT_PRIV_SET_VBI_TRANSPARENCY</name></decl> 
}</block>;</enum>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>es_out_vaPrivControl</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>query</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>args</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>vlc_assert</name><argument_list>( <argument><expr><name><name>out</name><operator>-&gt;</operator><name>cbs</name><operator>-&gt;</operator><name>priv_control</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name><name>out</name><operator>-&gt;</operator><name>cbs</name><operator>-&gt;</operator><name>priv_control</name></name><argument_list>( <argument><expr><name>out</name></expr></argument>, <argument><expr><name>query</name></expr></argument>, <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>es_out_PrivControl</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>query</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>va_list</name></type> <name>args</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>va_start</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>query</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>result</name> <init>= <expr><call><name>es_out_vaPrivControl</name><argument_list>( <argument><expr><name>out</name></expr></argument>, <argument><expr><name>query</name></expr></argument>, <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>va_end</name><argument_list>( <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>es_out_SetMode</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>p_out</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_mode</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name> <init>= <expr><call><name>es_out_PrivControl</name><argument_list>( <argument><expr><name>p_out</name></expr></argument>, <argument><expr><name>ES_OUT_PRIV_SET_MODE</name></expr></argument>, <argument><expr><name>i_mode</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><operator>!</operator><name>i_ret</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>es_out_SetEs</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>p_out</name></decl></parameter>, <parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>id</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>es_out_PrivControl</name><argument_list>( <argument><expr><name>p_out</name></expr></argument>, <argument><expr><name>ES_OUT_PRIV_SET_ES</name></expr></argument>, <argument><expr><name>id</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>es_out_UnsetEs</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>p_out</name></decl></parameter>, <parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>id</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>es_out_PrivControl</name><argument_list>( <argument><expr><name>p_out</name></expr></argument>, <argument><expr><name>ES_OUT_PRIV_UNSET_ES</name></expr></argument>, <argument><expr><name>id</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>es_out_RestartEs</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>p_out</name></decl></parameter>, <parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>id</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>es_out_PrivControl</name><argument_list>( <argument><expr><name>p_out</name></expr></argument>, <argument><expr><name>ES_OUT_PRIV_RESTART_ES</name></expr></argument>, <argument><expr><name>id</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>vlc_tick_t</name></type> <name>es_out_GetWakeup</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>p_out</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_wu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name> <init>= <expr><call><name>es_out_PrivControl</name><argument_list>( <argument><expr><name>p_out</name></expr></argument>, <argument><expr><name>ES_OUT_PRIV_GET_WAKE_UP</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_wu</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><operator>!</operator><name>i_ret</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>i_wu</name></expr>;</return>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>es_out_SetEsList</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>p_out</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>es_format_category_e</name></name></type> <name>cat</name></decl></parameter>,
<parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>ids</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>es_out_PrivControl</name><argument_list>( <argument><expr><name>p_out</name></expr></argument>, <argument><expr><name>ES_OUT_PRIV_SET_ES_LIST</name></expr></argument>, <argument><expr><name>cat</name></expr></argument>, <argument><expr><name>ids</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>es_out_SetEsCatIds</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>p_out</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>es_format_category_e</name></name></type> <name>cat</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str_ids</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><call><name>es_out_PrivControl</name><argument_list>( <argument><expr><name>p_out</name></expr></argument>, <argument><expr><name>ES_OUT_PRIV_SET_ES_CAT_IDS</name></expr></argument>,
<argument><expr><name>cat</name></expr></argument>, <argument><expr><name>str_ids</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><name>ret</name> <operator>==</operator> <name>VLC_SUCCESS</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>es_out_StopAllEs</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>p_out</name></decl></parameter>, <parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier><modifier>*</modifier><modifier>*</modifier></type><name>context</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>es_out_PrivControl</name><argument_list>( <argument><expr><name>p_out</name></expr></argument>, <argument><expr><name>ES_OUT_PRIV_STOP_ALL_ES</name></expr></argument>, <argument><expr><name>context</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>es_out_StartAllEs</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>p_out</name></decl></parameter>, <parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>context</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>es_out_PrivControl</name><argument_list>( <argument><expr><name>p_out</name></expr></argument>, <argument><expr><name>ES_OUT_PRIV_START_ALL_ES</name></expr></argument>, <argument><expr><name>context</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type> <name>es_out_GetBuffering</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>p_out</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>bool</name></type> <name>b</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name> <init>= <expr><call><name>es_out_PrivControl</name><argument_list>( <argument><expr><name>p_out</name></expr></argument>, <argument><expr><name>ES_OUT_PRIV_GET_BUFFERING</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>b</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><operator>!</operator><name>i_ret</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>b</name></expr>;</return>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type> <name>es_out_GetEmpty</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>p_out</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>bool</name></type> <name>b</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name> <init>= <expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name>p_out</name></expr></argument>, <argument><expr><name>ES_OUT_GET_EMPTY</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>b</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><operator>!</operator><name>i_ret</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>b</name></expr>;</return>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>es_out_SetEsDelay</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>p_out</name></decl></parameter>, <parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>es</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>i_delay</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name> <init>= <expr><call><name>es_out_PrivControl</name><argument_list>( <argument><expr><name>p_out</name></expr></argument>, <argument><expr><name>ES_OUT_PRIV_SET_ES_DELAY</name></expr></argument>, <argument><expr><name>es</name></expr></argument>, <argument><expr><name>i_delay</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><operator>!</operator><name>i_ret</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>es_out_SetDelay</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>p_out</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_cat</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>i_delay</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name> <init>= <expr><call><name>es_out_PrivControl</name><argument_list>( <argument><expr><name>p_out</name></expr></argument>, <argument><expr><name>ES_OUT_PRIV_SET_DELAY</name></expr></argument>, <argument><expr><name>i_cat</name></expr></argument>, <argument><expr><name>i_delay</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><operator>!</operator><name>i_ret</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>es_out_SetRecordState</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>p_out</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b_record</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>es_out_PrivControl</name><argument_list>( <argument><expr><name>p_out</name></expr></argument>, <argument><expr><name>ES_OUT_PRIV_SET_RECORD_STATE</name></expr></argument>, <argument><expr><name>b_record</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>es_out_SetPauseState</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>p_out</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b_source_paused</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b_paused</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>i_date</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>es_out_PrivControl</name><argument_list>( <argument><expr><name>p_out</name></expr></argument>, <argument><expr><name>ES_OUT_PRIV_SET_PAUSE_STATE</name></expr></argument>, <argument><expr><name>b_source_paused</name></expr></argument>, <argument><expr><name>b_paused</name></expr></argument>, <argument><expr><name>i_date</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>es_out_SetRate</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>p_out</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>source_rate</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>rate</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>es_out_PrivControl</name><argument_list>( <argument><expr><name>p_out</name></expr></argument>, <argument><expr><name>ES_OUT_PRIV_SET_RATE</name></expr></argument>, <argument><expr><name>source_rate</name></expr></argument>, <argument><expr><name>rate</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>es_out_SetFrameNext</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>p_out</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>es_out_PrivControl</name><argument_list>( <argument><expr><name>p_out</name></expr></argument>, <argument><expr><name>ES_OUT_PRIV_SET_FRAME_NEXT</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>es_out_SetTimes</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>p_out</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>f_position</name></decl></parameter>,
<parameter><decl><type><name>vlc_tick_t</name></type> <name>i_time</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>i_normal_time</name></decl></parameter>,
<parameter><decl><type><name>vlc_tick_t</name></type> <name>i_length</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name> <init>= <expr><call><name>es_out_PrivControl</name><argument_list>( <argument><expr><name>p_out</name></expr></argument>, <argument><expr><name>ES_OUT_PRIV_SET_TIMES</name></expr></argument>, <argument><expr><name>f_position</name></expr></argument>, <argument><expr><name>i_time</name></expr></argument>,
<argument><expr><name>i_normal_time</name></expr></argument>, <argument><expr><name>i_length</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><operator>!</operator><name>i_ret</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>es_out_SetJitter</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>p_out</name></decl></parameter>,
<parameter><decl><type><name>vlc_tick_t</name></type> <name>i_pts_delay</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>i_pts_jitter</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_cr_average</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name> <init>= <expr><call><name>es_out_PrivControl</name><argument_list>( <argument><expr><name>p_out</name></expr></argument>, <argument><expr><name>ES_OUT_PRIV_SET_JITTER</name></expr></argument>,
<argument><expr><name>i_pts_delay</name></expr></argument>, <argument><expr><name>i_pts_jitter</name></expr></argument>, <argument><expr><name>i_cr_average</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><operator>!</operator><name>i_ret</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>es_out_GetGroupForced</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>p_out</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i_group</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name> <init>= <expr><call><name>es_out_PrivControl</name><argument_list>( <argument><expr><name>p_out</name></expr></argument>, <argument><expr><name>ES_OUT_PRIV_GET_GROUP_FORCED</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_group</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><operator>!</operator><name>i_ret</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>i_group</name></expr>;</return>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>es_out_Eos</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>p_out</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name> <init>= <expr><call><name>es_out_PrivControl</name><argument_list>( <argument><expr><name>p_out</name></expr></argument>, <argument><expr><name>ES_OUT_PRIV_SET_EOS</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><operator>!</operator><name>i_ret</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>es_out_SetVbiPage</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>p_out</name></decl></parameter>, <parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>id</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>page</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>es_out_PrivControl</name><argument_list>( <argument><expr><name>p_out</name></expr></argument>, <argument><expr><name>ES_OUT_PRIV_SET_VBI_PAGE</name></expr></argument>, <argument><expr><name>id</name></expr></argument>, <argument><expr><name>page</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>es_out_SetVbiTransparency</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>p_out</name></decl></parameter>, <parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>id</name></decl></parameter>,
<parameter><decl><type><name>bool</name></type> <name>enabled</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>es_out_PrivControl</name><argument_list>( <argument><expr><name>p_out</name></expr></argument>, <argument><expr><name>ES_OUT_PRIV_SET_VBI_TRANSPARENCY</name></expr></argument>, <argument><expr><name>id</name></expr></argument>,
<argument><expr><name>enabled</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function_decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>input_EsOutNew</name><parameter_list>( <parameter><decl><type><name>input_thread_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>input_source_t</name> <modifier>*</modifier></type><name>main_source</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>rate</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>input_EsOutTimeshiftNew</name><parameter_list>( <parameter><decl><type><name>input_thread_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>i_rate</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>input_EsOutSourceNew</name><parameter_list>(<parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>master_out</name></decl></parameter>, <parameter><decl><type><name>input_source_t</name> <modifier>*</modifier></type><name>in</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>es_out_id_t</name> <modifier>*</modifier></type><name>vlc_es_id_get_out</name><parameter_list>(<parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>input_source_t</name> <modifier>*</modifier></type><name>vlc_es_id_GetSource</name><parameter_list>(<parameter><decl><type><name>vlc_es_id_t</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
