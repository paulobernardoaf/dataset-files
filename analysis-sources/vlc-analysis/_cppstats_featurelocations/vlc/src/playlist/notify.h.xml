<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\src\playlist\notify.h">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>VLC_PLAYLIST_NOTIFY_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_PLAYLIST_NOTIFY_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_list.h&gt;</cpp:file></cpp:include>

<typedef>typedef <type><name><name>struct</name> <name>vlc_playlist</name></name></type> <name>vlc_playlist_t</name>;</typedef>

<struct>struct <name>vlc_playlist_listener_id</name>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_playlist_callbacks</name></name> <modifier>*</modifier></type><name>cbs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>userdata</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>vlc_list</name></name></type> <name>node</name></decl>;</decl_stmt> 
}</block>;</struct>

<struct>struct <name>vlc_playlist_state</name> <block>{
<decl_stmt><decl><type><name>ssize_t</name></type> <name>current</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>has_prev</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>has_next</name></decl>;</decl_stmt>
}</block>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vlc_playlist_listener_foreach</name><parameter_list>(<parameter><type><name>listener</name></type></parameter>, <parameter><type><name>playlist</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>vlc_list_foreach(listener, &amp;(playlist)-&gt;listeners, node)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vlc_playlist_NotifyListener</name><parameter_list>(<parameter><type><name>playlist</name></type></parameter>, <parameter><type><name>listener</name></type></parameter>, <parameter><type><name>event</name></type></parameter>, <parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { if (listener-&gt;cbs-&gt;event) listener-&gt;cbs-&gt;event(playlist, ##__VA_ARGS__, listener-&gt;userdata); } while (0)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vlc_playlist_Notify</name><parameter_list>(<parameter><type><name>playlist</name></type></parameter>, <parameter><type><name>event</name></type></parameter>, <parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { vlc_playlist_AssertLocked(playlist); vlc_playlist_listener_id *listener; vlc_playlist_listener_foreach(listener, playlist) vlc_playlist_NotifyListener(playlist, listener, event, ##__VA_ARGS__); } while(0)</cpp:value></cpp:define>







<function_decl><type><name>void</name></type>
<name>vlc_playlist_state_Save</name><parameter_list>(<parameter><decl><type><name>vlc_playlist_t</name> <modifier>*</modifier></type><name>playlist</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>vlc_playlist_state</name></name> <modifier>*</modifier></type><name>state</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>
<name>vlc_playlist_state_NotifyChanges</name><parameter_list>(<parameter><decl><type><name>vlc_playlist_t</name> <modifier>*</modifier></type><name>playlist</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>vlc_playlist_state</name></name> <modifier>*</modifier></type><name>saved_state</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>
<name>vlc_playlist_NotifyMediaUpdated</name><parameter_list>(<parameter><decl><type><name>vlc_playlist_t</name> <modifier>*</modifier></type><name>playlist</name></decl></parameter>, <parameter><decl><type><name>input_item_t</name> <modifier>*</modifier></type><name>media</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
