<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\src\darwin\specific.c">
























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../libvlc.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dirent.h&gt;</cpp:file></cpp:include> 
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;CoreFoundation/CoreFoundation.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;locale.h&gt;</cpp:file></cpp:include>




<function><type><name>void</name></type> <name>system_Init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ENABLE_NLS</name></expr></argument>)</argument_list></call></expr></cpp:if>

<if_stmt><if>if<condition>( <expr><name>NULL</name> <operator>==</operator> <call><name>getenv</name><argument_list>(<argument><expr><literal type="string">"LANG"</literal></expr></argument>)</argument_list></call></expr> )</condition>
<block>{<block_content>





<decl_stmt><decl><type><name>CFArrayRef</name></type> <name>all_locales</name></decl>, <decl><type ref="prev"/><name>preferred_locales</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>psz_locale</name><index>[<expr><literal type="number">50</literal></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><name>all_locales</name> <operator>=</operator> <call><name>CFLocaleCopyAvailableLocaleIdentifiers</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>preferred_locales</name> <operator>=</operator> <call><name>CFBundleCopyLocalizationsForPreferences</name><argument_list>( <argument><expr><name>all_locales</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name>preferred_locales</name></expr> )</condition>
<block>{<block_content>
<if_stmt><if>if <condition>( <expr><call><name>CFArrayGetCount</name><argument_list>( <argument><expr><name>preferred_locales</name></expr></argument> )</argument_list></call></expr> )</condition>
<block>{<block_content>
<decl_stmt><decl><type><name>CFStringRef</name></type> <name>user_language_string_ref</name> <init>= <expr><call><name>CFArrayGetValueAtIndex</name><argument_list>( <argument><expr><name>preferred_locales</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>CFStringGetCString</name><argument_list>( <argument><expr><name>user_language_string_ref</name></expr></argument>, <argument><expr><name>psz_locale</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>psz_locale</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>kCFStringEncodingUTF8</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>setenv</name><argument_list>( <argument><expr><literal type="string">"LANG"</literal></expr></argument>, <argument><expr><name>psz_locale</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>CFRelease</name><argument_list>( <argument><expr><name>preferred_locales</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>CFRelease</name><argument_list>( <argument><expr><name>all_locales</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></function>




<function><type><name>void</name></type> <name>system_Configure</name><parameter_list>( <parameter><decl><type><name>libvlc_int_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>i_argc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>ppsz_argv</name><index>[]</index></name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>p_this</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>i_argc</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>ppsz_argv</name></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
