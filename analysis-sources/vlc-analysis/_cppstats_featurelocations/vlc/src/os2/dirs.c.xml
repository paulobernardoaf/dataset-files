<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\src\os2\dirs.c">





















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../libvlc.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_charset.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config/configuration.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>config_GetRelDir</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dir</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>prefixlen</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>prefixlen</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name>prefixlen</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<while>while<condition>( <expr><name><name>LIBDIR</name><index>[ <expr><name>prefixlen</name></expr> ]</index></name> <operator>&amp;&amp;</operator> <name><name>SYSDATADIR</name><index>[ <expr><name>prefixlen</name></expr> ]</index></name>
<operator>&amp;&amp;</operator> <name><name>LIBDIR</name><index>[ <expr><name>prefixlen</name></expr> ]</index></name> <operator>==</operator> <name><name>SYSDATADIR</name><index>[ <expr><name>prefixlen</name></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>prefixlen</name><operator>++</operator></expr>;</expr_stmt></block_content></block></while>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>dir</name> <operator>+</operator> <name>prefixlen</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>config_GetBaseDir</name><parameter_list>( <parameter><decl><type><name>void</name></type></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>static</specifier> <name>CHAR</name></type> <name><name>basedir</name><index>[ <expr><name>CCHMAXPATH</name> <operator>+</operator> <literal type="number">4</literal></expr> ]</index></name> <init>= <expr><literal type="string">""</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>basedir</name><index>[ <expr><literal type="number">0</literal></expr> ]</index></name> <operator>==</operator> <literal type="char">'\0'</literal></expr>)</condition>
<block>{<block_content>
<decl_stmt><decl><type><name>HMODULE</name></type> <name>hmod</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>DosQueryModFromEIP</name><argument_list>( <argument><expr><operator>&amp;</operator><name>hmod</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><operator>(</operator> <name>ULONG</name> <operator>)</operator><name>system_Init</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DosQueryModuleName</name><argument_list>( <argument><expr><name>hmod</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><name>basedir</name></expr></argument> )</argument_list></sizeof></expr></argument>, <argument><expr><name>basedir</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>


<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>slash</name> <init>= <expr><call><name>strrchr</name><argument_list>( <argument><expr><name>basedir</name></expr></argument>, <argument><expr><literal type="char">'\\'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><operator>*</operator><name>slash</name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>slash</name> <operator>=</operator> <call><name>strrchr</name><argument_list>( <argument><expr><name>basedir</name></expr></argument>, <argument><expr><literal type="char">'\\'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name>slash</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>abort</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>slash</name><index>[ <expr><literal type="number">1</literal></expr> ]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>basedir</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type><name>config_GetRealDir</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dir</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>char</name></type> <name><name>realdir</name><index>[ <expr><name>CCHMAXPATH</name> <operator>+</operator> <literal type="number">4</literal></expr> ]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>snprintf</name><argument_list>( <argument><expr><name>realdir</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><name>realdir</name></expr></argument> )</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"%s%s"</literal></expr></argument>,
<argument><expr><call><name>config_GetBaseDir</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>config_GetRelDir</name><argument_list>( <argument><expr><name>dir</name></expr></argument> )</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>FromLocaleDup</name><argument_list>( <argument><expr><name>realdir</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>char</name> <modifier>*</modifier></type><name>config_GetLibDir</name><parameter_list>( <parameter><decl><type><name>void</name></type></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name> <init>= <expr><call><name>getenv</name> <argument_list>(<argument><expr><literal type="string">"VLC_LIB_PATH"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>path</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>FromLocaleDup</name><argument_list>( <argument><expr><name>path</name></expr></argument> )</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><call><name>config_GetRealDir</name><argument_list>( <argument><expr><name>PKGLIBDIR</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type><name>config_GetLibExecDir</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name> <init>= <expr><call><name>getenv</name> <argument_list>(<argument><expr><literal type="string">"VLC_LIB_PATH"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>path</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>FromLocaleDup</name><argument_list>( <argument><expr><name>path</name></expr></argument> )</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><call><name>config_GetRealDir</name><argument_list>( <argument><expr><name>PKGLIBEXECDIR</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>






<function><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type><name>config_GetDataDir</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name> <init>= <expr><call><name>getenv</name> <argument_list>(<argument><expr><literal type="string">"VLC_DATA_PATH"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>path</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>FromLocaleDup</name><argument_list>( <argument><expr><name>path</name></expr></argument> )</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><call><name>config_GetRealDir</name><argument_list>( <argument><expr><name>PKGDATADIR</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>char</name> <modifier>*</modifier></type><name>config_GetSysPath</name><parameter_list>(<parameter><decl><type><name>vlc_sysdir_t</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>dir</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<switch>switch <condition>(<expr><name>type</name></expr>)</condition>
<block>{<block_content>
<case>case <expr><name>VLC_PKG_DATA_DIR</name></expr>:</case>
<expr_stmt><expr><name>dir</name> <operator>=</operator> <call><name>config_GetDataDir</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>VLC_PKG_LIB_DIR</name></expr>:</case>
<expr_stmt><expr><name>dir</name> <operator>=</operator> <call><name>config_GetLibDir</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>VLC_PKG_LIBEXEC_DIR</name></expr>:</case>
<expr_stmt><expr><name>dir</name> <operator>=</operator> <call><name>config_GetLibExecDir</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>VLC_SYSDATA_DIR</name></expr>:</case>
<expr_stmt><expr><name>dir</name> <operator>=</operator> <call><name>config_GetRealDir</name><argument_list>( <argument><expr><name>SYSDATADIR</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>VLC_LOCALE_DIR</name></expr>:</case>
<expr_stmt><expr><name>dir</name> <operator>=</operator> <call><name>config_GetRealDir</name><argument_list>( <argument><expr><name>LOCALEDIR</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<default>default:</default>
<expr_stmt><expr><call><name>vlc_assert_unreachable</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></switch>

<if_stmt><if>if <condition>(<expr><name>filename</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <call><name>unlikely</name><argument_list>(<argument><expr><name>dir</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>dir</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>path</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>asprintf</name><argument_list>(<argument><expr><operator>&amp;</operator><name>path</name></expr></argument>, <argument><expr><literal type="string">"%s/%s"</literal></expr></argument>, <argument><expr><name>dir</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>path</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type><name>config_GetHomeDir</name> <parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>home</name> <init>= <expr><call><name>getenv</name> <argument_list>(<argument><expr><literal type="string">"HOME"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>home</name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>FromLocaleDup</name> <argument_list>(<argument><expr><name>home</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><call><name>config_GetLibDir</name><argument_list>()</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>char</name> <modifier>*</modifier></type><name>config_GetUserDir</name> <parameter_list>(<parameter><decl><type><name>vlc_userdir_t</name></type> <name>type</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<switch>switch <condition>(<expr><name>type</name></expr>)</condition>
<block>{<block_content>
<case>case <expr><name>VLC_HOME_DIR</name></expr>:</case>
<case>case <expr><name>VLC_CONFIG_DIR</name></expr>:</case>
<case>case <expr><name>VLC_USERDATA_DIR</name></expr>:</case>
<case>case <expr><name>VLC_CACHE_DIR</name></expr>:</case>
<case>case <expr><name>VLC_DESKTOP_DIR</name></expr>:</case>
<case>case <expr><name>VLC_DOWNLOAD_DIR</name></expr>:</case>
<case>case <expr><name>VLC_TEMPLATES_DIR</name></expr>:</case>
<case>case <expr><name>VLC_PUBLICSHARE_DIR</name></expr>:</case>
<case>case <expr><name>VLC_DOCUMENTS_DIR</name></expr>:</case>
<case>case <expr><name>VLC_MUSIC_DIR</name></expr>:</case>
<case>case <expr><name>VLC_PICTURES_DIR</name></expr>:</case>
<case>case <expr><name>VLC_VIDEOS_DIR</name></expr>:</case>
<break>break;</break>
</block_content>}</block></switch>
<return>return <expr><call><name>config_GetHomeDir</name> <argument_list>()</argument_list></call></expr>;</return>
</block_content>}</block></function>
</unit>
