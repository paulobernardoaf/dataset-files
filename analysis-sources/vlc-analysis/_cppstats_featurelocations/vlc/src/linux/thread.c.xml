<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\src\linux\thread.c">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;errno.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;limits.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/types.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;unistd.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/syscall.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;linux/futex.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>FUTEX_PRIVATE_FLAG</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FUTEX_WAKE_PRIVATE</name></cpp:macro> <cpp:value>FUTEX_WAKE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FUTEX_WAIT_PRIVATE</name></cpp:macro> <cpp:value>FUTEX_WAIT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FUTEX_WAIT_BITSET_PRIVATE</name></cpp:macro> <cpp:value>FUTEX_WAIT_BITSET</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<function><type><name>unsigned</name> <name>long</name></type> <name>vlc_thread_id</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>static</specifier> <name>__thread</name> <name>pid_t</name></type> <name>tid</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>tid</name> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>tid</name> <operator>=</operator> <call><name>syscall</name><argument_list>(<argument><expr><name>__NR_gettid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>tid</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>sys_futex</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>op</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>val</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>timespec</name></name> <modifier>*</modifier></type><name>to</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr2</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>val3</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>syscall</name><argument_list>(<argument><expr><name>__NR_futex</name></expr></argument>, <argument><expr><name>addr</name></expr></argument>, <argument><expr><name>op</name></expr></argument>, <argument><expr><name>val</name></expr></argument>, <argument><expr><name>to</name></expr></argument>, <argument><expr><name>addr2</name></expr></argument>, <argument><expr><name>val3</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>vlc_futex_wake</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>sys_futex</name><argument_list>(<argument><expr><name>addr</name></expr></argument>, <argument><expr><name>FUTEX_WAKE_PRIVATE</name></expr></argument>, <argument><expr><name>nr</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>vlc_futex_wait</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>flags</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>val</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>timespec</name></name> <modifier>*</modifier></type><name>to</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__ANDROID__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>int</name></type> <name>type</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>pthread_setcanceltype</name><argument_list>(<argument><expr><name>PTHREAD_CANCEL_ASYNCHRONOUS</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>sys_futex</name><argument_list>(<argument><expr><name>addr</name></expr></argument>, <argument><expr><name>FUTEX_WAIT_BITSET_PRIVATE</name> <operator>|</operator> <name>flags</name></expr></argument>, <argument><expr><name>val</name></expr></argument>, <argument><expr><name>to</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>,
<argument><expr><name>FUTEX_BITSET_MATCH_ANY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__ANDROID__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>pthread_setcanceltype</name><argument_list>(<argument><expr><name>type</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlc_atomic_notify_one</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>vlc_futex_wake</name><argument_list>(<argument><expr><name>addr</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlc_atomic_notify_all</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>vlc_futex_wake</name><argument_list>(<argument><expr><name>addr</name></expr></argument>, <argument><expr><name>INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlc_atomic_wait</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>val</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>vlc_futex_wait</name><argument_list>(<argument><expr><name>addr</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>val</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>vlc_atomic_timedwait</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>val</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>deadline</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>timespec</name></name></type> <name>ts</name> <init>= <expr><call><name>timespec_from_vlc_tick</name><argument_list>(<argument><expr><name>deadline</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>vlc_futex_wait</name><argument_list>(<argument><expr><name>addr</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>val</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>ts</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

<switch>switch <condition>(<expr><name>errno</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>EINTR</name></expr>:</case>
<case>case <expr><name>EAGAIN</name></expr>:</case>
<return>return <expr><literal type="number">0</literal></expr>;</return>
<case>case <expr><name>EFAULT</name></expr>:</case>
<case>case <expr><name>EINVAL</name></expr>:</case>
<expr_stmt><expr><call><name>vlc_assert_unreachable</name><argument_list>()</argument_list></call></expr>;</expr_stmt> 
<default>default:</default>
<break>break;</break>
</block_content>}</block></switch>
<return>return <expr><name>errno</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>vlc_atomic_timedwait_daytime</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>val</name></decl></parameter>, <parameter><decl><type><name>time_t</name></type> <name>deadline</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>timespec</name></name></type> <name>ts</name> <init>= <expr><block>{ <expr><operator>.</operator><name>tv_sec</name> <operator>=</operator> <name>deadline</name></expr>, <expr><operator>.</operator><name>tv_nsec</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>vlc_futex_wait</name><argument_list>(<argument><expr><name>addr</name></expr></argument>, <argument><expr><name>FUTEX_CLOCK_REALTIME</name></expr></argument>, <argument><expr><name>val</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>ts</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

<switch>switch <condition>(<expr><name>errno</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>EINTR</name></expr>:</case>
<case>case <expr><name>EAGAIN</name></expr>:</case>
<return>return <expr><literal type="number">0</literal></expr>;</return>
<case>case <expr><name>EFAULT</name></expr>:</case>
<case>case <expr><name>EINVAL</name></expr>:</case>
<expr_stmt><expr><call><name>vlc_assert_unreachable</name><argument_list>()</argument_list></call></expr>;</expr_stmt> 
<default>default:</default>
<break>break;</break>
</block_content>}</block></switch>
<return>return <expr><name>errno</name></expr>;</return>
</block_content>}</block></function>
</unit>
