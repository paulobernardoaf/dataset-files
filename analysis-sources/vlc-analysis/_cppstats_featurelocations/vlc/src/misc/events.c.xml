<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\src\misc\events.c">



























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_events.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_arrays.h&gt;</cpp:file></cpp:include>









<typedef>typedef <type><struct>struct <name>vlc_event_listener_t</name>
<block>{
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type> <name>p_user_data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_event_callback_t</name></type> <name>pf_callback</name></decl>;</decl_stmt>
}</block></struct></type> <name>vlc_event_listener_t</name>;</typedef>





<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>vlc_event_manager_init</name></cpp:undef>






<function><type><name>void</name></type> <name>vlc_event_manager_init</name><parameter_list>( <parameter><decl><type><name>vlc_event_manager_t</name> <modifier>*</modifier></type> <name>p_em</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>p_obj</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>p_em</name><operator>-&gt;</operator><name>p_obj</name></name> <operator>=</operator> <name>p_obj</name></expr>;</expr_stmt>


<expr_stmt><expr><call><name>vlc_mutex_init_recursive</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_em</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<for>for<control>( <init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>ARRAY_SIZE</name><argument_list>(<argument><expr><name><name>p_em</name><operator>-&gt;</operator><name>events</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ARRAY_INIT</name><argument_list>( <argument><expr><name><name>p_em</name><operator>-&gt;</operator><name>events</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>listeners</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>
</block_content>}</block></function>




<function><type><name>void</name></type> <name>vlc_event_manager_fini</name><parameter_list>( <parameter><decl><type><name>vlc_event_manager_t</name> <modifier>*</modifier></type> <name>p_em</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>vlc_event_listener_t</name></name> <modifier>*</modifier></type> <name>listener</name></decl>;</decl_stmt>

<for>for<control>( <init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>ARRAY_SIZE</name><argument_list>(<argument><expr><name><name>p_em</name><operator>-&gt;</operator><name>events</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>vlc_event_listeners_group_t</name></name> <modifier>*</modifier></type><name>slot</name> <init>= <expr><name><name>p_em</name><operator>-&gt;</operator><name>events</name></name> <operator>+</operator> <name>i</name></expr></init></decl>;</decl_stmt>

<macro><name>ARRAY_FOREACH</name><argument_list>( <argument>listener</argument>, <argument>slot-&gt;listeners</argument> )</argument_list></macro>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>listener</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ARRAY_RESET</name><argument_list>( <argument><expr><name><name>slot</name><operator>-&gt;</operator><name>listeners</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>




<function><type><name>void</name></type> <name>vlc_event_send</name><parameter_list>( <parameter><decl><type><name>vlc_event_manager_t</name> <modifier>*</modifier></type> <name>p_em</name></decl></parameter>,
<parameter><decl><type><name>vlc_event_t</name> <modifier>*</modifier></type> <name>p_event</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vlc_event_listeners_group_t</name> <modifier>*</modifier></type><name>slot</name> <init>= <expr><operator>&amp;</operator><name><name>p_em</name><operator>-&gt;</operator><name>events</name><index>[<expr><name><name>p_event</name><operator>-&gt;</operator><name>type</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_event_listener_t</name> <modifier>*</modifier></type> <name>listener</name></decl>;</decl_stmt>


<expr_stmt><expr><name><name>p_event</name><operator>-&gt;</operator><name>p_obj</name></name> <operator>=</operator> <name><name>p_em</name><operator>-&gt;</operator><name>p_obj</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_em</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr> ;</expr_stmt>

<macro><name>ARRAY_FOREACH</name><argument_list>( <argument>listener</argument>, <argument>slot-&gt;listeners</argument> )</argument_list></macro>
<expr_stmt><expr><call><name><name>listener</name><operator>-&gt;</operator><name>pf_callback</name></name><argument_list>( <argument><expr><name>p_event</name></expr></argument>, <argument><expr><name><name>listener</name><operator>-&gt;</operator><name>p_user_data</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_em</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>vlc_event_attach</name></cpp:undef>



<function><type><name>int</name></type> <name>vlc_event_attach</name><parameter_list>( <parameter><decl><type><name>vlc_event_manager_t</name> <modifier>*</modifier></type> <name>p_em</name></decl></parameter>,
<parameter><decl><type><name>vlc_event_type_t</name></type> <name>event_type</name></decl></parameter>,
<parameter><decl><type><name>vlc_event_callback_t</name></type> <name>pf_callback</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_user_data</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vlc_event_listener_t</name> <modifier>*</modifier></type> <name>listener</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_event_listeners_group_t</name> <modifier>*</modifier></type><name>slot</name> <init>= <expr><operator>&amp;</operator><name><name>p_em</name><operator>-&gt;</operator><name>events</name><index>[<expr><name>event_type</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>listener</name> <operator>=</operator> <call><name>malloc</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>vlc_event_listener_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><operator>!</operator><name>listener</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>listener</name><operator>-&gt;</operator><name>p_user_data</name></name> <operator>=</operator> <name>p_user_data</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>listener</name><operator>-&gt;</operator><name>pf_callback</name></name> <operator>=</operator> <name>pf_callback</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_em</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ARRAY_APPEND</name><argument_list>( <argument><expr><name><name>slot</name><operator>-&gt;</operator><name>listeners</name></name></expr></argument>, <argument><expr><name>listener</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_em</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>





<function><type><name>void</name></type> <name>vlc_event_detach</name><parameter_list>( <parameter><decl><type><name>vlc_event_manager_t</name> <modifier>*</modifier></type><name>p_em</name></decl></parameter>,
<parameter><decl><type><name>vlc_event_type_t</name></type> <name>event_type</name></decl></parameter>,
<parameter><decl><type><name>vlc_event_callback_t</name></type> <name>pf_callback</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_user_data</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vlc_event_listeners_group_t</name> <modifier>*</modifier></type><name>slot</name> <init>= <expr><operator>&amp;</operator><name><name>p_em</name><operator>-&gt;</operator><name>events</name><index>[<expr><name>event_type</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_em</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>slot</name><operator>-&gt;</operator><name>listeners</name><operator>.</operator><name>i_size</name></name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>vlc_event_listener_t</name></name> <modifier>*</modifier></type><name>listener</name> <init>= <expr><name><name>slot</name><operator>-&gt;</operator><name>listeners</name><operator>.</operator><name>p_elems</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>( <expr><name><name>listener</name><operator>-&gt;</operator><name>pf_callback</name></name> <operator>==</operator> <name>pf_callback</name> <operator>&amp;&amp;</operator>
<name><name>listener</name><operator>-&gt;</operator><name>p_user_data</name></name> <operator>==</operator> <name>p_user_data</name></expr> )</condition>
<block>{<block_content>

<expr_stmt><expr><call><name>ARRAY_REMOVE</name><argument_list>( <argument><expr><name><name>slot</name><operator>-&gt;</operator><name>listeners</name></name></expr></argument>, <argument><expr><name>i</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_em</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>listener</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>

<expr_stmt><expr><call><name>vlc_assert_unreachable</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
