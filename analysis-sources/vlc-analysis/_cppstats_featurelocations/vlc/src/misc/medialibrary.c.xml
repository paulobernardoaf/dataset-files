<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\src\misc\medialibrary.c">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_media_library.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_modules.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_list.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_threads.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;libvlc.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<struct>struct <name>vlc_ml_event_callback_t</name>
<block>{
<decl_stmt><decl><type><name>vlc_ml_callback_t</name></type> <name>pf_cb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name><modifier>*</modifier></type> <name>p_data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>vlc_list</name></name></type> <name>node</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>vlc_medialibrary_t</name>
<block>{
<decl_stmt><decl><type><name>vlc_medialibrary_module_t</name></type> <name>m</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>lock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>vlc_list</name></name></type> <name>cbs</name></decl>;</decl_stmt>
}</block>;</struct>

<function><type><specifier>static</specifier> <name>vlc_medialibrary_t</name><modifier>*</modifier></type> <name>ml_priv</name><parameter_list>( <parameter><decl><type><name>vlc_medialibrary_module_t</name><modifier>*</modifier></type> <name>p_ml</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>container_of</name><argument_list>( <argument><expr><name>p_ml</name></expr></argument>, <argument><expr>struct <name>vlc_medialibrary_t</name></expr></argument>, <argument><expr><name>m</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>vlc_ml_event_send</name><parameter_list>( <parameter><decl><type><name>vlc_medialibrary_module_t</name><modifier>*</modifier></type> <name>p_ml</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>vlc_ml_event_t</name><modifier>*</modifier></type> <name>p_event</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vlc_medialibrary_t</name><modifier>*</modifier></type> <name>p_priv</name> <init>= <expr><call><name>ml_priv</name><argument_list>( <argument><expr><name>p_ml</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_priv</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>vlc_ml_event_callback_t</name></name><modifier>*</modifier></type> <name>p_cb</name></decl>;</decl_stmt>
<macro><name>vlc_list_foreach</name><argument_list>( <argument>p_cb</argument>, <argument>&amp;p_priv-&gt;cbs</argument>, <argument>node</argument> )</argument_list></macro>
<block>{<block_content>
<expr_stmt><expr><call><name><name>p_cb</name><operator>-&gt;</operator><name>pf_cb</name></name><argument_list>( <argument><expr><name><name>p_cb</name><operator>-&gt;</operator><name>p_data</name></name></expr></argument>, <argument><expr><name>p_event</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block>
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_priv</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>vlc_ml_event_callback_t</name><modifier>*</modifier></type>
<name>vlc_ml_event_register_callback</name><parameter_list>( <parameter><decl><type><name>vlc_medialibrary_t</name><modifier>*</modifier></type> <name>p_ml</name></decl></parameter>, <parameter><decl><type><name>vlc_ml_callback_t</name></type> <name>cb</name></decl></parameter>,
<parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>p_data</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>vlc_ml_event_callback_t</name></name><modifier>*</modifier></type> <name>p_cb</name> <init>= <expr><call><name>malloc</name><argument_list>( <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><operator>*</operator><name>p_cb</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>( <expr><call><name>unlikely</name><argument_list>( <argument><expr><name>p_cb</name> <operator>==</operator> <name>NULL</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>p_cb</name><operator>-&gt;</operator><name>pf_cb</name></name> <operator>=</operator> <name>cb</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_cb</name><operator>-&gt;</operator><name>p_data</name></name> <operator>=</operator> <name>p_data</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_ml</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_list_append</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_cb</name><operator>-&gt;</operator><name>node</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_ml</name><operator>-&gt;</operator><name>cbs</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_ml</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>p_cb</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlc_ml_event_unregister_callback</name><parameter_list>( <parameter><decl><type><name>vlc_medialibrary_t</name><modifier>*</modifier></type> <name>p_ml</name></decl></parameter>,
<parameter><decl><type><name>vlc_ml_event_callback_t</name><modifier>*</modifier></type> <name>p_cb</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_ml</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_list_remove</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_cb</name><operator>-&gt;</operator><name>node</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_ml</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_cb</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlc_ml_event_unregister_from_callback</name><parameter_list>( <parameter><decl><type><name>vlc_medialibrary_t</name><modifier>*</modifier></type> <name>p_ml</name></decl></parameter>,
<parameter><decl><type><name>vlc_ml_event_callback_t</name><modifier>*</modifier></type> <name>p_cb</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>vlc_mutex_assert</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_ml</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_list_remove</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_cb</name><operator>-&gt;</operator><name>node</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_cb</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>vlc_medialibrary_callbacks_t</name></type> <name>callbacks</name> <init>= <expr><block>{
<expr><operator>.</operator><name>pf_send_event</name> <operator>=</operator> <operator>&amp;</operator><name>vlc_ml_event_send</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<function><type><name>vlc_medialibrary_t</name><modifier>*</modifier></type> <name>libvlc_MlCreate</name><parameter_list>( <parameter><decl><type><name>libvlc_int_t</name><modifier>*</modifier></type> <name>p_libvlc</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vlc_medialibrary_t</name> <modifier>*</modifier></type><name>p_ml</name> <init>= <expr><call><name>vlc_custom_create</name><argument_list>( <argument><expr><call><name>VLC_OBJECT</name><argument_list>( <argument><expr><name>p_libvlc</name></expr></argument> )</argument_list></call></expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>( <argument><expr><operator>*</operator><name>p_ml</name></expr></argument> )</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"medialibrary"</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>( <expr><call><name>unlikely</name><argument_list>( <argument><expr><name>p_ml</name> <operator>==</operator> <name>NULL</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>vlc_mutex_init</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_ml</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_list_init</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_ml</name><operator>-&gt;</operator><name>cbs</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_ml</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>cbs</name></name> <operator>=</operator> <operator>&amp;</operator><name>callbacks</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_ml</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>p_module</name></name> <operator>=</operator> <call><name>module_need</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_ml</name><operator>-&gt;</operator><name>m</name></name></expr></argument>, <argument><expr><literal type="string">"medialibrary"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>false</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><name><name>p_ml</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>p_module</name></name> <operator>==</operator> <name>NULL</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>vlc_object_delete</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>p_ml</name><operator>-&gt;</operator><name>m</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>p_ml</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>libvlc_MlRelease</name><parameter_list>( <parameter><decl><type><name>vlc_medialibrary_t</name><modifier>*</modifier></type> <name>p_ml</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><name>p_ml</name> <operator>!=</operator> <name>NULL</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>module_unneed</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_ml</name><operator>-&gt;</operator><name>m</name></name></expr></argument>, <argument><expr><name><name>p_ml</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>p_module</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><call><name>vlc_list_is_empty</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_ml</name><operator>-&gt;</operator><name>cbs</name></name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_object_delete</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>p_ml</name><operator>-&gt;</operator><name>m</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>vlc_ml_instance_get</name></cpp:undef>
<function><type><name>vlc_medialibrary_t</name><modifier>*</modifier></type> <name>vlc_ml_instance_get</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name><modifier>*</modifier></type> <name>p_obj</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>libvlc_priv_t</name><modifier>*</modifier></type> <name>p_priv</name> <init>= <expr><call><name>libvlc_priv</name><argument_list>( <argument><expr><call><name>vlc_object_instance</name><argument_list>(<argument><expr><name>p_obj</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<return>return <expr><name><name>p_priv</name><operator>-&gt;</operator><name>p_media_library</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>vlc_ml_thumbnails_release</name><parameter_list>( <parameter><decl><type><name>vlc_ml_thumbnail_t</name> <modifier>*</modifier></type><name>p_thumbnails</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<for>for <control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>VLC_ML_THUMBNAIL_SIZE_COUNT</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr> )</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_thumbnails</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>psz_mrl</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>vlc_ml_show_release_inner</name><parameter_list>( <parameter><decl><type><name>vlc_ml_show_t</name><modifier>*</modifier></type> <name>p_show</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_show</name><operator>-&gt;</operator><name>psz_artwork_mrl</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_show</name><operator>-&gt;</operator><name>psz_name</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_show</name><operator>-&gt;</operator><name>psz_summary</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_show</name><operator>-&gt;</operator><name>psz_tvdb_id</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlc_ml_show_release</name><parameter_list>( <parameter><decl><type><name>vlc_ml_show_t</name><modifier>*</modifier></type> <name>p_show</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>p_show</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>vlc_ml_show_release_inner</name><argument_list>( <argument><expr><name>p_show</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_show</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>vlc_ml_media_release_tracks_inner</name><parameter_list>( <parameter><decl><type><name>vlc_ml_media_track_list_t</name><modifier>*</modifier></type> <name>p_tracks</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>p_tracks</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>
<for>for <control>( <init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>p_tracks</name><operator>-&gt;</operator><name>i_nb_items</name></name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr> )</control>
<block>{<block_content>
<decl_stmt><decl><type><name>vlc_ml_media_track_t</name><modifier>*</modifier></type> <name>p_track</name> <init>= <expr><operator>&amp;</operator><name><name>p_tracks</name><operator>-&gt;</operator><name>p_items</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_track</name><operator>-&gt;</operator><name>psz_codec</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_track</name><operator>-&gt;</operator><name>psz_language</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_track</name><operator>-&gt;</operator><name>psz_description</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_tracks</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>vlc_ml_media_release_inner</name><parameter_list>( <parameter><decl><type><name>vlc_ml_media_t</name><modifier>*</modifier></type> <name>p_media</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>vlc_ml_file_list_release</name><argument_list>( <argument><expr><name><name>p_media</name><operator>-&gt;</operator><name>p_files</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_ml_media_release_tracks_inner</name><argument_list>( <argument><expr><name><name>p_media</name><operator>-&gt;</operator><name>p_tracks</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_media</name><operator>-&gt;</operator><name>psz_title</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_ml_thumbnails_release</name><argument_list>( <argument><expr><name><name>p_media</name><operator>-&gt;</operator><name>thumbnails</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<switch>switch<condition>( <expr><name><name>p_media</name><operator>-&gt;</operator><name>i_subtype</name></name></expr> )</condition>
<block>{<block_content>
<case>case <expr><name>VLC_ML_MEDIA_SUBTYPE_ALBUMTRACK</name></expr>:</case>
<break>break;</break>
<case>case <expr><name>VLC_ML_MEDIA_SUBTYPE_SHOW_EPISODE</name></expr>:</case>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_media</name><operator>-&gt;</operator><name>show_episode</name><operator>.</operator><name>psz_summary</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_media</name><operator>-&gt;</operator><name>show_episode</name><operator>.</operator><name>psz_tvdb_id</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>VLC_ML_MEDIA_SUBTYPE_MOVIE</name></expr>:</case>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_media</name><operator>-&gt;</operator><name>movie</name><operator>.</operator><name>psz_summary</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_media</name><operator>-&gt;</operator><name>movie</name><operator>.</operator><name>psz_imdb_id</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<default>default:</default>
<break>break;</break>
</block_content>}</block></switch>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>vlc_ml_artist_release_inner</name><parameter_list>( <parameter><decl><type><name>vlc_ml_artist_t</name><modifier>*</modifier></type> <name>p_artist</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>vlc_ml_thumbnails_release</name><argument_list>( <argument><expr><name><name>p_artist</name><operator>-&gt;</operator><name>thumbnails</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_artist</name><operator>-&gt;</operator><name>psz_name</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_artist</name><operator>-&gt;</operator><name>psz_shortbio</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_artist</name><operator>-&gt;</operator><name>psz_mb_id</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlc_ml_artist_release</name><parameter_list>( <parameter><decl><type><name>vlc_ml_artist_t</name><modifier>*</modifier></type> <name>p_artist</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>p_artist</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>vlc_ml_artist_release_inner</name><argument_list>( <argument><expr><name>p_artist</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_artist</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>vlc_ml_album_release_inner</name><parameter_list>( <parameter><decl><type><name>vlc_ml_album_t</name><modifier>*</modifier></type> <name>p_album</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>vlc_ml_thumbnails_release</name><argument_list>( <argument><expr><name><name>p_album</name><operator>-&gt;</operator><name>thumbnails</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_album</name><operator>-&gt;</operator><name>psz_artist</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_album</name><operator>-&gt;</operator><name>psz_summary</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_album</name><operator>-&gt;</operator><name>psz_title</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlc_ml_album_release</name><parameter_list>( <parameter><decl><type><name>vlc_ml_album_t</name><modifier>*</modifier></type> <name>p_album</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>p_album</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>vlc_ml_album_release_inner</name><argument_list>( <argument><expr><name>p_album</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_album</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlc_ml_genre_release</name><parameter_list>( <parameter><decl><type><name>vlc_ml_genre_t</name><modifier>*</modifier></type> <name>p_genre</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>p_genre</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_genre</name><operator>-&gt;</operator><name>psz_name</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_genre</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>vlc_ml_playlist_release_inner</name><parameter_list>( <parameter><decl><type><name>vlc_ml_playlist_t</name><modifier>*</modifier></type> <name>p_playlist</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_playlist</name><operator>-&gt;</operator><name>psz_artwork_mrl</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_playlist</name><operator>-&gt;</operator><name>psz_name</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlc_ml_playlist_release</name><parameter_list>( <parameter><decl><type><name>vlc_ml_playlist_t</name><modifier>*</modifier></type> <name>p_playlist</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>p_playlist</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>vlc_ml_playlist_release_inner</name><argument_list>( <argument><expr><name>p_playlist</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_playlist</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>



<function><type><name>void</name></type> <name>vlc_ml_media_release</name><parameter_list>( <parameter><decl><type><name>vlc_ml_media_t</name><modifier>*</modifier></type> <name>p_media</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>p_media</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>vlc_ml_media_release_inner</name><argument_list>( <argument><expr><name>p_media</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_media</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlc_ml_label_list_release</name><parameter_list>( <parameter><decl><type><name>vlc_ml_label_list_t</name><modifier>*</modifier></type> <name>p_list</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>p_list</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>
<for>for <control>( <init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>p_list</name><operator>-&gt;</operator><name>i_nb_items</name></name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr> )</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_list</name><operator>-&gt;</operator><name>p_items</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>psz_name</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_list</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlc_ml_file_list_release</name><parameter_list>( <parameter><decl><type><name>vlc_ml_file_list_t</name><modifier>*</modifier></type> <name>p_list</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>p_list</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>
<for>for <control>( <init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>p_list</name><operator>-&gt;</operator><name>i_nb_items</name></name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr> )</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_list</name><operator>-&gt;</operator><name>p_items</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>psz_mrl</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_list</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlc_ml_artist_list_release</name><parameter_list>( <parameter><decl><type><name>vlc_ml_artist_list_t</name><modifier>*</modifier></type> <name>p_list</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>p_list</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>
<for>for <control>( <init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>p_list</name><operator>-&gt;</operator><name>i_nb_items</name></name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr> )</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>vlc_ml_artist_release_inner</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_list</name><operator>-&gt;</operator><name>p_items</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_list</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>vlc_ml_media_list_release</name><parameter_list>( <parameter><decl><type><name>vlc_ml_media_list_t</name><modifier>*</modifier></type> <name>p_list</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>p_list</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>
<for>for <control>( <init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>p_list</name><operator>-&gt;</operator><name>i_nb_items</name></name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr> )</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>vlc_ml_media_release_inner</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_list</name><operator>-&gt;</operator><name>p_items</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_list</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlc_ml_album_list_release</name><parameter_list>( <parameter><decl><type><name>vlc_ml_album_list_t</name><modifier>*</modifier></type> <name>p_list</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>p_list</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>
<for>for <control>( <init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>p_list</name><operator>-&gt;</operator><name>i_nb_items</name></name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr> )</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>vlc_ml_album_release_inner</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_list</name><operator>-&gt;</operator><name>p_items</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_list</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlc_ml_show_list_release</name><parameter_list>( <parameter><decl><type><name>vlc_ml_show_list_t</name><modifier>*</modifier></type> <name>p_list</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>p_list</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>
<for>for <control>( <init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>p_list</name><operator>-&gt;</operator><name>i_nb_items</name></name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr> )</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>vlc_ml_show_release_inner</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_list</name><operator>-&gt;</operator><name>p_items</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_list</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlc_ml_genre_list_release</name><parameter_list>( <parameter><decl><type><name>vlc_ml_genre_list_t</name><modifier>*</modifier></type> <name>p_list</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>p_list</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>
<for>for <control>( <init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>p_list</name><operator>-&gt;</operator><name>i_nb_items</name></name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr> )</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_list</name><operator>-&gt;</operator><name>p_items</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>psz_name</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_list</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlc_ml_playlist_list_release</name><parameter_list>( <parameter><decl><type><name>vlc_ml_playlist_list_t</name><modifier>*</modifier></type> <name>p_list</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>p_list</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>
<for>for <control>( <init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>p_list</name><operator>-&gt;</operator><name>i_nb_items</name></name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr> )</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>vlc_ml_playlist_release_inner</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_list</name><operator>-&gt;</operator><name>p_items</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_list</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlc_ml_entry_point_list_release</name><parameter_list>( <parameter><decl><type><name>vlc_ml_entry_point_list_t</name><modifier>*</modifier></type> <name>p_list</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>( <expr><name>p_list</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>
<for>for <control>( <init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>p_list</name><operator>-&gt;</operator><name>i_nb_items</name></name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr> )</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_list</name><operator>-&gt;</operator><name>p_items</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>psz_mrl</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_list</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>vlc_ml_playback_states_all_release</name><parameter_list>( <parameter><decl><type><name>vlc_ml_playback_states_all</name><modifier>*</modifier></type> <name>prefs</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>prefs</name><operator>-&gt;</operator><name>current_video_track</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>prefs</name><operator>-&gt;</operator><name>current_audio_track</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>prefs</name><operator>-&gt;</operator><name>current_subtitle_track</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>prefs</name><operator>-&gt;</operator><name>aspect_ratio</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>prefs</name><operator>-&gt;</operator><name>crop</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>prefs</name><operator>-&gt;</operator><name>deinterlace</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>prefs</name><operator>-&gt;</operator><name>video_filter</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name><modifier>*</modifier></type> <name>vlc_ml_get</name><parameter_list>( <parameter><decl><type><name>vlc_medialibrary_t</name><modifier>*</modifier></type> <name>p_ml</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_query</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><name>p_ml</name> <operator>!=</operator> <name>NULL</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>va_list</name></type> <name>args</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>va_start</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>i_query</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>void</name><modifier>*</modifier></type> <name>res</name> <init>= <expr><call><name><name>p_ml</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>pf_get</name></name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_ml</name><operator>-&gt;</operator><name>m</name></name></expr></argument>, <argument><expr><name>i_query</name></expr></argument>, <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>va_end</name><argument_list>( <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>res</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>vlc_ml_control</name><parameter_list>( <parameter><decl><type><name>vlc_medialibrary_t</name><modifier>*</modifier></type> <name>p_ml</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_query</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>va_list</name></type> <name>args</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>va_start</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>i_query</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_res</name> <init>= <expr><call><name><name>p_ml</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>pf_control</name></name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_ml</name><operator>-&gt;</operator><name>m</name></name></expr></argument>, <argument><expr><name>i_query</name></expr></argument>, <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>va_end</name><argument_list>( <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>i_res</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>vlc_ml_list</name><parameter_list>( <parameter><decl><type><name>vlc_medialibrary_t</name><modifier>*</modifier></type> <name>p_ml</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_query</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>vlc_ml_query_params_t</name><modifier>*</modifier></type> <name>p_params</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>va_list</name></type> <name>args</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>va_start</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>p_params</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_res</name> <init>= <expr><call><name><name>p_ml</name><operator>-&gt;</operator><name>m</name><operator>.</operator><name>pf_list</name></name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_ml</name><operator>-&gt;</operator><name>m</name></name></expr></argument>, <argument><expr><name>i_query</name></expr></argument>, <argument><expr><name>p_params</name></expr></argument>, <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>va_end</name><argument_list>( <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>i_res</name></expr>;</return>
</block_content>}</block></function>
</unit>
