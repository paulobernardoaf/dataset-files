<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\audio_output\volume.h">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;config.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;math.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_aout.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>add_sw_gain</name><parameter_list>()</parameter_list></cpp:macro> <cpp:value>add_float(MODULE_STRING"-gain", 1., N_("Software gain"), N_("This linear gain will be applied in software."), true) change_float_range(0., 8.)</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>int</name></type> <name>aout_SoftVolumeSet</name><parameter_list>(<parameter><decl><type><name>audio_output_t</name> <modifier>*</modifier></type><name>aout</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>volume</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>aout_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>aout</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>







<decl_stmt><decl><type><name>float</name></type> <name>gain</name> <init>= <expr><name>volume</name> <operator>*</operator> <name>volume</name> <operator>*</operator> <name>volume</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>sys</name><operator>-&gt;</operator><name>soft_mute</name></name> <operator>&amp;&amp;</operator> <call><name>aout_GainRequest</name><argument_list>(<argument><expr><name>aout</name></expr></argument>, <argument><expr><name>gain</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>soft_gain</name></name> <operator>=</operator> <name>gain</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>var_InheritBool</name><argument_list>(<argument><expr><name>aout</name></expr></argument>, <argument><expr><literal type="string">"volume-save"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>config_PutFloat</name><argument_list>(<argument><expr><name>MODULE_STRING</name><literal type="string">"-gain"</literal></expr></argument>, <argument><expr><name>gain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>aout_VolumeReport</name><argument_list>(<argument><expr><name>aout</name></expr></argument>, <argument><expr><name>volume</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>aout_SoftMuteSet</name> <parameter_list>(<parameter><decl><type><name>audio_output_t</name> <modifier>*</modifier></type><name>aout</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>mute</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>aout_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>aout</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>aout_GainRequest</name><argument_list>(<argument><expr><name>aout</name></expr></argument>, <argument><expr><ternary><condition><expr><name>mute</name></expr> ?</condition><then> <expr><literal type="number">0.f</literal></expr> </then><else>: <expr><name><name>sys</name><operator>-&gt;</operator><name>soft_gain</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>soft_mute</name></name> <operator>=</operator> <name>mute</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>aout_MuteReport</name><argument_list>(<argument><expr><name>aout</name></expr></argument>, <argument><expr><name>mute</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>aout_SoftVolumeInit</name><parameter_list>(<parameter><decl><type><name>audio_output_t</name> <modifier>*</modifier></type><name>aout</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>aout_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>aout</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>gain</name> <init>= <expr><call><name>var_InheritFloat</name><argument_list>(<argument><expr><name>aout</name></expr></argument>, <argument><expr><name>MODULE_STRING</name><literal type="string">"-gain"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>mute</name> <init>= <expr><call><name>var_InheritBool</name><argument_list>(<argument><expr><name>aout</name></expr></argument>, <argument><expr><literal type="string">"mute"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>aout</name><operator>-&gt;</operator><name>volume_set</name></name> <operator>=</operator> <name>aout_SoftVolumeSet</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>aout</name><operator>-&gt;</operator><name>mute_set</name></name> <operator>=</operator> <name>aout_SoftMuteSet</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>soft_gain</name></name> <operator>=</operator> <name>gain</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>soft_mute</name></name> <operator>=</operator> <name>mute</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>aout_MuteReport</name><argument_list>(<argument><expr><name>aout</name></expr></argument>, <argument><expr><name>mute</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>aout_VolumeReport</name><argument_list>(<argument><expr><name>aout</name></expr></argument>, <argument><expr><call><name>cbrtf</name><argument_list>(<argument><expr><name>gain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>aout_SoftVolumeStart</name> <parameter_list>(<parameter><decl><type><name>audio_output_t</name> <modifier>*</modifier></type><name>aout</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>aout_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>aout</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>aout_GainRequest</name><argument_list>(<argument><expr><name>aout</name></expr></argument>, <argument><expr><ternary><condition><expr><name><name>sys</name><operator>-&gt;</operator><name>soft_mute</name></name></expr> ?</condition><then> <expr><literal type="number">0.f</literal></expr> </then><else>: <expr><name><name>sys</name><operator>-&gt;</operator><name>soft_gain</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>aout_MuteReport</name><argument_list>(<argument><expr><name>aout</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>aout_VolumeReport</name><argument_list>(<argument><expr><name>aout</name></expr></argument>, <argument><expr><literal type="number">1.f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>
</unit>
