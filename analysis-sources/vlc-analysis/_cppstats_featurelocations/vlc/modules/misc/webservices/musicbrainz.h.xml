<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\misc\webservices\musicbrainz.h">


















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>VLC_MUSICBRAINZ_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_MUSICBRAINZ_H_</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MUSICBRAINZ_DEFAULT_SERVER</name></cpp:macro> <cpp:value>"musicbrainz.org"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COVERARTARCHIVE_DEFAULT_SERVER</name></cpp:macro> <cpp:value>"coverartarchive.org"</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>unsigned</name></type> <name>i_index</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_title</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_artist</name></decl>;</decl_stmt>
}</block></struct></type> <name>musicbrainz_track_t</name>;</typedef>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_group_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_title</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_artist</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_date</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_coverart_url</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i_tracks</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>musicbrainz_track_t</name> <modifier>*</modifier></type><name>p_tracks</name></decl>;</decl_stmt>
}</block></struct></type> <name>musicbrainz_release_t</name>;</typedef>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>size_t</name></type> <name>i_release</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>musicbrainz_release_t</name> <modifier>*</modifier></type><name>p_releases</name></decl>;</decl_stmt>
}</block></struct></type> <name>musicbrainz_recording_t</name>;</typedef>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_mb_server</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_coverart_server</name></decl>;</decl_stmt>
}</block></struct></type> <name>musicbrainz_config_t</name>;</typedef>

<function_decl><type><name>void</name></type> <name>musicbrainz_recording_release</name><parameter_list>(<parameter><decl><type><name>musicbrainz_recording_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>musicbrainz_recording_t</name> <modifier>*</modifier></type> <name>musicbrainz_lookup_recording_by_toc</name><parameter_list>(<parameter><decl><type><name>musicbrainz_config_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>musicbrainz_recording_t</name> <modifier>*</modifier></type> <name>musicbrainz_lookup_recording_by_discid</name><parameter_list>(<parameter><decl><type><name>musicbrainz_config_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_url</name></decl>;</decl_stmt>
}</block></struct></type> <name>coverartarchive_t</name>;</typedef>

<function_decl><type><name>void</name></type> <name>musicbrainz_release_covert_art</name><parameter_list>(<parameter><decl><type><name>coverartarchive_t</name> <modifier>*</modifier></type><name>c</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>coverartarchive_t</name> <modifier>*</modifier></type> <name>coverartarchive_lookup_releasegroup</name><parameter_list>(<parameter><decl><type><name>musicbrainz_config_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type> <name>coverartarchive_make_releasegroup_arturl</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
