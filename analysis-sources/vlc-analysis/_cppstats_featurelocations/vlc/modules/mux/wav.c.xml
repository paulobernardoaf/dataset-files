<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\mux\wav.c">

























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_aout.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_sout.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_block.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_codecs.h&gt;</cpp:file></cpp:include>




<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Open</name> <parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Close</name> <parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<macro><name>vlc_module_begin</name> <argument_list>()</argument_list></macro>
<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"WAV muxer"</literal>)</argument> )</argument_list></macro>
<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"sout mux"</literal></argument>, <argument><literal type="number">5</literal></argument> )</argument_list></macro>
<macro><name>set_category</name><argument_list>( <argument>CAT_SOUT</argument> )</argument_list></macro>
<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_SOUT_MUX</argument> )</argument_list></macro>
<macro><name>set_callbacks</name><argument_list>( <argument>Open</argument>, <argument>Close</argument> )</argument_list></macro>
<macro><name>add_shortcut</name><argument_list>( <argument><literal type="string">"wav"</literal></argument> )</argument_list></macro>
<macro><name>vlc_module_end</name> <argument_list>()</argument_list></macro>




<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Control</name> <parameter_list>( <parameter><decl><type><name>sout_mux_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>va_list</name></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>AddStream</name><parameter_list>( <parameter><decl><type><name>sout_mux_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>sout_input_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>DelStream</name><parameter_list>( <parameter><decl><type><name>sout_mux_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>sout_input_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Mux</name> <parameter_list>( <parameter><decl><type><name>sout_mux_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_CHANNELS</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>bool</name></type> <name>b_used</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_ext</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>i_data</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>waveheader</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>WAVEFORMATEXTENSIBLE</name></type> <name>waveformat</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>waveheader2</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>i_channel_mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_chans_to_reorder</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>pi_chan_table</name><index>[<expr><name>AOUT_CHAN_MAX</name></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>sout_mux_sys_t</name>;</typedef>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint32_t</name></type> <name><name>pi_channels_in</name><index>[]</index></name> <init>=
<expr><block>{ <expr><name>WAVE_SPEAKER_FRONT_LEFT</name></expr>, <expr><name>WAVE_SPEAKER_FRONT_RIGHT</name></expr>,
<expr><name>WAVE_SPEAKER_SIDE_LEFT</name></expr>, <expr><name>WAVE_SPEAKER_SIDE_RIGHT</name></expr>,
<expr><name>WAVE_SPEAKER_BACK_LEFT</name></expr>, <expr><name>WAVE_SPEAKER_BACK_RIGHT</name></expr>, <expr><name>WAVE_SPEAKER_BACK_CENTER</name></expr>,
<expr><name>WAVE_SPEAKER_FRONT_CENTER</name></expr>, <expr><name>WAVE_SPEAKER_LOW_FREQUENCY</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint32_t</name></type> <name><name>pi_channels_out</name><index>[]</index></name> <init>=
<expr><block>{ <expr><name>WAVE_SPEAKER_FRONT_LEFT</name></expr>, <expr><name>WAVE_SPEAKER_FRONT_RIGHT</name></expr>,
<expr><name>WAVE_SPEAKER_FRONT_CENTER</name></expr>, <expr><name>WAVE_SPEAKER_LOW_FREQUENCY</name></expr>,
<expr><name>WAVE_SPEAKER_BACK_LEFT</name></expr>, <expr><name>WAVE_SPEAKER_BACK_RIGHT</name></expr>,
<expr><name>WAVE_SPEAKER_BACK_CENTER</name></expr>,
<expr><name>WAVE_SPEAKER_SIDE_LEFT</name></expr>, <expr><name>WAVE_SPEAKER_SIDE_RIGHT</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>




<function><type><specifier>static</specifier> <name>int</name></type> <name>Open</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>sout_mux_t</name> <modifier>*</modifier></type><name>p_mux</name> <init>= <expr><operator>(</operator><name>sout_mux_t</name><operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>sout_mux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p_mux</name><operator>-&gt;</operator><name>pf_control</name></name> <operator>=</operator> <name>Control</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_mux</name><operator>-&gt;</operator><name>pf_addstream</name></name> <operator>=</operator> <name>AddStream</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_mux</name><operator>-&gt;</operator><name>pf_delstream</name></name> <operator>=</operator> <name>DelStream</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_mux</name><operator>-&gt;</operator><name>pf_mux</name></name> <operator>=</operator> <name>Mux</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_mux</name><operator>-&gt;</operator><name>p_sys</name></name> <operator>=</operator> <name>p_sys</name> <operator>=</operator> <call><name>malloc</name><argument_list>( <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><name>sout_mux_sys_t</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><operator>!</operator><name>p_sys</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_used</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_header</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_data</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_chans_to_reorder</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type> <name>p_this</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>sout_mux_t</name> <modifier>*</modifier></type><name>p_mux</name> <init>= <expr><operator>(</operator><name>sout_mux_t</name><operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>sout_mux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_mux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Control</name><parameter_list>( <parameter><decl><type><name>sout_mux_t</name> <modifier>*</modifier></type><name>p_mux</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_query</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>args</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>p_mux</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>bool</name> <modifier>*</modifier></type><name>pb_bool</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>ppsz</name></decl>;</decl_stmt>

<switch>switch<condition>( <expr><name>i_query</name></expr> )</condition>
<block>{<block_content>
<case>case <expr><name>MUX_CAN_ADD_STREAM_WHILE_MUXING</name></expr>:</case>
<expr_stmt><expr><name>pb_bool</name> <operator>=</operator> <call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>bool</name> <operator>*</operator></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>pb_bool</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>MUX_GET_MIME</name></expr>:</case>
<expr_stmt><expr><name>ppsz</name> <operator>=</operator> <call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>char</name> <operator>*</operator><operator>*</operator></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>ppsz</name> <operator>=</operator> <call><name>strdup</name><argument_list>( <argument><expr><literal type="string">"audio/wav"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<default>default:</default>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></switch>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>int</name></type> <name>AddStream</name><parameter_list>( <parameter><decl><type><name>sout_mux_t</name> <modifier>*</modifier></type><name>p_mux</name></decl></parameter>, <parameter><decl><type><name>sout_input_t</name> <modifier>*</modifier></type><name>p_input</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>GUID</name></type> <name>subformat_guid</name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0x10</literal></expr>,<expr><block>{<expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0x38</literal></expr>, <expr><literal type="number">0x9b</literal></expr>, <expr><literal type="number">0x71</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>sout_mux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_mux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>WAVEFORMATEX</name> <modifier>*</modifier></type><name>p_waveformat</name> <init>= <expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>waveformat</name><operator>.</operator><name>Format</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_bytes_per_sample</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>i_format</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_ext</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_input</name><operator>-&gt;</operator><name>p_fmt</name><operator>-&gt;</operator><name>i_cat</name></name> <operator>!=</operator> <name>AUDIO_ES</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_mux</name></expr></argument>, <argument><expr><literal type="string">"not an audio stream"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_used</name></name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_mux</name></expr></argument>, <argument><expr><literal type="string">"can't add more than 1 stream"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_mux</name></expr></argument>, <argument><expr><literal type="string">"adding %i input channels, %iHz"</literal></expr></argument>,
<argument><expr><name><name>p_input</name><operator>-&gt;</operator><name>p_fmt</name><operator>-&gt;</operator><name>audio</name><operator>.</operator><name>i_channels</name></name></expr></argument>,
<argument><expr><name><name>p_input</name><operator>-&gt;</operator><name>p_fmt</name><operator>-&gt;</operator><name>audio</name><operator>.</operator><name>i_rate</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_channel_mask</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name><name>p_input</name><operator>-&gt;</operator><name>p_fmt</name><operator>-&gt;</operator><name>audio</name><operator>.</operator><name>i_physical_channels</name></name></expr> )</condition>
<block>{<block_content>
<for>for<control>( <init><decl><type><name>unsigned</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>pi_vlc_chan_order_wg4</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control><block type="pseudo"><block_content>
<if_stmt><if>if<condition>( <expr><name><name>p_input</name><operator>-&gt;</operator><name>p_fmt</name><operator>-&gt;</operator><name>audio</name><operator>.</operator><name>i_physical_channels</name></name> <operator>&amp;</operator> <name><name>pi_vlc_chan_order_wg4</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_channel_mask</name></name> <operator>|=</operator> <name><name>pi_channels_in</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_chans_to_reorder</name></name> <operator>=</operator>
<call><name>aout_CheckChannelReorder</name><argument_list>( <argument><expr><name>pi_channels_in</name></expr></argument>, <argument><expr><name>pi_channels_out</name></expr></argument>,
<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_channel_mask</name></name></expr></argument>,
<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>pi_chan_table</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_mux</name></expr></argument>, <argument><expr><literal type="string">"channel mask: %x, reordering: %u"</literal></expr></argument>,
<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_channel_mask</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_chans_to_reorder</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>fourcc_to_wf_tag</name><argument_list>( <argument><expr><name><name>p_input</name><operator>-&gt;</operator><name>p_fmt</name><operator>-&gt;</operator><name>i_codec</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_format</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>b_ext</name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>b_ext</name></name> <operator>=</operator> <name><name>p_input</name><operator>-&gt;</operator><name>p_fmt</name><operator>-&gt;</operator><name>audio</name><operator>.</operator><name>i_channels</name></name> <operator>&gt;</operator> <literal type="number">2</literal></expr>;</expr_stmt>


<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>waveheader</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <call><name>VLC_FOURCC</name><argument_list>(<argument><expr><literal type="char">'R'</literal></expr></argument>, <argument><expr><literal type="char">'I'</literal></expr></argument>, <argument><expr><literal type="char">'F'</literal></expr></argument>, <argument><expr><literal type="char">'F'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>SetDWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>waveheader</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>waveheader</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <call><name>VLC_FOURCC</name><argument_list>(<argument><expr><literal type="char">'W'</literal></expr></argument>, <argument><expr><literal type="char">'A'</literal></expr></argument>, <argument><expr><literal type="char">'V'</literal></expr></argument>, <argument><expr><literal type="char">'E'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>waveheader</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <call><name>VLC_FOURCC</name><argument_list>(<argument><expr><literal type="char">'f'</literal></expr></argument>, <argument><expr><literal type="char">'m'</literal></expr></argument>, <argument><expr><literal type="char">'t'</literal></expr></argument>, <argument><expr><literal type="char">' '</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>SetDWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>waveheader</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><ternary><condition><expr><name>b_ext</name></expr> ?</condition><then> <expr><literal type="number">40</literal></expr> </then><else>: <expr><literal type="number">16</literal></expr></else></ternary></expr></argument> )</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>waveheader2</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <call><name>VLC_FOURCC</name><argument_list>(<argument><expr><literal type="char">'d'</literal></expr></argument>, <argument><expr><literal type="char">'a'</literal></expr></argument>, <argument><expr><literal type="char">'t'</literal></expr></argument>, <argument><expr><literal type="char">'a'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>SetDWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>waveheader2</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt> 


<expr_stmt><expr><call><name>memset</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>waveformat</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>WAVEFORMATEXTENSIBLE</name></expr></argument>)</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SetWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_waveformat</name><operator>-&gt;</operator><name>wFormatTag</name></name></expr></argument>,
<argument><expr><ternary><condition><expr><name>b_ext</name></expr> ?</condition><then> <expr><name>WAVE_FORMAT_EXTENSIBLE</name></expr> </then><else>: <expr><name>i_format</name></expr></else></ternary></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SetWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_waveformat</name><operator>-&gt;</operator><name>nChannels</name></name></expr></argument>,
<argument><expr><name><name>p_input</name><operator>-&gt;</operator><name>p_fmt</name><operator>-&gt;</operator><name>audio</name><operator>.</operator><name>i_channels</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SetDWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_waveformat</name><operator>-&gt;</operator><name>nSamplesPerSec</name></name></expr></argument>, <argument><expr><name><name>p_input</name><operator>-&gt;</operator><name>p_fmt</name><operator>-&gt;</operator><name>audio</name><operator>.</operator><name>i_rate</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>i_bytes_per_sample</name> <operator>=</operator> <name><name>p_input</name><operator>-&gt;</operator><name>p_fmt</name><operator>-&gt;</operator><name>audio</name><operator>.</operator><name>i_channels</name></name> <operator>*</operator>
<name><name>p_input</name><operator>-&gt;</operator><name>p_fmt</name><operator>-&gt;</operator><name>audio</name><operator>.</operator><name>i_bitspersample</name></name> <operator>/</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SetDWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_waveformat</name><operator>-&gt;</operator><name>nAvgBytesPerSec</name></name></expr></argument>,
<argument><expr><name>i_bytes_per_sample</name> <operator>*</operator> <name><name>p_input</name><operator>-&gt;</operator><name>p_fmt</name><operator>-&gt;</operator><name>audio</name><operator>.</operator><name>i_rate</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SetWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_waveformat</name><operator>-&gt;</operator><name>nBlockAlign</name></name></expr></argument>, <argument><expr><name>i_bytes_per_sample</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SetWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_waveformat</name><operator>-&gt;</operator><name>wBitsPerSample</name></name></expr></argument>,
<argument><expr><name><name>p_input</name><operator>-&gt;</operator><name>p_fmt</name><operator>-&gt;</operator><name>audio</name><operator>.</operator><name>i_bitspersample</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SetWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_waveformat</name><operator>-&gt;</operator><name>cbSize</name></name></expr></argument>, <argument><expr><literal type="number">22</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SetWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>waveformat</name><operator>.</operator><name>Samples</name><operator>.</operator><name>wValidBitsPerSample</name></name></expr></argument>,
<argument><expr><name><name>p_input</name><operator>-&gt;</operator><name>p_fmt</name><operator>-&gt;</operator><name>audio</name><operator>.</operator><name>i_bitspersample</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SetDWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>waveformat</name><operator>.</operator><name>dwChannelMask</name></name></expr></argument>,
<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_channel_mask</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>waveformat</name><operator>.</operator><name>SubFormat</name></name> <operator>=</operator> <name>subformat_guid</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>waveformat</name><operator>.</operator><name>SubFormat</name><operator>.</operator><name>Data1</name></name> <operator>=</operator> <name>i_format</name></expr>;</expr_stmt>


<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_used</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>block_t</name> <modifier>*</modifier></type><name>GetHeader</name><parameter_list>( <parameter><decl><type><name>sout_mux_t</name> <modifier>*</modifier></type><name>p_mux</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>sout_mux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_mux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_block</name> <init>=
<expr><call><name>block_Alloc</name><argument_list>( <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><name>WAVEFORMATEXTENSIBLE</name></expr></argument> )</argument_list></sizeof> <operator>+</operator> <literal type="number">7</literal> <operator>*</operator> <literal type="number">4</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>SetDWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>waveheader</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>,
<argument><expr><literal type="number">20</literal> <operator>+</operator> <operator>(</operator><ternary><condition><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_ext</name></name></expr> ?</condition><then> <expr><literal type="number">40</literal></expr> </then><else>: <expr><literal type="number">16</literal></expr></else></ternary><operator>)</operator> <operator>+</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_data</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>SetDWLE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>waveheader2</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_data</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>memcpy</name><argument_list>( <argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>p_buffer</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>waveheader</name></name></expr></argument>, <argument><expr><literal type="number">5</literal> <operator>*</operator> <literal type="number">4</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>memcpy</name><argument_list>( <argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>p_buffer</name></name> <operator>+</operator> <literal type="number">5</literal> <operator>*</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>waveformat</name></name></expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>( <argument><expr><name>WAVEFORMATEXTENSIBLE</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>memcpy</name><argument_list>( <argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>p_buffer</name></name> <operator>+</operator> <literal type="number">5</literal> <operator>*</operator> <literal type="number">4</literal> <operator>+</operator>
<operator>(</operator><ternary><condition><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_ext</name></name></expr> ?</condition><then> <expr><sizeof>sizeof<argument_list>( <argument><expr><name>WAVEFORMATEXTENSIBLE</name></expr></argument> )</argument_list></sizeof></expr> </then><else>: <expr><literal type="number">16</literal></expr></else></ternary><operator>)</operator></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>waveheader2</name></name></expr></argument>, <argument><expr><literal type="number">2</literal> <operator>*</operator> <literal type="number">4</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_sys</name><operator>-&gt;</operator><name>b_ext</name></name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_buffer</name></name> <operator>-=</operator> <literal type="number">24</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
<return>return <expr><name>p_block</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>DelStream</name><parameter_list>( <parameter><decl><type><name>sout_mux_t</name> <modifier>*</modifier></type><name>p_mux</name></decl></parameter>, <parameter><decl><type><name>sout_input_t</name> <modifier>*</modifier></type><name>p_input</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>p_input</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_mux</name></expr></argument>, <argument><expr><literal type="string">"removing input"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_mux</name></expr></argument>, <argument><expr><literal type="string">"writing header data"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><call><name>sout_AccessOutSeek</name><argument_list>( <argument><expr><name><name>p_mux</name><operator>-&gt;</operator><name>p_access</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call> <operator>==</operator> <name>VLC_SUCCESS</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>sout_AccessOutWrite</name><argument_list>( <argument><expr><name><name>p_mux</name><operator>-&gt;</operator><name>p_access</name></name></expr></argument>, <argument><expr><call><name>GetHeader</name><argument_list>( <argument><expr><name>p_mux</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Mux</name><parameter_list>( <parameter><decl><type><name>sout_mux_t</name> <modifier>*</modifier></type><name>p_mux</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>sout_mux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_mux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>sout_input_t</name> <modifier>*</modifier></type><name>p_input</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_mux</name><operator>-&gt;</operator><name>i_nb_inputs</name></name></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><name>VLC_SUCCESS</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_header</name></name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_mux</name></expr></argument>, <argument><expr><literal type="string">"writing header data"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>sout_AccessOutWrite</name><argument_list>( <argument><expr><name><name>p_mux</name><operator>-&gt;</operator><name>p_access</name></name></expr></argument>, <argument><expr><call><name>GetHeader</name><argument_list>( <argument><expr><name>p_mux</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_header</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><name>p_input</name> <operator>=</operator> <name><name>p_mux</name><operator>-&gt;</operator><name>pp_inputs</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<while>while<condition>( <expr><call><name>block_FifoCount</name><argument_list>( <argument><expr><name><name>p_input</name><operator>-&gt;</operator><name>p_fifo</name></name></expr></argument> )</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition>
<block>{<block_content>
<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_block</name> <init>= <expr><call><name>block_FifoGet</name><argument_list>( <argument><expr><name><name>p_input</name><operator>-&gt;</operator><name>p_fifo</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_data</name></name> <operator>+=</operator> <name><name>p_block</name><operator>-&gt;</operator><name>i_buffer</name></name></expr>;</expr_stmt>


<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_chans_to_reorder</name></name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>aout_ChannelReorder</name><argument_list>( <argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>p_buffer</name></name></expr></argument>, <argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_buffer</name></name></expr></argument>,
<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_chans_to_reorder</name></name></expr></argument>,
<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>pi_chan_table</name></name></expr></argument>, <argument><expr><name><name>p_input</name><operator>-&gt;</operator><name>p_fmt</name><operator>-&gt;</operator><name>i_codec</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>sout_AccessOutWrite</name><argument_list>( <argument><expr><name><name>p_mux</name><operator>-&gt;</operator><name>p_access</name></name></expr></argument>, <argument><expr><name>p_block</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></while>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>
</unit>
