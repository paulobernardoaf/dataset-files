<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\demux\mxpeg_helper.h">
























<function><type><specifier>static</specifier> <name>uint8_t</name></type> <name>find_jpeg_marker</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>position</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><operator>*</operator><name>position</name></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>+</operator> <literal type="number">1</literal> <operator>&lt;</operator> <name>size</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>data</name><index>[<expr><name>i</name></expr>]</index></name> <operator>!=</operator> <literal type="number">0xff</literal></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>data</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>!=</operator> <literal type="number">0xff</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>position</name> <operator>=</operator> <name>i</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<return>return <expr><name><name>data</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
<return>return <expr><literal type="number">0xff</literal></expr>;</return>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <name>bool</name></type> <name>IsMxpeg</name><parameter_list>(<parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>size</name> <init>= <expr><call><name>vlc_stream_Peek</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>header</name></expr></argument>, <argument><expr><literal type="number">256</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>position</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>find_jpeg_marker</name><argument_list>(<argument><expr><operator>&amp;</operator><name>position</name></expr></argument>, <argument><expr><name>header</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xd8</literal> <operator>||</operator> <name>position</name> <operator>&gt;</operator> <name>size</name><operator>-</operator><literal type="number">2</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>find_jpeg_marker</name><argument_list>(<argument><expr><operator>&amp;</operator><name>position</name></expr></argument>, <argument><expr><name>header</name></expr></argument>, <argument><expr><name>position</name> <operator>+</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xe0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>position</name> <operator>+</operator> <literal type="number">2</literal> <operator>&gt;</operator> <name>size</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>


<decl_stmt><decl><type><name>uint32_t</name></type> <name>header_size</name> <init>= <expr><call><name>GetWBE</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>header</name><index>[<expr><name>position</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>position</name> <operator>+=</operator> <name>header_size</name></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><name>position</name> <operator>+</operator> <literal type="number">6</literal> <operator>&gt;</operator> <name>size</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>size</name> <operator>=</operator> <name>position</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><call><name>vlc_stream_Peek</name> <argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>header</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <name>size</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator><operator>(</operator><name><name>header</name><index>[<expr><name>position</name></expr>]</index></name> <operator>==</operator> <literal type="number">0xFF</literal> <operator>&amp;&amp;</operator> <name><name>header</name><index>[<expr><name>position</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name> <operator>==</operator> <literal type="number">0xFE</literal><operator>)</operator></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name>position</name> <operator>+=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>header_size</name> <operator>=</operator> <call><name>GetWBE</name> <argument_list>(<argument><expr><operator>&amp;</operator><name><name>header</name><index>[<expr><name>position</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>memcmp</name> <argument_list>(<argument><expr><operator>&amp;</operator><name><name>header</name><index>[<expr><name>position</name><operator>+</operator><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="string">"MXF\0"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>true</name></expr>;</return></block_content></block></if></if_stmt>


<expr_stmt><expr><name>size</name> <operator>=</operator> <name>position</name> <operator>+</operator> <name>header_size</name> <operator>+</operator> <literal type="number">8</literal></expr>;</expr_stmt> 
<if_stmt><if>if <condition>(<expr><call><name>vlc_stream_Peek</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>header</name></expr></argument>, <argument><expr><name>size</name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <name>size</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>position</name> <operator>+=</operator> <name>header_size</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><operator>!</operator><operator>(</operator><name><name>header</name><index>[<expr><name>position</name></expr>]</index></name> <operator>==</operator> <literal type="number">0xFF</literal> <operator>&amp;&amp;</operator> <name><name>header</name><index>[<expr><name>position</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name> <operator>==</operator> <literal type="number">0xFE</literal><operator>)</operator></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>position</name> <operator>+=</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>memcmp</name> <argument_list>(<argument><expr><operator>&amp;</operator><name><name>header</name><index>[<expr><name>position</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="string">"MXF\0"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>
</unit>
