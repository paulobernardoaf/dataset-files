<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\demux\dash\mpd\AdaptationSet.h">























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>ADAPTATIONSET_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ADAPTATIONSET_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;map&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../adaptive/playlist/BaseAdaptationSet.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"DASHCommonAttributesElements.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>dash</name>
<block>{<block_content>
<decl_stmt><decl><type><name>namespace</name></type> <name>mpd</name>
<block>{<block_content>
<decl_stmt><decl><type><name>class</name></type> <name>Period</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>Representation</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>using</name> <name>namespace</name></type> <name>adaptive</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>class</name></type> <name>AdaptationSet</name> <range>: <expr><name>public</name> <name>adaptive</name><operator>::</operator><name>playlist</name><operator>::</operator><name>BaseAdaptationSet</name></expr></range></decl>,
<decl><type ref="prev"/><name>public</name> <name>DASHCommonAttributesElements</name>
<block>{<block_content>
<label><name>public</name>:</label>
<expr_stmt><expr><call><name>AdaptationSet</name><argument_list>(<argument><expr><name>Period</name> <operator>*</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>virtual</name> <operator>~</operator><call><name>AdaptationSet</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>virtual</name> <name>StreamFormat</name> <macro><name>getStreamFormat</name><argument_list>()</argument_list></macro> <specifier>const</specifier></expr>;</expr_stmt> 
<expr_stmt><expr><name>bool</name> <macro><name>getSubsegmentAlignmentFlag</name><argument_list>()</argument_list></macro> <specifier>const</specifier></expr>;</expr_stmt>
<function_decl><type><name>void</name></type> <name>setSubsegmentAlignmentFlag</name><parameter_list>( <parameter><decl><type><name>bool</name></type> <name>alignment</name></decl></parameter> )</parameter_list>;</function_decl>

<label><name>private</name>:</label>
<decl_stmt><decl><type><name>bool</name></type> <name>subsegmentAlignmentFlag</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>
</block_content>}</block></decl></decl_stmt>
</block_content>}</block></decl></decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
