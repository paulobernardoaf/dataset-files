<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\demux\mpeg\ts_decoders.c">

















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_DVBPSI_DVBPSI_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dvbpsi/dvbpsi.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_DVBPSI_DEMUX_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dvbpsi/demux.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dvbpsi/psi.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ts_decoders.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>DVBPSI_DECODER_COMMON</name>

<name>ts_dvbpsi_rawsections_callback_t</name></type> <name>pf_callback</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type> <name>p_cb_data</name></decl>;</decl_stmt>

}</block></struct></type> <name>ts_dvbpsi_rawtable_decoder_t</name>;</typedef>

<function><type><specifier>static</specifier> <name>void</name></type> <name>ts_dvbpsi_RawSubDecoderGatherSections</name><parameter_list>( <parameter><decl><type><name>dvbpsi_t</name> <modifier>*</modifier></type><name>p_dvbpsi</name></decl></parameter>,
<parameter><decl><type><name>dvbpsi_decoder_t</name> <modifier>*</modifier></type><name>p_decoder</name></decl></parameter>,
<parameter><decl><type><name>dvbpsi_psi_section_t</name> <modifier>*</modifier></type> <name>p_section</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>dvbpsi_demux_t</name> <modifier>*</modifier></type><name>p_demux</name> <init>= <expr><operator>(</operator><name>dvbpsi_demux_t</name> <operator>*</operator><operator>)</operator> <name><name>p_dvbpsi</name><operator>-&gt;</operator><name>p_decoder</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ts_dvbpsi_rawtable_decoder_t</name> <modifier>*</modifier></type><name>p_tabledec</name> <init>= <expr><operator>(</operator><name>ts_dvbpsi_rawtable_decoder_t</name><operator>*</operator><operator>)</operator><name>p_decoder</name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>( <expr><operator>!</operator><name>p_tabledec</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>dvbpsi_DeletePSISections</name><argument_list>( <argument><expr><name>p_section</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><name><name>p_demux</name><operator>-&gt;</operator><name>b_discontinuity</name></name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>dvbpsi_decoder_reset</name><argument_list>( <argument><expr><call><name>DVBPSI_DECODER</name><argument_list>(<argument><expr><name>p_decoder</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_tabledec</name><operator>-&gt;</operator><name>b_discontinuity</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_demux</name><operator>-&gt;</operator><name>b_discontinuity</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if<condition>( <expr><name><name>p_decoder</name><operator>-&gt;</operator><name>i_last_section_number</name></name> <operator>!=</operator> <name><name>p_section</name><operator>-&gt;</operator><name>i_last_number</name></name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>dvbpsi_decoder_reset</name><argument_list>( <argument><expr><call><name>DVBPSI_DECODER</name><argument_list>(<argument><expr><name>p_decoder</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <call><name>dvbpsi_decoder_psi_section_add</name><argument_list>( <argument><expr><call><name>DVBPSI_DECODER</name><argument_list>(<argument><expr><name>p_decoder</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>p_section</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_decoder</name><operator>-&gt;</operator><name>i_last_section_number</name></name> <operator>=</operator> <name><name>p_section</name><operator>-&gt;</operator><name>i_last_number</name></name></expr>;</expr_stmt>


<if_stmt><if>if <condition>( <expr><call><name>dvbpsi_decoder_psi_sections_completed</name><argument_list>( <argument><expr><call><name>DVBPSI_DECODER</name><argument_list>(<argument><expr><name>p_decoder</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>p_tabledec</name><operator>-&gt;</operator><name>b_current_valid</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name><name>p_tabledec</name><operator>-&gt;</operator><name>pf_callback</name></name><argument_list>( <argument><expr><name>p_dvbpsi</name></expr></argument>,
<argument><expr><name><name>p_decoder</name><operator>-&gt;</operator><name>p_sections</name></name></expr></argument>,
<argument><expr><name><name>p_tabledec</name><operator>-&gt;</operator><name>p_cb_data</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>dvbpsi_decoder_reset</name><argument_list>( <argument><expr><call><name>DVBPSI_DECODER</name><argument_list>(<argument><expr><name>p_decoder</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>ts_dvbpsi_RawDecoderGatherSections</name><parameter_list>( <parameter><decl><type><name>dvbpsi_t</name> <modifier>*</modifier></type><name>p_dvbpsi</name></decl></parameter>,
<parameter><decl><type><name>dvbpsi_psi_section_t</name> <modifier>*</modifier></type> <name>p_section</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ts_dvbpsi_RawSubDecoderGatherSections</name><argument_list>( <argument><expr><name>p_dvbpsi</name></expr></argument>, <argument><expr><name><name>p_dvbpsi</name><operator>-&gt;</operator><name>p_decoder</name></name></expr></argument>, <argument><expr><name>p_section</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ts_dvbpsi_DetachRawSubDecoder</name><parameter_list>( <parameter><decl><type><name>dvbpsi_t</name> <modifier>*</modifier></type><name>p_dvbpsi</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>i_table_id</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>i_extension</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>dvbpsi_demux_t</name> <modifier>*</modifier></type><name>p_demux</name> <init>= <expr><operator>(</operator><name>dvbpsi_demux_t</name> <operator>*</operator><operator>)</operator> <name><name>p_dvbpsi</name><operator>-&gt;</operator><name>p_decoder</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>dvbpsi_demux_subdec_t</name><modifier>*</modifier></type> <name>p_subdec</name></decl>;</decl_stmt>
<expr_stmt><expr><name>p_subdec</name> <operator>=</operator> <call><name>dvbpsi_demuxGetSubDec</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>i_table_id</name></expr></argument>, <argument><expr><name>i_extension</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><name>p_subdec</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <operator>!</operator><name><name>p_subdec</name><operator>-&gt;</operator><name>p_decoder</name></name></expr> )</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>dvbpsi_DetachDemuxSubDecoder</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>p_subdec</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>dvbpsi_DeleteDemuxSubDecoder</name><argument_list>( <argument><expr><name>p_subdec</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>bool</name></type> <name>ts_dvbpsi_AttachRawSubDecoder</name><parameter_list>( <parameter><decl><type><name>dvbpsi_t</name><modifier>*</modifier></type> <name>p_dvbpsi</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name></type> <name>i_table_id</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>i_extension</name></decl></parameter>,
<parameter><decl><type><name>ts_dvbpsi_rawsections_callback_t</name></type> <name>pf_callback</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_cb_data</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>dvbpsi_demux_t</name> <modifier>*</modifier></type><name>p_demux</name> <init>= <expr><operator>(</operator><name>dvbpsi_demux_t</name><operator>*</operator><operator>)</operator><name><name>p_dvbpsi</name><operator>-&gt;</operator><name>p_decoder</name></name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>( <expr><call><name>dvbpsi_demuxGetSubDec</name><argument_list>(<argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>i_table_id</name></expr></argument>, <argument><expr><name>i_extension</name></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>ts_dvbpsi_rawtable_decoder_t</name> <modifier>*</modifier></type><name>p_decoder</name></decl>;</decl_stmt>
<expr_stmt><expr><name>p_decoder</name> <operator>=</operator> <operator>(</operator><name>ts_dvbpsi_rawtable_decoder_t</name> <operator>*</operator><operator>)</operator> <call><name>dvbpsi_decoder_new</name><argument_list>( <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>p_decoder</name></expr></argument>)</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><name>p_decoder</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>


<decl_stmt><decl><type><name>dvbpsi_demux_subdec_t</name><modifier>*</modifier></type> <name>p_subdec</name></decl>;</decl_stmt>
<expr_stmt><expr><name>p_subdec</name> <operator>=</operator> <call><name>dvbpsi_NewDemuxSubDecoder</name><argument_list>( <argument><expr><name>i_table_id</name></expr></argument>, <argument><expr><name>i_extension</name></expr></argument>,
<argument><expr><name>ts_dvbpsi_DetachRawSubDecoder</name></expr></argument>,
<argument><expr><name>ts_dvbpsi_RawSubDecoderGatherSections</name></expr></argument>,
<argument><expr><call><name>DVBPSI_DECODER</name><argument_list>(<argument><expr><name>p_decoder</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>p_subdec</name> <operator>==</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>dvbpsi_decoder_delete</name><argument_list>( <argument><expr><call><name>DVBPSI_DECODER</name><argument_list>(<argument><expr><name>p_decoder</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><call><name>dvbpsi_AttachDemuxSubDecoder</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><name>p_subdec</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_decoder</name><operator>-&gt;</operator><name>pf_callback</name></name> <operator>=</operator> <name>pf_callback</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_decoder</name><operator>-&gt;</operator><name>p_cb_data</name></name> <operator>=</operator> <name>p_cb_data</name></expr>;</expr_stmt>

<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type> <name>ts_dvbpsi_AttachRawDecoder</name><parameter_list>( <parameter><decl><type><name>dvbpsi_t</name><modifier>*</modifier></type> <name>p_dvbpsi</name></decl></parameter>,
<parameter><decl><type><name>ts_dvbpsi_rawsections_callback_t</name></type> <name>pf_callback</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_cb_data</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>( <expr><name><name>p_dvbpsi</name><operator>-&gt;</operator><name>p_decoder</name></name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>ts_dvbpsi_rawtable_decoder_t</name> <modifier>*</modifier></type><name>p_decoder</name> <init>= <expr><call><name>dvbpsi_decoder_new</name><argument_list>( <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">4096</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>p_decoder</name></expr></argument>)</argument_list></sizeof></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>( <expr><name>p_decoder</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>p_dvbpsi</name><operator>-&gt;</operator><name>p_decoder</name></name> <operator>=</operator> <call><name>DVBPSI_DECODER</name><argument_list>(<argument><expr><name>p_decoder</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_decoder</name><operator>-&gt;</operator><name>pf_gather</name></name> <operator>=</operator> <name>ts_dvbpsi_RawDecoderGatherSections</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_decoder</name><operator>-&gt;</operator><name>pf_callback</name></name> <operator>=</operator> <name>pf_callback</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_decoder</name><operator>-&gt;</operator><name>p_cb_data</name></name> <operator>=</operator> <name>p_cb_data</name></expr>;</expr_stmt>

<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ts_dvbpsi_DetachRawDecoder</name><parameter_list>( <parameter><decl><type><name>dvbpsi_t</name> <modifier>*</modifier></type><name>p_dvbpsi</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><call><name>dvbpsi_decoder_present</name><argument_list>( <argument><expr><name>p_dvbpsi</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>dvbpsi_decoder_delete</name><argument_list>( <argument><expr><name><name>p_dvbpsi</name><operator>-&gt;</operator><name>p_decoder</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>p_dvbpsi</name><operator>-&gt;</operator><name>p_decoder</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
