<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\demux\mpeg\ts.h">


















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>VLC_TS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_TS_H</name></cpp:macro></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_ARIBB24</name></expr></argument>)</argument_list></call></expr></cpp:if>
<typedef>typedef <type><name><name>struct</name> <name>arib_instance_t</name></name></type> <name>arib_instance_t</name>;</typedef>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<typedef>typedef <type><name><name>struct</name> <name>csa_t</name></name></type> <name>csa_t</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TS_USER_PMT_NUMBER</name></cpp:macro> <cpp:value>(0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TS_PSI_PAT_PID</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>(</operator><name>VLC_TICK_INVALID</name> <operator>+</operator> <literal type="number">1</literal> <operator>!=</operator> <name>VLC_TICK_0</name><operator>)</operator></expr></cpp:if>
<cpp:error>#<cpp:directive>error</cpp:directive> <cpp:literal>"can't define TS_UNKNOWN reference"</cpp:literal></cpp:error>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TS_TICK_UNKNOWN</name></cpp:macro> <cpp:value>(VLC_TICK_INVALID - 1)</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SETANDVALID</name><parameter_list>(<parameter><type><name>a</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(a != TS_TICK_UNKNOWN &amp;&amp; a != VLC_TICK_INVALID)</cpp:value></cpp:define>

<typedef>typedef <type><enum>enum <name>ts_standards_e</name>
<block>{
<decl><name>TS_STANDARD_AUTO</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>TS_STANDARD_MPEG</name></decl>,
<decl><name>TS_STANDARD_DVB</name></decl>,
<decl><name>TS_STANDARD_ARIB</name></decl>,
<decl><name>TS_STANDARD_ATSC</name></decl>,
<decl><name>TS_STANDARD_TDMB</name></decl>,
}</block></enum></type> <name>ts_standards_e</name>;</typedef>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>int</name></type> <name>i_service</name></decl>;</decl_stmt>
}</block></struct></type> <name>vdr_info_t</name>;</typedef>

<struct>struct <name>demux_sys_t</name>
<block>{
<decl_stmt><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>stream</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_canseek</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_canfastseek</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_lowdelay</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>current_title</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>current_seekpoint</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>updates</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>csa_lock</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>unsigned</name></type> <name>i_packet_size</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>unsigned</name></type> <name>i_packet_header_size</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>unsigned</name></type> <name>i_ts_read</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_cc_check</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_ignore_time_for_positions</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ts_standards_e</name></type> <name>standard</name></decl>;</decl_stmt>

<struct>struct
<block>{
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_ARIBB24</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>arib_instance_t</name> <modifier>*</modifier></type><name>p_instance</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<decl_stmt><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>b25stream</name></decl>;</decl_stmt>
}</block> <decl><name>arib</name></decl>;</struct>


<decl_stmt><decl><type><name>ts_pid_list_t</name></type> <name>pids</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_user_pmt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_pmt_es</name></decl>;</decl_stmt>

<enum>enum
<block>{
<decl><name>DELAY_ES</name></decl>,
<decl><name>CREATE_ES</name></decl>
}</block> <decl><name>es_creation</name></decl>;</enum>


<decl_stmt><decl><type><name>bool</name></type> <name>b_es_id_pid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>i_next_extraid</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>csa_t</name> <modifier>*</modifier></type><name>csa</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_csa_pkt_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_split_es</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_valid_scrambling</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_trust_pcr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_check_pcr_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>i_generated_pcr_dpb_offset</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>bool</name></type> <name>b_access_control</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_end_preparse</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>time_t</name></type> <name>i_network_time</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>time_t</name></type> <name>i_network_time_update</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>bool</name></type> <name>b_broken_charset</name></decl>;</decl_stmt> 


<enum>enum
<block>{
<decl><name>PROGRAM_AUTO_DEFAULT</name></decl>, 
<decl><name>PROGRAM_LIST</name></decl>, 
<decl><name>PROGRAM_ALL</name></decl>, 
}</block> <decl><name>seltype</name></decl>;</enum> 
<macro><name>DECL_ARRAY</name><argument_list>( <argument>int</argument> )</argument_list></macro> <expr_stmt><expr><name>programs</name></expr>;</expr_stmt> 
<decl_stmt><decl><type><name>bool</name></type> <name>b_default_selection</name></decl>;</decl_stmt> 

<struct>struct
<block>{
<decl_stmt><decl><type><name>stime_t</name></type> <name>i_first_dts</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>i_timesourcepid</name></decl>;</decl_stmt> 
<enum>enum <block>{ <decl><name>PAT_WAITING</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><name>PAT_MISSING</name></decl>, <decl><name>PAT_FIXTRIED</name></decl> }</block> <decl><name>status</name></decl>;</enum> 
}</block> <decl><name>patfix</name></decl>;</struct>

<decl_stmt><decl><type><name>vdr_info_t</name></type> <name>vdr</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>vlc_dictionary_t</name></type> <name>attachments</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>bool</name></type> <name>b_start_record</name></decl>;</decl_stmt>
}</block>;</struct>

<function_decl><type><name>void</name></type> <name>TsChangeStandard</name><parameter_list>( <parameter><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>ts_standards_e</name></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> <name>ProgramIsSelected</name><parameter_list>( <parameter><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>i_pgrm</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>UpdatePESFilters</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b_all</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ProbeStart</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_program</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>ProbeEnd</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_program</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>AddAndCreateES</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name>ts_pid_t</name> <modifier>*</modifier></type><name>pid</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b_create_delayed</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>FindPCRCandidate</name><parameter_list>( <parameter><decl><type><name>ts_pmt_t</name> <modifier>*</modifier></type><name>p_pmt</name></decl></parameter> )</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
