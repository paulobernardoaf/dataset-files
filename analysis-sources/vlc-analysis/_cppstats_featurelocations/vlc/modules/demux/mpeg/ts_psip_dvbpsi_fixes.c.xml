<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\demux\mpeg\ts_psip_dvbpsi_fixes.c">

















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_DVBPSI_DVBPSI_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dvbpsi/dvbpsi.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dvbpsi/psi.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dvbpsi/descriptor.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dvbpsi/atsc_stt.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dvbpsi/atsc_ett.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ts_psip_dvbpsi_fixes.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ts_psip.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ts_decoders.h"</cpp:file></cpp:include>


<function><type><name>dvbpsi_atsc_stt_t</name> <modifier>*</modifier></type> <name>DVBPlague_STT_Decode</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>dvbpsi_psi_section_t</name><modifier>*</modifier></type> <name>p_section</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>i_payload</name> <init>= <expr><name><name>p_section</name><operator>-&gt;</operator><name>p_payload_end</name></name> <operator>-</operator> <name><name>p_section</name><operator>-&gt;</operator><name>p_payload_start</name></name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>( <expr><name>i_payload</name> <operator>&gt;=</operator> <literal type="number">8</literal></expr> )</condition>
<block>{<block_content>
<decl_stmt><decl><type><name>dvbpsi_atsc_stt_t</name> <modifier>*</modifier></type><name>p_stt</name> <init>= <expr><call><name>dvbpsi_atsc_NewSTT</name><argument_list>( <argument><expr><name>ATSC_STT_TABLE_ID</name></expr></argument>, <argument><expr><literal type="number">0x00</literal></expr></argument>, <argument><expr><literal type="number">0x00</literal></expr></argument>, <argument><expr><name>true</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><operator>!</operator><name>p_stt</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_stt</name><operator>-&gt;</operator><name>i_system_time</name></name> <operator>=</operator> <call><name>GetDWBE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_section</name><operator>-&gt;</operator><name>p_payload_start</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_stt</name><operator>-&gt;</operator><name>i_gps_utc_offset</name></name> <operator>=</operator> <name><name>p_section</name><operator>-&gt;</operator><name>p_payload_start</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_stt</name><operator>-&gt;</operator><name>i_daylight_savings</name></name> <operator>=</operator> <call><name>GetWBE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_section</name><operator>-&gt;</operator><name>p_payload_start</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>p_stt</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>dvbpsi_atsc_ett_t</name> <modifier>*</modifier></type> <name>DVBPlague_ETT_Decode</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>dvbpsi_psi_section_t</name><modifier>*</modifier></type> <name>p_section</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>i_payload</name> <init>= <expr><name><name>p_section</name><operator>-&gt;</operator><name>p_payload_end</name></name> <operator>-</operator> <name><name>p_section</name><operator>-&gt;</operator><name>p_payload_start</name></name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>( <expr><name>i_payload</name> <operator>&gt;=</operator> <literal type="number">6</literal> <operator>&amp;&amp;</operator> <name><name>p_section</name><operator>-&gt;</operator><name>p_payload_start</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="number">0x00</literal></expr> )</condition>
<block>{<block_content>
<decl_stmt><decl><type><name>dvbpsi_atsc_ett_t</name> <modifier>*</modifier></type><name>p_ett</name> <init>=
<expr><call><name>dvbpsi_atsc_NewETT</name><argument_list>( <argument><expr><name>ATSC_ETT_TABLE_ID</name></expr></argument>, <argument><expr><name><name>p_section</name><operator>-&gt;</operator><name>i_extension</name></name></expr></argument>,
<argument><expr><name><name>p_section</name><operator>-&gt;</operator><name>i_version</name></name></expr></argument>, <argument><expr><literal type="number">0x00</literal></expr></argument>,
<argument><expr><call><name>GetDWBE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_section</name><operator>-&gt;</operator><name>p_payload_start</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><operator>!</operator><name>p_ett</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_ett</name><operator>-&gt;</operator><name>i_etm_length</name></name> <operator>=</operator> <name>i_payload</name> <operator>-</operator> <literal type="number">5</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_ett</name><operator>-&gt;</operator><name>p_etm_data</name></name> <operator>=</operator> <call><name>malloc</name><argument_list>(<argument><expr><name><name>p_ett</name><operator>-&gt;</operator><name>i_etm_length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><call><name>likely</name><argument_list>(<argument><expr><name><name>p_ett</name><operator>-&gt;</operator><name>p_etm_data</name></name></expr></argument>)</argument_list></call></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>memcpy</name><argument_list>( <argument><expr><name><name>p_ett</name><operator>-&gt;</operator><name>p_etm_data</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_section</name><operator>-&gt;</operator><name>p_payload_start</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>p_ett</name><operator>-&gt;</operator><name>i_etm_length</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else
<block>{<block_content>
<expr_stmt><expr><name><name>p_ett</name><operator>-&gt;</operator><name>i_etm_length</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>dvbpsi_atsc_DeleteETT</name><argument_list>( <argument><expr><name>p_ett</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p_ett</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<return>return <expr><name>p_ett</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>
</unit>
