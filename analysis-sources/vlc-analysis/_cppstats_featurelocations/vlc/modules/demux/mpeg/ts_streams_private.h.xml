<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\demux\mpeg\ts_streams_private.h">

















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>VLC_TS_STREAMS_PRIVATE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_TS_STREAMS_PRIVATE_H</name></cpp:macro></cpp:define>

<typedef>typedef <type><name><name>struct</name> <name>dvbpsi_s</name></name></type> <name>dvbpsi_t</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>ts_sections_processor_t</name></name></type> <name>ts_sections_processor_t</name>;</typedef>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mpeg4_iod.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"timestamps.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_es.h&gt;</cpp:file></cpp:include>

<struct>struct <name>ts_pat_t</name>
<block>{
<decl_stmt><decl><type><name>int</name></type> <name>i_version</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_ts_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_generated</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dvbpsi_t</name> <modifier>*</modifier></type><name>handle</name></decl>;</decl_stmt>
<macro><name>DECL_ARRAY</name><argument_list>(<argument>ts_pid_t *</argument>)</argument_list></macro> <expr_stmt><expr><name>programs</name></expr>;</expr_stmt>

}</block>;</struct>

<struct>struct <name>ts_pmt_t</name>
<block>{
<decl_stmt><decl><type><name>dvbpsi_t</name> <modifier>*</modifier></type><name>handle</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_version</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_number</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_pid_pcr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_selected</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>od_descriptor_t</name> <modifier>*</modifier></type><name>iod</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>od_descriptors_t</name></type> <name>od</name></decl>;</decl_stmt>

<macro><name>DECL_ARRAY</name><argument_list>(<argument>ts_pid_t *</argument>)</argument_list></macro> <expr_stmt><expr><name>e_streams</name></expr>;</expr_stmt>


<decl_stmt><decl><type><name>ts_pid_t</name> <modifier>*</modifier></type><name>p_atsc_si_basepid</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ts_pid_t</name> <modifier>*</modifier></type><name>p_si_sdt_pid</name></decl>;</decl_stmt>

<struct>struct
<block>{
<decl_stmt><decl><type><name>stime_t</name></type> <name>i_current</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>stime_t</name></type> <name>i_first</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>stime_t</name></type> <name>i_first_dts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>stime_t</name></type> <name>i_pcroffset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_disable</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>bool</name></type> <name>b_fix_done</name></decl>;</decl_stmt>
}</block> <decl><name>pcr</name></decl>;</struct>

<struct>struct
<block>{
<decl_stmt><decl><type><name>time_t</name></type> <name>i_event_start</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>time_t</name></type> <name>i_event_length</name></decl>;</decl_stmt>
}</block> <decl><name>eit</name></decl>;</struct>

<decl_stmt><decl><type><name>stime_t</name></type> <name>i_last_dts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>i_last_dts_byte</name></decl>;</decl_stmt>


<struct>struct
<block>{
<decl_stmt><decl><type><name>int</name></type> <name>i_logo_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_download_id</name></decl>;</decl_stmt>
}</block> <decl><name>arib</name></decl>;</struct>
}</block>;</struct>

<struct>struct <name>ts_es_t</name>
<block>{
<decl_stmt><decl><type><name>ts_pmt_t</name> <modifier>*</modifier></type><name>p_program</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>es_format_t</name></type> <name>fmt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>es_out_id_t</name> <modifier>*</modifier></type><name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>i_sl_es_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_next_block_flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ts_es_t</name> <modifier>*</modifier></type><name>p_extraes</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ts_es_t</name> <modifier>*</modifier></type><name>p_next</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name>b_interlaced</name></decl>;</decl_stmt>

<struct>struct
<block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_service_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>i_format</name></decl>;</decl_stmt>
}</block> <decl><name>metadata</name></decl>;</struct>
}</block>;</struct>

<typedef>typedef <type><enum>enum
<block>{
<decl><name>TS_TRANSPORT_PES</name></decl>,
<decl><name>TS_TRANSPORT_SECTIONS</name></decl>,
<decl><name>TS_TRANSPORT_IGNORE</name></decl>
}</block></enum></type> <name>ts_transport_type_t</name>;</typedef>

<struct>struct <name>ts_stream_t</name>
<block>{
<decl_stmt><decl><type><name>ts_es_t</name> <modifier>*</modifier></type><name>p_es</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_stream_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ts_transport_type_t</name></type> <name>transport</name></decl>;</decl_stmt>

<struct>struct
<block>{
<decl_stmt><decl><type><name>size_t</name></type> <name>i_data_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i_gathered</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_last</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>saved</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i_saved</name></decl>;</decl_stmt>
}</block> <decl><name>gather</name></decl>;</struct>

<decl_stmt><decl><type><name>bool</name></type> <name>b_always_receive</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_broken_PUSI_conformance</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ts_sections_processor_t</name> <modifier>*</modifier></type><name>p_sections_proc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ts_stream_processor_t</name> <modifier>*</modifier></type><name>p_proc</name></decl>;</decl_stmt>

<struct>struct
<block>{
<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_head</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_last</name></decl>;</decl_stmt>
}</block> <decl><name>prepcr</name></decl>;</struct>

<decl_stmt><decl><type><name>stime_t</name></type> <name>i_last_dts</name></decl>;</decl_stmt>
}</block>;</struct>

<typedef>typedef <type><name><name>struct</name> <name>ts_si_context_t</name></name></type> <name>ts_si_context_t</name>;</typedef>

<struct>struct <name>ts_si_t</name>
<block>{
<decl_stmt><decl><type><name>dvbpsi_t</name> <modifier>*</modifier></type><name>handle</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_version</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ts_pid_t</name> <modifier>*</modifier></type><name>eitpid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ts_pid_t</name> <modifier>*</modifier></type><name>tdtpid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ts_pid_t</name> <modifier>*</modifier></type><name>cdtpid</name></decl>;</decl_stmt>
}</block>;</struct>

<typedef>typedef <type><name><name>struct</name> <name>ts_psip_context_t</name></name></type> <name>ts_psip_context_t</name>;</typedef>

<struct>struct <name>ts_psip_t</name>
<block>{
<decl_stmt><decl><type><name>dvbpsi_t</name> <modifier>*</modifier></type><name>handle</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_version</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ts_es_t</name> <modifier>*</modifier></type><name>p_eas_es</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ts_psip_context_t</name> <modifier>*</modifier></type><name>p_ctx</name></decl>;</decl_stmt>



<macro><name>DECL_ARRAY</name><argument_list>(<argument>ts_pid_t *</argument>)</argument_list></macro> <expr_stmt><expr><name>eit</name></expr>;</expr_stmt>

}</block>;</struct>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
