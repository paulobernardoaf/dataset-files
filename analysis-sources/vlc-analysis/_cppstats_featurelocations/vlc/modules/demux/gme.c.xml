<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\demux\gme.c">





















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;config.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdarg.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;limits.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_input.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_demux.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;gme/gme.h&gt;</cpp:file></cpp:include>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Open</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Close</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<macro><name>vlc_module_begin</name> <argument_list>()</argument_list></macro>
<macro><name>set_shortname</name> <argument_list>(<argument><literal type="string">"GME"</literal></argument>)</argument_list></macro>
<macro><name>set_description</name> <argument_list>(<argument><literal type="string">"Game Music Emu"</literal></argument>)</argument_list></macro>
<macro><name>set_category</name> <argument_list>(<argument>CAT_INPUT</argument>)</argument_list></macro>
<macro><name>set_subcategory</name> <argument_list>(<argument>SUBCAT_INPUT_DEMUX</argument>)</argument_list></macro>
<macro><name>set_capability</name> <argument_list>(<argument><literal type="string">"demux"</literal></argument>, <argument><literal type="number">10</literal></argument>)</argument_list></macro>
<macro><name>set_callbacks</name> <argument_list>(<argument>Open</argument>, <argument>Close</argument>)</argument_list></macro>
<macro><name>vlc_module_end</name> <argument_list>()</argument_list></macro>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RATE</name></cpp:macro> <cpp:value>48000</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>Music_Emu</name> <modifier>*</modifier></type><name>emu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>track_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>es_out_id_t</name> <modifier>*</modifier></type><name>es</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>date_t</name></type> <name>pts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>input_title_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>titlev</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>titlec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>title_changed</name></decl>;</decl_stmt>
}</block></struct></type> <name>demux_sys_t</name>;</typedef>


<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Demux</name> <parameter_list>(<parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Control</name> <parameter_list>(<parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>va_list</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>gme_err_t</name></type> <name>ReaderStream</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>gme_err_t</name></type> <name>ReaderBlock</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Open</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>demux</name> <init>= <expr><operator>(</operator><name>demux_t</name> <operator>*</operator><operator>)</operator><name>obj</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>size</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>vlc_stream_GetSize</name><argument_list>(<argument><expr><name><name>demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>size</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>size</name> <operator>&gt;</operator> <name>LONG_MAX</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>peek</name></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>vlc_stream_Peek</name> <argument_list>(<argument><expr><name><name>demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>peek</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">4</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>type</name> <init>= <expr><call><name>gme_identify_header</name> <argument_list>(<argument><expr><name>peek</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>*</operator><name>type</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"detected file type %s"</literal></expr></argument>, <argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>data</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>size</name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>data</name> <operator>=</operator> <call><name>vlc_stream_Block</name> <argument_list>(<argument><expr><name><name>demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>data</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>


<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><call><name>malloc</name> <argument_list>(<argument><expr><sizeof>sizeof <argument_list>(<argument><expr><operator>*</operator><name>sys</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>sys</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>emu</name></name> <operator>=</operator> <call><name>gme_new_emu</name> <argument_list>(<argument><expr><call><name>gme_identify_extension</name> <argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>RATE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>emu</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_ENOMEM</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>data</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>gme_load_custom</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>emu</name></name></expr></argument>, <argument><expr><name>ReaderBlock</name></expr></argument>, <argument><expr><name><name>data</name><operator>-&gt;</operator><name>i_buffer</name></name></expr></argument>, <argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>block_Release</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else
<block>{<block_content>
<expr_stmt><expr><call><name>gme_load_custom</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>emu</name></name></expr></argument>, <argument><expr><name>ReaderStream</name></expr></argument>, <argument><expr><name>size</name></expr></argument>, <argument><expr><name><name>demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><call><name>gme_start_track</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>emu</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>track_id</name></name> <operator>=</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>es_format_t</name></type> <name>fmt</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>es_format_Init</name> <argument_list>(<argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>, <argument><expr><name>AUDIO_ES</name></expr></argument>, <argument><expr><name>VLC_CODEC_S16N</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_rate</name></name> <operator>=</operator> <name>RATE</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_bytes_per_frame</name></name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_frame_length</name></name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_channels</name></name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_blockalign</name></name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_bitspersample</name></name> <operator>=</operator> <literal type="number">16</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_bitrate</name></name> <operator>=</operator> <name>RATE</name> <operator>*</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>es</name></name> <operator>=</operator> <call><name>es_out_Add</name> <argument_list>(<argument><expr><name><name>demux</name><operator>-&gt;</operator><name>out</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>date_Init</name> <argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>pts</name></name></expr></argument>, <argument><expr><name>RATE</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>date_Set</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>pts</name></name></expr></argument>, <argument><expr><name>VLC_TICK_0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<decl_stmt><decl><type><name>unsigned</name></type> <name>n</name> <init>= <expr><call><name>gme_track_count</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>emu</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>titlev</name></name> <operator>=</operator> <call><name>vlc_alloc</name> <argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><sizeof>sizeof <argument_list>(<argument><expr><operator>*</operator><name><name>sys</name><operator>-&gt;</operator><name>titlev</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>titlev</name></name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>n</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>titlec</name></name> <operator>=</operator> <name>n</name></expr>;</expr_stmt>
<for>for <control>(<init><decl><type><name>unsigned</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
<block>{<block_content>
<decl_stmt><decl><type><name>input_title_t</name> <modifier>*</modifier></type><name>title</name> <init>= <expr><call><name>vlc_input_title_New</name> <argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>titlev</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>title</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>title</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>gme_info_t</name> <modifier>*</modifier></type><name>infos</name></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>gme_track_info</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>emu</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>infos</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="string">"track %u: %s %d ms"</literal></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><name><name>infos</name><operator>-&gt;</operator><name>song</name></name></expr></argument>, <argument><expr><name><name>infos</name><operator>-&gt;</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>infos</name><operator>-&gt;</operator><name>length</name></name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>title</name><operator>-&gt;</operator><name>i_length</name></name> <operator>=</operator> <call><name>VLC_TICK_FROM_MS</name><argument_list>(<argument><expr><name><name>infos</name><operator>-&gt;</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>infos</name><operator>-&gt;</operator><name>song</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>title</name><operator>-&gt;</operator><name>psz_name</name></name> <operator>=</operator> <call><name>strdup</name> <argument_list>(<argument><expr><name><name>infos</name><operator>-&gt;</operator><name>song</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>gme_free_info</name> <argument_list>(<argument><expr><name>infos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>title_changed</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>


<expr_stmt><expr><name><name>demux</name><operator>-&gt;</operator><name>pf_demux</name></name> <operator>=</operator> <name>Demux</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>demux</name><operator>-&gt;</operator><name>pf_control</name></name> <operator>=</operator> <name>Control</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>demux</name><operator>-&gt;</operator><name>p_sys</name></name> <operator>=</operator> <name>sys</name></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>void</name></type> <name>Close</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>demux</name> <init>= <expr><operator>(</operator><name>demux_t</name> <operator>*</operator><operator>)</operator><name>obj</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><decl><type><name>unsigned</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>n</name> <init>= <expr><name><name>sys</name><operator>-&gt;</operator><name>titlec</name></name></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>vlc_input_title_Delete</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>titlev</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>titlev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>gme_delete</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>emu</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>gme_err_t</name></type> <name>ReaderStream</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>length</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><name>data</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>vlc_stream_Read</name> <argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><name>length</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <name>length</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="string">"short read"</literal></expr>;</return></block_content></block></if></if_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>gme_err_t</name></type> <name>ReaderBlock</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>length</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>block</name> <init>= <expr><name>data</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>max</name> <init>= <expr><call><name>__MIN</name> <argument_list>(<argument><expr><name>length</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><name><name>block</name><operator>-&gt;</operator><name>i_buffer</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>memcpy</name> <argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><name><name>block</name><operator>-&gt;</operator><name>p_buffer</name></name></expr></argument>, <argument><expr><name>max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>block</name><operator>-&gt;</operator><name>i_buffer</name></name> <operator>-=</operator> <name>max</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>block</name><operator>-&gt;</operator><name>p_buffer</name></name> <operator>+=</operator> <name>max</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>max</name> <operator>!=</operator> <name>length</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="string">"short read"</literal></expr>;</return></block_content></block></if></if_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SAMPLES</name></cpp:macro> <cpp:value>(RATE / 10)</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Demux</name> <parameter_list>(<parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>demux</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>


<if_stmt><if>if <condition>(<expr><call><name>gme_track_ended</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>emu</name></name></expr></argument>)</argument_list></call></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>(<argument><expr><name>demux</name></expr></argument>, <argument><expr><literal type="string">"track %u ended"</literal></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>track_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>++</operator><name><name>sys</name><operator>-&gt;</operator><name>track_id</name></name> <operator>&gt;=</operator> <operator>(</operator><name>unsigned</name><operator>)</operator><call><name>gme_track_count</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>emu</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_DEMUXER_EOF</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>title_changed</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>gme_start_track</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>emu</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>track_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>block</name> <init>= <expr><call><name>block_Alloc</name> <argument_list>(<argument><expr><literal type="number">2</literal> <operator>*</operator> <literal type="number">2</literal> <operator>*</operator> <name>SAMPLES</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>block</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_DEMUXER_EOF</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>gme_err_t</name></type> <name>ret</name> <init>= <expr><call><name>gme_play</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>emu</name></name></expr></argument>, <argument><expr><literal type="number">2</literal> <operator>*</operator> <name>SAMPLES</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name><name>block</name><operator>-&gt;</operator><name>p_buffer</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>!=</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>block_Release</name> <argument_list>(<argument><expr><name>block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>msg_Err</name> <argument_list>(<argument><expr><name>demux</name></expr></argument>, <argument><expr><literal type="string">"%s"</literal></expr></argument>, <argument><expr><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_DEMUXER_EOF</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>block</name><operator>-&gt;</operator><name>i_pts</name></name> <operator>=</operator> <name><name>block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>=</operator> <call><name>date_Get</name> <argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>es_out_SetPCR</name> <argument_list>(<argument><expr><name><name>demux</name><operator>-&gt;</operator><name>out</name></name></expr></argument>, <argument><expr><name><name>block</name><operator>-&gt;</operator><name>i_pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>es_out_Send</name> <argument_list>(<argument><expr><name><name>demux</name><operator>-&gt;</operator><name>out</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>es</name></name></expr></argument>, <argument><expr><name>block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>date_Increment</name> <argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>pts</name></name></expr></argument>, <argument><expr><name>SAMPLES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_DEMUXER_SUCCESS</name></expr>;</return>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>int</name></type> <name>Control</name> <parameter_list>(<parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>demux</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>query</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>args</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<switch>switch <condition>(<expr><name>query</name></expr>)</condition>
<block>{<block_content>
<case>case <expr><name>DEMUX_CAN_SEEK</name></expr>:</case>
<expr_stmt><expr><operator>*</operator><call><name>va_arg</name> <argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr><name>bool</name> <operator>*</operator></expr></argument>)</argument_list></call> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>DEMUX_GET_POSITION</name></expr>:</case>
<block>{<block_content>
<decl_stmt><decl><type><name>double</name> <modifier>*</modifier></type><name>pos</name> <init>= <expr><call><name>va_arg</name> <argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr><name>double</name> <operator>*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>track_id</name></name> <operator>&gt;=</operator> <name><name>sys</name><operator>-&gt;</operator><name>titlec</name></name></expr></argument>)</argument_list></call>
<operator>||</operator> <operator>(</operator><name><name>sys</name><operator>-&gt;</operator><name>titlev</name><index>[<expr><name><name>sys</name><operator>-&gt;</operator><name>track_id</name></name></expr>]</index></name><operator>-&gt;</operator><name>i_length</name> <operator>==</operator> <literal type="number">0</literal><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><operator>*</operator><name>pos</name> <operator>=</operator> <literal type="number">0.</literal></expr>;</expr_stmt></block_content></block></if>
<else>else
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>offset</name> <init>= <expr><call><name>gme_tell</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>emu</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><operator>*</operator><name>pos</name> <operator>=</operator> <operator>(</operator><name>double</name><operator>)</operator><name>offset</name>
<operator>/</operator> <operator>(</operator><name>double</name><operator>)</operator><operator>(</operator><name><name>sys</name><operator>-&gt;</operator><name>titlev</name><index>[<expr><name><name>sys</name><operator>-&gt;</operator><name>track_id</name></name></expr>]</index></name><operator>-&gt;</operator><name>i_length</name> <operator>/</operator> <literal type="number">1000</literal><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block>

<case>case <expr><name>DEMUX_SET_POSITION</name></expr>:</case>
<block>{<block_content>
<decl_stmt><decl><type><name>double</name></type> <name>pos</name> <init>= <expr><call><name>va_arg</name> <argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr><name>double</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>track_id</name></name> <operator>&gt;=</operator> <name><name>sys</name><operator>-&gt;</operator><name>titlec</name></name></expr></argument>)</argument_list></call>
<operator>||</operator> <operator>(</operator><name><name>sys</name><operator>-&gt;</operator><name>titlev</name><index>[<expr><name><name>sys</name><operator>-&gt;</operator><name>track_id</name></name></expr>]</index></name><operator>-&gt;</operator><name>i_length</name> <operator>==</operator> <literal type="number">0</literal><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>seek</name> <init>= <expr><call><name>MS_FROM_VLC_TICK</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>titlev</name><index>[<expr><name><name>sys</name><operator>-&gt;</operator><name>track_id</name></name></expr>]</index></name><operator>-&gt;</operator><name>i_length</name></expr></argument>)</argument_list></call> <operator>*</operator> <name>pos</name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>gme_seek</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>emu</name></name></expr></argument>, <argument><expr><name>seek</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block>

<case>case <expr><name>DEMUX_GET_LENGTH</name></expr>:</case>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>track_id</name></name> <operator>&gt;=</operator> <name><name>sys</name><operator>-&gt;</operator><name>titlec</name></name></expr></argument>)</argument_list></call>
<operator>||</operator> <operator>(</operator><name><name>sys</name><operator>-&gt;</operator><name>titlev</name><index>[<expr><name><name>sys</name><operator>-&gt;</operator><name>track_id</name></name></expr>]</index></name><operator>-&gt;</operator><name>i_length</name> <operator>==</operator> <literal type="number">0</literal><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>
<expr_stmt><expr><operator>*</operator><call><name>va_arg</name> <argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr><name>vlc_tick_t</name> <operator>*</operator></expr></argument>)</argument_list></call> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>titlev</name><index>[<expr><name><name>sys</name><operator>-&gt;</operator><name>track_id</name></name></expr>]</index></name><operator>-&gt;</operator><name>i_length</name></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block>

<case>case <expr><name>DEMUX_GET_TIME</name></expr>:</case>
<block>{<block_content>
<expr_stmt><expr><operator>*</operator><call><name>va_arg</name> <argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr><name>vlc_tick_t</name> <operator>*</operator></expr></argument>)</argument_list></call> <operator>=</operator> <call><name>VLC_TICK_FROM_MS</name><argument_list>(<argument><expr><call><name>gme_tell</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>emu</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block>

<case>case <expr><name>DEMUX_SET_TIME</name></expr>:</case>
<block>{<block_content>
<decl_stmt><decl><type><name>int64_t</name></type> <name>v</name> <init>= <expr><call><name>MS_FROM_VLC_TICK</name><argument_list>( <argument><expr><call><name>va_arg</name> <argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr><name>vlc_tick_t</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>v</name> <operator>&gt;</operator> <name>INT_MAX</name> <operator>||</operator> <call><name>gme_seek</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>emu</name></name></expr></argument>, <argument><expr><name>v</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block>

<case>case <expr><name>DEMUX_GET_TITLE_INFO</name></expr>:</case>
<block>{<block_content>
<decl_stmt><decl><type><name>input_title_t</name> <modifier>*</modifier><modifier>*</modifier><modifier>*</modifier></type><name>titlev</name> <init>= <expr><call><name>va_arg</name> <argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr><name>input_title_t</name> <operator>*</operator><operator>*</operator><operator>*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>titlec</name> <init>= <expr><call><name>va_arg</name> <argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr><name>int</name> <operator>*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><operator>*</operator><operator>(</operator><call><name>va_arg</name> <argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr><name>int</name> <operator>*</operator></expr></argument>)</argument_list></call><operator>)</operator> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt> 
<expr_stmt><expr><operator>*</operator><operator>(</operator><call><name>va_arg</name> <argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr><name>int</name> <operator>*</operator></expr></argument>)</argument_list></call><operator>)</operator> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt> 

<decl_stmt><decl><type><name>unsigned</name></type> <name>n</name> <init>= <expr><name><name>sys</name><operator>-&gt;</operator><name>titlec</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><operator>*</operator><name>titlev</name> <operator>=</operator> <call><name>vlc_alloc</name> <argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><sizeof>sizeof <argument_list>(<argument><expr><operator>*</operator><operator>*</operator><name>titlev</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><operator>*</operator><name>titlev</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>n</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><operator>*</operator><name>titlec</name> <operator>=</operator> <name>n</name></expr>;</expr_stmt>
<for>for <control>(<init><decl><type><name>unsigned</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><operator>(</operator><operator>*</operator><name>titlev</name><operator>)</operator><index>[<expr><name>i</name></expr>]</index> <operator>=</operator> <call><name>vlc_input_title_Duplicate</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>titlev</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block>

<case>case <expr><name>DEMUX_SET_TITLE</name></expr>:</case>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>track_id</name> <init>= <expr><call><name>va_arg</name> <argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr><name>int</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>track_id</name> <operator>&gt;=</operator> <call><name>gme_track_count</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>emu</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>gme_start_track</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>emu</name></name></expr></argument>, <argument><expr><name>track_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>title_changed</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>track_id</name></name> <operator>=</operator> <name>track_id</name></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block>

<case>case <expr><name>DEMUX_TEST_AND_CLEAR_FLAGS</name></expr>:</case>
<block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <modifier>*</modifier><specifier>restrict</specifier></type> <name>flags</name> <init>= <expr><call><name>va_arg</name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr><name>unsigned</name> <operator>*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><operator>*</operator><name>flags</name> <operator>&amp;</operator> <name>INPUT_UPDATE_TITLE</name><operator>)</operator> <operator>&amp;&amp;</operator> <name><name>sys</name><operator>-&gt;</operator><name>title_changed</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>flags</name> <operator>=</operator> <name>INPUT_UPDATE_TITLE</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>title_changed</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else<block type="pseudo"><block_content>
<expr_stmt><expr><operator>*</operator><name>flags</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block>

<case>case <expr><name>DEMUX_GET_TITLE</name></expr>:</case>
<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr><name>int</name> <operator>*</operator></expr></argument>)</argument_list></call> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>track_id</name></name></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>DEMUX_CAN_PAUSE</name></expr>:</case>
<case>case <expr><name>DEMUX_SET_PAUSE_STATE</name></expr>:</case>
<case>case <expr><name>DEMUX_CAN_CONTROL_PACE</name></expr>:</case>
<case>case <expr><name>DEMUX_GET_PTS_DELAY</name></expr>:</case>
<return>return <expr><call><name>demux_vaControlHelper</name><argument_list>( <argument><expr><name><name>demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>query</name></expr></argument>, <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr>;</return>

<default>default:</default>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></switch>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></function>
</unit>
