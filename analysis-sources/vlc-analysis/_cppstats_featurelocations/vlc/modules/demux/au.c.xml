<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\demux\au.c">

























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;limits.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_demux.h&gt;</cpp:file></cpp:include>









<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Open</name> <parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<macro><name>vlc_module_begin</name> <argument_list>()</argument_list></macro>
<macro><name>set_category</name><argument_list>( <argument>CAT_INPUT</argument> )</argument_list></macro>
<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_INPUT_DEMUX</argument> )</argument_list></macro>
<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"AU demuxer"</literal>)</argument> )</argument_list></macro>
<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"demux"</literal></argument>, <argument><literal type="number">10</literal></argument> )</argument_list></macro>
<macro><name>set_callback</name><argument_list>( <argument>Open</argument> )</argument_list></macro>
<macro><name>add_shortcut</name><argument_list>( <argument><literal type="string">"au"</literal></argument> )</argument_list></macro>
<expr_stmt><expr><call><name>vlc_module_end</name> <argument_list>()</argument_list></call>




enum <name>AuType_e</name>
<block>{
<expr><name>AU_UNKNOWN</name> <operator>=</operator> <literal type="number">0</literal></expr>,
<expr><name>AU_MULAW_8</name> <operator>=</operator> <literal type="number">1</literal></expr>, 
<expr><name>AU_LINEAR_8</name> <operator>=</operator> <literal type="number">2</literal></expr>, 
<expr><name>AU_LINEAR_16</name> <operator>=</operator> <literal type="number">3</literal></expr>, 
<expr><name>AU_LINEAR_24</name> <operator>=</operator> <literal type="number">4</literal></expr>, 
<expr><name>AU_LINEAR_32</name> <operator>=</operator> <literal type="number">5</literal></expr>, 
<expr><name>AU_FLOAT</name> <operator>=</operator> <literal type="number">6</literal></expr>, 
<expr><name>AU_DOUBLE</name> <operator>=</operator> <literal type="number">7</literal></expr>, 
<expr><name>AU_ADPCM_G721</name> <operator>=</operator> <literal type="number">23</literal></expr>, 
<expr><name>AU_ADPCM_G722</name> <operator>=</operator> <literal type="number">24</literal></expr>, 
<expr><name>AU_ADPCM_G723_3</name> <operator>=</operator> <literal type="number">25</literal></expr>, 
<expr><name>AU_ADPCM_G723_5</name> <operator>=</operator> <literal type="number">26</literal></expr>, 
<expr><name>AU_ALAW_8</name> <operator>=</operator> <literal type="number">27</literal></expr> 
}</block></expr>;</expr_stmt>

<enum>enum <name>AuCat_e</name>
<block>{
<decl><name>AU_CAT_UNKNOWN</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>AU_CAT_PCM</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>AU_CAT_ADPCM</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>
}</block>;</enum>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>es_format_t</name></type> <name>fmt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>es_out_id_t</name> <modifier>*</modifier></type><name>es</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_time</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_frame_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_frame_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>i_header_size</name></decl>;</decl_stmt>
}</block></struct></type> <name>demux_sys_t</name>;</typedef>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Demux</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Control</name> <parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_query</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>args</name></decl></parameter> )</parameter_list>;</function_decl>




<function><type><specifier>static</specifier> <name>int</name></type> <name>Open</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name> <init>= <expr><operator>(</operator><name>demux_t</name><operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>hdr</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_peek</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_cat</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>vlc_stream_Peek</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument> , <argument><expr><operator>&amp;</operator><name>p_peek</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">4</literal></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><call><name>memcmp</name><argument_list>( <argument><expr><name>p_peek</name></expr></argument>, <argument><expr><literal type="string">".snd"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>


<if_stmt><if>if<condition>( <expr><call><name>vlc_stream_Read</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">4</literal></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>


<if_stmt><if>if<condition>( <expr><call><name>vlc_stream_Read</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><name>hdr</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">20</literal></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"cannot read"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><call><name>GetDWBE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>hdr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">24</literal></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"invalid file"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><call><name>vlc_obj_malloc</name><argument_list>( <argument><expr><name>p_this</name></expr></argument>, <argument><expr><sizeof>sizeof <argument_list>(<argument><expr><operator>*</operator><name>p_sys</name></expr></argument>)</argument_list></sizeof></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>( <expr><call><name>unlikely</name><argument_list>(<argument><expr><name>p_sys</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_time</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_header_size</name></name> <operator>=</operator> <call><name>GetDWBE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>hdr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_header_size</name></name> <operator>&gt;</operator> <literal type="number">24</literal></expr> )</condition>
<block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>(</operator><name>SSIZE_MAX</name> <operator>&lt;=</operator> <name>INT32_MAX</name><operator>)</operator></expr></cpp:if>
<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_header_size</name></name> <operator>&gt;</operator> <name>SSIZE_MAX</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<decl_stmt><decl><type><name>size_t</name></type> <name>skip</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_header_size</name></name> <operator>-</operator> <literal type="number">24</literal></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>( <expr><call><name>vlc_stream_Read</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>skip</name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <operator>(</operator><name>ssize_t</name><operator>)</operator><name>skip</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><call><name>es_format_Init</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument>, <argument><expr><name>AUDIO_ES</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_rate</name></name> <operator>=</operator> <call><name>GetDWBE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>hdr</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_channels</name></name> <operator>=</operator> <call><name>GetDWBE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>hdr</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>
p_sys-&gt;au.i_header_size = GetDWBE( &amp;p_sys-&gt;au.i_header_size );
p_sys-&gt;au.i_data_size = GetDWBE( &amp;p_sys-&gt;au.i_data_size );
p_sys-&gt;au.i_encoding = GetDWBE( &amp;p_sys-&gt;au.i_encoding );
p_sys-&gt;au.i_sample_rate = GetDWBE( &amp;p_sys-&gt;au.i_sample_rate );
p_sys-&gt;au.i_channels = GetDWBE( &amp;p_sys-&gt;au.i_channels );
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<switch>switch<condition>( <expr><call><name>GetDWBE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>hdr</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr> )</condition>
<block>{<block_content>
<case>case <expr><name>AU_ALAW_8</name></expr>:</case> 
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_codec</name></name> <operator>=</operator> <name>VLC_CODEC_ALAW</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_bitspersample</name></name> <operator>=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_blockalign</name></name> <operator>=</operator> <literal type="number">1</literal> <operator>*</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_channels</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>i_cat</name> <operator>=</operator> <name>AU_CAT_PCM</name></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><name>AU_MULAW_8</name></expr>:</case> 
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_codec</name></name> <operator>=</operator> <name>VLC_CODEC_MULAW</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_bitspersample</name></name> <operator>=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_blockalign</name></name> <operator>=</operator> <literal type="number">1</literal> <operator>*</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_channels</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>i_cat</name> <operator>=</operator> <name>AU_CAT_PCM</name></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><name>AU_LINEAR_8</name></expr>:</case> 
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_codec</name></name> <operator>=</operator> <name>VLC_CODEC_S8</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_bitspersample</name></name> <operator>=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_blockalign</name></name> <operator>=</operator> <literal type="number">1</literal> <operator>*</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_channels</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>i_cat</name> <operator>=</operator> <name>AU_CAT_PCM</name></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><name>AU_LINEAR_16</name></expr>:</case> 
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_codec</name></name> <operator>=</operator> <name>VLC_CODEC_S16B</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_bitspersample</name></name> <operator>=</operator> <literal type="number">16</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_blockalign</name></name> <operator>=</operator> <literal type="number">2</literal> <operator>*</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_channels</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>i_cat</name> <operator>=</operator> <name>AU_CAT_PCM</name></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><name>AU_LINEAR_24</name></expr>:</case> 
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_codec</name></name> <operator>=</operator> <name>VLC_CODEC_S24B</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_bitspersample</name></name> <operator>=</operator> <literal type="number">24</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_blockalign</name></name> <operator>=</operator> <literal type="number">3</literal> <operator>*</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_channels</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>i_cat</name> <operator>=</operator> <name>AU_CAT_PCM</name></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><name>AU_LINEAR_32</name></expr>:</case> 
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_codec</name></name> <operator>=</operator> <name>VLC_CODEC_S32B</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_bitspersample</name></name> <operator>=</operator> <literal type="number">32</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_blockalign</name></name> <operator>=</operator> <literal type="number">4</literal> <operator>*</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_channels</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>i_cat</name> <operator>=</operator> <name>AU_CAT_PCM</name></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><name>AU_FLOAT</name></expr>:</case> 
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_codec</name></name> <operator>=</operator> <call><name>VLC_FOURCC</name><argument_list>( <argument><expr><literal type="char">'a'</literal></expr></argument>, <argument><expr><literal type="char">'u'</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>AU_FLOAT</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_bitspersample</name></name> <operator>=</operator> <literal type="number">32</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_blockalign</name></name> <operator>=</operator> <literal type="number">4</literal> <operator>*</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_channels</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>i_cat</name> <operator>=</operator> <name>AU_CAT_PCM</name></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><name>AU_DOUBLE</name></expr>:</case> 
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_codec</name></name> <operator>=</operator> <call><name>VLC_FOURCC</name><argument_list>( <argument><expr><literal type="char">'a'</literal></expr></argument>, <argument><expr><literal type="char">'u'</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>AU_DOUBLE</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_bitspersample</name></name> <operator>=</operator> <literal type="number">64</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_blockalign</name></name> <operator>=</operator> <literal type="number">8</literal> <operator>*</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_channels</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>i_cat</name> <operator>=</operator> <name>AU_CAT_PCM</name></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><name>AU_ADPCM_G721</name></expr>:</case> 
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_codec</name></name> <operator>=</operator> <call><name>VLC_FOURCC</name><argument_list>( <argument><expr><literal type="char">'a'</literal></expr></argument>, <argument><expr><literal type="char">'u'</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>AU_ADPCM_G721</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_bitspersample</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_blockalign</name></name> <operator>=</operator> <literal type="number">0</literal> <operator>*</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_channels</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>i_cat</name> <operator>=</operator> <name>AU_CAT_ADPCM</name></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><name>AU_ADPCM_G722</name></expr>:</case> 
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_codec</name></name> <operator>=</operator> <call><name>VLC_FOURCC</name><argument_list>( <argument><expr><literal type="char">'a'</literal></expr></argument>, <argument><expr><literal type="char">'u'</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>AU_ADPCM_G722</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_bitspersample</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_blockalign</name></name> <operator>=</operator> <literal type="number">0</literal> <operator>*</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_channels</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>i_cat</name> <operator>=</operator> <name>AU_CAT_ADPCM</name></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><name>AU_ADPCM_G723_3</name></expr>:</case> 
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_codec</name></name> <operator>=</operator> <call><name>VLC_FOURCC</name><argument_list>( <argument><expr><literal type="char">'a'</literal></expr></argument>, <argument><expr><literal type="char">'u'</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>AU_ADPCM_G723_3</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_bitspersample</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_blockalign</name></name> <operator>=</operator> <literal type="number">0</literal> <operator>*</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_channels</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>i_cat</name> <operator>=</operator> <name>AU_CAT_ADPCM</name></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><name>AU_ADPCM_G723_5</name></expr>:</case> 
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_codec</name></name> <operator>=</operator> <call><name>VLC_FOURCC</name><argument_list>( <argument><expr><literal type="char">'a'</literal></expr></argument>, <argument><expr><literal type="char">'u'</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>AU_ADPCM_G723_5</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_bitspersample</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_blockalign</name></name> <operator>=</operator> <literal type="number">0</literal> <operator>*</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_channels</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>i_cat</name> <operator>=</operator> <name>AU_CAT_ADPCM</name></expr>;</expr_stmt>
<break>break;</break>

<default>default:</default>
<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"unknown encoding=0x%x"</literal></expr></argument>, <argument><expr><call><name>GetDWBE</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>hdr</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_bitspersample</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_blockalign</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>i_cat</name> <operator>=</operator> <name>AU_CAT_UNKNOWN</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_bitrate</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_rate</name></name> <operator>*</operator>
<name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_channels</name></name> <operator>*</operator>
<name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_bitspersample</name></name></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i_cat</name> <operator>==</operator> <name>AU_CAT_UNKNOWN</name> <operator>||</operator> <name>i_cat</name> <operator>==</operator> <name>AU_CAT_ADPCM</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"unsupported codec/type (Please report it)"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_rate</name></name> <operator>==</operator> <literal type="number">0</literal></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"invalid samplerate: 0"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_id</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>es</name></name> <operator>=</operator> <call><name>es_out_Add</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>out</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><call><name>unlikely</name><argument_list>(<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>es</name></name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>


<decl_stmt><decl><type><name>unsigned</name></type> <name>i_samples</name> <init>= <expr><call><name>__MAX</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_rate</name></name> <operator>/</operator> <literal type="number">20</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frame_size</name></name> <operator>=</operator> <name>i_samples</name> <operator>*</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_channels</name></name> <operator>*</operator>
<operator>(</operator> <operator>(</operator><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_bitspersample</name></name> <operator>+</operator> <literal type="number">7</literal><operator>)</operator> <operator>/</operator> <literal type="number">8</literal> <operator>)</operator></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_blockalign</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition>
<block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name></type> <name>mod</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frame_size</name></name> <operator>%</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_blockalign</name></name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>( <expr><name>mod</name> <operator>!=</operator> <literal type="number">0</literal></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frame_size</name></name> <operator>+=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_blockalign</name></name> <operator>-</operator> <name>mod</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frame_length</name></name> <operator>=</operator> <call><name>vlc_tick_from_samples</name><argument_list>( <argument><expr><name>i_samples</name></expr></argument>,
<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_rate</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name> <operator>=</operator> <name>p_sys</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_demux</name><operator>-&gt;</operator><name>pf_demux</name></name> <operator>=</operator> <name>Demux</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_demux</name><operator>-&gt;</operator><name>pf_control</name></name> <operator>=</operator> <name>Control</name></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>






<function><type><specifier>static</specifier> <name>int</name></type> <name>Demux</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_block</name></decl>;</decl_stmt>


<expr_stmt><expr><call><name>es_out_SetPCR</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>out</name></name></expr></argument>, <argument><expr><name>VLC_TICK_0</name> <operator>+</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_time</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>p_block</name> <operator>=</operator> <call><name>vlc_stream_Block</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_frame_size</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name>p_block</name> <operator>==</operator> <name>NULL</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"cannot read data"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_DEMUXER_EOF</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>=</operator>
<name><name>p_block</name><operator>-&gt;</operator><name>i_pts</name></name> <operator>=</operator> <name>VLC_TICK_0</name> <operator>+</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_time</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>es_out_Send</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>out</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>es</name></name></expr></argument>, <argument><expr><name>p_block</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_time</name></name> <operator>+=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_frame_length</name></name></expr>;</expr_stmt>

<return>return <expr><name>VLC_DEMUXER_SUCCESS</name></expr>;</return>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <name>int</name></type> <name>Control</name><parameter_list>( <parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_query</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>args</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<return>return <expr><call><name>demux_vaControlHelper</name><argument_list>( <argument><expr><name><name>p_demux</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_header_size</name></name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_bitrate</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_blockalign</name></name></expr></argument>,
<argument><expr><name>i_query</name></expr></argument>, <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>

</unit>
