<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\demux\mp4\minibox.h">



















<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_buffer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i_buffer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_payload</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i_payload</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_fourcc_t</name></type> <name>i_type</name></decl>;</decl_stmt>
}</block></struct></type> <name>mp4_box_iterator_t</name>;</typedef>

<function><type><specifier>static</specifier> <name>void</name></type> <name>mp4_box_iterator_Init</name><parameter_list>( <parameter><decl><type><name>mp4_box_iterator_t</name> <modifier>*</modifier></type><name>p_it</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>i_data</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>p_it</name><operator>-&gt;</operator><name>p_buffer</name></name> <operator>=</operator> <name>p_data</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_it</name><operator>-&gt;</operator><name>i_buffer</name></name> <operator>=</operator> <name>i_data</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>mp4_box_iterator_Next</name><parameter_list>( <parameter><decl><type><name>mp4_box_iterator_t</name> <modifier>*</modifier></type><name>p_it</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<while>while<condition>( <expr><name><name>p_it</name><operator>-&gt;</operator><name>i_buffer</name></name> <operator>&gt;</operator> <literal type="number">8</literal></expr> )</condition>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p</name> <init>= <expr><name><name>p_it</name><operator>-&gt;</operator><name>p_buffer</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>size_t</name></type> <name>i_size</name> <init>= <expr><call><name>GetDWBE</name><argument_list>( <argument><expr><name>p</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>p_it</name><operator>-&gt;</operator><name>i_type</name></name> <operator>=</operator> <call><name>VLC_FOURCC</name><argument_list>(<argument><expr><name><name>p</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>p</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>p</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>p</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name>i_size</name> <operator>&gt;=</operator> <literal type="number">8</literal> <operator>&amp;&amp;</operator> <name>i_size</name> <operator>&lt;=</operator> <name><name>p_it</name><operator>-&gt;</operator><name>i_buffer</name></name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>p_it</name><operator>-&gt;</operator><name>p_payload</name></name> <operator>=</operator> <operator>&amp;</operator><name><name>p_it</name><operator>-&gt;</operator><name>p_buffer</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_it</name><operator>-&gt;</operator><name>i_payload</name></name> <operator>=</operator> <name>i_size</name> <operator>-</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_it</name><operator>-&gt;</operator><name>p_buffer</name></name> <operator>+=</operator> <name>i_size</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_it</name><operator>-&gt;</operator><name>i_buffer</name></name> <operator>-=</operator> <name>i_size</name></expr>;</expr_stmt>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></if>
<else>else<block type="pseudo"><block_content> <break>break;</break></block_content></block></else></if_stmt>
</block_content>}</block></while>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></function>
</unit>
