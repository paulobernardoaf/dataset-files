<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\demux\mp4\mpeg4.h">


















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>MP4_MPEG4_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MP4_MPEG4_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_codec.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../packetizer/dts_header.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type> <name>MPEG4_Codec_By_ObjectType</name><parameter_list>(<parameter><decl><type><name>uint8_t</name></type> <name>oti</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_dsi</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>i_dsi</name></decl></parameter>,
<parameter><decl><type><name>vlc_fourcc_t</name> <modifier>*</modifier></type><name>pi_codec</name></decl></parameter>,
<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>pi_profile</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<switch>switch<condition>(<expr><name>oti</name></expr>)</condition>
<block>{<block_content>
<case>case <expr><literal type="number">0x20</literal></expr>:</case> 
<expr_stmt><expr><operator>*</operator><name>pi_codec</name> <operator>=</operator> <name>VLC_CODEC_MP4V</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="number">0x21</literal></expr>:</case> 
<expr_stmt><expr><operator>*</operator><name>pi_codec</name> <operator>=</operator> <name>VLC_CODEC_H264</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="number">0x40</literal></expr>:</case>
<case>case <expr><literal type="number">0x41</literal></expr>:</case>
<expr_stmt><expr><operator>*</operator><name>pi_codec</name> <operator>=</operator> <name>VLC_CODEC_MP4A</name></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>i_dsi</name> <operator>&gt;=</operator> <literal type="number">2</literal> <operator>&amp;&amp;</operator> <name><name>p_dsi</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="number">0xF8</literal> <operator>&amp;&amp;</operator> <operator>(</operator><name><name>p_dsi</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>&amp;</operator><literal type="number">0xE0</literal><operator>)</operator><operator>==</operator> <literal type="number">0x80</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><operator>*</operator><name>pi_codec</name> <operator>=</operator> <name>VLC_CODEC_ALS</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<break>break;</break>
<case>case <expr><literal type="number">0x60</literal></expr>:</case>
<case>case <expr><literal type="number">0x61</literal></expr>:</case>
<case>case <expr><literal type="number">0x62</literal></expr>:</case>
<case>case <expr><literal type="number">0x63</literal></expr>:</case>
<case>case <expr><literal type="number">0x64</literal></expr>:</case>
<case>case <expr><literal type="number">0x65</literal></expr>:</case> 
<expr_stmt><expr><operator>*</operator><name>pi_codec</name> <operator>=</operator> <name>VLC_CODEC_MPGV</name></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><literal type="number">0x66</literal></expr>:</case> 
<case>case <expr><literal type="number">0x67</literal></expr>:</case> 
<case>case <expr><literal type="number">0x68</literal></expr>:</case> 
<expr_stmt><expr><operator>*</operator><name>pi_codec</name> <operator>=</operator> <name>VLC_CODEC_MP4A</name></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><literal type="number">0x69</literal></expr>:</case>
<expr_stmt><expr><operator>*</operator><name>pi_codec</name> <operator>=</operator> <name>VLC_CODEC_MPGA</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="number">0x6a</literal></expr>:</case> 
<expr_stmt><expr><operator>*</operator><name>pi_codec</name> <operator>=</operator> <name>VLC_CODEC_MPGV</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="number">0x6b</literal></expr>:</case> 
<expr_stmt><expr><operator>*</operator><name>pi_codec</name> <operator>=</operator> <name>VLC_CODEC_MPGA</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="number">0x6c</literal></expr>:</case> 
<expr_stmt><expr><operator>*</operator><name>pi_codec</name> <operator>=</operator> <name>VLC_CODEC_JPEG</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="number">0x6d</literal></expr>:</case> 
<expr_stmt><expr><operator>*</operator><name>pi_codec</name> <operator>=</operator> <name>VLC_CODEC_PNG</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="number">0x6e</literal></expr>:</case> 
<expr_stmt><expr><operator>*</operator><name>pi_codec</name> <operator>=</operator> <call><name>VLC_FOURCC</name><argument_list>(<argument><expr><literal type="char">'M'</literal></expr></argument>,<argument><expr><literal type="char">'J'</literal></expr></argument>,<argument><expr><literal type="char">'2'</literal></expr></argument>,<argument><expr><literal type="char">'C'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="number">0xa3</literal></expr>:</case> 
<expr_stmt><expr><operator>*</operator><name>pi_codec</name> <operator>=</operator> <name>VLC_CODEC_VC1</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="number">0xa4</literal></expr>:</case>
<expr_stmt><expr><operator>*</operator><name>pi_codec</name> <operator>=</operator> <name>VLC_CODEC_DIRAC</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="number">0xa5</literal></expr>:</case>
<expr_stmt><expr><operator>*</operator><name>pi_codec</name> <operator>=</operator> <name>VLC_CODEC_A52</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="number">0xa6</literal></expr>:</case>
<expr_stmt><expr><operator>*</operator><name>pi_codec</name> <operator>=</operator> <name>VLC_CODEC_EAC3</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="number">0xa9</literal></expr>:</case> 
<expr_stmt><expr><operator>*</operator><name>pi_codec</name> <operator>=</operator> <name>VLC_CODEC_DTS</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="number">0xaa</literal></expr>:</case> 
<case>case <expr><literal type="number">0xab</literal></expr>:</case> 
<expr_stmt><expr><operator>*</operator><name>pi_profile</name> <operator>=</operator> <name>PROFILE_DTS_HD</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>pi_codec</name> <operator>=</operator> <name>VLC_CODEC_DTS</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="number">0xac</literal></expr>:</case> 
<expr_stmt><expr><operator>*</operator><name>pi_profile</name> <operator>=</operator> <name>PROFILE_DTS_EXPRESS</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>pi_codec</name> <operator>=</operator> <name>VLC_CODEC_DTS</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="number">0xDD</literal></expr>:</case>
<expr_stmt><expr><operator>*</operator><name>pi_codec</name> <operator>=</operator> <name>VLC_CODEC_VORBIS</name></expr>;</expr_stmt>
<break>break;</break>
<default>default:</default>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></switch>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
