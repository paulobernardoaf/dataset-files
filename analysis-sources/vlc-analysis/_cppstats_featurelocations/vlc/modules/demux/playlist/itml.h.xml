<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\demux\playlist\itml.h">


























<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>UNKNOWN_CONTENT</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SIMPLE_CONTENT</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMPLEX_CONTENT</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SIMPLE_INTERFACE</name></cpp:macro> <cpp:value>(track_elem_t *p_track,const char *psz_name,char *psz_value)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMPLEX_INTERFACE</name></cpp:macro> <cpp:value>(stream_t *p_demux,input_item_node_t *p_input_node,track_elem_t *p_track,xml_reader_t *p_xml_reader,const char *psz_element,struct xml_elem_hnd *p_handlers)</cpp:value></cpp:define>







<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>, <modifier>*</modifier><name>artist</name>, <modifier>*</modifier><name>album</name>, <modifier>*</modifier><name>genre</name>, <modifier>*</modifier><name>trackNum</name>, <modifier>*</modifier><name>location</name>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>duration</name></decl>;</decl_stmt>
}</block></struct></type> <name>track_elem_t</name>;</typedef>

<struct>struct <name>xml_elem_hnd</name>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>type</name></decl>;</decl_stmt>
<union>union
<block>{
<macro><name>bool</name> <argument_list>(<argument>*smpl</argument>)</argument_list></macro> <expr_stmt><expr><name>SIMPLE_INTERFACE</name></expr>;</expr_stmt>
<macro><name>bool</name> <argument_list>(<argument>*cmplx</argument>)</argument_list></macro> <expr_stmt><expr><name>COMPLEX_INTERFACE</name></expr>;</expr_stmt>
}</block> <decl><name>pf_handler</name></decl>;</union>
}</block>;</struct>
<typedef>typedef <type><name><name>struct</name> <name>xml_elem_hnd</name></name></type> <name>xml_elem_hnd_t</name>;</typedef>


<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name> <name>parse_plist_node</name></type> <name>COMPLEX_INTERFACE</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name> <name>skip_element</name></type> <name>COMPLEX_INTERFACE</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name> <name>parse_dict</name></type> <name>COMPLEX_INTERFACE</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name> <name>parse_plist_dict</name></type> <name>COMPLEX_INTERFACE</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name> <name>parse_tracks_dict</name></type> <name>COMPLEX_INTERFACE</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name> <name>parse_track_dict</name></type> <name>COMPLEX_INTERFACE</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name> <name>save_data</name></type> <name>SIMPLE_INTERFACE</name></decl>;</decl_stmt>
<function_decl><type><specifier>static</specifier> <name>bool</name></type> <name>add_meta</name><parameter_list>( <parameter><decl><type><name>input_item_t</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>track_elem_t</name><modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>track_elem_t</name> <modifier>*</modifier></type><name>new_track</name><parameter_list>( <parameter><decl><type><name>void</name></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>free_track</name><parameter_list>( <parameter><decl><type><name>track_elem_t</name><modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

</unit>
