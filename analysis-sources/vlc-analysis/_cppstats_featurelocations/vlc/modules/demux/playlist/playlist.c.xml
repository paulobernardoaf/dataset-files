<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\demux\playlist\playlist.c">
























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_demux.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_url.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>( <argument><expr><name>_WIN32</name></expr></argument> )</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>( <argument><expr><name>__OS2__</name></expr></argument> )</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ctype.h&gt;</cpp:file></cpp:include> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"playlist.h"</cpp:file></cpp:include>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHOW_ADULT_TEXT</name></cpp:macro> <cpp:value>N_( "Show shoutcast adult content" )</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHOW_ADULT_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Show NC17 rated video streams when " "using shoutcast video playlists." )</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SKIP_ADS_TEXT</name></cpp:macro> <cpp:value>N_( "Skip ads" )</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SKIP_ADS_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Use playlist options usually used to prevent " "ads skipping to detect ads and prevent adding them to the playlist." )</cpp:value></cpp:define>


<macro><name>vlc_module_begin</name> <argument_list>()</argument_list></macro>
<macro><name>add_shortcut</name><argument_list>( <argument><literal type="string">"playlist"</literal></argument> )</argument_list></macro>
<macro><name>set_category</name><argument_list>( <argument>CAT_INPUT</argument> )</argument_list></macro>
<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_INPUT_DEMUX</argument> )</argument_list></macro>

<macro><name>add_obsolete_integer</name><argument_list>( <argument><literal type="string">"parent-item"</literal></argument> )</argument_list></macro> 

<macro><name>add_bool</name><argument_list>( <argument><literal type="string">"playlist-skip-ads"</literal></argument>, <argument>true</argument>,
<argument>SKIP_ADS_TEXT</argument>, <argument>SKIP_ADS_LONGTEXT</argument>, <argument>false</argument> )</argument_list></macro>

<macro><name>set_shortname</name><argument_list>( <argument>N_(<literal type="string">"Playlist"</literal>)</argument> )</argument_list></macro>
<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"Playlist"</literal>)</argument> )</argument_list></macro>
<macro><name>add_submodule</name> <argument_list>()</argument_list></macro>
<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"M3U playlist import"</literal>)</argument> )</argument_list></macro>
<macro><name>add_shortcut</name><argument_list>( <argument><literal type="string">"m3u"</literal></argument>, <argument><literal type="string">"m3u8"</literal></argument> )</argument_list></macro>
<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"stream_filter"</literal></argument>, <argument><literal type="number">310</literal></argument> )</argument_list></macro>
<macro><name>set_callback</name><argument_list>( <argument>Import_M3U</argument> )</argument_list></macro>
<macro><name>add_submodule</name> <argument_list>()</argument_list></macro>
<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"RAM playlist import"</literal>)</argument> )</argument_list></macro>
<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"stream_filter"</literal></argument>, <argument><literal type="number">310</literal></argument> )</argument_list></macro>
<macro><name>set_callback</name><argument_list>( <argument>Import_RAM</argument> )</argument_list></macro>
<macro><name>add_submodule</name> <argument_list>()</argument_list></macro>
<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"PLS playlist import"</literal>)</argument> )</argument_list></macro>
<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"stream_filter"</literal></argument>, <argument><literal type="number">310</literal></argument> )</argument_list></macro>
<macro><name>set_callback</name><argument_list>( <argument>Import_PLS</argument> )</argument_list></macro>
<macro><name>add_submodule</name> <argument_list>()</argument_list></macro>
<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"B4S playlist import"</literal>)</argument> )</argument_list></macro>
<macro><name>add_shortcut</name><argument_list>( <argument><literal type="string">"shout-b4s"</literal></argument> )</argument_list></macro>
<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"stream_filter"</literal></argument>, <argument><literal type="number">310</literal></argument> )</argument_list></macro>
<macro><name>set_callback</name><argument_list>( <argument>Import_B4S</argument> )</argument_list></macro>
<macro><name>add_submodule</name> <argument_list>()</argument_list></macro>
<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"DVB playlist import"</literal>)</argument> )</argument_list></macro>
<macro><name>add_shortcut</name><argument_list>( <argument><literal type="string">"dvb"</literal></argument> )</argument_list></macro>
<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"stream_filter"</literal></argument>, <argument><literal type="number">310</literal></argument> )</argument_list></macro>
<macro><name>set_callback</name><argument_list>( <argument>Import_DVB</argument> )</argument_list></macro>
<macro><name>add_submodule</name> <argument_list>()</argument_list></macro>
<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"Podcast parser"</literal>)</argument> )</argument_list></macro>
<macro><name>add_shortcut</name><argument_list>( <argument><literal type="string">"podcast"</literal></argument> )</argument_list></macro>
<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"stream_filter"</literal></argument>, <argument><literal type="number">310</literal></argument> )</argument_list></macro>
<macro><name>set_callback</name><argument_list>( <argument>Import_podcast</argument> )</argument_list></macro>
<macro><name>add_submodule</name> <argument_list>()</argument_list></macro>
<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"XSPF playlist import"</literal>)</argument> )</argument_list></macro>
<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"stream_filter"</literal></argument>, <argument><literal type="number">310</literal></argument> )</argument_list></macro>
<macro><name>set_callbacks</name><argument_list>( <argument>Import_xspf</argument>, <argument>Close_xspf</argument> )</argument_list></macro>
<macro><name>add_submodule</name> <argument_list>()</argument_list></macro>
<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"ASX playlist import"</literal>)</argument> )</argument_list></macro>
<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"stream_filter"</literal></argument>, <argument><literal type="number">310</literal></argument> )</argument_list></macro>
<macro><name>set_callback</name><argument_list>( <argument>Import_ASX</argument> )</argument_list></macro>
<macro><name>add_submodule</name> <argument_list>()</argument_list></macro>
<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"Kasenna MediaBase parser"</literal>)</argument> )</argument_list></macro>
<macro><name>add_shortcut</name><argument_list>( <argument><literal type="string">"sgimb"</literal></argument> )</argument_list></macro>
<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"stream_filter"</literal></argument>, <argument><literal type="number">310</literal></argument> )</argument_list></macro>
<macro><name>set_callbacks</name><argument_list>( <argument>Import_SGIMB</argument>, <argument>Close_SGIMB</argument> )</argument_list></macro>
<macro><name>add_submodule</name> <argument_list>()</argument_list></macro>
<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"QuickTime Media Link importer"</literal>)</argument> )</argument_list></macro>
<macro><name>add_shortcut</name><argument_list>( <argument><literal type="string">"qtl"</literal></argument> )</argument_list></macro>
<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"stream_filter"</literal></argument>, <argument><literal type="number">310</literal></argument> )</argument_list></macro>
<macro><name>set_callback</name><argument_list>( <argument>Import_QTL</argument> )</argument_list></macro>
<macro><name>add_submodule</name> <argument_list>()</argument_list></macro>
<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"Dummy IFO demux"</literal>)</argument> )</argument_list></macro>
<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"stream_filter"</literal></argument>, <argument><literal type="number">312</literal></argument> )</argument_list></macro>
<macro><name>set_callback</name><argument_list>( <argument>Import_IFO</argument> )</argument_list></macro>
<macro><name>add_submodule</name> <argument_list>()</argument_list></macro>
<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"Dummy BDMV demux"</literal>)</argument> )</argument_list></macro>
<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"stream_filter"</literal></argument>, <argument><literal type="number">312</literal></argument> )</argument_list></macro>
<macro><name>set_callback</name><argument_list>( <argument>Import_BDMV</argument> )</argument_list></macro>
<macro><name>add_submodule</name> <argument_list>()</argument_list></macro>
<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"iTunes Music Library importer"</literal>)</argument> )</argument_list></macro>
<macro><name>add_shortcut</name><argument_list>( <argument><literal type="string">"itml"</literal></argument> )</argument_list></macro>
<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"stream_filter"</literal></argument>, <argument><literal type="number">310</literal></argument> )</argument_list></macro>
<macro><name>set_callback</name><argument_list>( <argument>Import_iTML</argument> )</argument_list></macro>
<macro><name>add_submodule</name><argument_list>()</argument_list></macro>
<macro><name>set_description</name><argument_list>(<argument>N_(<literal type="string">"Windows Media Server metafile import"</literal>)</argument> )</argument_list></macro>
<macro><name>set_capability</name><argument_list>(<argument><literal type="string">"stream_filter"</literal></argument>, <argument><literal type="number">310</literal></argument>)</argument_list></macro>
<macro><name>set_callback</name><argument_list>(<argument>Import_WMS</argument>)</argument_list></macro>
<macro><name>add_submodule</name> <argument_list>()</argument_list></macro>
<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"WPL playlist import"</literal>)</argument> )</argument_list></macro>
<macro><name>add_shortcut</name><argument_list>( <argument><literal type="string">"wpl"</literal></argument> )</argument_list></macro>
<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"stream_filter"</literal></argument>, <argument><literal type="number">310</literal></argument> )</argument_list></macro>
<macro><name>set_callbacks</name><argument_list>( <argument>Import_WPL</argument>, <argument>Close_WPL</argument> )</argument_list></macro>
<macro><name>vlc_module_end</name> <argument_list>()</argument_list></macro>







<function><type><name>char</name> <modifier>*</modifier></type><name>ProcessMRL</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>base</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>char</name> <specifier>const</specifier><modifier>*</modifier></type> <name>orig</name> <init>= <expr><name>str</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>str</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>(</operator><name>DIR_SEP_CHAR</name> <operator>==</operator> <literal type="char">'\\'</literal><operator>)</operator></expr></cpp:if>

<if_stmt><if>if <condition>(<expr><call><name>strncmp</name><argument_list>(<argument><expr><name>str</name></expr></argument>, <argument><expr><literal type="string">"\\\\"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal>

<operator>||</operator> <operator>(</operator><call><name>isalpha</name><argument_list>(<argument><expr><operator>(</operator><name>unsigned</name> <name>char</name><operator>)</operator><name><name>str</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name><name>str</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>==</operator> <literal type="char">':'</literal><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><call><name>vlc_path2uri</name><argument_list>(<argument><expr><name>str</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>



















<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>rel</name> <init>= <expr><call><name>vlc_uri_fixup</name><argument_list>(<argument><expr><name>str</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>rel</name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>str</name> <operator>=</operator> <name>rel</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>abs</name> <init>= <expr><call><name>vlc_uri_resolve</name><argument_list>(<argument><expr><name>base</name></expr></argument>, <argument><expr><name>str</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>rel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>abs</name> <operator>==</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>





<decl_stmt><decl><type><name>char</name> <specifier>const</specifier><modifier>*</modifier></type> <name>scheme_end</name> <init>= <expr><call><name>strstr</name><argument_list>( <argument><expr><name>orig</name></expr></argument>, <argument><expr><literal type="string">"://"</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <specifier>const</specifier><modifier>*</modifier></type> <name>valid_chars</name> <init>= <expr><literal type="string">"abcdefghijklmnopqrstuvwxyz"</literal>
<literal type="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZ"</literal>
<literal type="string">"0123456789"</literal> <literal type="string">"+-./"</literal></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>scheme_end</name> <operator>&amp;&amp;</operator>
<call><name>strspn</name> <argument_list>(<argument><expr><name>orig</name></expr></argument>, <argument><expr><name>valid_chars</name></expr></argument>)</argument_list></call> <operator>==</operator> <operator>(</operator><name>size_t</name><operator>)</operator><operator>(</operator><name>scheme_end</name> <operator>-</operator> <name>orig</name><operator>)</operator></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>abs</name> <operator>=</operator> <call><name>strdup</name> <argument_list>(<argument><expr><name>orig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>abs</name></expr>;</return>
</block_content>}</block></function>
</unit>
