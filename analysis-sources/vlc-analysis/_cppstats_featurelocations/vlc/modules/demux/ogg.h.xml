<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\demux\ogg.h">




























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>OGG_DEMUX_DEBUG</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DemuxDebug</name><parameter_list>(<parameter><type><name>code</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>code</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DemuxDebug</name><parameter_list>(<parameter><type><name>code</name></type></parameter>)</parameter_list></cpp:macro></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACKET_TYPE_HEADER</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACKET_TYPE_BITS</name></cpp:macro> <cpp:value>0x07</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACKET_LEN_BITS01</name></cpp:macro> <cpp:value>0xc0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACKET_LEN_BITS2</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PACKET_IS_SYNCPOINT</name></cpp:macro> <cpp:value>0x08</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OGGDS_RESOLUTION</name></cpp:macro> <cpp:value>10000000</cpp:value></cpp:define>

<typedef>typedef <type><name><name>struct</name> <name>oggseek_index_entry</name></name></type> <name>demux_index_entry_t</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>ogg_skeleton_t</name></name></type> <name>ogg_skeleton_t</name>;</typedef>

<typedef>typedef <type><struct>struct <name>backup_queue</name>
<block>{
<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_block</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_duration</name></decl>;</decl_stmt>
}</block></struct></type> <name>backup_queue_t</name>;</typedef>

<typedef>typedef <type><struct>struct <name>logical_stream_s</name>
<block>{
<decl_stmt><decl><type><name>ogg_stream_state</name></type> <name>os</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>es_format_t</name></type> <name>fmt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>es_format_t</name></type> <name>fmt_old</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>es_out_id_t</name> <modifier>*</modifier></type><name>p_es</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>date_t</name></type> <name>dts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_contiguous</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>bool</name></type> <name>b_interpolation_failed</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>i_serial_no</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>bool</name></type> <name>b_force_backup</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_packets_backup</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name>i_extra_headers_packets</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>p_headers</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_headers</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ogg_int64_t</name></type> <name>i_granulepos_offset</name></decl>;</decl_stmt>



<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_pcr</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>bool</name></type> <name>b_initializing</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_finished</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_reinit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_oggds</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_granule_shift</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_next_block_flags</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>i_pre_skip</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int8_t</name></type> <name>i_first_frame_index</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>demux_index_entry_t</name> <modifier>*</modifier></type><name>idx</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>ogg_skeleton_t</name> <modifier>*</modifier></type><name>p_skel</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_skip_frames</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int64_t</name></type> <name>i_data_start</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>i_secondary_header_packets</name></decl>;</decl_stmt>


<struct>struct
<block>{
<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_blocks</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_append</name></decl>;</decl_stmt>
}</block> <decl><name>queue</name></decl>;</struct>

<union>union
<block>{
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_LIBVORBIS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<struct>struct
<block>{
<decl_stmt><decl><type><name>vorbis_info</name> <modifier>*</modifier></type><name>p_info</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vorbis_comment</name> <modifier>*</modifier></type><name>p_comment</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_headers_flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_prev_blocksize</name></decl>;</decl_stmt>
}</block> <decl><name>vorbis</name></decl>;</struct>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<struct>struct
<block>{

<decl_stmt><decl><type><name>int</name></type> <name>i_num_headers</name></decl>;</decl_stmt>
}</block> <decl><name>kate</name></decl>;</struct>
<struct>struct
<block>{
<decl_stmt><decl><type><name>bool</name></type> <name>b_interlaced</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_old</name></decl>;</decl_stmt>
}</block> <decl><name>dirac</name></decl>;</struct>
<struct>struct
<block>{
<decl_stmt><decl><type><name>int32_t</name></type> <name>i_framesize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name>i_framesperpacket</name></decl>;</decl_stmt>
}</block> <decl><name>speex</name></decl>;</struct>
<struct>struct
<block>{
<decl_stmt><decl><type><name>bool</name></type> <name>b_old</name></decl>;</decl_stmt>
}</block> <decl><name>flac</name></decl>;</struct>
}</block> <decl><name>special</name></decl>;</union>

}</block></struct></type> <name>logical_stream_t</name>;</typedef>

<struct>struct <name>ogg_skeleton_t</name>
<block>{
<decl_stmt><decl><type><name>int</name></type> <name>i_messages</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>ppsz_messages</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>p_index</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>i_index</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>i_index_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>i_indexstampden</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>i_indexfirstnum</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>i_indexlastnum</name></decl>;</decl_stmt>
}</block>;</struct>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>ogg_sync_state</name></type> <name>oy</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>i_streams</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>logical_stream_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_stream</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>logical_stream_t</name> <modifier>*</modifier></type><name>p_skelstream</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>logical_stream_t</name> <modifier>*</modifier></type><name>p_old_stream</name></decl>;</decl_stmt> 



<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_pcr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_nzpcr_offset</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>bool</name></type> <name>b_chained_boundary</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>i_bitrate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_partial_bitrate</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>bool</name></type> <name>b_page_waiting</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int64_t</name></type> <name>i_total_frames</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int64_t</name></type> <name>i_total_length</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int64_t</name></type> <name>i_input_position</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>ogg_page</name></type> <name>current_page</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>vlc_meta_t</name> <modifier>*</modifier></type><name>p_meta</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>cur_seekpoint</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_seekpoints</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>seekpoint_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_seekpoints</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>updates</name></decl>;</decl_stmt>


<struct>struct
<block>{
<decl_stmt><decl><type><name>uint16_t</name></type> <name>major</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>minor</name></decl>;</decl_stmt>
}</block> <decl><name>skeleton</name></decl>;</struct>


<decl_stmt><decl><type><name>int</name></type> <name>i_attachments</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>input_attachment_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>attachments</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>bool</name></type> <name>b_preparsing_done</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_es_created</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int64_t</name></type> <name>i_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_slave</name></decl>;</decl_stmt>

}</block></struct></type> <name>demux_sys_t</name>;</typedef>


<function_decl><type><name>unsigned</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>Read7BitsVariableLE</name><parameter_list>( <parameter><decl><type><name>unsigned</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>Ogg_GetBoundsUsingSkeletonIndex</name><parameter_list>( <parameter><decl><type><name>logical_stream_t</name> <modifier>*</modifier></type><name>p_stream</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>i_time</name></decl></parameter>,
<parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>pi_lower</name></decl></parameter>, <parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>pi_upper</name></decl></parameter> )</parameter_list>;</function_decl>
</unit>
