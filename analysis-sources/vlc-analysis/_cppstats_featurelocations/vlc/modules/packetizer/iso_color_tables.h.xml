<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\packetizer\iso_color_tables.h">


















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>VLC_ISO_23001_8_COLOR_TABLES_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_ISO_23001_8_COLOR_TABLES_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_es.h&gt;</cpp:file></cpp:include>




<enum>enum <name>iso_23001_8_cp</name>
<block>{
<decl><name>ISO_23001_8_CP_BT_709</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>ISO_23001_8_CP_UNSPECIFIED</name></decl>,
<decl><name>ISO_23001_8_CP_RESERVED0</name></decl>,
<decl><name>ISO_23001_8_CP_BT_470_M</name></decl>,
<decl><name>ISO_23001_8_CP_BT_470_B_G</name></decl>,
<decl><name>ISO_23001_8_CP_BT_601</name></decl>,
<decl><name>ISO_23001_8_CP_SMPTE_240</name></decl>,
<decl><name>ISO_23001_8_CP_GENERIC_FILM</name></decl>,
<decl><name>ISO_23001_8_CP_BT_2020</name></decl>, 
<decl><name>ISO_23001_8_CP_XYZ</name></decl>, 
<decl><name>ISO_23001_8_CP_SMPTE_431</name></decl>,
<decl><name>ISO_23001_8_CP_SMPTE_432</name></decl>,

<decl><name>ISO_23001_8_CP_EBU_3213</name> <init>= <expr><literal type="number">22</literal></expr></init></decl>,
}</block>;</enum>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>video_color_primaries_t</name></type> <name><name>iso_23001_8_cp_to_vlc_primaries_table</name><index>[]</index></name> <init>=
<expr><block>{
<expr><index>[<expr><literal type="number">0</literal></expr>]</index> <operator>=</operator> <name>COLOR_PRIMARIES_UNDEF</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_CP_BT_709</name></expr>]</index> <operator>=</operator> <name>COLOR_PRIMARIES_BT709</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_CP_UNSPECIFIED</name></expr>]</index> <operator>=</operator> <name>COLOR_PRIMARIES_UNDEF</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_CP_RESERVED0</name></expr>]</index> <operator>=</operator> <name>COLOR_PRIMARIES_UNDEF</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_CP_BT_470_M</name></expr>]</index> <operator>=</operator> <name>COLOR_PRIMARIES_BT470_M</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_CP_BT_470_B_G</name></expr>]</index> <operator>=</operator> <name>COLOR_PRIMARIES_BT470_BG</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_CP_BT_601</name></expr>]</index> <operator>=</operator> <name>COLOR_PRIMARIES_SMTPE_170</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_CP_SMPTE_240</name></expr>]</index> <operator>=</operator> <name>COLOR_PRIMARIES_SMTPE_240</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_CP_GENERIC_FILM</name></expr>]</index> <operator>=</operator> <name>COLOR_PRIMARIES_UNDEF</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_CP_BT_2020</name></expr>]</index> <operator>=</operator> <name>COLOR_PRIMARIES_BT2020</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_CP_XYZ</name></expr>]</index> <operator>=</operator> <name>COLOR_PRIMARIES_UNDEF</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_CP_SMPTE_431</name></expr>]</index> <operator>=</operator> <name>COLOR_PRIMARIES_UNDEF</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_CP_SMPTE_432</name></expr>]</index> <operator>=</operator> <name>COLOR_PRIMARIES_UNDEF</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>video_color_primaries_t</name></type> <name>iso_23001_8_cp_to_vlc_primaries</name><parameter_list>( <parameter><decl><type><name>uint8_t</name></type> <name>v</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><name>v</name> <operator>==</operator> <name>ISO_23001_8_CP_EBU_3213</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>COLOR_PRIMARIES_EBU_3213</name></expr>;</return></block_content></block></if></if_stmt>
<return>return <expr><ternary><condition><expr><name>v</name> <operator>&lt;</operator> <call><name>ARRAY_SIZE</name><argument_list>(<argument><expr><name>iso_23001_8_cp_to_vlc_primaries_table</name></expr></argument>)</argument_list></call></expr>
?</condition><then> <expr><name><name>iso_23001_8_cp_to_vlc_primaries_table</name><index>[<expr><name>v</name></expr>]</index></name></expr>
</then><else>: <expr><name>COLOR_PRIMARIES_UNDEF</name></expr></else></ternary></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name><name>enum</name> <name>iso_23001_8_cp</name></name></type> <name>vlc_primaries_to_iso_23001_8_cp</name><parameter_list>( <parameter><decl><type><name>video_color_primaries_t</name></type> <name>v</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<for>for<control>(<init><decl><type><name>size_t</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><call><name>ARRAY_SIZE</name><argument_list>(<argument><expr><name>iso_23001_8_cp_to_vlc_primaries_table</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<if_stmt><if>if<condition>(<expr><name><name>iso_23001_8_cp_to_vlc_primaries_table</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <name>v</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>(</operator>enum <name>iso_23001_8_cp</name><operator>)</operator> <name>i</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>
<if_stmt><if>if<condition>( <expr><name>v</name> <operator>==</operator> <name>COLOR_PRIMARIES_EBU_3213</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>ISO_23001_8_CP_EBU_3213</name></expr>;</return></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<return>return <expr><name>ISO_23001_8_CP_UNSPECIFIED</name></expr>;</return></block_content></block></else></if_stmt>
</block_content>}</block></function>

<enum>enum <name>iso_23001_8_tc</name>
<block>{
<decl><name>ISO_23001_8_TC_RESERVED_0</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>ISO_23001_8_TC_BT_709</name></decl>,
<decl><name>ISO_23001_8_TC_UNSPECIFIED</name></decl>,
<decl><name>ISO_23001_8_TC_RESERVED_3</name></decl>,
<decl><name>ISO_23001_8_TC_BT_470_M</name></decl>,
<decl><name>ISO_23001_8_TC_BT_470_B_G</name></decl>,
<decl><name>ISO_23001_8_TC_BT_601</name></decl>,
<decl><name>ISO_23001_8_TC_SMPTE_240</name></decl>,
<decl><name>ISO_23001_8_TC_LINEAR</name></decl>,
<decl><name>ISO_23001_8_TC_LOG_100</name></decl>,
<decl><name>ISO_23001_8_TC_LOG_100_SQRT10</name></decl>,
<decl><name>ISO_23001_8_TC_IEC_61966</name></decl>,
<decl><name>ISO_23001_8_TC_BT_1361</name></decl>,
<decl><name>ISO_23001_8_TC_SRGB</name></decl>,
<decl><name>ISO_23001_8_TC_BT_2020_10_BIT</name></decl>,
<decl><name>ISO_23001_8_TC_BT_2020_12_BIT</name></decl>,
<decl><name>ISO_23001_8_TC_SMPTE_2084</name></decl>,
<decl><name>ISO_23001_8_TC_SMPTE_428</name></decl>,
<decl><name>ISO_23001_8_TC_HLG</name></decl> 
}</block>;</enum>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>video_transfer_func_t</name></type> <name><name>iso_23001_8_tc_to_vlc_xfer_table</name><index>[]</index></name> <init>=
<expr><block>{
<expr><index>[<expr><name>ISO_23001_8_TC_RESERVED_0</name></expr>]</index> <operator>=</operator> <name>TRANSFER_FUNC_UNDEF</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_TC_BT_709</name></expr>]</index> <operator>=</operator> <name>TRANSFER_FUNC_BT709</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_TC_UNSPECIFIED</name></expr>]</index> <operator>=</operator> <name>TRANSFER_FUNC_UNDEF</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_TC_RESERVED_3</name></expr>]</index> <operator>=</operator> <name>TRANSFER_FUNC_UNDEF</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_TC_BT_470_M</name></expr>]</index> <operator>=</operator> <name>TRANSFER_FUNC_BT470_M</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_TC_BT_470_B_G</name></expr>]</index> <operator>=</operator> <name>TRANSFER_FUNC_BT470_BG</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_TC_BT_601</name></expr>]</index> <operator>=</operator> <name>TRANSFER_FUNC_BT709</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_TC_SMPTE_240</name></expr>]</index> <operator>=</operator> <name>TRANSFER_FUNC_SMPTE_240</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_TC_LINEAR</name></expr>]</index> <operator>=</operator> <name>TRANSFER_FUNC_LINEAR</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_TC_LOG_100</name></expr>]</index> <operator>=</operator> <name>TRANSFER_FUNC_UNDEF</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_TC_LOG_100_SQRT10</name></expr>]</index> <operator>=</operator> <name>TRANSFER_FUNC_UNDEF</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_TC_IEC_61966</name></expr>]</index> <operator>=</operator> <name>TRANSFER_FUNC_UNDEF</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_TC_BT_1361</name></expr>]</index> <operator>=</operator> <name>TRANSFER_FUNC_UNDEF</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_TC_SRGB</name></expr>]</index> <operator>=</operator> <name>TRANSFER_FUNC_SRGB</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_TC_BT_2020_10_BIT</name></expr>]</index> <operator>=</operator> <name>TRANSFER_FUNC_BT2020</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_TC_BT_2020_12_BIT</name></expr>]</index> <operator>=</operator> <name>TRANSFER_FUNC_BT2020</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_TC_SMPTE_2084</name></expr>]</index> <operator>=</operator> <name>TRANSFER_FUNC_SMPTE_ST2084</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_TC_SMPTE_428</name></expr>]</index> <operator>=</operator> <name>TRANSFER_FUNC_UNDEF</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_TC_HLG</name></expr>]</index> <operator>=</operator> <name>TRANSFER_FUNC_HLG</name></expr>,
}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>video_transfer_func_t</name></type> <name>iso_23001_8_tc_to_vlc_xfer</name><parameter_list>( <parameter><decl><type><name>uint8_t</name></type> <name>v</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><ternary><condition><expr><name>v</name> <operator>&lt;</operator> <call><name>ARRAY_SIZE</name><argument_list>(<argument><expr><name>iso_23001_8_tc_to_vlc_xfer_table</name></expr></argument>)</argument_list></call></expr>
?</condition><then> <expr><name><name>iso_23001_8_tc_to_vlc_xfer_table</name><index>[<expr><name>v</name></expr>]</index></name></expr>
</then><else>: <expr><name>TRANSFER_FUNC_UNDEF</name></expr></else></ternary></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name><name>enum</name> <name>iso_23001_8_tc</name></name></type> <name>vlc_xfer_to_iso_23001_8_tc</name><parameter_list>( <parameter><decl><type><name>video_transfer_func_t</name></type> <name>v</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<for>for<control>(<init><decl><type><name>size_t</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><call><name>ARRAY_SIZE</name><argument_list>(<argument><expr><name>iso_23001_8_tc_to_vlc_xfer_table</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<if_stmt><if>if<condition>(<expr><name><name>iso_23001_8_tc_to_vlc_xfer_table</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <name>v</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>(</operator>enum <name>iso_23001_8_tc</name><operator>)</operator> <name>i</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>
<return>return <expr><name>ISO_23001_8_TC_UNSPECIFIED</name></expr>;</return>
</block_content>}</block></function>

<enum>enum <name>iso_23001_8_mc</name>
<block>{
<decl><name>ISO_23001_8_MC_IDENTITY</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>ISO_23001_8_MC_BT_709</name></decl>,
<decl><name>ISO_23001_8_MC_UNSPECIFIED</name></decl>,
<decl><name>ISO_23001_8_MC_RESERVED_3</name></decl>,
<decl><name>ISO_23001_8_MC_FCC</name></decl>,
<decl><name>ISO_23001_8_MC_BT_470_B_G</name></decl>,
<decl><name>ISO_23001_8_MC_BT_601</name></decl>,
<decl><name>ISO_23001_8_MC_SMPTE_240</name></decl>,
<decl><name>ISO_23001_8_MC_SMPTE_YCGCO</name></decl>,
<decl><name>ISO_23001_8_MC_BT_2020_NCL</name></decl>,
<decl><name>ISO_23001_8_MC_BT_2020_CL</name></decl>,
<decl><name>ISO_23001_8_MC_SMPTE_2085</name></decl>,
<decl><name>ISO_23001_8_MC_CHROMAT_NCL</name></decl>,
<decl><name>ISO_23001_8_MC_CHROMAT_CL</name></decl>,
<decl><name>ISO_23001_8_MC_ICTCP</name></decl>,
}</block>;</enum>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>video_color_space_t</name></type> <name><name>iso_23001_8_mc_to_vlc_coeffs_table</name><index>[]</index></name> <init>=
<expr><block>{
<expr><index>[<expr><name>ISO_23001_8_MC_IDENTITY</name></expr>]</index> <operator>=</operator> <name>COLOR_SPACE_UNDEF</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_MC_BT_709</name></expr>]</index> <operator>=</operator> <name>COLOR_SPACE_BT709</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_MC_UNSPECIFIED</name></expr>]</index> <operator>=</operator> <name>COLOR_SPACE_UNDEF</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_MC_RESERVED_3</name></expr>]</index> <operator>=</operator> <name>COLOR_SPACE_UNDEF</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_MC_FCC</name></expr>]</index> <operator>=</operator> <name>COLOR_SPACE_UNDEF</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_MC_BT_470_B_G</name></expr>]</index> <operator>=</operator> <name>COLOR_SPACE_BT601</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_MC_BT_601</name></expr>]</index> <operator>=</operator> <name>COLOR_SPACE_BT601</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_MC_SMPTE_240</name></expr>]</index> <operator>=</operator> <name>COLOR_SPACE_UNDEF</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_MC_SMPTE_YCGCO</name></expr>]</index> <operator>=</operator> <name>COLOR_SPACE_UNDEF</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_MC_BT_2020_NCL</name></expr>]</index> <operator>=</operator> <name>COLOR_SPACE_BT2020</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_MC_BT_2020_CL</name></expr>]</index> <operator>=</operator> <name>COLOR_SPACE_BT2020</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_MC_SMPTE_2085</name></expr>]</index> <operator>=</operator> <name>COLOR_SPACE_UNDEF</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_MC_CHROMAT_NCL</name></expr>]</index> <operator>=</operator> <name>COLOR_SPACE_UNDEF</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_MC_CHROMAT_CL</name></expr>]</index> <operator>=</operator> <name>COLOR_SPACE_UNDEF</name></expr>,
<expr><index>[<expr><name>ISO_23001_8_MC_ICTCP</name></expr>]</index> <operator>=</operator> <name>COLOR_SPACE_UNDEF</name></expr>,
}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>video_color_space_t</name></type> <name>iso_23001_8_mc_to_vlc_coeffs</name><parameter_list>( <parameter><decl><type><name>uint8_t</name></type> <name>v</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><ternary><condition><expr><name>v</name> <operator>&lt;</operator> <call><name>ARRAY_SIZE</name><argument_list>(<argument><expr><name>iso_23001_8_mc_to_vlc_coeffs_table</name></expr></argument>)</argument_list></call></expr>
?</condition><then> <expr><name><name>iso_23001_8_mc_to_vlc_coeffs_table</name><index>[<expr><name>v</name></expr>]</index></name></expr>
</then><else>: <expr><name>COLOR_SPACE_UNDEF</name></expr></else></ternary></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name><name>enum</name> <name>iso_23001_8_mc</name></name></type> <name>vlc_coeffs_to_iso_23001_8_mc</name><parameter_list>( <parameter><decl><type><name>video_color_space_t</name></type> <name>v</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<for>for<control>(<init><decl><type><name>size_t</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><call><name>ARRAY_SIZE</name><argument_list>(<argument><expr><name>iso_23001_8_mc_to_vlc_coeffs_table</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<if_stmt><if>if<condition>(<expr><name><name>iso_23001_8_mc_to_vlc_coeffs_table</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <name>v</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>(</operator>enum <name>iso_23001_8_mc</name><operator>)</operator> <name>i</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>
<return>return <expr><name>ISO_23001_8_MC_UNSPECIFIED</name></expr>;</return>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
