<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\packetizer\dts.c">

























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_codec.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_block_helper.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_modules.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"dts_header.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"packetizer_helper.h"</cpp:file></cpp:include>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Open</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<macro><name>vlc_module_begin</name> <argument_list>()</argument_list></macro>
<macro><name>set_category</name><argument_list>( <argument>CAT_SOUT</argument> )</argument_list></macro>
<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_SOUT_PACKETIZER</argument> )</argument_list></macro>
<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"DTS audio packetizer"</literal>)</argument> )</argument_list></macro>
<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"packetizer"</literal></argument>, <argument><literal type="number">10</literal></argument> )</argument_list></macro>
<macro><name>set_callbacks</name><argument_list>( <argument>Open</argument>, <argument>Close</argument> )</argument_list></macro>
<macro><name>vlc_module_end</name> <argument_list>()</argument_list></macro>

<typedef>typedef <type><struct>struct
<block>{



<decl_stmt><decl><type><name>int</name></type> <name>i_state</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>block_bytestream_t</name></type> <name>bytestream</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i_next_offset</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>date_t</name></type> <name>end_date</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_date_set</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_pts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_discontinuity</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_dts_header_t</name></type> <name>first</name></decl>, <name>second</name>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i_input_size</name></decl>;</decl_stmt>
}</block></struct></type> <name>decoder_sys_t</name>;</typedef>

<enum>enum
<block>{
<decl><name>STATE_SYNC_SUBSTREAM_EXTENSIONS</name> <init>= <expr><name>STATE_CUSTOM_FIRST</name></expr></init></decl>,
<decl><name>STATE_NEXT_SYNC_SUBSTREAM_EXTENSIONS</name></decl>,
}</block>;</enum>

<function><type><specifier>static</specifier> <name>void</name></type> <name>PacketizeFlush</name><parameter_list>( <parameter><decl><type><name>decoder_t</name> <modifier>*</modifier></type><name>p_dec</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>decoder_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_dec</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_discontinuity</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>date_Set</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>end_date</name></name></expr></argument>, <argument><expr><name>VLC_TICK_INVALID</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_state</name></name> <operator>=</operator> <name>STATE_NOSYNC</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>block_BytestreamEmpty</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>bytestream</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>block_t</name> <modifier>*</modifier></type><name>GetOutBuffer</name><parameter_list>( <parameter><decl><type><name>decoder_t</name> <modifier>*</modifier></type><name>p_dec</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>decoder_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_dec</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_sys</name><operator>-&gt;</operator><name>b_date_set</name></name>
<operator>||</operator> <name><name>p_dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_rate</name></name> <operator>!=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>first</name><operator>.</operator><name>i_rate</name></name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_dec</name></expr></argument>, <argument><expr><literal type="string">"DTS samplerate:%d bitrate:%d"</literal></expr></argument>,
<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>first</name><operator>.</operator><name>i_rate</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>first</name><operator>.</operator><name>i_bitrate</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>date_Init</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>end_date</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>first</name><operator>.</operator><name>i_rate</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>date_Set</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>end_date</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_pts</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_date_set</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_rate</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>first</name><operator>.</operator><name>i_rate</name></name></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name><name>p_dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_bytes_per_frame</name></name> <operator>&lt;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>first</name><operator>.</operator><name>i_frame_size</name></name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>p_dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_bytes_per_frame</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>first</name><operator>.</operator><name>i_frame_size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>p_dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_frame_length</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>first</name><operator>.</operator><name>i_frame_length</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_chan_mode</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>first</name><operator>.</operator><name>i_chan_mode</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_physical_channels</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>first</name><operator>.</operator><name>i_physical_channels</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_channels</name></name> <operator>=</operator>
<call><name>vlc_popcount</name><argument_list>( <argument><expr><name><name>p_dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>audio</name><operator>.</operator><name>i_physical_channels</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>i_bitrate</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>first</name><operator>.</operator><name>i_bitrate</name></name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_block</name> <init>= <expr><call><name>block_Alloc</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_size</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>( <expr><name>p_block</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_nb_samples</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>first</name><operator>.</operator><name>i_frame_length</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_pts</name></name> <operator>=</operator> <name><name>p_block</name><operator>-&gt;</operator><name>i_dts</name></name> <operator>=</operator> <call><name>date_Get</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>end_date</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_length</name></name> <operator>=</operator>
<call><name>date_Increment</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>end_date</name></name></expr></argument>, <argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>i_nb_samples</name></name></expr></argument> )</argument_list></call> <operator>-</operator> <name><name>p_block</name><operator>-&gt;</operator><name>i_pts</name></name></expr>;</expr_stmt>
<return>return <expr><name>p_block</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>block_t</name> <modifier>*</modifier></type><name>PacketizeBlock</name><parameter_list>( <parameter><decl><type><name>decoder_t</name> <modifier>*</modifier></type><name>p_dec</name></decl></parameter>, <parameter><decl><type><name>block_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_block</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>decoder_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_dec</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>p_header</name><index>[<expr><name>VLC_DTS_HEADER_SIZE</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_out_buffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_block</name> <init>= <expr><ternary><condition><expr><name>pp_block</name></expr> ?</condition><then> <expr><operator>*</operator><name>pp_block</name></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>p_block</name></expr> )</condition>
<block>{<block_content>
<if_stmt><if>if <condition>( <expr><name><name>p_block</name><operator>-&gt;</operator><name>i_flags</name></name> <operator>&amp;</operator> <operator>(</operator><name>BLOCK_FLAG_DISCONTINUITY</name><operator>|</operator><name>BLOCK_FLAG_CORRUPTED</name><operator>)</operator></expr> )</condition> <block>{<block_content>

<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_drain</name> <init>= <expr><call><name>PacketizeBlock</name><argument_list>( <argument><expr><name>p_dec</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><name>p_drain</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>p_drain</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>PacketizeFlush</name><argument_list>( <argument><expr><name>p_dec</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name><name>p_block</name><operator>-&gt;</operator><name>i_flags</name></name> <operator>&amp;</operator> <name>BLOCK_FLAG_CORRUPTED</name></expr> )</condition> <block>{<block_content>
<expr_stmt><expr><call><name>block_Release</name><argument_list>( <argument><expr><name>p_block</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><name><name>p_block</name><operator>-&gt;</operator><name>i_pts</name></name> <operator>==</operator> <name>VLC_TICK_INVALID</name> <operator>&amp;&amp;</operator>
<call><name>date_Get</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>end_date</name></name></expr></argument> )</argument_list></call> <operator>==</operator> <name>VLC_TICK_INVALID</name></expr> )</condition> <block>{<block_content>

<expr_stmt><expr><call><name>block_Release</name><argument_list>( <argument><expr><name>p_block</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>block_BytestreamPush</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>bytestream</name></name></expr></argument>, <argument><expr><name>p_block</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<while>while<condition>( <expr><literal type="number">1</literal></expr> )</condition>
<block>{<block_content>
<switch>switch<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_state</name></name></expr> )</condition>
<block>{<block_content>
<case>case <expr><name>STATE_NOSYNC</name></expr>:</case>
<while>while<condition>( <expr><call><name>block_PeekBytes</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>bytestream</name></name></expr></argument>, <argument><expr><name>p_header</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument> )</argument_list></call>
<operator>==</operator> <name>VLC_SUCCESS</name></expr> )</condition>
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><call><name>vlc_dts_header_IsSync</name><argument_list>( <argument><expr><name>p_header</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument> )</argument_list></call></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_state</name></name> <operator>=</operator> <name>STATE_SYNC</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>block_SkipByte</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>bytestream</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></while>
<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_state</name></name> <operator>!=</operator> <name>STATE_SYNC</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>block_BytestreamFlush</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>bytestream</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>


<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>


<case>case <expr><name>STATE_SYNC</name></expr>:</case>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_pts</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>bytestream</name><operator>.</operator><name>p_block</name><operator>-&gt;</operator><name>i_pts</name></name></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_pts</name></name> <operator>!=</operator> <name>VLC_TICK_INVALID</name> <operator>&amp;&amp;</operator>
<name><name>p_sys</name><operator>-&gt;</operator><name>i_pts</name></name> <operator>!=</operator> <call><name>date_Get</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>end_date</name></name></expr></argument> )</argument_list></call></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>date_Set</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>end_date</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_pts</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_state</name></name> <operator>=</operator> <name>STATE_HEADER</name></expr>;</expr_stmt>


<case>case <expr><name>STATE_HEADER</name></expr>:</case>

<if_stmt><if>if<condition>( <expr><call><name>block_PeekBytes</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>bytestream</name></name></expr></argument>, <argument><expr><name>p_header</name></expr></argument>,
<argument><expr><name>VLC_DTS_HEADER_SIZE</name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>VLC_SUCCESS</name></expr> )</condition>
<block>{<block_content>

<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if<condition>( <expr><call><name>vlc_dts_header_Parse</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>first</name></name></expr></argument>, <argument><expr><name>p_header</name></expr></argument>,
<argument><expr><name>VLC_DTS_HEADER_SIZE</name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>VLC_SUCCESS</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_dec</name></expr></argument>, <argument><expr><literal type="string">"emulated sync word"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>block_SkipByte</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>bytestream</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_state</name></name> <operator>=</operator> <name>STATE_NOSYNC</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>first</name><operator>.</operator><name>syncword</name></name> <operator>==</operator> <name>DTS_SYNC_SUBSTREAM</name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_state</name></name> <operator>=</operator> <name>STATE_SYNC_SUBSTREAM_EXTENSIONS</name></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_state</name></name> <operator>=</operator> <name>STATE_NEXT_SYNC</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_size</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_next_offset</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>first</name><operator>.</operator><name>i_frame_size</name></name></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><name>STATE_SYNC_SUBSTREAM_EXTENSIONS</name></expr>:</case>

<if_stmt><if>if<condition>( <expr><call><name>block_PeekOffsetBytes</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>bytestream</name></name></expr></argument>,
<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>first</name><operator>.</operator><name>i_substream_header_size</name></name></expr></argument>,
<argument><expr><name>p_header</name></expr></argument>,
<argument><expr><name>VLC_DTS_HEADER_SIZE</name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>VLC_SUCCESS</name></expr> )</condition>
<block>{<block_content>

<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>vlc_dts_header_t</name></type> <name>xssheader</name></decl>;</decl_stmt>
<if_stmt><if>if<condition>( <expr><call><name>vlc_dts_header_Parse</name><argument_list>( <argument><expr><operator>&amp;</operator><name>xssheader</name></expr></argument>, <argument><expr><name>p_header</name></expr></argument>,
<argument><expr><name>VLC_DTS_HEADER_SIZE</name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>VLC_SUCCESS</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_dec</name></expr></argument>, <argument><expr><literal type="string">"emulated substream sync word, can't find extension"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>block_SkipByte</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>bytestream</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_state</name></name> <operator>=</operator> <name>STATE_NOSYNC</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>xssheader</name><operator>.</operator><name>syncword</name></name> <operator>==</operator> <name>DTS_SYNC_SUBSTREAM_LBR</name></expr> )</condition>
<block>{<block_content>






<expr_stmt><expr><name><name>p_dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>i_profile</name></name> <operator>=</operator> <name>PROFILE_DTS_EXPRESS</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>first</name><operator>.</operator><name>i_rate</name></name> <operator>=</operator> <name><name>xssheader</name><operator>.</operator><name>i_rate</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>first</name><operator>.</operator><name>i_frame_length</name></name> <operator>=</operator> <name><name>xssheader</name><operator>.</operator><name>i_frame_length</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_state</name></name> <operator>=</operator> <name>STATE_NEXT_SYNC</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Warn</name><argument_list>( <argument><expr><name>p_dec</name></expr></argument>, <argument><expr><literal type="string">"substream without the paired core stream, skip it"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_state</name></name> <operator>=</operator> <name>STATE_NOSYNC</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>i_profile</name></name> <operator>=</operator> <name>PROFILE_DTS</name></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><call><name>block_SkipBytes</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>bytestream</name></name></expr></argument>,
<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>first</name><operator>.</operator><name>i_frame_size</name></name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>VLC_SUCCESS</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
<break>break;</break>

<case>case <expr><name>STATE_NEXT_SYNC</name></expr>:</case>

<while>while<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_state</name></name> <operator>==</operator> <name>STATE_NEXT_SYNC</name></expr> )</condition>
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><call><name>block_PeekOffsetBytes</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>bytestream</name></name></expr></argument>,
<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_next_offset</name></name></expr></argument>, <argument><expr><name>p_header</name></expr></argument>,
<argument><expr><name>VLC_DTS_HEADER_SIZE</name></expr></argument> )</argument_list></call>
<operator>!=</operator> <name>VLC_SUCCESS</name></expr> )</condition>
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><name>p_block</name> <operator>==</operator> <name>NULL</name></expr> )</condition> 
<block>{<block_content>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_state</name></name> <operator>=</operator> <name>STATE_GET_DATA</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_header</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal></expr> )</condition>
<block>{<block_content>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_next_offset</name></name><operator>++</operator></expr>;</expr_stmt>
<continue>continue;</continue>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>vlc_dts_header_IsSync</name><argument_list>( <argument><expr><name>p_header</name></expr></argument>, <argument><expr><name>VLC_DTS_HEADER_SIZE</name></expr></argument> )</argument_list></call></expr> )</condition>
<block>{<block_content>

<if_stmt><if>if<condition>( <expr><operator>(</operator><name><name>p_sys</name><operator>-&gt;</operator><name>first</name><operator>.</operator><name>i_frame_size</name></name> <operator>%</operator> <literal type="number">2</literal><operator>)</operator> <operator>&amp;&amp;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_next_offset</name></name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<call><name>block_PeekOffsetBytes</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>bytestream</name></name></expr></argument>,
<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_next_offset</name></name> <operator>-</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>p_header</name></expr></argument>,
<argument><expr><name>VLC_DTS_HEADER_SIZE</name></expr></argument> )</argument_list></call> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<call><name>vlc_dts_header_IsSync</name><argument_list>( <argument><expr><name>p_header</name></expr></argument>, <argument><expr><name>VLC_DTS_HEADER_SIZE</name></expr></argument> )</argument_list></call></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_size</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_next_offset</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>first</name><operator>.</operator><name>i_frame_size</name></name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<break>break;</break>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_dec</name></expr></argument>, <argument><expr><literal type="string">"emulated sync word "</literal>
<literal type="string">"(no sync on following frame)"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_state</name></name> <operator>=</operator> <name>STATE_NOSYNC</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>block_SkipByte</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>bytestream</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>



<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_next_offset</name></name> <operator>==</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>first</name><operator>.</operator><name>i_frame_size</name></name> <operator>&amp;&amp;</operator>
<call><name>vlc_dts_header_Parse</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>second</name></name></expr></argument>,
<argument><expr><name>p_header</name></expr></argument>, <argument><expr><name>VLC_DTS_HEADER_SIZE</name></expr></argument> )</argument_list></call> <operator>==</operator> <name>VLC_SUCCESS</name> <operator>&amp;&amp;</operator>
<name><name>p_sys</name><operator>-&gt;</operator><name>second</name><operator>.</operator><name>syncword</name></name> <operator>==</operator> <name>DTS_SYNC_SUBSTREAM</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_state</name></name> <operator>=</operator> <name>STATE_NEXT_SYNC_SUBSTREAM_EXTENSIONS</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else
<block>{<block_content>
<expr_stmt><expr><name><name>p_dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>i_profile</name></name> <operator>=</operator> <name>PROFILE_DTS</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_state</name></name> <operator>=</operator> <name>STATE_GET_DATA</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></while>
<break>break;</break>

<case>case <expr><name>STATE_NEXT_SYNC_SUBSTREAM_EXTENSIONS</name></expr>:</case>
<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>second</name><operator>.</operator><name>syncword</name></name> <operator>==</operator> <name>DTS_SYNC_SUBSTREAM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>first</name><operator>.</operator><name>syncword</name></name> <operator>==</operator> <name>DTS_SYNC_SUBSTREAM</name></expr> )</condition>
<block>{<block_content>

<expr_stmt><expr><name><name>p_dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>i_profile</name></name> <operator>=</operator> <name>PROFILE_DTS_EXPRESS</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else 
<block>{<block_content>
<expr_stmt><expr><name><name>p_dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>i_profile</name></name> <operator>=</operator> <name>PROFILE_DTS_HD</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_size</name></name> <operator>+=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>second</name><operator>.</operator><name>i_frame_size</name></name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_state</name></name> <operator>=</operator> <name>STATE_GET_DATA</name></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><name>STATE_GET_DATA</name></expr>:</case>

<if_stmt><if>if<condition>( <expr><call><name>block_WaitBytes</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>bytestream</name></name></expr></argument>,
<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_input_size</name></name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>VLC_SUCCESS</name></expr> )</condition>
<block>{<block_content>

<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_state</name></name> <operator>=</operator> <name>STATE_SEND_DATA</name></expr>;</expr_stmt>


<case>case <expr><name>STATE_SEND_DATA</name></expr>:</case>
<if_stmt><if>if<condition>( <expr><operator>!</operator><operator>(</operator><name>p_out_buffer</name> <operator>=</operator> <call><name>GetOutBuffer</name><argument_list>( <argument><expr><name>p_dec</name></expr></argument> )</argument_list></call><operator>)</operator></expr> )</condition>
<block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>



<expr_stmt><expr><call><name>block_GetBytes</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>bytestream</name></name></expr></argument>, <argument><expr><name><name>p_out_buffer</name><operator>-&gt;</operator><name>p_buffer</name></name></expr></argument>,
<argument><expr><name><name>p_out_buffer</name><operator>-&gt;</operator><name>i_buffer</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_pts</name></name> <operator>==</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>bytestream</name><operator>.</operator><name>p_block</name><operator>-&gt;</operator><name>i_pts</name></name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_pts</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>bytestream</name><operator>.</operator><name>p_block</name><operator>-&gt;</operator><name>i_pts</name></name> <operator>=</operator> <name>VLC_TICK_INVALID</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_discontinuity</name></name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_discontinuity</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_out_buffer</name><operator>-&gt;</operator><name>i_flags</name></name> <operator>|=</operator> <name>BLOCK_FLAG_DISCONTINUITY</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if<condition>( <expr><name>pp_block</name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><operator>*</operator><name>pp_block</name> <operator>=</operator> <call><name>block_BytestreamPop</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>bytestream</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_state</name></name> <operator>=</operator> <name>STATE_NOSYNC</name></expr>;</expr_stmt>

<return>return <expr><name>p_out_buffer</name></expr>;</return>
</block_content>}</block></switch>
</block_content>}</block></while>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>decoder_t</name> <modifier>*</modifier></type><name>p_dec</name> <init>= <expr><operator>(</operator><name>decoder_t</name><operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>decoder_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_dec</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>block_BytestreamRelease</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>bytestream</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Open</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>decoder_t</name> <modifier>*</modifier></type><name>p_dec</name> <init>= <expr><operator>(</operator><name>decoder_t</name><operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>decoder_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_dec</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>i_codec</name></name> <operator>!=</operator> <name>VLC_CODEC_DTS</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>


<if_stmt><if>if<condition>( <expr><operator>(</operator> <name><name>p_dec</name><operator>-&gt;</operator><name>p_sys</name></name> <operator>=</operator> <name>p_sys</name> <operator>=</operator> <call><name>malloc</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>decoder_sys_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator>)</operator> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>


<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_state</name></name> <operator>=</operator> <name>STATE_NOSYNC</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>date_Set</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>end_date</name></name></expr></argument>, <argument><expr><name>VLC_TICK_INVALID</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_pts</name></name> <operator>=</operator> <name>VLC_TICK_INVALID</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_date_set</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_discontinuity</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>first</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>vlc_dts_header_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>second</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>vlc_dts_header_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>block_BytestreamInit</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>bytestream</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name><name>p_dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>i_codec</name></name> <operator>=</operator> <name><name>p_dec</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>i_codec</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_dec</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>audio</name></name> <operator>=</operator> <name><name>p_dec</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>audio</name></name></expr>;</expr_stmt>


<expr_stmt><expr><name><name>p_dec</name><operator>-&gt;</operator><name>pf_packetize</name></name> <operator>=</operator> <name>PacketizeBlock</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_dec</name><operator>-&gt;</operator><name>pf_flush</name></name> <operator>=</operator> <name>PacketizeFlush</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_dec</name><operator>-&gt;</operator><name>pf_get_cc</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>
</unit>
