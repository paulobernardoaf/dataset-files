<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\packetizer\hxxx_sei.h">


















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>HXXX_SEI_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HXXX_SEI_H</name></cpp:macro></cpp:define>


<enum>enum <name>hxxx_sei_type_e</name>
<block>{
<decl><name>HXXX_SEI_PIC_TIMING</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>HXXX_SEI_USER_DATA_REGISTERED_ITU_T_T35</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,
<decl><name>HXXX_SEI_RECOVERY_POINT</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,
<decl><name>HXXX_SEI_FRAME_PACKING_ARRANGEMENT</name> <init>= <expr><literal type="number">45</literal></expr></init></decl>,
<decl><name>HXXX_SEI_MASTERING_DISPLAY_COLOUR_VOLUME</name> <init>= <expr><literal type="number">137</literal></expr></init></decl>, 
<decl><name>HXXX_SEI_CONTENT_LIGHT_LEVEL</name> <init>= <expr><literal type="number">144</literal></expr></init></decl>,
}</block>;</enum>

<enum>enum <name>hxxx_sei_t35_type_e</name>
<block>{
<decl><name>HXXX_ITU_T35_TYPE_CC</name></decl>,
}</block>;</enum>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>unsigned</name></type> <name>i_type</name></decl>;</decl_stmt>
<union>union
<block>{
<decl_stmt><decl><type><name>bs_t</name> <modifier>*</modifier></type><name>p_bs</name></decl>;</decl_stmt> 
<struct>struct
<block>{
<decl_stmt><decl><type><name><name>enum</name> <name>hxxx_sei_t35_type_e</name></name></type> <name>type</name></decl>;</decl_stmt>
<union>union
<block>{
<struct>struct
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i_data</name></decl>;</decl_stmt>
}</block> <decl><name>cc</name></decl>;</struct>
}</block> <decl><name>u</name></decl>;</union>
}</block> <decl><name>itu_t35</name></decl>;</struct>
<struct>struct
<block>{
<enum>enum
<block>{
<decl><name>FRAME_PACKING_CANCEL</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>,
<decl><name>FRAME_PACKING_INTERLEAVED_CHECKERBOARD</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>FRAME_PACKING_INTERLEAVED_COLUMN</name></decl>,
<decl><name>FRAME_PACKING_INTERLEAVED_ROW</name></decl>,
<decl><name>FRAME_PACKING_SIDE_BY_SIDE</name></decl>,
<decl><name>FRAME_PACKING_TOP_BOTTOM</name></decl>,
<decl><name>FRAME_PACKING_TEMPORAL</name></decl>,
<decl><name>FRAME_PACKING_NONE_2D</name></decl>,
<decl><name>FRAME_PACKING_TILED</name></decl>,
}</block> <decl><name>type</name></decl>;</enum>
<decl_stmt><decl><type><name>bool</name></type> <name>b_flipped</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_left_first</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_fields</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_frame0</name></decl>;</decl_stmt>
}</block> <decl><name>frame_packing</name></decl>;</struct>
<struct>struct
<block>{
<decl_stmt><decl><type><name>int</name></type> <name>i_frames</name></decl>;</decl_stmt>
}</block> <decl><name>recovery</name></decl>;</struct>
<struct>struct
<block>{
<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>primaries</name><index>[<expr><literal type="number">3</literal><operator>*</operator><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>white_point</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint32_t</name></type> <name>max_luminance</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>min_luminance</name></decl>;</decl_stmt>
}</block> <decl><name>colour_volume</name></decl>;</struct> 
<struct>struct
<block>{
<decl_stmt><decl><type><name>uint16_t</name></type> <name>MaxCLL</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>MaxFALL</name></decl>;</decl_stmt>
}</block> <decl><name>content_light_lvl</name></decl>;</struct> 
}</block>;</union>
}</block></struct></type> <name>hxxx_sei_data_t</name>;</typedef>

<typedef>typedef <function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>pf_hxxx_sei_callback</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>hxxx_sei_data_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>void</name></type> <name>HxxxParseSEI</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type></decl></parameter>, <parameter><decl><type><name>pf_hxxx_sei_callback</name></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>HxxxParse_AnnexB_SEI</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type></decl></parameter>, <parameter><decl><type><name>pf_hxxx_sei_callback</name></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
