<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\packetizer\h264_nal.h">


















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>H264_NAL_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>H264_NAL_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_es.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROFILE_H264_BASELINE</name></cpp:macro> <cpp:value>66</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROFILE_H264_MAIN</name></cpp:macro> <cpp:value>77</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROFILE_H264_EXTENDED</name></cpp:macro> <cpp:value>88</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROFILE_H264_HIGH</name></cpp:macro> <cpp:value>100</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROFILE_H264_HIGH_10</name></cpp:macro> <cpp:value>110</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROFILE_H264_HIGH_422</name></cpp:macro> <cpp:value>122</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROFILE_H264_HIGH_444</name></cpp:macro> <cpp:value>144</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROFILE_H264_HIGH_444_PREDICTIVE</name></cpp:macro> <cpp:value>244</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROFILE_H264_CAVLC_INTRA</name></cpp:macro> <cpp:value>44</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROFILE_H264_SVC_BASELINE</name></cpp:macro> <cpp:value>83</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROFILE_H264_SVC_HIGH</name></cpp:macro> <cpp:value>86</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROFILE_H264_MVC_STEREO_HIGH</name></cpp:macro> <cpp:value>128</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROFILE_H264_MVC_MULTIVIEW_HIGH</name></cpp:macro> <cpp:value>118</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROFILE_H264_MFC_HIGH</name></cpp:macro> <cpp:value>134</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROFILE_H264_MVC_MULTIVIEW_DEPTH_HIGH</name></cpp:macro> <cpp:value>138</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROFILE_H264_MVC_ENHANCED_MULTIVIEW_DEPTH_HIGH</name></cpp:macro> <cpp:value>139</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>H264_SPS_ID_MAX</name></cpp:macro> <cpp:value>(31)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>H264_PPS_ID_MAX</name></cpp:macro> <cpp:value>(255)</cpp:value></cpp:define>

<enum>enum <name>h264_nal_unit_type_e</name>
<block>{
<decl><name>H264_NAL_UNKNOWN</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>H264_NAL_SLICE</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>H264_NAL_SLICE_DPA</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>H264_NAL_SLICE_DPB</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,
<decl><name>H264_NAL_SLICE_DPC</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,
<decl><name>H264_NAL_SLICE_IDR</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>, 
<decl><name>H264_NAL_SEI</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>, 
<decl><name>H264_NAL_SPS</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>,
<decl><name>H264_NAL_PPS</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,
<decl><name>H264_NAL_AU_DELIMITER</name><init>= <expr><literal type="number">9</literal></expr></init></decl>,

<decl><name>H264_NAL_END_OF_SEQ</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>,
<decl><name>H264_NAL_END_OF_STREAM</name> <init>= <expr><literal type="number">11</literal></expr></init></decl>,
<decl><name>H264_NAL_FILLER_DATA</name> <init>= <expr><literal type="number">12</literal></expr></init></decl>,
<decl><name>H264_NAL_SPS_EXT</name> <init>= <expr><literal type="number">13</literal></expr></init></decl>,
<decl><name>H264_NAL_PREFIX</name> <init>= <expr><literal type="number">14</literal></expr></init></decl>,
<decl><name>H264_NAL_SUBSET_SPS</name> <init>= <expr><literal type="number">15</literal></expr></init></decl>,
<decl><name>H264_NAL_DEPTH_PS</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>,
<decl><name>H264_NAL_RESERVED_17</name> <init>= <expr><literal type="number">17</literal></expr></init></decl>,
<decl><name>H264_NAL_RESERVED_18</name> <init>= <expr><literal type="number">18</literal></expr></init></decl>,
<decl><name>H264_NAL_SLICE_WP</name> <init>= <expr><literal type="number">19</literal></expr></init></decl>,
<decl><name>H264_NAL_SLICE_EXT</name> <init>= <expr><literal type="number">20</literal></expr></init></decl>,
<decl><name>H264_NAL_SLICE_3D_EXT</name><init>= <expr><literal type="number">21</literal></expr></init></decl>,
<decl><name>H264_NAL_RESERVED_22</name> <init>= <expr><literal type="number">22</literal></expr></init></decl>,
<decl><name>H264_NAL_RESERVED_23</name> <init>= <expr><literal type="number">23</literal></expr></init></decl>,
}</block>;</enum>

<typedef>typedef <type><name><name>struct</name> <name>h264_sequence_parameter_set_t</name></name></type> <name>h264_sequence_parameter_set_t</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>h264_picture_parameter_set_t</name></name></type> <name>h264_picture_parameter_set_t</name>;</typedef>

<function_decl><type><name>h264_sequence_parameter_set_t</name> <modifier>*</modifier></type> <name>h264_decode_sps</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>, <parameter><decl><type><name>bool</name></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>h264_picture_parameter_set_t</name> <modifier>*</modifier></type> <name>h264_decode_pps</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>, <parameter><decl><type><name>bool</name></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>h264_release_sps</name><parameter_list>( <parameter><decl><type><name>h264_sequence_parameter_set_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>h264_release_pps</name><parameter_list>( <parameter><decl><type><name>h264_picture_parameter_set_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<struct>struct <name>h264_sequence_parameter_set_t</name>
<block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_profile</name></decl>, <decl><type ref="prev"/><name>i_level</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_constraint_set_flags</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_chroma_idc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_bit_depth_luma</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_bit_depth_chroma</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>b_separate_colour_planes_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>pic_width_in_mbs_minus1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>pic_height_in_map_units_minus1</name></decl>;</decl_stmt>
<struct>struct
<block>{
<decl_stmt><decl><type><name>uint32_t</name></type> <name>left_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>right_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>top_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>bottom_offset</name></decl>;</decl_stmt>
}</block> <decl><name>frame_crop</name></decl>;</struct>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>frame_mbs_only_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>mb_adaptive_frame_field_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_log2_max_frame_num</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_pic_order_cnt_type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_delta_pic_order_always_zero_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name>offset_for_non_ref_pic</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name>offset_for_top_to_bottom_field</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_num_ref_frames_in_pic_order_cnt_cycle</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name><name>offset_for_ref_frame</name><index>[<expr><literal type="number">255</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_log2_max_pic_order_cnt_lsb</name></decl>;</decl_stmt>

<struct>struct <block>{
<decl_stmt><decl><type><name>bool</name></type> <name>b_valid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_sar_num</name></decl>, <decl><type ref="prev"/><name>i_sar_den</name></decl>;</decl_stmt>
<struct>struct <block>{
<decl_stmt><decl><type><name>bool</name></type> <name>b_full_range</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_colour_primaries</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_transfer_characteristics</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_matrix_coefficients</name></decl>;</decl_stmt>
}</block> <decl><name>colour</name></decl>;</struct>
<decl_stmt><decl><type><name>bool</name></type> <name>b_timing_info_present_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>i_num_units_in_tick</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>i_time_scale</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_fixed_frame_rate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_pic_struct_present_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_hrd_parameters_present_flag</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_cpb_removal_delay_length_minus1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_dpb_output_delay_length_minus1</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>uint8_t</name></type> <name>b_bitstream_restriction_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_max_num_reorder_frames</name></decl>;</decl_stmt>
}</block> <decl><name>vui</name></decl>;</struct>
}</block>;</struct>

<struct>struct <name>h264_picture_parameter_set_t</name>
<block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_sps_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_pic_order_present_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_redundant_pic_present_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>weighted_pred_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>weighted_bipred_idc</name></decl>;</decl_stmt>
}</block>;</struct>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>H264_MIN_AVCC_SIZE</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define>

<function_decl><type><name>bool</name></type> <name>h264_isavcC</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter> )</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type> <name>h264_AVC_to_AnnexB</name><parameter_list>( <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>p_buf</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>i_len</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name></type> <name>i_nal_length_size</name></decl></parameter> )</parameter_list>;</function_decl>



<function_decl><type><name>bool</name></type> <name>h264_AnnexB_get_spspps</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_buf</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>i_buf</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_sps</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>p_sps_size</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_pps</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>p_pps_size</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_ext</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>p_ext_size</name></decl></parameter> )</parameter_list>;</function_decl>



<function_decl><type><name>block_t</name> <modifier>*</modifier></type><name>h264_NAL_to_avcC</name><parameter_list>( <parameter><decl><type><name>uint8_t</name></type> <name>i_nal_length_size</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_sps_buf</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>size_t</name> <modifier>*</modifier></type><name>p_sps_size</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>i_sps_count</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_pps_buf</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>size_t</name> <modifier>*</modifier></type><name>p_pps_size</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>i_pps_count</name></decl></parameter> )</parameter_list>;</function_decl>


<function_decl><type><name>uint8_t</name> <modifier>*</modifier></type> <name>h264_avcC_to_AnnexB_NAL</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_buf</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>i_buf</name></decl></parameter>,
<parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>pi_result</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>pi_nal_length_size</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> <name>h264_get_dpb_values</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>h264_sequence_parameter_set_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>pi_depth</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>pi_delay</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> <name>h264_get_picture_size</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>h264_sequence_parameter_set_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>p_w</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>p_h</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>p_vw</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>p_vh</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>h264_get_chroma_luma</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>h264_sequence_parameter_set_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>pi_chroma_format</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>pi_depth_luma</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>pi_depth_chroma</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>h264_get_colorimetry</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>h264_sequence_parameter_set_t</name> <modifier>*</modifier></type><name>p_sps</name></decl></parameter>,
<parameter><decl><type><name>video_color_primaries_t</name> <modifier>*</modifier></type><name>p_primaries</name></decl></parameter>,
<parameter><decl><type><name>video_transfer_func_t</name> <modifier>*</modifier></type><name>p_transfer</name></decl></parameter>,
<parameter><decl><type><name>video_color_space_t</name> <modifier>*</modifier></type><name>p_colorspace</name></decl></parameter>,
<parameter><decl><type><name>video_color_range_t</name> <modifier>*</modifier></type><name>p_full_range</name></decl></parameter> )</parameter_list>;</function_decl>


<function_decl><type><name>bool</name></type> <name>h264_get_profile_level</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type><name>p_fmt</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>pi_profile</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>pi_level</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>p_nal_length_size</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
