<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\stream_out\autodel.c">

























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_sout.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_block.h&gt;</cpp:file></cpp:include>




<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Open</name> <parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Close</name> <parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SOUT_CFG_PREFIX</name></cpp:macro> <cpp:value>"sout-autodel-"</cpp:value></cpp:define>

<macro><name>vlc_module_begin</name> <argument_list>()</argument_list></macro>
<macro><name>set_shortname</name><argument_list>( <argument>N_(<literal type="string">"Autodel"</literal>)</argument>)</argument_list></macro>
<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"Automatically add/delete input streams"</literal>)</argument>)</argument_list></macro>
<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"sout filter"</literal></argument>, <argument><literal type="number">50</literal></argument> )</argument_list></macro>
<macro><name>add_shortcut</name><argument_list>( <argument><literal type="string">"autodel"</literal></argument> )</argument_list></macro>
<macro><name>set_callbacks</name><argument_list>( <argument>Open</argument>, <argument>Close</argument> )</argument_list></macro>
<macro><name>vlc_module_end</name> <argument_list>()</argument_list></macro>





<function_decl><type><specifier>static</specifier> <name>void</name> <modifier>*</modifier></type><name>Add</name><parameter_list>( <parameter><decl><type><name>sout_stream_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Del</name><parameter_list>( <parameter><decl><type><name>sout_stream_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Send</name><parameter_list>( <parameter><decl><type><name>sout_stream_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>block_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<typedef>typedef <type><name><name>struct</name> <name>sout_stream_id_sys_t</name></name></type> <name>sout_stream_id_sys_t</name>;</typedef>
<struct>struct <name>sout_stream_id_sys_t</name>
<block>{
<decl_stmt><decl><type><name>sout_stream_id_sys_t</name> <modifier>*</modifier></type><name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>es_format_t</name></type> <name>fmt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_last</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_error</name></decl>;</decl_stmt>
}</block>;</struct>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>sout_stream_id_sys_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_es</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_es_num</name></decl>;</decl_stmt>
}</block></struct></type> <name>sout_stream_sys_t</name>;</typedef>




<function><type><specifier>static</specifier> <name>int</name></type> <name>Open</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>sout_stream_t</name> <modifier>*</modifier></type><name>p_stream</name> <init>= <expr><operator>(</operator><name>sout_stream_t</name><operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>sout_stream_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl>;</decl_stmt>

<expr_stmt><expr><name>p_sys</name> <operator>=</operator> <call><name>malloc</name><argument_list>( <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><name>sout_stream_sys_t</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>pp_es</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_es_num</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_stream</name><operator>-&gt;</operator><name>pf_add</name></name> <operator>=</operator> <name>Add</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_stream</name><operator>-&gt;</operator><name>pf_del</name></name> <operator>=</operator> <name>Del</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_stream</name><operator>-&gt;</operator><name>pf_send</name></name> <operator>=</operator> <name>Send</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_stream</name><operator>-&gt;</operator><name>p_sys</name></name> <operator>=</operator> <name>p_sys</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type> <name>p_this</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>sout_stream_t</name> <modifier>*</modifier></type><name>p_stream</name> <init>= <expr><operator>(</operator><name>sout_stream_t</name><operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>sout_stream_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><operator>(</operator><name>sout_stream_sys_t</name> <operator>*</operator><operator>)</operator><name><name>p_stream</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name> <modifier>*</modifier></type><name>Add</name><parameter_list>( <parameter><decl><type><name>sout_stream_t</name> <modifier>*</modifier></type><name>p_stream</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type><name>p_fmt</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>sout_stream_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><operator>(</operator><name>sout_stream_sys_t</name> <operator>*</operator><operator>)</operator><name><name>p_stream</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>sout_stream_id_sys_t</name> <modifier>*</modifier></type><name>p_es</name> <init>= <expr><call><name>malloc</name><argument_list>( <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sout_stream_id_sys_t</name></expr></argument>)</argument_list></sizeof></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>( <expr><call><name>unlikely</name><argument_list>(<argument><expr><name>p_es</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>es_format_Copy</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_es</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument>, <argument><expr><name>p_fmt</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_es</name><operator>-&gt;</operator><name>id</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_es</name><operator>-&gt;</operator><name>i_last</name></name> <operator>=</operator> <name>VLC_TICK_INVALID</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_es</name><operator>-&gt;</operator><name>b_error</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>TAB_APPEND</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_es_num</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>pp_es</name></name></expr></argument>, <argument><expr><name>p_es</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>p_es</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Del</name><parameter_list>( <parameter><decl><type><name>sout_stream_t</name> <modifier>*</modifier></type><name>p_stream</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>_p_es</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>sout_stream_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><operator>(</operator><name>sout_stream_sys_t</name> <operator>*</operator><operator>)</operator><name><name>p_stream</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>sout_stream_id_sys_t</name> <modifier>*</modifier></type><name>p_es</name> <init>= <expr><operator>(</operator><name>sout_stream_id_sys_t</name> <operator>*</operator><operator>)</operator><name>_p_es</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_es</name><operator>-&gt;</operator><name>id</name></name> <operator>!=</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>sout_StreamIdDel</name><argument_list>( <argument><expr><name><name>p_stream</name><operator>-&gt;</operator><name>p_next</name></name></expr></argument>, <argument><expr><name><name>p_es</name><operator>-&gt;</operator><name>id</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>TAB_REMOVE</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_es_num</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>pp_es</name></name></expr></argument>, <argument><expr><name>p_es</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>es_format_Clean</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_es</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_es</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Send</name><parameter_list>( <parameter><decl><type><name>sout_stream_t</name> <modifier>*</modifier></type><name>p_stream</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>_p_es</name></decl></parameter>, <parameter><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_buffer</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>sout_stream_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><operator>(</operator><name>sout_stream_sys_t</name> <operator>*</operator><operator>)</operator><name><name>p_stream</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>sout_stream_id_sys_t</name> <modifier>*</modifier></type><name>p_es</name> <init>= <expr><operator>(</operator><name>sout_stream_id_sys_t</name> <operator>*</operator><operator>)</operator><name>_p_es</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_current</name> <init>= <expr><call><name>vlc_tick_now</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p_es</name><operator>-&gt;</operator><name>i_last</name></name> <operator>=</operator> <name><name>p_buffer</name><operator>-&gt;</operator><name>i_dts</name></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><operator>!</operator><name><name>p_es</name><operator>-&gt;</operator><name>id</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>p_es</name><operator>-&gt;</operator><name>b_error</name></name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>p_es</name><operator>-&gt;</operator><name>id</name></name> <operator>=</operator> <call><name>sout_StreamIdAdd</name><argument_list>( <argument><expr><name><name>p_stream</name><operator>-&gt;</operator><name>p_next</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_es</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><name><name>p_es</name><operator>-&gt;</operator><name>id</name></name> <operator>==</operator> <name>NULL</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>p_es</name><operator>-&gt;</operator><name>b_error</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_stream</name></expr></argument>, <argument><expr><literal type="string">"couldn't create chain for id %d"</literal></expr></argument>,
<argument><expr><name><name>p_es</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_id</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><operator>!</operator><name><name>p_es</name><operator>-&gt;</operator><name>b_error</name></name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>sout_StreamIdSend</name><argument_list>( <argument><expr><name><name>p_stream</name><operator>-&gt;</operator><name>p_next</name></name></expr></argument>, <argument><expr><name><name>p_es</name><operator>-&gt;</operator><name>id</name></name></expr></argument>, <argument><expr><name>p_buffer</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><call><name>block_ChainRelease</name><argument_list>( <argument><expr><name>p_buffer</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<for>for <control>( <init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_es_num</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>
<block>{<block_content>
<if_stmt><if>if <condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>pp_es</name><index>[<expr><name>i</name></expr>]</index></name><operator>-&gt;</operator><name>id</name> <operator>!=</operator> <name>NULL</name>
<operator>&amp;&amp;</operator> <operator>(</operator><name><name>p_sys</name><operator>-&gt;</operator><name>pp_es</name><index>[<expr><name>i</name></expr>]</index></name><operator>-&gt;</operator><name><name>fmt</name><operator>.</operator><name>i_cat</name></name> <operator>==</operator> <name>VIDEO_ES</name>
<operator>||</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>pp_es</name><index>[<expr><name>i</name></expr>]</index></name><operator>-&gt;</operator><name><name>fmt</name><operator>.</operator><name>i_cat</name></name> <operator>==</operator> <name>AUDIO_ES</name><operator>)</operator>
<operator>&amp;&amp;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>pp_es</name><index>[<expr><name>i</name></expr>]</index></name><operator>-&gt;</operator><name>i_last</name> <operator>&lt;</operator> <name>i_current</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>sout_StreamIdDel</name><argument_list>( <argument><expr><name><name>p_stream</name><operator>-&gt;</operator><name>p_next</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>pp_es</name><index>[<expr><name>i</name></expr>]</index></name><operator>-&gt;</operator><name>id</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>pp_es</name><index>[<expr><name>i</name></expr>]</index></name><operator>-&gt;</operator><name>id</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>
</unit>
