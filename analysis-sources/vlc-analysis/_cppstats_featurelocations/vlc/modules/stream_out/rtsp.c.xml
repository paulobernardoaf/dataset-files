<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\stream_out\rtsp.c">



























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_sout.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_httpd.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_url.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_charset.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_fs.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_network.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_rand.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;errno.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;time.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;locale.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_XLOCALE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;xlocale.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"rtp.h"</cpp:file></cpp:include>

<typedef>typedef <type><name><name>struct</name> <name>rtsp_session_t</name></name></type> <name>rtsp_session_t</name>;</typedef>

<struct>struct <name>rtsp_stream_t</name>
<block>{
<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>lock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>owner</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>httpd_host_t</name> <modifier>*</modifier></type><name>host</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>httpd_url_t</name> <modifier>*</modifier></type><name>url</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_path</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>track_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>sessionc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>rtsp_session_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>sessionv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>timeout</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_timer_t</name></type> <name>timer</name></decl>;</decl_stmt>
}</block>;</struct>


<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>RtspCallback</name><parameter_list>( <parameter><decl><type><name>httpd_callback_sys_t</name> <modifier>*</modifier></type><name>p_args</name></decl></parameter>,
<parameter><decl><type><name>httpd_client_t</name> <modifier>*</modifier></type><name>cl</name></decl></parameter>, <parameter><decl><type><name>httpd_message_t</name> <modifier>*</modifier></type><name>answer</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>httpd_message_t</name> <modifier>*</modifier></type><name>query</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>RtspCallbackId</name><parameter_list>( <parameter><decl><type><name>httpd_callback_sys_t</name> <modifier>*</modifier></type><name>p_args</name></decl></parameter>,
<parameter><decl><type><name>httpd_client_t</name> <modifier>*</modifier></type><name>cl</name></decl></parameter>, <parameter><decl><type><name>httpd_message_t</name> <modifier>*</modifier></type><name>answer</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>httpd_message_t</name> <modifier>*</modifier></type><name>query</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>RtspClientDel</name><parameter_list>( <parameter><decl><type><name>rtsp_stream_t</name> <modifier>*</modifier></type><name>rtsp</name></decl></parameter>, <parameter><decl><type><name>rtsp_session_t</name> <modifier>*</modifier></type><name>session</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>RtspTimeOut</name><parameter_list>( <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter> )</parameter_list>;</function_decl>

<function><type><name>rtsp_stream_t</name> <modifier>*</modifier></type><name>RtspSetup</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>owner</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>rtsp_stream_t</name> <modifier>*</modifier></type><name>rtsp</name> <init>= <expr><call><name>calloc</name><argument_list>( <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><operator>*</operator><name>rtsp</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>unlikely</name><argument_list>(<argument><expr><name>rtsp</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>rtsp</name><operator>-&gt;</operator><name>owner</name></name> <operator>=</operator> <name>owner</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_mutex_init</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>rtsp</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>rtsp</name><operator>-&gt;</operator><name>timeout</name></name> <operator>=</operator> <call><name>vlc_tick_from_sec</name><argument_list>(<argument><expr><call><name>__MAX</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><call><name>var_InheritInteger</name><argument_list>(<argument><expr><name>owner</name></expr></argument>, <argument><expr><literal type="string">"rtsp-timeout"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>rtsp</name><operator>-&gt;</operator><name>timeout</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>vlc_timer_create</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>rtsp</name><operator>-&gt;</operator><name>timer</name></name></expr></argument>, <argument><expr><name>RtspTimeOut</name></expr></argument>, <argument><expr><name>rtsp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>rtsp</name><operator>-&gt;</operator><name>psz_path</name></name> <operator>=</operator> <call><name>strdup</name><argument_list>( <argument><expr><ternary><condition><expr><operator>(</operator><name>path</name> <operator>!=</operator> <name>NULL</name><operator>)</operator></expr> ?</condition><then> <expr><name>path</name></expr> </then><else>: <expr><literal type="string">"/"</literal></expr></else></ternary></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name><name>rtsp</name><operator>-&gt;</operator><name>psz_path</name></name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>owner</name></expr></argument>, <argument><expr><literal type="string">"RTSP stream at %s"</literal></expr></argument>, <argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>psz_path</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>rtsp</name><operator>-&gt;</operator><name>host</name></name> <operator>=</operator> <call><name>vlc_rtsp_HostNew</name><argument_list>( <argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>owner</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name><name>rtsp</name><operator>-&gt;</operator><name>host</name></name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>user</name> <init>= <expr><call><name>var_InheritString</name><argument_list>(<argument><expr><name>owner</name></expr></argument>, <argument><expr><literal type="string">"sout-rtsp-user"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>pwd</name> <init>= <expr><call><name>var_InheritString</name><argument_list>(<argument><expr><name>owner</name></expr></argument>, <argument><expr><literal type="string">"sout-rtsp-pwd"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>rtsp</name><operator>-&gt;</operator><name>url</name></name> <operator>=</operator> <call><name>httpd_UrlNew</name><argument_list>( <argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>host</name></name></expr></argument>, <argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>psz_path</name></name></expr></argument>, <argument><expr><name>user</name></expr></argument>, <argument><expr><name>pwd</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>pwd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name><name>rtsp</name><operator>-&gt;</operator><name>url</name></name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>httpd_UrlCatch</name><argument_list>( <argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>url</name></name></expr></argument>, <argument><expr><name>HTTPD_MSG_DESCRIBE</name></expr></argument>, <argument><expr><name>RtspCallback</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>*</operator><operator>)</operator><name>rtsp</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>httpd_UrlCatch</name><argument_list>( <argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>url</name></name></expr></argument>, <argument><expr><name>HTTPD_MSG_SETUP</name></expr></argument>, <argument><expr><name>RtspCallback</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>*</operator><operator>)</operator><name>rtsp</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>httpd_UrlCatch</name><argument_list>( <argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>url</name></name></expr></argument>, <argument><expr><name>HTTPD_MSG_PLAY</name></expr></argument>, <argument><expr><name>RtspCallback</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>*</operator><operator>)</operator><name>rtsp</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>httpd_UrlCatch</name><argument_list>( <argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>url</name></name></expr></argument>, <argument><expr><name>HTTPD_MSG_PAUSE</name></expr></argument>, <argument><expr><name>RtspCallback</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>*</operator><operator>)</operator><name>rtsp</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>httpd_UrlCatch</name><argument_list>( <argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>url</name></name></expr></argument>, <argument><expr><name>HTTPD_MSG_GETPARAMETER</name></expr></argument>, <argument><expr><name>RtspCallback</name></expr></argument>,
<argument><expr><operator>(</operator><name>void</name><operator>*</operator><operator>)</operator><name>rtsp</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>httpd_UrlCatch</name><argument_list>( <argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>url</name></name></expr></argument>, <argument><expr><name>HTTPD_MSG_TEARDOWN</name></expr></argument>, <argument><expr><name>RtspCallback</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>*</operator><operator>)</operator><name>rtsp</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>rtsp</name></expr>;</return>

<label><name>error</name>:</label>
<expr_stmt><expr><call><name>RtspUnsetup</name><argument_list>( <argument><expr><name>rtsp</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>RtspUnsetup</name><parameter_list>( <parameter><decl><type><name>rtsp_stream_t</name> <modifier>*</modifier></type><name>rtsp</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><name><name>rtsp</name><operator>-&gt;</operator><name>url</name></name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>httpd_UrlDelete</name><argument_list>( <argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>url</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>rtsp</name><operator>-&gt;</operator><name>host</name></name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>httpd_HostDelete</name><argument_list>( <argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>host</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<while>while<condition>( <expr><name><name>rtsp</name><operator>-&gt;</operator><name>sessionc</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>RtspClientDel</name><argument_list>( <argument><expr><name>rtsp</name></expr></argument>, <argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>sessionv</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></while>

<if_stmt><if>if <condition>(<expr><name><name>rtsp</name><operator>-&gt;</operator><name>timeout</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>vlc_timer_destroy</name><argument_list>(<argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>psz_path</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>rtsp</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<struct>struct <name>rtsp_stream_id_t</name>
<block>{
<decl_stmt><decl><type><name>rtsp_stream_t</name> <modifier>*</modifier></type><name>stream</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>sout_stream_id_sys_t</name> <modifier>*</modifier></type><name>sout_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>httpd_url_t</name> <modifier>*</modifier></type><name>url</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>track_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>ssrc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>clock_rate</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>mcast_fd</name></decl>;</decl_stmt>
}</block>;</struct>


<typedef>typedef <type><name><name>struct</name> <name>rtsp_strack_t</name></name></type> <name>rtsp_strack_t</name>;</typedef>


<struct>struct <name>rtsp_session_t</name>
<block>{
<decl_stmt><decl><type><name>rtsp_stream_t</name> <modifier>*</modifier></type><name>stream</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>last_seen</name></decl>;</decl_stmt> 


<decl_stmt><decl><type><name>int</name></type> <name>trackc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>rtsp_strack_t</name> <modifier>*</modifier></type><name>trackv</name></decl>;</decl_stmt>
}</block>;</struct>



<struct>struct <name>rtsp_strack_t</name>
<block>{
<decl_stmt><decl><type><name>rtsp_stream_id_t</name> <modifier>*</modifier></type><name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>sout_stream_id_sys_t</name> <modifier>*</modifier></type><name>sout_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>setup_fd</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>rtp_fd</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint32_t</name></type> <name>ssrc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>seq_init</name></decl>;</decl_stmt>
}</block>;</struct>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>RtspTrackClose</name><parameter_list>( <parameter><decl><type><name>rtsp_strack_t</name> <modifier>*</modifier></type><name>tr</name></decl></parameter> )</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TRACK_PATH_SIZE</name></cpp:macro> <cpp:value>(sizeof("/trackID=999") - 1)</cpp:value></cpp:define>

<function><type><name>char</name> <modifier>*</modifier></type><name>RtspAppendTrackPath</name><parameter_list>( <parameter><decl><type><name>rtsp_stream_id_t</name> <modifier>*</modifier></type><name>id</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>base</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>sep</name> <init>= <expr><ternary><condition><expr><call><name>strlen</name><argument_list>( <argument><expr><name>base</name></expr></argument> )</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>base</name><index>[<expr><call><name>strlen</name><argument_list>( <argument><expr><name>base</name></expr></argument> )</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'/'</literal></expr> ?</condition><then>
<expr><literal type="string">""</literal></expr> </then><else>: <expr><literal type="string">"/"</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>url</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>asprintf</name><argument_list>( <argument><expr><operator>&amp;</operator><name>url</name></expr></argument>, <argument><expr><literal type="string">"%s%strackID=%u"</literal></expr></argument>, <argument><expr><name>base</name></expr></argument>, <argument><expr><name>sep</name></expr></argument>, <argument><expr><name><name>id</name><operator>-&gt;</operator><name>track_id</name></name></expr></argument> )</argument_list></call> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>url</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<return>return <expr><name>url</name></expr>;</return>
</block_content>}</block></function>


<function><type><name>rtsp_stream_id_t</name> <modifier>*</modifier></type><name>RtspAddId</name><parameter_list>( <parameter><decl><type><name>rtsp_stream_t</name> <modifier>*</modifier></type><name>rtsp</name></decl></parameter>, <parameter><decl><type><name>sout_stream_id_sys_t</name> <modifier>*</modifier></type><name>sid</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>ssrc</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>clock_rate</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>mcast_fd</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>rtsp</name><operator>-&gt;</operator><name>track_id</name></name> <operator>&gt;</operator> <literal type="number">999</literal></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>owner</name></name></expr></argument>, <argument><expr><literal type="string">"RTSP: too many IDs!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>urlbuf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>rtsp_stream_id_t</name> <modifier>*</modifier></type><name>id</name> <init>= <expr><call><name>malloc</name><argument_list>( <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><operator>*</operator><name>id</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>httpd_url_t</name> <modifier>*</modifier></type><name>url</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>id</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>id</name><operator>-&gt;</operator><name>stream</name></name> <operator>=</operator> <name>rtsp</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>id</name><operator>-&gt;</operator><name>sout_id</name></name> <operator>=</operator> <name>sid</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>id</name><operator>-&gt;</operator><name>track_id</name></name> <operator>=</operator> <name><name>rtsp</name><operator>-&gt;</operator><name>track_id</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>id</name><operator>-&gt;</operator><name>ssrc</name></name> <operator>=</operator> <name>ssrc</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>id</name><operator>-&gt;</operator><name>clock_rate</name></name> <operator>=</operator> <name>clock_rate</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>id</name><operator>-&gt;</operator><name>mcast_fd</name></name> <operator>=</operator> <name>mcast_fd</name></expr>;</expr_stmt>

<expr_stmt><expr><name>urlbuf</name> <operator>=</operator> <call><name>RtspAppendTrackPath</name><argument_list>( <argument><expr><name>id</name></expr></argument>, <argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>psz_path</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name>urlbuf</name> <operator>==</operator> <name>NULL</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>id</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>owner</name></name></expr></argument>, <argument><expr><literal type="string">"RTSP: adding %s"</literal></expr></argument>, <argument><expr><name>urlbuf</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>user</name> <init>= <expr><call><name>var_InheritString</name><argument_list>(<argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>owner</name></name></expr></argument>, <argument><expr><literal type="string">"sout-rtsp-user"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>pwd</name> <init>= <expr><call><name>var_InheritString</name><argument_list>(<argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>owner</name></name></expr></argument>, <argument><expr><literal type="string">"sout-rtsp-pwd"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>url</name> <operator>=</operator> <name><name>id</name><operator>-&gt;</operator><name>url</name></name> <operator>=</operator> <call><name>httpd_UrlNew</name><argument_list>( <argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>host</name></name></expr></argument>, <argument><expr><name>urlbuf</name></expr></argument>, <argument><expr><name>user</name></expr></argument>, <argument><expr><name>pwd</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>user</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>pwd</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>urlbuf</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>url</name> <operator>==</operator> <name>NULL</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>id</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>httpd_UrlCatch</name><argument_list>( <argument><expr><name>url</name></expr></argument>, <argument><expr><name>HTTPD_MSG_DESCRIBE</name></expr></argument>, <argument><expr><name>RtspCallbackId</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name>id</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>httpd_UrlCatch</name><argument_list>( <argument><expr><name>url</name></expr></argument>, <argument><expr><name>HTTPD_MSG_SETUP</name></expr></argument>, <argument><expr><name>RtspCallbackId</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name>id</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>httpd_UrlCatch</name><argument_list>( <argument><expr><name>url</name></expr></argument>, <argument><expr><name>HTTPD_MSG_PLAY</name></expr></argument>, <argument><expr><name>RtspCallbackId</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name>id</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>httpd_UrlCatch</name><argument_list>( <argument><expr><name>url</name></expr></argument>, <argument><expr><name>HTTPD_MSG_PAUSE</name></expr></argument>, <argument><expr><name>RtspCallbackId</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name>id</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>httpd_UrlCatch</name><argument_list>( <argument><expr><name>url</name></expr></argument>, <argument><expr><name>HTTPD_MSG_GETPARAMETER</name></expr></argument>, <argument><expr><name>RtspCallbackId</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name>id</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>httpd_UrlCatch</name><argument_list>( <argument><expr><name>url</name></expr></argument>, <argument><expr><name>HTTPD_MSG_TEARDOWN</name></expr></argument>, <argument><expr><name>RtspCallbackId</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name>id</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>rtsp</name><operator>-&gt;</operator><name>track_id</name></name><operator>++</operator></expr>;</expr_stmt>

<return>return <expr><name>id</name></expr>;</return>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>RtspDelId</name><parameter_list>( <parameter><decl><type><name>rtsp_stream_t</name> <modifier>*</modifier></type><name>rtsp</name></decl></parameter>, <parameter><decl><type><name>rtsp_stream_id_t</name> <modifier>*</modifier></type><name>id</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>httpd_UrlDelete</name><argument_list>( <argument><expr><name><name>id</name><operator>-&gt;</operator><name>url</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>rtsp</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>rtsp</name><operator>-&gt;</operator><name>sessionc</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>
<block>{<block_content>
<decl_stmt><decl><type><name>rtsp_session_t</name> <modifier>*</modifier></type><name>ses</name> <init>= <expr><name><name>rtsp</name><operator>-&gt;</operator><name>sessionv</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<for>for<control>( <init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name><name>ses</name><operator>-&gt;</operator><name>trackc</name></name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr> )</control>
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><name><name>ses</name><operator>-&gt;</operator><name>trackv</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>id</name> <operator>==</operator> <name>id</name></expr> )</condition>
<block>{<block_content>
<decl_stmt><decl><type><name>rtsp_strack_t</name> <modifier>*</modifier></type><name>tr</name> <init>= <expr><name><name>ses</name><operator>-&gt;</operator><name>trackv</name></name> <operator>+</operator> <name>j</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>RtspTrackClose</name><argument_list>( <argument><expr><name>tr</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>TAB_ERASE</name><argument_list>(<argument><expr><name><name>ses</name><operator>-&gt;</operator><name>trackc</name></name></expr></argument>, <argument><expr><name><name>ses</name><operator>-&gt;</operator><name>trackv</name></name></expr></argument>, <argument><expr><name>j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
</block_content>}</block></for>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>rtsp</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>id</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>void</name></type> <name>RtspUpdateTimer</name><parameter_list>( <parameter><decl><type><name>rtsp_stream_t</name> <modifier>*</modifier></type><name>rtsp</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>rtsp</name><operator>-&gt;</operator><name>timeout</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>timeout</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>rtsp</name><operator>-&gt;</operator><name>sessionc</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>timeout</name> <operator>==</operator> <literal type="number">0</literal> <operator>||</operator> <name><name>rtsp</name><operator>-&gt;</operator><name>sessionv</name><index>[<expr><name>i</name></expr>]</index></name><operator>-&gt;</operator><name>last_seen</name> <operator>&lt;</operator> <name>timeout</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>timeout</name> <operator>=</operator> <name><name>rtsp</name><operator>-&gt;</operator><name>sessionv</name><index>[<expr><name>i</name></expr>]</index></name><operator>-&gt;</operator><name>last_seen</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></for>
<if_stmt><if>if <condition>(<expr><name>timeout</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>timeout</name> <operator>+=</operator> <name><name>rtsp</name><operator>-&gt;</operator><name>timeout</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_timer_schedule</name><argument_list>(<argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>timer</name></name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>timeout</name></expr></argument>, <argument><expr><name>VLC_TIMER_FIRE_ONCE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else
<block>{<block_content>
<expr_stmt><expr><call><name>vlc_timer_disarm</name><argument_list>(<argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>void</name></type> <name>RtspTimeOut</name><parameter_list>( <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>rtsp_stream_t</name> <modifier>*</modifier></type><name>rtsp</name> <init>= <expr><name>data</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>rtsp</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>now</name> <init>= <expr><call><name>vlc_tick_now</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><name><name>rtsp</name><operator>-&gt;</operator><name>sessionc</name></name> <operator>-</operator> <literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name><operator>--</operator></expr></incr>)</control><block type="pseudo"><block_content>
<if_stmt><if>if <condition>(<expr><name><name>rtsp</name><operator>-&gt;</operator><name>sessionv</name><index>[<expr><name>i</name></expr>]</index></name><operator>-&gt;</operator><name>last_seen</name> <operator>+</operator> <name><name>rtsp</name><operator>-&gt;</operator><name>timeout</name></name> <operator>&lt;</operator> <name>now</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>RtspClientDel</name><argument_list>(<argument><expr><name>rtsp</name></expr></argument>, <argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>sessionv</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>
<expr_stmt><expr><call><name>RtspUpdateTimer</name><argument_list>(<argument><expr><name>rtsp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>rtsp</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>



<function><type><specifier>static</specifier>
<name>rtsp_session_t</name> <modifier>*</modifier></type><name>RtspClientNew</name><parameter_list>( <parameter><decl><type><name>rtsp_stream_t</name> <modifier>*</modifier></type><name>rtsp</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>rtsp_session_t</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><call><name>malloc</name><argument_list>( <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><operator>*</operator><name>s</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>( <expr><name>s</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>stream</name></name> <operator>=</operator> <name>rtsp</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_rand_bytes</name> <argument_list>(<argument><expr><operator>&amp;</operator><name><name>s</name><operator>-&gt;</operator><name>id</name></name></expr></argument>, <argument><expr><sizeof>sizeof <argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>id</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>trackc</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>trackv</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>TAB_APPEND</name><argument_list>( <argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>sessionc</name></name></expr></argument>, <argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>sessionv</name></name></expr></argument>, <argument><expr><name>s</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>s</name></expr>;</return>
</block_content>}</block></function>



<function><type><specifier>static</specifier>
<name>rtsp_session_t</name> <modifier>*</modifier></type><name>RtspClientGet</name><parameter_list>( <parameter><decl><type><name>rtsp_stream_t</name> <modifier>*</modifier></type><name>rtsp</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>end</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>name</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>errno</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>id</name> <operator>=</operator> <call><name>strtoull</name><argument_list>( <argument><expr><name>name</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>end</name></expr></argument>, <argument><expr><literal type="number">0x10</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name>errno</name> <operator>||</operator> <operator>*</operator><name>end</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>


<for>for<control>( <init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>rtsp</name><operator>-&gt;</operator><name>sessionc</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><name><name>rtsp</name><operator>-&gt;</operator><name>sessionv</name><index>[<expr><name>i</name></expr>]</index></name><operator>-&gt;</operator><name>id</name> <operator>==</operator> <name>id</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name><name>rtsp</name><operator>-&gt;</operator><name>sessionv</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></for>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>



<function><type><specifier>static</specifier>
<name>void</name></type> <name>RtspClientDel</name><parameter_list>( <parameter><decl><type><name>rtsp_stream_t</name> <modifier>*</modifier></type><name>rtsp</name></decl></parameter>, <parameter><decl><type><name>rtsp_session_t</name> <modifier>*</modifier></type><name>session</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>TAB_REMOVE</name><argument_list>( <argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>sessionc</name></name></expr></argument>, <argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>sessionv</name></name></expr></argument>, <argument><expr><name>session</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<for>for<control>( <init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>session</name><operator>-&gt;</operator><name>trackc</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>RtspTrackClose</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>session</name><operator>-&gt;</operator><name>trackv</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>session</name><operator>-&gt;</operator><name>trackv</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>session</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>void</name></type> <name>RtspClientAlive</name><parameter_list>( <parameter><decl><type><name>rtsp_session_t</name> <modifier>*</modifier></type><name>session</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>session</name><operator>-&gt;</operator><name>stream</name><operator>-&gt;</operator><name>timeout</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>session</name><operator>-&gt;</operator><name>last_seen</name></name> <operator>=</operator> <call><name>vlc_tick_now</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RtspUpdateTimer</name><argument_list>(<argument><expr><name><name>session</name><operator>-&gt;</operator><name>stream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>dup_socket</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>oldfd</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>newfd</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><name>newfd</name> <operator>=</operator> <call><name>vlc_dup</name><argument_list>(<argument><expr><name>oldfd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<decl_stmt><decl><type><name>WSAPROTOCOL_INFO</name></type> <name>info</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>WSADuplicateSocket</name> <argument_list>(<argument><expr><name>oldfd</name></expr></argument>, <argument><expr><call><name>GetCurrentProcessId</name> <argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name>info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>newfd</name> <operator>=</operator> <call><name>WSASocket</name> <argument_list>(<argument><expr><name><name>info</name><operator>.</operator><name>iAddressFamily</name></name></expr></argument>, <argument><expr><name><name>info</name><operator>.</operator><name>iSocketType</name></name></expr></argument>,
<argument><expr><name><name>info</name><operator>.</operator><name>iProtocol</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>info</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<return>return <expr><name>newfd</name></expr>;</return>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>void</name></type> <name>RtspTrackClose</name><parameter_list>( <parameter><decl><type><name>rtsp_strack_t</name> <modifier>*</modifier></type><name>tr</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>tr</name><operator>-&gt;</operator><name>setup_fd</name></name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>tr</name><operator>-&gt;</operator><name>rtp_fd</name></name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>rtp_del_sink</name><argument_list>(<argument><expr><name><name>tr</name><operator>-&gt;</operator><name>sout_id</name></name></expr></argument>, <argument><expr><name><name>tr</name><operator>-&gt;</operator><name>rtp_fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>tr</name><operator>-&gt;</operator><name>rtp_fd</name></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>net_Close</name><argument_list>(<argument><expr><name><name>tr</name><operator>-&gt;</operator><name>setup_fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>tr</name><operator>-&gt;</operator><name>setup_fd</name></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <specifier>inline</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>transport_next</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter> )</parameter_list>
<block>{<block_content>

<expr_stmt><expr><name>str</name> <operator>=</operator> <call><name>strchr</name><argument_list>( <argument><expr><name>str</name></expr></argument>, <argument><expr><literal type="char">','</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name>str</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt> 

<expr_stmt><expr><name>str</name><operator>++</operator></expr>;</expr_stmt> 
<while>while<condition>( <expr><call><name>strchr</name><argument_list>( <argument><expr><literal type="string">"\r\n\t "</literal></expr></argument>, <argument><expr><operator>*</operator><name>str</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>str</name><operator>++</operator></expr>;</expr_stmt></block_content></block></while>

<return>return <expr><ternary><condition><expr><operator>(</operator><operator>*</operator><name>str</name><operator>)</operator></expr> ?</condition><then> <expr><name>str</name></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr>;</return>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <specifier>inline</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>parameter_next</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<while>while<condition>( <expr><call><name>strchr</name><argument_list>( <argument><expr><literal type="string">",;"</literal></expr></argument>, <argument><expr><operator>*</operator><name>str</name></expr></argument> )</argument_list></call> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>str</name><operator>++</operator></expr>;</expr_stmt></block_content></block></while>

<return>return <expr><ternary><condition><expr><operator>(</operator><operator>*</operator><name>str</name> <operator>==</operator> <literal type="char">';'</literal><operator>)</operator></expr> ?</condition><then> <expr><operator>(</operator><name>str</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr>;</return>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>vlc_tick_t</name></type> <name>ParseNPT</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>locale_t</name></type> <name>loc</name> <init>= <expr><call><name>newlocale</name> <argument_list>(<argument><expr><name>LC_NUMERIC_MASK</name></expr></argument>, <argument><expr><literal type="string">"C"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>locale_t</name></type> <name>oldloc</name> <init>= <expr><call><name>uselocale</name> <argument_list>(<argument><expr><name>loc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>hour</name></decl>, <decl><type ref="prev"/><name>min</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>sec</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>sscanf</name> <argument_list>(<argument><expr><name>str</name></expr></argument>, <argument><expr><literal type="string">"%u:%u:%f"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>hour</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>min</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>sec</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">3</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>sec</name> <operator>+=</operator> <operator>(</operator><operator>(</operator><name>hour</name> <operator>*</operator> <literal type="number">60</literal><operator>)</operator> <operator>+</operator> <name>min</name><operator>)</operator> <operator>*</operator> <literal type="number">60</literal></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else
if <condition>(<expr><call><name>sscanf</name> <argument_list>(<argument><expr><name>str</name></expr></argument>, <argument><expr><literal type="string">"%f"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>sec</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>sec</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>loc</name> <operator>!=</operator> <operator>(</operator><name>locale_t</name><operator>)</operator><literal type="number">0</literal></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>uselocale</name> <argument_list>(<argument><expr><name>oldloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>freelocale</name> <argument_list>(<argument><expr><name>loc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><ternary><condition><expr><name>sec</name> <operator>&lt;</operator> <literal type="number">0</literal></expr> ?</condition><then> <expr><operator>-</operator><literal type="number">1</literal></expr> </then><else>: <expr><call><name>vlc_tick_from_sec</name><argument_list>( <argument><expr><name>sec</name></expr></argument> )</argument_list></call></expr></else></ternary></expr>;</return>
</block_content>}</block></function>






<function><type><specifier>static</specifier> <name>int</name></type> <name>RtspHandler</name><parameter_list>( <parameter><decl><type><name>rtsp_stream_t</name> <modifier>*</modifier></type><name>rtsp</name></decl></parameter>, <parameter><decl><type><name>rtsp_stream_id_t</name> <modifier>*</modifier></type><name>id</name></decl></parameter>,
<parameter><decl><type><name>httpd_client_t</name> <modifier>*</modifier></type><name>cl</name></decl></parameter>,
<parameter><decl><type><name>httpd_message_t</name> <modifier>*</modifier></type><name>answer</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>httpd_message_t</name> <modifier>*</modifier></type><name>query</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>owner</name> <init>= <expr><name><name>rtsp</name><operator>-&gt;</operator><name>owner</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>psz_sesbuf</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_session</name> <init>= <expr><name>NULL</name></expr></init></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>psz</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>control</name><index>[<expr><sizeof>sizeof<argument_list>(<argument><expr><literal type="string">"rtsp://[]:12345"</literal></expr></argument>)</argument_list></sizeof> <operator>+</operator> <name>NI_MAXNUMERICHOST</name>
<operator>+</operator> <call><name>strlen</name><argument_list>( <argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>psz_path</name></name></expr></argument> )</argument_list></call></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>time_t</name></type> <name>now</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>time</name> <argument_list>(<argument><expr><operator>&amp;</operator><name>now</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>answer</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <name>query</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <name>cl</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return></block_content></block></if>
<else>else
<block>{<block_content>

<decl_stmt><decl><type><name>char</name></type> <name><name>ip</name><index>[<expr><name>NI_MAXNUMERICHOST</name></expr>]</index></name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>ptr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>port</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>httpd_ServerIP</name><argument_list>( <argument><expr><name>cl</name></expr></argument>, <argument><expr><name>ip</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>port</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>ptr</name> <operator>=</operator> <call><name>strchr</name><argument_list>( <argument><expr><name>ip</name></expr></argument>, <argument><expr><literal type="char">'%'</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name>ptr</name> <operator>!=</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><operator>*</operator><name>ptr</name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><call><name>strchr</name><argument_list>( <argument><expr><name>ip</name></expr></argument>, <argument><expr><literal type="char">':'</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>sprintf</name><argument_list>( <argument><expr><name>control</name></expr></argument>, <argument><expr><literal type="string">"rtsp://[%s]:%d%s"</literal></expr></argument>, <argument><expr><name>ip</name></expr></argument>, <argument><expr><name>port</name></expr></argument>, <argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>psz_path</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><call><name>sprintf</name><argument_list>( <argument><expr><name>control</name></expr></argument>, <argument><expr><literal type="string">"rtsp://%s:%d%s"</literal></expr></argument>, <argument><expr><name>ip</name></expr></argument>, <argument><expr><name>port</name></expr></argument>, <argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>psz_path</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
</block_content>}</block></else></if_stmt>


<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_proto</name></name> <operator>=</operator> <name>HTTPD_PROTO_RTSP</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_version</name></name><operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_type</name></name> <operator>=</operator> <name>HTTPD_MSG_ANSWER</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_body</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>p_body</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>httpd_MsgAdd</name><argument_list>( <argument><expr><name>answer</name></expr></argument>, <argument><expr><literal type="string">"Server"</literal></expr></argument>, <argument><expr><literal type="string">"VLC/%s"</literal></expr></argument>, <argument><expr><name>VERSION</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>


<decl_stmt><decl><type><name><name>struct</name> <name>tm</name></name></type> <name>ut</name></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>gmtime_r</name> <argument_list>(<argument><expr><operator>&amp;</operator><name>now</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>ut</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content> 
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name></type> <name><name>wdays</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="string">"Sun"</literal></expr>, <expr><literal type="string">"Mon"</literal></expr>, <expr><literal type="string">"Tue"</literal></expr>, <expr><literal type="string">"Wed"</literal></expr>, <expr><literal type="string">"Thu"</literal></expr>, <expr><literal type="string">"Fri"</literal></expr>, <expr><literal type="string">"Sat"</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name></type> <name><name>mons</name><index>[<expr><literal type="number">12</literal></expr>]</index><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="string">"Jan"</literal></expr>, <expr><literal type="string">"Feb"</literal></expr>, <expr><literal type="string">"Mar"</literal></expr>, <expr><literal type="string">"Apr"</literal></expr>, <expr><literal type="string">"May"</literal></expr>, <expr><literal type="string">"Jun"</literal></expr>,
<expr><literal type="string">"Jul"</literal></expr>, <expr><literal type="string">"Aug"</literal></expr>, <expr><literal type="string">"Sep"</literal></expr>, <expr><literal type="string">"Oct"</literal></expr>, <expr><literal type="string">"Nov"</literal></expr>, <expr><literal type="string">"Dec"</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>httpd_MsgAdd</name> <argument_list>(<argument><expr><name>answer</name></expr></argument>, <argument><expr><literal type="string">"Date"</literal></expr></argument>, <argument><expr><literal type="string">"%s, %02u %s %04u %02u:%02u:%02u GMT"</literal></expr></argument>,
<argument><expr><name><name>wdays</name><index>[<expr><name><name>ut</name><operator>.</operator><name>tm_wday</name></name></expr>]</index></name></expr></argument>, <argument><expr><name><name>ut</name><operator>.</operator><name>tm_mday</name></name></expr></argument>, <argument><expr><name><name>mons</name><index>[<expr><name><name>ut</name><operator>.</operator><name>tm_mon</name></name></expr>]</index></name></expr></argument>,
<argument><expr><literal type="number">1900</literal> <operator>+</operator> <name><name>ut</name><operator>.</operator><name>tm_year</name></name></expr></argument>, <argument><expr><name><name>ut</name><operator>.</operator><name>tm_hour</name></name></expr></argument>, <argument><expr><name><name>ut</name><operator>.</operator><name>tm_min</name></name></expr></argument>, <argument><expr><name><name>ut</name><operator>.</operator><name>tm_sec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>query</name><operator>-&gt;</operator><name>i_proto</name></name> <operator>!=</operator> <name>HTTPD_PROTO_RTSP</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_status</name></name> <operator>=</operator> <literal type="number">505</literal></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else
if<condition>( <expr><call><name>httpd_MsgGet</name><argument_list>( <argument><expr><name>query</name></expr></argument>, <argument><expr><literal type="string">"Require"</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <name>NULL</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_status</name></name> <operator>=</operator> <literal type="number">551</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>httpd_MsgAdd</name><argument_list>( <argument><expr><name>answer</name></expr></argument>, <argument><expr><literal type="string">"Unsupported"</literal></expr></argument>, <argument><expr><literal type="string">"%s"</literal></expr></argument>,
<argument><expr><call><name>httpd_MsgGet</name><argument_list>( <argument><expr><name>query</name></expr></argument>, <argument><expr><literal type="string">"Require"</literal></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else<block type="pseudo"><block_content>
<switch>switch<condition>( <expr><name><name>query</name><operator>-&gt;</operator><name>i_type</name></name></expr> )</condition>
<block>{<block_content>
<case>case <expr><name>HTTPD_MSG_DESCRIBE</name></expr>:</case>
<block>{<block_content> 
<if_stmt><if>if<condition>( <expr><name>id</name> <operator>!=</operator> <name>NULL</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_status</name></name> <operator>=</operator> <literal type="number">460</literal></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_status</name></name> <operator>=</operator> <literal type="number">200</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>httpd_MsgAdd</name><argument_list>( <argument><expr><name>answer</name></expr></argument>, <argument><expr><literal type="string">"Content-Type"</literal></expr></argument>, <argument><expr><literal type="string">"%s"</literal></expr></argument>, <argument><expr><literal type="string">"application/sdp"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>httpd_MsgAdd</name><argument_list>( <argument><expr><name>answer</name></expr></argument>, <argument><expr><literal type="string">"Content-Base"</literal></expr></argument>, <argument><expr><literal type="string">"%s"</literal></expr></argument>, <argument><expr><name>control</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>p_body</name></name> <operator>=</operator> <operator>(</operator><name>uint8_t</name> <operator>*</operator><operator>)</operator>
<call><name>SDPGenerate</name><argument_list>( <argument><expr><operator>(</operator><name>sout_stream_t</name> <operator>*</operator><operator>)</operator><name>owner</name></expr></argument>, <argument><expr><name>control</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name><name>answer</name><operator>-&gt;</operator><name>p_body</name></name> <operator>!=</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_body</name></name> <operator>=</operator> <call><name>strlen</name><argument_list>( <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><name><name>answer</name><operator>-&gt;</operator><name>p_body</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_status</name></name> <operator>=</operator> <literal type="number">500</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
<break>break;</break>
</block_content>}</block>

<case>case <expr><name>HTTPD_MSG_SETUP</name></expr>:</case>

<if_stmt><if>if<condition>( <expr><name>id</name> <operator>==</operator> <name>NULL</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_status</name></name> <operator>=</operator> <literal type="number">459</literal></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>psz_session</name> <operator>=</operator> <call><name>httpd_MsgGet</name><argument_list>( <argument><expr><name>query</name></expr></argument>, <argument><expr><literal type="string">"Session"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_status</name></name> <operator>=</operator> <literal type="number">461</literal></expr>;</expr_stmt>

<for>for<control>( <init><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>tpt</name> <init>= <expr><call><name>httpd_MsgGet</name><argument_list>( <argument><expr><name>query</name></expr></argument>, <argument><expr><literal type="string">"Transport"</literal></expr></argument> )</argument_list></call></expr></init></decl>;</init>
<condition><expr><name>tpt</name> <operator>!=</operator> <name>NULL</name></expr>;</condition>
<incr><expr><name>tpt</name> <operator>=</operator> <call><name>transport_next</name><argument_list>( <argument><expr><name>tpt</name></expr></argument> )</argument_list></call></expr></incr> )</control>
<block>{<block_content>
<decl_stmt><decl><type><name>bool</name></type> <name>b_multicast</name> <init>= <expr><name>true</name></expr></init></decl>, <decl><type ref="prev"/><name>b_unsupp</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_multicast_port_set</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>loport</name> <init>= <expr><literal type="number">5004</literal></expr></init></decl>, <decl><type ref="prev"/><name>hiport</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>unsigned</name></type> <name>mloport</name> <init>= <expr><literal type="number">5004</literal></expr></init></decl>, <decl><type ref="prev"/><name>mhiport</name> <init>= <expr><name>mloport</name> <operator>+</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>



<if_stmt><if>if<condition>( <expr><call><name>strncmp</name><argument_list>( <argument><expr><name>tpt</name></expr></argument>, <argument><expr><literal type="string">"RTP/AVP"</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>
<expr_stmt><expr><name>tpt</name> <operator>+=</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><call><name>strncmp</name><argument_list>( <argument><expr><name>tpt</name></expr></argument>, <argument><expr><literal type="string">"/UDP"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument> )</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>tpt</name> <operator>+=</operator> <literal type="number">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>( <expr><call><name>strchr</name><argument_list>( <argument><expr><literal type="string">";,"</literal></expr></argument>, <argument><expr><operator>*</operator><name>tpt</name></expr></argument> )</argument_list></call> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>


<for>for<control>( <init><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>opt</name> <init>= <expr><call><name>parameter_next</name><argument_list>( <argument><expr><name>tpt</name></expr></argument> )</argument_list></call></expr></init></decl>;</init>
<condition><expr><name>opt</name> <operator>!=</operator> <name>NULL</name></expr>;</condition>
<incr><expr><name>opt</name> <operator>=</operator> <call><name>parameter_next</name><argument_list>( <argument><expr><name>opt</name></expr></argument> )</argument_list></call></expr></incr> )</control>
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><call><name>strncmp</name><argument_list>( <argument><expr><name>opt</name></expr></argument>, <argument><expr><literal type="string">"multicast"</literal></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument> )</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>b_multicast</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else
if<condition>( <expr><call><name>strncmp</name><argument_list>( <argument><expr><name>opt</name></expr></argument>, <argument><expr><literal type="string">"unicast"</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument> )</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>b_multicast</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else
if<condition>( <expr><call><name>sscanf</name><argument_list>( <argument><expr><name>opt</name></expr></argument>, <argument><expr><literal type="string">"client_port=%u-%u"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>loport</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>hiport</name></expr></argument> )</argument_list></call>
<operator>==</operator> <literal type="number">2</literal></expr> )</condition><block type="pseudo"><block_content>
<empty_stmt>;</empty_stmt></block_content></block></if>
<if type="elseif">else
if<condition>( <expr><call><name>sscanf</name><argument_list>( <argument><expr><name>opt</name></expr></argument>, <argument><expr><literal type="string">"port=%u-%u"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>mloport</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>mhiport</name></expr></argument> )</argument_list></call>
<operator>==</operator> <literal type="number">2</literal></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>b_multicast_port_set</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else
if<condition>( <expr><call><name>strncmp</name><argument_list>( <argument><expr><name>opt</name></expr></argument>, <argument><expr><literal type="string">"mode="</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument> )</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr> )</condition>
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><call><name>strncasecmp</name><argument_list>( <argument><expr><name>opt</name> <operator>+</operator> <literal type="number">5</literal></expr></argument>, <argument><expr><literal type="string">"play"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument> )</argument_list></call>
<operator>&amp;&amp;</operator> <call><name>strncasecmp</name><argument_list>( <argument><expr><name>opt</name> <operator>+</operator> <literal type="number">5</literal></expr></argument>, <argument><expr><literal type="string">"\"PLAY\""</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument> )</argument_list></call></expr> )</condition>
<block>{<block_content>

<expr_stmt><expr><name>b_unsupp</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<if type="elseif">else
if<condition>( <expr><call><name>strncmp</name><argument_list>( <argument><expr><name>opt</name></expr></argument>,<argument><expr><literal type="string">"destination="</literal></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument> )</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_status</name></name> <operator>=</operator> <literal type="number">403</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>b_unsupp</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else
<block>{<block_content>













<expr_stmt><expr><name>b_unsupp</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></else></if_stmt>
</block_content>}</block></for>

<if_stmt><if>if<condition>( <expr><name>b_unsupp</name></expr> )</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name>b_multicast</name></expr> )</condition>
<block>{<block_content>
<decl_stmt><decl><type><name>char</name></type> <name><name>dst</name><index>[<expr><name>NI_MAXNUMERICHOST</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>dport</name></decl>, <decl><type ref="prev"/><name>ttl</name></decl>;</decl_stmt>
<if_stmt><if>if<condition>( <expr><name><name>id</name><operator>-&gt;</operator><name>mcast_fd</name></name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>net_GetPeerAddress</name><argument_list>(<argument><expr><name><name>id</name><operator>-&gt;</operator><name>mcast_fd</name></name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>dport</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if<condition>( <expr><name>b_multicast_port_set</name>
<operator>&amp;&amp;</operator> <operator>(</operator><operator>(</operator><name>unsigned</name><operator>)</operator><name>dport</name> <operator>!=</operator> <name>mloport</name>
<operator>||</operator> <operator>(</operator><name>unsigned</name><operator>)</operator><name>dport</name> <operator>+</operator> <literal type="number">1</literal> <operator>!=</operator> <name>mhiport</name><operator>)</operator></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_status</name></name> <operator>=</operator> <literal type="number">551</literal></expr>;</expr_stmt>
<continue>continue;</continue>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>ttl</name> <operator>=</operator> <call><name>var_InheritInteger</name><argument_list>(<argument><expr><name>owner</name></expr></argument>, <argument><expr><literal type="string">"ttl"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ttl</name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>


<expr_stmt><expr><name>ttl</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name>psz_session</name> <operator>==</operator> <name>NULL</name></expr> )</condition>
<block>{<block_content>

<expr_stmt><expr><call><name>snprintf</name><argument_list>( <argument><expr><name>psz_sesbuf</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><name>psz_sesbuf</name></expr></argument> )</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"%lu"</literal></expr></argument>,
<argument><expr><call><name>vlc_mrand48</name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>psz_session</name> <operator>=</operator> <name>psz_sesbuf</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_status</name></name> <operator>=</operator> <literal type="number">200</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>httpd_MsgAdd</name><argument_list>( <argument><expr><name>answer</name></expr></argument>, <argument><expr><literal type="string">"Transport"</literal></expr></argument>,
<argument><expr><literal type="string">"RTP/AVP/UDP;destination=%s;port=%u-%u;"</literal>
<literal type="string">"ttl=%d;mode=play"</literal></expr></argument>,
<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dport</name></expr></argument>, <argument><expr><name>dport</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>ttl</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>
<else>else
<block>{<block_content>
<decl_stmt><decl><type><name>char</name></type> <name><name>ip</name><index>[<expr><name>NI_MAXNUMERICHOST</name></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>src</name><index>[<expr><name>NI_MAXNUMERICHOST</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>rtsp_session_t</name> <modifier>*</modifier></type><name>ses</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>fd</name></decl>, <decl><type ref="prev"/><name>sport</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>ssrc</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>httpd_ClientIP</name><argument_list>( <argument><expr><name>cl</name></expr></argument>, <argument><expr><name>ip</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> )</argument_list></call> <operator>==</operator> <name>NULL</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_status</name></name> <operator>=</operator> <literal type="number">500</literal></expr>;</expr_stmt>
<continue>continue;</continue>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>fd</name> <operator>=</operator> <call><name>net_ConnectDgram</name><argument_list>( <argument><expr><name>owner</name></expr></argument>, <argument><expr><name>ip</name></expr></argument>, <argument><expr><name>loport</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>IPPROTO_UDP</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name>fd</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>owner</name></expr></argument>,
<argument><expr><literal type="string">"cannot create RTP socket for %s port %u"</literal></expr></argument>,
<argument><expr><name>ip</name></expr></argument>, <argument><expr><name>loport</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_status</name></name> <operator>=</operator> <literal type="number">500</literal></expr>;</expr_stmt>
<continue>continue;</continue>
</block_content>}</block></if></if_stmt>


<macro><name>setsockopt</name> <argument_list>(<argument>fd</argument>, <argument>SOL_SOCKET</argument>, <argument>SO_RCVBUF</argument>, <argument>&amp;(int){ <literal type="number">0</literal> }</argument>,
<argument>sizeof (int)</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
<expr_stmt><expr><call><name>net_GetSockAddress</name><argument_list>( <argument><expr><name>fd</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>sport</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>rtsp</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name>psz_session</name> <operator>==</operator> <name>NULL</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name>ses</name> <operator>=</operator> <call><name>RtspClientNew</name><argument_list>( <argument><expr><name>rtsp</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>snprintf</name><argument_list>( <argument><expr><name>psz_sesbuf</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><name>psz_sesbuf</name></expr></argument> )</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"%"</literal><name>PRIx64</name></expr></argument>,
<argument><expr><name><name>ses</name><operator>-&gt;</operator><name>id</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>psz_session</name> <operator>=</operator> <name>psz_sesbuf</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else
<block>{<block_content>
<expr_stmt><expr><name>ses</name> <operator>=</operator> <call><name>RtspClientGet</name><argument_list>( <argument><expr><name>rtsp</name></expr></argument>, <argument><expr><name>psz_session</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name>ses</name> <operator>==</operator> <name>NULL</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_status</name></name> <operator>=</operator> <literal type="number">454</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>rtsp</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>net_Close</name><argument_list>( <argument><expr><name>fd</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<continue>continue;</continue>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><call><name>RtspClientAlive</name><argument_list>(<argument><expr><name>ses</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>rtsp_strack_t</name> <modifier>*</modifier></type><name>tr</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>ses</name><operator>-&gt;</operator><name>trackc</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>ses</name><operator>-&gt;</operator><name>trackv</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>id</name> <operator>==</operator> <name>id</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>tr</name> <operator>=</operator> <name><name>ses</name><operator>-&gt;</operator><name>trackv</name></name> <operator>+</operator> <name>i</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>

<if_stmt><if>if <condition>(<expr><name>tr</name> <operator>==</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>

<decl_stmt><decl><type><name>rtsp_strack_t</name></type> <name>track</name> <init>= <expr><block>{ <expr><operator>.</operator><name>id</name> <operator>=</operator> <name>id</name></expr>,
<expr><operator>.</operator><name>sout_id</name> <operator>=</operator> <name><name>id</name><operator>-&gt;</operator><name>sout_id</name></name></expr>,
<expr><operator>.</operator><name>setup_fd</name> <operator>=</operator> <name>fd</name></expr>,
<expr><operator>.</operator><name>rtp_fd</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>ssrc</name> <operator>=</operator> <name><name>id</name><operator>-&gt;</operator><name>ssrc</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>TAB_APPEND</name><argument_list>(<argument><expr><name><name>ses</name><operator>-&gt;</operator><name>trackc</name></name></expr></argument>, <argument><expr><name><name>ses</name><operator>-&gt;</operator><name>trackv</name></name></expr></argument>, <argument><expr><name>track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>tr</name><operator>-&gt;</operator><name>setup_fd</name></name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition>
<block>{<block_content>


<expr_stmt><expr><name><name>tr</name><operator>-&gt;</operator><name>setup_fd</name></name> <operator>=</operator> <name>fd</name></expr>;</expr_stmt>
<expr_stmt><expr><name>ssrc</name> <operator>=</operator> <name><name>tr</name><operator>-&gt;</operator><name>ssrc</name></name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else
<block>{<block_content>



<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>rtsp</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_status</name></name> <operator>=</operator> <literal type="number">455</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>net_Close</name><argument_list>( <argument><expr><name>fd</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>rtsp</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>httpd_ServerIP</name><argument_list>( <argument><expr><name>cl</name></expr></argument>, <argument><expr><name>ip</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>



<if_stmt><if>if<condition>( <expr><call><name>strcmp</name><argument_list>( <argument><expr><name>src</name></expr></argument>, <argument><expr><name>ip</name></expr></argument> )</argument_list></call></expr> )</condition>
<block>{<block_content>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>ptr</name> <init>= <expr><call><name>strchr</name><argument_list>( <argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="char">'%'</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>( <expr><name>ptr</name> <operator>!=</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><operator>*</operator><name>ptr</name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> 
</block_content>}</block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name><name>src</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><call><name>httpd_MsgAdd</name><argument_list>( <argument><expr><name>answer</name></expr></argument>, <argument><expr><literal type="string">"Transport"</literal></expr></argument>,
<argument><expr><literal type="string">"RTP/AVP/UDP;unicast%s%s;"</literal>
<literal type="string">"client_port=%u-%u;server_port=%u-%u;"</literal>
<literal type="string">"ssrc=%08X;mode=play"</literal></expr></argument>,
<argument><expr><ternary><condition><expr><name><name>src</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr> ?</condition><then> <expr><literal type="string">";source="</literal></expr> </then><else>: <expr><literal type="string">""</literal></expr></else></ternary></expr></argument>, <argument><expr><name>src</name></expr></argument>,
<argument><expr><name>loport</name></expr></argument>, <argument><expr><name>loport</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>sport</name></expr></argument>, <argument><expr><name>sport</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>ssrc</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_status</name></name> <operator>=</operator> <literal type="number">200</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<break>break;</break>
</block_content>}</block></for>
<break>break;</break>

<case>case <expr><name>HTTPD_MSG_PLAY</name></expr>:</case>
<block>{<block_content>
<decl_stmt><decl><type><name>rtsp_session_t</name> <modifier>*</modifier></type><name>ses</name></decl>;</decl_stmt>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_status</name></name> <operator>=</operator> <literal type="number">200</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>psz_session</name> <operator>=</operator> <call><name>httpd_MsgGet</name><argument_list>( <argument><expr><name>query</name></expr></argument>, <argument><expr><literal type="string">"Session"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>start</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>, <decl><type ref="prev"/><name>end</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>, <decl><type ref="prev"/><name>npt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>range</name> <init>= <expr><call><name>httpd_MsgGet</name> <argument_list>(<argument><expr><name>query</name></expr></argument>, <argument><expr><literal type="string">"Range"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>range</name> <operator>!=</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>strncmp</name> <argument_list>(<argument><expr><name>range</name></expr></argument>, <argument><expr><literal type="string">"npt="</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_status</name></name> <operator>=</operator> <literal type="number">501</literal></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>start</name> <operator>=</operator> <call><name>ParseNPT</name> <argument_list>(<argument><expr><name>range</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>range</name> <operator>=</operator> <call><name>strchr</name><argument_list>(<argument><expr><name>range</name></expr></argument>, <argument><expr><literal type="char">'-'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>range</name> <operator>!=</operator> <name>NULL</name> <operator>&amp;&amp;</operator> <operator>*</operator><operator>(</operator><name>range</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>end</name> <operator>=</operator> <call><name>ParseNPT</name> <argument_list>(<argument><expr><name>range</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>end</name> <operator>&gt;=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>end</name> <operator>&lt;</operator> <name>start</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_status</name></name> <operator>=</operator> <literal type="number">457</literal></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if>



<if type="elseif">else if <condition>(<expr><name>start</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>||</operator> <name>end</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_status</name></name> <operator>=</operator> <literal type="number">456</literal></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>rtsp</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>ses</name> <operator>=</operator> <call><name>RtspClientGet</name><argument_list>( <argument><expr><name>rtsp</name></expr></argument>, <argument><expr><name>psz_session</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name>ses</name> <operator>!=</operator> <name>NULL</name></expr> )</condition>
<block>{<block_content>
<decl_stmt><decl><type><name>char</name></type> <name><name>info</name><index>[<expr><name><name>ses</name><operator>-&gt;</operator><name>trackc</name></name> <operator>*</operator> <operator>(</operator> <call><name>strlen</name><argument_list>( <argument><expr><name>control</name></expr></argument> )</argument_list></call> <operator>+</operator> <name>TRACK_PATH_SIZE</name>
<operator>+</operator> <sizeof>sizeof<argument_list>(<argument><expr><literal type="string">"url=;seq=65535;rtptime=4294967295, "</literal></expr></argument>)</argument_list></sizeof>
<operator>-</operator> <literal type="number">1</literal> <operator>)</operator> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>infolen</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>RtspClientAlive</name><argument_list>(<argument><expr><name>ses</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>sout_stream_id_sys_t</name> <modifier>*</modifier></type><name>sout_id</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>ts</name> <init>= <expr><call><name>rtp_get_ts</name><argument_list>(<argument><expr><operator>(</operator><name>sout_stream_t</name> <operator>*</operator><operator>)</operator><name>owner</name></expr></argument>,
<argument><expr><name>sout_id</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>npt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>ses</name><operator>-&gt;</operator><name>trackc</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>
<block>{<block_content>
<decl_stmt><decl><type><name>rtsp_strack_t</name> <modifier>*</modifier></type><name>tr</name> <init>= <expr><name><name>ses</name><operator>-&gt;</operator><name>trackv</name></name> <operator>+</operator> <name>i</name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>( <expr><operator>(</operator> <name>id</name> <operator>==</operator> <name>NULL</name> <operator>)</operator> <operator>||</operator> <operator>(</operator> <name><name>tr</name><operator>-&gt;</operator><name>id</name></name> <operator>==</operator> <name>id</name> <operator>)</operator></expr> )</condition>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>tr</name><operator>-&gt;</operator><name>setup_fd</name></name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>seq</name></decl>;</decl_stmt>
<if_stmt><if>if<condition>( <expr><name><name>tr</name><operator>-&gt;</operator><name>rtp_fd</name></name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition>
<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>tr</name><operator>-&gt;</operator><name>sout_id</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>seq</name> <operator>=</operator> <name><name>tr</name><operator>-&gt;</operator><name>seq_init</name></name></expr>;</expr_stmt></block_content></block></if>
<else>else
<block>{<block_content>

<expr_stmt><expr><name><name>tr</name><operator>-&gt;</operator><name>rtp_fd</name></name> <operator>=</operator> <call><name>dup_socket</name><argument_list>(<argument><expr><name><name>tr</name><operator>-&gt;</operator><name>setup_fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>tr</name><operator>-&gt;</operator><name>rtp_fd</name></name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>rtp_add_sink</name><argument_list>( <argument><expr><name><name>tr</name><operator>-&gt;</operator><name>sout_id</name></name></expr></argument>, <argument><expr><name><name>tr</name><operator>-&gt;</operator><name>rtp_fd</name></name></expr></argument>,
<argument><expr><name>false</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>seq</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if>
<else>else
<block>{<block_content>

<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><name><name>tr</name><operator>-&gt;</operator><name>sout_id</name></name> <operator>!=</operator> <name>NULL</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>seq</name> <operator>=</operator> <call><name>rtp_get_seq</name><argument_list>( <argument><expr><name><name>tr</name><operator>-&gt;</operator><name>sout_id</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>url</name> <init>= <expr><call><name>RtspAppendTrackPath</name><argument_list>( <argument><expr><name><name>tr</name><operator>-&gt;</operator><name>id</name></name></expr></argument>, <argument><expr><name>control</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>infolen</name> <operator>+=</operator> <call><name>sprintf</name><argument_list>( <argument><expr><name>info</name> <operator>+</operator> <name>infolen</name></expr></argument>,
<argument><expr><literal type="string">"url=%s;seq=%u;rtptime=%u, "</literal></expr></argument>,
<argument><expr><ternary><condition><expr><name>url</name> <operator>!=</operator> <name>NULL</name></expr> ?</condition><then> <expr><name>url</name></expr> </then><else>: <expr><literal type="string">""</literal></expr></else></ternary></expr></argument>, <argument><expr><name>seq</name></expr></argument>,
<argument><expr><call><name>rtp_compute_ts</name><argument_list>( <argument><expr><name><name>tr</name><operator>-&gt;</operator><name>id</name><operator>-&gt;</operator><name>clock_rate</name></name></expr></argument>, <argument><expr><name>ts</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>url</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
<if_stmt><if>if<condition>( <expr><name>infolen</name> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>info</name><index>[<expr><name>infolen</name> <operator>-</operator> <literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>httpd_MsgAdd</name><argument_list>( <argument><expr><name>answer</name></expr></argument>, <argument><expr><literal type="string">"RTP-Info"</literal></expr></argument>, <argument><expr><literal type="string">"%s"</literal></expr></argument>, <argument><expr><name>info</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>rtsp</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>ses</name> <operator>!=</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>
<decl_stmt><decl><type><name>double</name></type> <name>f_npt</name> <init>= <expr><call><name>secf_from_vlc_tick</name><argument_list>(<argument><expr><name>npt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>httpd_MsgAdd</name><argument_list>( <argument><expr><name>answer</name></expr></argument>, <argument><expr><literal type="string">"Range"</literal></expr></argument>, <argument><expr><literal type="string">"npt=%f-"</literal></expr></argument>, <argument><expr><name>f_npt</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><call><name>httpd_MsgGet</name><argument_list>( <argument><expr><name>query</name></expr></argument>, <argument><expr><literal type="string">"Scale"</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>httpd_MsgAdd</name><argument_list>( <argument><expr><name>answer</name></expr></argument>, <argument><expr><literal type="string">"Scale"</literal></expr></argument>, <argument><expr><literal type="string">"1."</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<break>break;</break>
</block_content>}</block>

<case>case <expr><name>HTTPD_MSG_PAUSE</name></expr>:</case>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>id</name> <operator>==</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_status</name></name> <operator>=</operator> <literal type="number">405</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>httpd_MsgAdd</name><argument_list>( <argument><expr><name>answer</name></expr></argument>, <argument><expr><literal type="string">"Allow"</literal></expr></argument>,
<argument><expr><literal type="string">"DESCRIBE, TEARDOWN, PLAY, GET_PARAMETER"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>rtsp_session_t</name> <modifier>*</modifier></type><name>ses</name></decl>;</decl_stmt>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_status</name></name> <operator>=</operator> <literal type="number">200</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>psz_session</name> <operator>=</operator> <call><name>httpd_MsgGet</name><argument_list>( <argument><expr><name>query</name></expr></argument>, <argument><expr><literal type="string">"Session"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>rtsp</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>ses</name> <operator>=</operator> <call><name>RtspClientGet</name><argument_list>( <argument><expr><name>rtsp</name></expr></argument>, <argument><expr><name>psz_session</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ses</name> <operator>!=</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>id</name> <operator>!=</operator> <name>NULL</name></expr>)</condition> 
<block>{<block_content>
<decl_stmt><decl><type><name>bool</name></type> <name>found</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>
<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>ses</name><operator>-&gt;</operator><name>trackc</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
<block>{<block_content>
<decl_stmt><decl><type><name>rtsp_strack_t</name> <modifier>*</modifier></type><name>tr</name> <init>= <expr><name><name>ses</name><operator>-&gt;</operator><name>trackv</name></name> <operator>+</operator> <name>i</name></expr></init></decl>;</decl_stmt><empty_stmt>;</empty_stmt>
<if_stmt><if>if <condition>(<expr><name><name>tr</name><operator>-&gt;</operator><name>id</name></name> <operator>==</operator> <name>id</name></expr>)</condition>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>tr</name><operator>-&gt;</operator><name>setup_fd</name></name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>

<expr_stmt><expr><name>found</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>tr</name><operator>-&gt;</operator><name>rtp_fd</name></name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>rtp_del_sink</name><argument_list>(<argument><expr><name><name>tr</name><operator>-&gt;</operator><name>sout_id</name></name></expr></argument>, <argument><expr><name><name>tr</name><operator>-&gt;</operator><name>rtp_fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>tr</name><operator>-&gt;</operator><name>rtp_fd</name></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>found</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_status</name></name> <operator>=</operator> <literal type="number">455</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>RtspClientAlive</name><argument_list>(<argument><expr><name>ses</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>rtsp</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block>

<case>case <expr><name>HTTPD_MSG_GETPARAMETER</name></expr>:</case>
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><name><name>query</name><operator>-&gt;</operator><name>i_body</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_status</name></name> <operator>=</operator> <literal type="number">451</literal></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>psz_session</name> <operator>=</operator> <call><name>httpd_MsgGet</name><argument_list>( <argument><expr><name>query</name></expr></argument>, <argument><expr><literal type="string">"Session"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_status</name></name> <operator>=</operator> <literal type="number">200</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>rtsp</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>rtsp_session_t</name> <modifier>*</modifier></type><name>ses</name> <init>= <expr><call><name>RtspClientGet</name><argument_list>( <argument><expr><name>rtsp</name></expr></argument>, <argument><expr><name>psz_session</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>ses</name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>RtspClientAlive</name><argument_list>(<argument><expr><name>ses</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>rtsp</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block>

<case>case <expr><name>HTTPD_MSG_TEARDOWN</name></expr>:</case>
<block>{<block_content>
<decl_stmt><decl><type><name>rtsp_session_t</name> <modifier>*</modifier></type><name>ses</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>answer</name><operator>-&gt;</operator><name>i_status</name></name> <operator>=</operator> <literal type="number">200</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>psz_session</name> <operator>=</operator> <call><name>httpd_MsgGet</name><argument_list>( <argument><expr><name>query</name></expr></argument>, <argument><expr><literal type="string">"Session"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>rtsp</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>ses</name> <operator>=</operator> <call><name>RtspClientGet</name><argument_list>( <argument><expr><name>rtsp</name></expr></argument>, <argument><expr><name>psz_session</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name>ses</name> <operator>!=</operator> <name>NULL</name></expr> )</condition>
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><name>id</name> <operator>==</operator> <name>NULL</name></expr> )</condition> 
<block>{<block_content>
<expr_stmt><expr><call><name>RtspClientDel</name><argument_list>( <argument><expr><name>rtsp</name></expr></argument>, <argument><expr><name>ses</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RtspUpdateTimer</name><argument_list>(<argument><expr><name>rtsp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else 
<block>{<block_content>
<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>ses</name><operator>-&gt;</operator><name>trackc</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><name><name>ses</name><operator>-&gt;</operator><name>trackv</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>id</name> <operator>==</operator> <name>id</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>RtspTrackClose</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>ses</name><operator>-&gt;</operator><name>trackv</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>TAB_ERASE</name><argument_list>(<argument><expr><name><name>ses</name><operator>-&gt;</operator><name>trackc</name></name></expr></argument>, <argument><expr><name><name>ses</name><operator>-&gt;</operator><name>trackv</name></name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>RtspClientAlive</name><argument_list>(<argument><expr><name>ses</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>rtsp</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block>

<default>default:</default>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></switch></block_content></block></else></if_stmt>

<if_stmt><if>if<condition>( <expr><name>psz_session</name></expr> )</condition>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>rtsp</name><operator>-&gt;</operator><name>timeout</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>httpd_MsgAdd</name><argument_list>( <argument><expr><name>answer</name></expr></argument>, <argument><expr><literal type="string">"Session"</literal></expr></argument>, <argument><expr><literal type="string">"%s;timeout=%"</literal> <name>PRIu64</name></expr></argument>, <argument><expr><name>psz_session</name></expr></argument>,
<argument><expr><call><name>SEC_FROM_VLC_TICK</name><argument_list>(<argument><expr><name><name>rtsp</name><operator>-&gt;</operator><name>timeout</name></name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><call><name>httpd_MsgAdd</name><argument_list>( <argument><expr><name>answer</name></expr></argument>, <argument><expr><literal type="string">"Session"</literal></expr></argument>, <argument><expr><literal type="string">"%s"</literal></expr></argument>, <argument><expr><name>psz_session</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>httpd_MsgAdd</name><argument_list>( <argument><expr><name>answer</name></expr></argument>, <argument><expr><literal type="string">"Content-Length"</literal></expr></argument>, <argument><expr><literal type="string">"%d"</literal></expr></argument>, <argument><expr><name><name>answer</name><operator>-&gt;</operator><name>i_body</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>httpd_MsgAdd</name><argument_list>( <argument><expr><name>answer</name></expr></argument>, <argument><expr><literal type="string">"Cache-Control"</literal></expr></argument>, <argument><expr><literal type="string">"no-cache"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>psz</name> <operator>=</operator> <call><name>httpd_MsgGet</name><argument_list>( <argument><expr><name>query</name></expr></argument>, <argument><expr><literal type="string">"Cseq"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name>psz</name> <operator>!=</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>httpd_MsgAdd</name><argument_list>( <argument><expr><name>answer</name></expr></argument>, <argument><expr><literal type="string">"Cseq"</literal></expr></argument>, <argument><expr><literal type="string">"%s"</literal></expr></argument>, <argument><expr><name>psz</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><name>psz</name> <operator>=</operator> <call><name>httpd_MsgGet</name><argument_list>( <argument><expr><name>query</name></expr></argument>, <argument><expr><literal type="string">"Timestamp"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name>psz</name> <operator>!=</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>httpd_MsgAdd</name><argument_list>( <argument><expr><name>answer</name></expr></argument>, <argument><expr><literal type="string">"Timestamp"</literal></expr></argument>, <argument><expr><literal type="string">"%s"</literal></expr></argument>, <argument><expr><name>psz</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>int</name></type> <name>RtspCallback</name><parameter_list>( <parameter><decl><type><name>httpd_callback_sys_t</name> <modifier>*</modifier></type><name>p_args</name></decl></parameter>,
<parameter><decl><type><name>httpd_client_t</name> <modifier>*</modifier></type><name>cl</name></decl></parameter>,
<parameter><decl><type><name>httpd_message_t</name> <modifier>*</modifier></type><name>answer</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>httpd_message_t</name> <modifier>*</modifier></type><name>query</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>RtspHandler</name><argument_list>( <argument><expr><operator>(</operator><name>rtsp_stream_t</name> <operator>*</operator><operator>)</operator><name>p_args</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>cl</name></expr></argument>, <argument><expr><name>answer</name></expr></argument>, <argument><expr><name>query</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>int</name></type> <name>RtspCallbackId</name><parameter_list>( <parameter><decl><type><name>httpd_callback_sys_t</name> <modifier>*</modifier></type><name>p_args</name></decl></parameter>,
<parameter><decl><type><name>httpd_client_t</name> <modifier>*</modifier></type><name>cl</name></decl></parameter>,
<parameter><decl><type><name>httpd_message_t</name> <modifier>*</modifier></type><name>answer</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>httpd_message_t</name> <modifier>*</modifier></type><name>query</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>rtsp_stream_id_t</name> <modifier>*</modifier></type><name>id</name> <init>= <expr><operator>(</operator><name>rtsp_stream_id_t</name> <operator>*</operator><operator>)</operator><name>p_args</name></expr></init></decl>;</decl_stmt>
<return>return <expr><call><name>RtspHandler</name><argument_list>( <argument><expr><name><name>id</name><operator>-&gt;</operator><name>stream</name></name></expr></argument>, <argument><expr><name>id</name></expr></argument>, <argument><expr><name>cl</name></expr></argument>, <argument><expr><name>answer</name></expr></argument>, <argument><expr><name>query</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>
</unit>
