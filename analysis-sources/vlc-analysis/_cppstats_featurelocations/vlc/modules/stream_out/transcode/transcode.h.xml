<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\stream_out\transcode\transcode.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_picture_fifo.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_filter.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_codec.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"encoder/encoder.h"</cpp:file></cpp:include>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MASTER_SYNC_MAX_DRIFT</name></cpp:macro> <cpp:value>VLC_TICK_FROM_MS(100)</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_filters</name></decl>;</decl_stmt>
<union>union
<block>{
<struct>struct
<block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_deinterlace</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>config_chain_t</name> <modifier>*</modifier></type><name>p_deinterlace_cfg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_spu_sources</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_reorient</name></decl>;</decl_stmt>
}</block> <decl><name>video</name></decl>;</struct>
}</block>;</union>
}</block></struct></type> <name>sout_filters_config_t</name>;</typedef>

<function><type><specifier>static</specifier> <specifier>inline</specifier>
<name>void</name></type> <name>sout_filters_config_init</name><parameter_list>( <parameter><decl><type><name>sout_filters_config_t</name> <modifier>*</modifier></type><name>p_cfg</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>memset</name><argument_list>( <argument><expr><name>p_cfg</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>p_cfg</name></expr></argument>)</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier>
<name>void</name></type> <name>sout_filters_config_clean</name><parameter_list>( <parameter><decl><type><name>sout_filters_config_t</name> <modifier>*</modifier></type><name>p_cfg</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_cfg</name><operator>-&gt;</operator><name>psz_filters</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name><name>p_cfg</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>psz_deinterlace</name></name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_cfg</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>psz_deinterlace</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>config_ChainDestroy</name><argument_list>( <argument><expr><name><name>p_cfg</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>p_deinterlace_cfg</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_cfg</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>psz_spu_sources</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<typedef>typedef <type><name><name>struct</name> <name>sout_stream_id_sys_t</name></name></type> <name>sout_stream_id_sys_t</name>;</typedef>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>bool</name></type> <name>b_soverlay</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>transcode_encoder_config_t</name></type> <name>aenc_cfg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>sout_filters_config_t</name></type> <name>afilters_cfg</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>transcode_encoder_config_t</name></type> <name>venc_cfg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>sout_filters_config_t</name></type> <name>vfilters_cfg</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>transcode_encoder_config_t</name></type> <name>senc_cfg</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>lock</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_master_sync</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>sout_stream_id_sys_t</name> <modifier>*</modifier></type><name>id_master_sync</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>sout_stream_id_sys_t</name> <modifier>*</modifier></type><name>id_video</name></decl>;</decl_stmt>

}</block></struct></type> <name>sout_stream_sys_t</name>;</typedef>

<struct_decl>struct <name>aout_filters</name>;</struct_decl>

<struct>struct <name>sout_stream_id_sys_t</name>
<block>{
<decl_stmt><decl><type><name>bool</name></type> <name>b_transcode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_error</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>downstream_id</name></decl>;</decl_stmt>
<function_decl><type><name>void</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>pf_transcode_downstream_add</name>)<parameter_list>( <parameter><decl><type><name>sout_stream_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type><name>orig</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type><name>current</name></decl></parameter> )</parameter_list>;</function_decl>


<decl_stmt><decl><type><name>decoder_t</name> <modifier>*</modifier></type><name>p_decoder</name></decl>;</decl_stmt>

<struct>struct
<block>{
<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>lock</name></decl>;</decl_stmt>
<union>union
<block>{
<struct>struct <block>{
<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>first</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>last</name></decl>;</decl_stmt>
}</block> <decl><name>pic</name></decl>;</struct>
<struct>struct <block>{
<decl_stmt><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>first</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>subpicture_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>last</name></decl>;</decl_stmt>
}</block> <decl><name>spu</name></decl>;</struct>
<struct>struct <block>{
<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>first</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>last</name></decl>;</decl_stmt>
}</block> <decl><name>audio</name></decl>;</struct>
}</block>;</union>
}</block> <decl><name>fifo</name></decl>;</struct>

<union>union
<block>{
<struct>struct
<block>{
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>pf_drift_validate</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbdata</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
}</block>;</struct>
<struct>struct
<block>{
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>pf_send_subpicture</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbdata</name></decl></parameter>, <parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>pf_get_output_dimensions</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbdata</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>vlc_tick_t</name></type> (<modifier>*</modifier><name>pf_get_master_drift</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbdata</name></decl></parameter>)</parameter_list>;</function_decl>
}</block>;</struct>
}</block>;</union>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>callback_data</name></decl>;</decl_stmt>

<union>union
<block>{
<struct>struct
<block>{
<decl_stmt><decl><type><name>filter_chain_t</name> <modifier>*</modifier></type><name>p_f_chain</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>filter_chain_t</name> <modifier>*</modifier></type><name>p_conv_nonstatic</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>filter_chain_t</name> <modifier>*</modifier></type><name>p_conv_static</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>filter_chain_t</name> <modifier>*</modifier></type><name>p_uf_chain</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>filter_chain_t</name> <modifier>*</modifier></type><name>p_final_conv_static</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_blender_t</name> <modifier>*</modifier></type><name>p_spu_blender</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>spu_t</name> <modifier>*</modifier></type><name>p_spu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_decoder_device</name> <modifier>*</modifier></type><name>dec_dev</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type><name>enc_vctx_in</name></decl>;</decl_stmt>
}</block>;</struct>
<struct>struct
<block>{
<decl_stmt><decl><type><name><name>struct</name> <name>aout_filters</name></name> <modifier>*</modifier></type><name>p_af_chain</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>audio_format_t</name></type> <name>fmt_input_audio</name></decl>;</decl_stmt>
}</block>;</struct>
}</block>;</union>


<decl_stmt><decl><type><name>es_format_t</name></type> <name>decoder_out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type><name>decoder_vctx_out</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>sout_filters_config_t</name> <modifier>*</modifier></type><name>p_filterscfg</name></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>transcode_encoder_config_t</name> <modifier>*</modifier></type><name>p_enccfg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>transcode_encoder_t</name> <modifier>*</modifier></type><name>encoder</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>date_t</name></type> <name>next_input_pts</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>i_drift</name></decl>;</decl_stmt> 
}</block>;</struct>

<struct>struct <name>decoder_owner</name>
<block>{
<decl_stmt><decl><type><name>decoder_t</name></type> <name>dec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_obj</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>sout_stream_id_sys_t</name> <modifier>*</modifier></type><name>id</name></decl>;</decl_stmt>
}</block>;</struct>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name><name>struct</name> <name>decoder_owner</name></name> <modifier>*</modifier></type><name>dec_get_owner</name><parameter_list>( <parameter><decl><type><name>decoder_t</name> <modifier>*</modifier></type><name>p_dec</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>container_of</name><argument_list>( <argument><expr><name>p_dec</name></expr></argument>, <argument><expr>struct <name>decoder_owner</name></expr></argument>, <argument><expr><name>dec</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>es_format_SetMeta</name><parameter_list>( <parameter><decl><type><name>es_format_t</name> <modifier>*</modifier></type><name>p_dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type><name>p_src</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>p_dst</name><operator>-&gt;</operator><name>i_group</name></name> <operator>=</operator> <name><name>p_src</name><operator>-&gt;</operator><name>i_group</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_dst</name><operator>-&gt;</operator><name>i_id</name></name> <operator>=</operator> <name><name>p_src</name><operator>-&gt;</operator><name>i_id</name></name></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name><name>p_src</name><operator>-&gt;</operator><name>psz_language</name></name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_dst</name><operator>-&gt;</operator><name>psz_language</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_dst</name><operator>-&gt;</operator><name>psz_language</name></name> <operator>=</operator> <call><name>strdup</name><argument_list>( <argument><expr><name><name>p_src</name><operator>-&gt;</operator><name>psz_language</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if<condition>( <expr><name><name>p_src</name><operator>-&gt;</operator><name>psz_description</name></name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_dst</name><operator>-&gt;</operator><name>psz_description</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_dst</name><operator>-&gt;</operator><name>psz_description</name></name> <operator>=</operator> <call><name>strdup</name><argument_list>( <argument><expr><name><name>p_src</name><operator>-&gt;</operator><name>psz_description</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>transcode_remove_filters</name><parameter_list>( <parameter><decl><type><name>filter_chain_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><operator>*</operator><name>pp</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>filter_chain_Delete</name><argument_list>( <argument><expr><operator>*</operator><name>pp</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>pp</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>



<function_decl><type><name>void</name></type> <name>transcode_spu_clean</name> <parameter_list>( <parameter><decl><type><name>sout_stream_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>sout_stream_id_sys_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>transcode_spu_process</name><parameter_list>( <parameter><decl><type><name>sout_stream_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>sout_stream_id_sys_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>block_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>block_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>transcode_spu_init</name> <parameter_list>( <parameter><decl><type><name>sout_stream_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>sout_stream_id_sys_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>void</name></type> <name>transcode_audio_clean</name> <parameter_list>( <parameter><decl><type><name>sout_stream_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>sout_stream_id_sys_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>transcode_audio_process</name><parameter_list>( <parameter><decl><type><name>sout_stream_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>sout_stream_id_sys_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>block_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>block_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>transcode_audio_init</name> <parameter_list>( <parameter><decl><type><name>sout_stream_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>sout_stream_id_sys_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>void</name></type> <name>transcode_video_clean</name> <parameter_list>( <parameter><decl><type><name>sout_stream_id_sys_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>transcode_video_process</name><parameter_list>( <parameter><decl><type><name>sout_stream_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>sout_stream_id_sys_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>block_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>block_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>transcode_video_get_output_dimensions</name><parameter_list>( <parameter><decl><type><name>sout_stream_id_sys_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>w</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>h</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>transcode_video_push_spu</name><parameter_list>( <parameter><decl><type><name>sout_stream_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>sout_stream_id_sys_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>transcode_video_init</name> <parameter_list>( <parameter><decl><type><name>sout_stream_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>sout_stream_id_sys_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
</unit>
