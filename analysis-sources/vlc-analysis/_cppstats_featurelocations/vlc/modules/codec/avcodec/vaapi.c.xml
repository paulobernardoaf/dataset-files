<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\codec\avcodec\vaapi.c">























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_fourcc.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_picture.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_picture_pool.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>VLC_VA_BACKEND_DRM</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/types.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/stat.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;fcntl.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_fs.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;va/va_drm.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;libavcodec/avcodec.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;libavcodec/vaapi.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"va.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../hw/vaapi/vlc_vaapi.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"va_surface.h"</cpp:file></cpp:include>

<struct>struct <name>vlc_va_sys_t</name>
<block>{
<decl_stmt><decl><type><name><name>struct</name> <name>vaapi_context</name></name></type> <name>hw_ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type><name>vctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>va_pool_t</name> <modifier>*</modifier></type><name>va_pool</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VASurfaceID</name></type> <name><name>render_targets</name><index>[<expr><name>MAX_SURFACE_COUNT</name></expr>]</index></name></decl>;</decl_stmt>
}</block>;</struct>

<function><type><specifier>static</specifier> <name>int</name></type> <name>GetVaProfile</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVCodecContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type><name>fmt_in</name></decl></parameter>,
<parameter><decl><type><name>VAProfile</name> <modifier>*</modifier></type><name>va_profile</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>vlc_chroma</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>pic_count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>VAProfile</name></type> <name>i_profile</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>count</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_vlc_chroma</name> <init>= <expr><name>VLC_CODEC_VAAPI_420</name></expr></init></decl>;</decl_stmt>

<switch>switch<condition>(<expr><name><name>ctx</name><operator>-&gt;</operator><name>codec_id</name></name></expr>)</condition>
<block>{<block_content>
<case>case <expr><name>AV_CODEC_ID_MPEG1VIDEO</name></expr>:</case>
<case>case <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>:</case>
<expr_stmt><expr><name>i_profile</name> <operator>=</operator> <name>VAProfileMPEG2Main</name></expr>;</expr_stmt>
<expr_stmt><expr><name>count</name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>AV_CODEC_ID_MPEG4</name></expr>:</case>
<expr_stmt><expr><name>i_profile</name> <operator>=</operator> <name>VAProfileMPEG4AdvancedSimple</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>AV_CODEC_ID_WMV3</name></expr>:</case>
<expr_stmt><expr><name>i_profile</name> <operator>=</operator> <name>VAProfileVC1Main</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>AV_CODEC_ID_VC1</name></expr>:</case>
<expr_stmt><expr><name>i_profile</name> <operator>=</operator> <name>VAProfileVC1Advanced</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>AV_CODEC_ID_H264</name></expr>:</case>
<expr_stmt><expr><name>i_profile</name> <operator>=</operator> <name>VAProfileH264High</name></expr>;</expr_stmt>
<expr_stmt><expr><name>count</name> <operator>=</operator> <literal type="number">18</literal></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>AV_CODEC_ID_HEVC</name></expr>:</case>
<if_stmt><if>if <condition>(<expr><name><name>fmt_in</name><operator>-&gt;</operator><name>i_profile</name></name> <operator>==</operator> <name>FF_PROFILE_HEVC_MAIN</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>i_profile</name> <operator>=</operator> <name>VAProfileHEVCMain</name></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name><name>fmt_in</name><operator>-&gt;</operator><name>i_profile</name></name> <operator>==</operator> <name>FF_PROFILE_HEVC_MAIN_10</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>i_profile</name> <operator>=</operator> <name>VAProfileHEVCMain10</name></expr>;</expr_stmt>
<expr_stmt><expr><name>i_vlc_chroma</name> <operator>=</operator> <name>VLC_CODEC_VAAPI_420_10BPP</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else<block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></else></if_stmt>
<expr_stmt><expr><name>count</name> <operator>=</operator> <literal type="number">18</literal></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>AV_CODEC_ID_VP8</name></expr>:</case>
<expr_stmt><expr><name>i_profile</name> <operator>=</operator> <name>VAProfileVP8Version0_3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>count</name> <operator>=</operator> <literal type="number">5</literal></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>AV_CODEC_ID_VP9</name></expr>:</case>
<if_stmt><if>if <condition>(<expr><name><name>ctx</name><operator>-&gt;</operator><name>profile</name></name> <operator>==</operator> <name>FF_PROFILE_VP9_0</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>i_profile</name> <operator>=</operator> <name>VAProfileVP9Profile0</name></expr>;</expr_stmt></block_content></block></if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>VA_CHECK_VERSION</name><argument_list>( <argument><expr><literal type="number">0</literal><operator>,</operator> <literal type="number">39</literal><operator>,</operator> <literal type="number">0</literal></expr></argument> )</argument_list></call></expr></cpp:if>
<if type="elseif">else if <condition>(<expr><name><name>ctx</name><operator>-&gt;</operator><name>profile</name></name> <operator>==</operator> <name>FF_PROFILE_VP9_2</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>i_profile</name> <operator>=</operator> <name>VAProfileVP9Profile2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>i_vlc_chroma</name> <operator>=</operator> <name>VLC_CODEC_VAAPI_420_10BPP</name></expr>;</expr_stmt>
</block_content>}</block></if>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<else>else<block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></else></if_stmt>
<expr_stmt><expr><name>count</name> <operator>=</operator> <literal type="number">10</literal></expr>;</expr_stmt>
<break>break;</break>
<default>default:</default>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></switch>

<expr_stmt><expr><operator>*</operator><name>va_profile</name> <operator>=</operator> <name>i_profile</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>pic_count</name> <operator>=</operator> <name>count</name> <operator>+</operator> <name><name>ctx</name><operator>-&gt;</operator><name>thread_count</name></name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>vlc_chroma</name> <operator>=</operator> <name>i_vlc_chroma</name></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>vaapi_pic_context</name></name></type> <name>ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_va_surface_t</name> <modifier>*</modifier></type><name>va_surface</name></decl>;</decl_stmt>
}</block></struct></type> <name>vaapi_dec_pic_context</name>;</typedef>

<function><type><specifier>static</specifier> <name>void</name></type> <name>vaapi_dec_pic_context_destroy</name><parameter_list>(<parameter><decl><type><name>picture_context_t</name> <modifier>*</modifier></type><name>context</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vaapi_dec_pic_context</name> <modifier>*</modifier></type><name>pic_ctx</name> <init>= <expr><call><name>container_of</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>vaapi_dec_pic_context</name></expr></argument>, <argument><expr><name><name>ctx</name><operator>.</operator><name>s</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>vlc_va_surface_t</name></name> <modifier>*</modifier></type><name>va_surface</name> <init>= <expr><name><name>pic_ctx</name><operator>-&gt;</operator><name>va_surface</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>pic_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>va_surface_Release</name><argument_list>(<argument><expr><name>va_surface</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>picture_context_t</name> <modifier>*</modifier></type><name>vaapi_dec_pic_context_copy</name><parameter_list>(<parameter><decl><type><name>picture_context_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vaapi_dec_pic_context</name> <modifier>*</modifier></type><name>src_ctx</name> <init>= <expr><call><name>container_of</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>vaapi_dec_pic_context</name></expr></argument>, <argument><expr><name><name>ctx</name><operator>.</operator><name>s</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vaapi_dec_pic_context</name> <modifier>*</modifier></type><name>pic_ctx</name> <init>= <expr><call><name>malloc</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>pic_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>pic_ctx</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><operator>*</operator><name>pic_ctx</name> <operator>=</operator> <operator>*</operator><name>src_ctx</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_video_context_Hold</name><argument_list>(<argument><expr><name><name>pic_ctx</name><operator>-&gt;</operator><name>ctx</name><operator>.</operator><name>s</name><operator>.</operator><name>vctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>va_surface_AddRef</name><argument_list>(<argument><expr><name><name>pic_ctx</name><operator>-&gt;</operator><name>va_surface</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>&amp;</operator><name><name>pic_ctx</name><operator>-&gt;</operator><name>ctx</name><operator>.</operator><name>s</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Get</name><parameter_list>(<parameter><decl><type><name>vlc_va_t</name> <modifier>*</modifier></type><name>va</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>pic</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vlc_va_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>va</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_va_surface_t</name> <modifier>*</modifier></type><name>va_surface</name> <init>= <expr><call><name>va_pool_Get</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>va_pool</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>va_surface</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_ENOITEM</name></expr>;</return></block_content></block></if></if_stmt>
<decl_stmt><decl><type><name>vaapi_dec_pic_context</name> <modifier>*</modifier></type><name>vaapi_ctx</name> <init>= <expr><call><name>malloc</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>vaapi_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>vaapi_ctx</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>va_surface_Release</name><argument_list>(<argument><expr><name>va_surface</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_ENOMEM</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>vaapi_ctx</name><operator>-&gt;</operator><name>ctx</name><operator>.</operator><name>s</name></name> <operator>=</operator> <operator>(</operator><name>picture_context_t</name><operator>)</operator> <block>{
<expr><name>vaapi_dec_pic_context_destroy</name></expr>, <expr><name>vaapi_dec_pic_context_copy</name></expr>,
<expr><name><name>sys</name><operator>-&gt;</operator><name>vctx</name></name></expr>,
}</block></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vaapi_ctx</name><operator>-&gt;</operator><name>ctx</name><operator>.</operator><name>surface</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>render_targets</name><index>[<expr><call><name>va_surface_GetIndex</name><argument_list>(<argument><expr><name>va_surface</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vaapi_ctx</name><operator>-&gt;</operator><name>ctx</name><operator>.</operator><name>va_dpy</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>hw_ctx</name><operator>.</operator><name>display</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vaapi_ctx</name><operator>-&gt;</operator><name>va_surface</name></name> <operator>=</operator> <name>va_surface</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_vaapi_PicSetContext</name><argument_list>(<argument><expr><name>pic</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>vaapi_ctx</name><operator>-&gt;</operator><name>ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>data</name> <operator>=</operator> <operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator> <operator>(</operator><name>uintptr_t</name><operator>)</operator> <name><name>vaapi_ctx</name><operator>-&gt;</operator><name>ctx</name><operator>.</operator><name>surface</name></name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Delete</name><parameter_list>(<parameter><decl><type><name>vlc_va_t</name> <modifier>*</modifier></type><name>va</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vlc_va_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>va</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_video_context_Release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>vctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>va_pool_Close</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>va_pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name><name>struct</name> <name>vlc_va_operations</name></name></type> <name>ops</name> <init>= <expr><block>{ <expr><name>Get</name></expr>, <expr><name>Delete</name></expr>, }</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>int</name></type> <name>VAAPICreateDevice</name><parameter_list>(<parameter><decl><type><name>vlc_va_t</name> <modifier>*</modifier></type><name>va</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>VAAPIDestroyDevice</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vlc_va_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name>opaque</name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>hw_ctx</name><operator>.</operator><name>context_id</name></name> <operator>!=</operator> <name>VA_INVALID_ID</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>vlc_vaapi_DestroyContext</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>hw_ctx</name><operator>.</operator><name>display</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>hw_ctx</name><operator>.</operator><name>context_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>hw_ctx</name><operator>.</operator><name>config_id</name></name> <operator>!=</operator> <name>VA_INVALID_ID</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>vlc_vaapi_DestroyConfig</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>hw_ctx</name><operator>.</operator><name>display</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>hw_ctx</name><operator>.</operator><name>config_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>VAAPICreateDecoderSurfaces</name><parameter_list>(<parameter><decl><type><name>vlc_va_t</name> <modifier>*</modifier></type><name>va</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>codec_id</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>codec_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>vlc_va_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>va</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>va_rt_format</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>va_fourcc</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>vlc_chroma_to_vaapi</name><argument_list>(<argument><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_chroma</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>va_rt_format</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>va_fourcc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>VASurfaceAttrib</name></type> <name><name>fourcc_attribs</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{
<expr><operator>.</operator><name>type</name> <operator>=</operator> <name>VASurfaceAttribPixelFormat</name></expr>,
<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>VA_SURFACE_ATTRIB_SETTABLE</name></expr>,
<expr><operator>.</operator><name><name>value</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>VAGenericValueTypeInteger</name></expr>,
<expr><operator>.</operator><name><name>value</name><operator>.</operator><name>value</name><operator>.</operator><name>i</name></name> <operator>=</operator> <name>va_fourcc</name></expr>,
}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>VA_CALL</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>va</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>vaCreateSurfaces</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>hw_ctx</name><operator>.</operator><name>display</name></name></expr></argument>, <argument><expr><name>va_rt_format</name></expr></argument>,
<argument><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_visible_width</name></name></expr></argument>, <argument><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_visible_height</name></name></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>render_targets</name></name></expr></argument>, <argument><expr><name>count</name></expr></argument>,
<argument><expr><name>fourcc_attribs</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
<label><name>error</name>:</label>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>VAAPISetupAVCodecContext</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>, <parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vlc_va_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name>opaque</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>avctx</name><operator>-&gt;</operator><name>hwaccel_context</name></name> <operator>=</operator> <operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>hw_ctx</name></name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Create</name><parameter_list>(<parameter><decl><type><name>vlc_va_t</name> <modifier>*</modifier></type><name>va</name></decl></parameter>, <parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>PixelFormat</name></name></type> <name>hwfmt</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type><name>fmt_in</name></decl></parameter>, <parameter><decl><type><name>vlc_decoder_device</name> <modifier>*</modifier></type><name>dec_device</name></decl></parameter>,
<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>fmt_out</name></decl></parameter>, <parameter><decl><type><name>vlc_video_context</name> <modifier>*</modifier><modifier>*</modifier></type><name>vtcx_out</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><name>hwfmt</name> <operator>!=</operator> <name>AV_PIX_FMT_VAAPI_VLD</name> <operator>||</operator> <name>dec_device</name> <operator>==</operator> <name>NULL</name> <operator>||</operator>
<name><name>dec_device</name><operator>-&gt;</operator><name>type</name></name> <operator>!=</operator> <name>VLC_DECODER_DEVICE_VAAPI</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>vlc_va_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><call><name>malloc</name><argument_list>(<argument><expr><sizeof>sizeof <name/></sizeof>*<name>sys</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>sys</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>sys</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof <argument_list>(<argument><expr><operator>*</operator><name>sys</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>o</name> <init>= <expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>va</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><name>VLC_EGENERIC</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VADisplay</name></type> <name>va_dpy</name> <init>= <expr><name><name>dec_device</name><operator>-&gt;</operator><name>opaque</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VAProfile</name></type> <name>i_profile</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_vlc_chroma</name></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>GetVaProfile</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>fmt_in</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_profile</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_vlc_chroma</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>count</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>VLC_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>


<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>hw_ctx</name><operator>.</operator><name>display</name></name> <operator>=</operator> <name>va_dpy</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>hw_ctx</name><operator>.</operator><name>config_id</name></name> <operator>=</operator> <name>VA_INVALID_ID</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>hw_ctx</name><operator>.</operator><name>context_id</name></name> <operator>=</operator> <name>VA_INVALID_ID</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>va</name><operator>-&gt;</operator><name>sys</name></name> <operator>=</operator> <name>sys</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>va_pool_cfg</name></name></type> <name>pool_cfg</name> <init>= <expr><block>{
<expr><name>VAAPICreateDevice</name></expr>,
<expr><name>VAAPIDestroyDevice</name></expr>,
<expr><name>VAAPICreateDecoderSurfaces</name></expr>,
<expr><name>VAAPISetupAVCodecContext</name></expr>,
<expr><name>sys</name></expr>,
}</block></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>va_pool</name></name> <operator>=</operator> <call><name>va_pool_Create</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>pool_cfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>va_pool</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>fmt_out</name><operator>-&gt;</operator><name>i_chroma</name></name> <operator>=</operator> <name>i_vlc_chroma</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>err</name> <init>= <expr><call><name>va_pool_SetupDecoder</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>va_pool</name></name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>fmt_out</name></expr></argument>, <argument><expr><name>count</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>err</name> <operator>!=</operator> <name>VLC_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>VASurfaceID</name> <modifier>*</modifier></type><name>render_targets</name> <init>= <expr><name><name>sys</name><operator>-&gt;</operator><name>render_targets</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>hw_ctx</name><operator>.</operator><name>config_id</name></name> <operator>=</operator>
<call><name>vlc_vaapi_CreateConfigChecked</name><argument_list>(<argument><expr><name>o</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>hw_ctx</name><operator>.</operator><name>display</name></name></expr></argument>, <argument><expr><name>i_profile</name></expr></argument>,
<argument><expr><name>VAEntrypointVLD</name></expr></argument>, <argument><expr><name>i_vlc_chroma</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>hw_ctx</name><operator>.</operator><name>config_id</name></name> <operator>==</operator> <name>VA_INVALID_ID</name></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>


<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>hw_ctx</name><operator>.</operator><name>context_id</name></name> <operator>=</operator>
<call><name>vlc_vaapi_CreateContext</name><argument_list>(<argument><expr><name>o</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>hw_ctx</name><operator>.</operator><name>display</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>hw_ctx</name><operator>.</operator><name>config_id</name></name></expr></argument>,
<argument><expr><name><name>ctx</name><operator>-&gt;</operator><name>coded_width</name></name></expr></argument>, <argument><expr><name><name>ctx</name><operator>-&gt;</operator><name>coded_height</name></name></expr></argument>, <argument><expr><name>VA_PROGRESSIVE</name></expr></argument>,
<argument><expr><name>render_targets</name></expr></argument>, <argument><expr><name>count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>hw_ctx</name><operator>.</operator><name>context_id</name></name> <operator>==</operator> <name>VA_INVALID_ID</name></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Info</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"Using %s"</literal></expr></argument>, <argument><expr><call><name>vaQueryVendorString</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>hw_ctx</name><operator>.</operator><name>display</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>vctx</name></name> <operator>=</operator> <call><name>vlc_video_context_Create</name><argument_list>( <argument><expr><name>dec_device</name></expr></argument>, <argument><expr><name>VLC_VIDEO_CONTEXT_VAAPI</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>vctx</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>va</name><operator>-&gt;</operator><name>ops</name></name> <operator>=</operator> <operator>&amp;</operator><name>ops</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>vtcx_out</name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>vctx</name></name></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<label><name>error</name>:</label>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>va_pool</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>va_pool_Close</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>va_pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>

<macro><name>vlc_module_begin</name> <argument_list>()</argument_list></macro>
<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"VA-API video decoder"</literal>)</argument> )</argument_list></macro>
<macro><name>set_va_callback</name><argument_list>( <argument>Create</argument>, <argument><literal type="number">100</literal></argument> )</argument_list></macro>
<macro><name>add_shortcut</name><argument_list>( <argument><literal type="string">"vaapi"</literal></argument> )</argument_list></macro>
<macro><name>set_category</name><argument_list>( <argument>CAT_INPUT</argument> )</argument_list></macro>
<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_INPUT_VCODEC</argument> )</argument_list></macro>
<macro><name>vlc_module_end</name> <argument_list>()</argument_list></macro>
</unit>
