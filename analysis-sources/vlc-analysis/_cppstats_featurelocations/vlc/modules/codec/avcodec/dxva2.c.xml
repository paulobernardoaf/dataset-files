<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\codec\avcodec\dxva2.c">























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_picture.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DXVA2API_USE_BITFIELDS</name></cpp:macro></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COBJMACROS</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;libavcodec/dxva2.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../../video_chroma/d3d9_fmt.h"</cpp:file></cpp:include>

<struct>struct <name>dxva2_pic_context</name>
<block>{
<decl_stmt><decl><type><name><name>struct</name> <name>d3d9_pic_context</name></name></type> <name>ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>vlc_va_surface_t</name></name> <modifier>*</modifier></type><name>va_surface</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>HINSTANCE</name></type> <name>dxva2_dll</name></decl>;</decl_stmt>
}</block>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DXVA2_PICCONTEXT_FROM_PICCTX</name><parameter_list>(<parameter><type><name>pic_ctx</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>container_of((pic_ctx), struct dxva2_pic_context, ctx.s)</cpp:value></cpp:define>


<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"directx_va.h"</cpp:file></cpp:include>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Open</name><parameter_list>(<parameter><decl><type><name>vlc_va_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>PixelFormat</name></name></type> <name>hwfmt</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>vlc_decoder_device</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>vlc_video_context</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<macro><name>vlc_module_begin</name><argument_list>()</argument_list></macro>
<macro><name>set_description</name><argument_list>(<argument>N_(<literal type="string">"DirectX Video Acceleration (DXVA) 2.0"</literal>)</argument>)</argument_list></macro>
<macro><name>set_category</name><argument_list>(<argument>CAT_INPUT</argument>)</argument_list></macro>
<macro><name>set_subcategory</name><argument_list>(<argument>SUBCAT_INPUT_VCODEC</argument>)</argument_list></macro>
<macro><name>set_va_callback</name><argument_list>(<argument>Open</argument>, <argument><literal type="number">110</literal></argument>)</argument_list></macro>
<macro><name>vlc_module_end</name><argument_list>()</argument_list></macro>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;initguid.h&gt;</cpp:file></cpp:include> 



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MS_GUID</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>l</name></type></parameter>, <parameter><type><name>w1</name></type></parameter>, <parameter><type><name>w2</name></type></parameter>, <parameter><type><name>b1</name></type></parameter>, <parameter><type><name>b2</name></type></parameter>, <parameter><type><name>b3</name></type></parameter>, <parameter><type><name>b4</name></type></parameter>, <parameter><type><name>b5</name></type></parameter>, <parameter><type><name>b6</name></type></parameter>, <parameter><type><name>b7</name></type></parameter>, <parameter><type><name>b8</name></type></parameter>)</parameter_list></cpp:macro></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__MINGW32__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;_mingw.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__MINGW64_VERSION_MAJOR</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>MS_GUID</name></cpp:undef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MS_GUID</name></cpp:macro> <cpp:value>DEFINE_GUID</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DXVA2_E_NEW_VIDEO_DEVICE</name></cpp:macro> <cpp:value>MAKE_HRESULT(1, 4, 4097)</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dxva.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<expr_stmt><expr><call><name>MS_GUID</name><argument_list>(<argument><expr><name>IID_IDirectXVideoDecoderService</name></expr></argument>, <argument><expr><literal type="number">0xfc51a551</literal></expr></argument>, <argument><expr><literal type="number">0xd5e7</literal></expr></argument>, <argument><expr><literal type="number">0x11d9</literal></expr></argument>, <argument><expr><literal type="number">0xaf</literal></expr></argument>,<argument><expr><literal type="number">0x55</literal></expr></argument>,<argument><expr><literal type="number">0x00</literal></expr></argument>,<argument><expr><literal type="number">0x05</literal></expr></argument>,<argument><expr><literal type="number">0x4e</literal></expr></argument>,<argument><expr><literal type="number">0x43</literal></expr></argument>,<argument><expr><literal type="number">0xff</literal></expr></argument>,<argument><expr><literal type="number">0x02</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>MS_GUID</name><argument_list>(<argument><expr><name>IID_IDirectXVideoAccelerationService</name></expr></argument>, <argument><expr><literal type="number">0xfc51a550</literal></expr></argument>, <argument><expr><literal type="number">0xd5e7</literal></expr></argument>, <argument><expr><literal type="number">0x11d9</literal></expr></argument>, <argument><expr><literal type="number">0xaf</literal></expr></argument>,<argument><expr><literal type="number">0x55</literal></expr></argument>,<argument><expr><literal type="number">0x00</literal></expr></argument>,<argument><expr><literal type="number">0x05</literal></expr></argument>,<argument><expr><literal type="number">0x4e</literal></expr></argument>,<argument><expr><literal type="number">0x43</literal></expr></argument>,<argument><expr><literal type="number">0xff</literal></expr></argument>,<argument><expr><literal type="number">0x02</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DEFINE_GUID</name><argument_list>(<argument><expr><name>DXVA2_NoEncrypt</name></expr></argument>, <argument><expr><literal type="number">0x1b81bed0</literal></expr></argument>, <argument><expr><literal type="number">0xa0c7</literal></expr></argument>, <argument><expr><literal type="number">0x11d3</literal></expr></argument>, <argument><expr><literal type="number">0xb9</literal></expr></argument>, <argument><expr><literal type="number">0x84</literal></expr></argument>, <argument><expr><literal type="number">0x00</literal></expr></argument>, <argument><expr><literal type="number">0xc0</literal></expr></argument>, <argument><expr><literal type="number">0x4f</literal></expr></argument>, <argument><expr><literal type="number">0x2e</literal></expr></argument>, <argument><expr><literal type="number">0x73</literal></expr></argument>, <argument><expr><literal type="number">0xc5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DEFINE_GUID</name><argument_list>(<argument><expr><name>DXVA_Intel_H264_NoFGT_ClearVideo</name></expr></argument>, <argument><expr><literal type="number">0x604F8E68</literal></expr></argument>, <argument><expr><literal type="number">0x4951</literal></expr></argument>, <argument><expr><literal type="number">0x4c54</literal></expr></argument>, <argument><expr><literal type="number">0x88</literal></expr></argument>, <argument><expr><literal type="number">0xFE</literal></expr></argument>, <argument><expr><literal type="number">0xAB</literal></expr></argument>, <argument><expr><literal type="number">0xD2</literal></expr></argument>, <argument><expr><literal type="number">0x5C</literal></expr></argument>, <argument><expr><literal type="number">0x15</literal></expr></argument>, <argument><expr><literal type="number">0xB3</literal></expr></argument>, <argument><expr><literal type="number">0xD6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>D3DFORMAT</name></type> <name>format</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_fourcc_t</name></type> <name>codec</name></decl>;</decl_stmt>
}</block></struct></type> <name>d3d9_format_t</name>;</typedef>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>d3d9_format_t</name></type> <name><name>d3d_formats</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="string">"YV12"</literal></expr>, <expr><call><name>MAKEFOURCC</name><argument_list>(<argument><expr><literal type="char">'Y'</literal></expr></argument>,<argument><expr><literal type="char">'V'</literal></expr></argument>,<argument><expr><literal type="char">'1'</literal></expr></argument>,<argument><expr><literal type="char">'2'</literal></expr></argument>)</argument_list></call></expr>, <expr><name>VLC_CODEC_YV12</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"NV12"</literal></expr>, <expr><call><name>MAKEFOURCC</name><argument_list>(<argument><expr><literal type="char">'N'</literal></expr></argument>,<argument><expr><literal type="char">'V'</literal></expr></argument>,<argument><expr><literal type="char">'1'</literal></expr></argument>,<argument><expr><literal type="char">'2'</literal></expr></argument>)</argument_list></call></expr>, <expr><name>VLC_CODEC_NV12</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"P010"</literal></expr>, <expr><call><name>MAKEFOURCC</name><argument_list>(<argument><expr><literal type="char">'P'</literal></expr></argument>,<argument><expr><literal type="char">'0'</literal></expr></argument>,<argument><expr><literal type="char">'1'</literal></expr></argument>,<argument><expr><literal type="char">'0'</literal></expr></argument>)</argument_list></call></expr>, <expr><name>VLC_CODEC_P010</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"AYUV"</literal></expr>, <expr><call><name>MAKEFOURCC</name><argument_list>(<argument><expr><literal type="char">'A'</literal></expr></argument>,<argument><expr><literal type="char">'Y'</literal></expr></argument>,<argument><expr><literal type="char">'U'</literal></expr></argument>,<argument><expr><literal type="char">'V'</literal></expr></argument>)</argument_list></call></expr>, <expr><name>VLC_CODEC_YUVA</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"YUY2"</literal></expr>, <expr><call><name>MAKEFOURCC</name><argument_list>(<argument><expr><literal type="char">'Y'</literal></expr></argument>,<argument><expr><literal type="char">'U'</literal></expr></argument>,<argument><expr><literal type="char">'Y'</literal></expr></argument>,<argument><expr><literal type="char">'2'</literal></expr></argument>)</argument_list></call></expr>, <expr><name>VLC_CODEC_YUYV</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"Y410"</literal></expr>, <expr><call><name>MAKEFOURCC</name><argument_list>(<argument><expr><literal type="char">'Y'</literal></expr></argument>,<argument><expr><literal type="char">'4'</literal></expr></argument>,<argument><expr><literal type="char">'1'</literal></expr></argument>,<argument><expr><literal type="char">'0'</literal></expr></argument>)</argument_list></call></expr>, <expr><name>VLC_CODEC_Y410</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"Y210"</literal></expr>, <expr><call><name>MAKEFOURCC</name><argument_list>(<argument><expr><literal type="char">'Y'</literal></expr></argument>,<argument><expr><literal type="char">'2'</literal></expr></argument>,<argument><expr><literal type="char">'1'</literal></expr></argument>,<argument><expr><literal type="char">'0'</literal></expr></argument>)</argument_list></call></expr>, <expr><name>VLC_CODEC_Y210</name></expr> }</block></expr>,

<expr><block>{ <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>d3d9_format_t</name> <modifier>*</modifier></type><name>D3dFindFormat</name><parameter_list>(<parameter><decl><type><name>D3DFORMAT</name></type> <name>format</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<for>for <control>(<init><decl><type><name>unsigned</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name><name>d3d_formats</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>name</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>d3d_formats</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>format</name> <operator>==</operator> <name>format</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>&amp;</operator><name><name>d3d_formats</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></for>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>

<struct>struct <name>vlc_va_sys_t</name>
<block>{

<decl_stmt><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type><name>vctx</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>HINSTANCE</name></type> <name>dxva2_dll</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>IDirect3DDeviceManager9</name> <modifier>*</modifier></type><name>devmng</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>HANDLE</name></type> <name>device</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>D3DFORMAT</name></type> <name>render</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>DXVA2_ConfigPictureDecode</name></type> <name>cfg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>directx_va_mode_t</name> <modifier>*</modifier></type><name>selected_decoder</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>IDirectXVideoDecoderService</name> <modifier>*</modifier></type><name>d3ddec</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>va_pool_t</name> <modifier>*</modifier></type><name>va_pool</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>IDirect3DSurface9</name> <modifier>*</modifier></type><name><name>hw_surface</name><index>[<expr><name>MAX_SURFACE_COUNT</name></expr>]</index></name></decl>;</decl_stmt>


<decl_stmt><decl><type><name><name>struct</name> <name>dxva_context</name></name></type> <name>hw</name></decl>;</decl_stmt>
}</block>;</struct>



<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>D3dCreateDevice</name><parameter_list>(<parameter><decl><type><name>vlc_va_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>DxGetInputList</name><parameter_list>(<parameter><decl><type><name>vlc_va_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>input_list_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>DxSetupOutput</name><parameter_list>(<parameter><decl><type><name>vlc_va_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>directx_va_mode_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>DxCreateVideoDecoder</name><parameter_list>(<parameter><decl><type><name>vlc_va_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>codec_id</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>surface_count</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>DxDestroyVideoDecoder</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <name>void</name></type> <name>SetupAVCodecContext</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>, <parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vlc_va_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name>opaque</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>hw</name><operator>.</operator><name>cfg</name></name> <operator>=</operator> <operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>cfg</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>hw</name><operator>.</operator><name>surface</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>hw_surface</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>hw</name><operator>.</operator><name>workaround</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>selected_decoder</name><operator>-&gt;</operator><name>workaround</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>avctx</name><operator>-&gt;</operator><name>hwaccel_context</name></name> <operator>=</operator> <operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>hw</name></name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>dxva2_pic_context_destroy</name><parameter_list>(<parameter><decl><type><name>picture_context_t</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>dxva2_pic_context</name></name> <modifier>*</modifier></type><name>pic_ctx</name> <init>= <expr><call><name>DXVA2_PICCONTEXT_FROM_PICCTX</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>vlc_va_surface_t</name></name> <modifier>*</modifier></type><name>va_surface</name> <init>= <expr><name><name>pic_ctx</name><operator>-&gt;</operator><name>va_surface</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>HINSTANCE</name></type> <name>dxva2_dll</name> <init>= <expr><name><name>pic_ctx</name><operator>-&gt;</operator><name>dxva2_dll</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>static_assert</name><argument_list>(<argument><expr><call><name>offsetof</name><argument_list>(<argument><expr>struct <name>dxva2_pic_context</name></expr></argument>, <argument><expr><name><name>ctx</name><operator>.</operator><name>s</name></name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>,
<argument><expr><literal type="string">"Cast assumption failure"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>d3d9_pic_context_destroy</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>va_surface_Release</name><argument_list>(<argument><expr><name>va_surface</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FreeLibrary</name><argument_list>(<argument><expr><name>dxva2_dll</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>picture_context_t</name> <modifier>*</modifier></type><name>dxva2_pic_context_copy</name><parameter_list>(<parameter><decl><type><name>picture_context_t</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>dxva2_pic_context</name></name> <modifier>*</modifier></type><name>src_ctx</name> <init>= <expr><call><name>DXVA2_PICCONTEXT_FROM_PICCTX</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>dxva2_pic_context</name></name> <modifier>*</modifier></type><name>pic_ctx</name> <init>= <expr><call><name>malloc</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>pic_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>pic_ctx</name><operator>==</operator><name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><operator>*</operator><name>pic_ctx</name> <operator>=</operator> <operator>*</operator><name>src_ctx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>pic_ctx</name><operator>-&gt;</operator><name>dxva2_dll</name></name> <operator>=</operator> <call><name>LoadLibrary</name><argument_list>(<argument><expr><call><name>TEXT</name><argument_list>(<argument><expr><literal type="string">"DXVA2.DLL"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_video_context_Hold</name><argument_list>(<argument><expr><name><name>pic_ctx</name><operator>-&gt;</operator><name>ctx</name><operator>.</operator><name>s</name><operator>.</operator><name>vctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>va_surface_AddRef</name><argument_list>(<argument><expr><name><name>pic_ctx</name><operator>-&gt;</operator><name>va_surface</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AcquireD3D9PictureSys</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>pic_ctx</name><operator>-&gt;</operator><name>ctx</name><operator>.</operator><name>picsys</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>&amp;</operator><name><name>pic_ctx</name><operator>-&gt;</operator><name>ctx</name><operator>.</operator><name>s</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name><name>struct</name> <name>dxva2_pic_context</name></name> <modifier>*</modifier></type><name>CreatePicContext</name><parameter_list>(<parameter><decl><type><name>IDirect3DSurface9</name> <modifier>*</modifier></type><name>surface</name></decl></parameter>, <parameter><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type><name>vctx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>dxva2_pic_context</name></name> <modifier>*</modifier></type><name>pic_ctx</name> <init>= <expr><call><name>calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>pic_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>pic_ctx</name><operator>==</operator><name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>pic_ctx</name><operator>-&gt;</operator><name>ctx</name><operator>.</operator><name>s</name></name> <operator>=</operator> <operator>(</operator><name>picture_context_t</name><operator>)</operator> <block>{
<expr><name>dxva2_pic_context_destroy</name></expr>, <expr><name>dxva2_pic_context_copy</name></expr>,
<expr><call><name>vlc_video_context_Hold</name><argument_list>(<argument><expr><name>vctx</name></expr></argument>)</argument_list></call></expr>,
}</block></expr>;</expr_stmt>
<expr_stmt><expr><name><name>pic_ctx</name><operator>-&gt;</operator><name>ctx</name><operator>.</operator><name>picsys</name><operator>.</operator><name>surface</name></name> <operator>=</operator> <name>surface</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AcquireD3D9PictureSys</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>pic_ctx</name><operator>-&gt;</operator><name>ctx</name><operator>.</operator><name>picsys</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>pic_ctx</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>picture_context_t</name><modifier>*</modifier></type> <name>NewSurfacePicContext</name><parameter_list>(<parameter><decl><type><name>vlc_va_t</name> <modifier>*</modifier></type><name>va</name></decl></parameter>, <parameter><decl><type><name>vlc_va_surface_t</name> <modifier>*</modifier></type><name>va_surface</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vlc_va_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>va</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>dxva2_pic_context</name></name> <modifier>*</modifier></type><name>pic_ctx</name> <init>= <expr><call><name>CreatePicContext</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>hw_surface</name><index>[<expr><call><name>va_surface_GetIndex</name><argument_list>(<argument><expr><name>va_surface</name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>vctx</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>pic_ctx</name><operator>==</operator><name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>pic_ctx</name><operator>-&gt;</operator><name>va_surface</name></name> <operator>=</operator> <name>va_surface</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>pic_ctx</name><operator>-&gt;</operator><name>dxva2_dll</name></name> <operator>=</operator> <call><name>LoadLibrary</name><argument_list>(<argument><expr><call><name>TEXT</name><argument_list>(<argument><expr><literal type="string">"DXVA2.DLL"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>&amp;</operator><name><name>pic_ctx</name><operator>-&gt;</operator><name>ctx</name><operator>.</operator><name>s</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Get</name><parameter_list>(<parameter><decl><type><name>vlc_va_t</name> <modifier>*</modifier></type><name>va</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>pic</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vlc_va_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>va</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><name>HRESULT</name></type> <name>hr</name> <init>= <expr><call><name>IDirect3DDeviceManager9_TestDevice</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>devmng</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>device</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>FAILED</name><argument_list>(<argument><expr><name>hr</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>hr</name> <operator>==</operator> <name>DXVA2_E_NEW_VIDEO_DEVICE</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"New video device detected."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"device not usable. (hr=0x%lX)"</literal></expr></argument>, <argument><expr><name>hr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>vlc_va_surface_t</name> <modifier>*</modifier></type><name>va_surface</name> <init>= <expr><call><name>va_pool_Get</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>va_pool</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>va_surface</name><operator>==</operator><name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_ENOITEM</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>pic</name><operator>-&gt;</operator><name>context</name></name> <operator>=</operator> <call><name>NewSurfacePicContext</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><name>va_surface</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name><name>pic</name><operator>-&gt;</operator><name>context</name></name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>va_surface_Release</name><argument_list>(<argument><expr><name>va_surface</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_ENOITEM</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><operator>*</operator><name>data</name> <operator>=</operator> <operator>(</operator><name>uint8_t</name><operator>*</operator><operator>)</operator><call><name>DXVA2_PICCONTEXT_FROM_PICCTX</name><argument_list>(<argument><expr><name><name>pic</name><operator>-&gt;</operator><name>context</name></name></expr></argument>)</argument_list></call><operator>-&gt;</operator><name><name>ctx</name><operator>.</operator><name>picsys</name><operator>.</operator><name>surface</name></name></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>(<parameter><decl><type><name>vlc_va_t</name> <modifier>*</modifier></type><name>va</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vlc_va_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>va</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>vctx</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>vlc_video_context_Release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>vctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>va_pool</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>va_pool_Close</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>va_pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name><name>struct</name> <name>vlc_va_operations</name></name></type> <name>ops</name> <init>= <expr><block>{ <expr><name>Get</name></expr>, <expr><name>Close</name></expr>, }</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Open</name><parameter_list>(<parameter><decl><type><name>vlc_va_t</name> <modifier>*</modifier></type><name>va</name></decl></parameter>, <parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>PixelFormat</name></name></type> <name>hwfmt</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type><name>fmt_in</name></decl></parameter>, <parameter><decl><type><name>vlc_decoder_device</name> <modifier>*</modifier></type><name>dec_device</name></decl></parameter>,
<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>fmt_out</name></decl></parameter>, <parameter><decl><type><name>vlc_video_context</name> <modifier>*</modifier><modifier>*</modifier></type><name>vtcx_out</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>err</name> <init>= <expr><name>VLC_EGENERIC</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>( <expr><name>hwfmt</name> <operator>!=</operator> <name>AV_PIX_FMT_DXVA2_VLD</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>d3d9_decoder_device_t</name> <modifier>*</modifier></type><name>d3d9_decoder</name> <init>= <expr><call><name>GetD3D9OpaqueDevice</name><argument_list>( <argument><expr><name>dec_device</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>( <expr><name>d3d9_decoder</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>d3d9_decoder</name><operator>-&gt;</operator><name>d3ddev</name><operator>.</operator><name>dev</name></name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>hwaccel_context</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>vlc_va_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><call><name>calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof <argument_list>(<argument><expr><operator>*</operator><name>sys</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>sys</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>vctx</name></name> <operator>=</operator> <call><name>vlc_video_context_Create</name><argument_list>( <argument><expr><name>dec_device</name></expr></argument>, <argument><expr><name>VLC_VIDEO_CONTEXT_DXVA2</name></expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>d3d9_video_context_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><operator>&amp;</operator><name>d3d9_vctx_ops</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>likely</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>vctx</name></name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>sys</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>va</name><operator>-&gt;</operator><name>sys</name></name> <operator>=</operator> <name>sys</name></expr>;</expr_stmt>


<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>dxva2_dll</name></name> <operator>=</operator> <call><name>LoadLibrary</name><argument_list>(<argument><expr><call><name>TEXT</name><argument_list>(<argument><expr><literal type="string">"DXVA2.DLL"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>sys</name><operator>-&gt;</operator><name>dxva2_dll</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"cannot load DXVA2 decoder DLL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>vctx</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>vlc_video_context_Release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>vctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>sys</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>va_pool_cfg</name></name></type> <name>pool_cfg</name> <init>= <expr><block>{
<expr><name>D3dCreateDevice</name></expr>,
<expr><name>DxDestroyVideoDecoder</name></expr>,
<expr><name>DxCreateVideoDecoder</name></expr>,
<expr><name>SetupAVCodecContext</name></expr>,
<expr><name>sys</name></expr>,
}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>va_pool</name></name> <operator>=</operator> <call><name>va_pool_Create</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>pool_cfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>va_pool</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>err</name> <operator>=</operator> <name>VLC_EGENERIC</name></expr>;</expr_stmt>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>video_format_t</name></type> <name>final_fmt</name> <init>= <expr><operator>*</operator><name>fmt_out</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>directx_sys_t</name></type> <name>dx_sys</name> <init>= <expr><block>{ <expr><name>DxGetInputList</name></expr>, <expr><name>DxSetupOutput</name></expr> }</block></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>selected_decoder</name></name> <operator>=</operator> <call><name>directx_va_Setup</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>dx_sys</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>desc</name></expr></argument>, <argument><expr><name>fmt_in</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,
<argument><expr><operator>&amp;</operator><name>final_fmt</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>hw</name><operator>.</operator><name>surface_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>selected_decoder</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>err</name> <operator>=</operator> <name>VLC_EGENERIC</name></expr>;</expr_stmt>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>render</name></name> <operator>==</operator> <call><name>MAKEFOURCC</name><argument_list>(<argument><expr><literal type="char">'P'</literal></expr></argument>,<argument><expr><literal type="char">'0'</literal></expr></argument>,<argument><expr><literal type="char">'1'</literal></expr></argument>,<argument><expr><literal type="char">'0'</literal></expr></argument>)</argument_list></call> <operator>||</operator>
<name><name>sys</name><operator>-&gt;</operator><name>render</name></name> <operator>==</operator> <call><name>MAKEFOURCC</name><argument_list>(<argument><expr><literal type="char">'Y'</literal></expr></argument>,<argument><expr><literal type="char">'4'</literal></expr></argument>,<argument><expr><literal type="char">'1'</literal></expr></argument>,<argument><expr><literal type="char">'0'</literal></expr></argument>)</argument_list></call> <operator>||</operator>
<name><name>sys</name><operator>-&gt;</operator><name>render</name></name> <operator>==</operator> <call><name>MAKEFOURCC</name><argument_list>(<argument><expr><literal type="char">'Y'</literal></expr></argument>,<argument><expr><literal type="char">'2'</literal></expr></argument>,<argument><expr><literal type="char">'1'</literal></expr></argument>,<argument><expr><literal type="char">'0'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>final_fmt</name><operator>.</operator><name>i_chroma</name></name> <operator>=</operator> <name>VLC_CODEC_D3D9_OPAQUE_10B</name></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name><name>final_fmt</name><operator>.</operator><name>i_chroma</name></name> <operator>=</operator> <name>VLC_CODEC_D3D9_OPAQUE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
<expr_stmt><expr><name>err</name> <operator>=</operator> <call><name>va_pool_SetupDecoder</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>va_pool</name></name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>final_fmt</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>hw</name><operator>.</operator><name>surface_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>err</name> <operator>!=</operator> <name>VLC_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>D3DADAPTER_IDENTIFIER9</name> <modifier>*</modifier></type><name>identifier</name> <init>= <expr><operator>&amp;</operator><name><name>d3d9_decoder</name><operator>-&gt;</operator><name>d3ddev</name><operator>.</operator><name>identifier</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>msg_Info</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"Using DXVA2 (%.*s, vendor %s(%lx), device %lx, revision %lx)"</literal></expr></argument>,
<argument><expr><operator>(</operator><name>int</name><operator>)</operator><sizeof>sizeof<argument_list>(<argument><expr><name><name>identifier</name><operator>-&gt;</operator><name>Description</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name><name>identifier</name><operator>-&gt;</operator><name>Description</name></name></expr></argument>,
<argument><expr><call><name>DxgiVendorStr</name><argument_list>(<argument><expr><name><name>identifier</name><operator>-&gt;</operator><name>VendorId</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>identifier</name><operator>-&gt;</operator><name>VendorId</name></name></expr></argument>,
<argument><expr><name><name>identifier</name><operator>-&gt;</operator><name>DeviceId</name></name></expr></argument>, <argument><expr><name><name>identifier</name><operator>-&gt;</operator><name>Revision</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>d3d9_video_context_t</name> <modifier>*</modifier></type><name>octx</name> <init>= <expr><call><name>GetD3D9ContextPrivate</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>vctx</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>octx</name><operator>-&gt;</operator><name>format</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>render</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>va</name><operator>-&gt;</operator><name>ops</name></name> <operator>=</operator> <operator>&amp;</operator><name>ops</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>fmt_out</name> <operator>=</operator> <name>final_fmt</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>vtcx_out</name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>vctx</name></name></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<label><name>error</name>:</label>
<expr_stmt><expr><call><name>Close</name><argument_list>(<argument><expr><name>va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></function>





<function><type><specifier>static</specifier> <name>int</name></type> <name>D3dCreateDevice</name><parameter_list>(<parameter><decl><type><name>vlc_va_t</name> <modifier>*</modifier></type><name>va</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vlc_va_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>va</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>d3d9_decoder_device_t</name> <modifier>*</modifier></type><name>d3d9_decoder</name> <init>= <expr><call><name>GetD3D9OpaqueContext</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>vctx</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<function_decl><type><name>HRESULT</name></type> (<name>WINAPI</name> <modifier>*</modifier><name>CreateDeviceManager9</name>)<parameter_list>(<parameter><decl><type><name>UINT</name> <modifier>*</modifier></type><name>pResetToken</name></decl></parameter>,
<parameter><decl><type><name>IDirect3DDeviceManager9</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<expr_stmt><expr><name>CreateDeviceManager9</name> <operator>=</operator>
<operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><call><name>GetProcAddress</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>dxva2_dll</name></name></expr></argument>,
<argument><expr><literal type="string">"DXVA2CreateDirect3DDeviceManager9"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>CreateDeviceManager9</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"cannot load function"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"got CreateDeviceManager9"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>UINT</name></type> <name>token</name></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>FAILED</name><argument_list>(<argument><expr><call><name>CreateDeviceManager9</name><argument_list>(<argument><expr><operator>&amp;</operator><name>token</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>devmng</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">" OurDirect3DCreateDeviceManager9 failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"obtained IDirect3DDeviceManager9"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>HRESULT</name></type> <name>hr</name> <init>= <expr><call><name>IDirect3DDeviceManager9_ResetDevice</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>devmng</name></name></expr></argument>, <argument><expr><name><name>d3d9_decoder</name><operator>-&gt;</operator><name>d3ddev</name><operator>.</operator><name>dev</name></name></expr></argument>, <argument><expr><name>token</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>FAILED</name><argument_list>(<argument><expr><name>hr</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"IDirect3DDeviceManager9_ResetDevice failed: 0x%lX)"</literal></expr></argument>, <argument><expr><name>hr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>IDirect3DDeviceManager9_Release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>devmng</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>hr</name> <operator>=</operator> <call><name>IDirect3DDeviceManager9_OpenDeviceHandle</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>devmng</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>device</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>FAILED</name><argument_list>(<argument><expr><name>hr</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"OpenDeviceHandle failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>IDirect3DDeviceManager9_Release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>devmng</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>pv</name></decl>;</decl_stmt>
<expr_stmt><expr><name>hr</name> <operator>=</operator> <call><name>IDirect3DDeviceManager9_GetVideoService</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>devmng</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>device</name></name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>IID_IDirectXVideoDecoderService</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>pv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>FAILED</name><argument_list>(<argument><expr><name>hr</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"GetVideoService failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>IDirect3DDeviceManager9_CloseDeviceHandle</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>devmng</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>device</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>IDirect3DDeviceManager9_Release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>devmng</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>d3ddec</name></name> <operator>=</operator> <name>pv</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>ReleaseInputList</name><parameter_list>(<parameter><decl><type><name>input_list_t</name> <modifier>*</modifier></type><name>p_list</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>CoTaskMemFree</name><argument_list>(<argument><expr><name><name>p_list</name><operator>-&gt;</operator><name>list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>DxGetInputList</name><parameter_list>(<parameter><decl><type><name>vlc_va_t</name> <modifier>*</modifier></type><name>va</name></decl></parameter>, <parameter><decl><type><name>input_list_t</name> <modifier>*</modifier></type><name>p_list</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vlc_va_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>va</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>UINT</name></type> <name>input_count</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GUID</name> <modifier>*</modifier></type><name>input_list</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>FAILED</name><argument_list>(<argument><expr><call><name>IDirectXVideoDecoderService_GetDecoderDeviceGuids</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>d3ddec</name></name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>input_count</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>input_list</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"IDirectXVideoDecoderService_GetDecoderDeviceGuids failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_list</name><operator>-&gt;</operator><name>count</name></name> <operator>=</operator> <name>input_count</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_list</name><operator>-&gt;</operator><name>list</name></name> <operator>=</operator> <name>input_list</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_list</name><operator>-&gt;</operator><name>pf_release</name></name> <operator>=</operator> <name>ReleaseInputList</name></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>DxSetupOutput</name><parameter_list>(<parameter><decl><type><name>vlc_va_t</name> <modifier>*</modifier></type><name>va</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>directx_va_mode_t</name> <modifier>*</modifier></type><name>mode</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>vlc_va_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>va</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>d3d9_decoder_device_t</name> <modifier>*</modifier></type><name>d3d9_decoder</name> <init>= <expr><call><name>GetD3D9OpaqueContext</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>vctx</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>D3DADAPTER_IDENTIFIER9</name> <modifier>*</modifier></type><name>identifier</name> <init>= <expr><operator>&amp;</operator><name><name>d3d9_decoder</name><operator>-&gt;</operator><name>d3ddev</name><operator>.</operator><name>identifier</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>UINT</name></type> <name>driverBuild</name> <init>= <expr><name><name>identifier</name><operator>-&gt;</operator><name>DriverVersion</name><operator>.</operator><name>LowPart</name></name> <operator>&amp;</operator> <literal type="number">0xFFFF</literal></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name><name>identifier</name><operator>-&gt;</operator><name>VendorId</name></name> <operator>==</operator> <name>GPU_MANUFACTURER_INTEL</name> <operator>&amp;&amp;</operator> <operator>(</operator><name><name>identifier</name><operator>-&gt;</operator><name>DriverVersion</name><operator>.</operator><name>LowPart</name></name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>&gt;=</operator> <literal type="number">100</literal></expr>)</condition>
<block>{<block_content>

<expr_stmt><expr><name>driverBuild</name> <operator>+=</operator> <operator>(</operator><operator>(</operator><name><name>identifier</name><operator>-&gt;</operator><name>DriverVersion</name><operator>.</operator><name>LowPart</name></name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>-</operator> <literal type="number">100</literal><operator>)</operator> <operator>*</operator> <literal type="number">1000</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>directx_va_canUseDecoder</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><name><name>identifier</name><operator>-&gt;</operator><name>VendorId</name></name></expr></argument>, <argument><expr><name><name>identifier</name><operator>-&gt;</operator><name>DeviceId</name></name></expr></argument>,
<argument><expr><name><name>mode</name><operator>-&gt;</operator><name>guid</name></name></expr></argument>, <argument><expr><name>driverBuild</name></expr></argument>)</argument_list></call></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"GPU blacklisted for %s codec"</literal></expr></argument>, <argument><expr><name><name>mode</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>err</name> <init>= <expr><name>VLC_EGENERIC</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>UINT</name></type> <name>output_count</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>D3DFORMAT</name> <modifier>*</modifier></type><name>output_list</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>FAILED</name><argument_list>(<argument><expr><call><name>IDirectXVideoDecoderService_GetDecoderRenderTargets</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>d3ddec</name></name></expr></argument>,
<argument><expr><name><name>mode</name><operator>-&gt;</operator><name>guid</name></name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>output_count</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>output_list</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"IDirectXVideoDecoderService_GetDecoderRenderTargets failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<for>for <control>(<init><decl><type><name>unsigned</name></type> <name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name>output_count</name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>D3DFORMAT</name></type> <name>f</name> <init>= <expr><name><name>output_list</name><index>[<expr><name>j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>d3d9_format_t</name> <modifier>*</modifier></type><name>format</name> <init>= <expr><call><name>D3dFindFormat</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>format</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"%s is supported for output"</literal></expr></argument>, <argument><expr><name><name>format</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"%d is supported for output (%4.4s)"</literal></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></for>

<decl_stmt><decl><type><name>D3DFORMAT</name></type> <name>preferredOutput</name></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name><name>mode</name><operator>-&gt;</operator><name>bit_depth</name></name> <operator>&gt;</operator> <literal type="number">8</literal></expr>)</condition>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>mode</name><operator>-&gt;</operator><name>log2_chroma_w</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>mode</name><operator>-&gt;</operator><name>log2_chroma_h</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>preferredOutput</name> <operator>=</operator> <call><name>MAKEFOURCC</name><argument_list>(<argument><expr><literal type="char">'Y'</literal></expr></argument>,<argument><expr><literal type="char">'4'</literal></expr></argument>,<argument><expr><literal type="char">'1'</literal></expr></argument>,<argument><expr><literal type="char">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if> 
<if type="elseif">else if <condition>(<expr><name><name>mode</name><operator>-&gt;</operator><name>log2_chroma_w</name></name> <operator>==</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <name><name>mode</name><operator>-&gt;</operator><name>log2_chroma_h</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>preferredOutput</name> <operator>=</operator> <call><name>MAKEFOURCC</name><argument_list>(<argument><expr><literal type="char">'Y'</literal></expr></argument>,<argument><expr><literal type="char">'2'</literal></expr></argument>,<argument><expr><literal type="char">'1'</literal></expr></argument>,<argument><expr><literal type="char">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if> 
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name>preferredOutput</name> <operator>=</operator> <call><name>MAKEFOURCC</name><argument_list>(<argument><expr><literal type="char">'P'</literal></expr></argument>,<argument><expr><literal type="char">'0'</literal></expr></argument>,<argument><expr><literal type="char">'1'</literal></expr></argument>,<argument><expr><literal type="char">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>mode</name><operator>-&gt;</operator><name>log2_chroma_w</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>mode</name><operator>-&gt;</operator><name>log2_chroma_h</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>preferredOutput</name> <operator>=</operator> <call><name>MAKEFOURCC</name><argument_list>(<argument><expr><literal type="char">'A'</literal></expr></argument>,<argument><expr><literal type="char">'Y'</literal></expr></argument>,<argument><expr><literal type="char">'U'</literal></expr></argument>,<argument><expr><literal type="char">'V'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if> 
<if type="elseif">else if <condition>(<expr><name><name>mode</name><operator>-&gt;</operator><name>log2_chroma_w</name></name> <operator>==</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <name><name>mode</name><operator>-&gt;</operator><name>log2_chroma_h</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>preferredOutput</name> <operator>=</operator> <call><name>MAKEFOURCC</name><argument_list>(<argument><expr><literal type="char">'Y'</literal></expr></argument>,<argument><expr><literal type="char">'U'</literal></expr></argument>,<argument><expr><literal type="char">'Y'</literal></expr></argument>,<argument><expr><literal type="char">'2'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if> 
<if type="elseif">else if <condition>(<expr><name><name>mode</name><operator>-&gt;</operator><name>bit_depth</name></name> <operator>&gt;</operator> <literal type="number">8</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>preferredOutput</name> <operator>=</operator> <call><name>MAKEFOURCC</name><argument_list>(<argument><expr><literal type="char">'P'</literal></expr></argument>,<argument><expr><literal type="char">'0'</literal></expr></argument>,<argument><expr><literal type="char">'1'</literal></expr></argument>,<argument><expr><literal type="char">'0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name>preferredOutput</name> <operator>=</operator> <call><name>MAKEFOURCC</name><argument_list>(<argument><expr><literal type="char">'N'</literal></expr></argument>,<argument><expr><literal type="char">'V'</literal></expr></argument>,<argument><expr><literal type="char">'1'</literal></expr></argument>,<argument><expr><literal type="char">'2'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"favor decoder format %4.4s (for 4:%d:%d %d bits)"</literal></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>preferredOutput</name></expr></argument>,
<argument><expr><operator>(</operator><literal type="number">2</literal><operator>-</operator><name><name>mode</name><operator>-&gt;</operator><name>log2_chroma_w</name></name><operator>)</operator><operator>*</operator><literal type="number">2</literal></expr></argument>, <argument><expr><operator>(</operator><literal type="number">2</literal><operator>-</operator><name><name>mode</name><operator>-&gt;</operator><name>log2_chroma_w</name></name><operator>-</operator><name><name>mode</name><operator>-&gt;</operator><name>log2_chroma_h</name></name><operator>)</operator><operator>*</operator><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>mode</name><operator>-&gt;</operator><name>bit_depth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<for>for <control>(<init><decl><type><name>unsigned</name></type> <name>pass</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>pass</name> <operator>&lt;</operator> <literal type="number">2</literal> <operator>&amp;&amp;</operator> <name>err</name> <operator>!=</operator> <name>VLC_SUCCESS</name></expr>;</condition> <incr><expr><operator>++</operator><name>pass</name></expr></incr>)</control>
<block>{<block_content>
<for>for <control>(<init><decl><type><name>unsigned</name></type> <name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name><name>d3d_formats</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>name</name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>d3d9_format_t</name> <modifier>*</modifier></type><name>format</name> <init>= <expr><operator>&amp;</operator><name><name>d3d_formats</name><index>[<expr><name>j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><name>bool</name></type> <name>is_supported</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>
<for>for <control>(<init><decl><type><name>unsigned</name></type> <name>k</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><operator>!</operator><name>is_supported</name> <operator>&amp;&amp;</operator> <name>k</name> <operator>&lt;</operator> <name>output_count</name></expr>;</condition> <incr><expr><name>k</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>is_supported</name> <operator>=</operator> <name><name>format</name><operator>-&gt;</operator><name>format</name></name> <operator>==</operator> <name><name>output_list</name><index>[<expr><name>k</name></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></for>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>is_supported</name></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>pass</name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>format</name><operator>-&gt;</operator><name>format</name></name> <operator>!=</operator> <name>preferredOutput</name></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>


<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"Using decoder output '%s'"</literal></expr></argument>, <argument><expr><name><name>format</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>render</name></name> <operator>=</operator> <name><name>format</name><operator>-&gt;</operator><name>format</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>err</name> <operator>=</operator> <name>VLC_SUCCESS</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></for>
</block_content>}</block></for>
<expr_stmt><expr><call><name>CoTaskMemFree</name><argument_list>(<argument><expr><name>output_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>err</name></expr>;</return>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <name>int</name></type> <name>DxCreateVideoDecoder</name><parameter_list>(<parameter><decl><type><name>vlc_va_t</name> <modifier>*</modifier></type><name>va</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>codec_id</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>surface_count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vlc_va_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>va</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>HRESULT</name></type> <name>hr</name></decl>;</decl_stmt>

<expr_stmt><expr><name>hr</name> <operator>=</operator> <call><name>IDirectXVideoDecoderService_CreateSurface</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>d3ddec</name></name></expr></argument>,
<argument><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_width</name></name></expr></argument>,
<argument><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_height</name></name></expr></argument>,
<argument><expr><name>surface_count</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>render</name></name></expr></argument>,
<argument><expr><name>D3DPOOL_DEFAULT</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>,
<argument><expr><name>DXVA2_VideoDecoderRenderTarget</name></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>hw_surface</name></name></expr></argument>,
<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>FAILED</name><argument_list>(<argument><expr><name>hr</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"IDirectXVideoAccelerationService_CreateSurface %zu failed (hr=0x%lX)"</literal></expr></argument>, <argument><expr><name>surface_count</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>hr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"IDirectXVideoAccelerationService_CreateSurface succeed with %zu surfaces (%dx%d)"</literal></expr></argument>,
<argument><expr><name>surface_count</name></expr></argument>, <argument><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_width</name></name></expr></argument>, <argument><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>IDirect3DSurface9</name> <modifier>*</modifier></type><name>tstCrash</name></decl>;</decl_stmt>
<expr_stmt><expr><name>hr</name> <operator>=</operator> <call><name>IDirectXVideoDecoderService_CreateSurface</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>d3ddec</name></name></expr></argument>,
<argument><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_width</name></name></expr></argument>,
<argument><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_height</name></name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>render</name></name></expr></argument>,
<argument><expr><name>D3DPOOL_DEFAULT</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>,
<argument><expr><name>DXVA2_VideoDecoderRenderTarget</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>tstCrash</name></expr></argument>,
<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>FAILED</name><argument_list>(<argument><expr><name>hr</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"extra buffer impossible, avoid a crash (hr=0x%lX)"</literal></expr></argument>, <argument><expr><name>hr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>IDirect3DSurface9_Release</name><argument_list>(<argument><expr><name>tstCrash</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<decl_stmt><decl><type><name>DXVA2_VideoDesc</name></type> <name>dsc</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>ZeroMemory</name><argument_list>(<argument><expr><operator>&amp;</operator><name>dsc</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>dsc</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsc</name><operator>.</operator><name>SampleWidth</name></name> <operator>=</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsc</name><operator>.</operator><name>SampleHeight</name></name> <operator>=</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_height</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsc</name><operator>.</operator><name>Format</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>render</name></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>fmt</name><operator>-&gt;</operator><name>i_frame_rate</name></name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_frame_rate_base</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>dsc</name><operator>.</operator><name>InputSampleFreq</name><operator>.</operator><name>Numerator</name></name> <operator>=</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_frame_rate</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsc</name><operator>.</operator><name>InputSampleFreq</name><operator>.</operator><name>Denominator</name></name> <operator>=</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_frame_rate_base</name></name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name><name>dsc</name><operator>.</operator><name>InputSampleFreq</name><operator>.</operator><name>Numerator</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsc</name><operator>.</operator><name>InputSampleFreq</name><operator>.</operator><name>Denominator</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><name><name>dsc</name><operator>.</operator><name>OutputFrameFreq</name></name> <operator>=</operator> <name><name>dsc</name><operator>.</operator><name>InputSampleFreq</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsc</name><operator>.</operator><name>UABProtectionLevel</name></name> <operator>=</operator> <name>FALSE</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsc</name><operator>.</operator><name>Reserved</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>


<decl_stmt><decl><type><name>DXVA2_ExtendedFormat</name> <modifier>*</modifier></type><name>ext</name> <init>= <expr><operator>&amp;</operator><name><name>dsc</name><operator>.</operator><name>SampleFormat</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>SampleFormat</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>VideoChromaSubsampling</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>NominalRange</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>VideoTransferMatrix</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>VideoLighting</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>VideoPrimaries</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ext</name><operator>-&gt;</operator><name>VideoTransferFunction</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>


<decl_stmt><decl><type><name>UINT</name></type> <name>cfg_count</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>DXVA2_ConfigPictureDecode</name> <modifier>*</modifier></type><name>cfg_list</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>hr</name> <operator>=</operator> <call><name>IDirectXVideoDecoderService_GetDecoderConfigurations</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>d3ddec</name></name></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>selected_decoder</name><operator>-&gt;</operator><name>guid</name></name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>dsc</name></expr></argument>,
<argument><expr><name>NULL</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>cfg_count</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>cfg_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>FAILED</name><argument_list>(<argument><expr><name>hr</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"IDirectXVideoDecoderService_GetDecoderConfigurations failed. (hr=0x%lX)"</literal></expr></argument>, <argument><expr><name>hr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"we got %d decoder configurations"</literal></expr></argument>, <argument><expr><name>cfg_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>cfg_score</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<for>for <control>(<init><decl><type><name>unsigned</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>cfg_count</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>DXVA2_ConfigPictureDecode</name> <modifier>*</modifier></type><name>cfg</name> <init>= <expr><operator>&amp;</operator><name><name>cfg_list</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>


<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"configuration[%d] ConfigBitstreamRaw %d"</literal></expr></argument>,
<argument><expr><name>i</name></expr></argument>, <argument><expr><name><name>cfg</name><operator>-&gt;</operator><name>ConfigBitstreamRaw</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>score</name></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name><name>cfg</name><operator>-&gt;</operator><name>ConfigBitstreamRaw</name></name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>score</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name>codec_id</name> <operator>==</operator> <name>AV_CODEC_ID_H264</name> <operator>&amp;&amp;</operator> <name><name>cfg</name><operator>-&gt;</operator><name>ConfigBitstreamRaw</name></name> <operator>==</operator> <literal type="number">2</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>score</name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></else></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>IsEqualGUID</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>cfg</name><operator>-&gt;</operator><name>guidConfigBitstreamEncryption</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>DXVA2_NoEncrypt</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>cfg_score</name> <operator>&lt;</operator> <name>score</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>cfg</name></name> <operator>=</operator> <operator>*</operator><name>cfg</name></expr>;</expr_stmt>
<expr_stmt><expr><name>cfg_score</name> <operator>=</operator> <name>score</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>CoTaskMemFree</name><argument_list>(<argument><expr><name>cfg_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>cfg_score</name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"Failed to find a supported decoder configuration"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>



<if_stmt><if>if <condition>(<expr><call><name>FAILED</name><argument_list>(<argument><expr><call><name>IDirectXVideoDecoderService_CreateVideoDecoder</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>d3ddec</name></name></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>selected_decoder</name><operator>-&gt;</operator><name>guid</name></name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>dsc</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>cfg</name></name></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>hw_surface</name></name></expr></argument>,
<argument><expr><name>surface_count</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>hw</name><operator>.</operator><name>decoder</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"IDirectXVideoDecoderService_CreateVideoDecoder failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>va</name></expr></argument>, <argument><expr><literal type="string">"IDirectXVideoDecoderService_CreateVideoDecoder succeed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
<label><name>error</name>:</label>
<for>for <control>(<init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>surface_count</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>IDirect3DSurface9_Release</name><argument_list>( <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>hw_surface</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>DxDestroyVideoDecoder</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vlc_va_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name>opaque</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>hw</name><operator>.</operator><name>decoder</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>IDirectXVideoDecoder_Release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>hw</name><operator>.</operator><name>decoder</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>hw_surface</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>)</condition>
<block>{<block_content>
<for>for <control>(<init><decl><type><name>unsigned</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>sys</name><operator>-&gt;</operator><name>hw</name><operator>.</operator><name>surface_count</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>IDirect3DSurface9_Release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>hw_surface</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>IDirect3DDeviceManager9_CloseDeviceHandle</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>devmng</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>device</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>IDirectXVideoDecoderService_Release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>d3ddec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>IDirect3DDeviceManager9_Release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>devmng</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>dxva2_dll</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>FreeLibrary</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>dxva2_dll</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
