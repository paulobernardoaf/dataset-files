<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\codec\omxil\omxil.h">





















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>RPI_OMX</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OMX_SKIP64BIT</name></cpp:macro></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>




<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"OMX_Core.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"OMX_Index.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"OMX_Component.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"OMX_Video.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"omxil_utils.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"omxil_core.h"</cpp:file></cpp:include>

<enum>enum
<block>{
<decl><name>BUF_STATE_NOT_OWNED</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>BUF_STATE_OWNED</name></decl>,
}</block>;</enum>




<typedef>typedef <type><struct>struct <name>OmxFifo</name>
<block>{
<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>lock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_cond_t</name></type> <name>wait</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_BUFFERHEADERTYPE</name> <modifier>*</modifier></type><name>p_first</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BUFFERHEADERTYPE</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_last</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>offset</name></decl>;</decl_stmt>

}</block></struct></type> <name>OmxFifo</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OmxPort</name>
<block>{
<decl_stmt><decl><type><name>bool</name></type> <name>b_valid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>i_port_index</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_HANDLETYPE</name></type> <name>omx_handle</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_PARAM_PORTDEFINITIONTYPE</name></type> <name>definition</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>es_format_t</name> <modifier>*</modifier></type><name>p_fmt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_frame_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_frame_stride</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_frame_stride_chroma_div</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_buffers</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BUFFERHEADERTYPE</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_buffers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OmxFifo</name></type> <name>fifo</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OmxFormatParam</name></type> <name>format_param</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>b_reconfigure</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>b_update_def</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>b_direct</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>b_flushed</name></decl>;</decl_stmt>
}</block></struct></type> <name>OmxPort</name>;</typedef>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>OMX_HANDLETYPE</name></type> <name>omx_handle</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_enc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>psz_component</name><index>[<expr><name>OMX_MAX_STRINGNAME_SIZE</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>ppsz_components</name><index>[<expr><name>MAX_COMPONENTS_LIST_SIZE</name></expr>]</index><index>[<expr><name>OMX_MAX_STRINGNAME_SIZE</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>components</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_quirks</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OmxEventQueue</name></type> <name>event_queue</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OmxPort</name> <modifier>*</modifier></type><name>p_ports</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>ports</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OmxPort</name></type> <name>in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OmxPort</name></type> <name>out</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_error</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_aspect_ratio_handled</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>date_t</name></type> <name>end_date</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_nal_size_length</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>b_use_pts</name></decl>;</decl_stmt>

}</block></struct></type> <name>decoder_sys_t</name>;</typedef>
</unit>
