<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\codec\omxil\OMX_IVCommon.h">



























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>OMX_IVCommon_h</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OMX_IVCommon_h</name></cpp:macro></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 







<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;OMX_Core.h&gt;</cpp:file></cpp:include>













































<typedef>typedef <type><enum>enum <name>OMX_COLOR_FORMATTYPE</name> <block>{
<decl><name>OMX_COLOR_FormatUnused</name></decl>,
<decl><name>OMX_COLOR_FormatMonochrome</name></decl>,
<decl><name>OMX_COLOR_Format8bitRGB332</name></decl>,
<decl><name>OMX_COLOR_Format12bitRGB444</name></decl>,
<decl><name>OMX_COLOR_Format16bitARGB4444</name></decl>,
<decl><name>OMX_COLOR_Format16bitARGB1555</name></decl>,
<decl><name>OMX_COLOR_Format16bitRGB565</name></decl>,
<decl><name>OMX_COLOR_Format16bitBGR565</name></decl>,
<decl><name>OMX_COLOR_Format18bitRGB666</name></decl>,
<decl><name>OMX_COLOR_Format18bitARGB1665</name></decl>,
<decl><name>OMX_COLOR_Format19bitARGB1666</name></decl>, 
<decl><name>OMX_COLOR_Format24bitRGB888</name></decl>,
<decl><name>OMX_COLOR_Format24bitBGR888</name></decl>,
<decl><name>OMX_COLOR_Format24bitARGB1887</name></decl>,
<decl><name>OMX_COLOR_Format25bitARGB1888</name></decl>,
<decl><name>OMX_COLOR_Format32bitBGRA8888</name></decl>,
<decl><name>OMX_COLOR_Format32bitARGB8888</name></decl>,
<decl><name>OMX_COLOR_FormatYUV411Planar</name></decl>,
<decl><name>OMX_COLOR_FormatYUV411PackedPlanar</name></decl>,
<decl><name>OMX_COLOR_FormatYUV420Planar</name></decl>,
<decl><name>OMX_COLOR_FormatYUV420PackedPlanar</name></decl>,
<decl><name>OMX_COLOR_FormatYUV420SemiPlanar</name></decl>,
<decl><name>OMX_COLOR_FormatYUV422Planar</name></decl>,
<decl><name>OMX_COLOR_FormatYUV422PackedPlanar</name></decl>,
<decl><name>OMX_COLOR_FormatYUV422SemiPlanar</name></decl>,
<decl><name>OMX_COLOR_FormatYCbYCr</name></decl>,
<decl><name>OMX_COLOR_FormatYCrYCb</name></decl>,
<decl><name>OMX_COLOR_FormatCbYCrY</name></decl>,
<decl><name>OMX_COLOR_FormatCrYCbY</name></decl>,
<decl><name>OMX_COLOR_FormatYUV444Interleaved</name></decl>,
<decl><name>OMX_COLOR_FormatRawBayer8bit</name></decl>,
<decl><name>OMX_COLOR_FormatRawBayer10bit</name></decl>,
<decl><name>OMX_COLOR_FormatRawBayer8bitcompressed</name></decl>,
<decl><name>OMX_COLOR_FormatL2</name></decl>, 
<decl><name>OMX_COLOR_FormatL4</name></decl>, 
<decl><name>OMX_COLOR_FormatL8</name></decl>, 
<decl><name>OMX_COLOR_FormatL16</name></decl>, 
<decl><name>OMX_COLOR_FormatL24</name></decl>, 
<decl><name>OMX_COLOR_FormatL32</name></decl>,
<decl><name>OMX_COLOR_FormatYUV420PackedSemiPlanar</name></decl>,
<decl><name>OMX_COLOR_FormatYUV422PackedSemiPlanar</name></decl>,
<decl><name>OMX_COLOR_Format18BitBGR666</name></decl>,
<decl><name>OMX_COLOR_Format24BitARGB6666</name></decl>,
<decl><name>OMX_COLOR_Format24BitABGR6666</name></decl>,
<decl><name>OMX_COLOR_FormatKhronosExtensions</name> <init>= <expr><literal type="number">0x6F000000</literal></expr></init></decl>, 
<decl><name>OMX_COLOR_FormatVendorStartUnused</name> <init>= <expr><literal type="number">0x7F000000</literal></expr></init></decl>, 
<decl><name>OMX_COLOR_FormatMax</name> <init>= <expr><literal type="number">0x7FFFFFFF</literal></expr></init></decl>
}</block></enum></type> <name>OMX_COLOR_FORMATTYPE</name>;</typedef>







<typedef>typedef <type><struct>struct <name>OMX_CONFIG_COLORCONVERSIONTYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_S32</name></type> <name><name>xColorMatrix</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_S32</name></type> <name><name>xColorOffset</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt> 
}</block></struct></type><name>OMX_CONFIG_COLORCONVERSIONTYPE</name>;</typedef>







<typedef>typedef <type><struct>struct <name>OMX_CONFIG_SCALEFACTORTYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_S32</name></type> <name>xWidth</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_S32</name></type> <name>xHeight</name></decl>;</decl_stmt> 
}</block></struct></type><name>OMX_CONFIG_SCALEFACTORTYPE</name>;</typedef>





<typedef>typedef <type><enum>enum <name>OMX_IMAGEFILTERTYPE</name> <block>{
<decl><name>OMX_ImageFilterNone</name></decl>,
<decl><name>OMX_ImageFilterNoise</name></decl>,
<decl><name>OMX_ImageFilterEmboss</name></decl>,
<decl><name>OMX_ImageFilterNegative</name></decl>,
<decl><name>OMX_ImageFilterSketch</name></decl>,
<decl><name>OMX_ImageFilterOilPaint</name></decl>,
<decl><name>OMX_ImageFilterHatch</name></decl>,
<decl><name>OMX_ImageFilterGpen</name></decl>,
<decl><name>OMX_ImageFilterAntialias</name></decl>, 
<decl><name>OMX_ImageFilterDeRing</name></decl>, 
<decl><name>OMX_ImageFilterSolarize</name></decl>,
<decl><name>OMX_ImageFilterKhronosExtensions</name> <init>= <expr><literal type="number">0x6F000000</literal></expr></init></decl>, 
<decl><name>OMX_ImageFilterVendorStartUnused</name> <init>= <expr><literal type="number">0x7F000000</literal></expr></init></decl>, 
<decl><name>OMX_ImageFilterMax</name> <init>= <expr><literal type="number">0x7FFFFFFF</literal></expr></init></decl>
}</block></enum></type> <name>OMX_IMAGEFILTERTYPE</name>;</typedef>











<typedef>typedef <type><struct>struct <name>OMX_CONFIG_IMAGEFILTERTYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_IMAGEFILTERTYPE</name></type> <name>eImageFilter</name></decl>;</decl_stmt>
}</block></struct></type> <name>OMX_CONFIG_IMAGEFILTERTYPE</name>;</typedef>















<typedef>typedef <type><struct>struct <name>OMX_CONFIG_COLORENHANCEMENTTYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bColorEnhancement</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U8</name></type> <name>nCustomizedU</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U8</name></type> <name>nCustomizedV</name></decl>;</decl_stmt>
}</block></struct></type> <name>OMX_CONFIG_COLORENHANCEMENTTYPE</name>;</typedef>












<typedef>typedef <type><struct>struct <name>OMX_CONFIG_COLORKEYTYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nARGBColor</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nARGBMask</name></decl>;</decl_stmt>
}</block></struct></type> <name>OMX_CONFIG_COLORKEYTYPE</name>;</typedef>















<typedef>typedef <type><enum>enum <name>OMX_COLORBLENDTYPE</name> <block>{
<decl><name>OMX_ColorBlendNone</name></decl>,
<decl><name>OMX_ColorBlendAlphaConstant</name></decl>,
<decl><name>OMX_ColorBlendAlphaPerPixel</name></decl>,
<decl><name>OMX_ColorBlendAlternate</name></decl>,
<decl><name>OMX_ColorBlendAnd</name></decl>,
<decl><name>OMX_ColorBlendOr</name></decl>,
<decl><name>OMX_ColorBlendInvert</name></decl>,
<decl><name>OMX_ColorBlendKhronosExtensions</name> <init>= <expr><literal type="number">0x6F000000</literal></expr></init></decl>, 
<decl><name>OMX_ColorBlendVendorStartUnused</name> <init>= <expr><literal type="number">0x7F000000</literal></expr></init></decl>, 
<decl><name>OMX_ColorBlendMax</name> <init>= <expr><literal type="number">0x7FFFFFFF</literal></expr></init></decl>
}</block></enum></type> <name>OMX_COLORBLENDTYPE</name>;</typedef>












<typedef>typedef <type><struct>struct <name>OMX_CONFIG_COLORBLENDTYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nRGBAlphaConstant</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_COLORBLENDTYPE</name></type> <name>eColorBlend</name></decl>;</decl_stmt>
}</block></struct></type> <name>OMX_CONFIG_COLORBLENDTYPE</name>;</typedef>












<typedef>typedef <type><struct>struct <name>OMX_FRAMESIZETYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nWidth</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nHeight</name></decl>;</decl_stmt>
}</block></struct></type> <name>OMX_FRAMESIZETYPE</name>;</typedef>











<typedef>typedef <type><struct>struct <name>OMX_CONFIG_ROTATIONTYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_S32</name></type> <name>nRotation</name></decl>;</decl_stmt> 
}</block></struct></type> <name>OMX_CONFIG_ROTATIONTYPE</name>;</typedef>











<typedef>typedef <type><enum>enum <name>OMX_MIRRORTYPE</name> <block>{
<decl><name>OMX_MirrorNone</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>OMX_MirrorVertical</name></decl>,
<decl><name>OMX_MirrorHorizontal</name></decl>,
<decl><name>OMX_MirrorBoth</name></decl>, 
<decl><name>OMX_MirrorKhronosExtensions</name> <init>= <expr><literal type="number">0x6F000000</literal></expr></init></decl>, 
<decl><name>OMX_MirrorVendorStartUnused</name> <init>= <expr><literal type="number">0x7F000000</literal></expr></init></decl>, 
<decl><name>OMX_MirrorMax</name> <init>= <expr><literal type="number">0x7FFFFFFF</literal></expr></init></decl> 
}</block></enum></type> <name>OMX_MIRRORTYPE</name>;</typedef>











<typedef>typedef <type><struct>struct <name>OMX_CONFIG_MIRRORTYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_MIRRORTYPE</name></type> <name>eMirror</name></decl>;</decl_stmt>
}</block></struct></type> <name>OMX_CONFIG_MIRRORTYPE</name>;</typedef>












<typedef>typedef <type><struct>struct <name>OMX_CONFIG_POINTTYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_S32</name></type> <name>nX</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_S32</name></type> <name>nY</name></decl>;</decl_stmt>
}</block></struct></type> <name>OMX_CONFIG_POINTTYPE</name>;</typedef>














<typedef>typedef <type><struct>struct <name>OMX_CONFIG_RECTTYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_S32</name></type> <name>nLeft</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_S32</name></type> <name>nTop</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nWidth</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nHeight</name></decl>;</decl_stmt>
}</block></struct></type> <name>OMX_CONFIG_RECTTYPE</name>;</typedef>











<typedef>typedef <type><struct>struct <name>OMX_PARAM_DEBLOCKINGTYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bDeblocking</name></decl>;</decl_stmt>
}</block></struct></type> <name>OMX_PARAM_DEBLOCKINGTYPE</name>;</typedef>











<typedef>typedef <type><struct>struct <name>OMX_CONFIG_FRAMESTABTYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bStab</name></decl>;</decl_stmt>
}</block></struct></type> <name>OMX_CONFIG_FRAMESTABTYPE</name>;</typedef>









<typedef>typedef <type><enum>enum <name>OMX_WHITEBALCONTROLTYPE</name> <block>{
<decl><name>OMX_WhiteBalControlOff</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>OMX_WhiteBalControlAuto</name></decl>,
<decl><name>OMX_WhiteBalControlSunLight</name></decl>,
<decl><name>OMX_WhiteBalControlCloudy</name></decl>,
<decl><name>OMX_WhiteBalControlShade</name></decl>,
<decl><name>OMX_WhiteBalControlTungsten</name></decl>,
<decl><name>OMX_WhiteBalControlFluorescent</name></decl>,
<decl><name>OMX_WhiteBalControlIncandescent</name></decl>,
<decl><name>OMX_WhiteBalControlFlash</name></decl>,
<decl><name>OMX_WhiteBalControlHorizon</name></decl>,
<decl><name>OMX_WhiteBalControlKhronosExtensions</name> <init>= <expr><literal type="number">0x6F000000</literal></expr></init></decl>, 
<decl><name>OMX_WhiteBalControlVendorStartUnused</name> <init>= <expr><literal type="number">0x7F000000</literal></expr></init></decl>, 
<decl><name>OMX_WhiteBalControlMax</name> <init>= <expr><literal type="number">0x7FFFFFFF</literal></expr></init></decl>
}</block></enum></type> <name>OMX_WHITEBALCONTROLTYPE</name>;</typedef>











<typedef>typedef <type><struct>struct <name>OMX_CONFIG_WHITEBALCONTROLTYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_WHITEBALCONTROLTYPE</name></type> <name>eWhiteBalControl</name></decl>;</decl_stmt>
}</block></struct></type> <name>OMX_CONFIG_WHITEBALCONTROLTYPE</name>;</typedef>





<typedef>typedef <type><enum>enum <name>OMX_EXPOSURECONTROLTYPE</name> <block>{
<decl><name>OMX_ExposureControlOff</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>OMX_ExposureControlAuto</name></decl>,
<decl><name>OMX_ExposureControlNight</name></decl>,
<decl><name>OMX_ExposureControlBackLight</name></decl>,
<decl><name>OMX_ExposureControlSpotLight</name></decl>,
<decl><name>OMX_ExposureControlSports</name></decl>,
<decl><name>OMX_ExposureControlSnow</name></decl>,
<decl><name>OMX_ExposureControlBeach</name></decl>,
<decl><name>OMX_ExposureControlLargeAperture</name></decl>,
<decl><name>OMX_ExposureControlSmallApperture</name></decl>,
<decl><name>OMX_ExposureControlKhronosExtensions</name> <init>= <expr><literal type="number">0x6F000000</literal></expr></init></decl>, 
<decl><name>OMX_ExposureControlVendorStartUnused</name> <init>= <expr><literal type="number">0x7F000000</literal></expr></init></decl>, 
<decl><name>OMX_ExposureControlMax</name> <init>= <expr><literal type="number">0x7FFFFFFF</literal></expr></init></decl>
}</block></enum></type> <name>OMX_EXPOSURECONTROLTYPE</name>;</typedef>











<typedef>typedef <type><struct>struct <name>OMX_CONFIG_EXPOSURECONTROLTYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_EXPOSURECONTROLTYPE</name></type> <name>eExposureControl</name></decl>;</decl_stmt>
}</block></struct></type> <name>OMX_CONFIG_EXPOSURECONTROLTYPE</name>;</typedef>













<typedef>typedef <type><struct>struct <name>OMX_PARAM_SENSORMODETYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nFrameRate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bOneShot</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_FRAMESIZETYPE</name></type> <name>sFrameSize</name></decl>;</decl_stmt>
}</block></struct></type> <name>OMX_PARAM_SENSORMODETYPE</name>;</typedef>











<typedef>typedef <type><struct>struct <name>OMX_CONFIG_CONTRASTTYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_S32</name></type> <name>nContrast</name></decl>;</decl_stmt>
}</block></struct></type> <name>OMX_CONFIG_CONTRASTTYPE</name>;</typedef>











<typedef>typedef <type><struct>struct <name>OMX_CONFIG_BRIGHTNESSTYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nBrightness</name></decl>;</decl_stmt>
}</block></struct></type> <name>OMX_CONFIG_BRIGHTNESSTYPE</name>;</typedef>













<typedef>typedef <type><struct>struct <name>OMX_CONFIG_BACKLIGHTTYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nBacklight</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nTimeout</name></decl>;</decl_stmt>
}</block></struct></type> <name>OMX_CONFIG_BACKLIGHTTYPE</name>;</typedef>











<typedef>typedef <type><struct>struct <name>OMX_CONFIG_GAMMATYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_S32</name></type> <name>nGamma</name></decl>;</decl_stmt>
}</block></struct></type> <name>OMX_CONFIG_GAMMATYPE</name>;</typedef>












<typedef>typedef <type><struct>struct <name>OMX_CONFIG_SATURATIONTYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_S32</name></type> <name>nSaturation</name></decl>;</decl_stmt>
}</block></struct></type> <name>OMX_CONFIG_SATURATIONTYPE</name>;</typedef>












<typedef>typedef <type><struct>struct <name>OMX_CONFIG_LIGHTNESSTYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_S32</name></type> <name>nLightness</name></decl>;</decl_stmt>
}</block></struct></type> <name>OMX_CONFIG_LIGHTNESSTYPE</name>;</typedef>















<typedef>typedef <type><struct>struct <name>OMX_CONFIG_PLANEBLENDTYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nDepth</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nAlpha</name></decl>;</decl_stmt>
}</block></struct></type> <name>OMX_CONFIG_PLANEBLENDTYPE</name>;</typedef>















<typedef>typedef <type><struct>struct <name>OMX_PARAM_INTERLEAVETYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bEnable</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nInterleavePortIndex</name></decl>;</decl_stmt>
}</block></struct></type> <name>OMX_PARAM_INTERLEAVETYPE</name>;</typedef>





<typedef>typedef <type><enum>enum <name>OMX_TRANSITIONEFFECTTYPE</name> <block>{
<decl><name>OMX_EffectNone</name></decl>,
<decl><name>OMX_EffectFadeFromBlack</name></decl>,
<decl><name>OMX_EffectFadeToBlack</name></decl>,
<decl><name>OMX_EffectUnspecifiedThroughConstantColor</name></decl>,
<decl><name>OMX_EffectDissolve</name></decl>,
<decl><name>OMX_EffectWipe</name></decl>,
<decl><name>OMX_EffectUnspecifiedMixOfTwoScenes</name></decl>,
<decl><name>OMX_EffectKhronosExtensions</name> <init>= <expr><literal type="number">0x6F000000</literal></expr></init></decl>, 
<decl><name>OMX_EffectVendorStartUnused</name> <init>= <expr><literal type="number">0x7F000000</literal></expr></init></decl>, 
<decl><name>OMX_EffectMax</name> <init>= <expr><literal type="number">0x7FFFFFFF</literal></expr></init></decl>
}</block></enum></type> <name>OMX_TRANSITIONEFFECTTYPE</name>;</typedef>











<typedef>typedef <type><struct>struct <name>OMX_CONFIG_TRANSITIONEFFECTTYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_TRANSITIONEFFECTTYPE</name></type> <name>eEffect</name></decl>;</decl_stmt>
}</block></struct></type> <name>OMX_CONFIG_TRANSITIONEFFECTTYPE</name>;</typedef>







<typedef>typedef <type><enum>enum <name>OMX_DATAUNITTYPE</name> <block>{
<decl><name>OMX_DataUnitCodedPicture</name></decl>,
<decl><name>OMX_DataUnitVideoSegment</name></decl>,
<decl><name>OMX_DataUnitSeveralSegments</name></decl>,
<decl><name>OMX_DataUnitArbitraryStreamSection</name></decl>,
<decl><name>OMX_DataUnitKhronosExtensions</name> <init>= <expr><literal type="number">0x6F000000</literal></expr></init></decl>, 
<decl><name>OMX_DataUnitVendorStartUnused</name> <init>= <expr><literal type="number">0x7F000000</literal></expr></init></decl>, 
<decl><name>OMX_DataUnitMax</name> <init>= <expr><literal type="number">0x7FFFFFFF</literal></expr></init></decl>
}</block></enum></type> <name>OMX_DATAUNITTYPE</name>;</typedef>







<typedef>typedef <type><enum>enum <name>OMX_DATAUNITENCAPSULATIONTYPE</name> <block>{
<decl><name>OMX_DataEncapsulationElementaryStream</name></decl>,
<decl><name>OMX_DataEncapsulationGenericPayload</name></decl>,
<decl><name>OMX_DataEncapsulationRtpPayload</name></decl>,
<decl><name>OMX_DataEncapsulationKhronosExtensions</name> <init>= <expr><literal type="number">0x6F000000</literal></expr></init></decl>, 
<decl><name>OMX_DataEncapsulationVendorStartUnused</name> <init>= <expr><literal type="number">0x7F000000</literal></expr></init></decl>, 
<decl><name>OMX_DataEncapsulationMax</name> <init>= <expr><literal type="number">0x7FFFFFFF</literal></expr></init></decl>
}</block></enum></type> <name>OMX_DATAUNITENCAPSULATIONTYPE</name>;</typedef>





<typedef>typedef <type><struct>struct <name>OMX_PARAM_DATAUNITTYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_DATAUNITTYPE</name></type> <name>eUnitType</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_DATAUNITENCAPSULATIONTYPE</name></type> <name>eEncapsulationType</name></decl>;</decl_stmt>
}</block></struct></type> <name>OMX_PARAM_DATAUNITTYPE</name>;</typedef>





<typedef>typedef <type><enum>enum <name>OMX_DITHERTYPE</name> <block>{
<decl><name>OMX_DitherNone</name></decl>,
<decl><name>OMX_DitherOrdered</name></decl>,
<decl><name>OMX_DitherErrorDiffusion</name></decl>,
<decl><name>OMX_DitherOther</name></decl>,
<decl><name>OMX_DitherKhronosExtensions</name> <init>= <expr><literal type="number">0x6F000000</literal></expr></init></decl>, 
<decl><name>OMX_DitherVendorStartUnused</name> <init>= <expr><literal type="number">0x7F000000</literal></expr></init></decl>, 
<decl><name>OMX_DitherMax</name> <init>= <expr><literal type="number">0x7FFFFFFF</literal></expr></init></decl>
}</block></enum></type> <name>OMX_DITHERTYPE</name>;</typedef>





<typedef>typedef <type><struct>struct <name>OMX_CONFIG_DITHERTYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_DITHERTYPE</name></type> <name>eDither</name></decl>;</decl_stmt> 
}</block></struct></type> <name>OMX_CONFIG_DITHERTYPE</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OMX_CONFIG_CAPTUREMODETYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bContinuous</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bFrameLimited</name></decl>;</decl_stmt> 




<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nFrameLimit</name></decl>;</decl_stmt> 

}</block></struct></type> <name>OMX_CONFIG_CAPTUREMODETYPE</name>;</typedef>

<typedef>typedef <type><enum>enum <name>OMX_METERINGTYPE</name> <block>{

<decl><name>OMX_MeteringModeAverage</name></decl>, 
<decl><name>OMX_MeteringModeSpot</name></decl>, 
<decl><name>OMX_MeteringModeMatrix</name></decl>, 

<decl><name>OMX_MeteringKhronosExtensions</name> <init>= <expr><literal type="number">0x6F000000</literal></expr></init></decl>, 
<decl><name>OMX_MeteringVendorStartUnused</name> <init>= <expr><literal type="number">0x7F000000</literal></expr></init></decl>, 
<decl><name>OMX_EVModeMax</name> <init>= <expr><literal type="number">0x7fffffff</literal></expr></init></decl>
}</block></enum></type> <name>OMX_METERINGTYPE</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OMX_CONFIG_EXPOSUREVALUETYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_METERINGTYPE</name></type> <name>eMetering</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_S32</name></type> <name>xEVCompensation</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nApertureFNumber</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bAutoAperture</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nShutterSpeedMsec</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bAutoShutterSpeed</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSensitivity</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bAutoSensitivity</name></decl>;</decl_stmt> 
}</block></struct></type> <name>OMX_CONFIG_EXPOSUREVALUETYPE</name>;</typedef>


















<typedef>typedef <type><struct>struct <name>OMX_CONFIG_FOCUSREGIONTYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bCenter</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bLeft</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bRight</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bTop</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bBottom</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bTopLeft</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bTopRight</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bBottomLeft</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bBottomRight</name></decl>;</decl_stmt>
}</block></struct></type> <name>OMX_CONFIG_FOCUSREGIONTYPE</name>;</typedef>




<typedef>typedef <type><enum>enum <name>OMX_FOCUSSTATUSTYPE</name> <block>{
<decl><name>OMX_FocusStatusOff</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>OMX_FocusStatusRequest</name></decl>,
<decl><name>OMX_FocusStatusReached</name></decl>,
<decl><name>OMX_FocusStatusUnableToReach</name></decl>,
<decl><name>OMX_FocusStatusLost</name></decl>,
<decl><name>OMX_FocusStatusKhronosExtensions</name> <init>= <expr><literal type="number">0x6F000000</literal></expr></init></decl>, 
<decl><name>OMX_FocusStatusVendorStartUnused</name> <init>= <expr><literal type="number">0x7F000000</literal></expr></init></decl>, 
<decl><name>OMX_FocusStatusMax</name> <init>= <expr><literal type="number">0x7FFFFFFF</literal></expr></init></decl>
}</block></enum></type> <name>OMX_FOCUSSTATUSTYPE</name>;</typedef>



















<typedef>typedef <type><struct>struct <name>OMX_PARAM_FOCUSSTATUSTYPE</name> <block>{
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_VERSIONTYPE</name></type> <name>nVersion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_U32</name></type> <name>nPortIndex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_FOCUSSTATUSTYPE</name></type> <name>eFocusStatus</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bCenterStatus</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bLeftStatus</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bRightStatus</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bTopStatus</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bBottomStatus</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bTopLeftStatus</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bTopRightStatus</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bBottomLeftStatus</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OMX_BOOL</name></type> <name>bBottomRightStatus</name></decl>;</decl_stmt>
}</block></struct></type> <name>OMX_PARAM_FOCUSSTATUSTYPE</name>;</typedef>



<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
