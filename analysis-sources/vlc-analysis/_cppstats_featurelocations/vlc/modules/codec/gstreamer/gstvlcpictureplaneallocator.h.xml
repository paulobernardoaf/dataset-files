<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\codec\gstreamer\gstvlcpictureplaneallocator.h">

























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>VLC_GST_PICTURE_PLANE_ALLOCATOR_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_GST_PICTURE_PLANE_ALLOCATOR_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;gst/gst.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;gst/video/video.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;gst/video/gstvideometa.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_codec.h&gt;</cpp:file></cpp:include>

<typedef>typedef <type><name><name>struct</name> <name>_GstVlcPicturePlane</name></name></type> <name>GstVlcPicturePlane</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>_GstVlcPicturePlaneAllocator</name></name></type> <name>GstVlcPicturePlaneAllocator</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>_GstVlcPicturePlaneAllocatorClass</name></name></type> \
<name>GstVlcPicturePlaneAllocatorClass</name>;</typedef>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GST_TYPE_VLC_PICTURE_PLANE_ALLOCATOR</name></cpp:macro> <cpp:value>(gst_vlc_picture_plane_allocator_get_type())</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GST_IS_VLC_PICTURE_PLANE_ALLOCATOR</name><parameter_list>(<parameter><type><name>obj</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GST_TYPE_VLC_PICTURE_PLANE_ALLOCATOR))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GST_VLC_PICTURE_PLANE_ALLOCATOR</name><parameter_list>(<parameter><type><name>obj</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(G_TYPE_CHECK_INSTANCE_CAST ((obj), GST_TYPE_VLC_PICTURE_PLANE_ALLOCATOR, GstVlcPicturePlaneAllocator))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GST_VLC_PICTURE_PLANE_ALLOCATOR_CAST</name><parameter_list>(<parameter><type><name>obj</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((GstVlcPicturePlaneAllocator*)(obj))</cpp:value></cpp:define>


<struct>struct <name>_GstVlcPicturePlane</name>
<block>{
<decl_stmt><decl><type><name>GstMemory</name></type> <name>parent</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>decoder_t</name> <modifier>*</modifier></type><name>p_dec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>p_pic</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>plane_t</name> <modifier>*</modifier></type><name>p_plane</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>_GstVlcPicturePlaneAllocator</name>
<block>{
<decl_stmt><decl><type><name>GstAllocator</name></type> <name>parent</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>picture_t</name></type> <name>pic_info</name></decl>;</decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name>decoder_t</name> <modifier>*</modifier></type><name>p_dec</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>_GstVlcPicturePlaneAllocatorClass</name>
<block>{
<decl_stmt><decl><type><name>GstAllocatorClass</name></type> <name>parent_class</name></decl>;</decl_stmt>
}</block>;</struct>

<function_decl><type><name>GType</name></type> <name>gst_vlc_picture_plane_allocator_get_type</name><parameter_list>( <parameter><decl><type><name>void</name></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>GstVlcPicturePlaneAllocator</name><modifier>*</modifier></type> <name>gst_vlc_picture_plane_allocator_new</name><parameter_list>(
<parameter><decl><type><name>decoder_t</name> <modifier>*</modifier></type><name>p_dec</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>gst_vlc_picture_plane_allocator_query_format</name><parameter_list>(
<parameter><decl><type><name>GstVlcPicturePlaneAllocator</name> <modifier>*</modifier></type><name>p_gallocator</name></decl></parameter>, <parameter><decl><type><name>GstVideoInfo</name> <modifier>*</modifier></type><name>p_info</name></decl></parameter>,
<parameter><decl><type><name>GstVideoAlignment</name> <modifier>*</modifier></type><name>p_align</name></decl></parameter>, <parameter><decl><type><name>GstCaps</name> <modifier>*</modifier></type><name>p_caps</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>gst_vlc_set_vout_fmt</name><parameter_list>( <parameter><decl><type><name>GstVideoInfo</name> <modifier>*</modifier></type><name>p_info</name></decl></parameter>, <parameter><decl><type><name>GstVideoAlignment</name> <modifier>*</modifier></type><name>p_align</name></decl></parameter>,
<parameter><decl><type><name>GstCaps</name> <modifier>*</modifier></type><name>p_caps</name></decl></parameter>, <parameter><decl><type><name>decoder_t</name> <modifier>*</modifier></type><name>p_dec</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>gst_vlc_dec_ensure_empty_queue</name><parameter_list>( <parameter><decl><type><name>decoder_t</name><modifier>*</modifier></type> <name>p_dec</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>gst_vlc_picture_plane_allocator_hold</name><parameter_list>( <parameter><decl><type><name>GstVlcPicturePlaneAllocator</name>
<modifier>*</modifier></type><name>p_allocator</name></decl></parameter>, <parameter><decl><type><name>GstBuffer</name> <modifier>*</modifier></type><name>p_buffer</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>gst_vlc_picture_plane_allocator_release</name><parameter_list>(
<parameter><decl><type><name>GstVlcPicturePlaneAllocator</name> <modifier>*</modifier></type><name>p_allocator</name></decl></parameter>, <parameter><decl><type><name>GstBuffer</name> <modifier>*</modifier></type><name>p_buffer</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>gst_vlc_picture_plane_allocator_alloc</name><parameter_list>(
<parameter><decl><type><name>GstVlcPicturePlaneAllocator</name> <modifier>*</modifier></type><name>p_allocator</name></decl></parameter>,
<parameter><decl><type><name>GstBuffer</name> <modifier>*</modifier></type><name>p_buffer</name></decl></parameter> )</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
