<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\video_output\opengl\interop.h">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>VLC_GL_INTEROP_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_GL_INTEROP_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_opengl.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_picture.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_picture_pool.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gl_common.h"</cpp:file></cpp:include>

<struct_decl>struct <name>vlc_gl_interop</name>;</struct_decl>

<struct>struct <name>vlc_gl_interop_ops</name> <block>{














<function_decl><type><name>int</name></type>
(<modifier>*</modifier><name>allocate_textures</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_gl_interop</name></name> <modifier>*</modifier></type><name>interop</name></decl></parameter>,
<parameter><decl><type><name>GLuint</name></type> <name><name>textures</name><index>[]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>GLsizei</name></type> <name><name>tex_width</name><index>[]</index></name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>GLsizei</name></type> <name><name>tex_height</name><index>[]</index></name></decl></parameter>)</parameter_list>;</function_decl>
















<function_decl><type><name>int</name></type>
(<modifier>*</modifier><name>update_textures</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_gl_interop</name></name> <modifier>*</modifier></type><name>interop</name></decl></parameter>,
<parameter><decl><type><name>GLuint</name></type> <name><name>textures</name><index>[]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>GLsizei</name></type> <name><name>tex_width</name><index>[]</index></name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>GLsizei</name></type> <name><name>tex_height</name><index>[]</index></name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>pic</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>size_t</name></type> <name><name>plane_offsets</name><index>[]</index></name></decl></parameter>)</parameter_list>;</function_decl>




















<function_decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type>
(<modifier>*</modifier><name>get_transform_matrix</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_gl_interop</name></name> <modifier>*</modifier></type><name>interop</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>void</name></type>
(<modifier>*</modifier><name>close</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_gl_interop</name></name> <modifier>*</modifier></type><name>interop</name></decl></parameter>)</parameter_list>;</function_decl>
}</block>;</struct>

<struct>struct <name>vlc_gl_interop</name> <block>{
<decl_stmt><decl><type><name>vlc_object_t</name></type> <name>obj</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>module_t</name> <modifier>*</modifier></type><name>module</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_gl_t</name> <modifier>*</modifier></type><name>gl</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_gl_api</name></name> <modifier>*</modifier></type><name>api</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>opengl_vtable_t</name> <modifier>*</modifier></type><name>vt</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>GLenum</name></type> <name>tex_target</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>video_format_t</name></type> <name>fmt</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>video_format_t</name></type> <name>sw_fmt</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type><name>vctx</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>bool</name></type> <name>handle_texs_gen</name></decl>;</decl_stmt>


<struct>struct <name>vlc_gl_tex_cfg</name> <block>{




<decl_stmt><decl><type><name>vlc_rational_t</name></type> <name>w</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_rational_t</name></type> <name>h</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLint</name></type> <name>internal</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GLenum</name></type> <name>format</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GLenum</name></type> <name>type</name></decl>;</decl_stmt>
}</block> <decl><name><name>texs</name><index>[<expr><name>PICTURE_PLANE_MAX</name></expr>]</index></name></decl>;</struct>
<decl_stmt><decl><type><name>unsigned</name></type> <name>tex_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>priv</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_gl_interop_ops</name></name> <modifier>*</modifier></type><name>ops</name></decl>;</decl_stmt>




<function_decl><type><name>int</name></type>
(<modifier>*</modifier><name>init</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_gl_interop</name></name> <modifier>*</modifier></type><name>interop</name></decl></parameter>, <parameter><decl><type><name>GLenum</name></type> <name>tex_target</name></decl></parameter>,
<parameter><decl><type><name>vlc_fourcc_t</name></type> <name>chroma</name></decl></parameter>, <parameter><decl><type><name>video_color_space_t</name></type> <name>yuv_space</name></decl></parameter>)</parameter_list>;</function_decl>
}</block>;</struct>

<function_decl><type><name><name>struct</name> <name>vlc_gl_interop</name></name> <modifier>*</modifier></type>
<name>vlc_gl_interop_New</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_gl_t</name></name> <modifier>*</modifier></type><name>gl</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_gl_api</name></name> <modifier>*</modifier></type><name>api</name></decl></parameter>,
<parameter><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type><name>context</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>,
<parameter><decl><type><name>bool</name></type> <name>subpics</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>
<name>vlc_gl_interop_Delete</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_gl_interop</name></name> <modifier>*</modifier></type><name>interop</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type>
<name>vlc_gl_interop_GenerateTextures</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_gl_interop</name></name> <modifier>*</modifier></type><name>interop</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>GLsizei</name> <modifier>*</modifier></type><name>tex_width</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>GLsizei</name> <modifier>*</modifier></type><name>tex_height</name></decl></parameter>, <parameter><decl><type><name>GLuint</name> <modifier>*</modifier></type><name>textures</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>
<name>vlc_gl_interop_DeleteTextures</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_gl_interop</name></name> <modifier>*</modifier></type><name>interop</name></decl></parameter>,
<parameter><decl><type><name>GLuint</name> <modifier>*</modifier></type><name>textures</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type>
<name>opengl_interop_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_gl_interop</name></name> <modifier>*</modifier></type><name>interop</name></decl></parameter>, <parameter><decl><type><name>GLenum</name></type> <name>tex_target</name></decl></parameter>,
<parameter><decl><type><name>vlc_fourcc_t</name></type> <name>chroma</name></decl></parameter>, <parameter><decl><type><name>video_color_space_t</name></type> <name>yuv_space</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name><name>interop</name><operator>-&gt;</operator><name>init</name></name><argument_list>(<argument><expr><name>interop</name></expr></argument>, <argument><expr><name>tex_target</name></expr></argument>, <argument><expr><name>chroma</name></expr></argument>, <argument><expr><name>yuv_space</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
