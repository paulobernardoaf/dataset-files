<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\video_output\opengl\renderer.h">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>VLC_GL_RENDERER_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_GL_RENDERER_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_codec.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_opengl.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gl_api.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gl_common.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"interop.h"</cpp:file></cpp:include>

<struct_decl>struct <name>pl_context</name>;</struct_decl>
<struct_decl>struct <name>pl_shader</name>;</struct_decl>
<struct_decl>struct <name>pl_shader_res</name>;</struct_decl>




<struct>struct <name>vlc_gl_renderer</name>
<block>{

<decl_stmt><decl><type><name>vlc_gl_t</name> <modifier>*</modifier></type><name>gl</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name><name>struct</name> <name>pl_context</name></name> <modifier>*</modifier></type><name>pl_ctx</name></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_gl_api</name></name> <modifier>*</modifier></type><name>api</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>opengl_vtable_t</name> <modifier>*</modifier></type><name>vt</name></decl>;</decl_stmt> 


<decl_stmt><decl><type><name>bool</name></type> <name>b_dump_shaders</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>unsigned</name></type> <name>glsl_version</name></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>glsl_precision_header</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLuint</name></type> <name>program_id</name></decl>;</decl_stmt>

<struct>struct <block>{
<decl_stmt><decl><type><name>GLfloat</name></type> <name><name>OrientationMatrix</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GLfloat</name></type> <name><name>ProjectionMatrix</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GLfloat</name></type> <name><name>StereoMatrix</name><index>[<expr><literal type="number">3</literal><operator>*</operator><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GLfloat</name></type> <name><name>ZoomMatrix</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GLfloat</name></type> <name><name>ViewMatrix</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLfloat</name></type> <name><name>TexCoordsMap</name><index>[<expr><name>PICTURE_PLANE_MAX</name></expr>]</index><index>[<expr><literal type="number">3</literal><operator>*</operator><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>
}</block> <decl><name>var</name></decl>;</struct>

<struct>struct <block>{
<decl_stmt><decl><type><name>GLint</name></type> <name><name>Texture</name><index>[<expr><name>PICTURE_PLANE_MAX</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GLint</name></type> <name><name>TexSize</name><index>[<expr><name>PICTURE_PLANE_MAX</name></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>GLint</name></type> <name>ConvMatrix</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GLint</name></type> <name>FillColor</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GLint</name> <modifier>*</modifier></type><name>pl_vars</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>GLint</name></type> <name>TransformMatrix</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GLint</name></type> <name>OrientationMatrix</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GLint</name></type> <name>StereoMatrix</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GLint</name></type> <name>ProjectionMatrix</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GLint</name></type> <name>ViewMatrix</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GLint</name></type> <name>ZoomMatrix</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLint</name></type> <name><name>TexCoordsMap</name><index>[<expr><name>PICTURE_PLANE_MAX</name></expr>]</index></name></decl>;</decl_stmt>
}</block> <decl><name>uloc</name></decl>;</struct>

<struct>struct <block>{
<decl_stmt><decl><type><name>GLint</name></type> <name>PicCoordsIn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GLint</name></type> <name>VertexPosition</name></decl>;</decl_stmt>
}</block> <decl><name>aloc</name></decl>;</struct>

<decl_stmt><decl><type><name>bool</name></type> <name>yuv_color</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GLfloat</name></type> <name><name>conv_matrix</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>pl_shader</name></name> <modifier>*</modifier></type><name>pl_sh</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>pl_shader_res</name></name> <modifier>*</modifier></type><name>pl_sh_res</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_gl_interop</name></name> <modifier>*</modifier></type><name>interop</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>video_format_t</name></type> <name>fmt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLsizei</name></type> <name><name>tex_width</name><index>[<expr><name>PICTURE_PLANE_MAX</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GLsizei</name></type> <name><name>tex_height</name><index>[<expr><name>PICTURE_PLANE_MAX</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLuint</name></type> <name><name>textures</name><index>[<expr><name>PICTURE_PLANE_MAX</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>nb_indices</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GLuint</name></type> <name>vertex_buffer_object</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GLuint</name></type> <name>index_buffer_object</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GLuint</name></type> <name>texture_buffer_object</name></decl>;</decl_stmt>

<struct>struct <block>{
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_x_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_y_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_visible_width</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_visible_height</name></decl>;</decl_stmt>
}</block> <decl><name>last_source</name></decl>;</struct>


<decl_stmt><decl><type><name>vlc_viewpoint_t</name></type> <name>vp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>f_teta</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>f_phi</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>f_roll</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>f_fovx</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>float</name></type> <name>f_fovy</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>float</name></type> <name>f_z</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>float</name></type> <name>f_sar</name></decl>;</decl_stmt>











<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>pf_fetch_locations</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_gl_renderer</name></name> <modifier>*</modifier></type><name>renderer</name></decl></parameter>, <parameter><decl><type><name>GLuint</name></type> <name>program</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>pf_prepare_shader</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_gl_renderer</name></name> <modifier>*</modifier></type><name>renderer</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>GLsizei</name> <modifier>*</modifier></type><name>tex_width</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>GLsizei</name> <modifier>*</modifier></type><name>tex_height</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>alpha</name></decl></parameter>)</parameter_list>;</function_decl>
}</block>;</struct>










<function_decl><type><name><name>struct</name> <name>vlc_gl_renderer</name></name> <modifier>*</modifier></type>
<name>vlc_gl_renderer_New</name><parameter_list>(<parameter><decl><type><name>vlc_gl_t</name> <modifier>*</modifier></type><name>gl</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_gl_api</name></name> <modifier>*</modifier></type><name>api</name></decl></parameter>,
<parameter><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type><name>context</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>,
<parameter><decl><type><name>bool</name></type> <name>dump_shaders</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type>
<name>vlc_gl_renderer_Delete</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_gl_renderer</name></name> <modifier>*</modifier></type><name>renderer</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>int</name></type>
<name>vlc_gl_renderer_Prepare</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_gl_renderer</name></name> <modifier>*</modifier></type><name>renderer</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>picture</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>int</name></type>
<name>vlc_gl_renderer_Draw</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_gl_renderer</name></name> <modifier>*</modifier></type><name>renderer</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type>
<name>vlc_gl_renderer_SetViewpoint</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_gl_renderer</name></name> <modifier>*</modifier></type><name>renderer</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>vlc_viewpoint_t</name> <modifier>*</modifier></type><name>p_vp</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type>
<name>vlc_gl_renderer_SetWindowAspectRatio</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_gl_renderer</name></name> <modifier>*</modifier></type><name>renderer</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>f_sar</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
