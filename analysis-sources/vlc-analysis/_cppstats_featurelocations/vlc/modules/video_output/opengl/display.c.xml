<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\video_output\opengl\display.c">





















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;config.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_vout_display.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_opengl.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vout_helper.h"</cpp:file></cpp:include>


<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Open</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>,
<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>fmtp</name></decl></parameter>, <parameter><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type><name>context</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GL_TEXT</name></cpp:macro> <cpp:value>N_("OpenGL extension")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLES2_TEXT</name></cpp:macro> <cpp:value>N_("OpenGL ES 2 extension")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROVIDER_LONGTEXT</name></cpp:macro> <cpp:value>N_( "Extension through which to use the Open Graphics Library (OpenGL).")</cpp:value></cpp:define>


<macro><name>vlc_module_begin</name> <argument_list>()</argument_list></macro>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name> <argument_list>(<argument><expr><name>USE_OPENGL_ES2</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>API</name></cpp:macro> <cpp:value>VLC_OPENGL_ES2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MODULE_VARNAME</name></cpp:macro> <cpp:value>"gles2"</cpp:value></cpp:define>
<macro><name>set_shortname</name> <argument_list>(<argument>N_(<literal type="string">"OpenGL ES2"</literal>)</argument>)</argument_list></macro>
<macro><name>set_description</name> <argument_list>(<argument>N_(<literal type="string">"OpenGL for Embedded Systems 2 video output"</literal>)</argument>)</argument_list></macro>
<macro><name>set_callback_display</name><argument_list>(<argument>Open</argument>, <argument><literal type="number">265</literal></argument>)</argument_list></macro>
<macro><name>add_shortcut</name> <argument_list>(<argument><literal type="string">"opengles2"</literal></argument>, <argument><literal type="string">"gles2"</literal></argument>)</argument_list></macro>
<macro><name>add_module</name><argument_list>(<argument><literal type="string">"gles2"</literal></argument>, <argument><literal type="string">"opengl es2"</literal></argument>, <argument>NULL</argument>, <argument>GLES2_TEXT</argument>, <argument>PROVIDER_LONGTEXT</argument>)</argument_list></macro>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>API</name></cpp:macro> <cpp:value>VLC_OPENGL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MODULE_VARNAME</name></cpp:macro> <cpp:value>"gl"</cpp:value></cpp:define>
<macro><name>set_shortname</name> <argument_list>(<argument>N_(<literal type="string">"OpenGL"</literal>)</argument>)</argument_list></macro>
<macro><name>set_description</name> <argument_list>(<argument>N_(<literal type="string">"OpenGL video output"</literal>)</argument>)</argument_list></macro>
<macro><name>set_category</name> <argument_list>(<argument>CAT_VIDEO</argument>)</argument_list></macro>
<macro><name>set_subcategory</name> <argument_list>(<argument>SUBCAT_VIDEO_VOUT</argument>)</argument_list></macro>
<macro><name>set_callback_display</name><argument_list>(<argument>Open</argument>, <argument><literal type="number">270</literal></argument>)</argument_list></macro>
<macro><name>add_shortcut</name> <argument_list>(<argument><literal type="string">"opengl"</literal></argument>, <argument><literal type="string">"gl"</literal></argument>)</argument_list></macro>
<macro><name>add_module</name><argument_list>(<argument><literal type="string">"gl"</literal></argument>, <argument><literal type="string">"opengl"</literal></argument>, <argument>NULL</argument>, <argument>GL_TEXT</argument>, <argument>PROVIDER_LONGTEXT</argument>)</argument_list></macro>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<macro><name>add_glopts</name> <argument_list>()</argument_list></macro>
<macro><name>vlc_module_end</name> <argument_list>()</argument_list></macro>

<struct>struct <name>vout_display_sys_t</name>
<block>{
<decl_stmt><decl><type><name>vout_display_opengl_t</name> <modifier>*</modifier></type><name>vgl</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_gl_t</name> <modifier>*</modifier></type><name>gl</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vout_display_place_t</name></type> <name>place</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>place_changed</name></decl>;</decl_stmt>
}</block>;</struct>


<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>PictureRender</name> <parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>PictureDisplay</name> <parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Control</name> <parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>va_list</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function><type><specifier>static</specifier> <name>int</name></type> <name>Open</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>,
<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>, <parameter><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type><name>context</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><call><name>malloc</name> <argument_list>(<argument><expr><sizeof>sizeof <argument_list>(<argument><expr><operator>*</operator><name>sys</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>sys</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>gl</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>place_changed</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>vout_window_t</name> <modifier>*</modifier></type><name>surface</name> <init>= <expr><name><name>cfg</name><operator>-&gt;</operator><name>window</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>gl_name</name> <init>= <expr><call><name>var_InheritString</name><argument_list>(<argument><expr><name>surface</name></expr></argument>, <argument><expr><name>MODULE_VARNAME</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>USE_OPENGL_ES2</name></expr></argument>)</argument_list></call></expr></cpp:if>
<if_stmt><if>if <condition>(<expr><name><name>surface</name><operator>-&gt;</operator><name>type</name></name> <operator>==</operator> <name>VOUT_WINDOW_TYPE_XID</name></expr>)</condition>
<block>{<block_content>
<switch>switch <condition>(<expr><name><name>fmt</name><operator>-&gt;</operator><name>i_chroma</name></name></expr>)</condition>
<block>{<block_content>
<case>case <expr><name>VLC_CODEC_VDPAU_VIDEO_444</name></expr>:</case>
<case>case <expr><name>VLC_CODEC_VDPAU_VIDEO_422</name></expr>:</case>
<case>case <expr><name>VLC_CODEC_VDPAU_VIDEO_420</name></expr>:</case>
<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>gl_name</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <name><name>gl_name</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal>
<operator>||</operator> <call><name>strcmp</name><argument_list>(<argument><expr><name>gl_name</name></expr></argument>, <argument><expr><literal type="string">"any"</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>gl_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>gl_name</name> <operator>=</operator> <call><name>strdup</name><argument_list>(<argument><expr><literal type="string">"glx"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
</block_content>}</block>
<default>default:</default>
<break>break;</break>
</block_content>}</block></switch>
</block_content>}</block></if></if_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>gl</name></name> <operator>=</operator> <call><name>vlc_gl_Create</name><argument_list>(<argument><expr><name>cfg</name></expr></argument>, <argument><expr><name>API</name></expr></argument>, <argument><expr><name>gl_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>gl_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>gl</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>vlc_fourcc_t</name> <modifier>*</modifier></type><name>spu_chromas</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>vlc_gl_MakeCurrent</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>gl</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>vgl</name></name> <operator>=</operator> <call><name>vout_display_opengl_New</name> <argument_list>(<argument><expr><name>fmt</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>spu_chromas</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>gl</name></name></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>cfg</name><operator>-&gt;</operator><name>viewpoint</name></name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_gl_ReleaseCurrent</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>gl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>vgl</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name> <operator>=</operator> <name>sys</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>subpicture_chromas</name></name> <operator>=</operator> <name>spu_chromas</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>prepare</name></name> <operator>=</operator> <name>PictureRender</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>display</name></name> <operator>=</operator> <name>PictureDisplay</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>control</name></name> <operator>=</operator> <name>Control</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>close</name></name> <operator>=</operator> <name>Close</name></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<label><name>error</name>:</label>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>gl</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>vlc_gl_Release</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>gl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_gl_t</name> <modifier>*</modifier></type><name>gl</name> <init>= <expr><name><name>sys</name><operator>-&gt;</operator><name>gl</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_gl_MakeCurrent</name> <argument_list>(<argument><expr><name>gl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vout_display_opengl_Delete</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>vgl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_gl_ReleaseCurrent</name> <argument_list>(<argument><expr><name>gl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_gl_Release</name> <argument_list>(<argument><expr><name>gl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name> <argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>PictureRender</name> <parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>pic</name></decl></parameter>, <parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>subpicture</name></decl></parameter>,
<parameter><decl><type><name>vlc_tick_t</name></type> <name>date</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>date</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>vlc_gl_MakeCurrent</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>gl</name></name></expr></argument>)</argument_list></call> <operator>==</operator> <name>VLC_SUCCESS</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>vout_display_opengl_Prepare</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>vgl</name></name></expr></argument>, <argument><expr><name>pic</name></expr></argument>, <argument><expr><name>subpicture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_gl_ReleaseCurrent</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>gl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>PictureDisplay</name> <parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>pic</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>vlc_gl_MakeCurrent</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>gl</name></name></expr></argument>)</argument_list></call> <operator>==</operator> <name>VLC_SUCCESS</name></expr>)</condition>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>place_changed</name></name></expr>)</condition>
<block>{<block_content>
<decl_stmt><decl><type><name>float</name></type> <name>window_ar</name> <init>= <expr><operator>(</operator><name>float</name><operator>)</operator><name><name>sys</name><operator>-&gt;</operator><name>place</name><operator>.</operator><name>width</name></name> <operator>/</operator> <name><name>sys</name><operator>-&gt;</operator><name>place</name><operator>.</operator><name>height</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>vout_display_opengl_SetWindowAspectRatio</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>vgl</name></name></expr></argument>, <argument><expr><name>window_ar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vout_display_opengl_Viewport</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>vgl</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>place</name><operator>.</operator><name>x</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>place</name><operator>.</operator><name>y</name></name></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>place</name><operator>.</operator><name>width</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>place</name><operator>.</operator><name>height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>place_changed</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vout_display_opengl_Display</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>vgl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_gl_ReleaseCurrent</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>gl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Control</name> <parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>query</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>ap</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<switch>switch <condition>(<expr><name>query</name></expr>)</condition>
<block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>NDEBUG</name></expr></argument>)</argument_list></call></expr></cpp:if>
<case>case <expr><name>VOUT_DISPLAY_RESET_PICTURES</name></expr>:</case> 
<expr_stmt><expr><call><name>vlc_assert_unreachable</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<case>case <expr><name>VOUT_DISPLAY_CHANGE_DISPLAY_SIZE</name></expr>:</case>
<case>case <expr><name>VOUT_DISPLAY_CHANGE_DISPLAY_FILLED</name></expr>:</case>
<case>case <expr><name>VOUT_DISPLAY_CHANGE_ZOOM</name></expr>:</case>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_cfg_t</name></type> <name>c</name> <init>= <expr><operator>*</operator><call><name>va_arg</name> <argument_list>(<argument><expr><name>ap</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>vout_display_cfg_t</name> <operator>*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>src</name> <init>= <expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>source</name></name></expr></init></decl>;</decl_stmt>


<if_stmt><if>if <condition>(<expr><name><name>c</name><operator>.</operator><name>align</name><operator>.</operator><name>vertical</name></name> <operator>==</operator> <name>VLC_VIDEO_ALIGN_TOP</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>c</name><operator>.</operator><name>align</name><operator>.</operator><name>vertical</name></name> <operator>=</operator> <name>VLC_VIDEO_ALIGN_BOTTOM</name></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name><name>c</name><operator>.</operator><name>align</name><operator>.</operator><name>vertical</name></name> <operator>==</operator> <name>VLC_VIDEO_ALIGN_BOTTOM</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>c</name><operator>.</operator><name>align</name><operator>.</operator><name>vertical</name></name> <operator>=</operator> <name>VLC_VIDEO_ALIGN_TOP</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>vout_display_PlacePicture</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>place</name></name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>place_changed</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_gl_Resize</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>gl</name></name></expr></argument>, <argument><expr><name><name>c</name><operator>.</operator><name>display</name><operator>.</operator><name>width</name></name></expr></argument>, <argument><expr><name><name>c</name><operator>.</operator><name>display</name><operator>.</operator><name>height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block>

<case>case <expr><name>VOUT_DISPLAY_CHANGE_SOURCE_ASPECT</name></expr>:</case>
<case>case <expr><name>VOUT_DISPLAY_CHANGE_SOURCE_CROP</name></expr>:</case>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type><name>cfg</name> <init>= <expr><call><name>va_arg</name> <argument_list>(<argument><expr><name>ap</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>vout_display_cfg_t</name> <operator>*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vout_display_PlacePicture</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>place</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>source</name></name></expr></argument>, <argument><expr><name>cfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>place_changed</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block>
<case>case <expr><name>VOUT_DISPLAY_CHANGE_VIEWPOINT</name></expr>:</case>
<return>return <expr><call><name>vout_display_opengl_SetViewpoint</name> <argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>vgl</name></name></expr></argument>,
<argument><expr><operator>&amp;</operator><call><name>va_arg</name> <argument_list>(<argument><expr><name>ap</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>vout_display_cfg_t</name><operator>*</operator></expr></argument> )</argument_list></call><operator>-&gt;</operator><name>viewpoint</name></expr></argument>)</argument_list></call></expr>;</return>
<default>default:</default>
<expr_stmt><expr><call><name>msg_Err</name> <argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Unknown request %d"</literal></expr></argument>, <argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></switch>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></function>
</unit>
