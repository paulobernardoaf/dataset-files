<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\video_output\android\display.c">

























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_vout_display.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_picture_pool.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_filter.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_opengl.h&gt;</cpp:file></cpp:include> 
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;GLES2/gl2.h&gt;</cpp:file></cpp:include> 

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dlfcn.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"utils.h"</cpp:file></cpp:include>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>USE_ANWP</name></cpp:macro></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CHROMA_TEXT</name></cpp:macro> <cpp:value>"Chroma used"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CHROMA_LONGTEXT</name></cpp:macro> <cpp:value>"Force use of a specific chroma for output. Default is RGB32."</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CFG_PREFIX</name></cpp:macro> <cpp:value>"android-display-"</cpp:value></cpp:define>
<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Open</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>,
<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>fmtp</name></decl></parameter>, <parameter><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type><name>context</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>SubpicturePrepare</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>subpicture</name></decl></parameter>)</parameter_list>;</function_decl>

<macro><name>vlc_module_begin</name><argument_list>()</argument_list></macro>
<macro><name>set_category</name><argument_list>(<argument>CAT_VIDEO</argument>)</argument_list></macro>
<macro><name>set_subcategory</name><argument_list>(<argument>SUBCAT_VIDEO_VOUT</argument>)</argument_list></macro>
<macro><name>set_description</name><argument_list>(<argument><literal type="string">"Android video output"</literal></argument>)</argument_list></macro>
<macro><name>add_shortcut</name><argument_list>(<argument><literal type="string">"android-display"</literal></argument>)</argument_list></macro>
<macro><name>add_string</name><argument_list>(<argument>CFG_PREFIX <literal type="string">"chroma"</literal></argument>, <argument>NULL</argument>, <argument>CHROMA_TEXT</argument>, <argument>CHROMA_LONGTEXT</argument>, <argument>true</argument>)</argument_list></macro>
<macro><name>set_callback_display</name><argument_list>(<argument>Open</argument>, <argument><literal type="number">260</literal></argument>)</argument_list></macro>
<macro><name>vlc_module_end</name><argument_list>()</argument_list></macro>





<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>vlc_fourcc_t</name></type> <name><name>subpicture_chromas</name><index>[]</index></name> <init>=
<expr><block>{
<expr><name>VLC_CODEC_RGBA</name></expr>,
<expr><literal type="number">0</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Prepare</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Display</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Control</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>va_list</name></type></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>ANativeWindow_Buffer</name></type> <name>buf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_locked</name></decl>;</decl_stmt>
}</block></struct></type> <name>picture_sys_t</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>android_window</name></name></type> <name>android_window</name>;</typedef>
<struct>struct <name>android_window</name>
<block>{
<decl_stmt><decl><type><name>video_format_t</name></type> <name>fmt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_android_hal</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_angle</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_opaque</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>AWindow_ID</name></name></type> <name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ANativeWindow</name> <modifier>*</modifier></type><name>p_surface</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>jobject</name> <modifier>*</modifier></type><name>p_jsurface</name></decl>;</decl_stmt>
}</block>;</struct>

<typedef>typedef <type><name><name>struct</name> <name>buffer_bounds</name></name></type> <name>buffer_bounds</name>;</typedef>
<struct>struct <name>buffer_bounds</name>
<block>{
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>p_pixels</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ARect</name></type> <name>bounds</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>vout_display_sys_t</name>
<block>{
<decl_stmt><decl><type><name>vout_window_t</name> <modifier>*</modifier></type><name>embed</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_display_width</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_display_height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AWindowHandler</name> <modifier>*</modifier></type><name>p_awh</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>native_window_api_t</name> <modifier>*</modifier></type><name>anw</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>android_video_context_t</name> <modifier>*</modifier></type><name>avctx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>android_window</name> <modifier>*</modifier></type><name>p_window</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>android_window</name> <modifier>*</modifier></type><name>p_sub_window</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>p_prepared_pic</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>bool</name></type> <name>b_displayed</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_sub_invalid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_blender_t</name> <modifier>*</modifier></type><name>p_spu_blend</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>p_sub_pic</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>buffer_bounds</name> <modifier>*</modifier></type><name>p_sub_buffer_bounds</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>i_sub_last_order</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ARect</name></type> <name>sub_last_region</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_has_subpictures</name></decl>;</decl_stmt>
}</block>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRIV_WINDOW_FORMAT_YV12</name></cpp:macro> <cpp:value>0x32315659</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>ChromaToAndroidHal</name><parameter_list>(<parameter><decl><type><name>vlc_fourcc_t</name></type> <name>i_chroma</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<switch>switch <condition>(<expr><name>i_chroma</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>VLC_CODEC_YV12</name></expr>:</case>
<case>case <expr><name>VLC_CODEC_I420</name></expr>:</case>
<return>return <expr><name>PRIV_WINDOW_FORMAT_YV12</name></expr>;</return>
<case>case <expr><name>VLC_CODEC_RGB16</name></expr>:</case>
<return>return <expr><name>WINDOW_FORMAT_RGB_565</name></expr>;</return>
<case>case <expr><name>VLC_CODEC_RGB32</name></expr>:</case>
<return>return <expr><name>WINDOW_FORMAT_RGBX_8888</name></expr>;</return>
<case>case <expr><name>VLC_CODEC_RGBA</name></expr>:</case>
<return>return <expr><name>WINDOW_FORMAT_RGBA_8888</name></expr>;</return>
<default>default:</default>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></switch>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>UpdateVideoSize</name><parameter_list>(<parameter><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name></decl></parameter>, <parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>p_fmt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_width</name></decl>, <decl><type ref="prev"/><name>i_height</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_sar_num</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>, <decl><type ref="prev"/><name>i_sar_den</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>video_format_t</name></type> <name>rot_fmt</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>video_format_ApplyRotation</name><argument_list>(<argument><expr><operator>&amp;</operator><name>rot_fmt</name></expr></argument>, <argument><expr><name>p_fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>rot_fmt</name><operator>.</operator><name>i_sar_num</name></name> <operator>!=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>rot_fmt</name><operator>.</operator><name>i_sar_den</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>i_sar_num</name> <operator>=</operator> <name><name>rot_fmt</name><operator>.</operator><name>i_sar_num</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>i_sar_den</name> <operator>=</operator> <name><name>rot_fmt</name><operator>.</operator><name>i_sar_den</name></name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>i_width</name> <operator>=</operator> <name><name>rot_fmt</name><operator>.</operator><name>i_width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>i_height</name> <operator>=</operator> <name><name>rot_fmt</name><operator>.</operator><name>i_height</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AWindowHandler_setVideoLayout</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_awh</name></name></expr></argument>, <argument><expr><name>i_width</name></expr></argument>, <argument><expr><name>i_height</name></expr></argument>,
<argument><expr><name><name>rot_fmt</name><operator>.</operator><name>i_visible_width</name></name></expr></argument>,
<argument><expr><name><name>rot_fmt</name><operator>.</operator><name>i_visible_height</name></name></expr></argument>,
<argument><expr><name>i_sar_num</name></expr></argument>, <argument><expr><name>i_sar_den</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>AndroidPicture_Destroy</name><parameter_list>(<parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>pic</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name><name>pic</name><operator>-&gt;</operator><name>p_sys</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>picture_t</name> <modifier>*</modifier></type><name>PictureAlloc</name><parameter_list>(<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>p_pic</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>picture_sys_t</name> <modifier>*</modifier></type><name>p_picsys</name> <init>= <expr><call><name>calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>p_picsys</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>p_picsys</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>picture_resource_t</name></type> <name>rsc</name> <init>= <expr><block>{
<expr><operator>.</operator><name>p_sys</name> <operator>=</operator> <name>p_picsys</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>rsc</name><operator>.</operator><name>pf_destroy</name></name> <operator>=</operator> <name>AndroidPicture_Destroy</name></expr>;</expr_stmt>

<expr_stmt><expr><name>p_pic</name> <operator>=</operator> <call><name>picture_NewFromResource</name><argument_list>(<argument><expr><name>fmt</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>rsc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>p_pic</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>p_picsys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>p_pic</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>FixSubtitleFormat</name><parameter_list>(<parameter><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>p_subfmt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>video_format_t</name></type> <name>fmt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_width</name></decl>, <decl><type ref="prev"/><name>i_height</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_video_width</name></decl>, <decl><type ref="prev"/><name>i_video_height</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_display_width</name></decl>, <decl><type ref="prev"/><name>i_display_height</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>double</name></type> <name>aspect</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>sys</name><operator>-&gt;</operator><name>p_sub_window</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name>p_subfmt</name> <operator>=</operator> <operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>p_sub_window</name><operator>-&gt;</operator><name>fmt</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>video_format_ApplyRotation</name><argument_list>(<argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>p_window</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>fmt</name><operator>.</operator><name>i_visible_width</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>||</operator> <name><name>fmt</name><operator>.</operator><name>i_visible_height</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>i_video_width</name> <operator>=</operator> <name><name>fmt</name><operator>.</operator><name>i_width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>i_video_height</name> <operator>=</operator> <name><name>fmt</name><operator>.</operator><name>i_height</name></name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>i_video_width</name> <operator>=</operator> <name><name>fmt</name><operator>.</operator><name>i_visible_width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>i_video_height</name> <operator>=</operator> <name><name>fmt</name><operator>.</operator><name>i_visible_height</name></name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>fmt</name><operator>.</operator><name>i_sar_num</name></name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>fmt</name><operator>.</operator><name>i_sar_den</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>fmt</name><operator>.</operator><name>i_sar_num</name></name> <operator>&gt;=</operator> <name><name>fmt</name><operator>.</operator><name>i_sar_den</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>i_video_width</name> <operator>=</operator> <name>i_video_width</name> <operator>*</operator> <name><name>fmt</name><operator>.</operator><name>i_sar_num</name></name> <operator>/</operator> <name><name>fmt</name><operator>.</operator><name>i_sar_den</name></name></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name>i_video_height</name> <operator>=</operator> <name>i_video_height</name> <operator>*</operator> <name><name>fmt</name><operator>.</operator><name>i_sar_den</name></name> <operator>/</operator> <name><name>fmt</name><operator>.</operator><name>i_sar_num</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>p_window</name><operator>-&gt;</operator><name>i_angle</name></name> <operator>==</operator> <literal type="number">90</literal> <operator>||</operator> <name><name>sys</name><operator>-&gt;</operator><name>p_window</name><operator>-&gt;</operator><name>i_angle</name></name> <operator>==</operator> <literal type="number">180</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>i_display_width</name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>i_display_height</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>i_display_height</name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>i_display_width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>aspect</name> <operator>=</operator> <name>i_video_height</name> <operator>/</operator> <operator>(</operator><name>double</name><operator>)</operator> <name>i_video_width</name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>i_display_width</name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>i_display_width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>i_display_height</name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>i_display_height</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>aspect</name> <operator>=</operator> <name>i_video_width</name> <operator>/</operator> <operator>(</operator><name>double</name><operator>)</operator> <name>i_video_height</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name>i_display_width</name> <operator>/</operator> <name>aspect</name> <operator>&lt;</operator> <name>i_display_height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>i_width</name> <operator>=</operator> <name>i_display_width</name></expr>;</expr_stmt>
<expr_stmt><expr><name>i_height</name> <operator>=</operator> <name>i_display_width</name> <operator>/</operator> <name>aspect</name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>i_width</name> <operator>=</operator> <name>i_display_height</name> <operator>*</operator> <name>aspect</name></expr>;</expr_stmt>
<expr_stmt><expr><name>i_height</name> <operator>=</operator> <name>i_display_height</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>


<if_stmt><if>if <condition>(<expr><name>i_width</name> <operator>*</operator> <name>i_height</name> <operator>&lt;</operator> <name>i_video_width</name> <operator>*</operator> <name>i_video_height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>i_width</name> <operator>=</operator> <name>i_video_width</name></expr>;</expr_stmt>
<expr_stmt><expr><name>i_height</name> <operator>=</operator> <name>i_video_height</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_subfmt</name><operator>-&gt;</operator><name>i_width</name></name> <operator>=</operator>
<name><name>p_subfmt</name><operator>-&gt;</operator><name>i_visible_width</name></name> <operator>=</operator> <name>i_width</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_subfmt</name><operator>-&gt;</operator><name>i_height</name></name> <operator>=</operator>
<name><name>p_subfmt</name><operator>-&gt;</operator><name>i_visible_height</name></name> <operator>=</operator> <name>i_height</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_subfmt</name><operator>-&gt;</operator><name>i_x_offset</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_subfmt</name><operator>-&gt;</operator><name>i_y_offset</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_subfmt</name><operator>-&gt;</operator><name>i_sar_num</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_subfmt</name><operator>-&gt;</operator><name>i_sar_den</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>b_sub_invalid</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALIGN_16_PIXELS</name><parameter_list>( <parameter><type><name>x</name></type></parameter> )</parameter_list></cpp:macro> <cpp:value>( ( ( x ) + 15 ) / 16 * 16 )</cpp:value></cpp:define>
<function><type><specifier>static</specifier> <name>void</name></type> <name>SetupPictureYV12</name><parameter_list>(<parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>p_picture</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>i_in_stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i_stride</name> <init>= <expr><call><name>ALIGN_16_PIXELS</name><argument_list>(<argument><expr><name>i_in_stride</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_c_stride</name> <init>= <expr><call><name>ALIGN_16_PIXELS</name><argument_list>(<argument><expr><name>i_stride</name> <operator>/</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p_picture</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name> <operator>=</operator> <name>i_stride</name></expr>;</expr_stmt>


<for>for <control>(<init><decl><type><name>int</name></type> <name>n</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>n</name> <operator>&lt;</operator> <name><name>p_picture</name><operator>-&gt;</operator><name>i_planes</name></name></expr>;</condition> <incr><expr><name>n</name><operator>++</operator></expr></incr>)</control>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>plane_t</name> <modifier>*</modifier></type><name>o</name> <init>= <expr><operator>&amp;</operator><name><name>p_picture</name><operator>-&gt;</operator><name>p</name><index>[<expr><name>n</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>plane_t</name> <modifier>*</modifier></type><name>p</name> <init>= <expr><operator>&amp;</operator><name><name>p_picture</name><operator>-&gt;</operator><name>p</name><index>[<expr><name>n</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p</name><operator>-&gt;</operator><name>p_pixels</name></name> <operator>=</operator> <name><name>o</name><operator>-&gt;</operator><name>p_pixels</name></name> <operator>+</operator> <name><name>o</name><operator>-&gt;</operator><name>i_lines</name></name> <operator>*</operator> <name><name>o</name><operator>-&gt;</operator><name>i_pitch</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name> <operator>=</operator> <name>i_c_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p</name><operator>-&gt;</operator><name>i_lines</name></name> <operator>=</operator> <name><name>p_picture</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_height</name></name> <operator>/</operator> <literal type="number">2</literal></expr>;</expr_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>visible_lines</name> <init>= <expr><name><name>p_picture</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_visible_height</name></name> <operator>/</operator> <literal type="number">2</literal></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>visible_lines</name> <operator>&lt;</operator> <name><name>p</name><operator>-&gt;</operator><name>i_lines</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>p</name><operator>-&gt;</operator><name>p_pixels</name><index>[<expr><name>visible_lines</name> <operator>*</operator> <name><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">127</literal></expr></argument>, <argument><expr><operator>(</operator><name><name>p</name><operator>-&gt;</operator><name>i_lines</name></name> <operator>-</operator> <name>visible_lines</name><operator>)</operator> <operator>*</operator> <name><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></for>

<if_stmt><if>if <condition>(<expr><call><name>vlc_fourcc_AreUVPlanesSwapped</name><argument_list>(<argument><expr><name><name>p_picture</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_chroma</name></name></expr></argument>,
<argument><expr><name>VLC_CODEC_YV12</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>picture_SwapUV</name><argument_list>( <argument><expr><name>p_picture</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>AndroidWindow_DisconnectSurface</name><parameter_list>(<parameter><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name></decl></parameter>,
<parameter><decl><type><name>android_window</name> <modifier>*</modifier></type><name>p_window</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>p_window</name><operator>-&gt;</operator><name>p_surface</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>AWindowHandler_releaseANativeWindow</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_awh</name></name></expr></argument>, <argument><expr><name><name>p_window</name><operator>-&gt;</operator><name>id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_window</name><operator>-&gt;</operator><name>p_surface</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>AndroidWindow_ConnectSurface</name><parameter_list>(<parameter><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name></decl></parameter>,
<parameter><decl><type><name>android_window</name> <modifier>*</modifier></type><name>p_window</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>p_window</name><operator>-&gt;</operator><name>p_surface</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>p_window</name><operator>-&gt;</operator><name>p_surface</name></name> <operator>=</operator> <call><name>AWindowHandler_getANativeWindow</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_awh</name></name></expr></argument>,
<argument><expr><name><name>p_window</name><operator>-&gt;</operator><name>id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>p_window</name><operator>-&gt;</operator><name>p_surface</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>p_window</name><operator>-&gt;</operator><name>b_opaque</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>p_window</name><operator>-&gt;</operator><name>p_jsurface</name></name> <operator>=</operator> <call><name>AWindowHandler_getSurface</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_awh</name></name></expr></argument>,
<argument><expr><name><name>p_window</name><operator>-&gt;</operator><name>id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>android_window</name> <modifier>*</modifier></type><name>AndroidWindow_New</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>p_fmt</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>AWindow_ID</name></name></type> <name>id</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>android_window</name> <modifier>*</modifier></type><name>p_window</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>p_window</name> <operator>=</operator> <call><name>calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>android_window</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>p_window</name></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_window</name><operator>-&gt;</operator><name>id</name></name> <operator>=</operator> <name>id</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_window</name><operator>-&gt;</operator><name>b_opaque</name></name> <operator>=</operator> <name><name>p_fmt</name><operator>-&gt;</operator><name>i_chroma</name></name> <operator>==</operator> <name>VLC_CODEC_ANDROID_OPAQUE</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>p_window</name><operator>-&gt;</operator><name>b_opaque</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>p_window</name><operator>-&gt;</operator><name>i_android_hal</name></name> <operator>=</operator> <call><name>ChromaToAndroidHal</name><argument_list>(<argument><expr><name><name>p_fmt</name><operator>-&gt;</operator><name>i_chroma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>p_window</name><operator>-&gt;</operator><name>i_android_hal</name></name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<switch>switch <condition>(<expr><name><name>p_fmt</name><operator>-&gt;</operator><name>orientation</name></name></expr>)</condition>
<block>{<block_content>
<case>case <expr><name>ORIENT_ROTATED_90</name></expr>:</case>
<expr_stmt><expr><name><name>p_window</name><operator>-&gt;</operator><name>i_angle</name></name> <operator>=</operator> <literal type="number">90</literal></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ORIENT_ROTATED_180</name></expr>:</case>
<expr_stmt><expr><name><name>p_window</name><operator>-&gt;</operator><name>i_angle</name></name> <operator>=</operator> <literal type="number">180</literal></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ORIENT_ROTATED_270</name></expr>:</case>
<expr_stmt><expr><name><name>p_window</name><operator>-&gt;</operator><name>i_angle</name></name> <operator>=</operator> <literal type="number">270</literal></expr>;</expr_stmt>
<break>break;</break>
<default>default:</default>
<expr_stmt><expr><name><name>p_window</name><operator>-&gt;</operator><name>i_angle</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></switch>
<expr_stmt><expr><call><name>video_format_ApplyRotation</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>p_window</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument>, <argument><expr><name>p_fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>AndroidWindow_ConnectSurface</name><argument_list>(<argument><expr><name>sys</name></expr></argument>, <argument><expr><name>p_window</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>id</name> <operator>==</operator> <name>AWindow_Video</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"can't get Video Surface"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name>id</name> <operator>==</operator> <name>AWindow_Subtitles</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"can't get Subtitles Surface"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>p_window</name></expr>;</return>
<label><name>error</name>:</label>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>p_window</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>AndroidWindow_Destroy</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>,
<parameter><decl><type><name>android_window</name> <modifier>*</modifier></type><name>p_window</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>AndroidWindow_DisconnectSurface</name><argument_list>(<argument><expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></argument>, <argument><expr><name>p_window</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>p_window</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>AndroidWindow_SetupANW</name><parameter_list>(<parameter><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name></decl></parameter>,
<parameter><decl><type><name>android_window</name> <modifier>*</modifier></type><name>p_window</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>sys</name><operator>-&gt;</operator><name>anw</name><operator>-&gt;</operator><name>setBuffersGeometry</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>
<return>return <expr><call><name><name>sys</name><operator>-&gt;</operator><name>anw</name><operator>-&gt;</operator><name>setBuffersGeometry</name></name><argument_list>(<argument><expr><name><name>p_window</name><operator>-&gt;</operator><name>p_surface</name></name></expr></argument>,
<argument><expr><name><name>p_window</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_width</name></name></expr></argument>,
<argument><expr><name><name>p_window</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_height</name></name></expr></argument>,
<argument><expr><name><name>p_window</name><operator>-&gt;</operator><name>i_android_hal</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>AndroidWindow_SetupSW</name><parameter_list>(<parameter><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name></decl></parameter>,
<parameter><decl><type><name>android_window</name> <modifier>*</modifier></type><name>p_window</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><operator>!</operator><name><name>p_window</name><operator>-&gt;</operator><name>b_opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>vlc_chroma_description_t</name> <modifier>*</modifier></type><name>p_dsc</name> <init>=
<expr><call><name>vlc_fourcc_GetChromaDescription</name><argument_list>( <argument><expr><name><name>p_window</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_chroma</name></name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>p_dsc</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>p_dsc</name><operator>-&gt;</operator><name>pixel_size</name></name> <operator>!=</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>align_pixels</name> <init>= <expr><operator>(</operator><literal type="number">16</literal> <operator>/</operator> <name><name>p_dsc</name><operator>-&gt;</operator><name>pixel_size</name></name><operator>)</operator> <operator>-</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>p_window</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_width</name></name> <operator>=</operator> <operator>(</operator><name><name>p_window</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_width</name></name> <operator>+</operator> <name>align_pixels</name><operator>)</operator> <operator>&amp;</operator> <operator>~</operator><name>align_pixels</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>AndroidWindow_SetupANW</name><argument_list>(<argument><expr><name>sys</name></expr></argument>, <argument><expr><name>p_window</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>AndroidWindow_UnlockPicture</name><parameter_list>(<parameter><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name></decl></parameter>,
<parameter><decl><type><name>android_window</name> <modifier>*</modifier></type><name>p_window</name></decl></parameter>,
<parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>p_pic</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>picture_sys_t</name> <modifier>*</modifier></type><name>p_picsys</name> <init>= <expr><name><name>p_pic</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>p_picsys</name><operator>-&gt;</operator><name>b_locked</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name><name>sys</name><operator>-&gt;</operator><name>anw</name><operator>-&gt;</operator><name>unlockAndPost</name></name><argument_list>(<argument><expr><name><name>p_window</name><operator>-&gt;</operator><name>p_surface</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_picsys</name><operator>-&gt;</operator><name>b_locked</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>AndroidWindow_LockPicture</name><parameter_list>(<parameter><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name></decl></parameter>,
<parameter><decl><type><name>android_window</name> <modifier>*</modifier></type><name>p_window</name></decl></parameter>,
<parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>p_pic</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>picture_sys_t</name> <modifier>*</modifier></type><name>p_picsys</name> <init>= <expr><name><name>p_pic</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>p_picsys</name><operator>-&gt;</operator><name>b_locked</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name><name>sys</name><operator>-&gt;</operator><name>anw</name><operator>-&gt;</operator><name>winLock</name></name><argument_list>(<argument><expr><name><name>p_window</name><operator>-&gt;</operator><name>p_surface</name></name></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>p_picsys</name><operator>-&gt;</operator><name>buf</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>p_picsys</name><operator>-&gt;</operator><name>buf</name><operator>.</operator><name>width</name></name> <operator>&lt;</operator> <literal type="number">0</literal> <operator>||</operator>
<name><name>p_picsys</name><operator>-&gt;</operator><name>buf</name><operator>.</operator><name>height</name></name> <operator>&lt;</operator> <literal type="number">0</literal> <operator>||</operator>
<operator>(</operator><name>unsigned</name><operator>)</operator><name><name>p_picsys</name><operator>-&gt;</operator><name>buf</name><operator>.</operator><name>width</name></name> <operator>&lt;</operator> <name><name>p_window</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_width</name></name> <operator>||</operator>
<operator>(</operator><name>unsigned</name><operator>)</operator><name><name>p_picsys</name><operator>-&gt;</operator><name>buf</name><operator>.</operator><name>height</name></name> <operator>&lt;</operator> <name><name>p_window</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_height</name></name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>p_picsys</name><operator>-&gt;</operator><name>b_locked</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AndroidWindow_UnlockPicture</name><argument_list>(<argument><expr><name>sys</name></expr></argument>, <argument><expr><name>p_window</name></expr></argument>, <argument><expr><name>p_pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_pic</name><operator>-&gt;</operator><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>p_pixels</name> <operator>=</operator> <name><name>p_picsys</name><operator>-&gt;</operator><name>buf</name><operator>.</operator><name>bits</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_pic</name><operator>-&gt;</operator><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>i_lines</name> <operator>=</operator> <name><name>p_picsys</name><operator>-&gt;</operator><name>buf</name><operator>.</operator><name>height</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_pic</name><operator>-&gt;</operator><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>i_pitch</name> <operator>=</operator> <name><name>p_pic</name><operator>-&gt;</operator><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>i_pixel_pitch</name> <operator>*</operator> <name><name>p_picsys</name><operator>-&gt;</operator><name>buf</name><operator>.</operator><name>stride</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>p_picsys</name><operator>-&gt;</operator><name>buf</name><operator>.</operator><name>format</name></name> <operator>==</operator> <name>PRIV_WINDOW_FORMAT_YV12</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>SetupPictureYV12</name><argument_list>(<argument><expr><name>p_pic</name></expr></argument>, <argument><expr><name><name>p_picsys</name><operator>-&gt;</operator><name>buf</name><operator>.</operator><name>stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_picsys</name><operator>-&gt;</operator><name>b_locked</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>SetRGBMask</name><parameter_list>(<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>p_fmt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<switch>switch<condition>(<expr><name><name>p_fmt</name><operator>-&gt;</operator><name>i_chroma</name></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>VLC_CODEC_RGB16</name></expr>:</case>
<expr_stmt><expr><name><name>p_fmt</name><operator>-&gt;</operator><name>i_bmask</name></name> <operator>=</operator> <literal type="number">0x0000001f</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_fmt</name><operator>-&gt;</operator><name>i_gmask</name></name> <operator>=</operator> <literal type="number">0x000007e0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_fmt</name><operator>-&gt;</operator><name>i_rmask</name></name> <operator>=</operator> <literal type="number">0x0000f800</literal></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><name>VLC_CODEC_RGB32</name></expr>:</case>
<case>case <expr><name>VLC_CODEC_RGBA</name></expr>:</case>
<expr_stmt><expr><name><name>p_fmt</name><operator>-&gt;</operator><name>i_rmask</name></name> <operator>=</operator> <literal type="number">0x000000ff</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_fmt</name><operator>-&gt;</operator><name>i_gmask</name></name> <operator>=</operator> <literal type="number">0x0000ff00</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_fmt</name><operator>-&gt;</operator><name>i_bmask</name></name> <operator>=</operator> <literal type="number">0x00ff0000</literal></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Open</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>,
<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>fmtp</name></decl></parameter>, <parameter><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type><name>context</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>video_format_t</name></type> <name>fmt</name></decl>, <decl><type ref="prev"/><name>sub_fmt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vout_window_t</name> <modifier>*</modifier></type><name>embed</name> <init>= <expr><name><name>cfg</name><operator>-&gt;</operator><name>window</name></name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name><name>embed</name><operator>-&gt;</operator><name>type</name></name> <operator>!=</operator> <name>VOUT_WINDOW_TYPE_ANDROID_NATIVE</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>embed</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>embed</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>anativewindow</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>AWindowHandler</name> <modifier>*</modifier></type><name>p_awh</name> <init>= <expr><name><name>embed</name><operator>-&gt;</operator><name>handle</name><operator>.</operator><name>anativewindow</name></name></expr></init></decl>;</decl_stmt>


<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name> <operator>=</operator> <name>sys</name> <operator>=</operator> <operator>(</operator>struct <name>vout_display_sys_t</name><operator>*</operator><operator>)</operator><call><name>calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>sys</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>sys</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>embed</name></name> <operator>=</operator> <name>embed</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>p_awh</name></name> <operator>=</operator> <name>p_awh</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>anw</name></name> <operator>=</operator> <call><name>AWindowHandler_getANativeWindowAPI</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_awh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>i_display_width</name></name> <operator>=</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>i_display_height</name></name> <operator>=</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>height</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>fmt</name> <operator>=</operator> <operator>*</operator><name>fmtp</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>fmt</name><operator>.</operator><name>i_chroma</name></name> <operator>!=</operator> <name>VLC_CODEC_ANDROID_OPAQUE</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_fcc</name> <init>= <expr><call><name>var_InheritString</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>CFG_PREFIX</name> <literal type="string">"chroma"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>psz_fcc</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_chroma</name></name> <operator>=</operator> <call><name>vlc_fourcc_GetCodecFromString</name><argument_list>(<argument><expr><name>VIDEO_ES</name></expr></argument>, <argument><expr><name>psz_fcc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>psz_fcc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_chroma</name></name> <operator>=</operator> <name>VLC_CODEC_RGB32</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

<switch>switch<condition>(<expr><name><name>fmt</name><operator>.</operator><name>i_chroma</name></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>VLC_CODEC_YV12</name></expr>:</case>


<expr_stmt><expr><name><name>fmt</name><operator>.</operator><name>i_chroma</name></name> <operator>=</operator> <name>VLC_CODEC_I420</name></expr>;</expr_stmt>
<case>case <expr><name>VLC_CODEC_I420</name></expr>:</case>
<break>break;</break>
<case>case <expr><name>VLC_CODEC_RGB16</name></expr>:</case>
<case>case <expr><name>VLC_CODEC_RGB32</name></expr>:</case>
<case>case <expr><name>VLC_CODEC_RGBA</name></expr>:</case>
<expr_stmt><expr><call><name>SetRGBMask</name><argument_list>(<argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>video_format_FixRgb</name><argument_list>(<argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<default>default:</default>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></switch>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>avctx</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>context</name></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>avctx</name></name> <operator>=</operator> <call><name>vlc_video_context_GetPrivate</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>VLC_VIDEO_CONTEXT_AWINDOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>id</name></name> <operator>!=</operator> <name>AWindow_Video</name></expr>)</condition>
<block>{<block_content>

<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>p_window</name></name> <operator>=</operator> <call><name>AndroidWindow_New</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>, <argument><expr><name>AWindow_Video</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>sys</name><operator>-&gt;</operator><name>p_window</name></name></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>sys</name><operator>-&gt;</operator><name>p_window</name><operator>-&gt;</operator><name>b_opaque</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>video_format_TransformTo</name><argument_list>(<argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>, <argument><expr><name>ORIENT_NORMAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"using %s"</literal></expr></argument>, <argument><expr><ternary><condition><expr><name><name>sys</name><operator>-&gt;</operator><name>p_window</name><operator>-&gt;</operator><name>b_opaque</name></name></expr> ?</condition><then> <expr><literal type="string">"opaque"</literal></expr> </then><else>: <expr><literal type="string">"ANW"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>video_format_ApplyRotation</name><argument_list>(<argument><expr><operator>&amp;</operator><name>sub_fmt</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sub_fmt</name><operator>.</operator><name>i_chroma</name></name> <operator>=</operator> <name><name>subpicture_chromas</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SetRGBMask</name><argument_list>(<argument><expr><operator>&amp;</operator><name>sub_fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>video_format_FixRgb</name><argument_list>(<argument><expr><operator>&amp;</operator><name>sub_fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_window</name></name> <operator>=</operator> <call><name>AndroidWindow_New</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>sub_fmt</name></expr></argument>, <argument><expr><name>AWindow_Subtitles</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_window</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>FixSubtitleFormat</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>i_sub_last_order</name></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>


<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>subpicture_chromas</name></name> <operator>=</operator> <name>subpicture_chromas</name></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><operator>!</operator><name><name>vd</name><operator>-&gt;</operator><name>obj</name><operator>.</operator><name>force</name></name> <operator>&amp;&amp;</operator> <name><name>sys</name><operator>-&gt;</operator><name>p_window</name><operator>-&gt;</operator><name>b_opaque</name></name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"cannot blend subtitles with an opaque surface, "</literal>
<literal type="string">"trying next vout"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>sys</name><operator>-&gt;</operator><name>p_window</name><operator>-&gt;</operator><name>b_opaque</name></name></expr>)</condition>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>AndroidWindow_SetupSW</name><argument_list>(<argument><expr><name>sys</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_window</name></name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>p_prepared_pic</name></name> <operator>=</operator> <call><name>PictureAlloc</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>p_window</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>p_prepared_pic</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>UpdateVideoSize</name><argument_list>(<argument><expr><name>sys</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>p_window</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>prepare</name></name> <operator>=</operator> <name>Prepare</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>display</name></name> <operator>=</operator> <name>Display</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>control</name></name> <operator>=</operator> <name>Control</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>close</name></name> <operator>=</operator> <name>Close</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>fmtp</name> <operator>=</operator> <name>fmt</name></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<label><name>error</name>:</label>
<expr_stmt><expr><call><name>Close</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>ClearSurface</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>p_window</name><operator>-&gt;</operator><name>b_opaque</name></name></expr>)</condition>
<block>{<block_content>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>modlist</name> <init>= <expr><call><name>var_InheritString</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>embed</name></name></expr></argument>, <argument><expr><literal type="string">"gles2"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_gl_t</name> <modifier>*</modifier></type><name>gl</name> <init>= <expr><call><name>vlc_gl_Create</name><argument_list>(<argument><expr><name><name>vd</name><operator>-&gt;</operator><name>cfg</name></name></expr></argument>, <argument><expr><name>VLC_OPENGL_ES2</name></expr></argument>, <argument><expr><name>modlist</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>modlist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>gl</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>vlc_gl_MakeCurrent</name><argument_list>(<argument><expr><name>gl</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>end</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_gl_Resize</name><argument_list>(<argument><expr><name>gl</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>glClearColor</name><argument_list>(<argument><expr><literal type="number">0.0f</literal></expr></argument>, <argument><expr><literal type="number">0.0f</literal></expr></argument>, <argument><expr><literal type="number">0.0f</literal></expr></argument>, <argument><expr><literal type="number">0.0f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>glClear</name><argument_list>(<argument><expr><name>GL_COLOR_BUFFER_BIT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_gl_Swap</name><argument_list>(<argument><expr><name>gl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_gl_ReleaseCurrent</name><argument_list>(<argument><expr><name>gl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label><name>end</name>:</label>
<expr_stmt><expr><call><name>vlc_gl_Release</name><argument_list>(<argument><expr><name>gl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else
<block>{<block_content>
<decl_stmt><decl><type><name>android_window</name> <modifier>*</modifier></type><name>p_window</name> <init>= <expr><name><name>sys</name><operator>-&gt;</operator><name>p_window</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ANativeWindow_Buffer</name></type> <name>buf</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name><name>sys</name><operator>-&gt;</operator><name>anw</name><operator>-&gt;</operator><name>setBuffersGeometry</name></name><argument_list>(<argument><expr><name><name>p_window</name><operator>-&gt;</operator><name>p_surface</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,
<argument><expr><name>WINDOW_FORMAT_RGB_565</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal>
<operator>&amp;&amp;</operator> <call><name><name>sys</name><operator>-&gt;</operator><name>anw</name><operator>-&gt;</operator><name>winLock</name></name><argument_list>(<argument><expr><name><name>p_window</name><operator>-&gt;</operator><name>p_surface</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>buf</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition>
<block>{<block_content>
<decl_stmt><decl><type><name>uint16_t</name> <modifier>*</modifier></type><name>p_bit</name> <init>= <expr><name><name>buf</name><operator>.</operator><name>bits</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>p_bit</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0x0000</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name><name>sys</name><operator>-&gt;</operator><name>anw</name><operator>-&gt;</operator><name>unlockAndPost</name></name><argument_list>(<argument><expr><name><name>p_window</name><operator>-&gt;</operator><name>p_surface</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>



<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>b_has_subpictures</name></name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>SubpicturePrepare</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AndroidWindow_UnlockPicture</name><argument_list>(<argument><expr><name>sys</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_window</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_pic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>p_window</name></name></expr>)</condition>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>b_displayed</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ClearSurface</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>AndroidWindow_Destroy</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>p_prepared_pic</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>picture_Release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_prepared_pic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_pic</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>picture_Release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_pic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>p_spu_blend</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>filter_DeleteBlend</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_spu_blend</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_buffer_bounds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_window</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>AndroidWindow_Destroy</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>embed</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>AWindowHandler_setVideoLayout</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_awh</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>SubtitleRegionToBounds</name><parameter_list>(<parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>subpicture</name></decl></parameter>,
<parameter><decl><type><name>ARect</name> <modifier>*</modifier></type><name>p_out_bounds</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>subpicture</name></expr>)</condition> <block>{<block_content>
<for>for <control>(<init><decl><type><name>subpicture_region_t</name> <modifier>*</modifier></type><name>r</name> <init>= <expr><name><name>subpicture</name><operator>-&gt;</operator><name>p_region</name></name></expr></init></decl>;</init> <condition><expr><name>r</name> <operator>!=</operator> <name>NULL</name></expr>;</condition> <incr><expr><name>r</name> <operator>=</operator> <name><name>r</name><operator>-&gt;</operator><name>p_next</name></name></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>ARect</name></type> <name>new_bounds</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>new_bounds</name><operator>.</operator><name>left</name></name> <operator>=</operator> <name><name>r</name><operator>-&gt;</operator><name>i_x</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_bounds</name><operator>.</operator><name>top</name></name> <operator>=</operator> <name><name>r</name><operator>-&gt;</operator><name>i_y</name></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>new_bounds</name><operator>.</operator><name>left</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>new_bounds</name><operator>.</operator><name>left</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>new_bounds</name><operator>.</operator><name>top</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>new_bounds</name><operator>.</operator><name>top</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>new_bounds</name><operator>.</operator><name>right</name></name> <operator>=</operator> <name><name>r</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_visible_width</name></name> <operator>+</operator> <name><name>r</name><operator>-&gt;</operator><name>i_x</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>new_bounds</name><operator>.</operator><name>bottom</name></name> <operator>=</operator> <name><name>r</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_visible_height</name></name> <operator>+</operator> <name><name>r</name><operator>-&gt;</operator><name>i_y</name></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>r</name> <operator>==</operator> <operator>&amp;</operator><name><name>subpicture</name><operator>-&gt;</operator><name>p_region</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><operator>*</operator><name>p_out_bounds</name> <operator>=</operator> <name>new_bounds</name></expr>;</expr_stmt></block_content></block></if>
<else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>p_out_bounds</name><operator>-&gt;</operator><name>left</name></name> <operator>&gt;</operator> <name><name>new_bounds</name><operator>.</operator><name>left</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>p_out_bounds</name><operator>-&gt;</operator><name>left</name></name> <operator>=</operator> <name><name>new_bounds</name><operator>.</operator><name>left</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>p_out_bounds</name><operator>-&gt;</operator><name>right</name></name> <operator>&lt;</operator> <name><name>new_bounds</name><operator>.</operator><name>right</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>p_out_bounds</name><operator>-&gt;</operator><name>right</name></name> <operator>=</operator> <name><name>new_bounds</name><operator>.</operator><name>right</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>p_out_bounds</name><operator>-&gt;</operator><name>top</name></name> <operator>&gt;</operator> <name><name>new_bounds</name><operator>.</operator><name>top</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>p_out_bounds</name><operator>-&gt;</operator><name>top</name></name> <operator>=</operator> <name><name>new_bounds</name><operator>.</operator><name>top</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>p_out_bounds</name><operator>-&gt;</operator><name>bottom</name></name> <operator>&lt;</operator> <name><name>new_bounds</name><operator>.</operator><name>bottom</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>p_out_bounds</name><operator>-&gt;</operator><name>bottom</name></name> <operator>=</operator> <name><name>new_bounds</name><operator>.</operator><name>bottom</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></for>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name><name>p_out_bounds</name><operator>-&gt;</operator><name>left</name></name> <operator>=</operator> <name><name>p_out_bounds</name><operator>-&gt;</operator><name>top</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_out_bounds</name><operator>-&gt;</operator><name>right</name></name> <operator>=</operator> <name><name>p_out_bounds</name><operator>-&gt;</operator><name>bottom</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>SubtitleGetDirtyBounds</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>,
<parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>subpicture</name></decl></parameter>,
<parameter><decl><type><name>ARect</name> <modifier>*</modifier></type><name>p_out_bounds</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_found</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>





<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_buffer_bounds</name></name></expr>)</condition> <block>{<block_content>
<for>for <control>(<init>;</init> <condition><expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_buffer_bounds</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>p_pixels</name> <operator>!=</operator> <name>NULL</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>buffer_bounds</name> <modifier>*</modifier></type><name>p_bb</name> <init>= <expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>p_sub_buffer_bounds</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name><name>p_bb</name><operator>-&gt;</operator><name>p_pixels</name></name> <operator>==</operator> <name><name>sys</name><operator>-&gt;</operator><name>p_sub_pic</name><operator>-&gt;</operator><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>p_pixels</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>p_out_bounds</name> <operator>=</operator> <name><name>p_bb</name><operator>-&gt;</operator><name>bounds</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>b_found</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>b_found</name>
<operator>||</operator> <name><name>p_out_bounds</name><operator>-&gt;</operator><name>left</name></name> <operator>&lt;</operator> <literal type="number">0</literal>
<operator>||</operator> <name><name>p_out_bounds</name><operator>-&gt;</operator><name>right</name></name> <operator>&lt;</operator> <literal type="number">0</literal>
<operator>||</operator> <operator>(</operator><name>unsigned</name> <name>int</name><operator>)</operator> <name><name>p_out_bounds</name><operator>-&gt;</operator><name>right</name></name> <operator>&gt;</operator> <name><name>sys</name><operator>-&gt;</operator><name>p_sub_pic</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_width</name></name>
<operator>||</operator> <name><name>p_out_bounds</name><operator>-&gt;</operator><name>bottom</name></name> <operator>&lt;</operator> <literal type="number">0</literal>
<operator>||</operator> <name><name>p_out_bounds</name><operator>-&gt;</operator><name>top</name></name> <operator>&lt;</operator> <literal type="number">0</literal>
<operator>||</operator> <operator>(</operator><name>unsigned</name> <name>int</name><operator>)</operator> <name><name>p_out_bounds</name><operator>-&gt;</operator><name>top</name></name> <operator>&gt;</operator> <name><name>sys</name><operator>-&gt;</operator><name>p_sub_pic</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_height</name></name></expr>)</condition>
<block>{<block_content>

<expr_stmt><expr><name><name>p_out_bounds</name><operator>-&gt;</operator><name>left</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_out_bounds</name><operator>-&gt;</operator><name>top</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_out_bounds</name><operator>-&gt;</operator><name>right</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>p_sub_pic</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_out_bounds</name><operator>-&gt;</operator><name>bottom</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>p_sub_pic</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_height</name></name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>sys</name><operator>-&gt;</operator><name>p_sub_buffer_bounds</name></name>
<operator>||</operator> <name><name>sys</name><operator>-&gt;</operator><name>p_sub_buffer_bounds</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>p_pixels</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>buffer_bounds</name> <modifier>*</modifier></type><name>p_bb</name> <init>= <expr><call><name>realloc</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_buffer_bounds</name></name></expr></argument>,
<argument><expr><operator>(</operator><name>i</name> <operator>+</operator> <literal type="number">2</literal><operator>)</operator> <operator>*</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>buffer_bounds</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>p_bb</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_buffer_bounds</name></name> <operator>=</operator> <name>p_bb</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_buffer_bounds</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>p_pixels</name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>p_sub_pic</name><operator>-&gt;</operator><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>p_pixels</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_buffer_bounds</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>p_pixels</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_buffer_bounds</name></name>
<operator>&amp;&amp;</operator> <name><name>sys</name><operator>-&gt;</operator><name>p_sub_buffer_bounds</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>p_pixels</name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>SubtitleRegionToBounds</name><argument_list>(<argument><expr><name>subpicture</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>p_sub_buffer_bounds</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>bounds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>SubpicturePrepare</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>subpicture</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ARect</name></type> <name>memset_bounds</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>SubtitleRegionToBounds</name><argument_list>(<argument><expr><name>subpicture</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>memset_bounds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>subpicture</name></expr> )</condition>
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><name><name>subpicture</name><operator>-&gt;</operator><name>i_order</name></name> <operator>==</operator> <name><name>sys</name><operator>-&gt;</operator><name>i_sub_last_order</name></name>
<operator>&amp;&amp;</operator> <call><name>memcmp</name><argument_list>( <argument><expr><operator>&amp;</operator><name>memset_bounds</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>sub_last_region</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>ARect</name></expr></argument>)</argument_list></sizeof></expr></argument> )</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>i_sub_last_order</name></name> <operator>=</operator> <name><name>subpicture</name><operator>-&gt;</operator><name>i_order</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>sub_last_region</name></name> <operator>=</operator> <name>memset_bounds</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>AndroidWindow_LockPicture</name><argument_list>(<argument><expr><name>sys</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_window</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_pic</name></name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>


<expr_stmt><expr><call><name>SubtitleGetDirtyBounds</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>subpicture</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>memset_bounds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>x_pixels_offset</name> <init>= <expr><name><name>memset_bounds</name><operator>.</operator><name>left</name></name>
<operator>*</operator> <name><name>sys</name><operator>-&gt;</operator><name>p_sub_pic</name><operator>-&gt;</operator><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>i_pixel_pitch</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>i_line_size</name> <init>= <expr><operator>(</operator><name><name>memset_bounds</name><operator>.</operator><name>right</name></name> <operator>-</operator> <name><name>memset_bounds</name><operator>.</operator><name>left</name></name><operator>)</operator>
<operator>*</operator> <name><name>sys</name><operator>-&gt;</operator><name>p_sub_pic</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pixel_pitch</name></name></expr></init></decl>;</decl_stmt>
<for>for <control>(<init><decl><type><name>int</name></type> <name>y</name> <init>= <expr><name><name>memset_bounds</name><operator>.</operator><name>top</name></name></expr></init></decl>;</init> <condition><expr><name>y</name> <operator>&lt;</operator> <name><name>memset_bounds</name><operator>.</operator><name>bottom</name></name></expr>;</condition> <incr><expr><name>y</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>p_sub_pic</name><operator>-&gt;</operator><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name><name>p_pixels</name><index>[<expr><name>y</name> <operator>*</operator> <name><name>sys</name><operator>-&gt;</operator><name>p_sub_pic</name><operator>-&gt;</operator><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>i_pitch</name>
<operator>+</operator> <name>x_pixels_offset</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>i_line_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<if_stmt><if>if <condition>(<expr><name>subpicture</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>picture_BlendSubpicture</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_pic</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_spu_blend</name></name></expr></argument>, <argument><expr><name>subpicture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Prepare</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>picture</name></decl></parameter>,
<parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>subpicture</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>date</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>p_window</name><operator>-&gt;</operator><name>b_opaque</name></name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>picture</name><operator>-&gt;</operator><name>context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>render_ts</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>now</name> <init>= <expr><call><name>vlc_tick_now</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>date</name> <operator>&gt;</operator> <name>now</name></expr>)</condition>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>date</name> <operator>-</operator> <name>now</name> <operator>&lt;=</operator> <call><name>VLC_TICK_FROM_SEC</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name><name>sys</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>render_ts</name></name><argument_list>(<argument><expr><name><name>picture</name><operator>-&gt;</operator><name>context</name></name></expr></argument>, <argument><expr><name>date</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content> 
<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"picture way too early to release at time"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<else>else
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>AndroidWindow_LockPicture</name><argument_list>(<argument><expr><name>sys</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_window</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_prepared_pic</name></name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>picture_Copy</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_prepared_pic</name></name></expr></argument>, <argument><expr><name>picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AndroidWindow_UnlockPicture</name><argument_list>(<argument><expr><name>sys</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_window</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_prepared_pic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name>subpicture</name> <operator>&amp;&amp;</operator> <name><name>sys</name><operator>-&gt;</operator><name>p_sub_window</name></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>b_sub_invalid</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>b_sub_invalid</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_pic</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>picture_Release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_pic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_pic</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>p_spu_blend</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>filter_DeleteBlend</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_spu_blend</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>p_spu_blend</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_buffer_bounds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_buffer_bounds</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>sys</name><operator>-&gt;</operator><name>p_sub_pic</name></name>
<operator>&amp;&amp;</operator> <call><name>AndroidWindow_SetupSW</name><argument_list>(<argument><expr><name>sys</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_window</name></name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_pic</name></name> <operator>=</operator> <call><name>PictureAlloc</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>p_sub_window</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>sys</name><operator>-&gt;</operator><name>p_spu_blend</name></name> <operator>&amp;&amp;</operator> <name><name>sys</name><operator>-&gt;</operator><name>p_sub_pic</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>p_spu_blend</name></name> <operator>=</operator> <call><name>filter_NewBlend</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>p_sub_pic</name><operator>-&gt;</operator><name>format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_pic</name></name> <operator>&amp;&amp;</operator> <name><name>sys</name><operator>-&gt;</operator><name>p_spu_blend</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>b_has_subpictures</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>



<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>b_has_subpictures</name></name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>SubpicturePrepare</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>subpicture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>subpicture</name></expr>)</condition>
<block>{<block_content>



<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>b_has_subpictures</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Display</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>picture</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>p_window</name><operator>-&gt;</operator><name>b_opaque</name></name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>picture</name><operator>-&gt;</operator><name>context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name><name>sys</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>render</name></name><argument_list>(<argument><expr><name><name>picture</name><operator>-&gt;</operator><name>context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_pic</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>AndroidWindow_UnlockPicture</name><argument_list>(<argument><expr><name>sys</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_window</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_sub_pic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>b_displayed</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>CopySourceAspect</name><parameter_list>(<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>p_dest</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>p_src</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>p_dest</name><operator>-&gt;</operator><name>i_sar_num</name></name> <operator>=</operator> <name><name>p_src</name><operator>-&gt;</operator><name>i_sar_num</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_dest</name><operator>-&gt;</operator><name>i_sar_den</name></name> <operator>=</operator> <name><name>p_src</name><operator>-&gt;</operator><name>i_sar_den</name></name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Control</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>query</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>args</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<switch>switch <condition>(<expr><name>query</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>VOUT_DISPLAY_CHANGE_SOURCE_CROP</name></expr>:</case>
<case>case <expr><name>VOUT_DISPLAY_CHANGE_SOURCE_ASPECT</name></expr>:</case>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"change source crop/aspect"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>query</name> <operator>==</operator> <name>VOUT_DISPLAY_CHANGE_SOURCE_CROP</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>video_format_CopyCrop</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>p_window</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>source</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else<block type="pseudo"><block_content>
<expr_stmt><expr><call><name>CopySourceAspect</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>p_window</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>source</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><call><name>UpdateVideoSize</name><argument_list>(<argument><expr><name>sys</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>p_window</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FixSubtitleFormat</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block>
<case>case <expr><name>VOUT_DISPLAY_CHANGE_DISPLAY_SIZE</name></expr>:</case>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type><name>cfg</name> <init>= <expr><call><name>va_arg</name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>vout_display_cfg_t</name> <operator>*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>i_display_width</name></name> <operator>=</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>i_display_height</name></name> <operator>=</operator> <name><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>height</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"change display size: %dx%d"</literal></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>i_display_width</name></name></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>i_display_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FixSubtitleFormat</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block>
<case>case <expr><name>VOUT_DISPLAY_RESET_PICTURES</name></expr>:</case>
<expr_stmt><expr><call><name>vlc_assert_unreachable</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<default>default:</default>
<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Unknown request in android-display: %d"</literal></expr></argument>, <argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
<case>case <expr><name>VOUT_DISPLAY_CHANGE_ZOOM</name></expr>:</case>
<case>case <expr><name>VOUT_DISPLAY_CHANGE_DISPLAY_FILLED</name></expr>:</case>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></switch>
</block_content>}</block></function>
</unit>
