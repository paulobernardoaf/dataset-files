<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\video_output\win32\common.h">























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_vout_display.h&gt;</cpp:file></cpp:include>





<typedef>typedef <type><name><name>struct</name> <name>event_thread_t</name></name></type> <name>event_thread_t</name>;</typedef>

<typedef>typedef <type><struct>struct <name>display_win32_area_t</name>
<block>{

<decl_stmt><decl><type><name>vout_display_place_t</name></type> <name>place</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>place_changed</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>video_format_t</name></type> <name>texture_source</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vout_display_cfg_t</name></type> <name>vdcfg</name></decl>;</decl_stmt>
}</block></struct></type> <name>display_win32_area_t</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RECTWidth</name><parameter_list>(<parameter><type><name>r</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(LONG)((r).right - (r).left)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RECTHeight</name><parameter_list>(<parameter><type><name>r</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(LONG)((r).bottom - (r).top)</cpp:value></cpp:define>







<typedef>typedef <type><struct>struct <name>vout_display_sys_win32_t</name>
<block>{

<decl_stmt><decl><type><name>event_thread_t</name> <modifier>*</modifier></type><name>event</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>HWND</name></type> <name>hvideownd</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>HWND</name></type> <name>hparent</name></decl>;</decl_stmt> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>NDEBUG</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name>defined</name><argument_list>(<argument><expr><name>HAVE_DXGIDEBUG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>HINSTANCE</name></type> <name>dxgidebug_dll</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>vout_display_sys_win32_t</name>;</typedef>





<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><name>VLC_WINSTORE_APP</name></expr></cpp:if>
<function_decl><type><name>int</name></type> <name>CommonWindowInit</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>display_win32_area_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>vout_display_sys_win32_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>bool</name></type> <name>projection_gestures</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>CommonWindowClean</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>vout_display_sys_win32_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
<function_decl><type><name>int</name></type> <name>CommonControl</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>display_win32_area_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>vout_display_sys_win32_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter> , <parameter><decl><type><name>va_list</name></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>CommonPlacePicture</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>display_win32_area_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>vout_display_sys_win32_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>CommonInit</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>display_win32_area_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<function_decl><type><name>void</name><modifier>*</modifier></type> <name>HookWindowsSensors</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>HWND</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>UnhookWindowsSensors</name><parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
