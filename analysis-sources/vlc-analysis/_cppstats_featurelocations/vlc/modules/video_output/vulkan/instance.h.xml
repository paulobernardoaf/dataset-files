<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\video_output\vulkan\instance.h">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>VLC_VULKAN_INSTANCE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_VULKAN_INSTANCE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_atomic.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_vout_window.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vulkan/vulkan.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;libplacebo/vulkan.h&gt;</cpp:file></cpp:include>

<struct_decl>struct <name>vout_window_t</name>;</struct_decl>
<struct_decl>struct <name>vout_window_cfg_t</name>;</struct_decl>


<typedef>typedef <type><struct>struct <name>vlc_vk_t</name>
<block>{

<decl_stmt><decl><type><name><name>struct</name> <name>vlc_object_t</name></name></type> <name>obj</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>module_t</name> <modifier>*</modifier></type><name>module</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_atomic_rc_t</name></type> <name>ref_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>platform_sys</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name><name>struct</name> <name>pl_context</name></name> <modifier>*</modifier></type><name>ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>pl_vk_inst</name></name> <modifier>*</modifier></type><name>instance</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>pl_vulkan</name></name> <modifier>*</modifier></type><name>vulkan</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>pl_swapchain</name></name> <modifier>*</modifier></type><name>swapchain</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VkSurfaceKHR</name></type> <name>surface</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>vout_window_t</name></name> <modifier>*</modifier></type><name>window</name></decl>;</decl_stmt>
}</block></struct></type> <name>vlc_vk_t</name>;</typedef>

<decl_stmt><decl><type><name>vlc_vk_t</name> <modifier>*</modifier></type><name>vlc_vk_Create</name><argument_list>(<argument><expr>struct <name>vout_window_t</name> <operator>*</operator></expr></argument>, <argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator></expr></argument>)</argument_list> <name>VLC_USED</name></decl>;</decl_stmt>
<function_decl><type><name>void</name></type> <name>vlc_vk_Release</name><parameter_list>(<parameter><decl><type><name>vlc_vk_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>vlc_vk_Hold</name><parameter_list>(<parameter><decl><type><name>vlc_vk_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
