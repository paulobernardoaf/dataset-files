<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\video_filter\puzzle_mgt.h">

























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>VLC_LIB_PUZZLE_MGT_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_LIB_PUZZLE_MGT_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;math.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_filter.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_rand.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"puzzle_bezier.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"puzzle_lib.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"puzzle_pce.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"puzzle_mgt.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NO_PCE</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define>






<typedef>typedef <type><name><name>struct</name> <name>filter_sys_t</name></name></type> <name>filter_sys_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>int32_t</name></type> <name>i_preview_width</name></decl>, <name>i_preview_lines</name>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name>i_border_width</name></decl>, <name>i_border_lines</name>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name>i_pce_max_width</name></decl>, <name>i_pce_max_lines</name>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name>i_width</name></decl>, <name>i_lines</name>, <name>i_pitch</name>, <name>i_visible_pitch</name>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_pixel_pitch</name></decl>;</decl_stmt>
}</block></struct></type> <name>puzzle_plane_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>int32_t</name></type> <name>i_x</name></decl>, <name>i_y</name>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name>i_width</name></decl>, <name>i_lines</name>;</decl_stmt>
}</block></struct></type> <name>puzzle_array_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>int32_t</name></type> <name>i_original_row</name></decl>, <name>i_original_col</name>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name>i_top_shape</name></decl>, <name>i_btm_shape</name>, <name>i_right_shape</name>, <name>i_left_shape</name>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>f_pos_x</name></decl>, <name>f_pos_y</name>;</decl_stmt>
<decl_stmt><decl><type><name>int8_t</name></type> <name>i_actual_angle</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int32_t</name></type> <name>i_actual_mirror</name></decl>;</decl_stmt> 
}</block></struct></type> <name>save_piece_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>int32_t</name></type> <name>i_rows</name></decl>, <name>i_cols</name>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_rotate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>save_piece_t</name> <modifier>*</modifier></type><name>ps_pieces</name></decl>;</decl_stmt>
}</block></struct></type> <name>save_game_t</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>int32_t</name></type> <name>i_rows</name></decl>, <name>i_cols</name>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name>i_pict_width</name></decl>, <name>i_pict_height</name>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name>i_desk_width</name></decl>, <name>i_desk_height</name>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name>i_piece_types</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>i_pieces_nbr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name>i_preview_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name>i_shape_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name>i_border</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_planes</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>b_preview</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_blackslot</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_near</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_advanced</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_mode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>i_rotate</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int32_t</name></type> <name>i_auto_shuffle_speed</name></decl>, <name>i_auto_solve_speed</name>;</decl_stmt>
}</block></struct></type> <name>param_t</name>;</typedef>

<function_decl><type><name>int</name></type> <name>puzzle_bake</name> <parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type></decl></parameter> , <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>puzzle_free_ps_puzzle_array</name> <parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>puzzle_bake_piece</name> <parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>puzzle_set_left_top_shapes</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>puzzle_random_rotate</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>puzzle_free_ps_pieces</name> <parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>puzzle_allocate_ps_pieces</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> <name>puzzle_is_valid</name><parameter_list>( <parameter><decl><type><name>filter_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl></parameter>, <parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>pi_pce_lst</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>puzzle_shuffle</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>puzzle_generate_rand_pce_list</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pi_pce_lst</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>puzzle_is_finished</name><parameter_list>( <parameter><decl><type><name>filter_sys_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>pi_pce_lst</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>puzzle_piece_foreground</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>i_piece</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>puzzle_count_pce_group</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>puzzle_solve_pces_group</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>puzzle_solve_pces_accuracy</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>puzzle_sort_layers</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>puzzle_auto_solve</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>puzzle_auto_shuffle</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>save_game_t</name><modifier>*</modifier></type> <name>puzzle_save</name><parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>puzzle_load</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>, <parameter><decl><type><name>save_game_t</name> <modifier>*</modifier></type><name>ps_save_game</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
