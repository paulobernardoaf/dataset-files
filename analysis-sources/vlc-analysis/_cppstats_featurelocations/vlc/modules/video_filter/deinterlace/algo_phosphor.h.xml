<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\video_filter\deinterlace\algo_phosphor.h">





















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>VLC_DEINTERLACE_ALGO_PHOSPHOR_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_DEINTERLACE_ALGO_PHOSPHOR_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<struct_decl>struct <name>filter_t</name>;</struct_decl>
<struct_decl>struct <name>picture_t</name>;</struct_decl>









<typedef>typedef <type><enum>enum <block>{ <decl><name>PC_LATEST</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>, <decl><name>PC_ALTLINE</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>PC_BLEND</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>, <decl><name>PC_UPCONVERT</name> <init>= <expr><literal type="number">4</literal></expr></init></decl> }</block></enum></type> <name>phosphor_chroma_t</name>;</typedef>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>phosphor_chroma_list</name><index>[]</index></name> <init>= <expr><block>{ <expr><name>PC_LATEST</name></expr>, <expr><name>PC_ALTLINE</name></expr>,
<expr><name>PC_BLEND</name></expr>, <expr><name>PC_UPCONVERT</name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>phosphor_chroma_list_text</name><index>[]</index></name> <init>= <expr><block>{ <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Latest"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"AltLine"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Blend"</literal></expr></argument>)</argument_list></call></expr>,
<macro><name>N_</name><argument_list>(<argument><literal type="string">"Upconvert"</literal></argument>)</argument_list></macro> }</block></expr></init></decl>;</decl_stmt>




<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>phosphor_dimmer_list</name><index>[]</index></name> <init>= <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>phosphor_dimmer_list_text</name><index>[]</index></name> <init>= <expr><block>{ <expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Off"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Low"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>N_</name><argument_list>(<argument><expr><literal type="string">"Medium"</literal></expr></argument>)</argument_list></call></expr>,
<macro><name>N_</name><argument_list>(<argument><literal type="string">"High"</literal></argument>)</argument_list></macro> }</block></expr></init></decl>;</decl_stmt>


<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>phosphor_chroma_t</name></type> <name>i_chroma_for_420</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_dimmer_strength</name></decl>;</decl_stmt>
}</block></struct></type> <name>phosphor_sys_t</name>;</typedef>





































<function_decl><type><name>int</name></type> <name>RenderPhosphor</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>,
<parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>p_dst</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>p_pic</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>i_order</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_field</name></decl></parameter> )</parameter_list>;</function_decl>




































































<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
