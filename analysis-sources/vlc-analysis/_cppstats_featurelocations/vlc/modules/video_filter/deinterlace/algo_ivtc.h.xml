<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\video_filter\deinterlace\algo_ivtc.h">





















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>VLC_DEINTERLACE_ALGO_IVTC_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_DEINTERLACE_ALGO_IVTC_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<struct_decl>struct <name>filter_t</name>;</struct_decl>
<struct_decl>struct <name>picture_t</name>;</struct_decl>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IVTC_NUM_FIELD_PAIRS</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IVTC_DETECTION_HISTORY_SIZE</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IVTC_LATEST</name></cpp:macro> <cpp:value>(IVTC_DETECTION_HISTORY_SIZE-1)</cpp:value></cpp:define>




<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>int</name></type> <name>i_mode</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>i_old_mode</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>i_cadence_pos</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>i_tfd</name></decl>;</decl_stmt> 





<decl_stmt><decl><type><name>int</name></type> <name><name>pi_scores</name><index>[<expr><name>IVTC_NUM_FIELD_PAIRS</name></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name><name>pi_motion</name><index>[<expr><name>IVTC_DETECTION_HISTORY_SIZE</name></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name><name>pi_top_rep</name><index>[<expr><name>IVTC_DETECTION_HISTORY_SIZE</name></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name><name>pi_bot_rep</name><index>[<expr><name>IVTC_DETECTION_HISTORY_SIZE</name></expr>]</index></name></decl>;</decl_stmt> 






<decl_stmt><decl><type><name>int</name></type> <name><name>pi_final_scores</name><index>[<expr><name>IVTC_DETECTION_HISTORY_SIZE</name></expr>]</index></name></decl>;</decl_stmt>















<decl_stmt><decl><type><name>int</name></type> <name><name>pi_s_cadence_pos</name><index>[<expr><name>IVTC_DETECTION_HISTORY_SIZE</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name><name>pb_s_reliable</name><index>[<expr><name>IVTC_DETECTION_HISTORY_SIZE</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>pi_v_raw</name><index>[<expr><name>IVTC_DETECTION_HISTORY_SIZE</name></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name><name>pi_v_cadence_pos</name><index>[<expr><name>IVTC_DETECTION_HISTORY_SIZE</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name><name>pb_v_reliable</name><index>[<expr><name>IVTC_DETECTION_HISTORY_SIZE</name></expr>]</index></name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>int</name></type> <name><name>pi_cadence_pos_history</name><index>[<expr><name>IVTC_DETECTION_HISTORY_SIZE</name></expr>]</index></name></decl>;</decl_stmt>








<decl_stmt><decl><type><name>bool</name></type> <name>b_sequence_valid</name></decl>;</decl_stmt>









<decl_stmt><decl><type><name>bool</name></type> <name><name>pb_all_progressives</name><index>[<expr><name>IVTC_DETECTION_HISTORY_SIZE</name></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>ivtc_sys_t</name>;</typedef>






























<function_decl><type><name>int</name></type> <name>RenderIVTC</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>p_dst</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>p_pic</name></decl></parameter> )</parameter_list>;</function_decl>












<function_decl><type><name>void</name></type> <name>IVTCClearState</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter> )</parameter_list>;</function_decl>


































































































































































































































































































































































































































































































































































































<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
