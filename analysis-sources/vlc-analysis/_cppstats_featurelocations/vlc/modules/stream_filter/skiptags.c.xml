<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\stream_filter\skiptags.c">




















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;limits.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_stream.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_block.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_TAGS</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_TAG_SIZE</name></cpp:macro> <cpp:value>(1&lt;&lt;17)</cpp:value></cpp:define>

<struct>struct <name>skiptags_sys_t</name>
<block>{
<decl_stmt><decl><type><name>uint64_t</name></type> <name>header_skip</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_tags</name></decl>;</decl_stmt>
}</block>;</struct>

<function><type><specifier>static</specifier> <name><name>struct</name> <name>skiptags_sys_t</name></name> <modifier>*</modifier></type> <name>skiptags_sys_New</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>skiptags_sys_t</name></name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><call><name>malloc</name><argument_list>(<argument><expr><sizeof>sizeof <argument_list>(<argument><expr><operator>*</operator><name>sys</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><name>sys</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>header_skip</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>p_tags</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>sys</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>skiptags_sys_Delete</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>skiptags_sys_t</name></name> <modifier>*</modifier></type><name>sys</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>block_ChainRelease</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>p_tags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>uint_fast32_t</name></type> <name>SkipID3Tag</name><parameter_list>(<parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>peek</name></decl>;</decl_stmt>


<if_stmt><if>if <condition>(<expr><call><name>vlc_stream_Peek</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>peek</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">10</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>memcmp</name><argument_list>(<argument><expr><name>peek</name></expr></argument>, <argument><expr><literal type="string">"ID3"</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>uint_fast8_t</name></type> <name>version</name> <init>= <expr><name><name>peek</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint_fast8_t</name></type> <name>revision</name> <init>= <expr><name><name>peek</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>has_footer</name> <init>= <expr><operator>(</operator><name><name>peek</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>&amp;</operator> <literal type="number">0x10</literal><operator>)</operator> <operator>!=</operator> <literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint_fast32_t</name></type> <name>size</name> <init>= <expr><literal type="number">10u</literal> <operator>+</operator> <operator>(</operator><name><name>peek</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">21</literal><operator>)</operator> <operator>+</operator> <operator>(</operator><name><name>peek</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">14</literal><operator>)</operator>
<operator>+</operator> <operator>(</operator><name><name>peek</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">7</literal><operator>)</operator> <operator>+</operator> <name><name>peek</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <operator>+</operator> <operator>(</operator><ternary><condition><expr><name>has_footer</name></expr> ?</condition><then> <expr><literal type="number">10u</literal></expr> </then><else>: <expr><literal type="number">0u</literal></expr></else></ternary><operator>)</operator></expr></init></decl>;</decl_stmt>


<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><literal type="string">"ID3v2.%"</literal><name>PRIuFAST8</name><literal type="string">" revision %"</literal><name>PRIuFAST8</name><literal type="string">" tag found, "</literal>
<literal type="string">"skipping %"</literal><name>PRIuFAST32</name><literal type="string">" bytes"</literal></expr></argument>, <argument><expr><name>version</name></expr></argument>, <argument><expr><name>revision</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>size</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>uint_fast32_t</name></type> <name>SkipAPETag</name><parameter_list>(<parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>peek</name></decl>;</decl_stmt>


<if_stmt><if>if <condition>(<expr><call><name>vlc_stream_Peek</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>peek</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">32</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>memcmp</name><argument_list>(<argument><expr><name>peek</name></expr></argument>, <argument><expr><literal type="string">"APETAGEX"</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>uint_fast32_t</name></type> <name>version</name> <init>= <expr><call><name>GetDWLE</name><argument_list>(<argument><expr><name>peek</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>version</name> <operator>!=</operator> <literal type="number">1000</literal> <operator>&amp;&amp;</operator> <name>version</name> <operator>!=</operator> <literal type="number">2000</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>uint_fast32_t</name></type> <name>size</name> <init>= <expr><call><name>GetDWLE</name><argument_list>(<argument><expr><name>peek</name> <operator>+</operator> <literal type="number">12</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>size</name> <operator>&gt;</operator> <name>SSIZE_MAX</name> <operator>-</operator> <literal type="number">32u</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt> 

<decl_stmt><decl><type><name>uint_fast32_t</name></type> <name>flags</name> <init>= <expr><call><name>GetDWLE</name><argument_list>(<argument><expr><name>peek</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>flags</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">29</literal><operator>)</operator><operator>)</operator> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">30</literal><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>size</name> <operator>+=</operator> <literal type="number">32</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><literal type="string">"AP2 v%"</literal><name>PRIuFAST32</name><literal type="string">" tag found, "</literal>
<literal type="string">"skipping %"</literal><name>PRIuFAST32</name><literal type="string">" bytes"</literal></expr></argument>, <argument><expr><name>version</name> <operator>/</operator> <literal type="number">1000</literal></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>size</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>SkipTag</name><parameter_list>(<parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><function_decl><type><name>uint_fast32_t</name></type> (<modifier>*</modifier><name>skipper</name>)<parameter_list>(<parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>,
<parameter><decl><type><name>block_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_block</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>pi_tags_count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint_fast64_t</name></type> <name>offset</name> <init>= <expr><call><name>vlc_stream_Tell</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint_fast32_t</name></type> <name>size</name> <init>= <expr><call><name>skipper</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><name>size</name><operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition>
<block>{<block_content>

<decl_stmt><decl><type><name>ssize_t</name></type> <name>read</name></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><operator>*</operator><name>pi_tags_count</name> <operator>&lt;</operator> <name>MAX_TAGS</name> <operator>&amp;&amp;</operator> <name>size</name> <operator>&lt;=</operator> <name>MAX_TAG_SIZE</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>pp_block</name> <operator>=</operator> <call><name>vlc_stream_Block</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>read</name> <operator>=</operator> <ternary><condition><expr><operator>*</operator><name>pp_block</name></expr> ?</condition><then> <expr><operator>(</operator><name>ssize_t</name><operator>)</operator><name><operator>(</operator><operator>*</operator><name>pp_block</name><operator>)</operator><operator>-&gt;</operator><name>i_buffer</name></name></expr> </then><else>: <expr><operator>-</operator><literal type="number">1</literal></expr></else></ternary></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else
<block>{<block_content>
<expr_stmt><expr><name>read</name> <operator>=</operator> <call><name>vlc_stream_Read</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if<condition>(<expr><name>read</name> <operator>&lt;</operator> <operator>(</operator><name>ssize_t</name><operator>)</operator><name>size</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>block_ChainRelease</name><argument_list>(<argument><expr><operator>*</operator><name>pp_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>pp_block</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>read</name> <operator>&lt;</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>)</condition>
<block>{<block_content> 
<if_stmt><if>if <condition>(<expr><call><name>vlc_stream_Seek</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>offset</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><literal type="string">"seek failure"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<else>else<block type="pseudo"><block_content> <expr_stmt><expr><operator>(</operator><operator>*</operator><name>pi_tags_count</name><operator>)</operator><operator>++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>size</name> <operator>!=</operator> <literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>ssize_t</name></type> <name>Read</name><parameter_list>(<parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>stream</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>buflen</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>vlc_stream_Read</name><argument_list>(<argument><expr><name><name>stream</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><name>buflen</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Seek</name><parameter_list>(<parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>stream</name></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type> <name>offset</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>skiptags_sys_t</name></name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>stream</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name>offset</name> <operator>+</operator> <name><name>sys</name><operator>-&gt;</operator><name>header_skip</name></name> <operator>&lt;</operator> <name>offset</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>
<return>return <expr><call><name>vlc_stream_Seek</name><argument_list>(<argument><expr><name><name>stream</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>header_skip</name></name> <operator>+</operator> <name>offset</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Control</name><parameter_list>(<parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>stream</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>query</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>args</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>skiptags_sys_t</name></name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>stream</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>




<switch>switch <condition>(<expr><name>query</name></expr>)</condition>
<block>{<block_content>
<case>case <expr><name>STREAM_GET_TAGS</name></expr>:</case>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>p_tags</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>
<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>block_t</name> <operator>*</operator><operator>*</operator></expr></argument>)</argument_list></call> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>p_tags</name></name></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<case>case <expr><name>STREAM_GET_SIZE</name></expr>:</case>
<block>{<block_content>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><call><name>vlc_stream_GetSize</name><argument_list>(<argument><expr><name><name>stream</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>==</operator> <name>VLC_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr><name>uint64_t</name> <operator>*</operator></expr></argument>)</argument_list></call> <operator>=</operator> <name>size</name> <operator>-</operator> <name><name>sys</name><operator>-&gt;</operator><name>header_skip</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block>
</block_content>}</block></switch>

<return>return <expr><call><name>vlc_stream_vaControl</name><argument_list>(<argument><expr><name><name>stream</name><operator>-&gt;</operator><name>s</name></name></expr></argument>, <argument><expr><name>query</name></expr></argument>, <argument><expr><name>args</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Open</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>stream</name> <init>= <expr><operator>(</operator><name>stream_t</name> <operator>*</operator><operator>)</operator><name>obj</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><name><name>stream</name><operator>-&gt;</operator><name>s</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>skiptags_sys_t</name></name> <modifier>*</modifier></type><name>sys</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_tags</name> <init>= <expr><name>NULL</name></expr></init></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>p_tag</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>i_tagscount</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<while>while <condition>(<expr><call><name>SkipTag</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>SkipID3Tag</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>p_tag</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_tagscount</name></expr></argument>)</argument_list></call><operator>||</operator>
<call><name>SkipTag</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>SkipAPETag</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>p_tag</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>i_tagscount</name></expr></argument>)</argument_list></call></expr>)</condition>
<block>{<block_content>
<if_stmt><if>if<condition>(<expr><name>p_tag</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>p_tag</name><operator>-&gt;</operator><name>p_next</name></name> <operator>=</operator> <name>p_tags</name></expr>;</expr_stmt>
<expr_stmt><expr><name>p_tags</name> <operator>=</operator> <name>p_tag</name></expr>;</expr_stmt>
<expr_stmt><expr><name>p_tag</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></while>

<decl_stmt><decl><type><name>uint_fast64_t</name></type> <name>offset</name> <init>= <expr><call><name>vlc_stream_Tell</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>offset</name> <operator>==</operator> <literal type="number">0</literal> <operator>||</operator> <operator>!</operator><operator>(</operator><name>sys</name> <operator>=</operator> <call><name>skiptags_sys_New</name><argument_list>()</argument_list></call><operator>)</operator></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>block_ChainRelease</name><argument_list>( <argument><expr><name>p_tags</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return> 
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>header_skip</name></name> <operator>=</operator> <name>offset</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>p_tags</name></name> <operator>=</operator> <name>p_tags</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>stream</name><operator>-&gt;</operator><name>p_sys</name></name> <operator>=</operator> <name>sys</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>stream</name><operator>-&gt;</operator><name>pf_read</name></name> <operator>=</operator> <name>Read</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>stream</name><operator>-&gt;</operator><name>pf_seek</name></name> <operator>=</operator> <name>Seek</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>stream</name><operator>-&gt;</operator><name>pf_control</name></name> <operator>=</operator> <name>Control</name></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>stream</name> <init>= <expr><operator>(</operator><name>stream_t</name> <operator>*</operator><operator>)</operator><name>obj</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>skiptags_sys_t</name></name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><operator>(</operator>struct <name>skiptags_sys_t</name> <operator>*</operator><operator>)</operator> <name><name>stream</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>skiptags_sys_Delete</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<macro><name>vlc_module_begin</name><argument_list>()</argument_list></macro>
<macro><name>set_category</name><argument_list>(<argument>CAT_INPUT</argument>)</argument_list></macro>
<macro><name>set_subcategory</name><argument_list>(<argument>SUBCAT_INPUT_STREAM_FILTER</argument>)</argument_list></macro>
<macro><name>set_capability</name><argument_list>(<argument><literal type="string">"stream_filter"</literal></argument>, <argument><literal type="number">330</literal></argument>)</argument_list></macro>

<macro><name>set_description</name><argument_list>(<argument>N_(<literal type="string">"APE/ID3 tags-skipping filter"</literal>)</argument>)</argument_list></macro>
<macro><name>set_callbacks</name><argument_list>(<argument>Open</argument>, <argument>Close</argument>)</argument_list></macro>
<macro><name>vlc_module_end</name><argument_list>()</argument_list></macro>
</unit>
