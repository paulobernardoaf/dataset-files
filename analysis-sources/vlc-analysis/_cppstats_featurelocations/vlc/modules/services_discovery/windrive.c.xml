<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\services_discovery\windrive.c">





















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;config.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_services_discovery.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Open</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<macro><name>VLC_SD_PROBE_HELPER</name><argument_list>(<argument><literal type="string">"disc"</literal></argument>, <argument>N_(<literal type="string">"Discs"</literal>)</argument>, <argument>SD_CAT_DEVICES</argument>)</argument_list></macro>




<macro><name>vlc_module_begin</name> <argument_list>()</argument_list></macro>
<macro><name>add_submodule</name> <argument_list>()</argument_list></macro>
<macro><name>set_shortname</name> <argument_list>(<argument>N_(<literal type="string">"Discs"</literal>)</argument>)</argument_list></macro>
<macro><name>set_description</name> <argument_list>(<argument>N_(<literal type="string">"Discs"</literal>)</argument>)</argument_list></macro>
<macro><name>set_category</name> <argument_list>(<argument>CAT_PLAYLIST</argument>)</argument_list></macro>
<macro><name>set_subcategory</name> <argument_list>(<argument>SUBCAT_PLAYLIST_SD</argument>)</argument_list></macro>
<macro><name>set_capability</name> <argument_list>(<argument><literal type="string">"services_discovery"</literal></argument>, <argument><literal type="number">0</literal></argument>)</argument_list></macro>
<macro><name>set_callback</name><argument_list>(<argument>Open</argument>)</argument_list></macro>
<macro><name>add_shortcut</name> <argument_list>(<argument><literal type="string">"disc"</literal></argument>)</argument_list></macro>

<expr_stmt><expr><name>VLC_SD_PROBE_SUBMODULE</name>

<macro><name>vlc_module_end</name> <argument_list>()</argument_list></macro>




<specifier>static</specifier> <name>int</name> <macro><name>Open</name> <argument_list>(<argument>vlc_object_t *obj</argument>)</argument_list></macro>
<block>{
<expr><name>services_discovery_t</name> <operator>*</operator><name>sd</name> <operator>=</operator> <operator>(</operator><name>services_discovery_t</name> <operator>*</operator><operator>)</operator><name>obj</name></expr>;

<expr><name><name>sd</name><operator>-&gt;</operator><name>description</name></name> <operator>=</operator> <call><name>_</name><argument_list>(<argument><expr><literal type="string">"Discs"</literal></expr></argument>)</argument_list></call></expr>;

<expr><name>LONG</name> <name>drives</name> <operator>=</operator> <call><name>GetLogicalDrives</name> <argument_list>()</argument_list></call></expr>;
<expr><name>char</name> <name><name>mrl</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <operator>=</operator> <literal type="string">"file:///A:/"</literal></expr>, <expr><name><name>name</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <literal type="string">"A:"</literal></expr>;
<expr><name>WCHAR</name> <name><name>path</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <call><name>TEXT</name><argument_list>(<argument><expr><literal type="string">"A:\\"</literal></expr></argument>)</argument_list></call></expr>;

<for>for <control>(<init><decl><type><name>char</name></type> <name>d</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>d</name> <operator>&lt;</operator> <literal type="number">26</literal></expr>;</condition> <incr><expr><name>d</name><operator>++</operator></expr></incr>)</control>
<block>{<block_content>
<decl_stmt><decl><type><name>input_item_t</name> <modifier>*</modifier></type><name>item</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>WCHAR</name></type> <name>letter</name> <init>= <expr><literal type="char">'A'</literal> <operator>+</operator> <name>d</name></expr></init></decl>;</decl_stmt>


<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>drives</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <name>d</name><operator>)</operator><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>path</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>letter</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>GetDriveType</name> <argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>DRIVE_CDROM</name></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>mrl</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <operator>=</operator> <name><name>name</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>letter</name></expr>;</expr_stmt>
<expr_stmt><expr><name>item</name> <operator>=</operator> <call><name>input_item_NewDisc</name> <argument_list>(<argument><expr><name>mrl</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>INPUT_DURATION_INDEFINITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>msg_Dbg</name> <argument_list>(<argument><expr><name>sd</name></expr></argument>, <argument><expr><literal type="string">"adding %s (%s)"</literal></expr></argument>, <argument><expr><name>mrl</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>item</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>services_discovery_AddItem</name><argument_list>(<argument><expr><name>sd</name></expr></argument>, <argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt/></block_content></block></for>}</block></expr></expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
}
</unit>
