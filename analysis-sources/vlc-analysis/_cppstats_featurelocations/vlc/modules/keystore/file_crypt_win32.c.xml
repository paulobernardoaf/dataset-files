<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\keystore\file_crypt_win32.c">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_keystore.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"file_crypt.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;windows.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dpapi.h&gt;</cpp:file></cpp:include>

<typedef>typedef <function_decl><type><name>BOOL</name></type> (<name>WINAPI</name> <modifier>*</modifier><name>ProcessFunc</name>)<parameter_list>(<parameter><decl><type><name>DATA_BLOB</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>LPCWSTR</name></type></decl></parameter>, <parameter><decl><type><name>DATA_BLOB</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>PVOID</name></type></decl></parameter>,
<parameter><decl><type><name>CRYPTPROTECT_PROMPTSTRUCT</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>DWORD</name></type></decl></parameter>, <parameter><decl><type><name>DATA_BLOB</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function><type><specifier>static</specifier> <name>size_t</name></type> <name>Process</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_src</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>i_src_len</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_dst</name></decl></parameter>, <parameter><decl><type><name>ProcessFunc</name></type> <name>pf_process</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>DATA_BLOB</name></type> <name>input_blob</name> <init>=
<expr><block>{
<expr><operator>.</operator><name>cbData</name> <operator>=</operator> <name>i_src_len</name></expr>,
<expr><operator>.</operator><name>pbData</name> <operator>=</operator> <operator>(</operator><name>BYTE</name><operator>*</operator><operator>)</operator><name>p_src</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>DATA_BLOB</name></type> <name>output_blob</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>pf_process</name><argument_list>( <argument><expr><operator>&amp;</operator><name>input_blob</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>CRYPTPROTECT_UI_FORBIDDEN</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>output_blob</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>FALSE</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><operator>*</operator><name>pp_dst</name> <operator>=</operator> <call><name>malloc</name><argument_list>(<argument><expr><name><name>output_blob</name><operator>.</operator><name>cbData</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><call><name>unlikely</name><argument_list>( <argument><expr><operator>*</operator><name>pp_dst</name> <operator>==</operator> <name>NULL</name></expr></argument> )</argument_list></call></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>LocalFree</name><argument_list>( <argument><expr><name><name>output_blob</name><operator>.</operator><name>pbData</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>memcpy</name><argument_list>( <argument><expr><operator>*</operator><name>pp_dst</name></expr></argument>, <argument><expr><name><name>output_blob</name><operator>.</operator><name>pbData</name></name></expr></argument>, <argument><expr><name><name>output_blob</name><operator>.</operator><name>cbData</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LocalFree</name><argument_list>( <argument><expr><name><name>output_blob</name><operator>.</operator><name>pbData</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name><name>output_blob</name><operator>.</operator><name>cbData</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>size_t</name></type> <name>Decrypt</name><parameter_list>( <parameter><decl><type><name>vlc_keystore</name> <modifier>*</modifier></type><name>p_keystore</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_src</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>i_src_len</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type> <name>pp_dst</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>( <argument><expr><name>p_keystore</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>( <argument><expr><name>p_ctx</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>



<return>return <expr><call><name>Process</name><argument_list>( <argument><expr><name>p_src</name></expr></argument>, <argument><expr><name>i_src_len</name></expr></argument>, <argument><expr><name>pp_dst</name></expr></argument>, <argument><expr><operator>(</operator><name>ProcessFunc</name><operator>)</operator><operator>&amp;</operator><name>CryptUnprotectData</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>size_t</name></type> <name>Encrypt</name><parameter_list>( <parameter><decl><type><name>vlc_keystore</name> <modifier>*</modifier></type><name>p_keystore</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_src</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>i_src_len</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type> <name>pp_dst</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>( <argument><expr><name>p_keystore</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>( <argument><expr><name>p_ctx</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>Process</name><argument_list>( <argument><expr><name>p_src</name></expr></argument>, <argument><expr><name>i_src_len</name></expr></argument>, <argument><expr><name>pp_dst</name></expr></argument>, <argument><expr><name>CryptProtectData</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>CryptInit</name><parameter_list>(<parameter><decl><type><name>vlc_keystore</name> <modifier>*</modifier></type><name>p_keystore</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>crypt</name></name> <modifier>*</modifier></type><name>p_crypt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>( <argument><expr><name>p_keystore</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_crypt</name><operator>-&gt;</operator><name>pf_decrypt</name></name> <operator>=</operator> <name>Decrypt</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_crypt</name><operator>-&gt;</operator><name>pf_encrypt</name></name> <operator>=</operator> <name>Encrypt</name></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>
</unit>
