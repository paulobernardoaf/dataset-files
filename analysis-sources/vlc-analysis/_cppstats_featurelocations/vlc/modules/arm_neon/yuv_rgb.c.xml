<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\arm_neon\yuv_rgb.c">




















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_filter.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_picture.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_cpu.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"arm_neon/chroma_neon.h"</cpp:file></cpp:include>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Open</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<macro><name>vlc_module_begin</name> <argument_list>()</argument_list></macro>
<macro><name>set_description</name> <argument_list>(<argument>N_(<literal type="string">"ARM NEON video chroma YUV-&gt;RGBA"</literal>)</argument>)</argument_list></macro>
<macro><name>set_capability</name> <argument_list>(<argument><literal type="string">"video converter"</literal></argument>, <argument><literal type="number">250</literal></argument>)</argument_list></macro>
<macro><name>set_callback</name><argument_list>(<argument>Open</argument>)</argument_list></macro>
<macro><name>vlc_module_end</name> <argument_list>()</argument_list></macro>





















































<function><type><specifier>static</specifier> <name>void</name></type> <name>I420_RGBA</name> <parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>yuv_pack</name></name></type> <name>out</name> <init>= <expr><block>{ <expr><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>p_pixels</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>yuv_planes</name></name></type> <name>in</name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>i420_rgb_neon</name> <argument_list>(<argument><expr><operator>&amp;</operator><name>out</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>in</name></expr></argument>, <argument><expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_visible_width</name></name></expr></argument>, <argument><expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_visible_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>I420_RV16</name> <parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>yuv_pack</name></name></type> <name>out</name> <init>= <expr><block>{ <expr><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>p_pixels</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>yuv_planes</name></name></type> <name>in</name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>i420_rv16_neon</name> <argument_list>(<argument><expr><operator>&amp;</operator><name>out</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>in</name></expr></argument>, <argument><expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_visible_width</name></name></expr></argument>, <argument><expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_visible_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>YV12_RGBA</name> <parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>yuv_pack</name></name></type> <name>out</name> <init>= <expr><block>{ <expr><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>p_pixels</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>yuv_planes</name></name></type> <name>in</name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>i420_rgb_neon</name> <argument_list>(<argument><expr><operator>&amp;</operator><name>out</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>in</name></expr></argument>, <argument><expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_visible_width</name></name></expr></argument>, <argument><expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_visible_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>NV21_RGBA</name> <parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>yuv_pack</name></name></type> <name>out</name> <init>= <expr><block>{ <expr><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>p_pixels</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>yuv_planes</name></name></type> <name>in</name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>nv21_rgb_neon</name> <argument_list>(<argument><expr><operator>&amp;</operator><name>out</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>in</name></expr></argument>, <argument><expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_visible_width</name></name></expr></argument>, <argument><expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_visible_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>NV12_RGBA</name> <parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>yuv_pack</name></name></type> <name>out</name> <init>= <expr><block>{ <expr><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>p_pixels</name></name></expr>, <expr><name><name>dst</name><operator>-&gt;</operator><name>p</name><operator>-&gt;</operator><name>i_pitch</name></name></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>yuv_planes</name></name></type> <name>in</name> <init>= <expr><block>{ <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>U_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>V_PIXELS</name></name></expr>, <expr><name><name>src</name><operator>-&gt;</operator><name>Y_PITCH</name></name></expr> }</block></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>nv12_rgb_neon</name> <argument_list>(<argument><expr><operator>&amp;</operator><name>out</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>in</name></expr></argument>, <argument><expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_visible_width</name></name></expr></argument>, <argument><expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_visible_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<macro><name>VIDEO_FILTER_WRAPPER</name> <argument_list>(<argument>I420_RGBA</argument>)</argument_list></macro>
<macro><name>VIDEO_FILTER_WRAPPER</name> <argument_list>(<argument>I420_RV16</argument>)</argument_list></macro>
<macro><name>VIDEO_FILTER_WRAPPER</name> <argument_list>(<argument>YV12_RGBA</argument>)</argument_list></macro>
<macro><name>VIDEO_FILTER_WRAPPER</name> <argument_list>(<argument>NV21_RGBA</argument>)</argument_list></macro>
<macro><name>VIDEO_FILTER_WRAPPER</name> <argument_list>(<argument>NV12_RGBA</argument>)</argument_list></macro>

<function><type><specifier>static</specifier> <name>int</name></type> <name>Open</name> <parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><operator>(</operator><name>filter_t</name> <operator>*</operator><operator>)</operator><name>obj</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>vlc_CPU_ARM_NEON</name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><operator>(</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_width</name></name> <operator>|</operator> <name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_height</name></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator>
<operator>||</operator> <operator>(</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_width</name></name> <operator>!=</operator> <name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_width</name></name><operator>)</operator>
<operator>||</operator> <operator>(</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_height</name></name> <operator>!=</operator> <name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_height</name></name><operator>)</operator>
<operator>||</operator> <operator>(</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>orientation</name></name> <operator>!=</operator> <name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>orientation</name></name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<switch>switch <condition>(<expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr>)</condition>
<block>{<block_content>
<case>case <expr><name>VLC_CODEC_RGB16</name></expr>:</case>
<switch>switch <condition>(<expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr>)</condition>
<block>{<block_content>
<case>case <expr><name>VLC_CODEC_I420</name></expr>:</case>
<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>I420_RV16_Filter</name></expr>;</expr_stmt>
<break>break;</break>
<default>default:</default>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></switch>
<break>break;</break>

<case>case <expr><name>VLC_CODEC_RGB32</name></expr>:</case>
<if_stmt><if>if<condition>( <expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_rmask</name></name> <operator>!=</operator> <literal type="number">0x000000ff</literal>
<operator>||</operator> <name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_gmask</name></name> <operator>!=</operator> <literal type="number">0x0000ff00</literal>
<operator>||</operator> <name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_bmask</name></name> <operator>!=</operator> <literal type="number">0x00ff0000</literal></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<switch>switch <condition>(<expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr>)</condition>
<block>{<block_content>
<case>case <expr><name>VLC_CODEC_I420</name></expr>:</case>
<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>I420_RGBA_Filter</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>VLC_CODEC_YV12</name></expr>:</case>
<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>YV12_RGBA_Filter</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>VLC_CODEC_NV21</name></expr>:</case>
<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>NV21_RGBA_Filter</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>VLC_CODEC_NV12</name></expr>:</case>
<expr_stmt><expr><name><name>filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>NV12_RGBA_Filter</name></expr>;</expr_stmt>
<break>break;</break>
<default>default:</default>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></switch>
<break>break;</break>

<default>default:</default>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></switch>
















<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>filter</name></expr></argument>, <argument><expr><literal type="string">"%4.4s(%dx%d) to %4.4s(%dx%d)"</literal></expr></argument>,
<argument><expr><operator>(</operator><name>char</name><operator>*</operator><operator>)</operator><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr></argument>, <argument><expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_visible_width</name></name></expr></argument>, <argument><expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_visible_height</name></name></expr></argument>,
<argument><expr><operator>(</operator><name>char</name><operator>*</operator><operator>)</operator><operator>&amp;</operator><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr></argument>, <argument><expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_visible_width</name></name></expr></argument>, <argument><expr><name><name>filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_visible_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>
</unit>
