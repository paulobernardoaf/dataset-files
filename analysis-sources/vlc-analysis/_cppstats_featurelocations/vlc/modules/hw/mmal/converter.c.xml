<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\hw\mmal\converter.c">























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdatomic.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_codec.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_filter.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;interface/mmal/mmal.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;interface/mmal/util/mmal_util.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;interface/mmal/util/mmal_default_components.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mmal_picture.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"subpic.h"</cpp:file></cpp:include>

<typedef>typedef <type><enum>enum <name>filter_resizer_e</name> <block>{
<decl><name>FILTER_RESIZER_HVS</name></decl>,
<decl><name>FILTER_RESIZER_ISP</name></decl>,
<decl><name>FILTER_RESIZER_RESIZER</name></decl>,
}</block></enum></type> <name>filter_resizer_t</name>;</typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>NDEBUG</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_CONVERTER_TYPE_NAME</name></cpp:macro> <cpp:value>"mmal-hw-converter"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_CONVERTER_TYPE_TEXT</name></cpp:macro> <cpp:value>"Hardware used for MMAL conversions"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_CONVERTER_TYPE_LONGTEXT</name></cpp:macro> <cpp:value>"Hardware component used for MMAL conversions. Hardware Video Scaler"" (default) gives the best result and allows blending, Resizer is slower but uses less memory."
</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>pi_converter_modes</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>FILTER_RESIZER_HVS</name></expr>, <expr><name>FILTER_RESIZER_ISP</name></expr>, <expr><name>FILTER_RESIZER_RESIZER</name></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>ppsz_converter_text</name><index>[]</index></name> <init>= <expr><block>{
<expr><literal type="string">"Hardware Video Scaler"</literal></expr>, <expr><literal type="string">"ISP"</literal></expr>, <expr><literal type="string">"Resizer"</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<function_decl><type><name>int</name></type> <name>OpenConverter</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>CloseConverter</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<macro><name>vlc_module_begin</name><argument_list>()</argument_list></macro>
<macro><name>add_submodule</name><argument_list>()</argument_list></macro>
<macro><name>set_category</name><argument_list>( <argument>CAT_VIDEO</argument> )</argument_list></macro>
<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_VIDEO_VFILTER</argument> )</argument_list></macro>
<macro><name>set_shortname</name><argument_list>(<argument>N_(<literal type="string">"MMAL resizer"</literal>)</argument>)</argument_list></macro>
<macro><name>set_description</name><argument_list>(<argument>N_(<literal type="string">"MMAL resizing conversion filter"</literal>)</argument>)</argument_list></macro>
<macro><name>add_shortcut</name><argument_list>(<argument><literal type="string">"mmal_converter"</literal></argument>)</argument_list></macro>
<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"video converter"</literal></argument>, <argument><literal type="number">900</literal></argument> )</argument_list></macro>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>NDEBUG</name></expr></argument>)</argument_list></call></expr></cpp:if>
<macro><name>add_integer</name><argument_list>( <argument>MMAL_CONVERTER_TYPE_NAME</argument>, <argument>FILTER_RESIZER_HVS</argument>, <argument>MMAL_CONVERTER_TYPE_TEXT</argument>, <argument>MMAL_CONVERTER_TYPE_LONGTEXT</argument>, <argument>true</argument> )</argument_list></macro>
<macro><name>change_integer_list</name><argument_list>( <argument>pi_converter_modes</argument>, <argument>ppsz_converter_text</argument> )</argument_list></macro>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<macro><name>set_callbacks</name><argument_list>(<argument>OpenConverter</argument>, <argument>CloseConverter</argument>)</argument_list></macro>
<macro><name>vlc_module_end</name><argument_list>()</argument_list></macro>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_SLICE_HEIGHT</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CONV_MAX_LATENCY</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 

<function><type><specifier>static</specifier> <name>MMAL_FOURCC_T</name></type> <name>pic_to_slice_mmal_fourcc</name><parameter_list>(<parameter><decl><type><name>MMAL_FOURCC_T</name></type> <name>fcc</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<switch>switch <condition>(<expr><name>fcc</name></expr>)</condition><block>{<block_content>
<case>case <expr><name>MMAL_ENCODING_I420</name></expr>:</case>
<return>return <expr><name>MMAL_ENCODING_I420_SLICE</name></expr>;</return>
<case>case <expr><name>MMAL_ENCODING_I422</name></expr>:</case>
<return>return <expr><name>MMAL_ENCODING_I422_SLICE</name></expr>;</return>
<case>case <expr><name>MMAL_ENCODING_ARGB</name></expr>:</case>
<return>return <expr><name>MMAL_ENCODING_ARGB_SLICE</name></expr>;</return>
<case>case <expr><name>MMAL_ENCODING_RGBA</name></expr>:</case>
<return>return <expr><name>MMAL_ENCODING_RGBA_SLICE</name></expr>;</return>
<case>case <expr><name>MMAL_ENCODING_ABGR</name></expr>:</case>
<return>return <expr><name>MMAL_ENCODING_ABGR_SLICE</name></expr>;</return>
<case>case <expr><name>MMAL_ENCODING_BGRA</name></expr>:</case>
<return>return <expr><name>MMAL_ENCODING_BGRA_SLICE</name></expr>;</return>
<case>case <expr><name>MMAL_ENCODING_RGB16</name></expr>:</case>
<return>return <expr><name>MMAL_ENCODING_RGB16_SLICE</name></expr>;</return>
<case>case <expr><name>MMAL_ENCODING_RGB24</name></expr>:</case>
<return>return <expr><name>MMAL_ENCODING_RGB24_SLICE</name></expr>;</return>
<case>case <expr><name>MMAL_ENCODING_RGB32</name></expr>:</case>
<return>return <expr><name>MMAL_ENCODING_RGB32_SLICE</name></expr>;</return>
<case>case <expr><name>MMAL_ENCODING_BGR16</name></expr>:</case>
<return>return <expr><name>MMAL_ENCODING_BGR16_SLICE</name></expr>;</return>
<case>case <expr><name>MMAL_ENCODING_BGR24</name></expr>:</case>
<return>return <expr><name>MMAL_ENCODING_BGR24_SLICE</name></expr>;</return>
<case>case <expr><name>MMAL_ENCODING_BGR32</name></expr>:</case>
<return>return <expr><name>MMAL_ENCODING_BGR32_SLICE</name></expr>;</return>
<default>default:</default>
<break>break;</break>
</block_content>}</block></switch>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<typedef>typedef <type><struct>struct <name>pic_fifo_s</name> <block>{
<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier></type> <name>head</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier></type> <name>tail</name></decl>;</decl_stmt>
}</block></struct></type> <name>pic_fifo_t</name>;</typedef>

<function><type><specifier>static</specifier> <name>picture_t</name> <modifier>*</modifier></type> <name>pic_fifo_get</name><parameter_list>(<parameter><decl><type><name>pic_fifo_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>pf</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>pic</name> <init>= <expr><name><name>pf</name><operator>-&gt;</operator><name>head</name></name></expr></init></decl>;</decl_stmt><empty_stmt>;</empty_stmt>
<if_stmt><if>if <condition>(<expr><name>pic</name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>pf</name><operator>-&gt;</operator><name>head</name></name> <operator>=</operator> <name><name>pic</name><operator>-&gt;</operator><name>p_next</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>pic</name><operator>-&gt;</operator><name>p_next</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>pic</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>pic_fifo_release_all</name><parameter_list>(<parameter><decl><type><name>pic_fifo_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>pf</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier></type> <name>pic</name></decl>;</decl_stmt>
<while>while <condition>(<expr><operator>(</operator><name>pic</name> <operator>=</operator> <call><name>pic_fifo_get</name><argument_list>(<argument><expr><name>pf</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>picture_Release</name><argument_list>(<argument><expr><name>pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></while>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>pic_fifo_init</name><parameter_list>(<parameter><decl><type><name>pic_fifo_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>pf</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>pf</name><operator>-&gt;</operator><name>head</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>pf</name><operator>-&gt;</operator><name>tail</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt> 
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>pic_fifo_put</name><parameter_list>(<parameter><decl><type><name>pic_fifo_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>pf</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type> <name>pic</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>pic</name><operator>-&gt;</operator><name>p_next</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>pf</name><operator>-&gt;</operator><name>head</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>pf</name><operator>-&gt;</operator><name>head</name></name> <operator>=</operator> <name>pic</name></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name><name>pf</name><operator>-&gt;</operator><name>tail</name><operator>-&gt;</operator><name>p_next</name></name> <operator>=</operator> <name>pic</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
<expr_stmt><expr><name><name>pf</name><operator>-&gt;</operator><name>tail</name></name> <operator>=</operator> <name>pic</name></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBS_MAX</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>conv_frame_stash_s</name>
<block>{
<decl_stmt><decl><type><name>mtime_t</name></type> <name>pts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type> <name><name>sub_bufs</name><index>[<expr><name>SUBS_MAX</name></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>conv_frame_stash_t</name>;</typedef>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>filter_resizer_t</name></type> <name>resizer_type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_COMPONENT_T</name> <modifier>*</modifier></type><name>component</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_PORT_T</name> <modifier>*</modifier></type><name>input</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_PORT_T</name> <modifier>*</modifier></type><name>output</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_POOL_T</name> <modifier>*</modifier></type><name>out_pool</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>MMAL_POOL_T</name> <modifier>*</modifier></type><name>in_pool</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>cma_buf_pool_t</name> <modifier>*</modifier></type> <name>cma_in_pool</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>cma_buf_pool_t</name> <modifier>*</modifier></type> <name>cma_out_pool</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>subpic_reg_stash_t</name></type> <name><name>subs</name><index>[<expr><name>SUBS_MAX</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>pic_fifo_t</name></type> <name>ret_pics</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>pic_n</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_sem_t</name></type> <name>sem</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>lock</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>err_stream</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>needs_copy_in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>is_sliced</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>out_fmt_set</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_PORT_BH_CB_T</name></type> <name>in_port_cb_fn</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_PORT_BH_CB_T</name></type> <name>out_port_cb_fn</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>frame_seq</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>conv_frame_stash_t</name></type> <name><name>stash</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>


<struct>struct <block>{
<decl_stmt><decl><type><name>pic_fifo_t</name></type> <name>pics</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>line</name></decl>;</decl_stmt> 
}</block> <decl><name>slice</name></decl>;</struct>

<decl_stmt><decl><type><name>vlc_decoder_device</name> <modifier>*</modifier></type><name>dec_dev</name></decl>;</decl_stmt>
}</block></struct></type> <name>converter_sys_t</name>;</typedef>


<function><type><specifier>static</specifier> <name>void</name></type> <name>cma_buf_pool_deletez</name><parameter_list>(<parameter><decl><type><name>cma_buf_pool_t</name> <modifier>*</modifier><modifier>*</modifier> <specifier>const</specifier></type> <name>pp</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>cma_buf_pool_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>p</name> <init>= <expr><operator>*</operator><name>pp</name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>p</name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>pp</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>cma_buf_pool_delete</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>MMAL_STATUS_T</name></type> <name>pic_to_format</name><parameter_list>(<parameter><decl><type><name>MMAL_ES_FORMAT_T</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>es_fmt</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>picture_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>pic</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>bpp</name> <init>= <expr><operator>(</operator><name><name>pic</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_bits_per_pixel</name></name> <operator>+</operator> <literal type="number">7</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_VIDEO_FORMAT_T</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>v_fmt</name> <init>= <expr><operator>&amp;</operator><name><name>es_fmt</name><operator>-&gt;</operator><name>es</name><operator>-&gt;</operator><name>video</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>es_fmt</name><operator>-&gt;</operator><name>type</name></name> <operator>=</operator> <name>MMAL_ES_TYPE_VIDEO</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>es_fmt</name><operator>-&gt;</operator><name>encoding</name></name> <operator>=</operator> <call><name>vlc_to_mmal_video_fourcc</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>pic</name><operator>-&gt;</operator><name>format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>es_fmt</name><operator>-&gt;</operator><name>encoding_variant</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>


<expr_stmt><expr><call><name>hw_mmal_vlc_fmt_to_mmal_fmt</name><argument_list>(<argument><expr><name>es_fmt</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>pic</name><operator>-&gt;</operator><name>format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>bpp</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>v_fmt</name><operator>-&gt;</operator><name>width</name></name> <operator>=</operator> <name><name>pic</name><operator>-&gt;</operator><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>i_pitch</name> <operator>/</operator> <name>bpp</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>v_fmt</name><operator>-&gt;</operator><name>height</name></name> <operator>=</operator> <name><name>pic</name><operator>-&gt;</operator><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>i_lines</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>MMAL_SUCCESS</name></expr>;</return>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>MMAL_STATUS_T</name></type> <name>conv_enable_in</name><parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>p_filter</name></decl></parameter>, <parameter><decl><type><name>converter_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>err</name> <init>= <expr><name>MMAL_SUCCESS</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>is_enabled</name></name> <operator>&amp;&amp;</operator>
<operator>(</operator><name>err</name> <operator>=</operator> <call><name>mmal_port_enable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>in_port_cb_fn</name></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Failed to enable input port %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>err</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>err</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>MMAL_STATUS_T</name></type> <name>conv_enable_out</name><parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>p_filter</name></decl></parameter>, <parameter><decl><type><name>converter_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>err</name> <init>= <expr><name>MMAL_SUCCESS</name></expr></init></decl>;</decl_stmt>

<block>{<block_content>
<expr_stmt><expr><call><name>cma_buf_pool_deletez</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>cma_out_pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>is_enabled</name></name> <operator>&amp;&amp;</operator>
<operator>(</operator><name>err</name> <operator>=</operator> <call><name>mmal_port_enable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>out_port_cb_fn</name></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Failed to enable output port %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>err</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>err</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>conv_control_port_cb</name><parameter_list>(<parameter><decl><type><name>MMAL_PORT_T</name> <modifier>*</modifier></type><name>port</name></decl></parameter>, <parameter><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>filter_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>p_filter</name> <init>= <expr><operator>(</operator><name>filter_t</name> <operator>*</operator><operator>)</operator><name><name>port</name><operator>-&gt;</operator><name>userdata</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>buffer</name><operator>-&gt;</operator><name>cmd</name></name> <operator>==</operator> <name>MMAL_EVENT_ERROR</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>status</name> <init>= <expr><operator>*</operator><operator>(</operator><name>uint32_t</name> <operator>*</operator><operator>)</operator><name><name>buffer</name><operator>-&gt;</operator><name>data</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>converter_sys_t</name> <modifier>*</modifier></type> <name>sys</name> <init>= <expr><name><name>p_filter</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>err_stream</name></name> <operator>=</operator> <name>status</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"MMAL error %"</literal><name>PRIx32</name><literal type="string">" \"%s\""</literal></expr></argument>, <argument><expr><name>status</name></expr></argument>,
<argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>conv_input_port_cb</name><parameter_list>(<parameter><decl><type><name>MMAL_PORT_T</name> <modifier>*</modifier></type><name>port</name></decl></parameter>, <parameter><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>conv_out_q_pic</name><parameter_list>(<parameter><decl><type><name>converter_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>pic</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>pic</name><operator>-&gt;</operator><name>p_next</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pic_fifo_put</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>ret_pics</name></name></expr></argument>, <argument><expr><name>pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_sem_post</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>sem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>conv_output_port_cb</name><parameter_list>(<parameter><decl><type><name>MMAL_PORT_T</name> <modifier>*</modifier></type><name>port</name></decl></parameter>, <parameter><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>filter_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>p_filter</name> <init>= <expr><operator>(</operator><name>filter_t</name> <operator>*</operator><operator>)</operator><name><name>port</name><operator>-&gt;</operator><name>userdata</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>converter_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name> <init>= <expr><name><name>p_filter</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>buf</name><operator>-&gt;</operator><name>cmd</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>pic</name> <init>= <expr><operator>(</operator><name>picture_t</name> <operator>*</operator><operator>)</operator><name><name>buf</name><operator>-&gt;</operator><name>user_data</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>pic</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Buffer has no attached picture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>buf</name><operator>-&gt;</operator><name>data</name></name> <operator>!=</operator> <name>NULL</name> <operator>&amp;&amp;</operator> <name><name>buf</name><operator>-&gt;</operator><name>length</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>buf_to_pic_copy_props</name><argument_list>(<argument><expr><name>pic</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>buf</name><operator>-&gt;</operator><name>user_data</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>conv_out_q_pic</name><argument_list>(<argument><expr><name>sys</name></expr></argument>, <argument><expr><name>pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>void</name></type> <name>slice_output_port_cb</name><parameter_list>(<parameter><decl><type><name>MMAL_PORT_T</name> <modifier>*</modifier></type><name>port</name></decl></parameter>, <parameter><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>filter_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>p_filter</name> <init>= <expr><operator>(</operator><name>filter_t</name> <operator>*</operator><operator>)</operator><name><name>port</name><operator>-&gt;</operator><name>userdata</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>converter_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name> <init>= <expr><name><name>p_filter</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>buf</name><operator>-&gt;</operator><name>cmd</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>buf</name><operator>-&gt;</operator><name>data</name></name> <operator>!=</operator> <name>NULL</name> <operator>&amp;&amp;</operator> <name><name>buf</name><operator>-&gt;</operator><name>length</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition>
<block>{<block_content>

<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>pic</name> <init>= <expr><name><name>sys</name><operator>-&gt;</operator><name>slice</name><operator>.</operator><name>pics</name><operator>.</operator><name>head</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name> <name>int</name></type> <name>scale_lines</name> <init>= <expr><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>format</name><operator>-&gt;</operator><name>es</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>height</name></name></expr></init></decl>;</decl_stmt> 

<if_stmt><if>if <condition>(<expr><name>pic</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"No output picture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>



<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name> <name>int</name></type> <name>scale_n</name> <init>= <expr><call><name>__MIN</name><argument_list>(<argument><expr><name>scale_lines</name> <operator>-</operator> <name><name>sys</name><operator>-&gt;</operator><name>slice</name><operator>.</operator><name>line</name></name></expr></argument>, <argument><expr><name>MMAL_SLICE_HEIGHT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name> <name>int</name></type> <name>pic_lines</name> <init>= <expr><name><name>pic</name><operator>-&gt;</operator><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>i_lines</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name> <name>int</name></type> <name>copy_n</name> <init>= <expr><ternary><condition><expr><name><name>sys</name><operator>-&gt;</operator><name>slice</name><operator>.</operator><name>line</name></name> <operator>+</operator> <name>scale_n</name> <operator>&lt;=</operator> <name>pic_lines</name></expr> ?</condition><then> <expr><name>scale_n</name></expr> </then><else>:
<expr><ternary><condition><expr><name><name>sys</name><operator>-&gt;</operator><name>slice</name><operator>.</operator><name>line</name></name> <operator>&gt;=</operator> <name>pic_lines</name></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>:
<expr><name>pic_lines</name> <operator>-</operator> <name><name>sys</name><operator>-&gt;</operator><name>slice</name><operator>.</operator><name>line</name></name></expr></else></ternary></expr></else></ternary></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name> <name>int</name></type> <name>src_stride</name> <init>= <expr><name><name>buf</name><operator>-&gt;</operator><name>type</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>pitch</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name> <name>int</name></type> <name>dst_stride</name> <init>= <expr><name><name>pic</name><operator>-&gt;</operator><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>i_pitch</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name> <init>= <expr><name><name>pic</name><operator>-&gt;</operator><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>p_pixels</name> <operator>+</operator> <name><name>sys</name><operator>-&gt;</operator><name>slice</name><operator>.</operator><name>line</name></name> <operator>*</operator> <name>dst_stride</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name> <init>= <expr><name><name>buf</name><operator>-&gt;</operator><name>data</name></name> <operator>+</operator> <name><name>buf</name><operator>-&gt;</operator><name>type</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>offset</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>src_stride</name> <operator>==</operator> <name>dst_stride</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>copy_n</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name> <operator>*</operator> <name>copy_n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i</name></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>!=</operator> <name>copy_n</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><call><name>__MIN</name><argument_list>(<argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>slice</name><operator>.</operator><name>line</name></name> <operator>+=</operator> <name>scale_n</name></expr>;</expr_stmt>
</block_content>}</block>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>buf</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>MMAL_BUFFER_HEADER_FLAG_FRAME_END</name><operator>)</operator> <operator>!=</operator> <literal type="number">0</literal> <operator>||</operator> <name><name>sys</name><operator>-&gt;</operator><name>slice</name><operator>.</operator><name>line</name></name> <operator>&gt;=</operator> <name>scale_lines</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>buf</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>MMAL_BUFFER_HEADER_FLAG_FRAME_END</name><operator>)</operator> <operator>==</operator> <literal type="number">0</literal> <operator>||</operator> <name><name>sys</name><operator>-&gt;</operator><name>slice</name><operator>.</operator><name>line</name></name> <operator>!=</operator> <name>scale_lines</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Line count (%d/%d) &amp; EOF disagree (flags=%#x)"</literal></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>slice</name><operator>.</operator><name>line</name></name></expr></argument>, <argument><expr><name>scale_lines</name></expr></argument>, <argument><expr><name><name>buf</name><operator>-&gt;</operator><name>flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>slice</name><operator>.</operator><name>line</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pic_fifo_get</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>slice</name><operator>.</operator><name>pics</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>buf_to_pic_copy_props</name><argument_list>(<argument><expr><name>pic</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>conv_out_q_pic</name><argument_list>(<argument><expr><name>sys</name></expr></argument>, <argument><expr><name>pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><name><name>buf</name><operator>-&gt;</operator><name>user_data</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>mmal_buffer_header_reset</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>mmal_port_send_buffer</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name></expr></argument>, <argument><expr><name>buf</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return;</return>

<label><name>fail</name>:</label>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>err_stream</name></name> <operator>=</operator> <name>MMAL_EIO</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_sem_post</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>sem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>void</name></type> <name>conv_flush</name><parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type> <name>p_filter</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>converter_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name> <init>= <expr><name><name>p_filter</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>resizer_type</name></name> <operator>==</operator> <name>FILTER_RESIZER_HVS</name></expr>)</condition>
<block>{<block_content>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>!=</operator> <name>SUBS_MAX</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>hw_mmal_subpic_flush</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>subs</name></name> <operator>+</operator> <name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name> <operator>!=</operator> <name>NULL</name> <operator>&amp;&amp;</operator> <name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>is_enabled</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mmal_port_disable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name> <operator>!=</operator> <name>NULL</name> <operator>&amp;&amp;</operator> <name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>is_enabled</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mmal_port_disable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>







<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>!=</operator> <call><name>ARRAY_SIZE</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>stash</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>conv_frame_stash_t</name> <modifier>*</modifier><specifier>const</specifier></type> <name>stash</name> <init>= <expr><name><name>sys</name><operator>-&gt;</operator><name>stash</name></name> <operator>+</operator> <name>i</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>sub_no</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>stash</name><operator>-&gt;</operator><name>pts</name></name> <operator>=</operator> <name>MMAL_TIME_UNKNOWN</name></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>sub_no</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>sub_no</name> <operator>!=</operator> <name>SUBS_MAX</name></expr>;</condition> <incr><expr><operator>++</operator><name>sub_no</name></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>stash</name><operator>-&gt;</operator><name>sub_bufs</name><index>[<expr><name>sub_no</name></expr>]</index></name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name><name>stash</name><operator>-&gt;</operator><name>sub_bufs</name><index>[<expr><name>sub_no</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>stash</name><operator>-&gt;</operator><name>sub_bufs</name><index>[<expr><name>sub_no</name></expr>]</index></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
</block_content>}</block></for>

<expr_stmt><expr><call><name>pic_fifo_release_all</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>slice</name><operator>.</operator><name>pics</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pic_fifo_release_all</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>ret_pics</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>vlc_sem_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>sem</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>pic_n</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>


<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>err_stream</name></name> <operator>=</operator> <name>MMAL_SUCCESS</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>conv_stash_fixup</name><parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>p_filter</name></decl></parameter>, <parameter><decl><type><name>converter_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>p_pic</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>conv_frame_stash_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>stash</name> <init>= <expr><name><name>sys</name><operator>-&gt;</operator><name>stash</name></name> <operator>+</operator> <operator>(</operator><name><name>p_pic</name><operator>-&gt;</operator><name>date</name></name> <operator>&amp;</operator> <literal type="number">0xf</literal><operator>)</operator></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>sub_no</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_pic</name><operator>-&gt;</operator><name>date</name></name> <operator>=</operator> <name><name>stash</name><operator>-&gt;</operator><name>pts</name></name></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>sub_no</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>sub_no</name> <operator>!=</operator> <name>SUBS_MAX</name></expr>;</condition> <incr><expr><operator>++</operator><name>sub_no</name></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>stash</name><operator>-&gt;</operator><name>sub_bufs</name><index>[<expr><name>sub_no</name></expr>]</index></name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>



<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name><name>stash</name><operator>-&gt;</operator><name>sub_bufs</name><index>[<expr><name>sub_no</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>stash</name><operator>-&gt;</operator><name>sub_bufs</name><index>[<expr><name>sub_no</name></expr>]</index></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>MMAL_BOOL_T</name></type> <name>out_buffer_pre_release_cb</name><parameter_list>(<parameter><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type><name>header</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>userdata</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>userdata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>pic</name> <init>= <expr><name><name>header</name><operator>-&gt;</operator><name>user_data</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>header</name><operator>-&gt;</operator><name>user_data</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>pic</name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>picture_Release</name><argument_list>(<argument><expr><name>pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>MMAL_FALSE</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>MMAL_STATUS_T</name></type> <name>conv_set_output</name><parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>p_filter</name></decl></parameter>, <parameter><decl><type><name>converter_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>pic</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>status</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>userdata</name></name> <operator>=</operator> <operator>(</operator>struct <name>MMAL_PORT_USERDATA_T</name> <operator>*</operator><operator>)</operator><name>p_filter</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>format</name><operator>-&gt;</operator><name>type</name></name> <operator>=</operator> <name>MMAL_ES_TYPE_VIDEO</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>format</name><operator>-&gt;</operator><name>encoding</name></name> <operator>=</operator> <call><name>vlc_to_mmal_video_fourcc</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>format</name><operator>-&gt;</operator><name>encoding_variant</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>hw_mmal_vlc_fmt_to_mmal_fmt</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>format</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>pic</name> <operator>!=</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>status</name> <operator>=</operator> <call><name>pic_to_format</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>format</name></name></expr></argument>, <argument><expr><name>pic</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Bad format desc: %4.4s, pic=%p, bits=%d"</literal></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name><operator>*</operator><operator>)</operator><operator>&amp;</operator><name><name>pic</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_chroma</name></name></expr></argument>, <argument><expr><name>pic</name></expr></argument>, <argument><expr><name><name>pic</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_bits_per_pixel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>status</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>is_sliced</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>format</name><operator>-&gt;</operator><name>es</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>height</name></name> <operator>=</operator> <name>MMAL_SLICE_HEIGHT</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>mmal_log_dump_format</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_port_format_commit</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Failed to commit format for output port %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>status</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>buffer_num</name></name> <operator>=</operator> <call><name>__MAX</name><argument_list>(<argument><expr><ternary><condition><expr><name><name>sys</name><operator>-&gt;</operator><name>is_sliced</name></name></expr> ?</condition><then> <expr><literal type="number">16</literal></expr> </then><else>: <expr><literal type="number">2</literal></expr></else></ternary></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>buffer_num_recommended</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>buffer_size</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>buffer_size_recommended</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>status</name> <operator>=</operator> <call><name>conv_enable_out</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><name>sys</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>status</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><name>MMAL_SUCCESS</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>picture_t</name> <modifier>*</modifier></type><name>conv_filter</name><parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>p_pic</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>converter_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name> <init>= <expr><name><name>p_filter</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier></type> <name>ret_pics</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>err</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint64_t</name></type> <name>frame_seq</name> <init>= <expr><operator>++</operator><name><name>sys</name><operator>-&gt;</operator><name>frame_seq</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>conv_frame_stash_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>stash</name> <init>= <expr><name><name>sys</name><operator>-&gt;</operator><name>stash</name></name> <operator>+</operator> <operator>(</operator><name>frame_seq</name> <operator>&amp;</operator> <literal type="number">0xf</literal><operator>)</operator></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type> <name>out_buf</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>err_stream</name></name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>
<goto>goto <name>stream_fail</name>;</goto>
</block_content>}</block></if></if_stmt>




<if_stmt><if>if <condition>(<expr><call><name>hw_mmal_vlc_pic_to_mmal_fmt_update</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>format</name></name></expr></argument>, <argument><expr><name>p_pic</name></expr></argument>)</argument_list></call></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Reset input port format"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mmal_port_format_commit</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>p_pic</name><operator>-&gt;</operator><name>context</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>sys</name><operator>-&gt;</operator><name>needs_copy_in</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"No context"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>resizer_type</name></name> <operator>==</operator> <name>FILTER_RESIZER_HVS</name></expr>)</condition>
<block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>sub_no</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>sub_no</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>sub_no</name> <operator>!=</operator> <name>SUBS_MAX</name></expr>;</condition> <incr><expr><operator>++</operator><name>sub_no</name></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>rv</name></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>rv</name> <operator>=</operator> <call><name>hw_mmal_subpic_update</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>hw_mmal_pic_sub_buf_get</name><argument_list>(<argument><expr><name>p_pic</name></expr></argument>, <argument><expr><name>sub_no</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>subs</name></name> <operator>+</operator> <name>sub_no</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>p_pic</name><operator>-&gt;</operator><name>format</name></name></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>format</name><operator>-&gt;</operator><name>es</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>crop</name></name></expr></argument>,
<argument><expr><name>frame_seq</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name>rv</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>
</block_content>}</block></for>
</block_content>}</block></if>
<else>else
<block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>sub_no</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>sub_no</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>sub_no</name> <operator>!=</operator> <name>SUBS_MAX</name></expr>;</condition> <incr><expr><operator>++</operator><name>sub_no</name></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>stash</name><operator>-&gt;</operator><name>sub_bufs</name><index>[<expr><name>sub_no</name></expr>]</index></name> <operator>=</operator> <call><name>hw_mmal_pic_sub_buf_get</name><argument_list>(<argument><expr><name>p_pic</name></expr></argument>, <argument><expr><name>sub_no</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>mmal_buffer_header_acquire</name><argument_list>(<argument><expr><name><name>stash</name><operator>-&gt;</operator><name>sub_bufs</name><index>[<expr><name>sub_no</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>sys</name><operator>-&gt;</operator><name>out_fmt_set</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>out_fmt_set</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>is_sliced</name></name></expr>)</condition> <block>{<block_content>


<if_stmt><if>if <condition>(<expr><operator>(</operator><name>err</name> <operator>=</operator> <call><name>conv_set_output</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><name>sys</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>out_pool</name></name> <operator>=</operator> <call><name>mmal_port_pool_create</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>buffer_num</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>pic</name> <init>= <expr><call><name>filter_NewPicture</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>err</name> <operator>=</operator> <call><name>conv_set_output</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><name>sys</name></expr></argument>, <argument><expr><name>pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>picture_Release</name><argument_list>(<argument><expr><name>pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>err</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>out_pool</name></name> <operator>=</operator> <call><name>mmal_pool_create</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>buffer_num</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>out_pool</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Failed to create output pool"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><operator>(</operator><name>err</name> <operator>=</operator> <call><name>conv_enable_out</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><name>sys</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name> <operator>||</operator>
<operator>(</operator><name>err</name> <operator>=</operator> <call><name>conv_enable_in</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><name>sys</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>




<block>{<block_content>
<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>out_pic</name> <init>= <expr><call><name>filter_NewPicture</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>out_pic</name> <operator>==</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Failed to alloc required filter output pic"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>out_pic</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_sar_den</name></name> <operator>=</operator> <name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_sar_den</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>out_pic</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_sar_num</name></name> <operator>=</operator> <name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_sar_num</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>is_sliced</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pic_fifo_put</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>slice</name><operator>.</operator><name>pics</name></name></expr></argument>, <argument><expr><name>out_pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<while>while <condition>(<expr><operator>(</operator><name>out_buf</name> <operator>=</operator> <call><name>mmal_queue_get</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>out_pool</name><operator>-&gt;</operator><name>queue</name></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mmal_port_send_buffer</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name></expr></argument>, <argument><expr><name>out_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>
</block_content>}</block></if>
<else>else
<block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>out_buf</name> <operator>=</operator> <call><name>mmal_queue_wait</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>out_pool</name><operator>-&gt;</operator><name>queue</name></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>==</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Failed to get output buffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>picture_Release</name><argument_list>(<argument><expr><name>out_pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>mmal_buffer_header_reset</name><argument_list>(<argument><expr><name>out_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<expr_stmt><expr><name><name>out_buf</name><operator>-&gt;</operator><name>user_data</name></name> <operator>=</operator> <name>out_pic</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mmal_buffer_header_pre_release_cb_set</name><argument_list>(<argument><expr><name>out_buf</name></expr></argument>, <argument><expr><name>out_buffer_pre_release_cb</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<block>{<block_content>
<expr_stmt><expr><name><name>out_buf</name><operator>-&gt;</operator><name>data</name></name> <operator>=</operator> <name><name>out_pic</name><operator>-&gt;</operator><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>p_pixels</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>out_buf</name><operator>-&gt;</operator><name>alloc_size</name></name> <operator>=</operator> <name><name>out_pic</name><operator>-&gt;</operator><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>i_pitch</name> <operator>*</operator> <name><name>out_pic</name><operator>-&gt;</operator><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>i_lines</name></expr>;</expr_stmt>

</block_content>}</block>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>err</name> <operator>=</operator> <call><name>mmal_port_send_buffer</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name></expr></argument>, <argument><expr><name>out_buf</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Send buffer to output failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>out_buf</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block>




<expr_stmt><expr><name><name>stash</name><operator>-&gt;</operator><name>pts</name></name> <operator>=</operator> <name><name>p_pic</name><operator>-&gt;</operator><name>date</name></name></expr>;</expr_stmt>
<block>{<block_content>
<decl_stmt><decl><type><name>mmal_decoder_device_t</name> <modifier>*</modifier></type><name>devsys</name> <init>= <expr><call><name>GetMMALDeviceOpaque</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>dec_dev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier><specifier>const</specifier></type> <name>pic_buf</name> <init>= <expr><ternary><condition><expr><name><name>sys</name><operator>-&gt;</operator><name>needs_copy_in</name></name></expr> ?</condition><then>
<expr><call><name>hw_mmal_pic_buf_copied</name><argument_list>(<argument><expr><name>p_pic</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>in_pool</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>cma_in_pool</name></name></expr></argument>,
<argument><expr><name><name>devsys</name><operator>-&gt;</operator><name>is_cma</name></name></expr></argument>)</argument_list></call></expr> </then><else>:
<expr><call><name>hw_mmal_pic_buf_replicated</name><argument_list>(<argument><expr><name>p_pic</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>in_pool</name></name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>


<expr_stmt><expr><call><name>picture_Release</name><argument_list>(<argument><expr><name>p_pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p_pic</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>pic_buf</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Pic has no attached buffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>pic_buf</name><operator>-&gt;</operator><name>pts</name></name> <operator>=</operator> <name>frame_seq</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>err</name> <operator>=</operator> <call><name>mmal_port_send_buffer</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><name>pic_buf</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Send buffer to input failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name>pic_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
</block_content>}</block>




<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>pic_n</name></name><operator>++</operator> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>vlc_sem_wait</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>sem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>ret_pics</name> <operator>=</operator> <call><name>pic_fifo_get</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>ret_pics</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>err_stream</name></name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>stream_fail</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>conv_stash_fixup</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><name>sys</name></expr></argument>, <argument><expr><name>ret_pics</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>ret_pics</name></expr>;</return>

<label><name>stream_fail</name>:</label>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"MMAL error reported by callback"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<label><name>fail</name>:</label>
<if_stmt><if>if <condition>(<expr><name>out_buf</name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name>out_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>p_pic</name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>picture_Release</name><argument_list>(<argument><expr><name>p_pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>conv_flush</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>CloseConverter</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type> <name>obj</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>filter_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>p_filter</name> <init>= <expr><operator>(</operator><name>filter_t</name> <operator>*</operator><operator>)</operator><name>obj</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>converter_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name> <init>= <expr><name><name>p_filter</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>sys</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>


<expr_stmt><expr><call><name>conv_flush</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>cma_buf_pool_deletez</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>cma_in_pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>cma_buf_pool_deletez</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>cma_out_pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>component</name></name> <operator>&amp;&amp;</operator> <name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name><operator>-&gt;</operator><name>is_enabled</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mmal_port_disable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>component</name></name> <operator>&amp;&amp;</operator> <name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>is_enabled</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mmal_component_disable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>resizer_type</name></name> <operator>==</operator> <name>FILTER_RESIZER_HVS</name></expr>)</condition>
<block>{<block_content>
<for>for <control>(<init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>!=</operator> <name>SUBS_MAX</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>hw_mmal_subpic_close</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>subs</name></name> <operator>+</operator> <name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>out_pool</name></name></expr>)</condition>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>is_sliced</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mmal_port_pool_destroy</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>out_pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mmal_pool_destroy</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>out_pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>in_pool</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mmal_pool_destroy</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>in_pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>component</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mmal_component_release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>p_filter</name><operator>-&gt;</operator><name>vctx_out</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>vlc_video_context_Release</name><argument_list>(<argument><expr><name><name>p_filter</name><operator>-&gt;</operator><name>vctx_out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>dec_dev</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>vlc_decoder_device_Release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>dec_dev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_filter</name><operator>-&gt;</operator><name>p_sys</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>MMAL_FOURCC_T</name></type> <name>filter_enc_in</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>fmt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>hw_mmal_chroma_is_mmal</name><argument_list>(<argument><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_chroma</name></name></expr></argument>)</argument_list></call> <operator>||</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_chroma</name></name> <operator>==</operator> <name>VLC_CODEC_I420</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>vlc_to_mmal_video_fourcc</name><argument_list>(<argument><expr><name>fmt</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>fmt</name><operator>-&gt;</operator><name>i_chroma</name></name> <operator>==</operator> <name>VLC_CODEC_I420_10L</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>MMAL_ENCODING_I420</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>


<function><type><name>int</name></type> <name>OpenConverter</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type> <name>obj</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>filter_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>p_filter</name> <init>= <expr><operator>(</operator><name>filter_t</name> <operator>*</operator><operator>)</operator><name>obj</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><name>VLC_EGENERIC</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>converter_sys_t</name> <modifier>*</modifier></type><name>sys</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>status</name></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name> <operator>==</operator> <name>VLC_CODEC_I420</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>MMAL_FOURCC_T</name></type> <name>enc_out</name> <init>= <expr><call><name>vlc_to_mmal_video_fourcc</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>MMAL_FOURCC_T</name></type> <name>enc_in</name> <init>= <expr><call><name>filter_enc_in</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>


<if_stmt><if>if <condition>(<expr><name>enc_in</name> <operator>==</operator> <literal type="number">0</literal> <operator>||</operator> <name>enc_out</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>filter_resizer_t</name></type> <name>resizer_type</name> <init>=
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>NDEBUG</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr><name>FILTER_RESIZER_HVS</name></expr></init></decl>;</decl_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else> 
<expr_stmt><expr><call><name>var_GetInteger</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><name>MMAL_CONVERTER_TYPE_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<label><name>retry</name>:</label>



<if_stmt><if>if <condition>(<expr><name>enc_in</name> <operator>==</operator> <name>MMAL_ENCODING_YUVUV64_10</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>resizer_type</name> <operator>==</operator> <name>FILTER_RESIZER_RESIZER</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>resizer_type</name> <operator>=</operator> <name>FILTER_RESIZER_ISP</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>enc_out</name> <operator>==</operator> <name>MMAL_ENCODING_I420</name> <operator>&amp;&amp;</operator> <name>resizer_type</name> <operator>==</operator> <name>FILTER_RESIZER_HVS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>resizer_type</name> <operator>=</operator> <name>FILTER_RESIZER_ISP</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>enc_in</name> <operator>==</operator> <name>MMAL_ENCODING_YUV10_COL</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>resizer_type</name> <operator>!=</operator> <name>FILTER_RESIZER_HVS</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><name>resizer_type</name> <operator>==</operator> <name>FILTER_RESIZER_RESIZER</name> <operator>&amp;&amp;</operator> <call><name>pic_to_slice_mmal_fourcc</name><argument_list>(<argument><expr><name>enc_out</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>sys</name> <operator>=</operator> <call><name>calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>converter_sys_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>sys</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <name>VLC_ENOMEM</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>p_filter</name><operator>-&gt;</operator><name>p_sys</name></name> <operator>=</operator> <name>sys</name></expr>;</expr_stmt>


<expr_stmt><expr><call><name>vlc_mutex_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_sem_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>sem</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>err_stream</name></name> <operator>=</operator> <name>MMAL_SUCCESS</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pic_fifo_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>ret_pics</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pic_fifo_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>slice</name><operator>.</operator><name>pics</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>needs_copy_in</name></name> <operator>=</operator> <operator>!</operator><call><name>hw_mmal_chroma_is_mmal</name><argument_list>(<argument><expr><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>in_port_cb_fn</name></name> <operator>=</operator> <name>conv_input_port_cb</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>hw_mmal_chroma_is_mmal</name><argument_list>(<argument><expr><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr></argument>)</argument_list></call></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>p_filter</name><operator>-&gt;</operator><name>vctx_in</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>dec_dev</name></name> <operator>=</operator> <call><name>vlc_video_context_HoldDevice</name><argument_list>(<argument><expr><name><name>p_filter</name><operator>-&gt;</operator><name>vctx_in</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>dec_dev</name><operator>-&gt;</operator><name>type</name></name> <operator>==</operator> <name>VLC_DECODER_DEVICE_MMAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>dec_dev</name></name> <operator>=</operator> <call><name>filter_HoldDecoderDeviceType</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><name>VLC_DECODER_DEVICE_MMAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>dec_dev</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"missing MMAL decoder device"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>hw_mmal_chroma_is_mmal</name><argument_list>(<argument><expr><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr></argument>)</argument_list></call></expr>)</condition>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>hw_mmal_chroma_is_mmal</name><argument_list>(<argument><expr><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>p_filter</name><operator>-&gt;</operator><name>vctx_out</name></name> <operator>=</operator> <call><name>vlc_video_context_Hold</name><argument_list>(<argument><expr><name><name>p_filter</name><operator>-&gt;</operator><name>vctx_in</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name><name>p_filter</name><operator>-&gt;</operator><name>vctx_out</name></name> <operator>=</operator> <call><name>vlc_video_context_Create</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>dec_dev</name></name></expr></argument>, <argument><expr><name>VLC_VIDEO_CONTEXT_MMAL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>unlikely</name><argument_list>(<argument><expr><name><name>p_filter</name><operator>-&gt;</operator><name>vctx_out</name></name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"failed to create the output video context"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>component_name</name></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>resizer_type</name> <operator>==</operator> <name>FILTER_RESIZER_RESIZER</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>is_sliced</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>out_port_cb_fn</name></name> <operator>=</operator> <name>slice_output_port_cb</name></expr>;</expr_stmt>
<expr_stmt><expr><name>component_name</name> <operator>=</operator> <name>MMAL_COMPONENT_DEFAULT_RESIZER</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>is_sliced</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt> 
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>out_port_cb_fn</name></name> <operator>=</operator> <name>conv_output_port_cb</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>resizer_type</name> <operator>==</operator> <name>FILTER_RESIZER_ISP</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>component_name</name> <operator>=</operator> <name>MMAL_COMPONENT_ISP_RESIZER</name></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name>component_name</name> <operator>=</operator> <name>MMAL_COMPONENT_HVS</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>resizer_type</name></name> <operator>=</operator> <name>resizer_type</name></expr>;</expr_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_component_create</name><argument_list>(<argument><expr><name>component_name</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>component</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>resizer_type</name> <operator>==</operator> <name>FILTER_RESIZER_HVS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Failed to create HVS resizer - retrying with ISP"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>CloseConverter</name><argument_list>(<argument><expr><name>obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>resizer_type</name> <operator>=</operator> <name>FILTER_RESIZER_ISP</name></expr>;</expr_stmt>
<goto>goto <name>retry</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Failed to create MMAL component %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,
<argument><expr><name>component_name</name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>output</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>input</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name><operator>-&gt;</operator><name>userdata</name></name> <operator>=</operator> <operator>(</operator>struct <name>MMAL_PORT_USERDATA_T</name> <operator>*</operator><operator>)</operator><name>p_filter</name></expr>;</expr_stmt>
<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_port_enable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name></name></expr></argument>, <argument><expr><name>conv_control_port_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Failed to enable control port %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>mmal_decoder_device_t</name> <modifier>*</modifier></type><name>devsys</name> <init>= <expr><call><name>GetMMALDeviceOpaque</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>dec_dev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>devsys</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>needs_copy_in</name></name> <operator>&amp;&amp;</operator>
<operator>(</operator><name><name>sys</name><operator>-&gt;</operator><name>cma_in_pool</name></name> <operator>=</operator> <call><name>cma_buf_pool_new</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>devsys</name><operator>-&gt;</operator><name>is_cma</name></name></expr></argument>, <argument><expr><literal type="string">"conv-copy-in"</literal></expr></argument>)</argument_list></call><operator>)</operator> <operator>==</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Failed to allocate input CMA pool"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>userdata</name></name> <operator>=</operator> <operator>(</operator>struct <name>MMAL_PORT_USERDATA_T</name> <operator>*</operator><operator>)</operator><name>p_filter</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>format</name><operator>-&gt;</operator><name>type</name></name> <operator>=</operator> <name>MMAL_ES_TYPE_VIDEO</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>format</name><operator>-&gt;</operator><name>encoding</name></name> <operator>=</operator> <name>enc_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>format</name><operator>-&gt;</operator><name>encoding_variant</name></name> <operator>=</operator> <name>MMAL_ENCODING_I420</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>hw_mmal_vlc_fmt_to_mmal_fmt</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>format</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>port_parameter_set_bool</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><name>MMAL_PARAMETER_ZERO_COPY</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>mmal_log_dump_format</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_port_format_commit</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Failed to commit format for input port %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_size</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_size_recommended</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_num</name></name> <operator>=</operator> <name>NUM_DECODER_BUFFER_HEADERS</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>status</name> <operator>=</operator> <call><name>conv_enable_in</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><name>sys</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>port_parameter_set_bool</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>output</name></name></expr></argument>, <argument><expr><name>MMAL_PARAMETER_ZERO_COPY</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>is_sliced</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_component_enable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Failed to enable component %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>sys</name><operator>-&gt;</operator><name>in_pool</name></name> <operator>=</operator> <call><name>mmal_pool_create</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_num</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>)</operator> <operator>==</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Failed to create input pool"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>resizer_type</name></name> <operator>==</operator> <name>FILTER_RESIZER_HVS</name></expr>)</condition>
<block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i</name></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>!=</operator> <name>SUBS_MAX</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>hw_mmal_subpic_open</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>subs</name></name> <operator>+</operator> <name>i</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>input</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Failed to open subpic %d"</literal></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>conv_filter</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_filter</name><operator>-&gt;</operator><name>pf_flush</name></name> <operator>=</operator> <name>conv_flush</name></expr>;</expr_stmt>


<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<label><name>fail</name>:</label>
<expr_stmt><expr><call><name>CloseConverter</name><argument_list>(<argument><expr><name>obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>resizer_type</name> <operator>!=</operator> <name>FILTER_RESIZER_RESIZER</name> <operator>&amp;&amp;</operator> <name>status</name> <operator>==</operator> <name>MMAL_ENOMEM</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>resizer_type</name> <operator>=</operator> <name>FILTER_RESIZER_RESIZER</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Lack of memory to use HVS/ISP: trying resizer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>retry</name>;</goto>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>

</unit>
