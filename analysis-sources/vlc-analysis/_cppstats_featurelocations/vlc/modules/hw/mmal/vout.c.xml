<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\hw\mmal\vout.c">























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_vout_display.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mmal_picture.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bcm_host.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;interface/mmal/mmal.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;interface/mmal/util/mmal_util.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;interface/mmal/util/mmal_default_components.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"subpic.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_BUFFERS_IN_TRANSIT</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VC_TV_MAX_MODE_IDS</name></cpp:macro> <cpp:value>127</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_LAYER_NAME</name></cpp:macro> <cpp:value>"mmal-layer"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_LAYER_TEXT</name></cpp:macro> <cpp:value>N_("VideoCore layer where the video is displayed.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_LAYER_LONGTEXT</name></cpp:macro> <cpp:value>N_("VideoCore layer where the video is displayed. Subpictures are displayed directly above and a black background directly below.")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_DISPLAY_NAME</name></cpp:macro> <cpp:value>"mmal-display"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_DISPLAY_TEXT</name></cpp:macro> <cpp:value>N_("Output device for Rpi fullscreen.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_DISPLAY_LONGTEXT</name></cpp:macro> <cpp:value>N_("Output device for Rpi fullscreen. " "Valid values are HDMI-1,HDMI-2. By default HDMI-1.")</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_ADJUST_REFRESHRATE_NAME</name></cpp:macro> <cpp:value>"mmal-adjust-refreshrate"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_ADJUST_REFRESHRATE_TEXT</name></cpp:macro> <cpp:value>N_("Adjust HDMI refresh rate to the video.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_ADJUST_REFRESHRATE_LONGTEXT</name></cpp:macro> <cpp:value>N_("Adjust HDMI refresh rate to the video.")</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_NATIVE_INTERLACED</name></cpp:macro> <cpp:value>"mmal-native-interlaced"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_NATIVE_INTERLACE_TEXT</name></cpp:macro> <cpp:value>N_("Force interlaced HDMI mode.")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MMAL_NATIVE_INTERLACE_LONGTEXT</name></cpp:macro> <cpp:value>N_("Force the HDMI output into an " "interlaced video mode for interlaced video content.")</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PHASE_OFFSET_TARGET</name></cpp:macro> <cpp:value>((double)0.25)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PHASE_CHECK_INTERVAL</name></cpp:macro> <cpp:value>100</cpp:value></cpp:define>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>OpenMmalVout</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBS_MAX</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>


<macro><name>vlc_module_begin</name><argument_list>()</argument_list></macro>
<macro><name>set_shortname</name><argument_list>(<argument>N_(<literal type="string">"MMAL vout"</literal>)</argument>)</argument_list></macro>
<macro><name>set_description</name><argument_list>(<argument>N_(<literal type="string">"MMAL-based vout plugin for Raspberry Pi"</literal>)</argument>)</argument_list></macro>
<macro><name>add_shortcut</name><argument_list>(<argument><literal type="string">"mmal_vout"</literal></argument>)</argument_list></macro>
<macro><name>set_category</name><argument_list>( <argument>CAT_VIDEO</argument> )</argument_list></macro>
<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_VIDEO_VOUT</argument> )</argument_list></macro>

<macro><name>add_integer</name><argument_list>(<argument>MMAL_LAYER_NAME</argument>, <argument><literal type="number">1</literal></argument>, <argument>MMAL_LAYER_TEXT</argument>, <argument>MMAL_LAYER_LONGTEXT</argument>, <argument>false</argument>)</argument_list></macro>
<macro><name>add_bool</name><argument_list>(<argument>MMAL_ADJUST_REFRESHRATE_NAME</argument>, <argument>false</argument>, <argument>MMAL_ADJUST_REFRESHRATE_TEXT</argument>,
<argument>MMAL_ADJUST_REFRESHRATE_LONGTEXT</argument>, <argument>false</argument>)</argument_list></macro>
<macro><name>add_bool</name><argument_list>(<argument>MMAL_NATIVE_INTERLACED</argument>, <argument>false</argument>, <argument>MMAL_NATIVE_INTERLACE_TEXT</argument>,
<argument>MMAL_NATIVE_INTERLACE_LONGTEXT</argument>, <argument>false</argument>)</argument_list></macro>
<macro><name>add_string</name><argument_list>(<argument>MMAL_DISPLAY_NAME</argument>, <argument><literal type="string">"auto"</literal></argument>, <argument>MMAL_DISPLAY_TEXT</argument>,
<argument>MMAL_DISPLAY_LONGTEXT</argument>, <argument>false</argument>)</argument_list></macro>
<macro><name>set_callback_display</name><argument_list>(<argument>OpenMmalVout</argument>, <argument><literal type="number">16</literal></argument>)</argument_list></macro> 
<macro><name>vlc_module_end</name><argument_list>()</argument_list></macro>

<typedef>typedef <type><struct>struct <name>vout_subpic_s</name> <block>{
<decl_stmt><decl><type><name>MMAL_COMPONENT_T</name> <modifier>*</modifier></type><name>component</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>subpic_reg_stash_t</name></type> <name>sub</name></decl>;</decl_stmt>
}</block></struct></type> <name>vout_subpic_t</name>;</typedef>

<struct>struct <name>vout_display_sys_t</name> <block>{
<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>manage_mutex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_decoder_device</name> <modifier>*</modifier></type><name>dec_dev</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_COMPONENT_T</name> <modifier>*</modifier></type><name>component</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_PORT_T</name> <modifier>*</modifier></type><name>input</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_POOL_T</name> <modifier>*</modifier></type><name>pool</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>i_planes</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>buffers_in_transit</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_buffers</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>display_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>display_width</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>display_height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_RECT_T</name></type> <name>dest_rect</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_frame_rate_base</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_frame_rate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>next_phase_check</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>phase_offset</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>layer</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>bool</name></type> <name>need_configure_display</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>bool</name></type> <name>adjust_refresh_rate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>native_interlaced</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_top_field_first</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>bool</name></type> <name>b_progressive</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>force_config</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vout_subpic_t</name></type> <name><name>subs</name><index>[<expr><name>SUBS_MAX</name></expr>]</index></name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type> <name><name>subpic_bufs</name><index>[<expr><name>SUBS_MAX</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>picture_pool_t</name> <modifier>*</modifier></type> <name>pic_pool</name></decl>;</decl_stmt>

<struct>struct <name>vout_isp_conf_s</name> <block>{
<decl_stmt><decl><type><name>MMAL_COMPONENT_T</name> <modifier>*</modifier></type><name>component</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_PORT_T</name> <modifier>*</modifier></type> <name>input</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_PORT_T</name> <modifier>*</modifier></type> <name>output</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_QUEUE_T</name> <modifier>*</modifier></type> <name>out_q</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_POOL_T</name> <modifier>*</modifier></type> <name>in_pool</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_POOL_T</name> <modifier>*</modifier></type> <name>out_pool</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>pending</name></decl>;</decl_stmt>
}</block> <decl><name>isp</name></decl>;</struct>

<decl_stmt><decl><type><name>MMAL_POOL_T</name> <modifier>*</modifier></type> <name>copy_pool</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type> <name>copy_buf</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>vzc_pool_ctl_t</name> <modifier>*</modifier></type> <name>vzc</name></decl>;</decl_stmt>
}</block>;</struct>




<function><type><specifier>static</specifier> <name>bool</name></type> <name>want_copy</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>fmt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name><name>fmt</name><operator>-&gt;</operator><name>i_chroma</name></name> <operator>==</operator> <name>VLC_CODEC_I420</name> <operator>||</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_chroma</name></name> <operator>==</operator> <name>VLC_CODEC_I420_10L</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>vlc_fourcc_t</name></type> <name>req_chroma</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>fmt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><ternary><condition><expr><call><name>hw_mmal_chroma_is_mmal</name><argument_list>(<argument><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_chroma</name></name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>want_copy</name><argument_list>(<argument><expr><name>fmt</name></expr></argument>)</argument_list></call></expr> ?</condition><then>
<expr><name><name>fmt</name><operator>-&gt;</operator><name>i_chroma</name></name></expr> </then><else>: <expr><name>VLC_CODEC_I420</name></expr></else></ternary></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>MMAL_FOURCC_T</name></type> <name>vout_vlc_to_mmal_pic_fourcc</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>int</name></type> <name>fcc</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<switch>switch <condition>(<expr><name>fcc</name></expr>)</condition><block>{<block_content>
<case>case <expr><name>VLC_CODEC_MMAL_OPAQUE</name></expr>:</case>
<return>return <expr><name>MMAL_ENCODING_OPAQUE</name></expr>;</return>
<case>case <expr><name>VLC_CODEC_I420</name></expr>:</case>
<return>return <expr><name>MMAL_ENCODING_I420</name></expr>;</return>
<default>default:</default>
<break>break;</break>
</block_content>}</block></switch>
<return>return <expr><name>MMAL_ENCODING_I420</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>display_set_format</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>vout_display_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>vd</name></decl></parameter>, <parameter><decl><type><name>MMAL_ES_FORMAT_T</name> <modifier>*</modifier><specifier>const</specifier></type> <name>es_fmt</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>bool</name></type> <name>is_intermediate</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name> <name>int</name></type> <name>w</name> <init>= <expr><ternary><condition><expr><name>is_intermediate</name></expr> ?</condition><then> <expr><name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_visible_width</name></name></expr> </then><else>: <expr><name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_width</name></name></expr></else></ternary></expr></init></decl> ;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name> <name>int</name></type> <name>h</name> <init>= <expr><ternary><condition><expr><name>is_intermediate</name></expr> ?</condition><then> <expr><name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_visible_height</name></name></expr> </then><else>: <expr><name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_height</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_VIDEO_FORMAT_T</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>v_fmt</name> <init>= <expr><operator>&amp;</operator><name><name>es_fmt</name><operator>-&gt;</operator><name>es</name><operator>-&gt;</operator><name>video</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>es_fmt</name><operator>-&gt;</operator><name>type</name></name> <operator>=</operator> <name>MMAL_ES_TYPE_VIDEO</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>es_fmt</name><operator>-&gt;</operator><name>encoding</name></name> <operator>=</operator> <ternary><condition><expr><name>is_intermediate</name></expr> ?</condition><then> <expr><name>MMAL_ENCODING_I420</name></expr> </then><else>: <expr><call><name>vout_vlc_to_mmal_pic_fourcc</name><argument_list>(<argument><expr><name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_chroma</name></name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
<expr_stmt><expr><name><name>es_fmt</name><operator>-&gt;</operator><name>encoding_variant</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>v_fmt</name><operator>-&gt;</operator><name>width</name></name> <operator>=</operator> <operator>(</operator><name>w</name> <operator>+</operator> <literal type="number">31</literal><operator>)</operator> <operator>&amp;</operator> <operator>~</operator><literal type="number">31</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>v_fmt</name><operator>-&gt;</operator><name>height</name></name> <operator>=</operator> <operator>(</operator><name>h</name> <operator>+</operator> <literal type="number">15</literal><operator>)</operator> <operator>&amp;</operator> <operator>~</operator><literal type="number">15</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>v_fmt</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>x</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>v_fmt</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>y</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>v_fmt</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>width</name></name> <operator>=</operator> <name>w</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>v_fmt</name><operator>-&gt;</operator><name>crop</name><operator>.</operator><name>height</name></name> <operator>=</operator> <name>h</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_sar_num</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>||</operator> <name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_sar_den</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>v_fmt</name><operator>-&gt;</operator><name>par</name><operator>.</operator><name>num</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>v_fmt</name><operator>-&gt;</operator><name>par</name><operator>.</operator><name>den</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name><name>v_fmt</name><operator>-&gt;</operator><name>par</name><operator>.</operator><name>num</name></name> <operator>=</operator> <name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_sar_num</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>v_fmt</name><operator>-&gt;</operator><name>par</name><operator>.</operator><name>den</name></name> <operator>=</operator> <name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_sar_den</name></name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><name><name>v_fmt</name><operator>-&gt;</operator><name>frame_rate</name><operator>.</operator><name>num</name></name> <operator>=</operator> <name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_frame_rate</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>v_fmt</name><operator>-&gt;</operator><name>frame_rate</name><operator>.</operator><name>den</name></name> <operator>=</operator> <name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_frame_rate_base</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>v_fmt</name><operator>-&gt;</operator><name>color_space</name></name> <operator>=</operator> <call><name>vlc_to_mmal_color_space</name><argument_list>(<argument><expr><name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>space</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>display_src_rect</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>vout_display_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>vd</name></decl></parameter>, <parameter><decl><type><name>MMAL_RECT_T</name> <modifier>*</modifier><specifier>const</specifier></type> <name>rect</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>bool</name></type> <name>wants_isp</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>rect</name><operator>-&gt;</operator><name>x</name></name> <operator>=</operator> <ternary><condition><expr><name>wants_isp</name></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_x_offset</name></name></expr></else></ternary></expr>;</expr_stmt>
<expr_stmt><expr><name><name>rect</name><operator>-&gt;</operator><name>y</name></name> <operator>=</operator> <ternary><condition><expr><name>wants_isp</name></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_y_offset</name></name></expr></else></ternary></expr>;</expr_stmt>
<expr_stmt><expr><name><name>rect</name><operator>-&gt;</operator><name>width</name></name> <operator>=</operator> <name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_visible_width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>rect</name><operator>-&gt;</operator><name>height</name></name> <operator>=</operator> <name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_visible_height</name></name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>isp_input_cb</name><parameter_list>(<parameter><decl><type><name>MMAL_PORT_T</name> <modifier>*</modifier></type><name>port</name></decl></parameter>, <parameter><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>isp_control_port_cb</name><parameter_list>(<parameter><decl><type><name>MMAL_PORT_T</name> <modifier>*</modifier></type><name>port</name></decl></parameter>, <parameter><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name> <init>= <expr><operator>(</operator><name>vout_display_t</name> <operator>*</operator><operator>)</operator><name><name>port</name><operator>-&gt;</operator><name>userdata</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>status</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>buffer</name><operator>-&gt;</operator><name>cmd</name></name> <operator>==</operator> <name>MMAL_EVENT_ERROR</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>status</name> <operator>=</operator> <operator>*</operator><operator>(</operator><name>uint32_t</name> <operator>*</operator><operator>)</operator><name><name>buffer</name><operator>-&gt;</operator><name>data</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"MMAL error %"</literal><name>PRIx32</name><literal type="string">" \"%s\""</literal></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>isp_output_cb</name><parameter_list>(<parameter><decl><type><name>MMAL_PORT_T</name> <modifier>*</modifier></type><name>port</name></decl></parameter>, <parameter><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>buf</name><operator>-&gt;</operator><name>cmd</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>buf</name><operator>-&gt;</operator><name>length</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition>
<block>{<block_content>


<decl_stmt><decl><type><name>vout_display_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>vd</name> <init>= <expr><operator>(</operator><name>vout_display_t</name> <operator>*</operator><operator>)</operator><name><name>port</name><operator>-&gt;</operator><name>userdata</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>vout_isp_conf_s</name></name> <modifier>*</modifier><specifier>const</specifier></type> <name>isp</name> <init>= <expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>sys</name><operator>-&gt;</operator><name>isp</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>mmal_queue_put</name><argument_list>(<argument><expr><name><name>isp</name><operator>-&gt;</operator><name>out_q</name></name></expr></argument>, <argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else
<block>{<block_content>
<expr_stmt><expr><call><name>mmal_buffer_header_reset</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>isp_empty_out_q</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vout_isp_conf_s</name></name> <modifier>*</modifier> <specifier>const</specifier></type> <name>isp</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type> <name>buf</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>isp</name><operator>-&gt;</operator><name>out_q</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>

<while>while <condition>(<expr><operator>(</operator><name>buf</name> <operator>=</operator> <call><name>mmal_queue_get</name><argument_list>(<argument><expr><name><name>isp</name><operator>-&gt;</operator><name>out_q</name></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>isp_flush</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vout_isp_conf_s</name></name> <modifier>*</modifier> <specifier>const</specifier></type> <name>isp</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>isp</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>is_enabled</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mmal_port_disable</name><argument_list>(<argument><expr><name><name>isp</name><operator>-&gt;</operator><name>input</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>isp</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>is_enabled</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mmal_port_disable</name><argument_list>(<argument><expr><name><name>isp</name><operator>-&gt;</operator><name>output</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>isp_empty_out_q</name><argument_list>(<argument><expr><name>isp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>isp</name><operator>-&gt;</operator><name>pending</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>MMAL_STATUS_T</name></type> <name>isp_prepare</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>vd</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>vout_isp_conf_s</name></name> <modifier>*</modifier> <specifier>const</specifier></type> <name>isp</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>err</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type> <name>buf</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>isp</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>is_enabled</name></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>err</name> <operator>=</operator> <call><name>mmal_port_enable</name><argument_list>(<argument><expr><name><name>isp</name><operator>-&gt;</operator><name>output</name></name></expr></argument>, <argument><expr><name>isp_output_cb</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"ISP output port enable failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>err</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<while>while <condition>(<expr><operator>(</operator><name>buf</name> <operator>=</operator> <call><name>mmal_queue_get</name><argument_list>(<argument><expr><name><name>isp</name><operator>-&gt;</operator><name>out_pool</name><operator>-&gt;</operator><name>queue</name></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>err</name> <operator>=</operator> <call><name>mmal_port_send_buffer</name><argument_list>(<argument><expr><name><name>isp</name><operator>-&gt;</operator><name>output</name></name></expr></argument>, <argument><expr><name>buf</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"ISP output port stuff failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>err</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></while>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>isp</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>is_enabled</name></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>err</name> <operator>=</operator> <call><name>mmal_port_enable</name><argument_list>(<argument><expr><name><name>isp</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><name>isp_input_cb</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"ISP input port enable failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>err</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>MMAL_SUCCESS</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>isp_close</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>vd</name></decl></parameter>, <parameter><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>vd_sys</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>vout_isp_conf_s</name></name> <modifier>*</modifier> <specifier>const</specifier></type> <name>isp</name> <init>= <expr><operator>&amp;</operator><name><name>vd_sys</name><operator>-&gt;</operator><name>isp</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>isp</name><operator>-&gt;</operator><name>component</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>isp_flush</name><argument_list>(<argument><expr><name>isp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>isp</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name><operator>-&gt;</operator><name>is_enabled</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mmal_port_disable</name><argument_list>(<argument><expr><name><name>isp</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>isp</name><operator>-&gt;</operator><name>out_q</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>isp_empty_out_q</name><argument_list>(<argument><expr><name>isp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>mmal_queue_destroy</name><argument_list>(<argument><expr><name><name>isp</name><operator>-&gt;</operator><name>out_q</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>isp</name><operator>-&gt;</operator><name>out_q</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>isp</name><operator>-&gt;</operator><name>out_pool</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>mmal_port_pool_destroy</name><argument_list>(<argument><expr><name><name>isp</name><operator>-&gt;</operator><name>output</name></name></expr></argument>, <argument><expr><name><name>isp</name><operator>-&gt;</operator><name>out_pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>isp</name><operator>-&gt;</operator><name>out_pool</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>isp</name><operator>-&gt;</operator><name>input</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>isp</name><operator>-&gt;</operator><name>output</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>mmal_component_release</name><argument_list>(<argument><expr><name><name>isp</name><operator>-&gt;</operator><name>component</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>isp</name><operator>-&gt;</operator><name>component</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<return>return;</return>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>MMAL_BOOL_T</name></type> <name>isp_out_pool_cb</name><parameter_list>(<parameter><decl><type><name>MMAL_POOL_T</name> <modifier>*</modifier></type><name>pool</name></decl></parameter>, <parameter><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>userdata</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>vout_isp_conf_s</name></name> <modifier>*</modifier> <specifier>const</specifier></type> <name>isp</name> <init>= <expr><name>userdata</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>isp</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>is_enabled</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>mmal_buffer_header_reset</name><argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>mmal_port_send_buffer</name><argument_list>(<argument><expr><name><name>isp</name><operator>-&gt;</operator><name>output</name></name></expr></argument>, <argument><expr><name>buffer</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>MMAL_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>MMAL_FALSE</name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>MMAL_TRUE</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>MMAL_STATUS_T</name></type> <name>isp_setup</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>vd</name></decl></parameter>, <parameter><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>vd_sys</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>vout_isp_conf_s</name></name> <modifier>*</modifier> <specifier>const</specifier></type> <name>isp</name> <init>= <expr><operator>&amp;</operator><name><name>vd_sys</name><operator>-&gt;</operator><name>isp</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>err</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>err</name> <operator>=</operator> <call><name>mmal_component_create</name><argument_list>(<argument><expr><name>MMAL_COMPONENT_ISP_RESIZER</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>isp</name><operator>-&gt;</operator><name>component</name></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Cannot create ISP component"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>err</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>isp</name><operator>-&gt;</operator><name>input</name></name> <operator>=</operator> <name><name>isp</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>input</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>isp</name><operator>-&gt;</operator><name>output</name></name> <operator>=</operator> <name><name>isp</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>output</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>isp</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name><operator>-&gt;</operator><name>userdata</name></name> <operator>=</operator> <operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name>vd</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>err</name> <operator>=</operator> <call><name>mmal_port_enable</name><argument_list>(<argument><expr><name><name>isp</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name></name></expr></argument>, <argument><expr><name>isp_control_port_cb</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to enable ISP control port"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>isp</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>userdata</name></name> <operator>=</operator> <operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name>vd</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>display_set_format</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name><name>isp</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>format</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>err</name> <operator>=</operator> <call><name>port_parameter_set_bool</name><argument_list>(<argument><expr><name><name>isp</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><name>MMAL_PARAMETER_ZERO_COPY</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>err</name> <operator>=</operator> <call><name>mmal_port_format_commit</name><argument_list>(<argument><expr><name><name>isp</name><operator>-&gt;</operator><name>input</name></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to set ISP input format"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>isp</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_size</name></name> <operator>=</operator> <name><name>isp</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_size_recommended</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>isp</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_num</name></name> <operator>=</operator> <literal type="number">30</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>isp</name><operator>-&gt;</operator><name>in_pool</name></name> <operator>=</operator> <call><name>mmal_pool_create</name><argument_list>(<argument><expr><name><name>isp</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_num</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>)</operator> <operator>==</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to create input pool"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>isp</name><operator>-&gt;</operator><name>out_q</name></name> <operator>=</operator> <call><name>mmal_queue_create</name><argument_list>()</argument_list></call><operator>)</operator> <operator>==</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>err</name> <operator>=</operator> <name>MMAL_ENOMEM</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>display_set_format</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name><name>isp</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>format</name></name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>err</name> <operator>=</operator> <call><name>port_parameter_set_bool</name><argument_list>(<argument><expr><name><name>isp</name><operator>-&gt;</operator><name>output</name></name></expr></argument>, <argument><expr><name>MMAL_PARAMETER_ZERO_COPY</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>err</name> <operator>=</operator> <call><name>mmal_port_format_commit</name><argument_list>(<argument><expr><name><name>isp</name><operator>-&gt;</operator><name>output</name></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to set ISP input format"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>isp</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>buffer_size</name></name> <operator>=</operator> <name><name>isp</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>buffer_size_recommended</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>isp</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>buffer_num</name></name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>isp</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>userdata</name></name> <operator>=</operator> <operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name>vd</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>isp</name><operator>-&gt;</operator><name>out_pool</name></name> <operator>=</operator> <call><name>mmal_port_pool_create</name><argument_list>(<argument><expr><name><name>isp</name><operator>-&gt;</operator><name>output</name></name></expr></argument>, <argument><expr><name><name>isp</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>buffer_num</name></name></expr></argument>, <argument><expr><name><name>isp</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>buffer_size</name></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>==</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to make ISP port pool"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>mmal_pool_callback_set</name><argument_list>(<argument><expr><name><name>isp</name><operator>-&gt;</operator><name>out_pool</name></name></expr></argument>, <argument><expr><name>isp_out_pool_cb</name></expr></argument>, <argument><expr><name>isp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>err</name> <operator>=</operator> <call><name>isp_prepare</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>isp</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

<return>return <expr><name>MMAL_SUCCESS</name></expr>;</return>

<label><name>fail</name>:</label>
<expr_stmt><expr><call><name>isp_close</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>vd_sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>err</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>MMAL_STATUS_T</name></type> <name>isp_check</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>vd</name></decl></parameter>, <parameter><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>vd_sys</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>vout_isp_conf_s</name></name> <modifier>*</modifier><specifier>const</specifier></type> <name>isp</name> <init>= <expr><operator>&amp;</operator><name><name>vd_sys</name><operator>-&gt;</operator><name>isp</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>bool</name></type> <name>has_isp</name> <init>= <expr><operator>(</operator><name><name>isp</name><operator>-&gt;</operator><name>component</name></name> <operator>!=</operator> <name>NULL</name><operator>)</operator></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>bool</name></type> <name>wants_isp</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>has_isp</name> <operator>==</operator> <name>wants_isp</name></expr>)</condition>
<block>{<block_content>

</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name>has_isp</name></expr>)</condition>
<block>{<block_content>

<expr_stmt><expr><call><name>isp_flush</name><argument_list>(<argument><expr><name>isp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><call><name>mmal_queue_length</name><argument_list>(<argument><expr><name><name>isp</name><operator>-&gt;</operator><name>out_pool</name><operator>-&gt;</operator><name>queue</name></name></expr></argument>)</argument_list></call> <operator>==</operator> <name><name>isp</name><operator>-&gt;</operator><name>output</name><operator>-&gt;</operator><name>buffer_num</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>isp_close</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>vd_sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if>
<else>else
<block>{<block_content>

<return>return <expr><call><name>isp_setup</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>vd_sys</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></else></if_stmt>

<return>return <expr><name>MMAL_SUCCESS</name></expr>;</return>
</block_content>}</block></function>


<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>tvservice_cb</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>callback_data</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>reason</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>param1</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>param2</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>adjust_refresh_rate</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>set_latency_target</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enable</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>maintain_phase_sync</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>;</function_decl>



<function><type><specifier>static</specifier> <name>void</name></type> <name>vd_input_port_cb</name><parameter_list>(<parameter><decl><type><name>MMAL_PORT_T</name> <modifier>*</modifier></type><name>port</name></decl></parameter>, <parameter><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>query_resolution</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int</name></type> <name>display_id</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>width</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>TV_DISPLAY_STATE_T</name></type> <name>display_state</name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>vc_tv_get_display_state_id</name><argument_list>(<argument><expr><name>display_id</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>display_state</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"State=%#x"</literal></expr></argument>, <argument><expr><name><name>display_state</name><operator>.</operator><name>state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>display_state</name><operator>.</operator><name>state</name></name> <operator>&amp;</operator> <literal type="number">0xFF</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"HDMI: %dx%d"</literal></expr></argument>, <argument><expr><name><name>display_state</name><operator>.</operator><name>display</name><operator>.</operator><name>hdmi</name><operator>.</operator><name>width</name></name></expr></argument>, <argument><expr><name><name>display_state</name><operator>.</operator><name>display</name><operator>.</operator><name>hdmi</name><operator>.</operator><name>height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>width</name> <operator>=</operator> <name><name>display_state</name><operator>.</operator><name>display</name><operator>.</operator><name>hdmi</name><operator>.</operator><name>width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>height</name> <operator>=</operator> <name><name>display_state</name><operator>.</operator><name>display</name><operator>.</operator><name>hdmi</name><operator>.</operator><name>height</name></name></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>display_state</name><operator>.</operator><name>state</name></name> <operator>&amp;</operator> <literal type="number">0xFF00</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"SDTV: %dx%d"</literal></expr></argument>, <argument><expr><name><name>display_state</name><operator>.</operator><name>display</name><operator>.</operator><name>sdtv</name><operator>.</operator><name>width</name></name></expr></argument>, <argument><expr><name><name>display_state</name><operator>.</operator><name>display</name><operator>.</operator><name>sdtv</name><operator>.</operator><name>height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>width</name> <operator>=</operator> <name><name>display_state</name><operator>.</operator><name>display</name><operator>.</operator><name>sdtv</name><operator>.</operator><name>width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>height</name> <operator>=</operator> <name><name>display_state</name><operator>.</operator><name>display</name><operator>.</operator><name>sdtv</name><operator>.</operator><name>height</name></name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Invalid display state %"</literal><name>PRIx32</name></expr></argument>, <argument><expr><name><name>display_state</name><operator>.</operator><name>state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to query display resolution"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>MMAL_RECT_T</name></type>
<name>place_to_mmal_rect</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>vout_display_place_t</name></type> <name>place</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>MMAL_RECT_T</name><operator>)</operator><block>{
<expr><operator>.</operator><name>x</name> <operator>=</operator> <name><name>place</name><operator>.</operator><name>x</name></name></expr>,
<expr><operator>.</operator><name>y</name> <operator>=</operator> <name><name>place</name><operator>.</operator><name>y</name></name></expr>,
<expr><operator>.</operator><name>width</name> <operator>=</operator> <name><name>place</name><operator>.</operator><name>width</name></name></expr>,
<expr><operator>.</operator><name>height</name> <operator>=</operator> <name><name>place</name><operator>.</operator><name>height</name></name></expr>
}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>place_dest</name><parameter_list>(<parameter><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>cfg</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type> <name>fmt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>video_format_t</name></type> <name>tfmt</name></decl>;</decl_stmt>


<if_stmt><if>if <condition>(<expr><name><name>fmt</name><operator>-&gt;</operator><name>i_sar_den</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>||</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_sar_num</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>tfmt</name> <operator>=</operator> <operator>*</operator><name>fmt</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>tfmt</name><operator>.</operator><name>i_sar_den</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>tfmt</name><operator>.</operator><name>i_sar_num</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>fmt</name> <operator>=</operator> <operator>&amp;</operator><name>tfmt</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<decl_stmt><decl><type><name>vout_display_cfg_t</name></type> <name>tcfg</name> <init>= <expr><operator>*</operator><name>cfg</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vout_display_place_t</name></type> <name>place</name></decl>;</decl_stmt>
<expr_stmt><expr><name><name>tcfg</name><operator>.</operator><name>display</name><operator>.</operator><name>width</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>display_width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>tcfg</name><operator>.</operator><name>display</name><operator>.</operator><name>height</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>display_height</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>tcfg</name><operator>.</operator><name>is_display_filled</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vout_display_PlacePicture</name><argument_list>(<argument><expr><operator>&amp;</operator><name>place</name></expr></argument>, <argument><expr><name>fmt</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>tcfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>dest_rect</name></name> <operator>=</operator> <call><name>place_to_mmal_rect</name><argument_list>(<argument><expr><name>place</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>int</name></type> <name>configure_display</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_DISPLAYREGION_T</name></type> <name>display_region</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>status</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>cfg</name> <operator>&amp;&amp;</operator> <operator>!</operator><name>fmt</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Missing cfg &amp; fmt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><name>EINVAL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>isp_check</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>fmt</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>format</name><operator>-&gt;</operator><name>es</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>par</name><operator>.</operator><name>num</name></name> <operator>=</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_sar_num</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>format</name><operator>-&gt;</operator><name>es</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>par</name><operator>.</operator><name>den</name></name> <operator>=</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_sar_den</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_port_format_commit</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to commit format for input port %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><name>EINVAL</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>fmt</name> <operator>=</operator> <operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>source</name></name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>cfg</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>cfg</name> <operator>=</operator> <name><name>vd</name><operator>-&gt;</operator><name>cfg</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>place_dest</name><argument_list>(<argument><expr><name>sys</name></expr></argument>, <argument><expr><name>cfg</name></expr></argument>, <argument><expr><name>fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>display_region</name><operator>.</operator><name>hdr</name><operator>.</operator><name>id</name></name> <operator>=</operator> <name>MMAL_PARAMETER_DISPLAYREGION</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>display_region</name><operator>.</operator><name>hdr</name><operator>.</operator><name>size</name></name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>MMAL_DISPLAYREGION_T</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
<expr_stmt><expr><name><name>display_region</name><operator>.</operator><name>fullscreen</name></name> <operator>=</operator> <name>MMAL_FALSE</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>display_src_rect</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>display_region</name><operator>.</operator><name>src_rect</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>display_region</name><operator>.</operator><name>dest_rect</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>dest_rect</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>display_region</name><operator>.</operator><name>layer</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>layer</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>display_region</name><operator>.</operator><name>alpha</name></name> <operator>=</operator> <literal type="number">0xff</literal> <operator>|</operator> <operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">29</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>display_region</name><operator>.</operator><name>set</name></name> <operator>=</operator> <name>MMAL_DISPLAY_SET_FULLSCREEN</name> <operator>|</operator> <name>MMAL_DISPLAY_SET_SRC_RECT</name> <operator>|</operator>
<name>MMAL_DISPLAY_SET_DEST_RECT</name> <operator>|</operator> <name>MMAL_DISPLAY_SET_LAYER</name> <operator>|</operator> <name>MMAL_DISPLAY_SET_ALPHA</name></expr>;</expr_stmt>
<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_port_parameter_set</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>display_region</name><operator>.</operator><name>hdr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to set display region (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,
<argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><name>EINVAL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>adjust_refresh_rate</name></name> <operator>=</operator> <call><name>var_InheritBool</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>MMAL_ADJUST_REFRESHRATE_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>native_interlaced</name></name> <operator>=</operator> <call><name>var_InheritBool</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>MMAL_NATIVE_INTERLACED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>adjust_refresh_rate</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>adjust_refresh_rate</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>set_latency_target</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>kill_pool</name><parameter_list>(<parameter><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>pic_pool</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>picture_pool_Release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>pic_pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>pic_pool</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>vd_display</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>p_pic</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>err</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>is_enabled</name></name> <operator>&amp;&amp;</operator>
<operator>(</operator><name>err</name> <operator>=</operator> <call><name>mmal_port_enable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><name>vd_input_port_cb</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Input port enable failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>copy_buf</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier><specifier>const</specifier></type> <name>buf</name> <init>= <expr><name><name>sys</name><operator>-&gt;</operator><name>copy_buf</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>copy_buf</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>mmal_port_send_buffer</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><name>buf</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Send copy buffer to render input failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>isp</name><operator>.</operator><name>pending</name></name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier><specifier>const</specifier></type> <name>buf</name> <init>= <expr><call><name>mmal_queue_wait</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>isp</name><operator>.</operator><name>out_q</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>isp</name><operator>.</operator><name>pending</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>mmal_port_send_buffer</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><name>buf</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Send ISP buffer to render input failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<else>else
<block>{<block_content>
<decl_stmt><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier><specifier>const</specifier></type> <name>pic_buf</name> <init>= <expr><call><name>hw_mmal_pic_buf_replicated</name><argument_list>(<argument><expr><name>p_pic</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>pool</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>pic_buf</name> <operator>==</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Replicated buffer get fail"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>



<if_stmt><if>if <condition>(<expr><call><name>hw_mmal_vlc_pic_to_mmal_fmt_update</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>format</name></name></expr></argument>, <argument><expr><name>p_pic</name></expr></argument>)</argument_list></call></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Reset port format"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><call><name>mmal_port_format_commit</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Input format commit failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>err</name> <operator>=</operator> <call><name>mmal_port_send_buffer</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><name>pic_buf</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name>pic_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Send buffer to input failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>

<block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>sub_no</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier><modifier>*</modifier></type><name>psub_bufs2</name> <init>= <expr><name><name>sys</name><operator>-&gt;</operator><name>subpic_bufs</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>bool</name></type> <name>is_mmal_pic</name> <init>= <expr><call><name>hw_mmal_chroma_is_mmal</name><argument_list>(<argument><expr><name><name>p_pic</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_chroma</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>sub_no</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>sub_no</name> <operator>!=</operator> <name>SUBS_MAX</name></expr>;</condition> <incr><expr><operator>++</operator><name>sub_no</name></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>rv</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sub_buf</name> <init>= <expr><ternary><condition><expr><operator>!</operator><name>is_mmal_pic</name></expr> ?</condition><then> <expr><name>NULL</name></expr> </then><else>:
<expr><call><name>hw_mmal_pic_sub_buf_get</name><argument_list>(<argument><expr><name>p_pic</name></expr></argument>, <argument><expr><name>sub_no</name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>rv</name> <operator>=</operator> <call><name>hw_mmal_subpic_update</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><ternary><condition><expr><name>sub_buf</name> <operator>!=</operator> <name>NULL</name></expr> ?</condition><then> <expr><name>sub_buf</name></expr> </then><else>: <expr><operator>*</operator><name>psub_bufs2</name><operator>++</operator></expr></else></ternary></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>subs</name><index>[<expr><name>sub_no</name></expr>]</index></name><operator>.</operator><name>sub</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>p_pic</name><operator>-&gt;</operator><name>format</name></name></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>dest_rect</name></name></expr></argument>,
<argument><expr><name><name>p_pic</name><operator>-&gt;</operator><name>date</name></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name>rv</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>
</block_content>}</block></for>
</block_content>}</block>

<label><name>fail</name>:</label>
<for>for <control>(<init><decl><type><name>unsigned</name> <name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>!=</operator> <name>SUBS_MAX</name> <operator>&amp;&amp;</operator> <name><name>sys</name><operator>-&gt;</operator><name>subpic_bufs</name><index>[<expr><name>i</name></expr>]</index></name> <operator>!=</operator> <name>NULL</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>subpic_bufs</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>subpic_bufs</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></for>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>next_phase_check</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>sys</name><operator>-&gt;</operator><name>adjust_refresh_rate</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>maintain_phase_sync</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>next_phase_check</name></name> <operator>=</operator> <operator>(</operator><name><name>sys</name><operator>-&gt;</operator><name>next_phase_check</name></name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator> <operator>%</operator> <name>PHASE_CHECK_INTERVAL</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>vd_control</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>query</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>args</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><name>VLC_EGENERIC</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<switch>switch <condition>(<expr><name>query</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>VOUT_DISPLAY_CHANGE_DISPLAY_SIZE</name></expr>:</case>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type><name>cfg</name> <init>= <expr><call><name>va_arg</name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>vout_display_cfg_t</name> <operator>*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>configure_display</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>cfg</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <name>VLC_SUCCESS</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<break>break;</break>
</block_content>}</block>

<case>case <expr><name>VOUT_DISPLAY_CHANGE_SOURCE_ASPECT</name></expr>:</case>
<case>case <expr><name>VOUT_DISPLAY_CHANGE_SOURCE_CROP</name></expr>:</case>
<if_stmt><if>if <condition>(<expr><call><name>configure_display</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>source</name></name></expr></argument>)</argument_list></call> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <name>VLC_SUCCESS</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<break>break;</break>

<case>case <expr><name>VOUT_DISPLAY_RESET_PICTURES</name></expr>:</case>
<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Reset Pictures"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>kill_pool</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>fmt</name></name> <operator>=</operator> <name><name>vd</name><operator>-&gt;</operator><name>source</name></name></expr>;</expr_stmt> 
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_chroma</name></name> <operator>=</operator> <call><name>req_chroma</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><name>ret</name> <operator>=</operator> <name>VLC_SUCCESS</name></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><name>VOUT_DISPLAY_CHANGE_ZOOM</name></expr>:</case>
<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Unsupported control query %d"</literal></expr></argument>, <argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <name>VLC_SUCCESS</name></expr>;</expr_stmt>
<break>break;</break>

<default>default:</default>
<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Unknown control query %d"</literal></expr></argument>, <argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>

<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>vd_manage</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>width</name></decl>, <decl><type ref="prev"/><name>height</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>manage_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>need_configure_display</name></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>query_resolution</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>display_id</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>width</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>height</name></expr></argument>)</argument_list></call> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>display_width</name></name> <operator>=</operator> <name>width</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>display_height</name></name> <operator>=</operator> <name>height</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>need_configure_display</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>manage_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>int</name></type> <name>attach_subpics</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>vd</name></decl></parameter>, <parameter><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name></decl></parameter>,
<parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>subpicture</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>n</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>vzc</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>mmal_decoder_device_t</name> <modifier>*</modifier></type><name>devsys</name> <init>= <expr><call><name>GetMMALDeviceOpaque</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>dec_dev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>sys</name><operator>-&gt;</operator><name>vzc</name></name> <operator>=</operator> <call><name>hw_mmal_vzc_pool_new</name><argument_list>(<argument><expr><name><name>devsys</name><operator>-&gt;</operator><name>is_cma</name></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>==</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to allocate VZC"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_ENOMEM</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>


<for>for <control>(<init><decl><type><name>subpicture_t</name> <modifier>*</modifier></type> <name>spic</name> <init>= <expr><name>subpicture</name></expr></init></decl>;</init> <condition><expr><name>spic</name> <operator>!=</operator> <name>NULL</name></expr>;</condition> <incr><expr><name>spic</name> <operator>=</operator> <name><name>spic</name><operator>-&gt;</operator><name>p_next</name></name></expr></incr>)</control>
<block>{<block_content>
<for>for <control>(<init><decl><type><name>subpicture_region_t</name> <modifier>*</modifier></type><name>sreg</name> <init>= <expr><name><name>spic</name><operator>-&gt;</operator><name>p_region</name></name></expr></init></decl>;</init> <condition><expr><name>sreg</name> <operator>!=</operator> <name>NULL</name></expr>;</condition> <incr><expr><name>sreg</name> <operator>=</operator> <name><name>sreg</name><operator>-&gt;</operator><name>p_next</name></name></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>picture_t</name> <modifier>*</modifier><specifier>const</specifier></type> <name>src</name> <init>= <expr><name><name>sreg</name><operator>-&gt;</operator><name>p_picture</name></name></expr></init></decl>;</decl_stmt>



<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>sys</name><operator>-&gt;</operator><name>subpic_bufs</name><index>[<expr><name>n</name></expr>]</index></name> <operator>=</operator> <macro><name>hw_mmal_vzc_buf_from_pic</name><argument_list>(<argument>sys-&gt;vzc</argument>,
<argument>src</argument>,
<argument>(MMAL_RECT_T){.width = vd-&gt;cfg-&gt;display.width</argument>, <argument>.height=vd-&gt;cfg-&gt;display.height}</argument>,
<argument>sreg-&gt;i_x</argument>, <argument>sreg-&gt;i_y</argument>,
<argument>sreg-&gt;i_alpha</argument>,
<argument>n == <literal type="number">0</literal></argument>)</argument_list></macro><operator>)</operator> <operator>==</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to allocate vzc buffer for subpic"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_ENOMEM</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>++</operator><name>n</name> <operator>==</operator> <name>SUBS_MAX</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></for>
</block_content>}</block></for>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>void</name></type> <name>vd_prepare</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>p_pic</name></decl></parameter>,
<parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>subpicture</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>date</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>date</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vd_manage</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>force_config</name></name> <operator>||</operator>
<name><name>p_pic</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_frame_rate</name></name> <operator>!=</operator> <name><name>sys</name><operator>-&gt;</operator><name>i_frame_rate</name></name> <operator>||</operator>
<name><name>p_pic</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_frame_rate_base</name></name> <operator>!=</operator> <name><name>sys</name><operator>-&gt;</operator><name>i_frame_rate_base</name></name> <operator>||</operator>
<name><name>p_pic</name><operator>-&gt;</operator><name>b_progressive</name></name> <operator>!=</operator> <name><name>sys</name><operator>-&gt;</operator><name>b_progressive</name></name> <operator>||</operator>
<name><name>p_pic</name><operator>-&gt;</operator><name>b_top_field_first</name></name> <operator>!=</operator> <name><name>sys</name><operator>-&gt;</operator><name>b_top_field_first</name></name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>force_config</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>b_top_field_first</name></name> <operator>=</operator> <name><name>p_pic</name><operator>-&gt;</operator><name>b_top_field_first</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>b_progressive</name></name> <operator>=</operator> <name><name>p_pic</name><operator>-&gt;</operator><name>b_progressive</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>i_frame_rate</name></name> <operator>=</operator> <name><name>p_pic</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_frame_rate</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>i_frame_rate_base</name></name> <operator>=</operator> <name><name>p_pic</name><operator>-&gt;</operator><name>format</name><operator>.</operator><name>i_frame_rate_base</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>configure_display</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_pic</name><operator>-&gt;</operator><name>format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>




<if_stmt><if>if <condition>(<expr><name>subpicture</name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>attach_subpics</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>sys</name></expr></argument>, <argument><expr><name>subpicture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><call><name>want_copy</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>copy_buf</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Copy buf not NULL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>copy_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>copy_buf</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>buf</name> <init>= <expr><call><name>mmal_queue_wait</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>copy_pool</name><operator>-&gt;</operator><name>queue</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>mmal_decoder_device_t</name> <modifier>*</modifier></type><name>devsys</name> <init>= <expr><call><name>GetMMALDeviceOpaque</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>dec_dev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>hw_mmal_copy_pic_to_buf</name><argument_list>(<argument><expr><name><name>buf</name><operator>-&gt;</operator><name>data</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>buf</name><operator>-&gt;</operator><name>length</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>format</name></name></expr></argument>, <argument><expr><name>p_pic</name></expr></argument>,
<argument><expr><name><name>devsys</name><operator>-&gt;</operator><name>is_cma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>buf</name><operator>-&gt;</operator><name>flags</name></name> <operator>=</operator> <name>MMAL_BUFFER_HEADER_FLAG_FRAME_END</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>copy_buf</name></name> <operator>=</operator> <name>buf</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>isp_check</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>sys</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>
<return>return;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>void</name></type> <name>vd_control_port_cb</name><parameter_list>(<parameter><decl><type><name>MMAL_PORT_T</name> <modifier>*</modifier></type><name>port</name></decl></parameter>, <parameter><decl><type><name>MMAL_BUFFER_HEADER_T</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name> <init>= <expr><operator>(</operator><name>vout_display_t</name> <operator>*</operator><operator>)</operator><name><name>port</name><operator>-&gt;</operator><name>userdata</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>status</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>buffer</name><operator>-&gt;</operator><name>cmd</name></name> <operator>==</operator> <name>MMAL_EVENT_ERROR</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>status</name> <operator>=</operator> <operator>*</operator><operator>(</operator><name>uint32_t</name> <operator>*</operator><operator>)</operator><name><name>buffer</name><operator>-&gt;</operator><name>data</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"MMAL error %"</literal><name>PRIx32</name><literal type="string">" \"%s\""</literal></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>tvservice_cb</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>callback_data</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>reason</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>param1</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>param2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>reason</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>param1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>param2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name> <init>= <expr><operator>(</operator><name>vout_display_t</name> <operator>*</operator><operator>)</operator><name>callback_data</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>manage_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>need_configure_display</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>manage_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>set_latency_target</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enable</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>status</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MMAL_PARAMETER_AUDIO_LATENCY_TARGET_T</name></type> <name>latency_target</name> <init>= <expr><block>{
<expr><operator>.</operator><name>hdr</name> <operator>=</operator> <block>{ <expr><name>MMAL_PARAMETER_AUDIO_LATENCY_TARGET</name></expr>, <expr>sizeof<operator>(</operator><name>latency_target</name><operator>)</operator></expr> }</block></expr>,
<expr><operator>.</operator><name>enable</name> <operator>=</operator> <name>enable</name> <operator>?</operator> <name>MMAL_TRUE</name> <operator>:</operator> <name>MMAL_FALSE</name></expr>,
<expr><operator>.</operator><name>filter</name> <operator>=</operator> <literal type="number">2</literal></expr>,
<expr><operator>.</operator><name>target</name> <operator>=</operator> <literal type="number">4000</literal></expr>,
<expr><operator>.</operator><name>shift</name> <operator>=</operator> <literal type="number">3</literal></expr>,
<expr><operator>.</operator><name>speed_factor</name> <operator>=</operator> <operator>-</operator><literal type="number">135</literal></expr>,
<expr><operator>.</operator><name>inter_factor</name> <operator>=</operator> <literal type="number">500</literal></expr>,
<expr><operator>.</operator><name>adj_cap</name> <operator>=</operator> <literal type="number">20</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_port_parameter_set</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>latency_target</name><operator>.</operator><name>hdr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to configure latency target on input port %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>adjust_refresh_rate</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>TV_DISPLAY_STATE_T</name></type> <name>display_state</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>TV_SUPPORTED_MODE_NEW_T</name></type> <name><name>supported_modes</name><index>[<expr><name>VC_TV_MAX_MODE_IDS</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>response</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>num_modes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>double</name></type> <name>frame_rate</name> <init>= <expr><operator>(</operator><name>double</name><operator>)</operator><name><name>fmt</name><operator>-&gt;</operator><name>i_frame_rate</name></name> <operator>/</operator> <name><name>fmt</name><operator>-&gt;</operator><name>i_frame_rate_base</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>best_id</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>double</name></type> <name>best_score</name></decl>, <decl><type ref="prev"/><name>score</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vc_tv_get_display_state_id</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>display_id</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>display_state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name><name>display_state</name><operator>.</operator><name>display</name><operator>.</operator><name>hdmi</name><operator>.</operator><name>mode</name></name> <operator>!=</operator> <name>HDMI_MODE_OFF</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>num_modes</name> <operator>=</operator> <call><name>vc_tv_hdmi_get_supported_modes_new_id</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>display_id</name></name></expr></argument>, <argument><expr><name><name>display_state</name><operator>.</operator><name>display</name><operator>.</operator><name>hdmi</name><operator>.</operator><name>group</name></name></expr></argument>,
<argument><expr><name>supported_modes</name></expr></argument>, <argument><expr><name>VC_TV_MAX_MODE_IDS</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>num_modes</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>TV_SUPPORTED_MODE_NEW_T</name> <modifier>*</modifier></type><name>mode</name> <init>= <expr><operator>&amp;</operator><name><name>supported_modes</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>sys</name><operator>-&gt;</operator><name>native_interlaced</name></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>mode</name><operator>-&gt;</operator><name>width</name></name> <operator>!=</operator> <name><name>display_state</name><operator>.</operator><name>display</name><operator>.</operator><name>hdmi</name><operator>.</operator><name>width</name></name> <operator>||</operator>
<name><name>mode</name><operator>-&gt;</operator><name>height</name></name> <operator>!=</operator> <name><name>display_state</name><operator>.</operator><name>display</name><operator>.</operator><name>hdmi</name><operator>.</operator><name>height</name></name> <operator>||</operator>
<name><name>mode</name><operator>-&gt;</operator><name>scan_mode</name></name> <operator>==</operator> <name>HDMI_INTERLACED</name></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>mode</name><operator>-&gt;</operator><name>width</name></name> <operator>!=</operator> <name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_visible_width</name></name> <operator>||</operator>
<name><name>mode</name><operator>-&gt;</operator><name>height</name></name> <operator>!=</operator> <name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_visible_height</name></name></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><ternary><condition><expr><name><name>mode</name><operator>-&gt;</operator><name>scan_mode</name></name> <operator>!=</operator> <name><name>sys</name><operator>-&gt;</operator><name>b_progressive</name></name></expr> ?</condition><then> <expr><name>HDMI_NONINTERLACED</name></expr> </then><else>: <expr><name>HDMI_INTERLACED</name></expr></else></ternary></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>
</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>score</name> <operator>=</operator> <call><name>fmod</name><argument_list>(<argument><expr><name><name>supported_modes</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>frame_rate</name></expr></argument>, <argument><expr><name>frame_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>(</operator><name>best_id</name> <operator>&lt;</operator> <literal type="number">0</literal><operator>)</operator> <operator>||</operator> <operator>(</operator><name>score</name> <operator>&lt;</operator> <name>best_score</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>best_id</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
<expr_stmt><expr><name>best_score</name> <operator>=</operator> <name>score</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>

<if_stmt><if>if<condition>(<expr><operator>(</operator><name>best_id</name> <operator>&gt;=</operator> <literal type="number">0</literal><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><name><name>display_state</name><operator>.</operator><name>display</name><operator>.</operator><name>hdmi</name><operator>.</operator><name>mode</name></name> <operator>!=</operator> <name><name>supported_modes</name><index>[<expr><name>best_id</name></expr>]</index></name><operator>.</operator><name>code</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Info</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Setting HDMI refresh rate to %"</literal><name>PRIu32</name></expr></argument>,
<argument><expr><name><name>supported_modes</name><index>[<expr><name>best_id</name></expr>]</index></name><operator>.</operator><name>frame_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vc_tv_hdmi_power_on_explicit_new_id</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>display_id</name></name></expr></argument>, <argument><expr><name>HDMI_MODE_HDMI</name></expr></argument>,
<argument><expr><name><name>supported_modes</name><index>[<expr><name>best_id</name></expr>]</index></name><operator>.</operator><name>group</name></expr></argument>,
<argument><expr><name><name>supported_modes</name><index>[<expr><name>best_id</name></expr>]</index></name><operator>.</operator><name>code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>native_interlaced</name></name> <operator>&amp;&amp;</operator>
<name><name>supported_modes</name><index>[<expr><name>best_id</name></expr>]</index></name><operator>.</operator><name>scan_mode</name> <operator>==</operator> <name>HDMI_INTERLACED</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>char</name></type> <name>hvs_mode</name> <init>= <expr><ternary><condition><expr><name><name>sys</name><operator>-&gt;</operator><name>b_top_field_first</name></name></expr> ?</condition><then> <expr><literal type="char">'1'</literal></expr> </then><else>: <expr><literal type="char">'2'</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>vc_gencmd</name><argument_list>(<argument><expr><name>response</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"hvs_update_fields %c"</literal></expr></argument>,
<argument><expr><name>hvs_mode</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal> <operator>||</operator> <name><name>response</name><index>[<expr><literal type="number">18</literal></expr>]</index></name> <operator>!=</operator> <name>hvs_mode</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Could not set hvs field mode"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><call><name>msg_Info</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Configured hvs field mode for interlaced %s playback"</literal></expr></argument>,
<argument><expr><ternary><condition><expr><name><name>sys</name><operator>-&gt;</operator><name>b_top_field_first</name></name></expr> ?</condition><then> <expr><literal type="string">"tff"</literal></expr> </then><else>: <expr><literal type="string">"bff"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>maintain_phase_sync</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>MMAL_PARAMETER_VIDEO_RENDER_STATS_T</name></type> <name>render_stats</name> <init>= <expr><block>{
<expr><operator>.</operator><name>hdr</name> <operator>=</operator> <block>{ <expr><name>MMAL_PARAMETER_VIDEO_RENDER_STATS</name></expr>, <expr>sizeof<operator>(</operator><name>render_stats</name><operator>)</operator></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name>frame_duration</name> <init>= <expr><name>CLOCK_FREQ</name> <operator>/</operator>
<operator>(</operator><operator>(</operator><name>double</name><operator>)</operator><name><name>vd</name><operator>-&gt;</operator><name>sys</name><operator>-&gt;</operator><name>i_frame_rate</name></name> <operator>/</operator>
<name><name>vd</name><operator>-&gt;</operator><name>sys</name><operator>-&gt;</operator><name>i_frame_rate_base</name></name><operator>)</operator></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name>phase_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>status</name></decl>;</decl_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_port_parameter_get</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>render_stats</name><operator>.</operator><name>hdr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to read render stats on control port %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>render_stats</name><operator>.</operator><name>valid</name></name></expr>)</condition> <block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>NDEBUG</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"render_stats: match: %u, period: %u ms, phase: %u ms, hvs: %u"</literal></expr></argument>,
<argument><expr><name><name>render_stats</name><operator>.</operator><name>match</name></name></expr></argument>, <argument><expr><name><name>render_stats</name><operator>.</operator><name>period</name></name> <operator>/</operator> <literal type="number">1000</literal></expr></argument>, <argument><expr><name><name>render_stats</name><operator>.</operator><name>phase</name></name> <operator>/</operator> <literal type="number">1000</literal></expr></argument>,
<argument><expr><name><name>render_stats</name><operator>.</operator><name>hvs_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<if_stmt><if>if <condition>(<expr><name><name>render_stats</name><operator>.</operator><name>phase</name></name> <operator>&gt;</operator> <literal type="number">0.1</literal> <operator>*</operator> <name>frame_duration</name> <operator>&amp;&amp;</operator>
<name><name>render_stats</name><operator>.</operator><name>phase</name></name> <operator>&lt;</operator> <literal type="number">0.75</literal> <operator>*</operator> <name>frame_duration</name></expr>)</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>phase_offset</name> <operator>=</operator> <name>frame_duration</name> <operator>*</operator> <name>PHASE_OFFSET_TARGET</name> <operator>-</operator> <name><name>render_stats</name><operator>.</operator><name>phase</name></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>phase_offset</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>phase_offset</name> <operator>+=</operator> <name>frame_duration</name></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name>phase_offset</name> <operator>%=</operator> <name>frame_duration</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>phase_offset</name></name> <operator>+=</operator> <name>phase_offset</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>phase_offset</name></name> <operator>%=</operator> <name>frame_duration</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Apply phase offset of %"</literal><name>PRId32</name><literal type="string">" ms (total offset %"</literal><name>PRId32</name><literal type="string">" ms)"</literal></expr></argument>,
<argument><expr><name>phase_offset</name> <operator>/</operator> <literal type="number">1000</literal></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>phase_offset</name></name> <operator>/</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<expr_stmt><expr><call><name>set_latency_target</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>set_latency_target</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>CloseMmalVout</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type> <name>vd</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sys</name> <init>= <expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>response</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>;</decl_stmt> 

<expr_stmt><expr><call><name>kill_pool</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vc_tv_unregister_callback_full</name><argument_list>(<argument><expr><name>tvservice_cb</name></expr></argument>, <argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<for>for <control>(<init><decl><type><name>unsigned</name> <name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>!=</operator> <name>SUBS_MAX</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control><block type="pseudo"><block_content>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>subpic_bufs</name><index>[<expr><name>i</name></expr>]</index></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>subpic_bufs</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

<for>for <control>(<init><decl><type><name>unsigned</name> <name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>!=</operator> <name>SUBS_MAX</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>vout_subpic_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sub</name> <init>= <expr><name><name>sys</name><operator>-&gt;</operator><name>subs</name></name> <operator>+</operator> <name>i</name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sub</name><operator>-&gt;</operator><name>component</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>hw_mmal_subpic_close</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sub</name><operator>-&gt;</operator><name>sub</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sub</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name><operator>-&gt;</operator><name>is_enabled</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mmal_port_disable</name><argument_list>(<argument><expr><name><name>sub</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sub</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>is_enabled</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mmal_component_disable</name><argument_list>(<argument><expr><name><name>sub</name><operator>-&gt;</operator><name>component</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>mmal_component_release</name><argument_list>(<argument><expr><name><name>sub</name><operator>-&gt;</operator><name>component</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sub</name><operator>-&gt;</operator><name>component</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name> <operator>&amp;&amp;</operator> <name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>is_enabled</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mmal_port_disable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>component</name></name> <operator>&amp;&amp;</operator> <name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name><operator>-&gt;</operator><name>is_enabled</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mmal_port_disable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>copy_buf</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mmal_buffer_header_release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>copy_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name> <operator>!=</operator> <name>NULL</name> <operator>&amp;&amp;</operator> <name><name>sys</name><operator>-&gt;</operator><name>copy_pool</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mmal_port_pool_destroy</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>copy_pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>component</name></name> <operator>&amp;&amp;</operator> <name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>is_enabled</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mmal_component_disable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>pool</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mmal_pool_destroy</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>component</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mmal_component_release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>isp_close</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>hw_mmal_vzc_pool_release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>vzc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>native_interlaced</name></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>vc_gencmd</name><argument_list>(<argument><expr><name>response</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>response</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"hvs_update_fields 0"</literal></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal> <operator>||</operator>
<name><name>response</name><index>[<expr><literal type="number">18</literal></expr>]</index></name> <operator>!=</operator> <literal type="char">'0'</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Could not reset hvs field mode"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>dec_dev</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>vlc_decoder_device_Release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>dec_dev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>sys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<struct><specifier>static</specifier> <specifier>const</specifier> struct <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>num</name></decl>;</decl_stmt>
}</block> <decl><name><name>display_name_to_num</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{<expr><literal type="string">"auto"</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"hdmi-1"</literal></expr>, <expr><name>DISPMANX_ID_HDMI0</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"hdmi-2"</literal></expr>, <expr><name>DISPMANX_ID_HDMI1</name></expr>}</block></expr>,
<expr><block>{<expr><name>NULL</name></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>}</block></expr>
}</block></expr></init></decl>;</struct>

<function><type><specifier>static</specifier> <name>int</name></type> <name>find_display_num</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>name</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i</name></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name><name>display_name_to_num</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>name</name> <operator>!=</operator> <name>NULL</name> <operator>&amp;&amp;</operator> <call><name>strcasecmp</name><argument_list>(<argument><expr><name><name>display_name_to_num</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>name</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control><block type="pseudo"><block_content>
<empty_stmt>;</empty_stmt></block_content></block></for>
<return>return <expr><name><name>display_name_to_num</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>num</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>OpenMmalVout</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>,
<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>fmtp</name></decl></parameter>, <parameter><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type><name>vctx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_DISPLAYREGION_T</name></type> <name>display_region</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MMAL_STATUS_T</name></type> <name>status</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><name>VLC_EGENERIC</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>bool</name></type> <name>needs_copy</name> <init>= <expr><operator>!</operator><call><name>hw_mmal_chroma_is_mmal</name><argument_list>(<argument><expr><name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_chroma</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>MMAL_FOURCC_T</name></type> <name>enc_in</name> <init>= <expr><ternary><condition><expr><name>needs_copy</name></expr> ?</condition><then> <expr><name>MMAL_ENCODING_I420</name></expr> </then><else>:
<expr><call><name>vout_vlc_to_mmal_pic_fourcc</name><argument_list>(<argument><expr><name><name>vd</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>i_chroma</name></name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>sys</name> <operator>=</operator> <call><name>calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>struct <name>vout_display_sys_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>sys</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>sys</name></name> <operator>=</operator> <name>sys</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>vctx</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>dec_dev</name></name> <operator>=</operator> <call><name>vlc_video_context_HoldDevice</name><argument_list>(<argument><expr><name>vctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>dec_dev</name></name> <operator>&amp;&amp;</operator> <name><name>sys</name><operator>-&gt;</operator><name>dec_dev</name><operator>-&gt;</operator><name>type</name></name> <operator>!=</operator> <name>VLC_DECODER_DEVICE_MMAL</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>vlc_decoder_device_Release</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>dec_dev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>dec_dev</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>dec_dev</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>dec_dev</name></name> <operator>=</operator> <call><name>vlc_decoder_device_Create</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>cfg</name><operator>-&gt;</operator><name>window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sys</name><operator>-&gt;</operator><name>dec_dev</name></name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <name><name>sys</name><operator>-&gt;</operator><name>dec_dev</name><operator>-&gt;</operator><name>type</name></name> <operator>!=</operator> <name>VLC_DECODER_DEVICE_MMAL</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Missing decoder device"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_mutex_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>manage_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vc_tv_register_callback</name><argument_list>(<argument><expr><name>tvservice_cb</name></expr></argument>, <argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>layer</name></name> <operator>=</operator> <call><name>var_InheritInteger</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>MMAL_LAYER_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>display_name</name> <init>= <expr><call><name>var_InheritString</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>MMAL_DISPLAY_NAME</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>qt_num</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>display_id</name> <init>= <expr><call><name>find_display_num</name><argument_list>(<argument><expr><name>display_name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>display_id</name></name> <operator>=</operator> <ternary><condition><expr><name>display_id</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr> ?</condition><then> <expr><name>display_id</name></expr> </then><else>: <expr><name>DISPMANX_ID_HDMI</name></expr></else></ternary></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>display_id</name> <operator>&lt;</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Unknown display device: '%s'"</literal></expr></argument>, <argument><expr><name>display_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Display device: %s, qt=%d id=%d display=%d"</literal></expr></argument>, <argument><expr><name>display_name</name></expr></argument>,
<argument><expr><name>qt_num</name></expr></argument>, <argument><expr><name>display_id</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>display_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
</block_content>}</block>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_component_create</name><argument_list>(<argument><expr><name>MMAL_COMPONENT_DEFAULT_VIDEO_RENDERER</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>component</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to create MMAL component %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,
<argument><expr><name>MMAL_COMPONENT_DEFAULT_VIDEO_RENDERER</name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name><operator>-&gt;</operator><name>userdata</name></name> <operator>=</operator> <operator>(</operator>struct <name>MMAL_PORT_USERDATA_T</name> <operator>*</operator><operator>)</operator><name>vd</name></expr>;</expr_stmt>
<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_port_enable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name></name></expr></argument>, <argument><expr><name>vd_control_port_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to enable control port %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>input</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>userdata</name></name> <operator>=</operator> <operator>(</operator>struct <name>MMAL_PORT_USERDATA_T</name> <operator>*</operator><operator>)</operator><name>vd</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>format</name><operator>-&gt;</operator><name>encoding</name></name> <operator>=</operator> <name>enc_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>format</name><operator>-&gt;</operator><name>encoding_variant</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>i_planes</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>display_set_format</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>format</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>port_parameter_set_bool</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><name>MMAL_PARAMETER_ZERO_COPY</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to set zero copy on port %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_port_format_commit</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to commit format for input port %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_size</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_size_recommended</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>needs_copy</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_num</name></name> <operator>=</operator> <literal type="number">30</literal></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_num</name></name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>sys</name><operator>-&gt;</operator><name>copy_pool</name></name> <operator>=</operator> <call><name>mmal_port_pool_create</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_size</name></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>==</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Cannot create copy pool"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>query_resolution</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>display_id</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>display_width</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sys</name><operator>-&gt;</operator><name>display_height</name></name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>display_width</name></name> <operator>=</operator> <name><name>vd</name><operator>-&gt;</operator><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sys</name><operator>-&gt;</operator><name>display_height</name></name> <operator>=</operator> <name><name>vd</name><operator>-&gt;</operator><name>cfg</name><operator>-&gt;</operator><name>display</name><operator>.</operator><name>height</name></name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>place_dest</name><argument_list>(<argument><expr><name>sys</name></expr></argument>, <argument><expr><name><name>vd</name><operator>-&gt;</operator><name>cfg</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>vd</name><operator>-&gt;</operator><name>source</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name><name>display_region</name><operator>.</operator><name>hdr</name><operator>.</operator><name>id</name></name> <operator>=</operator> <name>MMAL_PARAMETER_DISPLAYREGION</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>display_region</name><operator>.</operator><name>hdr</name><operator>.</operator><name>size</name></name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>MMAL_DISPLAYREGION_T</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
<expr_stmt><expr><name><name>display_region</name><operator>.</operator><name>display_num</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>display_id</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>display_region</name><operator>.</operator><name>fullscreen</name></name> <operator>=</operator> <name>MMAL_FALSE</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>display_src_rect</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>display_region</name><operator>.</operator><name>src_rect</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>display_region</name><operator>.</operator><name>dest_rect</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>dest_rect</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>display_region</name><operator>.</operator><name>layer</name></name> <operator>=</operator> <name><name>sys</name><operator>-&gt;</operator><name>layer</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>display_region</name><operator>.</operator><name>set</name></name> <operator>=</operator>
<name>MMAL_DISPLAY_SET_NUM</name> <operator>|</operator>
<name>MMAL_DISPLAY_SET_FULLSCREEN</name> <operator>|</operator> <name>MMAL_DISPLAY_SET_SRC_RECT</name> <operator>|</operator>
<name>MMAL_DISPLAY_SET_DEST_RECT</name> <operator>|</operator> <name>MMAL_DISPLAY_SET_LAYER</name></expr>;</expr_stmt>
<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_port_parameter_set</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>display_region</name><operator>.</operator><name>hdr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to set display region (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,
<argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_port_enable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name></name></expr></argument>, <argument><expr><name>vd_input_port_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to enable input port %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>mmal_component_enable</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to enable component %s (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>sys</name><operator>-&gt;</operator><name>pool</name></name> <operator>=</operator> <call><name>mmal_pool_create</name><argument_list>(<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>input</name><operator>-&gt;</operator><name>buffer_num</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>)</operator> <operator>==</operator> <name>NULL</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to create input pool"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>

<for>for <control>(<init><decl><type><name>unsigned</name> <name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>!=</operator> <name>SUBS_MAX</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>vout_subpic_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>sub</name> <init>= <expr><name><name>sys</name><operator>-&gt;</operator><name>subs</name></name> <operator>+</operator> <name>i</name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>status</name> <operator>=</operator> <call><name>mmal_component_create</name><argument_list>(<argument><expr><name>MMAL_COMPONENT_DEFAULT_VIDEO_RENDERER</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sub</name><operator>-&gt;</operator><name>component</name></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to create subpic component %d"</literal></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>sub</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name><operator>-&gt;</operator><name>userdata</name></name> <operator>=</operator> <operator>(</operator>struct <name>MMAL_PORT_USERDATA_T</name> <operator>*</operator><operator>)</operator><name>vd</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>status</name> <operator>=</operator> <call><name>mmal_port_enable</name><argument_list>(<argument><expr><name><name>sub</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name></name></expr></argument>, <argument><expr><name>vd_control_port_cb</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to enable control port %s on sub %d (status=%"</literal><name>PRIx32</name><literal type="string">" %s)"</literal></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>control</name><operator>-&gt;</operator><name>name</name></name></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><name>status</name></expr></argument>, <argument><expr><call><name>mmal_status_to_string</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>status</name> <operator>=</operator> <call><name>hw_mmal_subpic_open</name><argument_list>(<argument><expr><call><name>VLC_OBJECT</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>sub</name><operator>-&gt;</operator><name>sub</name></name></expr></argument>, <argument><expr><name><name>sub</name><operator>-&gt;</operator><name>component</name><operator>-&gt;</operator><name>input</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>,
<argument><expr><name><name>sys</name><operator>-&gt;</operator><name>display_id</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>layer</name></name> <operator>+</operator> <name>i</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to open subpic %d"</literal></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>status</name> <operator>=</operator> <call><name>mmal_component_enable</name><argument_list>(<argument><expr><name><name>sub</name><operator>-&gt;</operator><name>component</name></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>MMAL_SUCCESS</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><literal type="string">"Failed to enable subpic component %d"</literal></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>


<expr_stmt><expr><name><name>fmtp</name><operator>-&gt;</operator><name>i_chroma</name></name> <operator>=</operator> <call><name>req_chroma</name><argument_list>(<argument><expr><name>fmtp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>info</name></name> <operator>=</operator> <operator>(</operator><name>vout_display_info_t</name><operator>)</operator><block>{
<expr><operator>.</operator><name>subpicture_chromas</name> <operator>=</operator> <name>hw_mmal_vzc_subpicture_chromas</name></expr>
}</block></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>prepare</name></name> <operator>=</operator> <name>vd_prepare</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>display</name></name> <operator>=</operator> <name>vd_display</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>control</name></name> <operator>=</operator> <name>vd_control</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vd</name><operator>-&gt;</operator><name>close</name></name> <operator>=</operator> <name>CloseMmalVout</name></expr>;</expr_stmt>


<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>

<label><name>fail</name>:</label>
<expr_stmt><expr><call><name>CloseMmalVout</name><argument_list>(<argument><expr><name>vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>

</unit>
