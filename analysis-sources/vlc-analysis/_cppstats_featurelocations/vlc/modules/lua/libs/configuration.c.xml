<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\lua\libs\configuration.c">
























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_GNU_SOURCE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_GNU_SOURCE</name></cpp:macro></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../vlc.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../libs.h"</cpp:file></cpp:include>




<function><type><specifier>static</specifier> <name>int</name></type> <name>vlclua_config_get</name><parameter_list>( <parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_name</name> <init>= <expr><call><name>luaL_checkstring</name><argument_list>( <argument><expr><name>L</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<switch>switch<condition>( <expr><call><name>config_GetType</name><argument_list>( <argument><expr><name>psz_name</name></expr></argument> )</argument_list></call></expr> )</condition>
<block>{<block_content>
<case>case <expr><name>VLC_VAR_STRING</name></expr>:</case>
<block>{<block_content>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz</name> <init>= <expr><call><name>config_GetPsz</name><argument_list>( <argument><expr><name>psz_name</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>lua_pushstring</name><argument_list>( <argument><expr><name>L</name></expr></argument>, <argument><expr><name>psz</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>psz</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block>

<case>case <expr><name>VLC_VAR_INTEGER</name></expr>:</case>
<expr_stmt><expr><call><name>lua_pushinteger</name><argument_list>( <argument><expr><name>L</name></expr></argument>, <argument><expr><call><name>config_GetInt</name><argument_list>( <argument><expr><name>psz_name</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><name>VLC_VAR_BOOL</name></expr>:</case>
<expr_stmt><expr><call><name>lua_pushboolean</name><argument_list>( <argument><expr><name>L</name></expr></argument>, <argument><expr><call><name>config_GetInt</name><argument_list>( <argument><expr><name>psz_name</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><name>VLC_VAR_FLOAT</name></expr>:</case>
<expr_stmt><expr><call><name>lua_pushnumber</name><argument_list>( <argument><expr><name>L</name></expr></argument>, <argument><expr><call><name>config_GetFloat</name><argument_list>( <argument><expr><name>psz_name</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>

<default>default:</default>
<return>return <expr><call><name>vlclua_error</name><argument_list>( <argument><expr><name>L</name></expr></argument> )</argument_list></call></expr>;</return>

</block_content>}</block></switch>
<return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>vlclua_config_set</name><parameter_list>( <parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_name</name> <init>= <expr><call><name>luaL_checkstring</name><argument_list>( <argument><expr><name>L</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<switch>switch<condition>( <expr><call><name>config_GetType</name><argument_list>( <argument><expr><name>psz_name</name></expr></argument> )</argument_list></call></expr> )</condition>
<block>{<block_content>
<case>case <expr><name>VLC_VAR_STRING</name></expr>:</case>
<expr_stmt><expr><call><name>config_PutPsz</name><argument_list>( <argument><expr><name>psz_name</name></expr></argument>, <argument><expr><call><name>luaL_checkstring</name><argument_list>( <argument><expr><name>L</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><name>VLC_VAR_INTEGER</name></expr>:</case>
<expr_stmt><expr><call><name>config_PutInt</name><argument_list>( <argument><expr><name>psz_name</name></expr></argument>, <argument><expr><call><name>luaL_checkinteger</name><argument_list>( <argument><expr><name>L</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><name>VLC_VAR_BOOL</name></expr>:</case>
<expr_stmt><expr><call><name>config_PutInt</name><argument_list>( <argument><expr><name>psz_name</name></expr></argument>, <argument><expr><call><name>luaL_checkboolean</name><argument_list>( <argument><expr><name>L</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><name>VLC_VAR_FLOAT</name></expr>:</case>
<expr_stmt><expr><call><name>config_PutFloat</name><argument_list>( <argument><expr><name>psz_name</name></expr></argument>, <argument><expr><call><name>luaL_checknumber</name><argument_list>( <argument><expr><name>L</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>

<default>default:</default>
<return>return <expr><call><name>vlclua_error</name><argument_list>( <argument><expr><name>L</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></switch>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <name>int</name></type> <name>vlclua_datadir</name><parameter_list>( <parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_data</name> <init>= <expr><call><name>config_GetSysPath</name><argument_list>(<argument><expr><name>VLC_PKG_DATA_DIR</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>lua_pushstring</name><argument_list>( <argument><expr><name>L</name></expr></argument>, <argument><expr><name>psz_data</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>psz_data</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>vlclua_userdatadir</name><parameter_list>( <parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>dir</name> <init>= <expr><call><name>config_GetUserDir</name><argument_list>( <argument><expr><name>VLC_USERDATA_DIR</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>lua_pushstring</name><argument_list>( <argument><expr><name>L</name></expr></argument>, <argument><expr><name>dir</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>dir</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>vlclua_homedir</name><parameter_list>( <parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>home</name> <init>= <expr><call><name>config_GetUserDir</name><argument_list>( <argument><expr><name>VLC_HOME_DIR</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>lua_pushstring</name><argument_list>( <argument><expr><name>L</name></expr></argument>, <argument><expr><name>home</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>home</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>vlclua_configdir</name><parameter_list>( <parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>dir</name> <init>= <expr><call><name>config_GetUserDir</name><argument_list>( <argument><expr><name>VLC_CONFIG_DIR</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>lua_pushstring</name><argument_list>( <argument><expr><name>L</name></expr></argument>, <argument><expr><name>dir</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>dir</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>vlclua_cachedir</name><parameter_list>( <parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>dir</name> <init>= <expr><call><name>config_GetUserDir</name><argument_list>( <argument><expr><name>VLC_CACHE_DIR</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>lua_pushstring</name><argument_list>( <argument><expr><name>L</name></expr></argument>, <argument><expr><name>dir</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>dir</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>vlclua_datadir_list</name><parameter_list>( <parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_dirname</name> <init>= <expr><call><name>luaL_checkstring</name><argument_list>( <argument><expr><name>L</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>ppsz_dir_list</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><call><name>vlclua_dir_list</name><argument_list>( <argument><expr><name>psz_dirname</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>ppsz_dir_list</name></expr></argument> )</argument_list></call>
<operator>!=</operator> <name>VLC_SUCCESS</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>lua_newtable</name><argument_list>( <argument><expr><name>L</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<for>for<control>( <init><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>ppsz_dir</name> <init>= <expr><name>ppsz_dir_list</name></expr></init></decl>;</init> <condition><expr><operator>*</operator><name>ppsz_dir</name></expr>;</condition> <incr><expr><name>ppsz_dir</name><operator>++</operator></expr></incr> )</control>
<block>{<block_content>
<expr_stmt><expr><call><name>lua_pushstring</name><argument_list>( <argument><expr><name>L</name></expr></argument>, <argument><expr><operator>*</operator><name>ppsz_dir</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lua_rawseti</name><argument_list>( <argument><expr><name>L</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">2</literal></expr></argument>, <argument><expr><name>i</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>i</name> <operator>++</operator></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>vlclua_dir_list_free</name><argument_list>( <argument><expr><name>ppsz_dir_list</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>




<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>luaL_Reg</name></type> <name><name>vlclua_config_reg</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="string">"get"</literal></expr>, <expr><name>vlclua_config_get</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"set"</literal></expr>, <expr><name>vlclua_config_set</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"datadir"</literal></expr>, <expr><name>vlclua_datadir</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"userdatadir"</literal></expr>, <expr><name>vlclua_userdatadir</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"homedir"</literal></expr>, <expr><name>vlclua_homedir</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"configdir"</literal></expr>, <expr><name>vlclua_configdir</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"cachedir"</literal></expr>, <expr><name>vlclua_cachedir</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"datadir_list"</literal></expr>, <expr><name>vlclua_datadir_list</name></expr> }</block></expr>,
<expr><block>{ <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<function><type><name>void</name></type> <name>luaopen_config</name><parameter_list>( <parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>lua_newtable</name><argument_list>( <argument><expr><name>L</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>luaL_register</name><argument_list>( <argument><expr><name>L</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>vlclua_config_reg</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>lua_setfield</name><argument_list>( <argument><expr><name>L</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"config"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
