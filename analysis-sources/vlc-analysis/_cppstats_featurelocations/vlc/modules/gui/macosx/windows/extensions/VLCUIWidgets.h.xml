<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\gui\macosx\windows\extensions\VLCUIWidgets.h">






















<cpp:empty>#import &lt;Cocoa/Cocoa.h&gt;</cpp:empty>
<cpp:empty>#import &lt;vlc_extensions.h&gt;</cpp:empty>

@<decl_stmt><decl><type><name>class</name></type> <name>VLCDialogGridView</name></decl>;</decl_stmt>

@<decl_stmt><decl><type><name>interface</name></type> <name>VLCDialogButton</name> <range>: <expr><name>NSButton</name>
@<macro><name>property</name> <argument_list>(<argument>readwrite</argument>)</argument_list></macro> <name>extension_widget_t</name> <operator>*</operator><name>widget</name></expr></range></decl>;</decl_stmt>
@<expr_stmt><expr><name>end</name>

@<name>interface</name> <name>VLCDialogPopUpButton</name> <operator>:</operator> <name>NSPopUpButton</name>
@<macro><name>property</name> <argument_list>(<argument>readwrite</argument>)</argument_list></macro> <name>extension_widget_t</name> <operator>*</operator><name>widget</name></expr>;</expr_stmt>
@<expr_stmt><expr><name>end</name>

@<name>interface</name> <name>VLCDialogLabel</name> <operator>:</operator> <name>NSTextField</name>
@<name>end</name>

@<name>interface</name> <name>VLCDialogTextField</name> <operator>:</operator> <name>NSTextField</name>
@<macro><name>property</name> <argument_list>(<argument>readwrite</argument>)</argument_list></macro> <name>extension_widget_t</name> <operator>*</operator><name>widget</name></expr>;</expr_stmt>
@<expr_stmt><expr><name>end</name>

@<name>interface</name> <name>VLCDialogSecureTextField</name> <operator>:</operator> <name>NSSecureTextField</name>
@<macro><name>property</name> <argument_list>(<argument>readwrite</argument>)</argument_list></macro> <name>extension_widget_t</name> <operator>*</operator><name>widget</name></expr>;</expr_stmt>
@<expr_stmt><expr><name>end</name>

@<name>interface</name> <name>VLCDialogWindow</name> <operator>:</operator> <name>NSWindow</name>
@<macro><name>property</name> <argument_list>(<argument>readwrite</argument>)</argument_list></macro> <name>extension_dialog_t</name> <operator>*</operator><name>dialog</name></expr>;</expr_stmt>
@<macro><name>property</name> <argument_list>(<argument>readwrite</argument>)</argument_list></macro> <decl_stmt><decl><type><name>BOOL</name></type> <name>has_lock</name></decl>;</decl_stmt>
@<expr_stmt><expr><name>end</name>


@<name>interface</name> <name>VLCDialogList</name> <operator>:</operator> <name><name>NSTableView</name> <argument_list type="generic">&lt;<argument><expr><name>NSTableViewDataSource</name></expr></argument>&gt;</argument_list></name>
@<macro><name>property</name> <argument_list>(<argument>readwrite</argument>)</argument_list></macro> <name>extension_widget_t</name> <operator>*</operator><name>widget</name></expr>;</expr_stmt>
@<macro><name>property</name> <argument_list>(<argument>readwrite</argument>, <argument>retain</argument>)</argument_list></macro> <decl_stmt><decl><type><name>NSMutableArray</name> <modifier>*</modifier></type><name>contentArray</name></decl>;</decl_stmt>
@<expr_stmt><expr><name>end</name>

@<name>interface</name> <name>VLCDialogGridView</name> <operator>:</operator> <name>NSView</name>

<operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>addSubview</name><operator>:</operator><operator>(</operator><name>NSView</name> <operator>*</operator><operator>)</operator><name>view</name> <name>atRow</name><operator>:</operator><operator>(</operator><name>NSUInteger</name><operator>)</operator><name>row</name> <name>column</name><operator>:</operator><operator>(</operator><name>NSUInteger</name><operator>)</operator><name>column</name> <name>rowSpan</name><operator>:</operator><operator>(</operator><name>NSUInteger</name><operator>)</operator><name>rowSpan</name> <name>colSpan</name><operator>:</operator><operator>(</operator><name>NSUInteger</name><operator>)</operator><name>colSpan</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>NSSize</name><operator>)</operator><name>flexSize</name><operator>:</operator><operator>(</operator><name>NSSize</name><operator>)</operator><name>size</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>updateSubview</name><operator>:</operator><operator>(</operator><name>NSView</name> <operator>*</operator><operator>)</operator><name>view</name>
<name>atRow</name><operator>:</operator><operator>(</operator><name>NSUInteger</name><operator>)</operator><name>row</name>
<name>column</name><operator>:</operator><operator>(</operator><name>NSUInteger</name><operator>)</operator><name>column</name>
<name>rowSpan</name><operator>:</operator><operator>(</operator><name>NSUInteger</name><operator>)</operator><name>rowSpan</name>
<name>colSpan</name><operator>:</operator><operator>(</operator><name>NSUInteger</name><operator>)</operator><name>colSpan</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>-</operator> <operator>(</operator><name>void</name><operator>)</operator><name>removeSubview</name><operator>:</operator><operator>(</operator><name>NSView</name> <operator>*</operator><operator>)</operator><name>view</name></expr>;</expr_stmt>

@<macro><name>property</name> <argument_list>(<argument>readonly</argument>)</argument_list></macro> <decl_stmt><decl><type><name>NSUInteger</name></type> <name>numViews</name></decl>;</decl_stmt>

@<expr><name>end</name></expr>
</unit>
