<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\video_chroma\chain.c">

























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_filter.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_mouse.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_picture.h&gt;</cpp:file></cpp:include>




<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>ActivateConverter</name> <parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>ActivateFilter</name> <parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Destroy</name> <parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<macro><name>vlc_module_begin</name> <argument_list>()</argument_list></macro>
<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"Video filtering using a chain of video filter modules"</literal>)</argument> )</argument_list></macro>
<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"video converter"</literal></argument>, <argument><literal type="number">1</literal></argument> )</argument_list></macro>
<macro><name>set_callbacks</name><argument_list>( <argument>ActivateConverter</argument>, <argument>Destroy</argument> )</argument_list></macro>
<macro><name>add_submodule</name> <argument_list>()</argument_list></macro>
<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"video filter"</literal></argument>, <argument><literal type="number">0</literal></argument> )</argument_list></macro>
<macro><name>set_callbacks</name><argument_list>( <argument>ActivateFilter</argument>, <argument>Destroy</argument> )</argument_list></macro>
<macro><name>vlc_module_end</name> <argument_list>()</argument_list></macro>




<function_decl><type><specifier>static</specifier> <name>picture_t</name> <modifier>*</modifier></type><name>Chain</name> <parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>BuildTransformChain</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>BuildChromaResize</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>BuildChromaChain</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>BuildFilterChain</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>CreateChain</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type><name>p_fmt_mid</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>CreateResizeChromaChain</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type><name>p_fmt_mid</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>filter_t</name> <modifier>*</modifier></type> <name>AppendTransform</name><parameter_list>( <parameter><decl><type><name>filter_chain_t</name> <modifier>*</modifier></type><name>p_chain</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type><name>p_fmt_in</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type><name>p_fmt_out</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>EsFormatMergeSize</name><parameter_list>( <parameter><decl><type><name>es_format_t</name> <modifier>*</modifier></type><name>p_dst</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type><name>p_base</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type><name>p_size</name></decl></parameter> )</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLOWED_CHROMAS_YUV10</name></cpp:macro> <cpp:value>VLC_CODEC_I420_10L, VLC_CODEC_I420_10B, VLC_CODEC_I420_16L</cpp:value></cpp:define> 




<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>vlc_fourcc_t</name></type> <name><name>pi_allowed_chromas_yuv</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>VLC_CODEC_I420</name></expr>,
<expr><name>VLC_CODEC_I422</name></expr>,
<expr><name>ALLOWED_CHROMAS_YUV10</name></expr>,
<expr><name>VLC_CODEC_RGB32</name></expr>,
<expr><name>VLC_CODEC_RGB24</name></expr>,
<expr><name>VLC_CODEC_BGRA</name></expr>,
<expr><literal type="number">0</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>vlc_fourcc_t</name></type> <name><name>pi_allowed_chromas_yuv10</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>ALLOWED_CHROMAS_YUV10</name></expr>,
<expr><name>VLC_CODEC_I420</name></expr>,
<expr><name>VLC_CODEC_I422</name></expr>,
<expr><name>VLC_CODEC_RGB32</name></expr>,
<expr><name>VLC_CODEC_RGB24</name></expr>,
<expr><name>VLC_CODEC_BGRA</name></expr>,
<expr><literal type="number">0</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>vlc_fourcc_t</name> <modifier>*</modifier></type><name>get_allowed_chromas</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<switch>switch <condition>(<expr><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr>)</condition>
<block>{<block_content>
<case>case <expr><name>VLC_CODEC_I420_10L</name></expr>:</case>
<case>case <expr><name>VLC_CODEC_I420_10B</name></expr>:</case>
<case>case <expr><name>VLC_CODEC_I420_16L</name></expr>:</case>
<case>case <expr><name>VLC_CODEC_CVPX_P010</name></expr>:</case>
<case>case <expr><name>VLC_CODEC_D3D9_OPAQUE_10B</name></expr>:</case>
<case>case <expr><name>VLC_CODEC_D3D11_OPAQUE_10B</name></expr>:</case>
<case>case <expr><name>VLC_CODEC_VAAPI_420_10BPP</name></expr>:</case>
<return>return <expr><name>pi_allowed_chromas_yuv10</name></expr>;</return>
<default>default:</default>
<return>return <expr><name>pi_allowed_chromas_yuv</name></expr>;</return>
</block_content>}</block></switch>
</block_content>}</block></function>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>filter_chain_t</name> <modifier>*</modifier></type><name>p_chain</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_video_filter</name></decl>;</decl_stmt>
}</block></struct></type> <name>filter_sys_t</name>;</typedef>


<function><type><specifier>static</specifier> <name>int</name></type> <name>RestartFilterCallback</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><name>char</name> <specifier>const</specifier> <modifier>*</modifier></type><name>psz_name</name></decl></parameter>,
<parameter><decl><type><name>vlc_value_t</name></type> <name>oldval</name></decl></parameter>, <parameter><decl><type><name>vlc_value_t</name></type> <name>newval</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_data</name></decl></parameter> )</parameter_list>
<block>{<block_content> <expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>psz_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>oldval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>newval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_TriggerCallback</name><argument_list>( <argument><expr><operator>(</operator><name>vlc_object_t</name> <operator>*</operator><operator>)</operator><name>p_data</name></expr></argument>, <argument><expr><literal type="string">"video-filter"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <name>picture_t</name> <modifier>*</modifier></type><name>BufferChainNew</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_chain_parent</name> <init>= <expr><name><name>p_filter</name><operator>-&gt;</operator><name>owner</name><operator>.</operator><name>sys</name></name></expr></init></decl>;</decl_stmt>


<return>return <expr><call><name>filter_NewPicture</name><argument_list>( <argument><expr><name>p_chain_parent</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CHAIN_LEVEL_MAX</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>vlc_decoder_device</name> <modifier>*</modifier></type> <name>HoldChainDecoderDevice</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>o</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>sys</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>o</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_chain_parent</name> <init>= <expr><name>sys</name></expr></init></decl>;</decl_stmt>
<return>return <expr><call><name>filter_HoldDecoderDevice</name><argument_list>( <argument><expr><name>p_chain_parent</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name><name>struct</name> <name>filter_video_callbacks</name></name></type> <name>filter_video_chain_cbs</name> <init>=
<expr><block>{
<expr><name>BufferChainNew</name></expr>, <expr><name>HoldChainDecoderDevice</name></expr>,
}</block></expr></init></decl>;</decl_stmt>






<function><type><specifier>static</specifier> <name>int</name></type> <name>Activate</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>, <parameter><function_decl><type><name>int</name></type> (<modifier>*</modifier><name>pf_build</name>)<parameter_list>(<parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>filter_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name> <init>= <expr><name>VLC_EGENERIC</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>p_sys</name> <operator>=</operator> <name><name>p_filter</name><operator>-&gt;</operator><name>p_sys</name></name> <operator>=</operator> <call><name>calloc</name><argument_list>( <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><operator>*</operator><name>p_sys</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><operator>!</operator><name>p_sys</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>filter_owner_t</name></type> <name>owner</name> <init>= <expr><block>{
<expr><operator>.</operator><name>video</name> <operator>=</operator> <operator>&amp;</operator><name>filter_video_chain_cbs</name></expr>,
<expr><operator>.</operator><name>sys</name> <operator>=</operator> <name>p_filter</name></expr>,
}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name> <operator>=</operator> <call><name>filter_chain_NewVideo</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><name><name>p_filter</name><operator>-&gt;</operator><name>b_allow_fmt_out_change</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>owner</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>type</name> <init>= <expr><name>VLC_VAR_INTEGER</name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>( <expr><call><name>var_Type</name><argument_list>( <argument><expr><call><name>vlc_object_parent</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"chain-level"</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>type</name> <operator>|=</operator> <name>VLC_VAR_DOINHERIT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>var_Create</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"chain-level"</literal></expr></argument>, <argument><expr><name>type</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>var_IncInteger</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"chain-level"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>level</name> <init>= <expr><call><name>var_GetInteger</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"chain-level"</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>( <expr><name><name>level</name> <argument_list type="generic">&lt; <argument><expr><literal type="number">0</literal> <operator>||</operator> <name>level</name></expr></argument> &gt;</argument_list></name> <name>CHAIN_LEVEL_MAX</name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Too high level of recursion (%d)"</literal></expr></argument>, <argument><expr><name>level</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name>i_ret</name> <operator>=</operator> <call><name>pf_build</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><call><name>var_Destroy</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"chain-level"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i_ret</name></expr> )</condition>
<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_video_filter</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>filter_DelProxyCallbacks</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_video_filter</name></name></expr></argument>,
<argument><expr><name>RestartFilterCallback</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>filter_chain_Delete</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if<condition>( <expr><name><name>p_filter</name><operator>-&gt;</operator><name>b_allow_fmt_out_change</name></name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>es_format_Clean</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>es_format_Copy</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name></name></expr></argument>,
<argument><expr><call><name>filter_chain_GetFmtOut</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_filter</name><operator>-&gt;</operator><name>vctx_out</name></name> <operator>=</operator> <call><name>filter_chain_GetVideoCtxOut</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name><name>p_filter</name><operator>-&gt;</operator><name>vctx_out</name></name> <operator>==</operator> <call><name>filter_chain_GetVideoCtxOut</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument> )</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_filter</name><operator>-&gt;</operator><name>pf_video_filter</name></name> <operator>=</operator> <name>Chain</name></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>ActivateConverter</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name> <init>= <expr><operator>(</operator><name>filter_t</name> <operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>bool</name></type> <name>b_chroma</name> <init>= <expr><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name> <operator>!=</operator> <name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>bool</name></type> <name>b_resize</name> <init>= <expr><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_width</name></name> <operator>!=</operator> <name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_width</name></name> <operator>||</operator>
<name><name>p_filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>i_height</name></name> <operator>!=</operator> <name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_height</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>bool</name></type> <name>b_chroma_resize</name> <init>= <expr><name>b_chroma</name> <operator>&amp;&amp;</operator> <name>b_resize</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>bool</name></type> <name>b_transform</name> <init>= <expr><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>orientation</name></name> <operator>!=</operator> <name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>orientation</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name>b_chroma</name> <operator>&amp;&amp;</operator> <operator>!</operator><name>b_chroma_resize</name> <operator>&amp;&amp;</operator> <operator>!</operator><name>b_transform</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><call><name>Activate</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><ternary><condition><expr><name>b_transform</name></expr> ?</condition><then> <expr><name>BuildTransformChain</name></expr> </then><else>:
<expr><ternary><condition><expr><name>b_chroma_resize</name></expr> ?</condition><then> <expr><name>BuildChromaResize</name></expr> </then><else>:
<expr><name>BuildChromaChain</name></expr></else></ternary></expr></else></ternary></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>ActivateFilter</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name> <init>= <expr><operator>(</operator><name>filter_t</name> <operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_filter</name><operator>-&gt;</operator><name>b_allow_fmt_out_change</name></name> <operator>||</operator> <name><name>p_filter</name><operator>-&gt;</operator><name>psz_name</name></name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><call><name>var_Type</name><argument_list>( <argument><expr><call><name>vlc_object_parent</name><argument_list>(<argument><expr><name>p_filter</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"chain-filter-level"</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>var_Create</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"chain-filter-level"</literal></expr></argument>, <argument><expr><name>VLC_VAR_INTEGER</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name> <init>= <expr><call><name>Activate</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><name>BuildFilterChain</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>var_Destroy</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"chain-filter-level"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>i_ret</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Destroy</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name> <init>= <expr><operator>(</operator><name>filter_t</name> <operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>filter_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_filter</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_video_filter</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>filter_DelProxyCallbacks</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_video_filter</name></name></expr></argument>,
<argument><expr><name>RestartFilterCallback</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>filter_chain_Delete</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_sys</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <name>picture_t</name> <modifier>*</modifier></type><name>Chain</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>p_pic</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>filter_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_filter</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>
<return>return <expr><call><name>filter_chain_VideoFilter</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument>, <argument><expr><name>p_pic</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>





<function><type><specifier>static</specifier> <name>int</name></type> <name>BuildTransformChain</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter> )</parameter_list>
<block>{<block_content>

<decl_stmt><decl><type><name>es_format_t</name></type> <name>fmt_mid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name></decl>;</decl_stmt>


<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Trying to build transform, then chroma+resize"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>es_format_Copy</name><argument_list>( <argument><expr><operator>&amp;</operator><name>fmt_mid</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_in</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>video_format_TransformTo</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>fmt_mid</name><operator>.</operator><name>video</name></name></expr></argument>, <argument><expr><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>orientation</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>i_ret</name> <operator>=</operator> <call><name>CreateChain</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fmt_mid</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>es_format_Clean</name><argument_list>( <argument><expr><operator>&amp;</operator><name>fmt_mid</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name>i_ret</name> <operator>==</operator> <name>VLC_SUCCESS</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return></block_content></block></if></if_stmt>


<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Trying to build chroma+resize"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>EsFormatMergeSize</name><argument_list>( <argument><expr><operator>&amp;</operator><name>fmt_mid</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_in</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>i_ret</name> <operator>=</operator> <call><name>CreateChain</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fmt_mid</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>es_format_Clean</name><argument_list>( <argument><expr><operator>&amp;</operator><name>fmt_mid</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>i_ret</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>BuildChromaResize</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>es_format_t</name></type> <name>fmt_mid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name></decl>;</decl_stmt>


<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Trying to build resize+chroma"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>EsFormatMergeSize</name><argument_list>( <argument><expr><operator>&amp;</operator><name>fmt_mid</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_in</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>i_ret</name> <operator>=</operator> <call><name>CreateResizeChromaChain</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fmt_mid</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>es_format_Clean</name><argument_list>( <argument><expr><operator>&amp;</operator><name>fmt_mid</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i_ret</name> <operator>==</operator> <name>VLC_SUCCESS</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return></block_content></block></if></if_stmt>


<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Trying to build chroma+resize"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>EsFormatMergeSize</name><argument_list>( <argument><expr><operator>&amp;</operator><name>fmt_mid</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_in</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>i_ret</name> <operator>=</operator> <call><name>CreateChain</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fmt_mid</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>es_format_Clean</name><argument_list>( <argument><expr><operator>&amp;</operator><name>fmt_mid</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name>i_ret</name> <operator>==</operator> <name>VLC_SUCCESS</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>BuildChromaChain</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>es_format_t</name></type> <name>fmt_mid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name> <init>= <expr><name>VLC_EGENERIC</name></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>vlc_fourcc_t</name> <modifier>*</modifier></type><name>pi_allowed_chromas</name> <init>= <expr><call><name>get_allowed_chromas</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name><name>pi_allowed_chromas</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>vlc_fourcc_t</name></type> <name>i_chroma</name> <init>= <expr><name><name>pi_allowed_chromas</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>( <expr><name>i_chroma</name> <operator>==</operator> <name><name>p_filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>i_codec</name></name> <operator>||</operator>
<name>i_chroma</name> <operator>==</operator> <name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>i_codec</name></name></expr> )</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Trying to use chroma %4.4s as middle man"</literal></expr></argument>,
<argument><expr><operator>(</operator><name>char</name><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>i_chroma</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_format_Copy</name><argument_list>( <argument><expr><operator>&amp;</operator><name>fmt_mid</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_in</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fmt_mid</name><operator>.</operator><name>i_codec</name></name> <operator>=</operator>
<name><name>fmt_mid</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name> <operator>=</operator> <name>i_chroma</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fmt_mid</name><operator>.</operator><name>video</name><operator>.</operator><name>i_rmask</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fmt_mid</name><operator>.</operator><name>video</name><operator>.</operator><name>i_gmask</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fmt_mid</name><operator>.</operator><name>video</name><operator>.</operator><name>i_bmask</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>video_format_FixRgb</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>fmt_mid</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i_ret</name> <operator>=</operator> <call><name>CreateChain</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fmt_mid</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>es_format_Clean</name><argument_list>( <argument><expr><operator>&amp;</operator><name>fmt_mid</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name>i_ret</name> <operator>==</operator> <name>VLC_SUCCESS</name></expr> )</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>
</block_content>}</block></for>

<return>return <expr><name>i_ret</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>ChainMouse</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>, <parameter><decl><type><name>vlc_mouse_t</name> <modifier>*</modifier></type><name>p_mouse</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>vlc_mouse_t</name> <modifier>*</modifier></type><name>p_old</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>vlc_mouse_t</name> <modifier>*</modifier></type><name>p_new</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>p_old</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>filter_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_filter</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>
<return>return <expr><call><name>filter_chain_MouseFilter</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument>, <argument><expr><name>p_mouse</name></expr></argument>, <argument><expr><name>p_new</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>BuildFilterChain</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>es_format_t</name></type> <name>fmt_mid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name> <init>= <expr><name>VLC_EGENERIC</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>filter_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_filter</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>vlc_fourcc_t</name> <modifier>*</modifier></type><name>pi_allowed_chromas</name> <init>= <expr><call><name>get_allowed_chromas</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<for>for<control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name><name>pi_allowed_chromas</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>
<block>{<block_content>
<expr_stmt><expr><call><name>filter_chain_Reset</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_in</name></name></expr></argument>, <argument><expr><name><name>p_filter</name><operator>-&gt;</operator><name>vctx_in</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>vlc_fourcc_t</name></type> <name>i_chroma</name> <init>= <expr><name><name>pi_allowed_chromas</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>( <expr><name>i_chroma</name> <operator>==</operator> <name><name>p_filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>i_codec</name></name> <operator>||</operator>
<name>i_chroma</name> <operator>==</operator> <name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>i_codec</name></name></expr> )</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>, <argument><expr><literal type="string">"Trying to use chroma %4.4s as middle man"</literal></expr></argument>,
<argument><expr><operator>(</operator><name>char</name><operator>*</operator><operator>)</operator><operator>&amp;</operator><name>i_chroma</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>es_format_Copy</name><argument_list>( <argument><expr><operator>&amp;</operator><name>fmt_mid</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_in</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fmt_mid</name><operator>.</operator><name>i_codec</name></name> <operator>=</operator>
<name><name>fmt_mid</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name> <operator>=</operator> <name>i_chroma</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fmt_mid</name><operator>.</operator><name>video</name><operator>.</operator><name>i_rmask</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fmt_mid</name><operator>.</operator><name>video</name><operator>.</operator><name>i_gmask</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fmt_mid</name><operator>.</operator><name>video</name><operator>.</operator><name>i_bmask</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>video_format_FixRgb</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>fmt_mid</name><operator>.</operator><name>video</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><call><name>filter_chain_AppendConverter</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>fmt_mid</name></expr></argument> )</argument_list></call> <operator>==</operator> <name>VLC_SUCCESS</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_video_filter</name></name> <operator>=</operator>
<call><name>filter_chain_AppendFilter</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument>,
<argument><expr><name><name>p_filter</name><operator>-&gt;</operator><name>psz_name</name></name></expr></argument>, <argument><expr><name><name>p_filter</name><operator>-&gt;</operator><name>p_cfg</name></name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>fmt_mid</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_video_filter</name></name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>filter_AddProxyCallbacks</name><argument_list>( <argument><expr><name>p_filter</name></expr></argument>,
<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_video_filter</name></name></expr></argument>,
<argument><expr><name>RestartFilterCallback</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_video_filter</name><operator>-&gt;</operator><name>pf_video_mouse</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>p_filter</name><operator>-&gt;</operator><name>pf_video_mouse</name></name> <operator>=</operator> <name>ChainMouse</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>es_format_Clean</name><argument_list>( <argument><expr><operator>&amp;</operator><name>fmt_mid</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>i_ret</name> <operator>=</operator> <name>VLC_SUCCESS</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_filter</name><operator>-&gt;</operator><name>vctx_out</name></name> <operator>=</operator> <call><name>filter_chain_GetVideoCtxOut</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>es_format_Clean</name><argument_list>( <argument><expr><operator>&amp;</operator><name>fmt_mid</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
<if_stmt><if>if<condition>( <expr><name>i_ret</name> <operator>!=</operator> <name>VLC_SUCCESS</name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>filter_chain_Reset</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_in</name></name></expr></argument>, <argument><expr><name><name>p_filter</name><operator>-&gt;</operator><name>vctx_in</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>i_ret</name></expr>;</return>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <name>int</name></type> <name>CreateChain</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type><name>p_fmt_mid</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>filter_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_filter</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>filter_chain_Reset</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_in</name></name></expr></argument>, <argument><expr><name><name>p_filter</name><operator>-&gt;</operator><name>vctx_in</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_in</name><operator>.</operator><name>video</name><operator>.</operator><name>orientation</name></name> <operator>!=</operator> <name><name>p_fmt_mid</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>orientation</name></name></expr>)</condition>
<block>{<block_content>
<decl_stmt><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_transform</name> <init>= <expr><call><name>AppendTransform</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_in</name></name></expr></argument>, <argument><expr><name>p_fmt_mid</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name>p_transform</name> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>( <expr><call><name>es_format_IsSimilar</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>p_transform</name><operator>-&gt;</operator><name>fmt_out</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name></name></expr></argument> )</argument_list></call></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>p_filter</name><operator>-&gt;</operator><name>vctx_out</name></name> <operator>=</operator> <name><name>p_transform</name><operator>-&gt;</operator><name>vctx_out</name></name></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<else>else
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><call><name>filter_chain_AppendConverter</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument>, <argument><expr><name>p_fmt_mid</name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_fmt_mid</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>orientation</name></name> <operator>!=</operator> <name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>orientation</name></name></expr>)</condition>
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><call><name>AppendTransform</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument>, <argument><expr><name>p_fmt_mid</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name></name></expr></argument> )</argument_list></call> <operator>==</operator> <name>NULL</name></expr> )</condition><block type="pseudo"><block_content>
<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>
</block_content>}</block></if>
<else>else
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><call><name>filter_chain_AppendConverter</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name></name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo"><block_content>
<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><name><name>p_filter</name><operator>-&gt;</operator><name>vctx_out</name></name> <operator>=</operator> <call><name>filter_chain_GetVideoCtxOut</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
<label><name>error</name>:</label>

<expr_stmt><expr><call><name>filter_chain_Clear</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>CreateResizeChromaChain</name><parameter_list>( <parameter><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type><name>p_fmt_mid</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>filter_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_filter</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>filter_chain_Reset</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_in</name></name></expr></argument>, <argument><expr><name><name>p_filter</name><operator>-&gt;</operator><name>vctx_in</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_ret</name> <init>= <expr><call><name>filter_chain_AppendConverter</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument>, <argument><expr><name>p_fmt_mid</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>( <expr><name>i_ret</name> <operator>!=</operator> <name>VLC_SUCCESS</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>i_ret</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_filter</name><operator>-&gt;</operator><name>b_allow_fmt_out_change</name></name></expr> )</condition>
<block>{<block_content>




<decl_stmt><decl><type><name>es_format_t</name></type> <name>fmt_out</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>es_format_Copy</name><argument_list>( <argument><expr><operator>&amp;</operator><name>fmt_out</name></expr></argument>,
<argument><expr><call><name>filter_chain_GetFmtOut</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name> <operator>=</operator> <name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>i_ret</name> <operator>=</operator> <call><name>filter_chain_AppendConverter</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>fmt_out</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>es_format_Clean</name><argument_list>( <argument><expr><operator>&amp;</operator><name>fmt_out</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name>i_ret</name> <operator>=</operator> <call><name>filter_chain_AppendConverter</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_filter</name><operator>-&gt;</operator><name>fmt_out</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if<condition>( <expr><name>i_ret</name> <operator>!=</operator> <name>VLC_SUCCESS</name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>filter_chain_Clear</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name><name>p_filter</name><operator>-&gt;</operator><name>vctx_out</name></name> <operator>=</operator> <call><name>filter_chain_GetVideoCtxOut</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_chain</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<return>return <expr><name>i_ret</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>filter_t</name> <modifier>*</modifier></type> <name>AppendTransform</name><parameter_list>( <parameter><decl><type><name>filter_chain_t</name> <modifier>*</modifier></type><name>p_chain</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type><name>p_fmt1</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type><name>p_fmt2</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>video_transform_t</name></type> <name>transform</name> <init>= <expr><call><name>video_format_GetTransform</name><argument_list>(<argument><expr><name><name>p_fmt1</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>orientation</name></name></expr></argument>, <argument><expr><name><name>p_fmt2</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>orientation</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>type</name></decl>;</decl_stmt>

<switch>switch <condition>( <expr><name>transform</name></expr> )</condition> <block>{<block_content>

<case>case <expr><name>TRANSFORM_R90</name></expr>:</case>
<expr_stmt><expr><name>type</name> <operator>=</operator> <literal type="string">"90"</literal></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>TRANSFORM_R180</name></expr>:</case>
<expr_stmt><expr><name>type</name> <operator>=</operator> <literal type="string">"180"</literal></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>TRANSFORM_R270</name></expr>:</case>
<expr_stmt><expr><name>type</name> <operator>=</operator> <literal type="string">"270"</literal></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>TRANSFORM_HFLIP</name></expr>:</case>
<expr_stmt><expr><name>type</name> <operator>=</operator> <literal type="string">"hflip"</literal></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>TRANSFORM_VFLIP</name></expr>:</case>
<expr_stmt><expr><name>type</name> <operator>=</operator> <literal type="string">"vflip"</literal></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>TRANSFORM_TRANSPOSE</name></expr>:</case>
<expr_stmt><expr><name>type</name> <operator>=</operator> <literal type="string">"transpose"</literal></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>TRANSFORM_ANTI_TRANSPOSE</name></expr>:</case>
<expr_stmt><expr><name>type</name> <operator>=</operator> <literal type="string">"antitranspose"</literal></expr>;</expr_stmt>
<break>break;</break>
<default>default:</default>
<expr_stmt><expr><name>type</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>

<if_stmt><if>if<condition>( <expr><operator>!</operator><name>type</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>config_chain_t</name> <modifier>*</modifier></type><name>cfg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>config</name><index>[<expr><literal type="number">100</literal></expr>]</index></name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>snprintf</name><argument_list>( <argument><expr><name>config</name></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><literal type="string">"transform{type=%s}"</literal></expr></argument>, <argument><expr><name>type</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>next</name> <init>= <expr><call><name>config_ChainCreate</name><argument_list>( <argument><expr><operator>&amp;</operator><name>name</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>cfg</name></expr></argument>, <argument><expr><name>config</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>filter_t</name> <modifier>*</modifier></type><name>p_filter</name> <init>= <expr><call><name>filter_chain_AppendFilter</name><argument_list>( <argument><expr><name>p_chain</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>cfg</name></expr></argument>, <argument><expr><name>p_fmt2</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>config_ChainDestroy</name><argument_list>(<argument><expr><name>cfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>p_filter</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>EsFormatMergeSize</name><parameter_list>( <parameter><decl><type><name>es_format_t</name> <modifier>*</modifier></type><name>p_dst</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type><name>p_base</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type><name>p_size</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>es_format_Copy</name><argument_list>( <argument><expr><name>p_dst</name></expr></argument>, <argument><expr><name>p_base</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_dst</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>i_width</name></name> <operator>=</operator> <name><name>p_size</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>i_width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_dst</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>i_height</name></name> <operator>=</operator> <name><name>p_size</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>i_height</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_dst</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>i_visible_width</name></name> <operator>=</operator> <name><name>p_size</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>i_visible_width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_dst</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>i_visible_height</name></name> <operator>=</operator> <name><name>p_size</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>i_visible_height</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_dst</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>i_x_offset</name></name> <operator>=</operator> <name><name>p_size</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>i_x_offset</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_dst</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>i_y_offset</name></name> <operator>=</operator> <name><name>p_size</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>i_y_offset</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_dst</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>orientation</name></name> <operator>=</operator> <name><name>p_size</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>orientation</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_dst</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>i_sar_num</name></name> <operator>=</operator> <name><name>p_size</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>i_sar_num</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_dst</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>i_sar_den</name></name> <operator>=</operator> <name><name>p_size</name><operator>-&gt;</operator><name>video</name><operator>.</operator><name>i_sar_den</name></name></expr>;</expr_stmt>
</block_content>}</block></function>

</unit>
