<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\video_chroma\dxgi_fmt.c">





















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_es.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"dxgi_fmt.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>DXGI_FORMAT</name></type> <name>format</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_fourcc_t</name></type> <name>vlc_format</name></decl>;</decl_stmt>
}</block></struct></type> <name>dxgi_format_t</name>;</typedef>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>dxgi_format_t</name></type> <name><name>dxgi_formats</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="string">"NV12"</literal></expr>, <expr><name>DXGI_FORMAT_NV12</name></expr>, <expr><name>VLC_CODEC_NV12</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"I420_OPAQUE"</literal></expr>, <expr><name>DXGI_FORMAT_420_OPAQUE</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"RGBA"</literal></expr>, <expr><name>DXGI_FORMAT_R8G8B8A8_UNORM</name></expr>, <expr><name>VLC_CODEC_RGBA</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"RGBA_SRGB"</literal></expr>, <expr><name>DXGI_FORMAT_R8G8B8A8_UNORM_SRGB</name></expr>, <expr><name>VLC_CODEC_RGBA</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"BGRX"</literal></expr>, <expr><name>DXGI_FORMAT_B8G8R8X8_UNORM</name></expr>, <expr><name>VLC_CODEC_RGB32</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"BGRA"</literal></expr>, <expr><name>DXGI_FORMAT_B8G8R8A8_UNORM</name></expr>, <expr><name>VLC_CODEC_BGRA</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"BGRA_SRGB"</literal></expr>, <expr><name>DXGI_FORMAT_B8G8R8A8_UNORM_SRGB</name></expr>, <expr><name>VLC_CODEC_BGRA</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"AYUV"</literal></expr>, <expr><name>DXGI_FORMAT_AYUV</name></expr>, <expr><name>VLC_CODEC_VUYA</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"YUY2"</literal></expr>, <expr><name>DXGI_FORMAT_YUY2</name></expr>, <expr><name>VLC_CODEC_YUYV</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"AI44"</literal></expr>, <expr><name>DXGI_FORMAT_AI44</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"P8"</literal></expr>, <expr><name>DXGI_FORMAT_P8</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"A8P8"</literal></expr>, <expr><name>DXGI_FORMAT_A8P8</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"B5G6R5"</literal></expr>, <expr><name>DXGI_FORMAT_B5G6R5_UNORM</name></expr>, <expr><name>VLC_CODEC_RGB16</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"Y416"</literal></expr>, <expr><name>DXGI_FORMAT_Y416</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"P010"</literal></expr>, <expr><name>DXGI_FORMAT_P010</name></expr>, <expr><name>VLC_CODEC_P010</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"P016"</literal></expr>, <expr><name>DXGI_FORMAT_P016</name></expr>, <expr><name>VLC_CODEC_P016</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"Y210"</literal></expr>, <expr><name>DXGI_FORMAT_Y210</name></expr>, <expr><name>VLC_CODEC_Y210</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"Y410"</literal></expr>, <expr><name>DXGI_FORMAT_Y410</name></expr>, <expr><name>VLC_CODEC_Y410</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"NV11"</literal></expr>, <expr><name>DXGI_FORMAT_NV11</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"RGB10A2"</literal></expr>, <expr><name>DXGI_FORMAT_R10G10B10A2_UNORM</name></expr>, <expr><name>VLC_CODEC_RGBA10</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"RGB16"</literal></expr>, <expr><name>DXGI_FORMAT_R16G16B16A16_UNORM</name></expr>, <expr><name>VLC_CODEC_RGBA64</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"RGB16_FLOAT"</literal></expr>, <expr><name>DXGI_FORMAT_R16G16B16A16_FLOAT</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"UNKNOWN"</literal></expr>, <expr><name>DXGI_FORMAT_UNKNOWN</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>d3d_format_t</name></type> <name><name>d3d_formats</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="string">"NV12"</literal></expr>, <expr><name>DXGI_FORMAT_NV12</name></expr>, <expr><name>VLC_CODEC_NV12</name></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_R8_UNORM</name></expr>, <expr><name>DXGI_FORMAT_R8G8_UNORM</name></expr> }</block></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"VA_NV12"</literal></expr>, <expr><name>DXGI_FORMAT_NV12</name></expr>, <expr><name>VLC_CODEC_D3D11_OPAQUE</name></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_R8_UNORM</name></expr>, <expr><name>DXGI_FORMAT_R8G8_UNORM</name></expr> }</block></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"P010"</literal></expr>, <expr><name>DXGI_FORMAT_P010</name></expr>, <expr><name>VLC_CODEC_P010</name></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_R16_UNORM</name></expr>, <expr><name>DXGI_FORMAT_R16G16_UNORM</name></expr> }</block></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"VA_P010"</literal></expr>, <expr><name>DXGI_FORMAT_P010</name></expr>, <expr><name>VLC_CODEC_D3D11_OPAQUE_10B</name></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_R16_UNORM</name></expr>, <expr><name>DXGI_FORMAT_R16G16_UNORM</name></expr> }</block></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"VA_AYUV"</literal></expr>, <expr><name>DXGI_FORMAT_AYUV</name></expr>, <expr><name>VLC_CODEC_D3D11_OPAQUE</name></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_R8G8B8A8_UNORM</name></expr> }</block></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"YUY2"</literal></expr>, <expr><name>DXGI_FORMAT_YUY2</name></expr>, <expr><name>VLC_CODEC_YUYV</name></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_R8G8B8A8_UNORM</name></expr> }</block></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"VA_YUY2"</literal></expr>, <expr><name>DXGI_FORMAT_YUY2</name></expr>, <expr><name>VLC_CODEC_D3D11_OPAQUE</name></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_R8G8B8A8_UNORM</name></expr> }</block></expr> }</block></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>BROKEN_PIXEL</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr><block>{ <expr><literal type="string">"Y416"</literal></expr>, <expr><name>DXGI_FORMAT_Y416</name></expr>, <expr><name>VLC_CODEC_I444_16L</name></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_R16G16B16A16_UINT</name></expr> }</block></expr> }</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><block>{ <expr><literal type="string">"VA_Y210"</literal></expr>, <expr><name>DXGI_FORMAT_Y210</name></expr>, <expr><name>VLC_CODEC_D3D11_OPAQUE_10B</name></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_R16G16B16A16_UNORM</name></expr> }</block></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"VA_Y410"</literal></expr>, <expr><name>DXGI_FORMAT_Y410</name></expr>, <expr><name>VLC_CODEC_D3D11_OPAQUE_10B</name></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_R10G10B10A2_UNORM</name></expr> }</block></expr> }</block></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>UNTESTED</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr><block>{ <expr><literal type="string">"Y210"</literal></expr>, <expr><name>DXGI_FORMAT_Y210</name></expr>, <expr><name>VLC_CODEC_I422_10L</name></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_R16G16B16A16_UNORM</name></expr> }</block></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"Y410"</literal></expr>, <expr><name>DXGI_FORMAT_Y410</name></expr>, <expr><name>VLC_CODEC_I444</name></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_R10G10B10A2_UNORM</name></expr> }</block></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"NV11"</literal></expr>, <expr><name>DXGI_FORMAT_NV11</name></expr>, <expr><name>VLC_CODEC_I411</name></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_R8_UNORM</name></expr>, <expr><name>DXGI_FORMAT_R8G8_UNORM</name></expr>}</block></expr> }</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><block>{ <expr><literal type="string">"I420"</literal></expr>, <expr><name>DXGI_FORMAT_UNKNOWN</name></expr>, <expr><name>VLC_CODEC_I420</name></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_R8_UNORM</name></expr>, <expr><name>DXGI_FORMAT_R8_UNORM</name></expr>, <expr><name>DXGI_FORMAT_R8_UNORM</name></expr> }</block></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"I420_10"</literal></expr>, <expr><name>DXGI_FORMAT_UNKNOWN</name></expr>, <expr><name>VLC_CODEC_I420_10L</name></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_R16_UNORM</name></expr>, <expr><name>DXGI_FORMAT_R16_UNORM</name></expr>, <expr><name>DXGI_FORMAT_R16_UNORM</name></expr> }</block></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"YUVA"</literal></expr>, <expr><name>DXGI_FORMAT_UNKNOWN</name></expr>, <expr><name>VLC_CODEC_YUVA</name></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_R8_UNORM</name></expr>, <expr><name>DXGI_FORMAT_R8_UNORM</name></expr>, <expr><name>DXGI_FORMAT_R8_UNORM</name></expr>, <expr><name>DXGI_FORMAT_R8_UNORM</name></expr> }</block></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"I444_16"</literal></expr>, <expr><name>DXGI_FORMAT_UNKNOWN</name></expr>, <expr><name>VLC_CODEC_I444_16L</name></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_R16_UNORM</name></expr>, <expr><name>DXGI_FORMAT_R16_UNORM</name></expr>, <expr><name>DXGI_FORMAT_R16_UNORM</name></expr> }</block></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"B8G8R8A8"</literal></expr>, <expr><name>DXGI_FORMAT_B8G8R8A8_UNORM</name></expr>, <expr><name>VLC_CODEC_BGRA</name></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_B8G8R8A8_UNORM</name></expr> }</block></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"VA_BGRA"</literal></expr>, <expr><name>DXGI_FORMAT_B8G8R8A8_UNORM</name></expr>, <expr><name>VLC_CODEC_D3D11_OPAQUE_BGRA</name></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_B8G8R8A8_UNORM</name></expr> }</block></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"R8G8B8A8"</literal></expr>, <expr><name>DXGI_FORMAT_R8G8B8A8_UNORM</name></expr>, <expr><name>VLC_CODEC_RGBA</name></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_R8G8B8A8_UNORM</name></expr> }</block></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"VA_RGBA"</literal></expr>, <expr><name>DXGI_FORMAT_R8G8B8A8_UNORM</name></expr>, <expr><name>VLC_CODEC_D3D11_OPAQUE_RGBA</name></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_R8G8B8A8_UNORM</name></expr> }</block></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"R8G8B8X8"</literal></expr>, <expr><name>DXGI_FORMAT_B8G8R8X8_UNORM</name></expr>, <expr><name>VLC_CODEC_RGB32</name></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_B8G8R8X8_UNORM</name></expr> }</block></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"RGBA64"</literal></expr>, <expr><name>DXGI_FORMAT_R16G16B16A16_UNORM</name></expr>, <expr><name>VLC_CODEC_RGBA64</name></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_R16G16B16A16_UNORM</name></expr> }</block></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"RGB10A2"</literal></expr>, <expr><name>DXGI_FORMAT_R10G10B10A2_UNORM</name></expr>, <expr><name>VLC_CODEC_RGBA10</name></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_R10G10B10A2_UNORM</name></expr> }</block></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"VA_RGB10"</literal></expr>, <expr><name>DXGI_FORMAT_R10G10B10A2_UNORM</name></expr>, <expr><name>VLC_CODEC_D3D11_OPAQUE_RGBA</name></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_R10G10B10A2_UNORM</name></expr> }</block></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"AYUV"</literal></expr>, <expr><name>DXGI_FORMAT_AYUV</name></expr>, <expr><name>VLC_CODEC_VUYA</name></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_R8G8B8A8_UNORM</name></expr> }</block></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"B5G6R5"</literal></expr>, <expr><name>DXGI_FORMAT_B5G6R5_UNORM</name></expr>, <expr><name>VLC_CODEC_RGB16</name></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_B5G6R5_UNORM</name></expr> }</block></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"I420_OPAQUE"</literal></expr>, <expr><name>DXGI_FORMAT_420_OPAQUE</name></expr>, <expr><name>VLC_CODEC_D3D11_OPAQUE</name></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><block>{ <expr><name>DXGI_FORMAT_UNKNOWN</name></expr> }</block></expr> }</block></expr>,

<expr><block>{ <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><block>{}</block></expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>DxgiFormatToStr</name><parameter_list>(<parameter><decl><type><name>DXGI_FORMAT</name></type> <name>format</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<for>for <control>(<init><decl><type><specifier>const</specifier> <name>dxgi_format_t</name> <modifier>*</modifier></type><name>f</name> <init>= <expr><name>dxgi_formats</name></expr></init></decl>;</init> <condition><expr><name><name>f</name><operator>-&gt;</operator><name>name</name></name> <operator>!=</operator> <name>NULL</name></expr>;</condition> <incr><expr><operator>++</operator><name>f</name></expr></incr>)</control>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>f</name><operator>-&gt;</operator><name>format</name></name> <operator>==</operator> <name>format</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name><name>f</name><operator>-&gt;</operator><name>name</name></name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></for>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>vlc_fourcc_t</name></type> <name>DxgiFormatFourcc</name><parameter_list>(<parameter><decl><type><name>DXGI_FORMAT</name></type> <name>format</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<for>for <control>(<init><decl><type><specifier>const</specifier> <name>dxgi_format_t</name> <modifier>*</modifier></type><name>f</name> <init>= <expr><name>dxgi_formats</name></expr></init></decl>;</init> <condition><expr><name><name>f</name><operator>-&gt;</operator><name>name</name></name> <operator>!=</operator> <name>NULL</name></expr>;</condition> <incr><expr><operator>++</operator><name>f</name></expr></incr>)</control>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>f</name><operator>-&gt;</operator><name>format</name></name> <operator>==</operator> <name>format</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name><name>f</name><operator>-&gt;</operator><name>vlc_format</name></name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></for>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>DXGI_FORMAT</name></type> <name>DxgiFourccFormat</name><parameter_list>(<parameter><decl><type><name>vlc_fourcc_t</name></type> <name>fcc</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<for>for <control>(<init><decl><type><specifier>const</specifier> <name>dxgi_format_t</name> <modifier>*</modifier></type><name>f</name> <init>= <expr><name>dxgi_formats</name></expr></init></decl>;</init> <condition><expr><name><name>f</name><operator>-&gt;</operator><name>name</name></name> <operator>!=</operator> <name>NULL</name></expr>;</condition> <incr><expr><operator>++</operator><name>f</name></expr></incr>)</control>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>f</name><operator>-&gt;</operator><name>vlc_format</name></name> <operator>==</operator> <name>fcc</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name><name>f</name><operator>-&gt;</operator><name>format</name></name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></for>
<return>return <expr><name>DXGI_FORMAT_UNKNOWN</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>d3d_format_t</name> <modifier>*</modifier></type><name>GetRenderFormatList</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name>d3d_formats</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>DxgiFormatMask</name><parameter_list>(<parameter><decl><type><name>DXGI_FORMAT</name></type> <name>format</name></decl></parameter>, <parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>format</name> <operator>==</operator> <name>DXGI_FORMAT_B8G8R8X8_UNORM</name> <operator>||</operator> <name>format</name> <operator>==</operator> <name>DXGI_FORMAT_B8G8R8A8_UNORM</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_rmask</name></name> <operator>=</operator> <literal type="number">0x0000ff00</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_gmask</name></name> <operator>=</operator> <literal type="number">0x00ff0000</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fmt</name><operator>-&gt;</operator><name>i_bmask</name></name> <operator>=</operator> <literal type="number">0xff000000</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>DxgiVendorStr</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>gpu_vendor</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct><specifier>static</specifier> <specifier>const</specifier> struct <block>{
<decl_stmt><decl><type><name>unsigned</name></type> <name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>name</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt>
}</block> <decl><name><name>vendors</name> <index>[]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><name>GPU_MANUFACTURER_AMD</name></expr>, <expr><literal type="string">"ATI"</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>GPU_MANUFACTURER_NVIDIA</name></expr>, <expr><literal type="string">"NVIDIA"</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>GPU_MANUFACTURER_VIA</name></expr>, <expr><literal type="string">"VIA"</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>GPU_MANUFACTURER_INTEL</name></expr>, <expr><literal type="string">"Intel"</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>GPU_MANUFACTURER_S3</name></expr>, <expr><literal type="string">"S3 Graphics"</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>GPU_MANUFACTURER_QUALCOMM</name></expr>, <expr><literal type="string">"Qualcomm"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="string">"Unknown"</literal></expr> }</block></expr>
}</block></expr></init></decl>;</struct>

<decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name><name>vendors</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>id</name> <operator>!=</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>vendors</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>id</name> <operator>==</operator> <name>gpu_vendor</name></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>
</block_content>}</block></for>
<return>return <expr><name><name>vendors</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>name</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>UINT</name></type> <name>DxgiResourceCount</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>d3d_format_t</name> <modifier>*</modifier></type><name>d3d_fmt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<for>for <control>(<init><decl><type><name>UINT</name></type> <name>count</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>count</name><operator>&lt;</operator><name>D3D11_MAX_SHADER_VIEW</name></expr>;</condition> <incr><expr><name>count</name><operator>++</operator></expr></incr>)</control>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>d3d_fmt</name><operator>-&gt;</operator><name>resourceFormat</name><index>[<expr><name>count</name></expr>]</index></name> <operator>==</operator> <name>DXGI_FORMAT_UNKNOWN</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>count</name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></for>
<return>return <expr><name>D3D11_MAX_SHADER_VIEW</name></expr>;</return>
</block_content>}</block></function>
</unit>
