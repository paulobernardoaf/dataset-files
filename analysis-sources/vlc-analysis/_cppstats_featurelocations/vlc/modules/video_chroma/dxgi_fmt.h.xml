<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\video_chroma\dxgi_fmt.h">





















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>VLC_VIDEOCHROMA_DXGI_FMT_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_VIDEOCHROMA_DXGI_FMT_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dxgi.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dxgiformat.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_fourcc.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GPU_MANUFACTURER_AMD</name></cpp:macro> <cpp:value>0x1002</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GPU_MANUFACTURER_NVIDIA</name></cpp:macro> <cpp:value>0x10DE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GPU_MANUFACTURER_VIA</name></cpp:macro> <cpp:value>0x1106</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GPU_MANUFACTURER_INTEL</name></cpp:macro> <cpp:value>0x8086</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GPU_MANUFACTURER_S3</name></cpp:macro> <cpp:value>0x5333</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GPU_MANUFACTURER_QUALCOMM</name></cpp:macro> <cpp:value>0x4D4F4351</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D3D11_MAX_SHADER_VIEW</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>DXGI_FORMAT</name></type> <name>formatTexture</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_fourcc_t</name></type> <name>fourcc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>bitsPerChannel</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>widthDenominator</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>heightDenominator</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>DXGI_FORMAT</name></type> <name><name>resourceFormat</name><index>[<expr><name>D3D11_MAX_SHADER_VIEW</name></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>d3d_format_t</name>;</typedef>

<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>DxgiFormatToStr</name><parameter_list>(<parameter><decl><type><name>DXGI_FORMAT</name></type> <name>format</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>vlc_fourcc_t</name></type> <name>DxgiFormatFourcc</name><parameter_list>(<parameter><decl><type><name>DXGI_FORMAT</name></type> <name>format</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>d3d_format_t</name> <modifier>*</modifier></type><name>GetRenderFormatList</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>DxgiFormatMask</name><parameter_list>(<parameter><decl><type><name>DXGI_FORMAT</name></type> <name>format</name></decl></parameter>, <parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>DXGI_FORMAT</name></type> <name>DxgiFourccFormat</name><parameter_list>(<parameter><decl><type><name>vlc_fourcc_t</name></type> <name>fcc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>DxgiVendorStr</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>gpu_vendor</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>UINT</name></type> <name>DxgiResourceCount</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>d3d_format_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
