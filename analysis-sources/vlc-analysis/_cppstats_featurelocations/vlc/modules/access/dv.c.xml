<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\access\dv.c">
























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_plugin.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_access.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;errno.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/types.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;unistd.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/poll.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;libraw1394/raw1394.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;libraw1394/csr.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;libavc1394/avc1394.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;libavc1394/avc1394_vcr.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;libavc1394/rom1394.h&gt;</cpp:file></cpp:include>




<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Open</name> <parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>block_t</name> <modifier>*</modifier></type><name>Block</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>bool</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Control</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>va_list</name></type></decl></parameter> )</parameter_list>;</function_decl>

<macro><name>vlc_module_begin</name> <argument_list>()</argument_list></macro>
<macro><name>set_description</name><argument_list>( <argument>N_(<literal type="string">"Digital Video (Firewire/ieee1394) input"</literal>)</argument> )</argument_list></macro>
<macro><name>set_shortname</name><argument_list>( <argument>N_(<literal type="string">"DV"</literal>)</argument> )</argument_list></macro>
<macro><name>set_category</name><argument_list>( <argument>CAT_INPUT</argument> )</argument_list></macro>
<macro><name>set_subcategory</name><argument_list>( <argument>SUBCAT_INPUT_ACCESS</argument> )</argument_list></macro>
<macro><name>set_capability</name><argument_list>( <argument><literal type="string">"access"</literal></argument>, <argument><literal type="number">0</literal></argument> )</argument_list></macro>
<macro><name>add_shortcut</name><argument_list>( <argument><literal type="string">"dv"</literal></argument>, <argument><literal type="string">"raw1394"</literal></argument> )</argument_list></macro>
<macro><name>set_callbacks</name><argument_list>( <argument>Open</argument>, <argument>Close</argument> )</argument_list></macro>
<macro><name>vlc_module_end</name> <argument_list>()</argument_list></macro>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>vlc_thread_t</name></type> <name>thread</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>lock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_frame</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_last</name></decl>;</decl_stmt>

}</block></struct></type> <name>event_thread_t</name>;</typedef>

<function_decl><type><specifier>static</specifier> <name>void</name><modifier>*</modifier></type> <name>Raw1394EventThread</name><parameter_list>( <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name><name>enum</name> <name>raw1394_iso_disposition</name></name></type>
<name>Raw1394Handler</name><parameter_list>(<parameter><decl><type><name>raw1394handle_t</name></type></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>int</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>char</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>char</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>char</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>int</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>int</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>Raw1394GetNumPorts</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>raw1394handle_t</name></type> <name>Raw1394Open</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Raw1394Close</name><parameter_list>( <parameter><decl><type><name>raw1394handle_t</name></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>DiscoverAVC</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>raw1394handle_t</name></type> <name>AVCOpen</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>AVCClose</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>AVCResetHandler</name><parameter_list>( <parameter><decl><type><name>raw1394handle_t</name></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>int</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>AVCPlay</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>AVCPause</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>int</name></type> <name>AVCStop</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter> )</parameter_list>;</function_decl>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>raw1394handle_t</name></type> <name>p_avc1394</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>raw1394handle_t</name></type> <name>p_raw1394</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>pollfd</name></name></type> <name>raw1394_poll</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_cards</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_node</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_port</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_channel</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>i_guid</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>event_thread_t</name> <modifier>*</modifier></type><name>p_ev</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>lock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_frame</name></decl>;</decl_stmt>
}</block></struct></type> <name>access_sys_t</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ISOCHRONOUS_QUEUE_LENGTH</name></cpp:macro> <cpp:value>1000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ISOCHRONOUS_MAX_PACKET_SIZE</name></cpp:macro> <cpp:value>4096</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>int</name></type> <name>Open</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name> <init>= <expr><operator>(</operator><name>stream_t</name><operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>raw1394_portinfo</name></name></type> <name><name>port_inf</name><index>[ <expr><literal type="number">16</literal></expr> ]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"opening device"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>ACCESS_SET_CALLBACKS</name><argument_list>( <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>Block</name></expr></argument>, <argument><expr><name>Control</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name> <operator>=</operator> <name>p_sys</name> <operator>=</operator> <call><name>vlc_obj_malloc</name><argument_list>( <argument><expr><name>p_this</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><operator>*</operator><name>p_sys</name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><operator>!</operator><name>p_sys</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_cards</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_node</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_port</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_guid</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_channel</name></name> <operator>=</operator> <literal type="number">63</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_raw1394</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_avc1394</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_frame</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_init</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_node</name></name> <operator>=</operator> <call><name>DiscoverAVC</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>i_port</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_guid</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_node</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"failed to open a Firewire (IEEE1394) connection"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>Close</name><argument_list>( <argument><expr><name>p_this</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_avc1394</name></name> <operator>=</operator> <call><name>AVCOpen</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_port</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_sys</name><operator>-&gt;</operator><name>p_avc1394</name></name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"no Digital Video Control device found"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>Close</name><argument_list>( <argument><expr><name>p_this</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_raw1394</name></name> <operator>=</operator> <call><name>raw1394_new_handle</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_sys</name><operator>-&gt;</operator><name>p_raw1394</name></name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"no Digital Video device found"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>Close</name><argument_list>( <argument><expr><name>p_this</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_cards</name></name> <operator>=</operator> <call><name>raw1394_get_port_info</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_raw1394</name></name></expr></argument>, <argument><expr><name>port_inf</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_cards</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"failed to get port info"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>Close</name><argument_list>( <argument><expr><name>p_this</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><call><name>raw1394_set_port</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_raw1394</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_port</name></name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"failed to set port info"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>Close</name><argument_list>( <argument><expr><name>p_this</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>( <expr><call><name>raw1394_iso_recv_init</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_raw1394</name></name></expr></argument>, <argument><expr><name>Raw1394Handler</name></expr></argument>,
<argument><expr><name>ISOCHRONOUS_QUEUE_LENGTH</name></expr></argument>, <argument><expr><name>ISOCHRONOUS_MAX_PACKET_SIZE</name></expr></argument>,
<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_channel</name></name></expr></argument>, <argument><expr><name>RAW1394_DMA_PACKET_PER_BUFFER</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"failed to init isochronous recv"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>Close</name><argument_list>( <argument><expr><name>p_this</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>raw1394_set_userdata</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_raw1394</name></name></expr></argument>, <argument><expr><name>p_access</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>raw1394_iso_recv_start</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_raw1394</name></name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>raw1394_poll</name><operator>.</operator><name>fd</name></name> <operator>=</operator> <call><name>raw1394_get_fd</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_raw1394</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>raw1394_poll</name><operator>.</operator><name>events</name></name> <operator>=</operator> <name>POLLIN</name> <operator>|</operator> <name>POLLPRI</name></expr>;</expr_stmt>


<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name></name> <operator>=</operator> <call><name>calloc</name><argument_list>( <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>( <argument><expr><operator>*</operator><name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name></name></expr></argument> )</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name></name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"failed to create event thread struct"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>Close</name><argument_list>( <argument><expr><name>p_this</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_ENOMEM</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name><operator>-&gt;</operator><name>p_frame</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name><operator>-&gt;</operator><name>pp_last</name></name> <operator>=</operator> <operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name><operator>-&gt;</operator><name>p_frame</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name><operator>-&gt;</operator><name>p_access</name></name> <operator>=</operator> <name>p_access</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_mutex_init</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><call><name>vlc_clone</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name><operator>-&gt;</operator><name>thread</name></name></expr></argument>, <argument><expr><name>Raw1394EventThread</name></expr></argument>,
<argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name></name></expr></argument>, <argument><expr><name>VLC_THREAD_PRIORITY_OUTPUT</name></expr></argument> )</argument_list></call></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"failed to clone event thread"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>Close</name><argument_list>( <argument><expr><name>p_this</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <name>void</name></type> <name>Close</name><parameter_list>( <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_this</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name> <init>= <expr><operator>(</operator><name>stream_t</name><operator>*</operator><operator>)</operator><name>p_this</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name></name></expr> )</condition>
<block>{<block_content>

<expr_stmt><expr><call><name>vlc_cancel</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name><operator>-&gt;</operator><name>thread</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_raw1394</name></name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>raw1394_iso_shutdown</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_raw1394</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_join</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name><operator>-&gt;</operator><name>thread</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name><operator>-&gt;</operator><name>p_frame</name></name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>block_ChainRelease</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name><operator>-&gt;</operator><name>p_frame</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name><operator>-&gt;</operator><name>p_frame</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name><operator>-&gt;</operator><name>pp_last</name></name> <operator>=</operator> <operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>p_frame</name></name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_frame</name></name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>block_ChainRelease</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_frame</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_raw1394</name></name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>raw1394_destroy_handle</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_raw1394</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>AVCClose</name><argument_list>( <argument><expr><name>p_access</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <name>int</name></type> <name>Control</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_query</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>args</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<switch>switch<condition>( <expr><name>i_query</name></expr> )</condition>
<block>{<block_content>

<case>case <expr><name>STREAM_CAN_PAUSE</name></expr>:</case>
<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>bool</name><operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><name>STREAM_CAN_SEEK</name></expr>:</case>
<case>case <expr><name>STREAM_CAN_FASTSEEK</name></expr>:</case>
<case>case <expr><name>STREAM_CAN_CONTROL_PACE</name></expr>:</case>
<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>bool</name><operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><name>STREAM_GET_PTS_DELAY</name></expr>:</case>
<expr_stmt><expr><operator>*</operator><call><name>va_arg</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>vlc_tick_t</name> <operator>*</operator></expr></argument> )</argument_list></call> <operator>=</operator>
<call><name>VLC_TICK_FROM_MS</name><argument_list>( <argument><expr><call><name>var_InheritInteger</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"live-caching"</literal></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>


<case>case <expr><name>STREAM_SET_PAUSE_STATE</name></expr>:</case>
<expr_stmt><expr><call><name>AVCPause</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>i_node</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>

<default>default:</default>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>

</block_content>}</block></switch>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>block_t</name> <modifier>*</modifier></type><name>Block</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>bool</name> <modifier>*</modifier><specifier>restrict</specifier></type> <name>eof</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_block</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p_block</name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>p_frame</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_frame</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>eof</name></expr>;</expr_stmt>
<return>return <expr><name>p_block</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Raw1394EventThreadCleanup</name><parameter_list>( <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>obj</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>event_thread_t</name> <modifier>*</modifier></type><name>p_ev</name> <init>= <expr><operator>(</operator><name>event_thread_t</name> <operator>*</operator><operator>)</operator><name>obj</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>sys</name> <init>= <expr><name><name>p_ev</name><operator>-&gt;</operator><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>AVCStop</name><argument_list>( <argument><expr><name><name>p_ev</name><operator>-&gt;</operator><name>p_access</name></name></expr></argument>, <argument><expr><name><name>sys</name><operator>-&gt;</operator><name>i_node</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name><modifier>*</modifier></type> <name>Raw1394EventThread</name><parameter_list>( <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>obj</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>event_thread_t</name> <modifier>*</modifier></type><name>p_ev</name> <init>= <expr><operator>(</operator><name>event_thread_t</name> <operator>*</operator><operator>)</operator><name>obj</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name> <init>= <expr><operator>(</operator><name>stream_t</name> <operator>*</operator><operator>)</operator> <name><name>p_ev</name><operator>-&gt;</operator><name>p_access</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><operator>(</operator><name>access_sys_t</name> <operator>*</operator><operator>)</operator> <name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>result</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>canc</name> <init>= <expr><call><name>vlc_savecancel</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>AVCPlay</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_node</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_cleanup_push</name><argument_list>( <argument><expr><name>Raw1394EventThreadCleanup</name></expr></argument>, <argument><expr><name>p_ev</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_restorecancel</name><argument_list>( <argument><expr><name>canc</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<for>for<control>( <init>;</init><condition>;</condition> <incr/>)</control>
<block>{<block_content>
<while>while<condition>( <expr><operator>(</operator> <name>result</name> <operator>=</operator> <call><name>poll</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>raw1394_poll</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument> )</argument_list></call> <operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><name>errno</name> <operator>!=</operator> <name>EINTR</name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"poll error: %s"</literal></expr></argument>, <argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></while>

<if_stmt><if>if<condition>( <expr><name>result</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <operator>(</operator> <operator>(</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>raw1394_poll</name><operator>.</operator><name>revents</name></name> <operator>&amp;</operator> <name>POLLIN</name> <operator>)</operator>
<operator>||</operator> <operator>(</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>raw1394_poll</name><operator>.</operator><name>revents</name></name> <operator>&amp;</operator> <name>POLLPRI</name> <operator>)</operator> <operator>)</operator></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name>canc</name> <operator>=</operator> <call><name>vlc_savecancel</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>raw1394_loop_iterate</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_raw1394</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_restorecancel</name><argument_list>( <argument><expr><name>canc</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>

<expr_stmt><expr><call><name>vlc_cleanup_pop</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_assert_unreachable</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name><name>enum</name> <name>raw1394_iso_disposition</name></name></type>
<name>Raw1394Handler</name><parameter_list>(<parameter><decl><type><name>raw1394handle_t</name></type> <name>handle</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>data</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>length</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name></type> <name>channel</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>char</name></type> <name>tag</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name></type> <name>sy</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>cycle</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>dropped</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_block</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>channel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>sy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>cycle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name>VLC_UNUSED</name><argument_list>(<argument><expr><name>dropped</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>p_access</name> <operator>=</operator> <operator>(</operator><name>stream_t</name> <operator>*</operator><operator>)</operator> <call><name>raw1394_get_userdata</name><argument_list>( <argument><expr><name>handle</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><operator>!</operator><name>p_access</name></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>p_sys</name> <operator>=</operator> <name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr>;</expr_stmt>


<if_stmt><if>if<condition>( <expr><name>length</name> <operator>&gt;</operator> <literal type="number">16</literal></expr> )</condition>
<block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type> <name>p</name> <init>= <expr><name>data</name> <operator>+</operator> <literal type="number">8</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>section_type</name> <init>= <expr><name><name>p</name><index>[ <expr><literal type="number">0</literal></expr> ]</index></name> <operator>&gt;&gt;</operator> <literal type="number">5</literal></expr></init></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>dif_sequence</name> <init>= <expr><name><name>p</name><index>[ <expr><literal type="number">1</literal></expr> ]</index></name> <operator>&gt;&gt;</operator> <literal type="number">4</literal></expr></init></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>dif_block</name> <init>= <expr><name><name>p</name><index>[ <expr><literal type="number">2</literal></expr> ]</index></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>



<if_stmt><if>if<condition>( <expr><operator>(</operator><name>section_type</name> <operator>==</operator> <literal type="number">0</literal><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><name>dif_sequence</name> <operator>==</operator> <literal type="number">0</literal><operator>)</operator></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name><operator>-&gt;</operator><name>p_frame</name></name></expr> )</condition>
<block>{<block_content>


<expr_stmt><expr><call><name>block_ChainAppend</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>p_frame</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name><operator>-&gt;</operator><name>p_frame</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name><operator>-&gt;</operator><name>p_frame</name></name> <operator>=</operator> <call><name>block_Alloc</name><argument_list>( <argument><expr><literal type="number">144000</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name><operator>-&gt;</operator><name>pp_last</name></name> <operator>=</operator> <operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>p_frame</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>p_block</name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name><operator>-&gt;</operator><name>p_frame</name></name></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name>p_block</name></expr> )</condition>
<block>{<block_content>
<switch>switch <condition>( <expr><name>section_type</name></expr> )</condition>
<block>{<block_content>
<case>case <expr><literal type="number">0</literal></expr>:</case> 

<expr_stmt><expr><call><name>memcpy</name><argument_list>( <argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>p_buffer</name></name> <operator>+</operator> <name>dif_sequence</name> <operator>*</operator> <literal type="number">150</literal> <operator>*</operator> <literal type="number">80</literal></expr></argument>, <argument><expr><name>p</name></expr></argument>, <argument><expr><literal type="number">480</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><literal type="number">1</literal></expr>:</case> 
<expr_stmt><expr><call><name>memcpy</name><argument_list>( <argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>p_buffer</name></name> <operator>+</operator> <name>dif_sequence</name> <operator>*</operator> <literal type="number">150</literal> <operator>*</operator> <literal type="number">80</literal> <operator>+</operator> <operator>(</operator> <literal type="number">1</literal> <operator>+</operator> <name>dif_block</name> <operator>)</operator> <operator>*</operator> <literal type="number">80</literal></expr></argument>, <argument><expr><name>p</name></expr></argument>, <argument><expr><literal type="number">480</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><literal type="number">2</literal></expr>:</case> 
<expr_stmt><expr><call><name>memcpy</name><argument_list>( <argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>p_buffer</name></name> <operator>+</operator> <name>dif_sequence</name> <operator>*</operator> <literal type="number">150</literal> <operator>*</operator> <literal type="number">80</literal> <operator>+</operator> <operator>(</operator> <literal type="number">3</literal> <operator>+</operator> <name>dif_block</name> <operator>)</operator> <operator>*</operator> <literal type="number">80</literal></expr></argument>, <argument><expr><name>p</name></expr></argument>, <argument><expr><literal type="number">480</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><literal type="number">3</literal></expr>:</case> 
<expr_stmt><expr><call><name>memcpy</name><argument_list>( <argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>p_buffer</name></name> <operator>+</operator> <name>dif_sequence</name> <operator>*</operator> <literal type="number">150</literal> <operator>*</operator> <literal type="number">80</literal> <operator>+</operator> <operator>(</operator> <literal type="number">6</literal> <operator>+</operator> <name>dif_block</name> <operator>*</operator> <literal type="number">16</literal> <operator>)</operator> <operator>*</operator> <literal type="number">80</literal></expr></argument>, <argument><expr><name>p</name></expr></argument>, <argument><expr><literal type="number">480</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><literal type="number">4</literal></expr>:</case> 
<expr_stmt><expr><call><name>memcpy</name><argument_list>( <argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>p_buffer</name></name> <operator>+</operator> <name>dif_sequence</name> <operator>*</operator> <literal type="number">150</literal> <operator>*</operator> <literal type="number">80</literal> <operator>+</operator> <operator>(</operator> <literal type="number">7</literal> <operator>+</operator> <operator>(</operator> <name>dif_block</name> <operator>/</operator> <literal type="number">15</literal> <operator>)</operator> <operator>+</operator> <name>dif_block</name> <operator>)</operator> <operator>*</operator> <literal type="number">80</literal></expr></argument>, <argument><expr><name>p</name></expr></argument>, <argument><expr><literal type="number">480</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<break>break;</break>

<default>default:</default> 
<expr_stmt><expr><call><name>block_Release</name><argument_list>( <argument><expr><name>p_block</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p_block</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>p_ev</name><operator>-&gt;</operator><name>lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>






<function><type><specifier>static</specifier> <name>int</name></type> <name>Raw1394GetNumPorts</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>n_ports</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>raw1394_portinfo</name></name></type> <name><name>pinf</name><index>[ <expr><literal type="number">16</literal></expr> ]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>raw1394handle_t</name></type> <name>handle</name></decl>;</decl_stmt>


<if_stmt><if>if<condition>( <expr><operator>!</operator><operator>(</operator> <name>handle</name> <operator>=</operator> <call><name>raw1394_new_handle</name><argument_list>()</argument_list></call> <operator>)</operator></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"raw1394 - failed to get handle: %s"</literal></expr></argument>,
<argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><operator>(</operator> <name>n_ports</name> <operator>=</operator> <call><name>raw1394_get_port_info</name><argument_list>( <argument><expr><name>handle</name></expr></argument>, <argument><expr><name>pinf</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument> )</argument_list></call> <operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"raw1394 - failed to get port info: %s"</literal></expr></argument>,
<argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>raw1394_destroy_handle</name><argument_list>( <argument><expr><name>handle</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>raw1394_destroy_handle</name><argument_list>( <argument><expr><name>handle</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>n_ports</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>raw1394handle_t</name></type> <name>Raw1394Open</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>port</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>n_ports</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>raw1394_portinfo</name></name></type> <name><name>pinf</name><index>[ <expr><literal type="number">16</literal></expr> ]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>raw1394handle_t</name></type> <name>handle</name></decl>;</decl_stmt>


<expr_stmt><expr><name>handle</name> <operator>=</operator> <call><name>raw1394_new_handle</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><operator>!</operator><name>handle</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"raw1394 - failed to get handle: %s"</literal></expr></argument>,
<argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>( <expr><operator>(</operator> <name>n_ports</name> <operator>=</operator> <call><name>raw1394_get_port_info</name><argument_list>( <argument><expr><name>handle</name></expr></argument>, <argument><expr><name>pinf</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument> )</argument_list></call> <operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"raw1394 - failed to get port info: %s"</literal></expr></argument>,
<argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>raw1394_destroy_handle</name><argument_list>( <argument><expr><name>handle</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if<condition>( <expr><call><name>raw1394_set_port</name><argument_list>( <argument><expr><name>handle</name></expr></argument>, <argument><expr><name>port</name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"raw1394 - failed to set set port: %s"</literal></expr></argument>,
<argument><expr><call><name>vlc_strerror_c</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>handle</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>Raw1394Close</name><parameter_list>( <parameter><decl><type><name>raw1394handle_t</name></type> <name>handle</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>raw1394_destroy_handle</name><argument_list>( <argument><expr><name>handle</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>DiscoverAVC</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>int</name><modifier>*</modifier></type> <name>port</name></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type> <name>guid</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>rom1394_directory</name></type> <name>rom_dir</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>raw1394handle_t</name></type> <name>handle</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>device</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>m</name> <init>= <expr><call><name>Raw1394GetNumPorts</name><argument_list>( <argument><expr><name>p_access</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>*</operator><name>port</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr> )</condition>
<block>{<block_content>

<expr_stmt><expr><name>j</name> <operator>=</operator> <operator>*</operator><name>port</name></expr>;</expr_stmt>
<expr_stmt><expr><name>m</name> <operator>=</operator> <operator>*</operator><name>port</name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<for>for<control>( <init>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name>m</name> <operator>&amp;&amp;</operator> <name>device</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr> )</control>
<block>{<block_content>
<expr_stmt><expr><name>handle</name> <operator>=</operator> <call><name>Raw1394Open</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><name>j</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><operator>!</operator><name>handle</name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<for>for<control>( <init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>raw1394_get_nodecount</name><argument_list>( <argument><expr><name>handle</name></expr></argument> )</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr> )</control>
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><name>guid</name> <operator>!=</operator> <literal type="number">0</literal></expr> )</condition>
<block>{<block_content>

<if_stmt><if>if<condition>( <expr><name>guid</name> <operator>==</operator> <call><name>rom1394_get_guid</name><argument_list>( <argument><expr><name>handle</name></expr></argument>, <argument><expr><name>i</name></expr></argument> )</argument_list></call></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name>device</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>port</name> <operator>=</operator> <name>j</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<else>else
<block>{<block_content>

<if_stmt><if>if<condition>( <expr><call><name>rom1394_get_directory</name><argument_list>( <argument><expr><name>handle</name></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>rom_dir</name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>msg_Err</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"error reading config rom directory for node %d"</literal></expr></argument>, <argument><expr><name>i</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<continue>continue;</continue>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if<condition>( <expr><operator>(</operator> <call><name>rom1394_get_node_type</name><argument_list>( <argument><expr><operator>&amp;</operator><name>rom_dir</name></expr></argument> )</argument_list></call> <operator>==</operator> <name>ROM1394_NODE_TYPE_AVC</name> <operator>)</operator> <operator>&amp;&amp;</operator>
<call><name>avc1394_check_subunit_type</name><argument_list>( <argument><expr><name>handle</name></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><name>AVC1394_SUBUNIT_TYPE_VCR</name></expr></argument> )</argument_list></call></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name>device</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>port</name> <operator>=</operator> <name>j</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>Raw1394Close</name><argument_list>( <argument><expr><name>handle</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>

<return>return <expr><name>device</name></expr>;</return>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <name>raw1394handle_t</name></type> <name>AVCOpen</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>port</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>raw1394_portinfo</name></name></type> <name><name>pinf</name><index>[ <expr><literal type="number">16</literal></expr> ]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>numcards</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_avc1394</name></name> <operator>=</operator> <call><name>raw1394_new_handle</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><operator>!</operator><name><name>p_sys</name><operator>-&gt;</operator><name>p_avc1394</name></name></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>numcards</name> <operator>=</operator> <call><name>raw1394_get_port_info</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_avc1394</name></name></expr></argument>, <argument><expr><name>pinf</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name>numcards</name> <operator>&lt;</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>( <expr><call><name>raw1394_set_port</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_avc1394</name></name></expr></argument>, <argument><expr><name>port</name></expr></argument> )</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>raw1394_set_bus_reset_handler</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_avc1394</name></name></expr></argument>, <argument><expr><name>AVCResetHandler</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_avc1394</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>AVCClose</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_avc1394</name></name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>raw1394_destroy_handle</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_avc1394</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_avc1394</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>AVCResetHandler</name><parameter_list>( <parameter><decl><type><name>raw1394handle_t</name></type> <name>handle</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>generation</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>raw1394_update_generation</name><argument_list>( <argument><expr><name>handle</name></expr></argument>, <argument><expr><name>generation</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>AVCPlay</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>phyID</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"send play command over Digital Video control channel"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_avc1394</name></name> <operator>&amp;&amp;</operator> <name>phyID</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr> )</condition>
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>avc1394_vcr_is_recording</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_avc1394</name></name></expr></argument>, <argument><expr><name>phyID</name></expr></argument> )</argument_list></call> <operator>&amp;&amp;</operator>
<call><name>avc1394_vcr_is_playing</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_avc1394</name></name></expr></argument>, <argument><expr><name>phyID</name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>AVC1394_VCR_OPERAND_PLAY_FORWARD</name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>avc1394_vcr_play</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_avc1394</name></name></expr></argument>, <argument><expr><name>phyID</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>AVCPause</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>phyID</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_avc1394</name></name> <operator>&amp;&amp;</operator> <name>phyID</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr> )</condition>
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>avc1394_vcr_is_recording</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_avc1394</name></name></expr></argument>, <argument><expr><name>phyID</name></expr></argument> )</argument_list></call> <operator>&amp;&amp;</operator>
<operator>(</operator> <call><name>avc1394_vcr_is_playing</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_avc1394</name></name></expr></argument>, <argument><expr><name>phyID</name></expr></argument> )</argument_list></call> <operator>!=</operator> <name>AVC1394_VCR_OPERAND_PLAY_FORWARD_PAUSE</name> <operator>)</operator></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>avc1394_vcr_pause</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_avc1394</name></name></expr></argument>, <argument><expr><name>phyID</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>int</name></type> <name>AVCStop</name><parameter_list>( <parameter><decl><type><name>stream_t</name> <modifier>*</modifier></type><name>p_access</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>phyID</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>access_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_access</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>msg_Dbg</name><argument_list>( <argument><expr><name>p_access</name></expr></argument>, <argument><expr><literal type="string">"closing Digital Video control channel"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>( <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_avc1394</name></name> <operator>&amp;&amp;</operator> <name>phyID</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>avc1394_vcr_stop</name><argument_list>( <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_avc1394</name></name></expr></argument>, <argument><expr><name>phyID</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
