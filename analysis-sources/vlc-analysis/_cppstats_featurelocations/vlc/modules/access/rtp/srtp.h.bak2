


















#ifndef LIBVLC_SRTP_H
# define LIBVLC_SRTP_H 1

typedef struct srtp_session_t srtp_session_t;

enum
{
    SRTP_UNENCRYPTED=0x1,   
    SRTCP_UNENCRYPTED=0x2,  
    SRTP_UNAUTHENTICATED=0x4, 

    SRTP_RCC_MODE1=0x10,    
    SRTP_RCC_MODE2=0x20,    
    SRTP_RCC_MODE3=0x30,    

    SRTP_FLAGS_MASK=0x37    
};


enum
{
    SRTP_ENCR_NULL=0,   
    SRTP_ENCR_AES_CM=1, 
    SRTP_ENCR_AES_F8=2, 
};


enum
{
    SRTP_AUTH_NULL=0,      
    SRTP_AUTH_HMAC_SHA1=1, 
};


enum
{
    SRTP_PRF_AES_CM=0, 
};

# ifdef __cplusplus
extern "C" {
# endif

srtp_session_t *srtp_create (int encr, int auth, unsigned tag_len, int prf,
                             unsigned flags);
void srtp_destroy (srtp_session_t *s);

int srtp_setkey (srtp_session_t *s, const void *key, size_t keylen,
                 const void *salt, size_t saltlen);
int srtp_setkeystring (srtp_session_t *s, const char *key, const char *salt);

void srtp_setrcc_rate (srtp_session_t *s, uint16_t rate);

int srtp_send (srtp_session_t *s, uint8_t *buf, size_t *lenp, size_t maxsize);
int srtp_recv (srtp_session_t *s, uint8_t *buf, size_t *lenp);
int srtcp_send (srtp_session_t *s, uint8_t *buf, size_t *lenp, size_t maxsiz);
int srtcp_recv (srtp_session_t *s, uint8_t *buf, size_t *lenp);

# ifdef __cplusplus
}
# endif
#endif

