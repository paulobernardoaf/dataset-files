<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\access\http\ports.c">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;config.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdbool.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"transport.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>


<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>short</name></type> <name><name>blocked_ports</name><index>[]</index></name> <init>= <expr><block>{
<expr><literal type="number">1</literal></expr>, 
<expr><literal type="number">7</literal></expr>, 
<expr><literal type="number">9</literal></expr>, 
<expr><literal type="number">11</literal></expr>, 
<expr><literal type="number">13</literal></expr>, 
<expr><literal type="number">15</literal></expr>, 
<expr><literal type="number">17</literal></expr>, 
<expr><literal type="number">19</literal></expr>, 
<expr><literal type="number">20</literal></expr>, 
<expr><literal type="number">21</literal></expr>, 
<expr><literal type="number">22</literal></expr>, 
<expr><literal type="number">23</literal></expr>, 
<expr><literal type="number">25</literal></expr>, 
<expr><literal type="number">37</literal></expr>, 
<expr><literal type="number">42</literal></expr>, 
<expr><literal type="number">43</literal></expr>, 
<expr><literal type="number">53</literal></expr>, 
<expr><literal type="number">77</literal></expr>, 
<expr><literal type="number">79</literal></expr>, 
<expr><literal type="number">87</literal></expr>, 
<expr><literal type="number">95</literal></expr>, 
<expr><literal type="number">101</literal></expr>, 
<expr><literal type="number">102</literal></expr>, 
<expr><literal type="number">103</literal></expr>, 
<expr><literal type="number">104</literal></expr>, 
<expr><literal type="number">109</literal></expr>, 
<expr><literal type="number">110</literal></expr>, 
<expr><literal type="number">111</literal></expr>, 
<expr><literal type="number">113</literal></expr>, 
<expr><literal type="number">115</literal></expr>, 
<expr><literal type="number">117</literal></expr>, 
<expr><literal type="number">119</literal></expr>, 
<expr><literal type="number">123</literal></expr>, 
<expr><literal type="number">135</literal></expr>, 
<expr><literal type="number">139</literal></expr>, 
<expr><literal type="number">143</literal></expr>, 
<expr><literal type="number">179</literal></expr>, 
<expr><literal type="number">389</literal></expr>, 
<expr><literal type="number">465</literal></expr>, 
<expr><literal type="number">512</literal></expr>, 
<expr><literal type="number">513</literal></expr>, 
<expr><literal type="number">514</literal></expr>, 
<expr><literal type="number">515</literal></expr>, 
<expr><literal type="number">526</literal></expr>, 
<expr><literal type="number">530</literal></expr>, 
<expr><literal type="number">531</literal></expr>, 
<expr><literal type="number">532</literal></expr>, 
<expr><literal type="number">540</literal></expr>, 
<expr><literal type="number">556</literal></expr>, 
<expr><literal type="number">563</literal></expr>, 
<expr><literal type="number">587</literal></expr>, 
<expr><literal type="number">601</literal></expr>, 
<expr><literal type="number">636</literal></expr>, 
<expr><literal type="number">993</literal></expr>, 
<expr><literal type="number">995</literal></expr>, 
<expr><literal type="number">2049</literal></expr>, 
<expr><literal type="number">3659</literal></expr>, 
<expr><literal type="number">4045</literal></expr>, 
<expr><literal type="number">6000</literal></expr>, 
<expr><literal type="number">6665</literal></expr>, 
<expr><literal type="number">6666</literal></expr>, 
<expr><literal type="number">6667</literal></expr>, 
<expr><literal type="number">6668</literal></expr>, 
<expr><literal type="number">6669</literal></expr>, 
}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>int</name></type> <name>portcmp</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>entry</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name> <modifier>*</modifier></type><name>port</name> <init>= <expr><name>key</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name> <name>short</name> <modifier>*</modifier></type><name>blocked_port</name> <init>= <expr><name>entry</name></expr></init></decl>;</decl_stmt>

<return>return <expr><operator>(</operator><operator>(</operator><name>int</name><operator>)</operator><operator>*</operator><name>port</name><operator>)</operator> <operator>-</operator> <operator>(</operator><operator>(</operator><name>int</name><operator>)</operator><operator>*</operator><name>blocked_port</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type> <name>vlc_http_port_blocked</name><parameter_list>(<parameter><decl><type><name>unsigned</name></type> <name>port</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>port</name> <operator>&gt;</operator> <literal type="number">0xffff</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>true</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><call><name>bsearch</name><argument_list>(<argument><expr><operator>&amp;</operator><name>port</name></expr></argument>, <argument><expr><name>blocked_ports</name></expr></argument>, <argument><expr><call><name>ARRAY_SIZE</name><argument_list>(<argument><expr><name>blocked_ports</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr>sizeof <operator>(</operator><name>unsigned</name> <name>short</name><operator>)</operator></expr></argument>, <argument><expr><name>portcmp</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>NULL</name></expr>;</return>
</block_content>}</block></function>
</unit>
