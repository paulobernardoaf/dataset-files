<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\access\http\message.h">



















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>









<struct_decl>struct <name>vlc_http_msg</name>;</struct_decl>
<struct_decl>struct <name>block_t</name>;</struct_decl>
<struct_decl>struct <name>vlc_http_cookie_jar_t</name>;</struct_decl>












<decl_stmt><decl><type><name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type>
<name>vlc_http_req_create</name><argument_list>(<argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator><name>method</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator><name>scheme</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator><name>authority</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator><name>path</name></expr></argument>)</argument_list> <name>VLC_USED</name></decl>;</decl_stmt>









<decl_stmt><decl><type><name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type><name>vlc_http_resp_create</name><argument_list>(<argument><expr><name>unsigned</name> <name>status</name></expr></argument>)</argument_list> <name>VLC_USED</name></decl>;</decl_stmt>




<function_decl><type><name>void</name></type> <name>vlc_http_msg_destroy</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>int</name></type> <name>vlc_http_msg_add_header</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list> VLC_FORMAT<parameter_list>(</parameter_list>3<operator>,</operator>4</function_decl>)<empty_stmt>;</empty_stmt>






<function_decl><type><name>int</name></type> <name>vlc_http_msg_add_agent</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>vlc_http_msg_get_agent</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>time_t</name></type> <name>vlc_http_msg_get_time</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>int</name></type> <name>vlc_http_msg_add_time</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>time_t</name> <modifier>*</modifier></type><name>t</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>int</name></type> <name>vlc_http_msg_add_atime</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>time_t</name></type> <name>vlc_http_msg_get_atime</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>time_t</name></type> <name>vlc_http_msg_get_mtime</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>unsigned</name></type> <name>vlc_http_msg_get_retry_after</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>vlc_http_msg_get_cookies</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>vlc_http_cookie_jar_t</name></name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>host</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>vlc_http_msg_add_cookies</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>vlc_http_cookie_jar_t</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>char</name> <modifier>*</modifier></type><name>vlc_http_msg_get_basic_realm</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>














<function_decl><type><name>int</name></type> <name>vlc_http_msg_add_creds_basic</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>proxy</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>username</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>password</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>vlc_http_msg_get_header</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>int</name></type> <name>vlc_http_msg_get_status</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type><name>m</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>vlc_http_msg_get_method</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>vlc_http_msg_get_scheme</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>vlc_http_msg_get_authority</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>vlc_http_msg_get_path</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>vlc_http_msg_get_token</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>field</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>token</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>vlc_http_next_token</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>uintmax_t</name></type> <name>vlc_http_msg_get_size</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>












<decl_stmt><decl><type><name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type><name>vlc_http_msg_iterate</name><argument_list>(<argument><expr>struct <name>vlc_http_msg</name> <operator>*</operator></expr></argument>)</argument_list> <name>VLC_USED</name></decl>;</decl_stmt>













<decl_stmt><decl><type><name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type><name>vlc_http_msg_get_final</name><argument_list>(<argument><expr>struct <name>vlc_http_msg</name> <operator>*</operator></expr></argument>)</argument_list> <name>VLC_USED</name></decl>;</decl_stmt>












<decl_stmt><decl><type><name><name>struct</name> <name>block_t</name></name> <modifier>*</modifier></type><name>vlc_http_msg_read</name><argument_list>(<argument><expr>struct <name>vlc_http_msg</name> <operator>*</operator></expr></argument>)</argument_list> <name>VLC_USED</name></decl>;</decl_stmt>





















<struct_decl>struct <name>vlc_http_stream</name>;</struct_decl>











<decl_stmt><decl><type><specifier>extern</specifier> <name>void</name> <modifier>*</modifier><specifier>const</specifier></type> <name>vlc_http_error</name></decl>;</decl_stmt>

<function_decl><type><name>void</name></type> <name>vlc_http_msg_attach</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type><name>m</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>vlc_http_stream</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type><name>vlc_http_msg_get_initial</name><argument_list>(<argument><expr>struct <name>vlc_http_stream</name> <operator>*</operator><name>s</name></expr></argument>)</argument_list>
<name>VLC_USED</name></decl>;</decl_stmt>





<struct>struct <name>vlc_http_stream_cbs</name>
<block>{
<function_decl><type><name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type>(<modifier>*</modifier><name>read_headers</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_http_stream</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>struct</name> <name>block_t</name></name> <modifier>*</modifier></type>(<modifier>*</modifier><name>read</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_http_stream</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>close</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_http_stream</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>abort</name></decl></parameter>)</parameter_list>;</function_decl>
}</block>;</struct>


<struct>struct <name>vlc_http_stream</name>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_http_stream_cbs</name></name> <modifier>*</modifier></type><name>cbs</name></decl>;</decl_stmt>
}</block>;</struct>












<function><type><specifier>static</specifier> <specifier>inline</specifier>
<name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type><name>vlc_http_stream_read_headers</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_http_stream</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name><name>s</name><operator>-&gt;</operator><name>cbs</name><operator>-&gt;</operator><name>read_headers</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>










<function><type><specifier>static</specifier> <specifier>inline</specifier> <name><name>struct</name> <name>block_t</name></name> <modifier>*</modifier></type><name>vlc_http_stream_read</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_http_stream</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name><name>s</name><operator>-&gt;</operator><name>cbs</name><operator>-&gt;</operator><name>read</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>







<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>vlc_http_stream_close</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>vlc_http_stream</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>abort</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>cbs</name><operator>-&gt;</operator><name>close</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
















<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>vlc_http_msg_format</name><argument_list>(<argument><expr><specifier>const</specifier> struct <name>vlc_http_msg</name> <operator>*</operator><name>m</name></expr></argument>, <argument><expr><name>size_t</name> <operator>*</operator><specifier>restrict</specifier> <name>lenp</name></expr></argument>,
<argument><expr><name>bool</name> <name>proxied</name></expr></argument>)</argument_list> <name>VLC_USED</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type><name>vlc_http_msg_headers</name><argument_list>(<argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator><name>msg</name></expr></argument>)</argument_list> <name>VLC_USED</name></decl>;</decl_stmt>

<struct_decl>struct <name>vlc_h2_frame</name>;</struct_decl>




<function_decl><type><name><name>struct</name> <name>vlc_h2_frame</name></name> <modifier>*</modifier></type><name>vlc_http_msg_h2_frame</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type><name>m</name></decl></parameter>,
<parameter><decl><type><name>uint_fast32_t</name></type> <name>stream_id</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>eos</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name><name>struct</name> <name>vlc_http_msg</name></name> <modifier>*</modifier></type><name>vlc_http_msg_h2_headers</name><parameter_list>(<parameter><decl><type><name>unsigned</name></type> <name>count</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>headers</name><index>[]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>
</unit>
