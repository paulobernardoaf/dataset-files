<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\modules\access\screen\mac.c">




























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:empty>#import &lt;vlc_common.h&gt;</cpp:empty>
<cpp:empty>#import &lt;vlc_block.h&gt;</cpp:empty>

<cpp:empty>#import "screen.h"</cpp:empty>

<cpp:empty>#import &lt;ApplicationServices/ApplicationServices.h&gt;</cpp:empty>
<cpp:empty>#import &lt;QuartzCore/QuartzCore.h&gt;</cpp:empty>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>CGSMainConnectionID</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>CGImageRef</name></type> <name>CGSCreateRegisteredCursorImage</name><parameter_list>(<parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>char</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>CGPoint</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<struct>struct <name>screen_data_t</name>
<block>{
<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_block</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>width</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>screen_top</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>screen_left</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>screen_width</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>screen_height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>rate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>CGDirectDisplayID</name></type> <name>display_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>CGContextRef</name></type> <name>offscreen_context</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>CGRect</name></type> <name>offscreen_rect</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>offscreen_bitmap</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>offscreen_bitmap_size</name></decl>;</decl_stmt>
}</block>;</struct>

<function><type><name>int</name></type> <name>screen_InitCapture</name><parameter_list>(<parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>screen_data_t</name> <modifier>*</modifier></type><name>p_data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>CGLError</name></type> <name>returnedError</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_data</name></name> <operator>=</operator> <name>p_data</name> <operator>=</operator> <call><name>calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>screen_data_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>p_data</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>


<expr_stmt><expr><name><name>p_data</name><operator>-&gt;</operator><name>display_id</name></name> <operator>=</operator> <name>kCGDirectMainDisplay</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_data</name><operator>-&gt;</operator><name>rate</name></name> <operator>=</operator> <call><name>var_InheritFloat</name><argument_list>(<argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"screen-fps"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>displayCount</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>returnedError</name> <operator>=</operator> <call><name>CGGetOnlineDisplayList</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>displayCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>returnedError</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>CGDirectDisplayID</name> <modifier>*</modifier></type><name>ids</name></decl>;</decl_stmt>
<expr_stmt><expr><name>ids</name> <operator>=</operator> <call><name>vlc_alloc</name><argument_list>(<argument><expr><name>displayCount</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>CGDirectDisplayID</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>returnedError</name> <operator>=</operator> <call><name>CGGetOnlineDisplayList</name><argument_list>(<argument><expr><name>displayCount</name></expr></argument>, <argument><expr><name>ids</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>displayCount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>returnedError</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_display_id</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<for>for <control>(<init><decl><type><name>unsigned</name> <name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>displayCount</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_display_id</name></name> <operator>==</operator> <name><name>ids</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>p_data</name><operator>-&gt;</operator><name>display_id</name></name> <operator>=</operator> <name><name>ids</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_screen_index</name></name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_screen_index</name></name> <operator>&lt;=</operator> <name>displayCount</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>p_data</name><operator>-&gt;</operator><name>display_id</name></name> <operator>=</operator> <name><name>ids</name><index>[<expr><name><name>p_sys</name><operator>-&gt;</operator><name>i_screen_index</name></name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>ids</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<decl_stmt><decl><type><name>CGRect</name></type> <name>rect</name> <init>= <expr><call><name>CGDisplayBounds</name><argument_list>(<argument><expr><name><name>p_data</name><operator>-&gt;</operator><name>display_id</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>p_data</name><operator>-&gt;</operator><name>screen_left</name></name> <operator>=</operator> <name><name>rect</name><operator>.</operator><name>origin</name><operator>.</operator><name>x</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_data</name><operator>-&gt;</operator><name>screen_top</name></name> <operator>=</operator> <name><name>rect</name><operator>.</operator><name>origin</name><operator>.</operator><name>y</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_data</name><operator>-&gt;</operator><name>screen_width</name></name> <operator>=</operator> <name><name>rect</name><operator>.</operator><name>size</name><operator>.</operator><name>width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_data</name><operator>-&gt;</operator><name>screen_height</name></name> <operator>=</operator> <name><name>rect</name><operator>.</operator><name>size</name><operator>.</operator><name>height</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_data</name><operator>-&gt;</operator><name>width</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_data</name><operator>-&gt;</operator><name>height</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_height</name></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>p_data</name><operator>-&gt;</operator><name>width</name></name> <operator>&lt;=</operator> <literal type="number">0</literal> <operator>||</operator> <name><name>p_data</name><operator>-&gt;</operator><name>height</name></name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>p_data</name><operator>-&gt;</operator><name>width</name></name> <operator>=</operator> <name><name>p_data</name><operator>-&gt;</operator><name>screen_width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_data</name><operator>-&gt;</operator><name>height</name></name> <operator>=</operator> <name><name>p_data</name><operator>-&gt;</operator><name>screen_height</name></name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><call><name>es_format_Init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name></name></expr></argument>, <argument><expr><name>VIDEO_ES</name></expr></argument>, <argument><expr><name>VLC_CODEC_RGB32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_visible_width</name></name> <operator>=</operator>
<name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_width</name></name> <operator>=</operator> <name><name>rect</name><operator>.</operator><name>size</name><operator>.</operator><name>width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_visible_height</name></name> <operator>=</operator>
<name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_height</name></name> <operator>=</operator> <name><name>rect</name><operator>.</operator><name>size</name><operator>.</operator><name>height</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_bits_per_pixel</name></name> <operator>=</operator> <literal type="number">32</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_chroma</name></name> <operator>=</operator> <name>VLC_CODEC_RGB32</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_rmask</name></name> <operator>=</operator> <literal type="number">0x00ff0000</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_gmask</name></name> <operator>=</operator> <literal type="number">0x0000ff00</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_bmask</name></name> <operator>=</operator> <literal type="number">0x000000ff</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_sar_num</name></name> <operator>=</operator>
<name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_sar_den</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_frame_rate</name></name> <operator>=</operator> <literal type="number">1000</literal> <operator>*</operator> <name><name>p_data</name><operator>-&gt;</operator><name>rate</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_frame_rate_base</name></name> <operator>=</operator> <literal type="number">1000</literal></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>screen_CloseCapture</name><parameter_list>(<parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>screen_data_t</name> <modifier>*</modifier></type><name>p_data</name> <init>= <expr><name><name>p_sys</name><operator>-&gt;</operator><name>p_data</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>p_data</name><operator>-&gt;</operator><name>offscreen_context</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>CFRelease</name><argument_list>(<argument><expr><name><name>p_data</name><operator>-&gt;</operator><name>offscreen_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>p_data</name><operator>-&gt;</operator><name>offscreen_bitmap</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name><name>p_data</name><operator>-&gt;</operator><name>offscreen_bitmap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>p_data</name><operator>-&gt;</operator><name>p_block</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>block_Release</name><argument_list>(<argument><expr><name><name>p_data</name><operator>-&gt;</operator><name>p_block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>p_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>block_t</name> <modifier>*</modifier></type><name>screen_Capture</name><parameter_list>(<parameter><decl><type><name>demux_t</name> <modifier>*</modifier></type><name>p_demux</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>demux_sys_t</name> <modifier>*</modifier></type><name>p_sys</name> <init>= <expr><name><name>p_demux</name><operator>-&gt;</operator><name>p_sys</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>screen_data_t</name> <modifier>*</modifier></type><name>p_data</name> <init>= <expr><operator>(</operator><name>screen_data_t</name> <operator>*</operator><operator>)</operator><name><name>p_sys</name><operator>-&gt;</operator><name>p_data</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_block</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>CGRect</name></type> <name>capture_rect</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>CGImageRef</name></type> <name>image</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>CGPoint</name></type> <name>cursor_pos</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>CGEventRef</name></type> <name>event</name> <init>= <expr><call><name>CGEventCreate</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>cursor_pos</name> <operator>=</operator> <call><name>CGEventGetLocation</name><argument_list>(<argument><expr><name>event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>CFRelease</name><argument_list>(<argument><expr><name>event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>cursor_pos</name><operator>.</operator><name>x</name></name> <operator>-=</operator> <name><name>p_data</name><operator>-&gt;</operator><name>screen_left</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cursor_pos</name><operator>.</operator><name>y</name></name> <operator>-=</operator> <name><name>p_data</name><operator>-&gt;</operator><name>screen_top</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>p_sys</name><operator>-&gt;</operator><name>b_follow_mouse</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>FollowMouse</name><argument_list>(<argument><expr><name>p_sys</name></expr></argument>, <argument><expr><name><name>cursor_pos</name><operator>.</operator><name>x</name></name></expr></argument>, <argument><expr><name><name>cursor_pos</name><operator>.</operator><name>y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>capture_rect</name><operator>.</operator><name>origin</name><operator>.</operator><name>x</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_left</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>capture_rect</name><operator>.</operator><name>origin</name><operator>.</operator><name>y</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_top</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>capture_rect</name><operator>.</operator><name>size</name><operator>.</operator><name>width</name></name> <operator>=</operator> <name><name>p_data</name><operator>-&gt;</operator><name>width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>capture_rect</name><operator>.</operator><name>size</name><operator>.</operator><name>height</name></name> <operator>=</operator> <name><name>p_data</name><operator>-&gt;</operator><name>height</name></name></expr>;</expr_stmt>


<expr_stmt><expr><name>image</name> <operator>=</operator> <call><name>CGDisplayCreateImageForRect</name><argument_list>(<argument><expr><name><name>p_data</name><operator>-&gt;</operator><name>display_id</name></name></expr></argument>, <argument><expr><name>capture_rect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>image</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"no image!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>p_data</name><operator>-&gt;</operator><name>offscreen_context</name></name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>CGColorSpaceRef</name></type> <name>colorspace</name></decl>;</decl_stmt>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <call><name>CGColorSpaceCreateWithName</name><argument_list>(<argument><expr><name>kCGColorSpaceGenericRGB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_data</name><operator>-&gt;</operator><name>offscreen_bitmap_size</name></name> <operator>=</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_width</name></name> <operator>*</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_height</name></name> <operator>*</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_data</name><operator>-&gt;</operator><name>offscreen_bitmap</name></name> <operator>=</operator> <call><name>calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>p_data</name><operator>-&gt;</operator><name>offscreen_bitmap_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>p_data</name><operator>-&gt;</operator><name>offscreen_bitmap</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"can't allocate offscreen bitmap"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>CFRelease</name><argument_list>(<argument><expr><name>image</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_data</name><operator>-&gt;</operator><name>offscreen_context</name></name> <operator>=</operator> <call><name>CGBitmapContextCreate</name><argument_list>(<argument><expr><name><name>p_data</name><operator>-&gt;</operator><name>offscreen_bitmap</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_width</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_height</name></name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_width</name></name> <operator>*</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name>colorspace</name></expr></argument>, <argument><expr><name>kCGImageAlphaPremultipliedFirst</name> <operator>|</operator> <name>kCGBitmapByteOrder32Little</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>p_data</name><operator>-&gt;</operator><name>offscreen_context</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"can't create offscreen bitmap context"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>CFRelease</name><argument_list>(<argument><expr><name>image</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>CGColorSpaceRelease</name><argument_list>(<argument><expr><name>colorspace</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>p_data</name><operator>-&gt;</operator><name>offscreen_rect</name></name> <operator>=</operator> <call><name>CGRectMake</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_width</name></name></expr></argument>, <argument><expr><name><name>p_sys</name><operator>-&gt;</operator><name>fmt</name><operator>.</operator><name>video</name><operator>.</operator><name>i_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<decl_stmt><decl><type><name>CGImageRef</name></type> <name>cursor_image</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>cid</name> <init>= <expr><call><name>CGSMainConnectionID</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>CGPoint</name></type> <name>outHotSpot</name></decl>;</decl_stmt>
<expr_stmt><expr><name>cursor_image</name> <operator>=</operator> <call><name>CGSCreateRegisteredCursorImage</name><argument_list>(<argument><expr><name>cid</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="string">"com.apple.coregraphics.GlobalCurrent"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>outHotSpot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<decl_stmt><decl><type><name>CGRect</name></type> <name>cursor_rect</name></decl>;</decl_stmt>
<expr_stmt><expr><name><name>cursor_rect</name><operator>.</operator><name>size</name><operator>.</operator><name>width</name></name> <operator>=</operator> <call><name>CGImageGetWidth</name><argument_list>(<argument><expr><name>cursor_image</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cursor_rect</name><operator>.</operator><name>size</name><operator>.</operator><name>height</name></name> <operator>=</operator> <call><name>CGImageGetHeight</name><argument_list>(<argument><expr><name>cursor_image</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cursor_rect</name><operator>.</operator><name>origin</name><operator>.</operator><name>x</name></name> <operator>=</operator> <name><name>cursor_pos</name><operator>.</operator><name>x</name></name> <operator>-</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_left</name></name> <operator>-</operator> <name><name>outHotSpot</name><operator>.</operator><name>x</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>cursor_rect</name><operator>.</operator><name>origin</name><operator>.</operator><name>y</name></name> <operator>=</operator> <name><name>p_data</name><operator>-&gt;</operator><name>offscreen_rect</name><operator>.</operator><name>size</name><operator>.</operator><name>height</name></name>
<operator>-</operator> <operator>(</operator><name><name>cursor_pos</name><operator>.</operator><name>y</name></name> <operator>+</operator> <name><name>cursor_rect</name><operator>.</operator><name>size</name><operator>.</operator><name>height</name></name> <operator>-</operator> <name><name>p_sys</name><operator>-&gt;</operator><name>i_top</name></name> <operator>-</operator> <name><name>outHotSpot</name><operator>.</operator><name>y</name></name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>CGContextDrawImage</name><argument_list>(<argument><expr><name><name>p_data</name><operator>-&gt;</operator><name>offscreen_context</name></name></expr></argument>, <argument><expr><name><name>p_data</name><operator>-&gt;</operator><name>offscreen_rect</name></name></expr></argument>, <argument><expr><name>image</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>CGContextDrawImage</name><argument_list>(<argument><expr><name><name>p_data</name><operator>-&gt;</operator><name>offscreen_context</name></name></expr></argument>, <argument><expr><name>cursor_rect</name></expr></argument>, <argument><expr><name>cursor_image</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>p_block</name> <operator>=</operator> <call><name>block_Alloc</name><argument_list>(<argument><expr><name><name>p_data</name><operator>-&gt;</operator><name>offscreen_bitmap_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>p_block</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>msg_Warn</name><argument_list>(<argument><expr><name>p_demux</name></expr></argument>, <argument><expr><literal type="string">"can't get block"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>CFRelease</name><argument_list>(<argument><expr><name>image</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>memmove</name><argument_list>(<argument><expr><name><name>p_block</name><operator>-&gt;</operator><name>p_buffer</name></name></expr></argument>, <argument><expr><name><name>p_data</name><operator>-&gt;</operator><name>offscreen_bitmap</name></name></expr></argument>, <argument><expr><name><name>p_data</name><operator>-&gt;</operator><name>offscreen_bitmap_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>CFRelease</name><argument_list>(<argument><expr><name>image</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>p_block</name></expr>;</return>
</block_content>}</block></function>
</unit>
