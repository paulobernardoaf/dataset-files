<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\doc\libvlc\QtGL\qtvlcwidget.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>GLWIDGET_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLWIDGET_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QOpenGLWidget&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QOpenGLVertexArrayObject&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QOpenGLBuffer&gt;</cpp:file></cpp:include>

<macro><name>QT_FORWARD_DECLARE_CLASS</name><argument_list>(<argument>QOpenGLShaderProgram</argument>)</argument_list></macro>

<decl_stmt><decl><type><name>class</name></type> <name>QtVLCWidget</name> <range>: <expr><name>public</name> <name>QOpenGLWidget</name>
<block>{
<expr><name>Q_OBJECT</name>

<name>public</name><operator>:</operator>
<call><name>QtVLCWidget</name><argument_list>(<argument><expr><name>QWidget</name> <operator>*</operator><name>parent</name> <operator>=</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;
<expr><operator>~</operator><call><name>QtVLCWidget</name><argument_list>()</argument_list></call></expr>;

<expr><name>QSize</name> <macro><name>minimumSizeHint</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <name>override</name></expr>;
<expr><name>QSize</name> <macro><name>sizeHint</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <name>override</name></expr>;

<expr><name>bool</name> <call><name>playMedia</name><argument_list>(<argument><expr><specifier>const</specifier> <name>char</name><operator>*</operator> <name>url</name></expr></argument>)</argument_list></call></expr>;

<expr><name>public</name> <name>slots</name><operator>:</operator>
<name>void</name> <call><name>cleanup</name><argument_list>()</argument_list></call></expr>;

<expr><name>protected</name><operator>:</operator>
<name>void</name> <macro><name>initializeGL</name><argument_list>()</argument_list></macro> <name>override</name></expr>;
<expr><name>void</name> <macro><name>paintGL</name><argument_list>()</argument_list></macro> <name>override</name></expr>;
<expr><name>void</name> <macro><name>resizeGL</name><argument_list>(<argument>int width</argument>, <argument>int height</argument>)</argument_list></macro> <name>override</name></expr>;

<expr><name>private</name><operator>:</operator>
<name>QOpenGLVertexArrayObject</name> <name>m_vao</name></expr>;
<expr><name>QOpenGLShaderProgram</name> <operator>*</operator><name>m_program</name></expr>;

<expr><name>class</name> <name>VLCVideo</name> <operator>*</operator><name>mVLC</name></expr>;

<expr><name>void</name> <call><name>stop</name><argument_list>()</argument_list></call></expr>;
struct <expr><name>libvlc_instance_t</name><operator>*</operator> <name>m_vlc</name> <operator>=</operator> <name>nullptr</name></expr>;
struct <expr><name>libvlc_media_player_t</name><operator>*</operator> <name>m_mp</name> <operator>=</operator> <name>nullptr</name></expr>;
struct <expr><name>libvlc_media_t</name><operator>*</operator> <name>m_media</name> <operator>=</operator> <name>nullptr</name></expr>;

<expr><name>QOpenGLBuffer</name> <name>vertexBuffer</name></expr>, <expr><name>vertexIndexBuffer</name></expr>;
}</block></expr></range></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
