






















#ifndef TEST_H
#define TEST_H





#ifdef HAVE_CONFIG_H
# include "config.h"
#endif
#include <vlc/vlc.h>

#undef NDEBUG
#include <assert.h>

#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <unistd.h>
#include <signal.h>





static const char * test_defaults_args[] = {
    "-v", "--vout=vdummy",
};

static const int test_defaults_nargs =
    sizeof (test_defaults_args) / sizeof (test_defaults_args[0]);


static const char test_default_sample[] = SRCDIR"/samples/empty.voc";
static const char test_default_video[] = SRCDIR"/samples/image.jpg";






#define test_log( ... ) printf( "testapi: " __VA_ARGS__ );

static inline void on_timeout(int signum)
{
    assert(signum == SIGALRM);
    abort(); 
}

static inline void test_init (void)
{
    (void)test_default_sample; 

    
    
    unsigned alarm_timeout = 10;
    

    char *alarm_timeout_str = getenv("VLC_TEST_TIMEOUT");
    if (alarm_timeout_str)
    {
        int val = atoi(alarm_timeout_str);
        if (val <= 0)
            alarm_timeout = 0; 
        else
            alarm_timeout = val;
    }
    if (alarm_timeout != 0)
    {
        struct sigaction sig = {
            .sa_handler = on_timeout,
        };
        sigaction(SIGALRM, &sig, NULL);
        alarm (alarm_timeout);
    }

    setenv( "VLC_PLUGIN_PATH", "../modules", 1 );
}

#endif 
