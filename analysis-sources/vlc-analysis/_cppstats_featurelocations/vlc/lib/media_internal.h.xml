<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\lib\media_internal.h">






















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_LIBVLC_MEDIA_INTERNAL_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_LIBVLC_MEDIA_INTERNAL_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc/libvlc.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc/libvlc_media.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_input.h&gt;</cpp:file></cpp:include>

<struct>struct <name>libvlc_media_t</name>
<block>{
<decl_stmt><decl><type><name>libvlc_event_manager_t</name></type> <name>event_manager</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>input_item_t</name> <modifier>*</modifier></type><name>p_input_item</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_refcount</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>libvlc_instance_t</name> <modifier>*</modifier></type><name>p_libvlc_instance</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>libvlc_state_t</name></type> <name>state</name></decl>;</decl_stmt>
<macro><name>VLC_FORWARD_DECLARE_OBJECT</name><argument_list>(<argument>libvlc_media_list_t*</argument>)</argument_list></macro> <expr_stmt><expr><name>p_subitems</name></expr>;</expr_stmt> 
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>p_user_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>vlc_cond_t</name></type> <name>parsed_cond</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>parsed_lock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>subitems_lock</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>libvlc_media_parsed_status_t</name></type> <name>parsed_status</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>is_parsed</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>has_asked_preparse</name></decl>;</decl_stmt>
}</block>;</struct>


<function_decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type> <name>libvlc_media_new_from_input_item</name><parameter_list>(
<parameter><decl><type><name>libvlc_instance_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>input_item_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>libvlc_media_set_state</name><parameter_list>( <parameter><decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>libvlc_state_t</name></type></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>libvlc_media_add_subtree</name><parameter_list>(<parameter><decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>input_item_node_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
