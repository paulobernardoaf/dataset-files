<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\lib\media_list.c">





















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CONFIG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc/libvlc.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc/libvlc_picture.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc/libvlc_media.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc/libvlc_media_list.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc/libvlc_events.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libvlc_internal.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"media_internal.h"</cpp:file></cpp:include> 
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"media_list_internal.h"</cpp:file></cpp:include>

<typedef>typedef <type><enum>enum <name>EventPlaceInTime</name> <block>{
<decl><name>EventWillHappen</name></decl>,
<decl><name>EventDidHappen</name></decl>
}</block></enum></type> <name>EventPlaceInTime</name>;</typedef>












<function><type><specifier>static</specifier> <name>void</name></type>
<name>notify_item_addition</name><parameter_list>( <parameter><decl><type><name>libvlc_media_list_t</name> <modifier>*</modifier></type> <name>p_mlist</name></decl></parameter>,
<parameter><decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type> <name>p_md</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>,
<parameter><decl><type><name>EventPlaceInTime</name></type> <name>event_status</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>libvlc_event_t</name></type> <name>event</name></decl>;</decl_stmt>


<if_stmt><if>if<condition>( <expr><name>event_status</name> <operator>==</operator> <name>EventDidHappen</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>libvlc_MediaListItemAdded</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>u</name><operator>.</operator><name>media_list_item_added</name><operator>.</operator><name>item</name></name> <operator>=</operator> <name>p_md</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>u</name><operator>.</operator><name>media_list_item_added</name><operator>.</operator><name>index</name></name> <operator>=</operator> <name>index</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else 
<block>{<block_content>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>libvlc_MediaListWillAddItem</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>u</name><operator>.</operator><name>media_list_will_add_item</name><operator>.</operator><name>item</name></name> <operator>=</operator> <name>p_md</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>u</name><operator>.</operator><name>media_list_will_add_item</name><operator>.</operator><name>index</name></name> <operator>=</operator> <name>index</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>


<expr_stmt><expr><call><name>libvlc_event_send</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>event_manager</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>event</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>






<function><type><specifier>static</specifier> <name>void</name></type>
<name>notify_item_deletion</name><parameter_list>( <parameter><decl><type><name>libvlc_media_list_t</name> <modifier>*</modifier></type> <name>p_mlist</name></decl></parameter>,
<parameter><decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type> <name>p_md</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>,
<parameter><decl><type><name>EventPlaceInTime</name></type> <name>event_status</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>libvlc_event_t</name></type> <name>event</name></decl>;</decl_stmt>


<if_stmt><if>if<condition>( <expr><name>event_status</name> <operator>==</operator> <name>EventDidHappen</name></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>libvlc_MediaListItemDeleted</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>u</name><operator>.</operator><name>media_list_item_deleted</name><operator>.</operator><name>item</name></name> <operator>=</operator> <name>p_md</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>u</name><operator>.</operator><name>media_list_item_deleted</name><operator>.</operator><name>index</name></name> <operator>=</operator> <name>index</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else 
<block>{<block_content>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>libvlc_MediaListWillDeleteItem</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>u</name><operator>.</operator><name>media_list_will_delete_item</name><operator>.</operator><name>item</name></name> <operator>=</operator> <name>p_md</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>u</name><operator>.</operator><name>media_list_will_delete_item</name><operator>.</operator><name>index</name></name> <operator>=</operator> <name>index</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>


<expr_stmt><expr><call><name>libvlc_event_send</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>event_manager</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>event</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>libvlc_media_list_internal_end_reached</name><parameter_list>( <parameter><decl><type><name>libvlc_media_list_t</name> <modifier>*</modifier></type> <name>p_mlist</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>libvlc_event_t</name></type> <name>event</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>libvlc_MediaListEndReached</name></expr>;</expr_stmt>


<expr_stmt><expr><call><name>libvlc_event_send</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>event_manager</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>event</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <specifier>inline</specifier>
<name>bool</name></type> <name>mlist_is_writable</name><parameter_list>( <parameter><decl><type><name>libvlc_media_list_t</name> <modifier>*</modifier></type><name>p_mlist</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><operator>!</operator><name>p_mlist</name><operator>||</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>b_read_only</name></name></expr> )</condition>
<block>{<block_content>

<expr_stmt><expr><call><name>libvlc_printerr</name><argument_list>( <argument><expr><literal type="string">"Attempt to write a read-only media list"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>










<function><type><name>libvlc_media_list_t</name> <modifier>*</modifier></type>
<name>libvlc_media_list_new</name><parameter_list>( <parameter><decl><type><name>libvlc_instance_t</name> <modifier>*</modifier></type> <name>p_inst</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>libvlc_media_list_t</name> <modifier>*</modifier></type> <name>p_mlist</name></decl>;</decl_stmt>

<expr_stmt><expr><name>p_mlist</name> <operator>=</operator> <call><name>malloc</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>libvlc_media_list_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><call><name>unlikely</name><argument_list>(<argument><expr><name>p_mlist</name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>libvlc_printerr</name><argument_list>( <argument><expr><literal type="string">"Not enough memory"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>p_mlist</name><operator>-&gt;</operator><name>p_libvlc_instance</name></name> <operator>=</operator> <name>p_inst</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>libvlc_event_manager_init</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>event_manager</name></name></expr></argument>, <argument><expr><name>p_mlist</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_mlist</name><operator>-&gt;</operator><name>b_read_only</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vlc_mutex_init</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>object_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_mutex_init</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>refcount_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>vlc_array_init</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>items</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assert</name><argument_list>( <argument><expr><name><name>p_mlist</name><operator>-&gt;</operator><name>items</name><operator>.</operator><name>i_count</name></name> <operator>==</operator> <literal type="number">0</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_mlist</name><operator>-&gt;</operator><name>i_refcount</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_mlist</name><operator>-&gt;</operator><name>p_md</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_mlist</name><operator>-&gt;</operator><name>p_internal_md</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>libvlc_retain</name><argument_list>( <argument><expr><name>p_inst</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>p_mlist</name></expr>;</return>
</block_content>}</block></function>






<function><type><name>void</name></type> <name>libvlc_media_list_release</name><parameter_list>( <parameter><decl><type><name>libvlc_media_list_t</name> <modifier>*</modifier></type> <name>p_mlist</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>refcount_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_mlist</name><operator>-&gt;</operator><name>i_refcount</name></name><operator>--</operator></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name><name>p_mlist</name><operator>-&gt;</operator><name>i_refcount</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>refcount_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>refcount_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>



<expr_stmt><expr><call><name>libvlc_event_manager_destroy</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>event_manager</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>libvlc_media_release</name><argument_list>( <argument><expr><name><name>p_mlist</name><operator>-&gt;</operator><name>p_md</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<for>for<control>( <init><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>vlc_array_count</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>items</name></name></expr></argument> )</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control>
<block>{<block_content>
<decl_stmt><decl><type><name>libvlc_media_t</name><modifier>*</modifier></type> <name>p_md</name> <init>= <expr><call><name>vlc_array_item_at_index</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>items</name></name></expr></argument>, <argument><expr><name>i</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>libvlc_media_release</name><argument_list>( <argument><expr><name>p_md</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><call><name>vlc_array_clear</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>items</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>libvlc_release</name><argument_list>( <argument><expr><name><name>p_mlist</name><operator>-&gt;</operator><name>p_libvlc_instance</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>( <argument><expr><name>p_mlist</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>






<function><type><name>void</name></type> <name>libvlc_media_list_retain</name><parameter_list>( <parameter><decl><type><name>libvlc_media_list_t</name> <modifier>*</modifier></type> <name>p_mlist</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>refcount_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_mlist</name><operator>-&gt;</operator><name>i_refcount</name></name><operator>++</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>refcount_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>




<function><type><name>void</name></type> <name>libvlc_media_list_set_media</name><parameter_list>( <parameter><decl><type><name>libvlc_media_list_t</name> <modifier>*</modifier></type> <name>p_mlist</name></decl></parameter>,
<parameter><decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type> <name>p_md</name></decl></parameter> )</parameter_list>

<block>{<block_content>
<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>object_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name><name>p_mlist</name><operator>-&gt;</operator><name>p_internal_md</name></name> <operator>||</operator> <operator>!</operator><call><name>mlist_is_writable</name><argument_list>(<argument><expr><name>p_mlist</name></expr></argument>)</argument_list></call></expr> )</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>object_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>libvlc_media_release</name><argument_list>( <argument><expr><name><name>p_mlist</name><operator>-&gt;</operator><name>p_md</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>libvlc_media_retain</name><argument_list>( <argument><expr><name>p_md</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_mlist</name><operator>-&gt;</operator><name>p_md</name></name> <operator>=</operator> <name>p_md</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>object_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>










<function><type><name>libvlc_media_t</name> <modifier>*</modifier></type>
<name>libvlc_media_list_media</name><parameter_list>( <parameter><decl><type><name>libvlc_media_list_t</name> <modifier>*</modifier></type> <name>p_mlist</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type><name>p_md</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>object_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p_md</name> <operator>=</operator> <ternary><condition><expr><name><name>p_mlist</name><operator>-&gt;</operator><name>p_internal_md</name></name></expr> ?</condition><then> <expr><name><name>p_mlist</name><operator>-&gt;</operator><name>p_internal_md</name></name></expr> </then><else>: <expr><name><name>p_mlist</name><operator>-&gt;</operator><name>p_md</name></name></expr></else></ternary></expr>;</expr_stmt>
<if_stmt><if>if<condition>( <expr><name>p_md</name></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>libvlc_media_retain</name><argument_list>( <argument><expr><name>p_md</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>object_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>p_md</name></expr>;</return>
</block_content>}</block></function>






<function><type><name>int</name></type> <name>libvlc_media_list_count</name><parameter_list>( <parameter><decl><type><name>libvlc_media_list_t</name> <modifier>*</modifier></type> <name>p_mlist</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>vlc_array_count</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>items</name></name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>






<function><type><name>int</name></type> <name>libvlc_media_list_add_media</name><parameter_list>( <parameter><decl><type><name>libvlc_media_list_t</name> <modifier>*</modifier></type> <name>p_mlist</name></decl></parameter>,
<parameter><decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type> <name>p_md</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>mlist_is_writable</name><argument_list>(<argument><expr><name>p_mlist</name></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>libvlc_media_list_internal_add_media</name><argument_list>( <argument><expr><name>p_mlist</name></expr></argument>, <argument><expr><name>p_md</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>libvlc_media_list_internal_add_media</name><parameter_list>( <parameter><decl><type><name>libvlc_media_list_t</name> <modifier>*</modifier></type> <name>p_mlist</name></decl></parameter>,
<parameter><decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type> <name>p_md</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>libvlc_media_retain</name><argument_list>( <argument><expr><name>p_md</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>notify_item_addition</name><argument_list>( <argument><expr><name>p_mlist</name></expr></argument>, <argument><expr><name>p_md</name></expr></argument>, <argument><expr><call><name>vlc_array_count</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>items</name></name></expr></argument> )</argument_list></call></expr></argument>,
<argument><expr><name>EventWillHappen</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_array_append_or_abort</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>items</name></name></expr></argument>, <argument><expr><name>p_md</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>notify_item_addition</name><argument_list>( <argument><expr><name>p_mlist</name></expr></argument>, <argument><expr><name>p_md</name></expr></argument>, <argument><expr><call><name>vlc_array_count</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>items</name></name></expr></argument> )</argument_list></call><operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>EventDidHappen</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>






<function><type><name>int</name></type> <name>libvlc_media_list_insert_media</name><parameter_list>( <parameter><decl><type><name>libvlc_media_list_t</name> <modifier>*</modifier></type> <name>p_mlist</name></decl></parameter>,
<parameter><decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type> <name>p_md</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>mlist_is_writable</name><argument_list>(<argument><expr><name>p_mlist</name></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>libvlc_media_list_internal_insert_media</name><argument_list>( <argument><expr><name>p_mlist</name></expr></argument>, <argument><expr><name>p_md</name></expr></argument>, <argument><expr><name>index</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>libvlc_media_list_internal_insert_media</name><parameter_list>( <parameter><decl><type><name>libvlc_media_list_t</name> <modifier>*</modifier></type> <name>p_mlist</name></decl></parameter>,
<parameter><decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type> <name>p_md</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>libvlc_media_retain</name><argument_list>( <argument><expr><name>p_md</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>notify_item_addition</name><argument_list>( <argument><expr><name>p_mlist</name></expr></argument>, <argument><expr><name>p_md</name></expr></argument>, <argument><expr><name>index</name></expr></argument>, <argument><expr><name>EventWillHappen</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_array_insert_or_abort</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>items</name></name></expr></argument>, <argument><expr><name>p_md</name></expr></argument>, <argument><expr><name>index</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>notify_item_addition</name><argument_list>( <argument><expr><name>p_mlist</name></expr></argument>, <argument><expr><name>p_md</name></expr></argument>, <argument><expr><name>index</name></expr></argument>, <argument><expr><name>EventDidHappen</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>






<function><type><name>int</name></type> <name>libvlc_media_list_remove_index</name><parameter_list>( <parameter><decl><type><name>libvlc_media_list_t</name> <modifier>*</modifier></type> <name>p_mlist</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<if_stmt><if>if<condition>( <expr><operator>!</operator><call><name>mlist_is_writable</name><argument_list>(<argument><expr><name>p_mlist</name></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo"><block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>
<return>return <expr><call><name>libvlc_media_list_internal_remove_index</name><argument_list>( <argument><expr><name>p_mlist</name></expr></argument>, <argument><expr><name>index</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>


<function><type><name>int</name></type> <name>libvlc_media_list_internal_remove_index</name><parameter_list>( <parameter><decl><type><name>libvlc_media_list_t</name> <modifier>*</modifier></type> <name>p_mlist</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type> <name>p_md</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>(</operator><name>size_t</name><operator>)</operator> <name>index</name> <operator>&gt;=</operator> <call><name>vlc_array_count</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>items</name></name></expr></argument> )</argument_list></call></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>libvlc_printerr</name><argument_list>( <argument><expr><literal type="string">"Index out of bounds"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>p_md</name> <operator>=</operator> <call><name>vlc_array_item_at_index</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>items</name></name></expr></argument>, <argument><expr><name>index</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>notify_item_deletion</name><argument_list>( <argument><expr><name>p_mlist</name></expr></argument>, <argument><expr><name>p_md</name></expr></argument>, <argument><expr><name>index</name></expr></argument>, <argument><expr><name>EventWillHappen</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vlc_array_remove</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>items</name></name></expr></argument>, <argument><expr><name>index</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>notify_item_deletion</name><argument_list>( <argument><expr><name>p_mlist</name></expr></argument>, <argument><expr><name>p_md</name></expr></argument>, <argument><expr><name>index</name></expr></argument>, <argument><expr><name>EventDidHappen</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>libvlc_media_release</name><argument_list>( <argument><expr><name>p_md</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>






<function><type><name>libvlc_media_t</name> <modifier>*</modifier></type>
<name>libvlc_media_list_item_at_index</name><parameter_list>( <parameter><decl><type><name>libvlc_media_list_t</name> <modifier>*</modifier></type> <name>p_mlist</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type> <name>p_md</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>( <expr><operator>(</operator><name>size_t</name><operator>)</operator> <name>index</name> <operator>&gt;=</operator> <call><name>vlc_array_count</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>items</name></name></expr></argument> )</argument_list></call></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>libvlc_printerr</name><argument_list>( <argument><expr><literal type="string">"Index out of bounds"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>p_md</name> <operator>=</operator> <call><name>vlc_array_item_at_index</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>items</name></name></expr></argument>, <argument><expr><name>index</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>libvlc_media_retain</name><argument_list>( <argument><expr><name>p_md</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>p_md</name></expr>;</return>
</block_content>}</block></function>







<function><type><name>int</name></type> <name>libvlc_media_list_index_of_item</name><parameter_list>( <parameter><decl><type><name>libvlc_media_list_t</name> <modifier>*</modifier></type> <name>p_mlist</name></decl></parameter>,
<parameter><decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type> <name>p_searched_md</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>idx</name> <init>= <expr><call><name>vlc_array_index_of_item</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>items</name></name></expr></argument>, <argument><expr><name>p_searched_md</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>( <expr><name>idx</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>libvlc_printerr</name><argument_list>( <argument><expr><literal type="string">"Media not found"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>idx</name></expr>;</return>
</block_content>}</block></function>






<function><type><name>bool</name></type> <name>libvlc_media_list_is_readonly</name><parameter_list>( <parameter><decl><type><name>libvlc_media_list_t</name> <modifier>*</modifier></type> <name>p_mlist</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>p_mlist</name><operator>-&gt;</operator><name>b_read_only</name></name></expr>;</return>
</block_content>}</block></function>







<function><type><name>void</name></type> <name>libvlc_media_list_lock</name><parameter_list>( <parameter><decl><type><name>libvlc_media_list_t</name> <modifier>*</modifier></type> <name>p_mlist</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>vlc_mutex_lock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>object_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>







<function><type><name>void</name></type> <name>libvlc_media_list_unlock</name><parameter_list>( <parameter><decl><type><name>libvlc_media_list_t</name> <modifier>*</modifier></type> <name>p_mlist</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>vlc_mutex_unlock</name><argument_list>( <argument><expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>object_lock</name></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>







<function><type><name>libvlc_event_manager_t</name> <modifier>*</modifier></type>
<name>libvlc_media_list_event_manager</name><parameter_list>( <parameter><decl><type><name>libvlc_media_list_t</name> <modifier>*</modifier></type> <name>p_mlist</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><operator>&amp;</operator><name><name>p_mlist</name><operator>-&gt;</operator><name>event_manager</name></name></expr>;</return>
</block_content>}</block></function>
</unit>
