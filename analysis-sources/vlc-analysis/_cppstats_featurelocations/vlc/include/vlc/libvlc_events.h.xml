<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\include\vlc\libvlc_events.h">






















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LIBVLC_EVENTS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LIBVLC_EVENTS_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>






<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><name><name>struct</name> <name>libvlc_renderer_item_t</name></name></type> <name>libvlc_renderer_item_t</name>;</typedef>









<enum>enum <name>libvlc_event_e</name> <block>{







<decl><name>libvlc_MediaMetaChanged</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,




<decl><name>libvlc_MediaSubItemAdded</name></decl>,




<decl><name>libvlc_MediaDurationChanged</name></decl>,






<decl><name>libvlc_MediaParsedChanged</name></decl>,



<decl><name>libvlc_MediaFreed</name></decl>,





<decl><name>libvlc_MediaStateChanged</name></decl>,



<decl><name>libvlc_MediaSubItemTreeAdded</name></decl>,




<decl><name>libvlc_MediaThumbnailGenerated</name></decl>,

<decl><name>libvlc_MediaPlayerMediaChanged</name><init>=<expr><literal type="number">0x100</literal></expr></init></decl>,
<decl><name>libvlc_MediaPlayerNothingSpecial</name></decl>,
<decl><name>libvlc_MediaPlayerOpening</name></decl>,
<decl><name>libvlc_MediaPlayerBuffering</name></decl>,
<decl><name>libvlc_MediaPlayerPlaying</name></decl>,
<decl><name>libvlc_MediaPlayerPaused</name></decl>,
<decl><name>libvlc_MediaPlayerStopped</name></decl>,
<decl><name>libvlc_MediaPlayerForward</name></decl>,
<decl><name>libvlc_MediaPlayerBackward</name></decl>,
<decl><name>libvlc_MediaPlayerEndReached</name></decl>,
<decl><name>libvlc_MediaPlayerEncounteredError</name></decl>,
<decl><name>libvlc_MediaPlayerTimeChanged</name></decl>,
<decl><name>libvlc_MediaPlayerPositionChanged</name></decl>,
<decl><name>libvlc_MediaPlayerSeekableChanged</name></decl>,
<decl><name>libvlc_MediaPlayerPausableChanged</name></decl>,
<decl><name>libvlc_MediaPlayerTitleChanged</name></decl>,
<decl><name>libvlc_MediaPlayerSnapshotTaken</name></decl>,
<decl><name>libvlc_MediaPlayerLengthChanged</name></decl>,
<decl><name>libvlc_MediaPlayerVout</name></decl>,
<decl><name>libvlc_MediaPlayerScrambledChanged</name></decl>,
<decl><name>libvlc_MediaPlayerESAdded</name></decl>,
<decl><name>libvlc_MediaPlayerESDeleted</name></decl>,
<decl><name>libvlc_MediaPlayerESSelected</name></decl>,
<decl><name>libvlc_MediaPlayerCorked</name></decl>,
<decl><name>libvlc_MediaPlayerUncorked</name></decl>,
<decl><name>libvlc_MediaPlayerMuted</name></decl>,
<decl><name>libvlc_MediaPlayerUnmuted</name></decl>,
<decl><name>libvlc_MediaPlayerAudioVolume</name></decl>,
<decl><name>libvlc_MediaPlayerAudioDevice</name></decl>,
<decl><name>libvlc_MediaPlayerChapterChanged</name></decl>,





<decl><name>libvlc_MediaListItemAdded</name><init>=<expr><literal type="number">0x200</literal></expr></init></decl>,




<decl><name>libvlc_MediaListWillAddItem</name></decl>,




<decl><name>libvlc_MediaListItemDeleted</name></decl>,




<decl><name>libvlc_MediaListWillDeleteItem</name></decl>,






<decl><name>libvlc_MediaListEndReached</name></decl>,





<decl><name>libvlc_MediaListViewItemAdded</name><init>=<expr><literal type="number">0x300</literal></expr></init></decl>,




<decl><name>libvlc_MediaListViewWillAddItem</name></decl>,




<decl><name>libvlc_MediaListViewItemDeleted</name></decl>,




<decl><name>libvlc_MediaListViewWillDeleteItem</name></decl>,





<decl><name>libvlc_MediaListPlayerPlayed</name><init>=<expr><literal type="number">0x400</literal></expr></init></decl>,






<decl><name>libvlc_MediaListPlayerNextItemSet</name></decl>,





<decl><name>libvlc_MediaListPlayerStopped</name></decl>,






<decl><name>libvlc_RendererDiscovererItemAdded</name><init>=<expr><literal type="number">0x502</literal></expr></init></decl>,






<decl><name>libvlc_RendererDiscovererItemDeleted</name></decl>,
}</block>;</enum>




<typedef>typedef <type><struct>struct <name>libvlc_event_t</name>
<block>{
<decl_stmt><decl><type><name>int</name></type> <name>type</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>p_obj</name></decl>;</decl_stmt> 
<union>union
<block>{

<struct>struct
<block>{
<decl_stmt><decl><type><name>libvlc_meta_t</name></type> <name>meta_type</name></decl>;</decl_stmt>
}</block> <decl><name>media_meta_changed</name></decl>;</struct>
<struct>struct
<block>{
<decl_stmt><decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type> <name>new_child</name></decl>;</decl_stmt>
}</block> <decl><name>media_subitem_added</name></decl>;</struct>
<struct>struct
<block>{
<decl_stmt><decl><type><name>int64_t</name></type> <name>new_duration</name></decl>;</decl_stmt>
}</block> <decl><name>media_duration_changed</name></decl>;</struct>
<struct>struct
<block>{
<decl_stmt><decl><type><name>int</name></type> <name>new_status</name></decl>;</decl_stmt> 
}</block> <decl><name>media_parsed_changed</name></decl>;</struct>
<struct>struct
<block>{
<decl_stmt><decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type> <name>md</name></decl>;</decl_stmt>
}</block> <decl><name>media_freed</name></decl>;</struct>
<struct>struct
<block>{
<decl_stmt><decl><type><name>int</name></type> <name>new_state</name></decl>;</decl_stmt> 
}</block> <decl><name>media_state_changed</name></decl>;</struct>
<struct>struct
<block>{
<decl_stmt><decl><type><name>libvlc_picture_t</name><modifier>*</modifier></type> <name>p_thumbnail</name></decl>;</decl_stmt>
}</block> <decl><name>media_thumbnail_generated</name></decl>;</struct>
<struct>struct
<block>{
<decl_stmt><decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type> <name>item</name></decl>;</decl_stmt>
}</block> <decl><name>media_subitemtree_added</name></decl>;</struct>


<struct>struct
<block>{
<decl_stmt><decl><type><name>float</name></type> <name>new_cache</name></decl>;</decl_stmt>
}</block> <decl><name>media_player_buffering</name></decl>;</struct>
<struct>struct
<block>{
<decl_stmt><decl><type><name>int</name></type> <name>new_chapter</name></decl>;</decl_stmt>
}</block> <decl><name>media_player_chapter_changed</name></decl>;</struct>
<struct>struct
<block>{
<decl_stmt><decl><type><name>float</name></type> <name>new_position</name></decl>;</decl_stmt>
}</block> <decl><name>media_player_position_changed</name></decl>;</struct>
<struct>struct
<block>{
<decl_stmt><decl><type><name>libvlc_time_t</name></type> <name>new_time</name></decl>;</decl_stmt>
}</block> <decl><name>media_player_time_changed</name></decl>;</struct>
<struct>struct
<block>{
<decl_stmt><decl><type><name>int</name></type> <name>new_title</name></decl>;</decl_stmt>
}</block> <decl><name>media_player_title_changed</name></decl>;</struct>
<struct>struct
<block>{
<decl_stmt><decl><type><name>int</name></type> <name>new_seekable</name></decl>;</decl_stmt>
}</block> <decl><name>media_player_seekable_changed</name></decl>;</struct>
<struct>struct
<block>{
<decl_stmt><decl><type><name>int</name></type> <name>new_pausable</name></decl>;</decl_stmt>
}</block> <decl><name>media_player_pausable_changed</name></decl>;</struct>
<struct>struct
<block>{
<decl_stmt><decl><type><name>int</name></type> <name>new_scrambled</name></decl>;</decl_stmt>
}</block> <decl><name>media_player_scrambled_changed</name></decl>;</struct>
<struct>struct
<block>{
<decl_stmt><decl><type><name>int</name></type> <name>new_count</name></decl>;</decl_stmt>
}</block> <decl><name>media_player_vout</name></decl>;</struct>


<struct>struct
<block>{
<decl_stmt><decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type> <name>item</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>index</name></decl>;</decl_stmt>
}</block> <decl><name>media_list_item_added</name></decl>;</struct>
<struct>struct
<block>{
<decl_stmt><decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type> <name>item</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>index</name></decl>;</decl_stmt>
}</block> <decl><name>media_list_will_add_item</name></decl>;</struct>
<struct>struct
<block>{
<decl_stmt><decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type> <name>item</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>index</name></decl>;</decl_stmt>
}</block> <decl><name>media_list_item_deleted</name></decl>;</struct>
<struct>struct
<block>{
<decl_stmt><decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type> <name>item</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>index</name></decl>;</decl_stmt>
}</block> <decl><name>media_list_will_delete_item</name></decl>;</struct>


<struct>struct
<block>{
<decl_stmt><decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type> <name>item</name></decl>;</decl_stmt>
}</block> <decl><name>media_list_player_next_item_set</name></decl>;</struct>


<struct>struct
<block>{
<decl_stmt><decl><type><name>char</name><modifier>*</modifier></type> <name>psz_filename</name></decl> ;</decl_stmt>
}</block> <decl><name>media_player_snapshot_taken</name></decl> ;</struct>


<struct>struct
<block>{
<decl_stmt><decl><type><name>libvlc_time_t</name></type> <name>new_length</name></decl>;</decl_stmt>
}</block> <decl><name>media_player_length_changed</name></decl>;</struct>


<struct>struct
<block>{
<decl_stmt><decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type> <name>new_media</name></decl>;</decl_stmt>
}</block> <decl><name>media_player_media_changed</name></decl>;</struct>

<struct>struct
<block>{
<decl_stmt><decl><type><name>libvlc_track_type_t</name></type> <name>i_type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_id</name></decl>;</decl_stmt>
}</block> <decl><name>media_player_es_changed</name></decl>;</struct>

<struct>struct
<block>{
<decl_stmt><decl><type><name>float</name></type> <name>volume</name></decl>;</decl_stmt>
}</block> <decl><name>media_player_audio_volume</name></decl>;</struct>

<struct>struct
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>device</name></decl>;</decl_stmt>
}</block> <decl><name>media_player_audio_device</name></decl>;</struct>

<struct>struct
<block>{
<decl_stmt><decl><type><name>libvlc_renderer_item_t</name> <modifier>*</modifier></type><name>item</name></decl>;</decl_stmt>
}</block> <decl><name>renderer_discoverer_item_added</name></decl>;</struct>
<struct>struct
<block>{
<decl_stmt><decl><type><name>libvlc_renderer_item_t</name> <modifier>*</modifier></type><name>item</name></decl>;</decl_stmt>
}</block> <decl><name>renderer_discoverer_item_deleted</name></decl>;</struct>
}</block> <decl><name>u</name></decl>;</union> 
}</block></struct></type> <name>libvlc_event_t</name>;</typedef>




<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
