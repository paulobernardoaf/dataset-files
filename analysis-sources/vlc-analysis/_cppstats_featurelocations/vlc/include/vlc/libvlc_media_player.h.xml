<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\include\vlc\libvlc_media_player.h">























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>VLC_LIBVLC_MEDIA_PLAYER_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_LIBVLC_MEDIA_PLAYER_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdbool.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>









<typedef>typedef <type><name><name>struct</name> <name>libvlc_media_player_t</name></name></type> <name>libvlc_media_player_t</name>;</typedef>





<typedef>typedef <type><struct>struct <name>libvlc_track_description_t</name>
<block>{
<decl_stmt><decl><type><name>int</name></type> <name>i_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>libvlc_track_description_t</name></name> <modifier>*</modifier></type><name>p_next</name></decl>;</decl_stmt>

}</block></struct></type> <name>libvlc_track_description_t</name>;</typedef>




<enum>enum
<block>{
<decl><name>libvlc_title_menu</name> <init>= <expr><literal type="number">0x01</literal></expr></init></decl>,
<decl><name>libvlc_title_interactive</name> <init>= <expr><literal type="number">0x02</literal></expr></init></decl>
}</block>;</enum>

<typedef>typedef <type><struct>struct <name>libvlc_title_description_t</name>
<block>{
<decl_stmt><decl><type><name>int64_t</name></type> <name>i_duration</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_name</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>unsigned</name></type> <name>i_flags</name></decl>;</decl_stmt> 
}</block></struct></type> <name>libvlc_title_description_t</name>;</typedef>




<typedef>typedef <type><struct>struct <name>libvlc_chapter_description_t</name>
<block>{
<decl_stmt><decl><type><name>int64_t</name></type> <name>i_time_offset</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int64_t</name></type> <name>i_duration</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_name</name></decl>;</decl_stmt> 
}</block></struct></type> <name>libvlc_chapter_description_t</name>;</typedef>





<typedef>typedef <type><struct>struct <name>libvlc_audio_output_t</name>
<block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_description</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>libvlc_audio_output_t</name></name> <modifier>*</modifier></type><name>p_next</name></decl>;</decl_stmt>

}</block></struct></type> <name>libvlc_audio_output_t</name>;</typedef>




<typedef>typedef <type><struct>struct <name>libvlc_audio_output_device_t</name>
<block>{
<decl_stmt><decl><type><name><name>struct</name> <name>libvlc_audio_output_device_t</name></name> <modifier>*</modifier></type><name>p_next</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_device</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_description</name></decl>;</decl_stmt> 

}</block></struct></type> <name>libvlc_audio_output_device_t</name>;</typedef>




<typedef>typedef <type><enum>enum <name>libvlc_video_marquee_option_t</name> <block>{
<decl><name>libvlc_marquee_Enable</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>libvlc_marquee_Text</name></decl>, 
<decl><name>libvlc_marquee_Color</name></decl>,
<decl><name>libvlc_marquee_Opacity</name></decl>,
<decl><name>libvlc_marquee_Position</name></decl>,
<decl><name>libvlc_marquee_Refresh</name></decl>,
<decl><name>libvlc_marquee_Size</name></decl>,
<decl><name>libvlc_marquee_Timeout</name></decl>,
<decl><name>libvlc_marquee_X</name></decl>,
<decl><name>libvlc_marquee_Y</name></decl>
}</block></enum></type> <name>libvlc_video_marquee_option_t</name>;</typedef>




<typedef>typedef <type><enum>enum <name>libvlc_navigate_mode_t</name>
<block>{
<decl><name>libvlc_navigate_activate</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>libvlc_navigate_up</name></decl>,
<decl><name>libvlc_navigate_down</name></decl>,
<decl><name>libvlc_navigate_left</name></decl>,
<decl><name>libvlc_navigate_right</name></decl>,
<decl><name>libvlc_navigate_popup</name></decl>
}</block></enum></type> <name>libvlc_navigate_mode_t</name>;</typedef>




<typedef>typedef <type><enum>enum <name>libvlc_position_t</name> <block>{
<decl><name>libvlc_position_disable</name><init>=<expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>,
<decl><name>libvlc_position_center</name></decl>,
<decl><name>libvlc_position_left</name></decl>,
<decl><name>libvlc_position_right</name></decl>,
<decl><name>libvlc_position_top</name></decl>,
<decl><name>libvlc_position_top_left</name></decl>,
<decl><name>libvlc_position_top_right</name></decl>,
<decl><name>libvlc_position_bottom</name></decl>,
<decl><name>libvlc_position_bottom_left</name></decl>,
<decl><name>libvlc_position_bottom_right</name></decl>
}</block></enum></type> <name>libvlc_position_t</name>;</typedef>





<typedef>typedef <type><enum>enum <name>libvlc_teletext_key_t</name> <block>{
<decl><name>libvlc_teletext_key_red</name> <init>= <expr><literal type="char">'r'</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal></expr></init></decl>,
<decl><name>libvlc_teletext_key_green</name> <init>= <expr><literal type="char">'g'</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal></expr></init></decl>,
<decl><name>libvlc_teletext_key_yellow</name> <init>= <expr><literal type="char">'y'</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal></expr></init></decl>,
<decl><name>libvlc_teletext_key_blue</name> <init>= <expr><literal type="char">'b'</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal></expr></init></decl>,
<decl><name>libvlc_teletext_key_index</name> <init>= <expr><literal type="char">'i'</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal></expr></init></decl>,
}</block></enum></type> <name>libvlc_teletext_key_t</name>;</typedef>






<typedef>typedef <type><name><name>struct</name> <name>libvlc_equalizer_t</name></name></type> <name>libvlc_equalizer_t</name>;</typedef>









<function_decl><type><name>LIBVLC_API</name> <name>libvlc_media_player_t</name> <modifier>*</modifier></type> <name>libvlc_media_player_new</name><parameter_list>( <parameter><decl><type><name>libvlc_instance_t</name> <modifier>*</modifier></type><name>p_libvlc_instance</name></decl></parameter> )</parameter_list>;</function_decl>









<function_decl><type><name>LIBVLC_API</name> <name>libvlc_media_player_t</name> <modifier>*</modifier></type> <name>libvlc_media_player_new_from_media</name><parameter_list>( <parameter><decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type><name>p_md</name></decl></parameter> )</parameter_list>;</function_decl>










<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_media_player_release</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_media_player_retain</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>









<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_media_player_set_media</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>,
<parameter><decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type><name>p_md</name></decl></parameter> )</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name> <name>libvlc_media_t</name> <modifier>*</modifier></type> <name>libvlc_media_player_get_media</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>libvlc_event_manager_t</name> <modifier>*</modifier></type> <name>libvlc_media_player_event_manager</name> <parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name> <name>bool</name></type> <name>libvlc_media_player_is_playing</name><parameter_list>(<parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_media_player_play</name> <parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_media_player_set_pause</name> <parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>mp</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>do_pause</name></decl></parameter> )</parameter_list>;</function_decl>






<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_media_player_pause</name> <parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>












<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_media_player_stop_async</name> <parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>














<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_media_player_set_renderer</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>,
<parameter><decl><type><name>libvlc_renderer_item_t</name> <modifier>*</modifier></type><name>p_item</name></decl></parameter> )</parameter_list>;</function_decl>




<typedef>typedef <type><enum>enum <name>libvlc_video_color_primaries_t</name> <block>{
<decl><name>libvlc_video_primaries_BT601_525</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>libvlc_video_primaries_BT601_625</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>libvlc_video_primaries_BT709</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,
<decl><name>libvlc_video_primaries_BT2020</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,
<decl><name>libvlc_video_primaries_DCI_P3</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,
<decl><name>libvlc_video_primaries_BT470_M</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,
}</block></enum></type> <name>libvlc_video_color_primaries_t</name>;</typedef>




<typedef>typedef <type><enum>enum <name>libvlc_video_color_space_t</name> <block>{
<decl><name>libvlc_video_colorspace_BT601</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>libvlc_video_colorspace_BT709</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>libvlc_video_colorspace_BT2020</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,
}</block></enum></type> <name>libvlc_video_color_space_t</name>;</typedef>




<typedef>typedef <type><enum>enum <name>libvlc_video_transfer_func_t</name> <block>{
<decl><name>libvlc_video_transfer_func_LINEAR</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>libvlc_video_transfer_func_SRGB</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>libvlc_video_transfer_func_BT470_BG</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,
<decl><name>libvlc_video_transfer_func_BT470_M</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,
<decl><name>libvlc_video_transfer_func_BT709</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,
<decl><name>libvlc_video_transfer_func_PQ</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,
<decl><name>libvlc_video_transfer_func_SMPTE_240</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>,
<decl><name>libvlc_video_transfer_func_HLG</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,
}</block></enum></type> <name>libvlc_video_transfer_func_t</name>;</typedef>
















<typedef>typedef <function_decl><type><name>void</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>libvlc_video_lock_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>planes</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

















<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>libvlc_video_unlock_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>picture</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier><specifier>const</specifier> <modifier>*</modifier></type><name>planes</name></decl></parameter>)</parameter_list>;</function_decl></typedef>











<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>libvlc_video_display_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>picture</name></decl></parameter>)</parameter_list>;</function_decl></typedef>































<typedef>typedef <function_decl><type><name>unsigned</name></type> (<modifier>*</modifier><name>libvlc_video_format_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>opaque</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>chroma</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>width</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>height</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>pitches</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>lines</name></decl></parameter>)</parameter_list>;</function_decl></typedef>







<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>libvlc_video_cleanup_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>)</parameter_list>;</function_decl></typedef>







































<function_decl><type><name>LIBVLC_API</name>
<name>void</name></type> <name>libvlc_video_set_callbacks</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>mp</name></decl></parameter>,
<parameter><decl><type><name>libvlc_video_lock_cb</name></type> <name>lock</name></decl></parameter>,
<parameter><decl><type><name>libvlc_video_unlock_cb</name></type> <name>unlock</name></decl></parameter>,
<parameter><decl><type><name>libvlc_video_display_cb</name></type> <name>display</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter> )</parameter_list>;</function_decl>

















<function_decl><type><name>LIBVLC_API</name>
<name>void</name></type> <name>libvlc_video_set_format</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>mp</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>chroma</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>height</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>pitch</name></decl></parameter> )</parameter_list>;</function_decl>










<function_decl><type><name>LIBVLC_API</name>
<name>void</name></type> <name>libvlc_video_set_format_callbacks</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>mp</name></decl></parameter>,
<parameter><decl><type><name>libvlc_video_format_cb</name></type> <name>setup</name></decl></parameter>,
<parameter><decl><type><name>libvlc_video_cleanup_cb</name></type> <name>cleanup</name></decl></parameter> )</parameter_list>;</function_decl>


<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>bool</name></type> <name>hardware_decoding</name></decl>;</decl_stmt> 
}</block></struct></type> <name>libvlc_video_setup_device_cfg_t</name>;</typedef>

<typedef>typedef <type><struct>struct
<block>{
<union>union <block>{
<struct>struct <block>{
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>device_context</name></decl>;</decl_stmt> 
}</block> <decl><name>d3d11</name></decl>;</struct>
<struct>struct <block>{
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>device</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>adapter</name></decl>;</decl_stmt> 
}</block> <decl><name>d3d9</name></decl>;</struct>
}</block>;</union>
}</block></struct></type> <name>libvlc_video_setup_device_info_t</name>;</typedef>






















<typedef>typedef <function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>libvlc_video_output_setup_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>opaque</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>libvlc_video_setup_device_cfg_t</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>,
<parameter><decl><type><name>libvlc_video_setup_device_info_t</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl></typedef>








<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>libvlc_video_output_cleanup_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>opaque</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>unsigned</name></type> <name>width</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>unsigned</name></type> <name>height</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>unsigned</name></type> <name>bitdepth</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>bool</name></type> <name>full_range</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>libvlc_video_color_space_t</name></type> <name>colorspace</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>libvlc_video_color_primaries_t</name></type> <name>primaries</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>libvlc_video_transfer_func_t</name></type> <name>transfer</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>device</name></decl>;</decl_stmt> 
}</block></struct></type> <name>libvlc_video_render_cfg_t</name>;</typedef>

<typedef>typedef <type><struct>struct
<block>{
<union>union <block>{
<decl_stmt><decl><type><name>int</name></type> <name>dxgi_format</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint32_t</name></type> <name>d3d9_format</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>opengl_format</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>p_surface</name></decl>;</decl_stmt> 
}</block>;</union>
<decl_stmt><decl><type><name>bool</name></type> <name>full_range</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>libvlc_video_color_space_t</name></type> <name>colorspace</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>libvlc_video_color_primaries_t</name></type> <name>primaries</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>libvlc_video_transfer_func_t</name></type> <name>transfer</name></decl>;</decl_stmt> 
}</block></struct></type> <name>libvlc_video_output_cfg_t</name>;</typedef>


















<typedef>typedef <function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>libvlc_video_update_output_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>opaque</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>libvlc_video_render_cfg_t</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>,
<parameter><decl><type><name>libvlc_video_output_cfg_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter> )</parameter_list>;</function_decl></typedef>








<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>libvlc_video_swap_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>opaque</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

























<typedef>typedef <function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>libvlc_video_makeCurrent_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>opaque</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>enter</name></decl></parameter>)</parameter_list>;</function_decl></typedef>









<typedef>typedef <function_decl><type><name>void</name><modifier>*</modifier></type> (<modifier>*</modifier><name>libvlc_video_getProcAddress_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>opaque</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>fct_name</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <type><struct>struct
<block>{

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>RedPrimary</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>GreenPrimary</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>BluePrimary</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>WhitePoint</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>MaxMasteringLuminance</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>MinMasteringLuminance</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>MaxContentLightLevel</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>MaxFrameAverageLightLevel</name></decl>;</decl_stmt>
}</block></struct></type> <name>libvlc_video_frame_hdr10_metadata_t</name>;</typedef>

<typedef>typedef <type><enum>enum <name>libvlc_video_metadata_type_t</name> <block>{
<decl><name>libvlc_video_metadata_frame_hdr10</name></decl>, 
}</block></enum></type> <name>libvlc_video_metadata_type_t</name>;</typedef>









<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>libvlc_video_frameMetadata_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>opaque</name></decl></parameter>, <parameter><decl><type><name>libvlc_video_metadata_type_t</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>metadata</name></decl></parameter>)</parameter_list>;</function_decl></typedef>





<typedef>typedef <type><enum>enum <name>libvlc_video_engine_t</name> <block>{

<decl><name>libvlc_video_engine_disable</name></decl>,
<decl><name>libvlc_video_engine_opengl</name></decl>,
<decl><name>libvlc_video_engine_gles2</name></decl>,

<decl><name>libvlc_video_engine_d3d11</name></decl>,

<decl><name>libvlc_video_engine_d3d9</name></decl>,
}</block></enum></type> <name>libvlc_video_engine_t</name>;</typedef>














<typedef>typedef <function_decl><type><name>void</name></type>( <modifier>*</modifier><name>libvlc_video_output_set_resize_cb</name> )<parameter_list>( <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>,
<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>report_size_change</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>report_opaque</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>height</name></decl></parameter>)</parameter_list></function_decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>report_opaque</name></decl></parameter> )</parameter_list>;</function_decl></typedef>



















<typedef>typedef <function_decl><type><name>bool</name></type>( <modifier>*</modifier><name>libvlc_video_output_select_plane_cb</name> )<parameter_list>( <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>plane</name></decl></parameter> )</parameter_list>;</function_decl></typedef>
























<function_decl><type><name>LIBVLC_API</name>
<name>bool</name></type> <name>libvlc_video_set_output_callbacks</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>mp</name></decl></parameter>,
<parameter><decl><type><name>libvlc_video_engine_t</name></type> <name>engine</name></decl></parameter>,
<parameter><decl><type><name>libvlc_video_output_setup_cb</name></type> <name>setup_cb</name></decl></parameter>,
<parameter><decl><type><name>libvlc_video_output_cleanup_cb</name></type> <name>cleanup_cb</name></decl></parameter>,
<parameter><decl><type><name>libvlc_video_output_set_resize_cb</name></type> <name>resize_cb</name></decl></parameter>,
<parameter><decl><type><name>libvlc_video_update_output_cb</name></type> <name>update_output_cb</name></decl></parameter>,
<parameter><decl><type><name>libvlc_video_swap_cb</name></type> <name>swap_cb</name></decl></parameter>,
<parameter><decl><type><name>libvlc_video_makeCurrent_cb</name></type> <name>makeCurrent_cb</name></decl></parameter>,
<parameter><decl><type><name>libvlc_video_getProcAddress_cb</name></type> <name>getProcAddress_cb</name></decl></parameter>,
<parameter><decl><type><name>libvlc_video_frameMetadata_cb</name></type> <name>metadata_cb</name></decl></parameter>,
<parameter><decl><type><name>libvlc_video_output_select_plane_cb</name></type> <name>select_plane_cb</name></decl></parameter>,
<parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>opaque</name></decl></parameter> )</parameter_list>;</function_decl>



































<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_media_player_set_nsobject</name> <parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>drawable</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>void</name> <modifier>*</modifier></type> <name>libvlc_media_player_get_nsobject</name> <parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>









































<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_media_player_set_xwindow</name><parameter_list>(<parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>drawable</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>LIBVLC_API</name> <name>uint32_t</name></type> <name>libvlc_media_player_get_xwindow</name> <parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>









<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_media_player_set_hwnd</name> <parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>drawable</name></decl></parameter> )</parameter_list>;</function_decl>









<function_decl><type><name>LIBVLC_API</name> <name>void</name> <modifier>*</modifier></type><name>libvlc_media_player_get_hwnd</name> <parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>










<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_media_player_set_android_context</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_awindow_handler</name></decl></parameter> )</parameter_list>;</function_decl>
























<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>libvlc_audio_play_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>samples</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>count</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>pts</name></decl></parameter>)</parameter_list>;</function_decl></typedef>










<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>libvlc_audio_pause_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>pts</name></decl></parameter>)</parameter_list>;</function_decl></typedef>











<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>libvlc_audio_resume_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>pts</name></decl></parameter>)</parameter_list>;</function_decl></typedef>










<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>libvlc_audio_flush_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>pts</name></decl></parameter>)</parameter_list>;</function_decl></typedef>










<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>libvlc_audio_drain_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl></typedef>







<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>libvlc_audio_set_volume_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>volume</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>mute</name></decl></parameter>)</parameter_list>;</function_decl></typedef>



















<function_decl><type><name>LIBVLC_API</name>
<name>void</name></type> <name>libvlc_audio_set_callbacks</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>mp</name></decl></parameter>,
<parameter><decl><type><name>libvlc_audio_play_cb</name></type> <name>play</name></decl></parameter>,
<parameter><decl><type><name>libvlc_audio_pause_cb</name></type> <name>pause</name></decl></parameter>,
<parameter><decl><type><name>libvlc_audio_resume_cb</name></type> <name>resume</name></decl></parameter>,
<parameter><decl><type><name>libvlc_audio_flush_cb</name></type> <name>flush</name></decl></parameter>,
<parameter><decl><type><name>libvlc_audio_drain_cb</name></type> <name>drain</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter> )</parameter_list>;</function_decl>












<function_decl><type><name>LIBVLC_API</name>
<name>void</name></type> <name>libvlc_audio_set_volume_callback</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>mp</name></decl></parameter>,
<parameter><decl><type><name>libvlc_audio_set_volume_cb</name></type> <name>set_volume</name></decl></parameter> )</parameter_list>;</function_decl>












<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>libvlc_audio_setup_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>opaque</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>format</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>rate</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>channels</name></decl></parameter>)</parameter_list>;</function_decl></typedef>







<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>libvlc_audio_cleanup_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl></typedef>











<function_decl><type><name>LIBVLC_API</name>
<name>void</name></type> <name>libvlc_audio_set_format_callbacks</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>mp</name></decl></parameter>,
<parameter><decl><type><name>libvlc_audio_setup_cb</name></type> <name>setup</name></decl></parameter>,
<parameter><decl><type><name>libvlc_audio_cleanup_cb</name></type> <name>cleanup</name></decl></parameter> )</parameter_list>;</function_decl>














<function_decl><type><name>LIBVLC_API</name>
<name>void</name></type> <name>libvlc_audio_set_format</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>mp</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>format</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>rate</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>channels</name></decl></parameter> )</parameter_list>;</function_decl>









<function_decl><type><name>LIBVLC_API</name> <name>libvlc_time_t</name></type> <name>libvlc_media_player_get_length</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>libvlc_time_t</name></type> <name>libvlc_media_player_get_time</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>










<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_media_player_set_time</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>,
<parameter><decl><type><name>libvlc_time_t</name></type> <name>i_time</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b_fast</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>float</name></type> <name>libvlc_media_player_get_position</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>











<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_media_player_set_position</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>f_pos</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b_fast</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_media_player_set_chapter</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_chapter</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_media_player_get_chapter</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_media_player_get_chapter_count</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_media_player_get_chapter_count_for_title</name><parameter_list>(
<parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_title</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_media_player_set_title</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_title</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_media_player_get_title</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_media_player_get_title_count</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>






<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_media_player_previous_chapter</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>






<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_media_player_next_chapter</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>









<function_decl><type><name>LIBVLC_API</name> <name>float</name></type> <name>libvlc_media_player_get_rate</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>









<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_media_player_set_rate</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>rate</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>libvlc_state_t</name></type> <name>libvlc_media_player_get_state</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>unsigned</name></type> <name>libvlc_media_player_has_vout</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name> <name>bool</name></type> <name>libvlc_media_player_is_seekable</name><parameter_list>(<parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name> <name>bool</name></type> <name>libvlc_media_player_can_pause</name><parameter_list>(<parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>LIBVLC_API</name> <name>bool</name></type> <name>libvlc_media_player_program_scrambled</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>






<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_media_player_next_frame</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_media_player_navigate</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name><modifier>*</modifier></type> <name>p_mi</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>navigate</name></decl></parameter> )</parameter_list>;</function_decl>









<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_media_player_set_video_title_display</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>, <parameter><decl><type><name>libvlc_position_t</name></type> <name>position</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>timeout</name></decl></parameter> )</parameter_list>;</function_decl>


















<function_decl><type><name>LIBVLC_API</name>
<name>int</name></type> <name>libvlc_media_player_add_slave</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>,
<parameter><decl><type><name>libvlc_media_slave_type_t</name></type> <name>i_type</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_uri</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b_select</name></decl></parameter> )</parameter_list>;</function_decl>






<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_track_description_list_release</name><parameter_list>( <parameter><decl><type><name>libvlc_track_description_t</name> <modifier>*</modifier></type><name>p_track_description</name></decl></parameter> )</parameter_list>;</function_decl>













<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_toggle_fullscreen</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>


















<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_set_fullscreen</name><parameter_list>(<parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b_fullscreen</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>LIBVLC_API</name> <name>bool</name></type> <name>libvlc_get_fullscreen</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>
















<function_decl><type><name>LIBVLC_API</name>
<name>void</name></type> <name>libvlc_video_set_key_input</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>on</name></decl></parameter> )</parameter_list>;</function_decl>













<function_decl><type><name>LIBVLC_API</name>
<name>void</name></type> <name>libvlc_video_set_mouse_input</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>on</name></decl></parameter> )</parameter_list>;</function_decl>










<function_decl><type><name>LIBVLC_API</name>
<name>int</name></type> <name>libvlc_video_get_size</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>num</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>px</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>py</name></decl></parameter> )</parameter_list>;</function_decl>























<function_decl><type><name>LIBVLC_API</name>
<name>int</name></type> <name>libvlc_video_get_cursor</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>num</name></decl></parameter>,
<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>px</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>py</name></decl></parameter> )</parameter_list>;</function_decl>









<function_decl><type><name>LIBVLC_API</name> <name>float</name></type> <name>libvlc_video_get_scale</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>












<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_video_set_scale</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>f_factor</name></decl></parameter> )</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name> <name>char</name> <modifier>*</modifier></type><name>libvlc_video_get_aspect_ratio</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_video_set_aspect_ratio</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_aspect</name></decl></parameter> )</parameter_list>;</function_decl>









<function_decl><type><name>LIBVLC_API</name> <name>libvlc_video_viewpoint_t</name> <modifier>*</modifier></type><name>libvlc_video_new_viewpoint</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
















<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_video_update_viewpoint</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>libvlc_video_viewpoint_t</name> <modifier>*</modifier></type><name>p_viewpoint</name></decl></parameter>,
<parameter><decl><type><name>bool</name></type> <name>b_absolute</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_video_get_spu</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_video_get_spu_count</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name> <name>libvlc_track_description_t</name> <modifier>*</modifier></type>
<name>libvlc_video_get_spu_description</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_video_set_spu</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_spu</name></decl></parameter> )</parameter_list>;</function_decl>









<function_decl><type><name>LIBVLC_API</name> <name>int64_t</name></type> <name>libvlc_video_get_spu_delay</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>













<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_video_set_spu_delay</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>i_delay</name></decl></parameter> )</parameter_list>;</function_decl>













<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_media_player_get_full_title_descriptions</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>,
<parameter><decl><type><name>libvlc_title_description_t</name> <modifier>*</modifier><modifier>*</modifier><modifier>*</modifier></type><name>titles</name></decl></parameter> )</parameter_list>;</function_decl>









<function_decl><type><name>LIBVLC_API</name>
<name>void</name></type> <name>libvlc_title_descriptions_release</name><parameter_list>( <parameter><decl><type><name>libvlc_title_description_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>p_titles</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>i_count</name></decl></parameter> )</parameter_list>;</function_decl>














<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_media_player_get_full_chapter_descriptions</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>i_chapters_of_title</name></decl></parameter>,
<parameter><decl><type><name>libvlc_chapter_description_t</name> <modifier>*</modifier><modifier>*</modifier><modifier>*</modifier></type> <name>pp_chapters</name></decl></parameter> )</parameter_list>;</function_decl>









<function_decl><type><name>LIBVLC_API</name>
<name>void</name></type> <name>libvlc_chapter_descriptions_release</name><parameter_list>( <parameter><decl><type><name>libvlc_chapter_description_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>p_chapters</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>i_count</name></decl></parameter> )</parameter_list>;</function_decl>

























<function_decl><type><name>LIBVLC_API</name>
<name>void</name></type> <name>libvlc_video_set_crop_ratio</name><parameter_list>(<parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>mp</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>num</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>den</name></decl></parameter>)</parameter_list>;</function_decl>






















<function_decl><type><name>LIBVLC_API</name>
<name>void</name></type> <name>libvlc_video_set_crop_window</name><parameter_list>(<parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>mp</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>y</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>height</name></decl></parameter>)</parameter_list>;</function_decl>




















<function_decl><type><name>LIBVLC_API</name>
<name>void</name></type> <name>libvlc_video_set_crop_border</name><parameter_list>(<parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>mp</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>left</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>right</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>top</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>bottom</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_video_get_teletext</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>











<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_video_set_teletext</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_page</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_video_get_track_count</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name> <name>libvlc_track_description_t</name> <modifier>*</modifier></type>
<name>libvlc_video_get_track_description</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_video_get_track</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name>
<name>int</name></type> <name>libvlc_video_set_track</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_track</name></decl></parameter> )</parameter_list>;</function_decl>














<function_decl><type><name>LIBVLC_API</name>
<name>int</name></type> <name>libvlc_video_take_snapshot</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>num</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_filepath</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>i_width</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>i_height</name></decl></parameter> )</parameter_list>;</function_decl>









<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_video_set_deinterlace</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>deinterlace</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_mode</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_video_get_marquee_int</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>option</name></decl></parameter> )</parameter_list>;</function_decl>











<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_video_set_marquee_int</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>option</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_val</name></decl></parameter> )</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_video_set_marquee_string</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>option</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_text</name></decl></parameter> )</parameter_list>;</function_decl>


<enum>enum <name>libvlc_video_logo_option_t</name> <block>{
<decl><name>libvlc_logo_enable</name></decl>,
<decl><name>libvlc_logo_file</name></decl>, 
<decl><name>libvlc_logo_x</name></decl>,
<decl><name>libvlc_logo_y</name></decl>,
<decl><name>libvlc_logo_delay</name></decl>,
<decl><name>libvlc_logo_repeat</name></decl>,
<decl><name>libvlc_logo_opacity</name></decl>,
<decl><name>libvlc_logo_position</name></decl>
}</block>;</enum>







<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_video_get_logo_int</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>option</name></decl></parameter> )</parameter_list>;</function_decl>











<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_video_set_logo_int</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>option</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>value</name></decl></parameter> )</parameter_list>;</function_decl>









<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_video_set_logo_string</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>option</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_value</name></decl></parameter> )</parameter_list>;</function_decl>



<enum>enum <name>libvlc_video_adjust_option_t</name> <block>{
<decl><name>libvlc_adjust_Enable</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>libvlc_adjust_Contrast</name></decl>,
<decl><name>libvlc_adjust_Brightness</name></decl>,
<decl><name>libvlc_adjust_Hue</name></decl>,
<decl><name>libvlc_adjust_Saturation</name></decl>,
<decl><name>libvlc_adjust_Gamma</name></decl>
}</block>;</enum>








<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_video_get_adjust_int</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>option</name></decl></parameter> )</parameter_list>;</function_decl>












<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_video_set_adjust_int</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>option</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>value</name></decl></parameter> )</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name> <name>float</name></type> <name>libvlc_video_get_adjust_float</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>option</name></decl></parameter> )</parameter_list>;</function_decl>










<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_video_set_adjust_float</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>option</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>value</name></decl></parameter> )</parameter_list>;</function_decl>










<typedef>typedef <type><enum>enum <name>libvlc_audio_output_channel_t</name> <block>{
<decl><name>libvlc_AudioChannel_Error</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>,
<decl><name>libvlc_AudioChannel_Stereo</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>libvlc_AudioChannel_RStereo</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>libvlc_AudioChannel_Left</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,
<decl><name>libvlc_AudioChannel_Right</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,
<decl><name>libvlc_AudioChannel_Dolbys</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>
}</block></enum></type> <name>libvlc_audio_output_channel_t</name>;</typedef>










<function_decl><type><name>LIBVLC_API</name> <name>libvlc_audio_output_t</name> <modifier>*</modifier></type>
<name>libvlc_audio_output_list_get</name><parameter_list>( <parameter><decl><type><name>libvlc_instance_t</name> <modifier>*</modifier></type><name>p_instance</name></decl></parameter> )</parameter_list>;</function_decl>






<function_decl><type><name>LIBVLC_API</name>
<name>void</name></type> <name>libvlc_audio_output_list_release</name><parameter_list>( <parameter><decl><type><name>libvlc_audio_output_t</name> <modifier>*</modifier></type><name>p_list</name></decl></parameter> )</parameter_list>;</function_decl>











<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_audio_output_set</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_name</name></decl></parameter> )</parameter_list>;</function_decl>



















<function_decl><type><name>LIBVLC_API</name> <name>libvlc_audio_output_device_t</name> <modifier>*</modifier></type>
<name>libvlc_audio_output_device_enum</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>mp</name></decl></parameter> )</parameter_list>;</function_decl>






















<function_decl><type><name>LIBVLC_API</name> <name>libvlc_audio_output_device_t</name> <modifier>*</modifier></type>
<name>libvlc_audio_output_device_list_get</name><parameter_list>( <parameter><decl><type><name>libvlc_instance_t</name> <modifier>*</modifier></type><name>p_instance</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>aout</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_audio_output_device_list_release</name><parameter_list>(
<parameter><decl><type><name>libvlc_audio_output_device_t</name> <modifier>*</modifier></type><name>p_list</name></decl></parameter> )</parameter_list>;</function_decl>






































<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_audio_output_device_set</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>mp</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>module</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>device_id</name></decl></parameter> )</parameter_list>;</function_decl>























<function_decl><type><name>LIBVLC_API</name> <name>char</name> <modifier>*</modifier></type><name>libvlc_audio_output_device_get</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>mp</name></decl></parameter> )</parameter_list>;</function_decl>










<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_audio_toggle_mute</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_audio_get_mute</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>













<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_audio_set_mute</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>status</name></decl></parameter> )</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_audio_get_volume</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_audio_set_volume</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_volume</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_audio_get_track_count</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name> <name>libvlc_track_description_t</name> <modifier>*</modifier></type>
<name>libvlc_audio_get_track_description</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_audio_get_track</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_audio_set_track</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_track</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_audio_get_channel</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_audio_set_channel</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>channel</name></decl></parameter> )</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name> <name>int64_t</name></type> <name>libvlc_audio_get_delay</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>









<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_audio_set_delay</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>i_delay</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>unsigned</name></type> <name>libvlc_audio_equalizer_get_preset_count</name><parameter_list>( <parameter><decl><type><name>void</name></type></decl></parameter> )</parameter_list>;</function_decl>











<function_decl><type><name>LIBVLC_API</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>libvlc_audio_equalizer_get_preset_name</name><parameter_list>( <parameter><decl><type><name>unsigned</name></type> <name>u_index</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>unsigned</name></type> <name>libvlc_audio_equalizer_get_band_count</name><parameter_list>( <parameter><decl><type><name>void</name></type></decl></parameter> )</parameter_list>;</function_decl>











<function_decl><type><name>LIBVLC_API</name> <name>float</name></type> <name>libvlc_audio_equalizer_get_band_frequency</name><parameter_list>( <parameter><decl><type><name>unsigned</name></type> <name>u_index</name></decl></parameter> )</parameter_list>;</function_decl>













<function_decl><type><name>LIBVLC_API</name> <name>libvlc_equalizer_t</name> <modifier>*</modifier></type><name>libvlc_audio_equalizer_new</name><parameter_list>( <parameter><decl><type><name>void</name></type></decl></parameter> )</parameter_list>;</function_decl>
















<function_decl><type><name>LIBVLC_API</name> <name>libvlc_equalizer_t</name> <modifier>*</modifier></type><name>libvlc_audio_equalizer_new_from_preset</name><parameter_list>( <parameter><decl><type><name>unsigned</name></type> <name>u_index</name></decl></parameter> )</parameter_list>;</function_decl>












<function_decl><type><name>LIBVLC_API</name> <name>void</name></type> <name>libvlc_audio_equalizer_release</name><parameter_list>( <parameter><decl><type><name>libvlc_equalizer_t</name> <modifier>*</modifier></type><name>p_equalizer</name></decl></parameter> )</parameter_list>;</function_decl>














<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_audio_equalizer_set_preamp</name><parameter_list>( <parameter><decl><type><name>libvlc_equalizer_t</name> <modifier>*</modifier></type><name>p_equalizer</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>f_preamp</name></decl></parameter> )</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name> <name>float</name></type> <name>libvlc_audio_equalizer_get_preamp</name><parameter_list>( <parameter><decl><type><name>libvlc_equalizer_t</name> <modifier>*</modifier></type><name>p_equalizer</name></decl></parameter> )</parameter_list>;</function_decl>















<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_audio_equalizer_set_amp_at_index</name><parameter_list>( <parameter><decl><type><name>libvlc_equalizer_t</name> <modifier>*</modifier></type><name>p_equalizer</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>f_amp</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>u_band</name></decl></parameter> )</parameter_list>;</function_decl>









<function_decl><type><name>LIBVLC_API</name> <name>float</name></type> <name>libvlc_audio_equalizer_get_amp_at_index</name><parameter_list>( <parameter><decl><type><name>libvlc_equalizer_t</name> <modifier>*</modifier></type><name>p_equalizer</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>u_band</name></decl></parameter> )</parameter_list>;</function_decl>






























<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_media_player_set_equalizer</name><parameter_list>( <parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>, <parameter><decl><type><name>libvlc_equalizer_t</name> <modifier>*</modifier></type><name>p_equalizer</name></decl></parameter> )</parameter_list>;</function_decl>








<typedef>typedef <type><enum>enum <name>libvlc_media_player_role</name> <block>{
<decl><name>libvlc_role_None</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, 
<decl><name>libvlc_role_Music</name></decl>, 
<decl><name>libvlc_role_Video</name></decl>, 
<decl><name>libvlc_role_Communication</name></decl>, 
<decl><name>libvlc_role_Game</name></decl>, 
<decl><name>libvlc_role_Notification</name></decl>, 
<decl><name>libvlc_role_Animation</name></decl>, 
<decl><name>libvlc_role_Production</name></decl>, 
<decl><name>libvlc_role_Accessibility</name></decl>, 
<decl><name>libvlc_role_Test</name></decl> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>libvlc_role_Last</name></cpp:macro> <cpp:value>libvlc_role_Test</cpp:value></cpp:define>
}</block></enum></type> <name>libvlc_media_player_role_t</name>;</typedef>









<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_media_player_get_role</name><parameter_list>(<parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name> <name>int</name></type> <name>libvlc_media_player_set_role</name><parameter_list>(<parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type><name>p_mi</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>role</name></decl></parameter>)</parameter_list>;</function_decl>





<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
