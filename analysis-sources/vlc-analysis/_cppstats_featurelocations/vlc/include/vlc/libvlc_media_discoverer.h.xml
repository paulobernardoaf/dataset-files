<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\include\vlc\libvlc_media_discoverer.h">























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>VLC_LIBVLC_MEDIA_DISCOVERER_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_LIBVLC_MEDIA_DISCOVERER_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>





<typedef>typedef <type><enum>enum <name>libvlc_media_discoverer_category_t</name> <block>{

<decl><name>libvlc_media_discoverer_devices</name></decl>,

<decl><name>libvlc_media_discoverer_lan</name></decl>,

<decl><name>libvlc_media_discoverer_podcasts</name></decl>,

<decl><name>libvlc_media_discoverer_localdirs</name></decl>,
}</block></enum></type> <name>libvlc_media_discoverer_category_t</name>;</typedef>





<typedef>typedef <type><struct>struct <name>libvlc_media_discoverer_description_t</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_longname</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>libvlc_media_discoverer_category_t</name></type> <name>i_cat</name></decl>;</decl_stmt>
}</block></struct></type> <name>libvlc_media_discoverer_description_t</name>;</typedef>













<typedef>typedef <type><name><name>struct</name> <name>libvlc_media_discoverer_t</name></name></type> <name>libvlc_media_discoverer_t</name>;</typedef>




















<function_decl><type><name>LIBVLC_API</name> <name>libvlc_media_discoverer_t</name> <modifier>*</modifier></type>
<name>libvlc_media_discoverer_new</name><parameter_list>( <parameter><decl><type><name>libvlc_instance_t</name> <modifier>*</modifier></type> <name>p_inst</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>psz_name</name></decl></parameter> )</parameter_list>;</function_decl>













<function_decl><type><name>LIBVLC_API</name> <name>int</name></type>
<name>libvlc_media_discoverer_start</name><parameter_list>( <parameter><decl><type><name>libvlc_media_discoverer_t</name> <modifier>*</modifier></type> <name>p_mdis</name></decl></parameter> )</parameter_list>;</function_decl>









<function_decl><type><name>LIBVLC_API</name> <name>void</name></type>
<name>libvlc_media_discoverer_stop</name><parameter_list>( <parameter><decl><type><name>libvlc_media_discoverer_t</name> <modifier>*</modifier></type> <name>p_mdis</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>void</name></type>
<name>libvlc_media_discoverer_release</name><parameter_list>( <parameter><decl><type><name>libvlc_media_discoverer_t</name> <modifier>*</modifier></type> <name>p_mdis</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>libvlc_media_list_t</name> <modifier>*</modifier></type>
<name>libvlc_media_discoverer_media_list</name><parameter_list>( <parameter><decl><type><name>libvlc_media_discoverer_t</name> <modifier>*</modifier></type> <name>p_mdis</name></decl></parameter> )</parameter_list>;</function_decl>









<function_decl><type><name>LIBVLC_API</name> <name>bool</name></type>
<name>libvlc_media_discoverer_is_running</name><parameter_list>(<parameter><decl><type><name>libvlc_media_discoverer_t</name> <modifier>*</modifier></type><name>p_mdis</name></decl></parameter>)</parameter_list>;</function_decl>














<function_decl><type><name>LIBVLC_API</name> <name>size_t</name></type>
<name>libvlc_media_discoverer_list_get</name><parameter_list>( <parameter><decl><type><name>libvlc_instance_t</name> <modifier>*</modifier></type><name>p_inst</name></decl></parameter>,
<parameter><decl><type><name>libvlc_media_discoverer_category_t</name></type> <name>i_cat</name></decl></parameter>,
<parameter><decl><type><name>libvlc_media_discoverer_description_t</name> <modifier>*</modifier><modifier>*</modifier><modifier>*</modifier></type><name>ppp_services</name></decl></parameter> )</parameter_list>;</function_decl>











<function_decl><type><name>LIBVLC_API</name> <name>void</name></type>
<name>libvlc_media_discoverer_list_release</name><parameter_list>( <parameter><decl><type><name>libvlc_media_discoverer_description_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_services</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>i_count</name></decl></parameter> )</parameter_list>;</function_decl>



<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
