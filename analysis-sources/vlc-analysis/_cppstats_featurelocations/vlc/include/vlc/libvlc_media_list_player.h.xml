<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\include\vlc\libvlc_media_list_player.h">





















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LIBVLC_MEDIA_LIST_PLAYER_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LIBVLC_MEDIA_LIST_PLAYER_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>













<typedef>typedef <type><name><name>struct</name> <name>libvlc_media_list_player_t</name></name></type> <name>libvlc_media_list_player_t</name>;</typedef>




<typedef>typedef <type><enum>enum <name>libvlc_playback_mode_t</name>
<block>{
<decl><name>libvlc_playback_mode_default</name></decl>,
<decl><name>libvlc_playback_mode_loop</name></decl>,
<decl><name>libvlc_playback_mode_repeat</name></decl>
}</block></enum></type> <name>libvlc_playback_mode_t</name>;</typedef>








<function_decl><type><name>LIBVLC_API</name> <name>libvlc_media_list_player_t</name> <modifier>*</modifier></type>
<name>libvlc_media_list_player_new</name><parameter_list>( <parameter><decl><type><name>libvlc_instance_t</name> <modifier>*</modifier></type> <name>p_instance</name></decl></parameter> )</parameter_list>;</function_decl>










<function_decl><type><name>LIBVLC_API</name> <name>void</name></type>
<name>libvlc_media_list_player_release</name><parameter_list>( <parameter><decl><type><name>libvlc_media_list_player_t</name> <modifier>*</modifier></type> <name>p_mlp</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>void</name></type>
<name>libvlc_media_list_player_retain</name><parameter_list>( <parameter><decl><type><name>libvlc_media_list_player_t</name> <modifier>*</modifier></type><name>p_mlp</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>libvlc_event_manager_t</name> <modifier>*</modifier></type>
<name>libvlc_media_list_player_event_manager</name><parameter_list>(<parameter><decl><type><name>libvlc_media_list_player_t</name> <modifier>*</modifier></type> <name>p_mlp</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>void</name></type>
<name>libvlc_media_list_player_set_media_player</name><parameter_list>(
<parameter><decl><type><name>libvlc_media_list_player_t</name> <modifier>*</modifier></type> <name>p_mlp</name></decl></parameter>,
<parameter><decl><type><name>libvlc_media_player_t</name> <modifier>*</modifier></type> <name>p_mi</name></decl></parameter> )</parameter_list>;</function_decl>









<function_decl><type><name>LIBVLC_API</name> <name>libvlc_media_player_t</name> <modifier>*</modifier></type>
<name>libvlc_media_list_player_get_media_player</name><parameter_list>(<parameter><decl><type><name>libvlc_media_list_player_t</name> <modifier>*</modifier></type> <name>p_mlp</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>void</name></type>
<name>libvlc_media_list_player_set_media_list</name><parameter_list>(
<parameter><decl><type><name>libvlc_media_list_player_t</name> <modifier>*</modifier></type> <name>p_mlp</name></decl></parameter>,
<parameter><decl><type><name>libvlc_media_list_t</name> <modifier>*</modifier></type> <name>p_mlist</name></decl></parameter> )</parameter_list>;</function_decl>






<function_decl><type><name>LIBVLC_API</name>
<name>void</name></type> <name>libvlc_media_list_player_play</name><parameter_list>(<parameter><decl><type><name>libvlc_media_list_player_t</name> <modifier>*</modifier></type> <name>p_mlp</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>LIBVLC_API</name>
<name>void</name></type> <name>libvlc_media_list_player_pause</name><parameter_list>(<parameter><decl><type><name>libvlc_media_list_player_t</name> <modifier>*</modifier></type> <name>p_mlp</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name>
<name>void</name></type> <name>libvlc_media_list_player_set_pause</name><parameter_list>(<parameter><decl><type><name>libvlc_media_list_player_t</name> <modifier>*</modifier></type> <name>p_mlp</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>do_pause</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>LIBVLC_API</name> <name>bool</name></type>
<name>libvlc_media_list_player_is_playing</name><parameter_list>(<parameter><decl><type><name>libvlc_media_list_player_t</name> <modifier>*</modifier></type> <name>p_mlp</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>libvlc_state_t</name></type>
<name>libvlc_media_list_player_get_state</name><parameter_list>( <parameter><decl><type><name>libvlc_media_list_player_t</name> <modifier>*</modifier></type> <name>p_mlp</name></decl></parameter> )</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name>
<name>int</name></type> <name>libvlc_media_list_player_play_item_at_index</name><parameter_list>(<parameter><decl><type><name>libvlc_media_list_player_t</name> <modifier>*</modifier></type> <name>p_mlp</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>i_index</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>LIBVLC_API</name>
<name>int</name></type> <name>libvlc_media_list_player_play_item</name><parameter_list>(<parameter><decl><type><name>libvlc_media_list_player_t</name> <modifier>*</modifier></type> <name>p_mlp</name></decl></parameter>,
<parameter><decl><type><name>libvlc_media_t</name> <modifier>*</modifier></type> <name>p_md</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>LIBVLC_API</name> <name>void</name></type>
<name>libvlc_media_list_player_stop_async</name><parameter_list>( <parameter><decl><type><name>libvlc_media_list_player_t</name> <modifier>*</modifier></type> <name>p_mlp</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name>
<name>int</name></type> <name>libvlc_media_list_player_next</name><parameter_list>(<parameter><decl><type><name>libvlc_media_list_player_t</name> <modifier>*</modifier></type> <name>p_mlp</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name>
<name>int</name></type> <name>libvlc_media_list_player_previous</name><parameter_list>(<parameter><decl><type><name>libvlc_media_list_player_t</name> <modifier>*</modifier></type> <name>p_mlp</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>LIBVLC_API</name>
<name>void</name></type> <name>libvlc_media_list_player_set_playback_mode</name><parameter_list>(<parameter><decl><type><name>libvlc_media_list_player_t</name> <modifier>*</modifier></type> <name>p_mlp</name></decl></parameter>,
<parameter><decl><type><name>libvlc_playback_mode_t</name></type> <name>e_mode</name></decl></parameter> )</parameter_list>;</function_decl>



<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
