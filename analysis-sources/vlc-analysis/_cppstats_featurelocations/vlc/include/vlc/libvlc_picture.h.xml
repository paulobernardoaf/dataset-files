<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\include\vlc\libvlc_picture.h">





















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>VLC_LIBVLC_PICTURE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_LIBVLC_PICTURE_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><name><name>struct</name> <name>libvlc_picture_t</name></name></type> <name>libvlc_picture_t</name>;</typedef>

<typedef>typedef <type><enum>enum <name>libvlc_picture_type_t</name>
<block>{
<decl><name>libvlc_picture_Argb</name></decl>,
<decl><name>libvlc_picture_Png</name></decl>,
<decl><name>libvlc_picture_Jpg</name></decl>,
}</block></enum></type> <name>libvlc_picture_type_t</name>;</typedef>







<function_decl><type><name>LIBVLC_API</name> <name>void</name></type>
<name>libvlc_picture_retain</name><parameter_list>( <parameter><decl><type><name>libvlc_picture_t</name><modifier>*</modifier></type> <name>pic</name></decl></parameter> )</parameter_list>;</function_decl>









<function_decl><type><name>LIBVLC_API</name> <name>void</name></type>
<name>libvlc_picture_release</name><parameter_list>( <parameter><decl><type><name>libvlc_picture_t</name><modifier>*</modifier></type> <name>pic</name></decl></parameter> )</parameter_list>;</function_decl>









<function_decl><type><name>LIBVLC_API</name> <name>int</name></type>
<name>libvlc_picture_save</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>libvlc_picture_t</name><modifier>*</modifier></type> <name>pic</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>path</name></decl></parameter> )</parameter_list>;</function_decl>










<function_decl><type><name>LIBVLC_API</name> <specifier>const</specifier> <name>unsigned</name> <name>char</name><modifier>*</modifier></type>
<name>libvlc_picture_get_buffer</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>libvlc_picture_t</name><modifier>*</modifier></type> <name>pic</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>size</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>libvlc_picture_type_t</name></type>
<name>libvlc_picture_type</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>libvlc_picture_t</name><modifier>*</modifier></type> <name>pic</name></decl></parameter> )</parameter_list>;</function_decl>







<function_decl><type><name>LIBVLC_API</name> <name>unsigned</name> <name>int</name></type>
<name>libvlc_picture_get_stride</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>libvlc_picture_t</name><modifier>*</modifier></type> <name>pic</name></decl></parameter> )</parameter_list>;</function_decl>






<function_decl><type><name>LIBVLC_API</name> <name>unsigned</name> <name>int</name></type>
<name>libvlc_picture_get_width</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>libvlc_picture_t</name><modifier>*</modifier></type> <name>pic</name></decl></parameter> )</parameter_list>;</function_decl>






<function_decl><type><name>LIBVLC_API</name> <name>unsigned</name> <name>int</name></type>
<name>libvlc_picture_get_height</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>libvlc_picture_t</name><modifier>*</modifier></type> <name>pic</name></decl></parameter> )</parameter_list>;</function_decl>





<function_decl><type><name>LIBVLC_API</name> <name>libvlc_time_t</name></type>
<name>libvlc_picture_get_time</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>libvlc_picture_t</name><modifier>*</modifier></type> <name>pic</name></decl></parameter> )</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
