<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\include\vlc_keystore.h">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>VLC_KEYSTORE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_KEYSTORE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_common.h&gt;</cpp:file></cpp:include>

<typedef>typedef <type><name><name>struct</name> <name>vlc_keystore</name></name></type> <name>vlc_keystore</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>vlc_keystore_entry</name></name></type> <name>vlc_keystore_entry</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>vlc_credential</name></name></type> <name>vlc_credential</name>;</typedef>


<function_decl><type><name>int</name></type>
<name>libvlc_InternalKeystoreInit</name><parameter_list>(<parameter><decl><type><name>libvlc_int_t</name> <modifier>*</modifier></type><name>p_libvlc</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type>
<name>libvlc_InternalKeystoreClean</name><parameter_list>(<parameter><decl><type><name>libvlc_int_t</name> <modifier>*</modifier></type><name>p_libvlc</name></decl></parameter>)</parameter_list>;</function_decl>














<enum>enum <name>vlc_keystore_key</name> <block>{
<decl><name>KEY_PROTOCOL</name></decl>,
<decl><name>KEY_USER</name></decl>,
<decl><name>KEY_SERVER</name></decl>,
<decl><name>KEY_PATH</name></decl>,
<decl><name>KEY_PORT</name></decl>,
<decl><name>KEY_REALM</name></decl>,
<decl><name>KEY_AUTHTYPE</name></decl>,
<decl><name>KEY_MAX</name></decl>,
}</block>;</enum>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_KEYSTORE_VALUES_INIT</name><parameter_list>(<parameter><type><name>ppsz_values</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>memset(ppsz_values, 0, sizeof(const char *) * KEY_MAX)</cpp:value></cpp:define>




<struct>struct <name>vlc_keystore_entry</name>
<block>{

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type> <name><name>ppsz_values</name><index>[<expr><name>KEY_MAX</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type> <name>p_secret</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>i_secret_len</name></decl>;</decl_stmt>
}</block>;</struct>














<function_decl><type><name>VLC_API</name> <name>vlc_keystore</name> <modifier>*</modifier></type>
<name>vlc_keystore_create</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_parent</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vlc_keystore_create</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>vlc_keystore_create(VLC_OBJECT(x))</cpp:value></cpp:define>




<function_decl><type><name>VLC_API</name> <name>void</name></type>
<name>vlc_keystore_release</name><parameter_list>(<parameter><decl><type><name>vlc_keystore</name> <modifier>*</modifier></type><name>p_keystore</name></decl></parameter>)</parameter_list>;</function_decl>















<function_decl><type><name>VLC_API</name> <name>int</name></type>
<name>vlc_keystore_store</name><parameter_list>(<parameter><decl><type><name>vlc_keystore</name> <modifier>*</modifier></type><name>p_keystore</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>ppsz_values</name><index>[<expr><name>KEY_MAX</name></expr>]</index></name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name><modifier>*</modifier></type> <name>p_secret</name></decl></parameter>, <parameter><decl><type><name>ssize_t</name></type> <name>i_secret_len</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_label</name></decl></parameter>)</parameter_list>;</function_decl>











<decl_stmt><decl><type><name>VLC_API</name> <name>unsigned</name> <name>int</name></type>
<name>vlc_keystore_find</name><argument_list>(<argument><expr><name>vlc_keystore</name> <operator>*</operator><name>p_keystore</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator><specifier>const</specifier> <name><name>ppsz_values</name><index>[<expr><name>KEY_MAX</name></expr>]</index></name></expr></argument>,
<argument><expr><name>vlc_keystore_entry</name> <operator>*</operator><operator>*</operator><name>pp_entries</name></expr></argument>)</argument_list> <name>VLC_USED</name></decl>;</decl_stmt>











<function_decl><type><name>VLC_API</name> <name>unsigned</name> <name>int</name></type>
<name>vlc_keystore_remove</name><parameter_list>(<parameter><decl><type><name>vlc_keystore</name> <modifier>*</modifier></type><name>p_keystore</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>ppsz_values</name><index>[<expr><name>KEY_MAX</name></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>VLC_API</name> <name>void</name></type>
<name>vlc_keystore_release_entries</name><parameter_list>(<parameter><decl><type><name>vlc_keystore_entry</name> <modifier>*</modifier></type><name>p_entries</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>i_count</name></decl></parameter>)</parameter_list>;</function_decl>










<struct>struct <name>vlc_credential</name>
<block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>vlc_url_t</name> <modifier>*</modifier></type><name>p_url</name></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_realm</name></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_authtype</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_username</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_password</name></decl>;</decl_stmt>


<enum>enum <block>{
<decl><name>GET_FROM_URL</name></decl>,
<decl><name>GET_FROM_OPTION</name></decl>,
<decl><name>GET_FROM_MEMORY_KEYSTORE</name></decl>,
<decl><name>GET_FROM_KEYSTORE</name></decl>,
<decl><name>GET_FROM_DIALOG</name></decl>,
}</block> <decl><name>i_get_order</name></decl>;</enum>

<decl_stmt><decl><type><name>vlc_keystore</name> <modifier>*</modifier></type><name>p_keystore</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_keystore_entry</name> <modifier>*</modifier></type><name>p_entries</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i_entries_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_split_domain</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_var_username</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_var_password</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_dialog_username</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>psz_dialog_password</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_from_keystore</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>b_store</name></decl>;</decl_stmt>
}</block>;</struct>








<function_decl><type><name>VLC_API</name> <name>void</name></type>
<name>vlc_credential_init</name><parameter_list>(<parameter><decl><type><name>vlc_credential</name> <modifier>*</modifier></type><name>p_credential</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>vlc_url_t</name> <modifier>*</modifier></type><name>p_url</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>VLC_API</name> <name>void</name></type>
<name>vlc_credential_clean</name><parameter_list>(<parameter><decl><type><name>vlc_credential</name> <modifier>*</modifier></type><name>p_credential</name></decl></parameter>)</parameter_list>;</function_decl>






















<function_decl><type><name>VLC_API</name> <name>bool</name></type>
<name>vlc_credential_get</name><parameter_list>(<parameter><decl><type><name>vlc_credential</name> <modifier>*</modifier></type><name>p_credential</name></decl></parameter>, <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_parent</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_option_username</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_option_password</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_dialog_title</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_dialog_fmt</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list> VLC_FORMAT<parameter_list>(</parameter_list>6<operator>,</operator> 7</function_decl>)<empty_stmt>;</empty_stmt>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vlc_credential_get</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>c</name></type></parameter>, <parameter><type><name>d</name></type></parameter>, <parameter><type><name>e</name></type></parameter>, <parameter><type><name>f</name></type></parameter>, <parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>vlc_credential_get(a, VLC_OBJECT(b), c, d, e, f, ##__VA_ARGS__)</cpp:value></cpp:define>












<function_decl><type><name>VLC_API</name> <name>bool</name></type>
<name>vlc_credential_store</name><parameter_list>(<parameter><decl><type><name>vlc_credential</name> <modifier>*</modifier></type><name>p_credential</name></decl></parameter>, <parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type><name>p_parent</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vlc_credential_store</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>vlc_credential_store(a, VLC_OBJECT(b))</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_KEYSTORE_NAME</name></cpp:macro> <cpp:value>"libVLC"</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type>
<name>vlc_keystore_entry_set_secret</name><parameter_list>(<parameter><decl><type><name>vlc_keystore_entry</name> <modifier>*</modifier></type><name>p_entry</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_secret</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>i_secret_len</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>p_entry</name><operator>-&gt;</operator><name>p_secret</name></name> <operator>=</operator> <operator>(</operator><name>uint8_t</name><operator>*</operator><operator>)</operator> <call><name>malloc</name><argument_list>(<argument><expr><name>i_secret_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>p_entry</name><operator>-&gt;</operator><name>p_secret</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_EGENERIC</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name><name>p_entry</name><operator>-&gt;</operator><name>p_secret</name></name></expr></argument>, <argument><expr><name>p_secret</name></expr></argument>, <argument><expr><name>i_secret_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_entry</name><operator>-&gt;</operator><name>i_secret_len</name></name> <operator>=</operator> <name>i_secret_len</name></expr>;</expr_stmt>
<return>return <expr><name>VLC_SUCCESS</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>
<name>vlc_keystore_release_entry</name><parameter_list>(<parameter><decl><type><name>vlc_keystore_entry</name> <modifier>*</modifier></type><name>p_entry</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<for>for <control>(<init><decl><type><name>unsigned</name> <name>int</name></type> <name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name>KEY_MAX</name></expr>;</condition> <incr><expr><operator>++</operator><name>j</name></expr></incr>)</control>
<block>{<block_content>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name><name>p_entry</name><operator>-&gt;</operator><name>ppsz_values</name><index>[<expr><name>j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_entry</name><operator>-&gt;</operator><name>ppsz_values</name><index>[<expr><name>j</name></expr>]</index></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name><name>p_entry</name><operator>-&gt;</operator><name>p_secret</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p_entry</name><operator>-&gt;</operator><name>p_secret</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></function>

<typedef>typedef <type><name><name>struct</name> <name>vlc_keystore_sys</name></name></type> <name>vlc_keystore_sys</name>;</typedef>
<struct>struct <name>vlc_keystore</name>
<block>{
<decl_stmt><decl><type><name><name>struct</name> <name>vlc_object_t</name></name></type> <name>obj</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>module_t</name> <modifier>*</modifier></type><name>p_module</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_keystore_sys</name> <modifier>*</modifier></type><name>p_sys</name></decl>;</decl_stmt>


<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>pf_store</name>)<parameter_list>(<parameter><decl><type><name>vlc_keystore</name> <modifier>*</modifier></type><name>p_keystore</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>ppsz_values</name><index>[<expr><name>KEY_MAX</name></expr>]</index></name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>p_secret</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>i_secret_len</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>psz_label</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>unsigned</name> <name>int</name></type> (<modifier>*</modifier><name>pf_find</name>)<parameter_list>(<parameter><decl><type><name>vlc_keystore</name> <modifier>*</modifier></type><name>p_keystore</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>ppsz_values</name><index>[<expr><name>KEY_MAX</name></expr>]</index></name></decl></parameter>,
<parameter><decl><type><name>vlc_keystore_entry</name> <modifier>*</modifier><modifier>*</modifier></type><name>pp_entries</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>unsigned</name> <name>int</name></type> (<modifier>*</modifier><name>pf_remove</name>)<parameter_list>(<parameter><decl><type><name>vlc_keystore</name> <modifier>*</modifier></type><name>p_keystore</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>ppsz_values</name><index>[<expr><name>KEY_MAX</name></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>
}</block>;</struct>



<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
