





















#ifndef VLC_EPG_H
#define VLC_EPG_H 1






typedef struct
{
int64_t i_start; 
uint32_t i_duration; 
uint16_t i_id; 

char *psz_name;
char *psz_short_description;
char *psz_description;
struct 
{
char *psz_key;
char *psz_value;
} * description_items;
int i_description_items;

uint8_t i_rating; 
} vlc_epg_event_t;

typedef struct
{
char *psz_name;
uint32_t i_id; 
uint16_t i_source_id;
size_t i_event;
vlc_epg_event_t **pp_event;
bool b_present; 
const vlc_epg_event_t *p_current; 
} vlc_epg_t;










VLC_API vlc_epg_event_t * vlc_epg_event_New(uint16_t i_id,
int64_t i_start, uint32_t i_duration);




VLC_API void vlc_epg_event_Delete(vlc_epg_event_t *p_event);





VLC_API vlc_epg_event_t * vlc_epg_event_Duplicate(const vlc_epg_event_t *p_src);









VLC_API vlc_epg_t * vlc_epg_New(uint32_t i_id, uint16_t i_source_id);




VLC_API void vlc_epg_Delete(vlc_epg_t *p_epg);







VLC_API bool vlc_epg_AddEvent(vlc_epg_t *p_epg, vlc_epg_event_t *p_evt);




VLC_API void vlc_epg_SetCurrent(vlc_epg_t *p_epg, int64_t i_start);





VLC_API vlc_epg_t * vlc_epg_Duplicate(const vlc_epg_t *p_src);

#endif

