<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\include\vlc_interrupt.h">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>VLC_INTERRUPT_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_INTERRUPT_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_threads.h&gt;</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/socket.h&gt;</cpp:file></cpp:include> 
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ws2tcpip.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<struct_decl>struct <name>pollfd</name>;</struct_decl>
<struct_decl>struct <name>iovec</name>;</struct_decl>
<struct_decl>struct <name>sockaddr</name>;</struct_decl>
<struct_decl>struct <name>msghdr</name>;</struct_decl>



























<function_decl><type><name>VLC_API</name> <name>int</name></type> <name>vlc_sem_wait_i11e</name><parameter_list>(<parameter><decl><type><name>vlc_sem_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>VLC_API</name> <name>int</name></type> <name>vlc_mwait_i11e</name><parameter_list>(<parameter><decl><type><name>vlc_tick_t</name></type></decl></parameter>)</parameter_list>;</function_decl>












<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>vlc_msleep_i11e</name><parameter_list>(<parameter><decl><type><name>vlc_tick_t</name></type> <name>delay</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>vlc_mwait_i11e</name><argument_list>(<argument><expr><call><name>vlc_tick_now</name><argument_list>()</argument_list></call> <operator>+</operator> <name>delay</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>




















<function_decl><type><name>VLC_API</name> <name>int</name></type> <name>vlc_poll_i11e</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>pollfd</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>ssize_t</name></type> <name>vlc_readv_i11e</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>iovec</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VLC_API</name> <name>ssize_t</name></type> <name>vlc_writev_i11e</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>iovec</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VLC_API</name> <name>ssize_t</name></type> <name>vlc_read_i11e</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VLC_API</name> <name>ssize_t</name></type> <name>vlc_write_i11e</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>ssize_t</name></type> <name>vlc_recvmsg_i11e</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>msghdr</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VLC_API</name> <name>ssize_t</name></type> <name>vlc_sendmsg_i11e</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>msghdr</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>ssize_t</name></type> <name>vlc_recvfrom_i11e</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>sockaddr</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>socklen_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VLC_API</name> <name>ssize_t</name></type> <name>vlc_sendto_i11e</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>sockaddr</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>socklen_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>ssize_t</name></type> <name>vlc_recv_i11e</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>vlc_recvfrom_i11e</name><argument_list>(<argument><expr><name>fd</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><name>len</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier>
<name>ssize_t</name></type> <name>vlc_send_i11e</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>vlc_sendto_i11e</name><argument_list>(<argument><expr><name>fd</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><name>len</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function_decl><type><name>VLC_API</name> <name>int</name></type> <name>vlc_accept_i11e</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>sockaddr</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>socklen_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>bool</name></type></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>VLC_API</name> <name>void</name></type> <name>vlc_interrupt_register</name><parameter_list>(<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>cb</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>int</name></type> <name>vlc_interrupt_unregister</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>






<typedef>typedef <type><name><name>struct</name> <name>vlc_interrupt</name></name></type> <name>vlc_interrupt_t</name>;</typedef>




<decl_stmt><decl><type><name>VLC_API</name> <name>vlc_interrupt_t</name> <modifier>*</modifier></type><name>vlc_interrupt_create</name><argument_list>(<argument><expr><name>void</name></expr></argument>)</argument_list> <name>VLC_USED</name></decl>;</decl_stmt>




<function_decl><type><name>VLC_API</name> <name>void</name></type> <name>vlc_interrupt_destroy</name><parameter_list>(<parameter><decl><type><name>vlc_interrupt_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>VLC_API</name> <name>vlc_interrupt_t</name> <modifier>*</modifier></type><name>vlc_interrupt_set</name><parameter_list>(<parameter><decl><type><name>vlc_interrupt_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>VLC_API</name> <name>void</name></type> <name>vlc_interrupt_raise</name><parameter_list>(<parameter><decl><type><name>vlc_interrupt_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>VLC_API</name> <name>void</name></type> <name>vlc_interrupt_kill</name><parameter_list>(<parameter><decl><type><name>vlc_interrupt_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>







<decl_stmt><decl><type><name>VLC_API</name> <name>bool</name></type> <name>vlc_killed</name><argument_list>(<argument><expr><name>void</name></expr></argument>)</argument_list> <name>VLC_USED</name></decl>;</decl_stmt>












<function_decl><type><name>VLC_API</name> <name>void</name></type> <name>vlc_interrupt_forward_start</name><parameter_list>(<parameter><decl><type><name>vlc_interrupt_t</name> <modifier>*</modifier></type><name>to</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name><name>data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>
















<function_decl><type><name>VLC_API</name> <name>int</name></type> <name>vlc_interrupt_forward_stop</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>


<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
