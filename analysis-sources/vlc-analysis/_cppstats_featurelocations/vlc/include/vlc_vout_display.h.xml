<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\include\vlc_vout_display.h">





















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>VLC_VOUT_DISPLAY_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_VOUT_DISPLAY_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_es.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_picture.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_picture_pool.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_subpicture.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_actions.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_mouse.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_vout.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_vout_window.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_viewpoint.h&gt;</cpp:file></cpp:include>











<typedef>typedef <type><name><name>struct</name> <name>vout_display_t</name></name></type> <name>vout_display_t</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>vout_display_sys_t</name></name></type> <name>vout_display_sys_t</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>vout_display_owner_t</name></name></type> <name>vout_display_owner_t</name>;</typedef>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_VIDEO_ALIGN_CENTER</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_VIDEO_ALIGN_LEFT</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_VIDEO_ALIGN_RIGHT</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_VIDEO_ALIGN_TOP</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_VIDEO_ALIGN_BOTTOM</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>




<typedef>typedef <type><struct>struct <name>vlc_video_align</name> <block>{






<decl_stmt><decl><type><name>char</name></type> <name>horizontal</name></decl>;</decl_stmt>







<decl_stmt><decl><type><name>char</name></type> <name>vertical</name></decl>;</decl_stmt>
}</block></struct></type> <name>vlc_video_align_t</name>;</typedef>













<typedef>typedef <type><struct>struct <name>vout_display_cfg</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>vout_window_t</name></name> <modifier>*</modifier></type><name>window</name></decl>;</decl_stmt> 
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__OS2__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>bool</name> <name>is_fullscreen</name></type> <name>VLC_DEPRECATED</name></decl>;</decl_stmt> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<struct>struct <block>{
<decl_stmt><decl><type><name>unsigned</name></type> <name>width</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>unsigned</name></type> <name>height</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>vlc_rational_t</name></type> <name>sar</name></decl>;</decl_stmt> 
}</block> <decl><name>display</name></decl>;</struct>






<struct>struct <block>{

<decl_stmt><decl><type><name>unsigned</name></type> <name>width</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>height</name></decl>;</decl_stmt>
}</block> <decl><name>window_props</name></decl>;</struct>


<decl_stmt><decl><type><name>vlc_video_align_t</name></type> <name>align</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>bool</name></type> <name>is_display_filled</name></decl>;</decl_stmt>


<struct>struct <block>{
<decl_stmt><decl><type><name>unsigned</name></type> <name>num</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>den</name></decl>;</decl_stmt>
}</block> <decl><name>zoom</name></decl>;</struct>

<decl_stmt><decl><type><name>vlc_viewpoint_t</name></type> <name>viewpoint</name></decl>;</decl_stmt>
}</block></struct></type> <name>vout_display_cfg_t</name>;</typedef>








<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>bool</name></type> <name>can_scale_spu</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>const</specifier> <name>vlc_fourcc_t</name> <modifier>*</modifier></type><name>subpicture_chromas</name></decl>;</decl_stmt> 
}</block></struct></type> <name>vout_display_info_t</name>;</typedef>




<enum>enum <name>vout_display_query</name> <block>{











<decl><name>VOUT_DISPLAY_RESET_PICTURES</name></decl>, 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__OS2__</name></expr></argument>)</argument_list></call></expr></cpp:if>


<decl><name>VOUT_DISPLAY_CHANGE_FULLSCREEN</name> <name>VLC_DEPRECATED_ENUM</name></decl>, 


<decl><name>VOUT_DISPLAY_CHANGE_WINDOW_STATE</name> <name>VLC_DEPRECATED_ENUM</name></decl>, 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>







<decl><name>VOUT_DISPLAY_CHANGE_DISPLAY_SIZE</name></decl>, 








<decl><name>VOUT_DISPLAY_CHANGE_DISPLAY_FILLED</name></decl>, 








<decl><name>VOUT_DISPLAY_CHANGE_ZOOM</name></decl>, 








<decl><name>VOUT_DISPLAY_CHANGE_SOURCE_ASPECT</name></decl>, 











<decl><name>VOUT_DISPLAY_CHANGE_SOURCE_CROP</name></decl>, 




<decl><name>VOUT_DISPLAY_CHANGE_VIEWPOINT</name></decl>, 
}</block>;</enum>




<struct>struct <name>vout_display_owner_t</name> <block>{


<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>sys</name></decl>;</decl_stmt>












<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>viewpoint_moved</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>sys</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>vlc_viewpoint_t</name> <modifier>*</modifier></type><name>vp</name></decl></parameter>)</parameter_list>;</function_decl>
}</block>;</struct>












<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>vout_display_open_cb</name>)<parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>,
<parameter><decl><type><name>video_format_t</name> <modifier>*</modifier></type><name>fmtp</name></decl></parameter>,
<parameter><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type><name>context</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>set_callback_display</name><parameter_list>(<parameter><type><name>activate</name></type></parameter>, <parameter><type><name>priority</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ vout_display_open_cb open__ = activate; (void) open__; set_callback(activate) } set_capability( "vout display", priority )</cpp:value></cpp:define>








<struct>struct <name>vout_display_t</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>vlc_object_t</name></name></type> <name>obj</name></decl>;</decl_stmt>






<decl_stmt><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type><name>cfg</name></decl>;</decl_stmt>










<decl_stmt><decl><type><name>video_format_t</name></type> <name>source</name></decl>;</decl_stmt>














<decl_stmt><decl><type><name>video_format_t</name></type> <name>fmt</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>vout_display_info_t</name></type> <name>info</name></decl>;</decl_stmt>


























<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>prepare</name>)<parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>pic</name></decl></parameter>,
<parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>subpic</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>date</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>display</name>)<parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>pic</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>control</name>)<parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>query</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>close</name>)<parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>






<decl_stmt><decl><type><name>vout_display_sys_t</name> <modifier>*</modifier></type><name>sys</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>vout_display_owner_t</name></type> <name>owner</name></decl>;</decl_stmt>
}</block>;</struct>




<function_decl><type><name>VLC_API</name>
<name>vout_display_t</name> <modifier>*</modifier></type><name>vout_display_New</name><parameter_list>(<parameter><decl><type><name>vlc_object_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>vlc_video_context</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>module</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>vout_display_owner_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>VLC_API</name> <name>void</name></type> <name>vout_display_Delete</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>























<function_decl><type><name>VLC_API</name> <name>picture_t</name> <modifier>*</modifier></type><name>vout_display_Prepare</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>picture</name></decl></parameter>,
<parameter><decl><type><name>subpicture_t</name> <modifier>*</modifier></type><name>subpic</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>date</name></decl></parameter>)</parameter_list>;</function_decl>




<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>vout_display_Display</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>picture_t</name> <modifier>*</modifier></type><name>picture</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>vd</name><operator>-&gt;</operator><name>display</name></name> <operator>!=</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name><name>vd</name><operator>-&gt;</operator><name>display</name></name><argument_list>(<argument><expr><name>vd</name></expr></argument>, <argument><expr><name>picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>picture_Release</name><argument_list>(<argument><expr><name>picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function_decl><type><name>VLC_API</name>
<name>void</name></type> <name>vout_display_SetSize</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>height</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VLC_API</name> <name>void</name></type> <name>vout_display_SendEventPicturesInvalid</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>vout_display_SendEventMousePressed</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>button</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>vout_window_ReportMousePressed</name><argument_list>(<argument><expr><name><name>vd</name><operator>-&gt;</operator><name>cfg</name><operator>-&gt;</operator><name>window</name></name></expr></argument>, <argument><expr><name>button</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>vout_display_SendEventMouseReleased</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>button</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>vout_window_ReportMouseReleased</name><argument_list>(<argument><expr><name><name>vd</name><operator>-&gt;</operator><name>cfg</name><operator>-&gt;</operator><name>window</name></name></expr></argument>, <argument><expr><name>button</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>vout_display_SendEventMouseDoubleClick</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>vout_window_ReportMouseDoubleClick</name><argument_list>(<argument><expr><name><name>vd</name><operator>-&gt;</operator><name>cfg</name><operator>-&gt;</operator><name>window</name></name></expr></argument>, <argument><expr><name>MOUSE_BUTTON_LEFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>vout_display_SendEventViewpointMoved</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>vlc_viewpoint_t</name> <modifier>*</modifier></type><name>vp</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>vd</name><operator>-&gt;</operator><name>owner</name><operator>.</operator><name>viewpoint_moved</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name><name>vd</name><operator>-&gt;</operator><name>owner</name><operator>.</operator><name>viewpoint_moved</name></name><argument_list>(<argument><expr><name><name>vd</name><operator>-&gt;</operator><name>owner</name><operator>.</operator><name>sys</name></name></expr></argument>, <argument><expr><name>vp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>









<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>vout_display_SendMouseMovedDisplayCoordinates</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>m_x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>m_y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>vout_window_ReportMouseMoved</name><argument_list>(<argument><expr><name><name>vd</name><operator>-&gt;</operator><name>cfg</name><operator>-&gt;</operator><name>window</name></name></expr></argument>, <argument><expr><name>m_x</name></expr></argument>, <argument><expr><name>m_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type> <name>vout_display_cfg_IsWindowed</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>cfg</name><operator>-&gt;</operator><name>window</name><operator>-&gt;</operator><name>type</name></name> <operator>!=</operator> <name>VOUT_WINDOW_TYPE_DUMMY</name></expr>;</return>
</block_content>}</block></function>







<function_decl><type><name>VLC_API</name> <name>void</name></type> <name>vout_display_GetDefaultDisplaySize</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>width</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>height</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>







<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>y</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>unsigned</name></type> <name>width</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>unsigned</name></type> <name>height</name></decl>;</decl_stmt> 
}</block></struct></type> <name>vout_display_place_t</name>;</typedef>




<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type> <name>vout_display_PlaceEquals</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>vout_display_place_t</name> <modifier>*</modifier></type><name>p1</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>vout_display_place_t</name> <modifier>*</modifier></type><name>p2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>p1</name><operator>-&gt;</operator><name>x</name></name> <operator>==</operator> <name><name>p2</name><operator>-&gt;</operator><name>x</name></name> <operator>&amp;&amp;</operator> <name><name>p1</name><operator>-&gt;</operator><name>width</name></name> <operator>==</operator> <name><name>p2</name><operator>-&gt;</operator><name>width</name></name> <operator>&amp;&amp;</operator>
<name><name>p1</name><operator>-&gt;</operator><name>y</name></name> <operator>==</operator> <name><name>p2</name><operator>-&gt;</operator><name>y</name></name> <operator>&amp;&amp;</operator> <name><name>p1</name><operator>-&gt;</operator><name>height</name></name> <operator>==</operator> <name><name>p2</name><operator>-&gt;</operator><name>height</name></name></expr>;</return>
</block_content>}</block></function>














<function_decl><type><name>VLC_API</name> <name>void</name></type> <name>vout_display_PlacePicture</name><parameter_list>(<parameter><decl><type><name>vout_display_place_t</name> <modifier>*</modifier></type><name>place</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>video_format_t</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>vout_display_cfg_t</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>void</name></type> <name>vout_display_TranslateMouseState</name><parameter_list>(<parameter><decl><type><name>vout_display_t</name> <modifier>*</modifier></type><name>vd</name></decl></parameter>, <parameter><decl><type><name>vlc_mouse_t</name> <modifier>*</modifier></type><name>video</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>vlc_mouse_t</name> <modifier>*</modifier></type><name>window</name></decl></parameter>)</parameter_list>;</function_decl>


<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
