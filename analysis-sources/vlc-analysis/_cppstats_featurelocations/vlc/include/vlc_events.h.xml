<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\include\vlc_events.h">






















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>VLC_EVENTS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_EVENTS_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_arrays.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vlc_meta.h&gt;</cpp:file></cpp:include>




































































<typedef>typedef <type><enum>enum <name>vlc_event_type_t</name> <block>{

<decl><name>vlc_InputItemMetaChanged</name></decl>,
<decl><name>vlc_InputItemDurationChanged</name></decl>,
<decl><name>vlc_InputItemPreparsedChanged</name></decl>,
<decl><name>vlc_InputItemNameChanged</name></decl>,
<decl><name>vlc_InputItemInfoChanged</name></decl>,
<decl><name>vlc_InputItemErrorWhenReadingChanged</name></decl>,
}</block></enum></type> <name>vlc_event_type_t</name>;</typedef>

<typedef>typedef <type><struct>struct <name>vlc_event_listeners_group_t</name>
<block>{
<macro><name>DECL_ARRAY</name><argument_list>(<argument>struct vlc_event_listener_t *</argument>)</argument_list></macro> <expr_stmt><expr><name>listeners</name></expr>;</expr_stmt>
}</block></struct></type> <name>vlc_event_listeners_group_t</name>;</typedef>


<typedef>typedef <type><struct>struct <name>vlc_event_manager_t</name>
<block>{
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type> <name>p_obj</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_mutex_t</name></type> <name>lock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_event_listeners_group_t</name></type> <name><name>events</name><index>[<expr><name>vlc_InputItemErrorWhenReadingChanged</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>vlc_event_manager_t</name>;</typedef>


<typedef>typedef <type><struct>struct <name>vlc_event_t</name>
<block>{
<decl_stmt><decl><type><name>vlc_event_type_t</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type> <name>p_obj</name></decl>;</decl_stmt> 
<union>union <name>vlc_event_type_specific</name>
<block>{

<struct>struct <name>vlc_input_item_meta_changed</name>
<block>{
<decl_stmt><decl><type><name>vlc_meta_type_t</name></type> <name>meta_type</name></decl>;</decl_stmt>
}</block> <decl><name>input_item_meta_changed</name></decl>;</struct>
<struct>struct <name>vlc_input_item_subitem_added</name>
<block>{
<decl_stmt><decl><type><name>input_item_t</name> <modifier>*</modifier></type> <name>p_new_child</name></decl>;</decl_stmt>
}</block> <decl><name>input_item_subitem_added</name></decl>;</struct>
<struct>struct <name>vlc_input_item_subitem_tree_added</name>
<block>{
<decl_stmt><decl><type><name>input_item_node_t</name> <modifier>*</modifier></type> <name>p_root</name></decl>;</decl_stmt>
}</block> <decl><name>input_item_subitem_tree_added</name></decl>;</struct>
<struct>struct <name>vlc_input_item_duration_changed</name>
<block>{
<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>new_duration</name></decl>;</decl_stmt>
}</block> <decl><name>input_item_duration_changed</name></decl>;</struct>
<struct>struct <name>vlc_input_item_preparsed_changed</name>
<block>{
<decl_stmt><decl><type><name>int</name></type> <name>new_status</name></decl>;</decl_stmt>
}</block> <decl><name>input_item_preparsed_changed</name></decl>;</struct>
<struct>struct <name>vlc_input_item_name_changed</name>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>new_name</name></decl>;</decl_stmt>
}</block> <decl><name>input_item_name_changed</name></decl>;</struct>
<struct>struct <name>vlc_input_item_info_changed</name>
<block>{
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type> <name>unused</name></decl>;</decl_stmt>
}</block> <decl><name>input_item_info_changed</name></decl>;</struct>
<struct>struct <name>input_item_error_when_reading_changed</name>
<block>{
<decl_stmt><decl><type><name>bool</name></type> <name>new_value</name></decl>;</decl_stmt>
}</block> <decl><name>input_item_error_when_reading_changed</name></decl>;</struct>
<struct>struct <name>input_item_preparse_ended</name>
<block>{
<decl_stmt><decl><type><name>int</name></type> <name>new_status</name></decl>;</decl_stmt>
}</block> <decl><name>input_item_preparse_ended</name></decl>;</struct>
}</block> <decl><name>u</name></decl>;</union>
}</block></struct></type> <name>vlc_event_t</name>;</typedef>


<typedef>typedef <function_decl><type><name>void</name></type> ( <modifier>*</modifier><name>vlc_event_callback_t</name> )<parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>vlc_event_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl></typedef>









<function_decl><type><name>void</name></type> <name>vlc_event_manager_init</name><parameter_list>( <parameter><decl><type><name>vlc_event_manager_t</name> <modifier>*</modifier></type> <name>p_em</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>p_obj</name></decl></parameter> )</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>vlc_event_manager_fini</name><parameter_list>( <parameter><decl><type><name>vlc_event_manager_t</name> <modifier>*</modifier></type> <name>p_em</name></decl></parameter> )</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>vlc_event_send</name><parameter_list>( <parameter><decl><type><name>vlc_event_manager_t</name> <modifier>*</modifier></type> <name>p_em</name></decl></parameter>, <parameter><decl><type><name>vlc_event_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>




<function_decl><type><name>VLC_API</name> <name>int</name></type> <name>vlc_event_attach</name><parameter_list>( <parameter><decl><type><name>vlc_event_manager_t</name> <modifier>*</modifier></type> <name>p_event_manager</name></decl></parameter>,
<parameter><decl><type><name>vlc_event_type_t</name></type> <name>event_type</name></decl></parameter>,
<parameter><decl><type><name>vlc_event_callback_t</name></type> <name>pf_callback</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_user_data</name></decl></parameter> )</parameter_list>;</function_decl>




<function_decl><type><name>VLC_API</name> <name>void</name></type> <name>vlc_event_detach</name><parameter_list>( <parameter><decl><type><name>vlc_event_manager_t</name> <modifier>*</modifier></type><name>p_event_manager</name></decl></parameter>,
<parameter><decl><type><name>vlc_event_type_t</name></type> <name>event_type</name></decl></parameter>,
<parameter><decl><type><name>vlc_event_callback_t</name></type> <name>pf_callback</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p_user_data</name></decl></parameter> )</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
