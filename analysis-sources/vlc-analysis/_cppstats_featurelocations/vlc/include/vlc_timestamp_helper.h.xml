<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\include\vlc_timestamp_helper.h">





















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>VLC_TIMESTAMP_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_TIMESTAMP_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>











<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>uint32_t</name></type> <name>begin</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>capacity</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vlc_tick_t</name> <modifier>*</modifier></type><name>buffer</name></decl>;</decl_stmt>
}</block></struct></type> <name>timestamp_fifo_t</name>;</typedef>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>timestamp_fifo_t</name> <modifier>*</modifier></type><name>timestamp_FifoNew</name><parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>capacity</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>timestamp_fifo_t</name> <modifier>*</modifier></type><name>fifo</name> <init>= <expr><call><name>calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>fifo</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>fifo</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>fifo</name><operator>-&gt;</operator><name>buffer</name></name> <operator>=</operator> <call><name>vlc_alloc</name><argument_list>(<argument><expr><name>capacity</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name><name>fifo</name><operator>-&gt;</operator><name>buffer</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>fifo</name><operator>-&gt;</operator><name>buffer</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>fifo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>fifo</name><operator>-&gt;</operator><name>capacity</name></name> <operator>=</operator> <name>capacity</name></expr>;</expr_stmt>
<return>return <expr><name>fifo</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>timestamp_FifoRelease</name><parameter_list>(<parameter><decl><type><name>timestamp_fifo_t</name> <modifier>*</modifier></type><name>fifo</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name><name>fifo</name><operator>-&gt;</operator><name>buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>fifo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type> <name>timestamp_FifoIsEmpty</name><parameter_list>(<parameter><decl><type><name>timestamp_fifo_t</name> <modifier>*</modifier></type><name>fifo</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>fifo</name><operator>-&gt;</operator><name>size</name></name> <operator>==</operator> <literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>bool</name></type> <name>timestamp_FifoIsFull</name><parameter_list>(<parameter><decl><type><name>timestamp_fifo_t</name> <modifier>*</modifier></type><name>fifo</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>fifo</name><operator>-&gt;</operator><name>size</name></name> <operator>==</operator> <name><name>fifo</name><operator>-&gt;</operator><name>capacity</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>timestamp_FifoEmpty</name><parameter_list>(<parameter><decl><type><name>timestamp_fifo_t</name> <modifier>*</modifier></type><name>fifo</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>fifo</name><operator>-&gt;</operator><name>size</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>timestamp_FifoPut</name><parameter_list>(<parameter><decl><type><name>timestamp_fifo_t</name> <modifier>*</modifier></type><name>fifo</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>ts</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>end</name> <init>= <expr><operator>(</operator><name><name>fifo</name><operator>-&gt;</operator><name>begin</name></name> <operator>+</operator> <name><name>fifo</name><operator>-&gt;</operator><name>size</name></name><operator>)</operator> <operator>%</operator> <name><name>fifo</name><operator>-&gt;</operator><name>capacity</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>fifo</name><operator>-&gt;</operator><name>buffer</name><index>[<expr><name>end</name></expr>]</index></name> <operator>=</operator> <name>ts</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>timestamp_FifoIsFull</name><argument_list>(<argument><expr><name>fifo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>fifo</name><operator>-&gt;</operator><name>size</name></name> <operator>+=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name><name>fifo</name><operator>-&gt;</operator><name>begin</name></name> <operator>=</operator> <operator>(</operator><name><name>fifo</name><operator>-&gt;</operator><name>begin</name></name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator> <operator>%</operator> <name><name>fifo</name><operator>-&gt;</operator><name>capacity</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>vlc_tick_t</name></type> <name>timestamp_FifoGet</name><parameter_list>(<parameter><decl><type><name>timestamp_fifo_t</name> <modifier>*</modifier></type><name>fifo</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>timestamp_FifoIsEmpty</name><argument_list>(<argument><expr><name>fifo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>VLC_TICK_INVALID</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>vlc_tick_t</name></type> <name>result</name> <init>= <expr><name><name>fifo</name><operator>-&gt;</operator><name>buffer</name><index>[<expr><name><name>fifo</name><operator>-&gt;</operator><name>begin</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>fifo</name><operator>-&gt;</operator><name>begin</name></name> <operator>=</operator> <operator>(</operator><name><name>fifo</name><operator>-&gt;</operator><name>begin</name></name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator> <operator>%</operator> <name><name>fifo</name><operator>-&gt;</operator><name>capacity</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fifo</name><operator>-&gt;</operator><name>size</name></name> <operator>-=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
