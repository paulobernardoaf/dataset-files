<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\vlc-analysis\_cppstats_featurelocations\vlc\include\vlc_es_out.h">





















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>VLC_ES_OUT_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VLC_ES_OUT_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>










<enum>enum <name>es_out_query_e</name>
<block>{

<decl><name>ES_OUT_SET_ES</name></decl>, 
<decl><name>ES_OUT_UNSET_ES</name></decl>, 
<decl><name>ES_OUT_RESTART_ES</name></decl>, 


<decl><name>ES_OUT_SET_ES_DEFAULT</name></decl>, 



<decl><name>ES_OUT_SET_ES_STATE</name></decl>,
<decl><name>ES_OUT_GET_ES_STATE</name></decl>,


<decl><name>ES_OUT_SET_ES_CAT_POLICY</name></decl>, 


<decl><name>ES_OUT_SET_GROUP</name></decl>, 







<decl><name>ES_OUT_SET_PCR</name></decl>, 
<decl><name>ES_OUT_SET_GROUP_PCR</name></decl>, 
<decl><name>ES_OUT_RESET_PCR</name></decl>, 



<decl><name>ES_OUT_SET_ES_FMT</name></decl>, 


<decl><name>ES_OUT_SET_NEXT_DISPLAY_TIME</name></decl>, 

<decl><name>ES_OUT_SET_GROUP_META</name></decl>, 

<decl><name>ES_OUT_SET_GROUP_EPG</name></decl>, 
<decl><name>ES_OUT_SET_GROUP_EPG_EVENT</name></decl>, 
<decl><name>ES_OUT_SET_EPG_TIME</name></decl>, 


<decl><name>ES_OUT_DEL_GROUP</name></decl>, 


<decl><name>ES_OUT_SET_ES_SCRAMBLED_STATE</name></decl>, 






<decl><name>ES_OUT_GET_EMPTY</name></decl>, 


<decl><name>ES_OUT_SET_META</name></decl>, 


<decl><name>ES_OUT_GET_PCR_SYSTEM</name></decl>, 
<decl><name>ES_OUT_MODIFY_PCR_SYSTEM</name></decl>, 

<decl><name>ES_OUT_POST_SUBNODE</name></decl>, 

<decl><name>ES_OUT_VOUT_SET_MOUSE_EVENT</name></decl>, 



<decl><name>ES_OUT_VOUT_ADD_OVERLAY</name></decl>, 


<decl><name>ES_OUT_VOUT_DEL_OVERLAY</name></decl>, 


<decl><name>ES_OUT_SPU_SET_HIGHLIGHT</name></decl>, 



<decl><name>ES_OUT_PRIVATE_START</name> <init>= <expr><literal type="number">0x10000</literal></expr></init></decl>,
}</block>;</enum>

<enum>enum <name>es_out_policy_e</name>
<block>{
<decl><name>ES_OUT_ES_POLICY_EXCLUSIVE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>ES_OUT_ES_POLICY_SIMULTANEOUS</name></decl>, 


<decl><name>ES_OUT_ES_POLICY_AUTO</name></decl>,
}</block>;</enum>

<struct>struct <name>es_out_callbacks</name>
<block>{
<function_decl><type><name>es_out_id_t</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>add</name>)<parameter_list>(<parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>input_source_t</name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>send</name>)<parameter_list>(<parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>es_out_id_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>block_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>del</name>)<parameter_list>(<parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>es_out_id_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>control</name>)<parameter_list>(<parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>input_source_t</name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>query</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>destroy</name>)<parameter_list>(<parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>priv_control</name>)<parameter_list>(<parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>query</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type></decl></parameter>)</parameter_list>;</function_decl>
}</block>;</struct>

<struct>struct <name>es_out_t</name>
<block>{
<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>es_out_callbacks</name></name> <modifier>*</modifier></type><name>cbs</name></decl>;</decl_stmt>
}</block>;</struct>

<function><type><name>VLC_USED</name>
<specifier>static</specifier> <specifier>inline</specifier> <name>es_out_id_t</name> <modifier>*</modifier></type> <name>es_out_Add</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>es_format_t</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><call><name><name>out</name><operator>-&gt;</operator><name>cbs</name><operator>-&gt;</operator><name>add</name></name><argument_list>( <argument><expr><name>out</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>fmt</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>es_out_Del</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>es_out_id_t</name> <modifier>*</modifier></type><name>id</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name><name>out</name><operator>-&gt;</operator><name>cbs</name><operator>-&gt;</operator><name>del</name></name><argument_list>( <argument><expr><name>out</name></expr></argument>, <argument><expr><name>id</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>es_out_Send</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>es_out_id_t</name> <modifier>*</modifier></type><name>id</name></decl></parameter>,
<parameter><decl><type><name>block_t</name> <modifier>*</modifier></type><name>p_block</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><call><name><name>out</name><operator>-&gt;</operator><name>cbs</name><operator>-&gt;</operator><name>send</name></name><argument_list>( <argument><expr><name>out</name></expr></argument>, <argument><expr><name>id</name></expr></argument>, <argument><expr><name>p_block</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>es_out_vaControl</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_query</name></decl></parameter>, <parameter><decl><type><name>va_list</name></type> <name>args</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><call><name><name>out</name><operator>-&gt;</operator><name>cbs</name><operator>-&gt;</operator><name>control</name></name><argument_list>( <argument><expr><name>out</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>i_query</name></expr></argument>, <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>es_out_Control</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i_query</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>va_list</name></type> <name>args</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i_result</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>va_start</name><argument_list>( <argument><expr><name>args</name></expr></argument>, <argument><expr><name>i_query</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>i_result</name> <operator>=</operator> <call><name>es_out_vaControl</name><argument_list>( <argument><expr><name>out</name></expr></argument>, <argument><expr><name>i_query</name></expr></argument>, <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>va_end</name><argument_list>( <argument><expr><name>args</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>i_result</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>es_out_Delete</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>p_out</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name><name>p_out</name><operator>-&gt;</operator><name>cbs</name><operator>-&gt;</operator><name>destroy</name></name><argument_list>( <argument><expr><name>p_out</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>es_out_SetPCR</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>pcr</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name>out</name></expr></argument>, <argument><expr><name>ES_OUT_SET_PCR</name></expr></argument>, <argument><expr><name>pcr</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>es_out_ControlSetMeta</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>vlc_meta_t</name> <modifier>*</modifier></type><name>p_meta</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name>out</name></expr></argument>, <argument><expr><name>ES_OUT_SET_META</name></expr></argument>, <argument><expr><name>p_meta</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>es_out_ControlGetPcrSystem</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name> <modifier>*</modifier></type><name>pi_system</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name> <modifier>*</modifier></type><name>pi_delay</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name>out</name></expr></argument>, <argument><expr><name>ES_OUT_GET_PCR_SYSTEM</name></expr></argument>, <argument><expr><name>pi_system</name></expr></argument>, <argument><expr><name>pi_delay</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>es_out_ControlModifyPcrSystem</name><parameter_list>( <parameter><decl><type><name>es_out_t</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b_absolute</name></decl></parameter>, <parameter><decl><type><name>vlc_tick_t</name></type> <name>i_system</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>es_out_Control</name><argument_list>( <argument><expr><name>out</name></expr></argument>, <argument><expr><name>ES_OUT_MODIFY_PCR_SYSTEM</name></expr></argument>, <argument><expr><name>b_absolute</name></expr></argument>, <argument><expr><name>i_system</name></expr></argument> )</argument_list></call></expr>;</return>
</block_content>}</block></function>





<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
