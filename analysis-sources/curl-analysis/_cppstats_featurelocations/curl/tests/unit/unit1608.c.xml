<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats_featurelocations\curl\tests\unit\unit1608.c">




















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curlcheck.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"hostip.h"</cpp:file></cpp:include>

<function_decl><type><name>CURLcode</name></type> <name>Curl_shuffle_addr</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Curl_easy</name></name> <modifier>*</modifier></type><name>data</name></decl></parameter>,
<parameter><decl><type><name>Curl_addrinfo</name> <modifier>*</modifier><modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NUM_ADDRS</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>
<decl_stmt><decl><type><specifier>static</specifier> <name><name>struct</name> <name>Curl_addrinfo</name></name></type> <name><name>addrs</name><index>[<expr><name>NUM_ADDRS</name></expr>]</index></name></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>CURLcode</name></type> <name>unit_setup</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>NUM_ADDRS</name> <operator>-</operator> <literal type="number">1</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name><name>addrs</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>ai_next</name> <operator>=</operator> <operator>&amp;</operator><name><name>addrs</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></for>

<return>return <expr><name>CURLE_OK</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>unit_stop</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>

</block_content>}</block></function>

<macro><name>UNITTEST_START</name></macro>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>CURLcode</name></type> <name>code</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>Curl_addrinfo</name></name><modifier>*</modifier></type> <name>addrhead</name> <init>= <expr><name>addrs</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>Curl_easy</name></name> <modifier>*</modifier></type><name>easy</name> <init>= <expr><call><name>curl_easy_init</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>easy</name></expr></argument>, <argument><expr><literal type="string">"out of memory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>code</name> <operator>=</operator> <call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>easy</name></expr></argument>, <argument><expr><name>CURLOPT_DNS_SHUFFLE_ADDRESSES</name></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>code</name> <operator>==</operator> <name>CURLE_OK</name></expr></argument>, <argument><expr><literal type="string">"curl_easy_setopt failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">10</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>!=</operator> <call><name>Curl_shuffle_addr</name><argument_list>(<argument><expr><name>easy</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>addrhead</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name>addrhead</name> <operator>!=</operator> <name>addrs</name></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>
</block_content>}</block></for>

<expr_stmt><expr><call><name>curl_easy_cleanup</name><argument_list>(<argument><expr><name>easy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>curl_global_cleanup</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>addrhead</name> <operator>!=</operator> <name>addrs</name></expr></argument>, <argument><expr><literal type="string">"addresses are not being reordered"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block>
<expr><name>UNITTEST_STOP</name></expr>
</unit>
