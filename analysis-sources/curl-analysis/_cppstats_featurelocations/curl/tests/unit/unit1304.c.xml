<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats_featurelocations\curl\tests\unit\unit1304.c">




















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curlcheck.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"netrc.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"memdebug.h"</cpp:file></cpp:include> 

<decl_stmt><decl><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type><name>login</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type><name>password</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name></type> <name><name>filename</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>CURLcode</name></type> <name>unit_setup</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name>password</name> <operator>=</operator> <call><name>strdup</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>login</name> <operator>=</operator> <call><name>strdup</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name>password</name> <operator>||</operator> <operator>!</operator><name>login</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>Curl_safefree</name><argument_list>(<argument><expr><name>password</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>Curl_safefree</name><argument_list>(<argument><expr><name>login</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>CURLE_OUT_OF_MEMORY</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>CURLE_OK</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>unit_stop</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>Curl_safefree</name><argument_list>(<argument><expr><name>password</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>Curl_safefree</name><argument_list>(<argument><expr><name>login</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<decl_stmt><decl><type><name>UNITTEST_START</name>
<name>int</name></type> <name>result</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>login_changed</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>password_changed</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>filename1</name> <init>= <expr><literal type="string">"log/netrc1304"</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>filename</name></expr></argument>, <argument><expr><name>filename1</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>filename1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>




<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>Curl_parsenetrc</name><argument_list>(<argument><expr><literal type="string">"test.example.com"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>login</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>password</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>login_changed</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>password_changed</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>result</name> <operator>==</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"Host not found should return 1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>password</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name><name>password</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"password should not have been changed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>login</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name><name>login</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"login should not have been changed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>




<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>login</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>login</name> <operator>=</operator> <call><name>strdup</name><argument_list>(<argument><expr><literal type="string">"me"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>login</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>Curl_parsenetrc</name><argument_list>(<argument><expr><literal type="string">"example.com"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>login</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>password</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>login_changed</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>password_changed</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>result</name> <operator>==</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"Host should have been found"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>password</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name><name>password</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"password should not have been changed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><operator>!</operator><name>password_changed</name></expr></argument>, <argument><expr><literal type="string">"password should not have been changed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>login</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><call><name>strncmp</name><argument_list>(<argument><expr><name>login</name></expr></argument>, <argument><expr><literal type="string">"me"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>,
<argument><expr><literal type="string">"login should not have been changed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><operator>!</operator><name>login_changed</name></expr></argument>, <argument><expr><literal type="string">"login should not have been changed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>




<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>login</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>login</name> <operator>=</operator> <call><name>strdup</name><argument_list>(<argument><expr><literal type="string">"me"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>login</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>Curl_parsenetrc</name><argument_list>(<argument><expr><literal type="string">"test.example.com"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>login</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>password</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>login_changed</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>password_changed</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>result</name> <operator>==</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"Host not found should return 1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>password</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name><name>password</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"password should not have been changed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>login</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><call><name>strncmp</name><argument_list>(<argument><expr><name>login</name></expr></argument>, <argument><expr><literal type="string">"me"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>,
<argument><expr><literal type="string">"login should not have been changed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>login</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>login</name> <operator>=</operator> <call><name>strdup</name><argument_list>(<argument><expr><literal type="string">"admi"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>login</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>Curl_parsenetrc</name><argument_list>(<argument><expr><literal type="string">"example.com"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>login</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>password</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>login_changed</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>password_changed</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>result</name> <operator>==</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"Host should have been found"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>password</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name><name>password</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"password should not have been changed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><operator>!</operator><name>password_changed</name></expr></argument>, <argument><expr><literal type="string">"password should not have been changed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>login</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><call><name>strncmp</name><argument_list>(<argument><expr><name>login</name></expr></argument>, <argument><expr><literal type="string">"admi"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>,
<argument><expr><literal type="string">"login should not have been changed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><operator>!</operator><name>login_changed</name></expr></argument>, <argument><expr><literal type="string">"login should not have been changed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>login</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>login</name> <operator>=</operator> <call><name>strdup</name><argument_list>(<argument><expr><literal type="string">"adminn"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>login</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>Curl_parsenetrc</name><argument_list>(<argument><expr><literal type="string">"example.com"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>login</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>password</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>login_changed</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>password_changed</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>result</name> <operator>==</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"Host should have been found"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>password</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name><name>password</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"password should not have been changed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><operator>!</operator><name>password_changed</name></expr></argument>, <argument><expr><literal type="string">"password should not have been changed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>login</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><call><name>strncmp</name><argument_list>(<argument><expr><name>login</name></expr></argument>, <argument><expr><literal type="string">"adminn"</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>,
<argument><expr><literal type="string">"login should not have been changed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><operator>!</operator><name>login_changed</name></expr></argument>, <argument><expr><literal type="string">"login should not have been changed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>login</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>login</name> <operator>=</operator> <call><name>strdup</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>login</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>Curl_parsenetrc</name><argument_list>(<argument><expr><literal type="string">"example.com"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>login</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>password</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>login_changed</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>password_changed</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>result</name> <operator>==</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"Host should have been found"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>password</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><call><name>strncmp</name><argument_list>(<argument><expr><name>password</name></expr></argument>, <argument><expr><literal type="string">"passwd"</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>,
<argument><expr><literal type="string">"password should be 'passwd'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>password_changed</name></expr></argument>, <argument><expr><literal type="string">"password should have been changed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>login</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><call><name>strncmp</name><argument_list>(<argument><expr><name>login</name></expr></argument>, <argument><expr><literal type="string">"admin"</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"login should be 'admin'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>login_changed</name></expr></argument>, <argument><expr><literal type="string">"login should have been changed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>password</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>password</name> <operator>=</operator> <call><name>strdup</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>password</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>Curl_parsenetrc</name><argument_list>(<argument><expr><literal type="string">"example.com"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>login</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>password</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>login_changed</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>password_changed</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>result</name> <operator>==</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"Host should have been found"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>password</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><call><name>strncmp</name><argument_list>(<argument><expr><name>password</name></expr></argument>, <argument><expr><literal type="string">"passwd"</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>,
<argument><expr><literal type="string">"password should be 'passwd'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>password_changed</name></expr></argument>, <argument><expr><literal type="string">"password should have been changed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>login</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><call><name>strncmp</name><argument_list>(<argument><expr><name>login</name></expr></argument>, <argument><expr><literal type="string">"admin"</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"login should be 'admin'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><operator>!</operator><name>login_changed</name></expr></argument>, <argument><expr><literal type="string">"login should not have been changed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>password</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>password</name> <operator>=</operator> <call><name>strdup</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>password</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>login</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>login</name> <operator>=</operator> <call><name>strdup</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>login</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>Curl_parsenetrc</name><argument_list>(<argument><expr><literal type="string">"curl.example.com"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>login</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>password</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>login_changed</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>password_changed</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>result</name> <operator>==</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"Host should have been found"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>password</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><call><name>strncmp</name><argument_list>(<argument><expr><name>password</name></expr></argument>, <argument><expr><literal type="string">"none"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>,
<argument><expr><literal type="string">"password should be 'none'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>password_changed</name></expr></argument>, <argument><expr><literal type="string">"password should have been changed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>login</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><call><name>strncmp</name><argument_list>(<argument><expr><name>login</name></expr></argument>, <argument><expr><literal type="string">"none"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"login should be 'none'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>login_changed</name></expr></argument>, <argument><expr><literal type="string">"login should have been changed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>password</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>password</name> <operator>=</operator> <call><name>strdup</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>password</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>Curl_parsenetrc</name><argument_list>(<argument><expr><literal type="string">"curl.example.com"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>login</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>password</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>login_changed</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>password_changed</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>result</name> <operator>==</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"Host should have been found"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>password</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><call><name>strncmp</name><argument_list>(<argument><expr><name>password</name></expr></argument>, <argument><expr><literal type="string">"none"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>,
<argument><expr><literal type="string">"password should be 'none'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>password_changed</name></expr></argument>, <argument><expr><literal type="string">"password should have been changed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>abort_unless</name><argument_list>(<argument><expr><name>login</name> <operator>!=</operator> <name>NULL</name></expr></argument>, <argument><expr><literal type="string">"returned NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><call><name>strncmp</name><argument_list>(<argument><expr><name>login</name></expr></argument>, <argument><expr><literal type="string">"none"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"login should be 'none'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><operator>!</operator><name>login_changed</name></expr></argument>, <argument><expr><literal type="string">"login should not have been changed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr><name>UNITTEST_STOP</name></expr>
</unit>
