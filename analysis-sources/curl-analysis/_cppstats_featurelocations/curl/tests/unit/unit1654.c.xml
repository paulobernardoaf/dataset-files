<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats_featurelocations\curl\tests\unit\unit1654.c">




















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curlcheck.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"urldata.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"altsvc.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>CURLcode</name></type>
<name>unit_setup</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name>CURLE_OK</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>unit_stop</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>curl_global_cleanup</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>CURL_DISABLE_HTTP</name></expr></argument>)</argument_list></call> <operator>||</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>USE_ALTSVC</name></expr></argument>)</argument_list></call></expr></cpp:if>
<macro><name>UNITTEST_START</name></macro>
<block>{<block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return> 

</block_content>}</block>
<decl_stmt><decl><type><name>UNITTEST_STOP</name></type>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<name>UNITTEST_START</name>
<block>{<block_content>
<decl_stmt><decl><type><name>char</name></type> <name><name>outname</name><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>CURL</name> <modifier>*</modifier></type><name>curl</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>CURLcode</name></type> <name>result</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>altsvcinfo</name></name> <modifier>*</modifier></type><name>asi</name> <init>= <expr><call><name>Curl_altsvc_init</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name>asi</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>Curl_altsvc_load</name><argument_list>(<argument><expr><name>asi</name></expr></argument>, <argument><expr><name>arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>result</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>Curl_altsvc_cleanup</name><argument_list>(<argument><expr><name>asi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>curl</name> <operator>=</operator> <call><name>curl_easy_init</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name>curl</name></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name><name>asi</name><operator>-&gt;</operator><name>num</name></name> <operator>==</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><literal type="string">"wrong number of entries"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>msnprintf</name><argument_list>(<argument><expr><name>outname</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>outname</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"%s-out"</literal></expr></argument>, <argument><expr><name>arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>Curl_altsvc_parse</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>asi</name></expr></argument>, <argument><expr><literal type="string">"h2=\"example.com:8080\""</literal></expr></argument>,
<argument><expr><name>ALPN_h1</name></expr></argument>, <argument><expr><literal type="string">"example.org"</literal></expr></argument>, <argument><expr><literal type="number">8080</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>result</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"Curl_altsvc_parse() failed!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>unitfail</name><operator>++</operator></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name><name>asi</name><operator>-&gt;</operator><name>num</name></name> <operator>==</operator> <literal type="number">5</literal></expr></argument>, <argument><expr><literal type="string">"wrong number of entries"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>Curl_altsvc_parse</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>asi</name></expr></argument>, <argument><expr><literal type="string">"h3=\":8080\""</literal></expr></argument>,
<argument><expr><name>ALPN_h1</name></expr></argument>, <argument><expr><literal type="string">"2.example.org"</literal></expr></argument>, <argument><expr><literal type="number">8080</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>result</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"Curl_altsvc_parse(2) failed!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>unitfail</name><operator>++</operator></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name><name>asi</name><operator>-&gt;</operator><name>num</name></name> <operator>==</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><literal type="string">"wrong number of entries"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>Curl_altsvc_parse</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>asi</name></expr></argument>,
<argument><expr><literal type="string">"h2=\"example.com:8080\", h3=\"yesyes.com\""</literal></expr></argument>,
<argument><expr><name>ALPN_h1</name></expr></argument>, <argument><expr><literal type="string">"3.example.org"</literal></expr></argument>, <argument><expr><literal type="number">8080</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>result</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"Curl_altsvc_parse(3) failed!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>unitfail</name><operator>++</operator></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name><name>asi</name><operator>-&gt;</operator><name>num</name></name> <operator>==</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><literal type="string">"wrong number of entries"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>Curl_altsvc_parse</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>asi</name></expr></argument>, <argument><expr><literal type="string">"h2=\"example.com:443\"; ma = 120;"</literal></expr></argument>,
<argument><expr><name>ALPN_h2</name></expr></argument>, <argument><expr><literal type="string">"example.org"</literal></expr></argument>, <argument><expr><literal type="number">80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>result</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"Curl_altsvc_parse(4) failed!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>unitfail</name><operator>++</operator></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name><name>asi</name><operator>-&gt;</operator><name>num</name></name> <operator>==</operator> <literal type="number">9</literal></expr></argument>, <argument><expr><literal type="string">"wrong number of entries"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>Curl_altsvc_parse</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>asi</name></expr></argument>, <argument><expr><literal type="string">"h2=\"example.net:443\"; ma=\"180\";"</literal></expr></argument>,
<argument><expr><name>ALPN_h2</name></expr></argument>, <argument><expr><literal type="string">"example.net"</literal></expr></argument>, <argument><expr><literal type="number">80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>result</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"Curl_altsvc_parse(4) failed!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>unitfail</name><operator>++</operator></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name><name>asi</name><operator>-&gt;</operator><name>num</name></name> <operator>==</operator> <literal type="number">10</literal></expr></argument>, <argument><expr><literal type="string">"wrong number of entries"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>Curl_altsvc_parse</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>asi</name></expr></argument>,
<argument><expr><literal type="string">"h2=\":443\", h3=\":443\"; ma = 120; persist = 1"</literal></expr></argument>,
<argument><expr><name>ALPN_h1</name></expr></argument>, <argument><expr><literal type="string">"curl.haxx.se"</literal></expr></argument>, <argument><expr><literal type="number">80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>result</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"Curl_altsvc_parse(5) failed!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>unitfail</name><operator>++</operator></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name><name>asi</name><operator>-&gt;</operator><name>num</name></name> <operator>==</operator> <literal type="number">12</literal></expr></argument>, <argument><expr><literal type="string">"wrong number of entries"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>Curl_altsvc_parse</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>asi</name></expr></argument>, <argument><expr><literal type="string">"clear;"</literal></expr></argument>,
<argument><expr><name>ALPN_h1</name></expr></argument>, <argument><expr><literal type="string">"curl.haxx.se"</literal></expr></argument>, <argument><expr><literal type="number">80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>result</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"Curl_altsvc_parse(6) failed!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>unitfail</name><operator>++</operator></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name><name>asi</name><operator>-&gt;</operator><name>num</name></name> <operator>==</operator> <literal type="number">10</literal></expr></argument>, <argument><expr><literal type="string">"wrong number of entries"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>Curl_altsvc_save</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>asi</name></expr></argument>, <argument><expr><name>outname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>curl_easy_cleanup</name><argument_list>(<argument><expr><name>curl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<label><name>fail</name>:</label>
<expr_stmt><expr><call><name>Curl_altsvc_cleanup</name><argument_list>(<argument><expr><name>asi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>unitfail</name></expr>;</return>
</block_content>}</block></decl></decl_stmt>
<expr><name>UNITTEST_STOP</name></expr>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
