<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats_featurelocations\curl\tests\unit\unit1398.c">




















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curlcheck.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl/mprintf.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>CURLcode</name></type> <name>unit_setup</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content><return>return <expr><name>CURLE_OK</name></expr>;</return></block_content>}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>unit_stop</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content/>}</block></function>

<decl_stmt><decl><type><name>UNITTEST_START</name>

<name>int</name></type> <name>rc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>buf</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="char">'b'</literal></expr>, <expr><literal type="char">'u'</literal></expr>, <expr><literal type="char">'g'</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name> <init>= <expr><literal type="string">"bug"</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>width</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>output</name><index>[<expr><literal type="number">24</literal></expr>]</index></name></decl>;</decl_stmt>




<expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>curl_msnprintf</name><argument_list>(<argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="string">"%.*s"</literal></expr></argument>, <argument><expr><name>width</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>rc</name> <operator>==</operator> <literal type="number">3</literal></expr></argument>, <argument><expr><literal type="string">"return code should be 3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><operator>!</operator><call><name>strcmp</name><argument_list>(<argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="string">"bug"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"wrong output"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>curl_msnprintf</name><argument_list>(<argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="string">"%.*s"</literal></expr></argument>, <argument><expr><name>width</name></expr></argument>, <argument><expr><name>str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>rc</name> <operator>==</operator> <literal type="number">3</literal></expr></argument>, <argument><expr><literal type="string">"return code should be 3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><operator>!</operator><call><name>strcmp</name><argument_list>(<argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="string">"bug"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"wrong output"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>width</name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>curl_msnprintf</name><argument_list>(<argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="string">"%.*s"</literal></expr></argument>, <argument><expr><name>width</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>rc</name> <operator>==</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><literal type="string">"return code should be 2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><operator>!</operator><call><name>strcmp</name><argument_list>(<argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="string">"bu"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"wrong output"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>curl_msnprintf</name><argument_list>(<argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="string">"%.8s"</literal></expr></argument>, <argument><expr><name>str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>rc</name> <operator>==</operator> <literal type="number">3</literal></expr></argument>, <argument><expr><literal type="string">"return code should be 3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><operator>!</operator><call><name>strcmp</name><argument_list>(<argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="string">"bug"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"wrong output"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>curl_msnprintf</name><argument_list>(<argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="string">"%.3s"</literal></expr></argument>, <argument><expr><literal type="string">"0123456789"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>rc</name> <operator>==</operator> <literal type="number">3</literal></expr></argument>, <argument><expr><literal type="string">"return code should be 3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><operator>!</operator><call><name>strcmp</name><argument_list>(<argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="string">"012"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"wrong output"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>curl_msnprintf</name><argument_list>(<argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="string">"%-8s"</literal></expr></argument>, <argument><expr><name>str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>rc</name> <operator>==</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><literal type="string">"return code should be 8"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><operator>!</operator><call><name>strcmp</name><argument_list>(<argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="string">"bug "</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"wrong output"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>curl_msnprintf</name><argument_list>(<argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="string">"%8s"</literal></expr></argument>, <argument><expr><name>str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>rc</name> <operator>==</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><literal type="string">"return code should be 8"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><operator>!</operator><call><name>strcmp</name><argument_list>(<argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="string">" bu"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"wrong output"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>curl_msnprintf</name><argument_list>(<argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="string">"%d"</literal></expr></argument>, <argument><expr><literal type="number">10240</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>rc</name> <operator>==</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><literal type="string">"return code should be 4"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><operator>!</operator><call><name>strcmp</name><argument_list>(<argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="string">"102"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"wrong output"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>curl_msnprintf</name><argument_list>(<argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="string">"%8s%8s"</literal></expr></argument>, <argument><expr><name>str</name></expr></argument>, <argument><expr><name>str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>rc</name> <operator>==</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><literal type="string">"return code should be 16"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><operator>!</operator><call><name>strcmp</name><argument_list>(<argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="string">" bug bu"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"wrong output"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>curl_msnprintf</name><argument_list>(<argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="string">"%8d%8d"</literal></expr></argument>, <argument><expr><literal type="number">1234</literal></expr></argument>, <argument><expr><literal type="number">5678</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>rc</name> <operator>==</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><literal type="string">"return code should be 16"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><operator>!</operator><call><name>strcmp</name><argument_list>(<argument><expr><name>output</name></expr></argument>, <argument><expr><literal type="string">" 1234 567"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"wrong output"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr><name>UNITTEST_STOP</name></expr>
</unit>
