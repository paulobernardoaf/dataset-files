<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats_featurelocations\curl\tests\unit\unit1308.c">




















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curlcheck.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;curl/curl.h&gt;</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>CURLcode</name></type> <name>unit_setup</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name>CURLE_OK</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>unit_stop</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>size_t</name></type> <name>print_httppost_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fwrite</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><name>len</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>(</operator><operator>*</operator><operator>(</operator><name>size_t</name> <operator>*</operator><operator>)</operator> <name>arg</name><operator>)</operator> <operator>+=</operator> <name>len</name></expr>;</expr_stmt>
<return>return <expr><name>len</name></expr>;</return>
</block_content>}</block></function>

<decl_stmt><decl><type><name>UNITTEST_START</name>
<name>int</name></type> <name>rc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>curl_httppost</name></name> <modifier>*</modifier></type><name>post</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>curl_httppost</name></name> <modifier>*</modifier></type><name>last</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>total_size</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>buffer</name><index>[]</index></name> <init>= <expr><literal type="string">"test buffer"</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>curl_formadd</name><argument_list>(<argument><expr><operator>&amp;</operator><name>post</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>last</name></expr></argument>, <argument><expr><name>CURLFORM_COPYNAME</name></expr></argument>, <argument><expr><literal type="string">"name"</literal></expr></argument>,
<argument><expr><name>CURLFORM_COPYCONTENTS</name></expr></argument>, <argument><expr><literal type="string">"content"</literal></expr></argument>, <argument><expr><name>CURLFORM_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>rc</name> <operator>==</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"curl_formadd returned error"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>post</name> <operator>==</operator> <name>last</name></expr></argument>, <argument><expr><literal type="string">"post and last weren't the same"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>curl_formadd</name><argument_list>(<argument><expr><operator>&amp;</operator><name>post</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>last</name></expr></argument>, <argument><expr><name>CURLFORM_COPYNAME</name></expr></argument>, <argument><expr><literal type="string">"htmlcode"</literal></expr></argument>,
<argument><expr><name>CURLFORM_COPYCONTENTS</name></expr></argument>, <argument><expr><literal type="string">"&lt;HTML&gt;&lt;/HTML&gt;"</literal></expr></argument>,
<argument><expr><name>CURLFORM_CONTENTTYPE</name></expr></argument>, <argument><expr><literal type="string">"text/html"</literal></expr></argument>, <argument><expr><name>CURLFORM_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>rc</name> <operator>==</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"curl_formadd returned error"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>curl_formadd</name><argument_list>(<argument><expr><operator>&amp;</operator><name>post</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>last</name></expr></argument>, <argument><expr><name>CURLFORM_COPYNAME</name></expr></argument>, <argument><expr><literal type="string">"name_for_ptrcontent"</literal></expr></argument>,
<argument><expr><name>CURLFORM_PTRCONTENTS</name></expr></argument>, <argument><expr><name>buffer</name></expr></argument>, <argument><expr><name>CURLFORM_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>rc</name> <operator>==</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"curl_formadd returned error"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>curl_formget</name><argument_list>(<argument><expr><name>post</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>total_size</name></expr></argument>, <argument><expr><name>print_httppost_callback</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>rc</name> <operator>==</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"curl_formget returned error"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>total_size</name> <operator>==</operator> <literal type="number">488</literal></expr></argument>, <argument><expr><literal type="string">"curl_formget got wrong size back"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>curl_formfree</name><argument_list>(<argument><expr><name>post</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>post</name> <operator>=</operator> <name>last</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>curl_formadd</name><argument_list>(<argument><expr><operator>&amp;</operator><name>post</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>last</name></expr></argument>,
<argument><expr><name>CURLFORM_PTRNAME</name></expr></argument>, <argument><expr><literal type="string">"name of file field"</literal></expr></argument>,
<argument><expr><name>CURLFORM_FILE</name></expr></argument>, <argument><expr><literal type="string">"log/test-1308"</literal></expr></argument>,
<argument><expr><name>CURLFORM_FILENAME</name></expr></argument>, <argument><expr><literal type="string">"custom named file"</literal></expr></argument>,
<argument><expr><name>CURLFORM_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>rc</name> <operator>==</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"curl_formadd returned error"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>curl_formget</name><argument_list>(<argument><expr><name>post</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>total_size</name></expr></argument>, <argument><expr><name>print_httppost_callback</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>rc</name> <operator>==</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"curl_formget returned error"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>total_size</name> <operator>==</operator> <literal type="number">851</literal></expr></argument>, <argument><expr><literal type="string">"curl_formget got wrong size back"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>curl_formfree</name><argument_list>(<argument><expr><name>post</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr><name>UNITTEST_STOP</name></expr>
</unit>
