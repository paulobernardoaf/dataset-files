<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats_featurelocations\curl\tests\libtest\lib1538.c">




















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"test.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"memdebug.h"</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>test</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>URL</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>res</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>CURLcode</name></type> <name>easyret</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>CURLMcode</name></type> <name>multiret</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>CURLSHcode</name></type> <name>shareret</name></decl>;</decl_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>URL</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>curl_easy_strerror</name><argument_list>(<argument><expr><name>INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>curl_multi_strerror</name><argument_list>(<argument><expr><name>INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>curl_share_strerror</name><argument_list>(<argument><expr><name>INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>curl_easy_strerror</name><argument_list>(<argument><expr><operator>-</operator><name>INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>curl_multi_strerror</name><argument_list>(<argument><expr><operator>-</operator><name>INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>curl_share_strerror</name><argument_list>(<argument><expr><operator>-</operator><name>INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for<control>(<init><expr><name>easyret</name> <operator>=</operator> <name>CURLE_OK</name></expr>;</init> <condition><expr><name>easyret</name> <operator>&lt;=</operator> <name>CURL_LAST</name></expr>;</condition> <incr><expr><name>easyret</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"e%d: %s\n"</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><name>easyret</name></expr></argument>, <argument><expr><call><name>curl_easy_strerror</name><argument_list>(<argument><expr><name>easyret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
<for>for<control>(<init><expr><name>multiret</name> <operator>=</operator> <name>CURLM_CALL_MULTI_PERFORM</name></expr>;</init> <condition><expr><name>multiret</name> <operator>&lt;=</operator> <name>CURLM_LAST</name></expr>;</condition>
<incr><expr><name>multiret</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"m%d: %s\n"</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><name>multiret</name></expr></argument>, <argument><expr><call><name>curl_multi_strerror</name><argument_list>(<argument><expr><name>multiret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
<for>for<control>(<init><expr><name>shareret</name> <operator>=</operator> <name>CURLSHE_OK</name></expr>;</init> <condition><expr><name>shareret</name> <operator>&lt;=</operator> <name>CURLSHE_LAST</name></expr>;</condition> <incr><expr><name>shareret</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"s%d: %s\n"</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><name>shareret</name></expr></argument>, <argument><expr><call><name>curl_share_strerror</name><argument_list>(<argument><expr><name>shareret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>

<return>return <expr><operator>(</operator><name>int</name><operator>)</operator><name>res</name></expr>;</return>
</block_content>}</block></function>
</unit>
