<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats_featurelocations\curl\docs\examples\cacertinmem.c">

























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;openssl/err.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;openssl/ssl.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;curl/curl.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>size_t</name></type> <name>writefunction</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>nmemb</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>stream</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fwrite</name><argument_list>(<argument><expr><name>ptr</name></expr></argument>, <argument><expr><name>size</name></expr></argument>, <argument><expr><name>nmemb</name></expr></argument>, <argument><expr><operator>(</operator><name>FILE</name> <operator>*</operator><operator>)</operator><name>stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>(</operator><name>nmemb</name><operator>*</operator><name>size</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>CURLcode</name></type> <name>sslctx_function</name><parameter_list>(<parameter><decl><type><name>CURL</name> <modifier>*</modifier></type><name>curl</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>sslctx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>parm</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>CURLcode</name></type> <name>rv</name> <init>= <expr><name>CURLE_ABORTED_BY_CALLBACK</name></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name></type> <name><name>mypem</name><index>[]</index></name> <init>=
<expr><literal type="string">"-----BEGIN CERTIFICATE-----\n"</literal>
<literal type="string">"MIIH0zCCBbugAwIBAgIIXsO3pkN/pOAwDQYJKoZIhvcNAQEFBQAwQjESMBAGA1UE\n"</literal>
<literal type="string">"AwwJQUNDVlJBSVoxMRAwDgYDVQQLDAdQS0lBQ0NWMQ0wCwYDVQQKDARBQ0NWMQsw\n"</literal>
<literal type="string">"CQYDVQQGEwJFUzAeFw0xMTA1MDUwOTM3MzdaFw0zMDEyMzEwOTM3MzdaMEIxEjAQ\n"</literal>
<literal type="string">"BgNVBAMMCUFDQ1ZSQUlaMTEQMA4GA1UECwwHUEtJQUNDVjENMAsGA1UECgwEQUND\n"</literal>
<literal type="string">"VjELMAkGA1UEBhMCRVMwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCb\n"</literal>
<literal type="string">"qau/YUqXry+XZpp0X9DZlv3P4uRm7x8fRzPCRKPfmt4ftVTdFXxpNRFvu8gMjmoY\n"</literal>
<literal type="string">"HtiP2Ra8EEg2XPBjs5BaXCQ316PWywlxufEBcoSwfdtNgM3802/J+Nq2DoLSRYWo\n"</literal>
<literal type="string">"G2ioPej0RGy9ocLLA76MPhMAhN9KSMDjIgro6TenGEyxCQ0jVn8ETdkXhBilyNpA\n"</literal>
<literal type="string">"0KIV9VMJcRz/RROE5iZe+OCIHAr8Fraocwa48GOEAqDGWuzndN9wrqODJerWx5eH\n"</literal>
<literal type="string">"k6fGioozl2A3ED6XPm4pFdahD9GILBKfb6qkxkLrQaLjlUPTAYVtjrs78yM2x/47\n"</literal>
<literal type="string">"JyCpZET/LtZ1qmxNYEAZSUNUY9rizLpm5U9EelvZaoErQNV/+QEnWCzI7UiRfD+m\n"</literal>
<literal type="string">"AM/EKXMRNt6GGT6d7hmKG9Ww7Y49nCrADdg9ZuM8Db3VlFzi4qc1GwQA9j9ajepD\n"</literal>
<literal type="string">"vV+JHanBsMyZ4k0ACtrJJ1vnE5Bc5PUzolVt3OAJTS+xJlsndQAJxGJ3KQhfnlms\n"</literal>
<literal type="string">"tn6tn1QwIgPBHnFk/vk4CpYY3QIUrCPLBhwepH2NDd4nQeit2hW3sCPdK6jT2iWH\n"</literal>
<literal type="string">"7ehVRE2I9DZ+hJp4rPcOVkkO1jMl1oRQQmwgEh0q1b688nCBpHBgvgW1m54ERL5h\n"</literal>
<literal type="string">"I6zppSSMEYCUWqKiuUnSwdzRp+0xESyeGabu4VXhwOrPDYTkF7eifKXeVSUG7szA\n"</literal>
<literal type="string">"h1xA2syVP1XgNce4hL60Xc16gwFy7ofmXx2utYXGJt/mwZrpHgJHnyqobalbz+xF\n"</literal>
<literal type="string">"d3+YJ5oyXSrjhO7FmGYvliAd3djDJ9ew+f7Zfc3Qn48LFFhRny+Lwzgt3uiP1o2H\n"</literal>
<literal type="string">"pPVWQxaZLPSkVrQ0uGE3ycJYgBugl6H8WY3pEfbRD0tVNEYqi4Y7\n"</literal>
<literal type="string">"-----END CERTIFICATE-----\n"</literal>
<literal type="string">"-----BEGIN CERTIFICATE-----\n"</literal>
<literal type="string">"MIIFtTCCA52gAwIBAgIIYY3HhjsBggUwDQYJKoZIhvcNAQEFBQAwRDEWMBQGA1UE\n"</literal>
<literal type="string">"AwwNQUNFRElDT00gUm9vdDEMMAoGA1UECwwDUEtJMQ8wDQYDVQQKDAZFRElDT00x\n"</literal>
<literal type="string">"CzAJBgNVBAYTAkVTMB4XDTA4MDQxODE2MjQyMloXDTI4MDQxMzE2MjQyMlowRDEW\n"</literal>
<literal type="string">"MBQGA1UEAwwNQUNFRElDT00gUm9vdDEMMAoGA1UECwwDUEtJMQ8wDQYDVQQKDAZF\n"</literal>
<literal type="string">"RElDT00xCzAJBgNVBAYTAkVTMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKC\n"</literal>
<literal type="string">"AgEA/5KV4WgGdrQsyFhIyv2AVClVYyT/kGWbEHV7w2rbYgIB8hiGtXxaOLHkWLn7\n"</literal>
<literal type="string">"09gtn70yN78sFW2+tfQh0hOR2QetAQXW8713zl9CgQr5auODAKgrLlUTY4HKRxx7\n"</literal>
<literal type="string">"XBZXehuDYAQ6PmXDzQHe3qTWDLqO3tkE7hdWIpuPY/1NFgu3e3eM+SW10W2ZEi5P\n"</literal>
<literal type="string">"gvoFNTPhNahXwOf9jU8/kzJPeGYDdwdY6ZXIfj7QeQCM8htRM5u8lOk6e25SLTKe\n"</literal>
<literal type="string">"I6RF+7YuE7CLGLHdztUdp0J/Vb77W7tH1PwkzQSulgUV1qzOMPPKC8W64iLgpq0i\n"</literal>
<literal type="string">"5ALudBF/TP94HTXa5gI06xgSYXcGCRZj6hitoocf8seACQl1ThCojz2GuHURwCRi\n"</literal>
<literal type="string">"ipZ7SkXp7FnFvmuD5uHorLUwHv4FB4D54SMNUI8FmP8sX+g7tq3PgbUhh8oIKiMn\n"</literal>
<literal type="string">"MCArz+2UW6yyetLHKKGKC5tNSixthT8Jcjxn4tncB7rrZXtaAWPWkFtPF2Y9fwsZ\n"</literal>
<literal type="string">"o5NjEFIqnxQWWOLcpfShFosOkYuByptZ+thrkQdlVV9SH686+5DdaaVbnG0OLLb6\n"</literal>
<literal type="string">"zqylfDJKZ0DcMDQj3dcEI2bw/FWAp/tmGYI1Z2JwOV5vx+qQQEQIHriy1tvuWacN\n"</literal>
<literal type="string">"GHk0vFQYXlPKNFHtRQrmjseCNj6nOGOpMCwXEGCSn1WHElkQwg9naRHMTh5+Spqt\n"</literal>
<literal type="string">"r0CodaxWkHS4oJyleW/c6RrIaQXpuvoDs3zk4E7Czp3otkYNbn5XOmeUwssfnHdK\n"</literal>
<literal type="string">"Z05phkOTOPu220+DkdRgfks+KzgHVZhepA==\n"</literal>
<literal type="string">"-----END CERTIFICATE-----\n"</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>BIO</name> <modifier>*</modifier></type><name>cbio</name> <init>= <expr><call><name>BIO_new_mem_buf</name><argument_list>(<argument><expr><name>mypem</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>mypem</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>X509_STORE</name> <modifier>*</modifier></type><name>cts</name> <init>= <expr><call><name>SSL_CTX_get_cert_store</name><argument_list>(<argument><expr><operator>(</operator><name>SSL_CTX</name> <operator>*</operator><operator>)</operator><name>sslctx</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>STACK_OF</name><argument_list>(<argument><expr><name>X509_INFO</name></expr></argument>)</argument_list></call> <operator>*</operator><name>inf</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>curl</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>parm</name></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>cts</name> <operator>||</operator> <operator>!</operator><name>cbio</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>rv</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>inf</name> <operator>=</operator> <call><name>PEM_X509_INFO_read_bio</name><argument_list>(<argument><expr><name>cbio</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>inf</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>BIO_free</name><argument_list>(<argument><expr><name>cbio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>rv</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>sk_X509_INFO_num</name><argument_list>(<argument><expr><name>inf</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>X509_INFO</name> <modifier>*</modifier></type><name>itmp</name> <init>= <expr><call><name>sk_X509_INFO_value</name><argument_list>(<argument><expr><name>inf</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><name><name>itmp</name><operator>-&gt;</operator><name>x509</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>X509_STORE_add_cert</name><argument_list>(<argument><expr><name>cts</name></expr></argument>, <argument><expr><name><name>itmp</name><operator>-&gt;</operator><name>x509</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name><name>itmp</name><operator>-&gt;</operator><name>crl</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>X509_STORE_add_crl</name><argument_list>(<argument><expr><name>cts</name></expr></argument>, <argument><expr><name><name>itmp</name><operator>-&gt;</operator><name>crl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>

<expr_stmt><expr><call><name>sk_X509_INFO_pop_free</name><argument_list>(<argument><expr><name>inf</name></expr></argument>, <argument><expr><name>X509_INFO_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>BIO_free</name><argument_list>(<argument><expr><name>cbio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>rv</name> <operator>=</operator> <name>CURLE_OK</name></expr>;</expr_stmt>
<return>return <expr><name>rv</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>CURL</name> <modifier>*</modifier></type><name>ch</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>CURLcode</name></type> <name>rv</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>curl_global_init</name><argument_list>(<argument><expr><name>CURL_GLOBAL_ALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>ch</name> <operator>=</operator> <call><name>curl_easy_init</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>ch</name></expr></argument>, <argument><expr><name>CURLOPT_VERBOSE</name></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>ch</name></expr></argument>, <argument><expr><name>CURLOPT_HEADER</name></expr></argument>, <argument><expr><literal type="number">0L</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>ch</name></expr></argument>, <argument><expr><name>CURLOPT_NOPROGRESS</name></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>ch</name></expr></argument>, <argument><expr><name>CURLOPT_NOSIGNAL</name></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>ch</name></expr></argument>, <argument><expr><name>CURLOPT_WRITEFUNCTION</name></expr></argument>, <argument><expr><operator>*</operator><name>writefunction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>ch</name></expr></argument>, <argument><expr><name>CURLOPT_WRITEDATA</name></expr></argument>, <argument><expr><name>stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>ch</name></expr></argument>, <argument><expr><name>CURLOPT_HEADERFUNCTION</name></expr></argument>, <argument><expr><operator>*</operator><name>writefunction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>ch</name></expr></argument>, <argument><expr><name>CURLOPT_HEADERDATA</name></expr></argument>, <argument><expr><name>stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>ch</name></expr></argument>, <argument><expr><name>CURLOPT_SSLCERTTYPE</name></expr></argument>, <argument><expr><literal type="string">"PEM"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>ch</name></expr></argument>, <argument><expr><name>CURLOPT_SSL_VERIFYPEER</name></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>ch</name></expr></argument>, <argument><expr><name>CURLOPT_URL</name></expr></argument>, <argument><expr><literal type="string">"https://www.example.com/"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>ch</name></expr></argument>, <argument><expr><name>CURLOPT_CAINFO</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>ch</name></expr></argument>, <argument><expr><name>CURLOPT_CAPATH</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




<expr_stmt><expr><name>rv</name> <operator>=</operator> <call><name>curl_easy_perform</name><argument_list>(<argument><expr><name>ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>rv</name> <operator>==</operator> <name>CURLE_OK</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"*** transfer succeeded ***\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"*** transfer failed ***\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>










<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>ch</name></expr></argument>, <argument><expr><name>CURLOPT_FRESH_CONNECT</name></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>ch</name></expr></argument>, <argument><expr><name>CURLOPT_SSL_CTX_FUNCTION</name></expr></argument>, <argument><expr><operator>*</operator><name>sslctx_function</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>rv</name> <operator>=</operator> <call><name>curl_easy_perform</name><argument_list>(<argument><expr><name>ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>rv</name> <operator>==</operator> <name>CURLE_OK</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"*** transfer succeeded ***\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"*** transfer failed ***\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><call><name>curl_easy_cleanup</name><argument_list>(<argument><expr><name>ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>curl_global_cleanup</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>rv</name></expr>;</return>
</block_content>}</block></function>
</unit>
