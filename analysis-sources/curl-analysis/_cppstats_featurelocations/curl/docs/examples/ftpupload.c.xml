<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats_featurelocations\curl\docs\examples\ftpupload.c">




















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;curl/curl.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/types.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/stat.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;fcntl.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;errno.h&gt;</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;io.h&gt;</cpp:file></cpp:include>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;unistd.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LOCAL_FILE</name></cpp:macro> <cpp:value>"/tmp/uploadthis.txt"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>UPLOAD_FILE_AS</name></cpp:macro> <cpp:value>"while-uploading.txt"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REMOTE_URL</name></cpp:macro> <cpp:value>"ftp://example.com/" UPLOAD_FILE_AS</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RENAME_FILE_TO</name></cpp:macro> <cpp:value>"renamed-and-fine.txt"</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>size_t</name></type> <name>read_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>nmemb</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>stream</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>curl_off_t</name></type> <name>nread</name></decl>;</decl_stmt>



<decl_stmt><decl><type><name>size_t</name></type> <name>retcode</name> <init>= <expr><call><name>fread</name><argument_list>(<argument><expr><name>ptr</name></expr></argument>, <argument><expr><name>size</name></expr></argument>, <argument><expr><name>nmemb</name></expr></argument>, <argument><expr><name>stream</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>nread</name> <operator>=</operator> <operator>(</operator><name>curl_off_t</name><operator>)</operator><name>retcode</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"*** We read %"</literal> <name>CURL_FORMAT_CURL_OFF_T</name>
<literal type="string">" bytes from file\n"</literal></expr></argument>, <argument><expr><name>nread</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>retcode</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>CURL</name> <modifier>*</modifier></type><name>curl</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>CURLcode</name></type> <name>res</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>FILE</name> <modifier>*</modifier></type><name>hd_src</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>stat</name></name></type> <name>file_info</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>curl_off_t</name></type> <name>fsize</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>curl_slist</name></name> <modifier>*</modifier></type><name>headerlist</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name></type> <name><name>buf_1</name> <index>[]</index></name> <init>= <expr><literal type="string">"RNFR "</literal> <name>UPLOAD_FILE_AS</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name></type> <name><name>buf_2</name> <index>[]</index></name> <init>= <expr><literal type="string">"RNTO "</literal> <name>RENAME_FILE_TO</name></expr></init></decl>;</decl_stmt>


<if_stmt><if>if<condition>(<expr><call><name>stat</name><argument_list>(<argument><expr><name>LOCAL_FILE</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>file_info</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"Couldn't open '%s': %s\n"</literal></expr></argument>, <argument><expr><name>LOCAL_FILE</name></expr></argument>, <argument><expr><call><name>strerror</name><argument_list>(<argument><expr><name>errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>fsize</name> <operator>=</operator> <operator>(</operator><name>curl_off_t</name><operator>)</operator><name><name>file_info</name><operator>.</operator><name>st_size</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"Local file size: %"</literal> <name>CURL_FORMAT_CURL_OFF_T</name> <literal type="string">" bytes.\n"</literal></expr></argument>, <argument><expr><name>fsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>hd_src</name> <operator>=</operator> <call><name>fopen</name><argument_list>(<argument><expr><name>LOCAL_FILE</name></expr></argument>, <argument><expr><literal type="string">"rb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>curl_global_init</name><argument_list>(<argument><expr><name>CURL_GLOBAL_ALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>curl</name> <operator>=</operator> <call><name>curl_easy_init</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>curl</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>headerlist</name> <operator>=</operator> <call><name>curl_slist_append</name><argument_list>(<argument><expr><name>headerlist</name></expr></argument>, <argument><expr><name>buf_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>headerlist</name> <operator>=</operator> <call><name>curl_slist_append</name><argument_list>(<argument><expr><name>headerlist</name></expr></argument>, <argument><expr><name>buf_2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLOPT_READFUNCTION</name></expr></argument>, <argument><expr><name>read_callback</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLOPT_UPLOAD</name></expr></argument>, <argument><expr><literal type="number">1L</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLOPT_URL</name></expr></argument>, <argument><expr><name>REMOTE_URL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLOPT_POSTQUOTE</name></expr></argument>, <argument><expr><name>headerlist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLOPT_READDATA</name></expr></argument>, <argument><expr><name>hd_src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLOPT_INFILESIZE_LARGE</name></expr></argument>,
<argument><expr><operator>(</operator><name>curl_off_t</name><operator>)</operator><name>fsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>curl_easy_perform</name><argument_list>(<argument><expr><name>curl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>res</name> <operator>!=</operator> <name>CURLE_OK</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"curl_easy_perform() failed: %s\n"</literal></expr></argument>,
<argument><expr><call><name>curl_easy_strerror</name><argument_list>(<argument><expr><name>res</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>


<expr_stmt><expr><call><name>curl_slist_free_all</name><argument_list>(<argument><expr><name>headerlist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>curl_easy_cleanup</name><argument_list>(<argument><expr><name>curl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>fclose</name><argument_list>(<argument><expr><name>hd_src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>curl_global_cleanup</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
