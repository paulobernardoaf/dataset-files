<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats_featurelocations\curl\lib\curl_sasl.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>HEADER_CURL_SASL_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEADER_CURL_SASL_H</name></cpp:macro></cpp:define>






















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;curl/curl.h&gt;</cpp:file></cpp:include>

<struct_decl>struct <name>Curl_easy</name>;</struct_decl>
<struct_decl>struct <name>connectdata</name>;</struct_decl>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SASL_MECH_LOGIN</name></cpp:macro> <cpp:value>(1 &lt;&lt; 0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SASL_MECH_PLAIN</name></cpp:macro> <cpp:value>(1 &lt;&lt; 1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SASL_MECH_CRAM_MD5</name></cpp:macro> <cpp:value>(1 &lt;&lt; 2)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SASL_MECH_DIGEST_MD5</name></cpp:macro> <cpp:value>(1 &lt;&lt; 3)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SASL_MECH_GSSAPI</name></cpp:macro> <cpp:value>(1 &lt;&lt; 4)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SASL_MECH_EXTERNAL</name></cpp:macro> <cpp:value>(1 &lt;&lt; 5)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SASL_MECH_NTLM</name></cpp:macro> <cpp:value>(1 &lt;&lt; 6)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SASL_MECH_XOAUTH2</name></cpp:macro> <cpp:value>(1 &lt;&lt; 7)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SASL_MECH_OAUTHBEARER</name></cpp:macro> <cpp:value>(1 &lt;&lt; 8)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SASL_AUTH_NONE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SASL_AUTH_ANY</name></cpp:macro> <cpp:value>~0U</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SASL_AUTH_DEFAULT</name></cpp:macro> <cpp:value>(SASL_AUTH_ANY &amp; ~SASL_MECH_EXTERNAL)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SASL_MECH_STRING_LOGIN</name></cpp:macro> <cpp:value>"LOGIN"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SASL_MECH_STRING_PLAIN</name></cpp:macro> <cpp:value>"PLAIN"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SASL_MECH_STRING_CRAM_MD5</name></cpp:macro> <cpp:value>"CRAM-MD5"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SASL_MECH_STRING_DIGEST_MD5</name></cpp:macro> <cpp:value>"DIGEST-MD5"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SASL_MECH_STRING_GSSAPI</name></cpp:macro> <cpp:value>"GSSAPI"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SASL_MECH_STRING_EXTERNAL</name></cpp:macro> <cpp:value>"EXTERNAL"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SASL_MECH_STRING_NTLM</name></cpp:macro> <cpp:value>"NTLM"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SASL_MECH_STRING_XOAUTH2</name></cpp:macro> <cpp:value>"XOAUTH2"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SASL_MECH_STRING_OAUTHBEARER</name></cpp:macro> <cpp:value>"OAUTHBEARER"</cpp:value></cpp:define>


<typedef>typedef <type><enum>enum <block>{
<decl><name>SASL_STOP</name></decl>,
<decl><name>SASL_PLAIN</name></decl>,
<decl><name>SASL_LOGIN</name></decl>,
<decl><name>SASL_LOGIN_PASSWD</name></decl>,
<decl><name>SASL_EXTERNAL</name></decl>,
<decl><name>SASL_CRAMMD5</name></decl>,
<decl><name>SASL_DIGESTMD5</name></decl>,
<decl><name>SASL_DIGESTMD5_RESP</name></decl>,
<decl><name>SASL_NTLM</name></decl>,
<decl><name>SASL_NTLM_TYPE2MSG</name></decl>,
<decl><name>SASL_GSSAPI</name></decl>,
<decl><name>SASL_GSSAPI_TOKEN</name></decl>,
<decl><name>SASL_GSSAPI_NO_DATA</name></decl>,
<decl><name>SASL_OAUTH2</name></decl>,
<decl><name>SASL_OAUTH2_RESP</name></decl>,
<decl><name>SASL_CANCEL</name></decl>,
<decl><name>SASL_FINAL</name></decl>
}</block></enum></type> <name>saslstate</name>;</typedef>


<typedef>typedef <type><enum>enum <block>{
<decl><name>SASL_IDLE</name></decl>,
<decl><name>SASL_INPROGRESS</name></decl>,
<decl><name>SASL_DONE</name></decl>
}</block></enum></type> <name>saslprogress</name>;</typedef>


<struct>struct <name>SASLproto</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>service</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>contcode</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>finalcode</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>size_t</name></type> <name>maxirlen</name></decl>;</decl_stmt> 
<function_decl><type><name>CURLcode</name></type> (<modifier>*</modifier><name>sendauth</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>connectdata</name></name> <modifier>*</modifier></type><name>conn</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>mech</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ir</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURLcode</name></type> (<modifier>*</modifier><name>sendcont</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>connectdata</name></name> <modifier>*</modifier></type><name>conn</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>contauth</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>getmessage</name>)<parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>outptr</name></decl></parameter>)</parameter_list>;</function_decl>

}</block>;</struct>


<struct>struct <name>SASL</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>SASLproto</name></name> <modifier>*</modifier></type><name>params</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>saslstate</name></type> <name>state</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>authmechs</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>prefmech</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>authused</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>bool</name></type> <name>resetprefs</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>bool</name></type> <name>mutual_auth</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>bool</name></type> <name>force_ir</name></decl>;</decl_stmt> 
}</block>;</struct>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>sasl_mech_equal</name><parameter_list>(<parameter><type><name>line</name></type></parameter>, <parameter><type><name>wordlen</name></type></parameter>, <parameter><type><name>mech</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(wordlen == (sizeof(mech) - 1) / sizeof(char) &amp;&amp; !memcmp(line, mech, wordlen))</cpp:value></cpp:define>





<function_decl><type><name>void</name></type> <name>Curl_sasl_cleanup</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>connectdata</name></name> <modifier>*</modifier></type><name>conn</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>authused</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>unsigned</name> <name>int</name></type> <name>Curl_sasl_decode_mech</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>maxlen</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>len</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CURLcode</name></type> <name>Curl_sasl_parse_url_auth_option</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>SASL</name></name> <modifier>*</modifier></type><name>sasl</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type> <name>Curl_sasl_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>SASL</name></name> <modifier>*</modifier></type><name>sasl</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>SASLproto</name></name> <modifier>*</modifier></type><name>params</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>bool</name></type> <name>Curl_sasl_can_authenticate</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>SASL</name></name> <modifier>*</modifier></type><name>sasl</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>connectdata</name></name> <modifier>*</modifier></type><name>conn</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CURLcode</name></type> <name>Curl_sasl_start</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>SASL</name></name> <modifier>*</modifier></type><name>sasl</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>connectdata</name></name> <modifier>*</modifier></type><name>conn</name></decl></parameter>,
<parameter><decl><type><name>bool</name></type> <name>force_ir</name></decl></parameter>, <parameter><decl><type><name>saslprogress</name> <modifier>*</modifier></type><name>progress</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CURLcode</name></type> <name>Curl_sasl_continue</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>SASL</name></name> <modifier>*</modifier></type><name>sasl</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>connectdata</name></name> <modifier>*</modifier></type><name>conn</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>code</name></decl></parameter>, <parameter><decl><type><name>saslprogress</name> <modifier>*</modifier></type><name>progress</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
