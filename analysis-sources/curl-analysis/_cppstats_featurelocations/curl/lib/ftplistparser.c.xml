<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats_featurelocations\curl\lib\ftplistparser.c">




































<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl_setup.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CURL_DISABLE_FTP</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;curl/curl.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"urldata.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"fileinfo.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"llist.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"strtoofft.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ftp.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ftplistparser.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl_fnmatch.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl_memory.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"multiif.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"memdebug.h"</cpp:file></cpp:include>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FTP_BUFFER_ALLOCSIZE</name></cpp:macro> <cpp:value>160</cpp:value></cpp:define>

<typedef>typedef <type><enum>enum <block>{
<decl><name>PL_UNIX_TOTALSIZE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>PL_UNIX_FILETYPE</name></decl>,
<decl><name>PL_UNIX_PERMISSION</name></decl>,
<decl><name>PL_UNIX_HLINKS</name></decl>,
<decl><name>PL_UNIX_USER</name></decl>,
<decl><name>PL_UNIX_GROUP</name></decl>,
<decl><name>PL_UNIX_SIZE</name></decl>,
<decl><name>PL_UNIX_TIME</name></decl>,
<decl><name>PL_UNIX_FILENAME</name></decl>,
<decl><name>PL_UNIX_SYMLINK</name></decl>
}</block></enum></type> <name>pl_unix_mainstate</name>;</typedef>

<typedef>typedef <type><union>union <block>{
<enum>enum <block>{
<decl><name>PL_UNIX_TOTALSIZE_INIT</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>PL_UNIX_TOTALSIZE_READING</name></decl>
}</block> <decl><name>total_dirsize</name></decl>;</enum>

<enum>enum <block>{
<decl><name>PL_UNIX_HLINKS_PRESPACE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>PL_UNIX_HLINKS_NUMBER</name></decl>
}</block> <decl><name>hlinks</name></decl>;</enum>

<enum>enum <block>{
<decl><name>PL_UNIX_USER_PRESPACE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>PL_UNIX_USER_PARSING</name></decl>
}</block> <decl><name>user</name></decl>;</enum>

<enum>enum <block>{
<decl><name>PL_UNIX_GROUP_PRESPACE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>PL_UNIX_GROUP_NAME</name></decl>
}</block> <decl><name>group</name></decl>;</enum>

<enum>enum <block>{
<decl><name>PL_UNIX_SIZE_PRESPACE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>PL_UNIX_SIZE_NUMBER</name></decl>
}</block> <decl><name>size</name></decl>;</enum>

<enum>enum <block>{
<decl><name>PL_UNIX_TIME_PREPART1</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>PL_UNIX_TIME_PART1</name></decl>,
<decl><name>PL_UNIX_TIME_PREPART2</name></decl>,
<decl><name>PL_UNIX_TIME_PART2</name></decl>,
<decl><name>PL_UNIX_TIME_PREPART3</name></decl>,
<decl><name>PL_UNIX_TIME_PART3</name></decl>
}</block> <decl><name>time</name></decl>;</enum>

<enum>enum <block>{
<decl><name>PL_UNIX_FILENAME_PRESPACE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>PL_UNIX_FILENAME_NAME</name></decl>,
<decl><name>PL_UNIX_FILENAME_WINDOWSEOL</name></decl>
}</block> <decl><name>filename</name></decl>;</enum>

<enum>enum <block>{
<decl><name>PL_UNIX_SYMLINK_PRESPACE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>PL_UNIX_SYMLINK_NAME</name></decl>,
<decl><name>PL_UNIX_SYMLINK_PRETARGET1</name></decl>,
<decl><name>PL_UNIX_SYMLINK_PRETARGET2</name></decl>,
<decl><name>PL_UNIX_SYMLINK_PRETARGET3</name></decl>,
<decl><name>PL_UNIX_SYMLINK_PRETARGET4</name></decl>,
<decl><name>PL_UNIX_SYMLINK_TARGET</name></decl>,
<decl><name>PL_UNIX_SYMLINK_WINDOWSEOL</name></decl>
}</block> <decl><name>symlink</name></decl>;</enum>
}</block></union></type> <name>pl_unix_substate</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{
<decl><name>PL_WINNT_DATE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>PL_WINNT_TIME</name></decl>,
<decl><name>PL_WINNT_DIRORSIZE</name></decl>,
<decl><name>PL_WINNT_FILENAME</name></decl>
}</block></enum></type> <name>pl_winNT_mainstate</name>;</typedef>

<typedef>typedef <type><union>union <block>{
<enum>enum <block>{
<decl><name>PL_WINNT_TIME_PRESPACE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>PL_WINNT_TIME_TIME</name></decl>
}</block> <decl><name>time</name></decl>;</enum>
<enum>enum <block>{
<decl><name>PL_WINNT_DIRORSIZE_PRESPACE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>PL_WINNT_DIRORSIZE_CONTENT</name></decl>
}</block> <decl><name>dirorsize</name></decl>;</enum>
<enum>enum <block>{
<decl><name>PL_WINNT_FILENAME_PRESPACE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>PL_WINNT_FILENAME_CONTENT</name></decl>,
<decl><name>PL_WINNT_FILENAME_WINEOL</name></decl>
}</block> <decl><name>filename</name></decl>;</enum>
}</block></union></type> <name>pl_winNT_substate</name>;</typedef>


<struct>struct <name>ftp_parselist_data</name> <block>{
<enum>enum <block>{
<decl><name>OS_TYPE_UNKNOWN</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>OS_TYPE_UNIX</name></decl>,
<decl><name>OS_TYPE_WIN_NT</name></decl>
}</block> <decl><name>os_type</name></decl>;</enum>

<union>union <block>{
<struct>struct <block>{
<decl_stmt><decl><type><name>pl_unix_mainstate</name></type> main</decl>;</decl_stmt>
<decl_stmt><decl><type><name>pl_unix_substate</name></type> <name>sub</name></decl>;</decl_stmt>
}</block> <decl><name>UNIX</name></decl>;</struct>

<struct>struct <block>{
<decl_stmt><decl><type><name>pl_winNT_mainstate</name></type> main</decl>;</decl_stmt>
<decl_stmt><decl><type><name>pl_winNT_substate</name></type> <name>sub</name></decl>;</decl_stmt>
}</block> <decl><name>NT</name></decl>;</struct>
}</block> <decl><name>state</name></decl>;</union>

<decl_stmt><decl><type><name>CURLcode</name></type> <name>error</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>fileinfo</name></name> <modifier>*</modifier></type><name>file_data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>item_length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>item_offset</name></decl>;</decl_stmt>
<struct>struct <block>{
<decl_stmt><decl><type><name>size_t</name></type> <name>filename</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>user</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>group</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>time</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>perm</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>symlink_target</name></decl>;</decl_stmt>
}</block> <decl><name>offsets</name></decl>;</struct>
}</block>;</struct>

<function><type><name><name>struct</name> <name>ftp_parselist_data</name></name> <modifier>*</modifier></type><name>Curl_ftp_parselist_data_alloc</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>struct <name>ftp_parselist_data</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>Curl_ftp_parselist_data_free</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ftp_parselist_data</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>parserp</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>ftp_parselist_data</name></name> <modifier>*</modifier></type><name>parser</name> <init>= <expr><operator>*</operator><name>parserp</name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><name>parser</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>Curl_fileinfo_cleanup</name><argument_list>(<argument><expr><name><name>parser</name><operator>-&gt;</operator><name>file_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>parser</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>parserp</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>CURLcode</name></type> <name>Curl_ftp_parselist_geterror</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ftp_parselist_data</name></name> <modifier>*</modifier></type><name>pl_data</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>pl_data</name><operator>-&gt;</operator><name>error</name></name></expr>;</return>
</block_content>}</block></function>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FTP_LP_MALFORMATED_PERM</name></cpp:macro> <cpp:value>0x01000000</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>int</name></type> <name>ftp_pl_get_permission</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>permissions</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name><name>str</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'r'</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">8</literal></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if<condition>(<expr><name><name>str</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>!=</operator> <literal type="char">'-'</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <name>FTP_LP_MALFORMATED_PERM</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name><name>str</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'w'</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">7</literal></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if<condition>(<expr><name><name>str</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>!=</operator> <literal type="char">'-'</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <name>FTP_LP_MALFORMATED_PERM</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name><name>str</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'x'</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if<condition>(<expr><name><name>str</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'s'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">11</literal></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if<condition>(<expr><name><name>str</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'S'</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">11</literal></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if<condition>(<expr><name><name>str</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>!=</operator> <literal type="char">'-'</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <name>FTP_LP_MALFORMATED_PERM</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name><name>str</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'r'</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">5</literal></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if<condition>(<expr><name><name>str</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>!=</operator> <literal type="char">'-'</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <name>FTP_LP_MALFORMATED_PERM</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name><name>str</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'w'</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">4</literal></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if<condition>(<expr><name><name>str</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>!=</operator> <literal type="char">'-'</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <name>FTP_LP_MALFORMATED_PERM</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name><name>str</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'x'</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">3</literal></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if<condition>(<expr><name><name>str</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'s'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">10</literal></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if<condition>(<expr><name><name>str</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'S'</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">10</literal></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if<condition>(<expr><name><name>str</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>!=</operator> <literal type="char">'-'</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <name>FTP_LP_MALFORMATED_PERM</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name><name>str</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'r'</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">2</literal></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if<condition>(<expr><name><name>str</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>!=</operator> <literal type="char">'-'</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <name>FTP_LP_MALFORMATED_PERM</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name><name>str</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'w'</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if<condition>(<expr><name><name>str</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>!=</operator> <literal type="char">'-'</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <name>FTP_LP_MALFORMATED_PERM</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name><name>str</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'x'</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if<condition>(<expr><name><name>str</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'t'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">9</literal></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if<condition>(<expr><name><name>str</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'T'</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">9</literal></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if<condition>(<expr><name><name>str</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <operator>!=</operator> <literal type="char">'-'</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>permissions</name> <operator>|=</operator> <name>FTP_LP_MALFORMATED_PERM</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>permissions</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>CURLcode</name></type> <name>ftp_pl_insert_finfo</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>connectdata</name></name> <modifier>*</modifier></type><name>conn</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>fileinfo</name></name> <modifier>*</modifier></type><name>infop</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>curl_fnmatch_callback</name></type> <name>compare</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>WildcardData</name></name> <modifier>*</modifier></type><name>wc</name> <init>= <expr><operator>&amp;</operator><name><name>conn</name><operator>-&gt;</operator><name>data</name><operator>-&gt;</operator><name>wildcard</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>ftp_wc</name></name> <modifier>*</modifier></type><name>ftpwc</name> <init>= <expr><name><name>wc</name><operator>-&gt;</operator><name>protdata</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>curl_llist</name></name> <modifier>*</modifier></type><name>llist</name> <init>= <expr><operator>&amp;</operator><name><name>wc</name><operator>-&gt;</operator><name>filelist</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>ftp_parselist_data</name></name> <modifier>*</modifier></type><name>parser</name> <init>= <expr><name><name>ftpwc</name><operator>-&gt;</operator><name>parser</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>add</name> <init>= <expr><name>TRUE</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>curl_fileinfo</name></name> <modifier>*</modifier></type><name>finfo</name> <init>= <expr><operator>&amp;</operator><name><name>infop</name><operator>-&gt;</operator><name>info</name></name></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>str</name> <init>= <expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>filename</name></name> <operator>=</operator> <name>str</name> <operator>+</operator> <name><name>parser</name><operator>-&gt;</operator><name>offsets</name><operator>.</operator><name>filename</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>strings</name><operator>.</operator><name>group</name></name> <operator>=</operator> <ternary><condition><expr><name><name>parser</name><operator>-&gt;</operator><name>offsets</name><operator>.</operator><name>group</name></name></expr> ?</condition><then>
<expr><name>str</name> <operator>+</operator> <name><name>parser</name><operator>-&gt;</operator><name>offsets</name><operator>.</operator><name>group</name></name></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr>;</expr_stmt>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>strings</name><operator>.</operator><name>perm</name></name> <operator>=</operator> <ternary><condition><expr><name><name>parser</name><operator>-&gt;</operator><name>offsets</name><operator>.</operator><name>perm</name></name></expr> ?</condition><then>
<expr><name>str</name> <operator>+</operator> <name><name>parser</name><operator>-&gt;</operator><name>offsets</name><operator>.</operator><name>perm</name></name></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr>;</expr_stmt>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>strings</name><operator>.</operator><name>target</name></name> <operator>=</operator> <ternary><condition><expr><name><name>parser</name><operator>-&gt;</operator><name>offsets</name><operator>.</operator><name>symlink_target</name></name></expr> ?</condition><then>
<expr><name>str</name> <operator>+</operator> <name><name>parser</name><operator>-&gt;</operator><name>offsets</name><operator>.</operator><name>symlink_target</name></name></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr>;</expr_stmt>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>strings</name><operator>.</operator><name>time</name></name> <operator>=</operator> <name>str</name> <operator>+</operator> <name><name>parser</name><operator>-&gt;</operator><name>offsets</name><operator>.</operator><name>time</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>strings</name><operator>.</operator><name>user</name></name> <operator>=</operator> <ternary><condition><expr><name><name>parser</name><operator>-&gt;</operator><name>offsets</name><operator>.</operator><name>user</name></name></expr> ?</condition><then>
<expr><name>str</name> <operator>+</operator> <name><name>parser</name><operator>-&gt;</operator><name>offsets</name><operator>.</operator><name>user</name></name></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr>;</expr_stmt>


<expr_stmt><expr><name>compare</name> <operator>=</operator> <name><name>conn</name><operator>-&gt;</operator><name>data</name><operator>-&gt;</operator><name>set</name><operator>.</operator><name>fnmatch</name></name></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name>compare</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>compare</name> <operator>=</operator> <name>Curl_fnmatch</name></expr>;</expr_stmt></block_content></block></if></if_stmt>


<expr_stmt><expr><call><name>Curl_set_in_callback</name><argument_list>(<argument><expr><name><name>conn</name><operator>-&gt;</operator><name>data</name></name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><call><name>compare</name><argument_list>(<argument><expr><name><name>conn</name><operator>-&gt;</operator><name>data</name><operator>-&gt;</operator><name>set</name><operator>.</operator><name>fnmatch_data</name></name></expr></argument>, <argument><expr><name><name>wc</name><operator>-&gt;</operator><name>pattern</name></name></expr></argument>,
<argument><expr><name><name>finfo</name><operator>-&gt;</operator><name>filename</name></name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>(</operator><name><name>finfo</name><operator>-&gt;</operator><name>filetype</name></name> <operator>==</operator> <name>CURLFILETYPE_SYMLINK</name><operator>)</operator> <operator>&amp;&amp;</operator> <name><name>finfo</name><operator>-&gt;</operator><name>strings</name><operator>.</operator><name>target</name></name> <operator>&amp;&amp;</operator>
<operator>(</operator><call><name>strstr</name><argument_list>(<argument><expr><name><name>finfo</name><operator>-&gt;</operator><name>strings</name><operator>.</operator><name>target</name></name></expr></argument>, <argument><expr><literal type="string">" -&gt; "</literal></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>add</name> <operator>=</operator> <name>FALSE</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name>add</name> <operator>=</operator> <name>FALSE</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><call><name>Curl_set_in_callback</name><argument_list>(<argument><expr><name><name>conn</name><operator>-&gt;</operator><name>data</name></name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>add</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>Curl_llist_insert_next</name><argument_list>(<argument><expr><name>llist</name></expr></argument>, <argument><expr><name><name>llist</name><operator>-&gt;</operator><name>tail</name></name></expr></argument>, <argument><expr><name>finfo</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>infop</name><operator>-&gt;</operator><name>list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><call><name>Curl_fileinfo_cleanup</name><argument_list>(<argument><expr><name>infop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name><name>ftpwc</name><operator>-&gt;</operator><name>parser</name><operator>-&gt;</operator><name>file_data</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<return>return <expr><name>CURLE_OK</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>size_t</name></type> <name>Curl_ftp_parselist</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>nmemb</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>connptr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>bufflen</name> <init>= <expr><name>size</name><operator>*</operator><name>nmemb</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>connectdata</name></name> <modifier>*</modifier></type><name>conn</name> <init>= <expr><operator>(</operator>struct <name>connectdata</name> <operator>*</operator><operator>)</operator><name>connptr</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>ftp_wc</name></name> <modifier>*</modifier></type><name>ftpwc</name> <init>= <expr><name><name>conn</name><operator>-&gt;</operator><name>data</name><operator>-&gt;</operator><name>wildcard</name><operator>.</operator><name>protdata</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>ftp_parselist_data</name></name> <modifier>*</modifier></type><name>parser</name> <init>= <expr><name><name>ftpwc</name><operator>-&gt;</operator><name>parser</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>fileinfo</name></name> <modifier>*</modifier></type><name>infop</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>curl_fileinfo</name></name> <modifier>*</modifier></type><name>finfo</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>CURLcode</name></type> <name>result</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>retsize</name> <init>= <expr><name>bufflen</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name></expr>)</condition> <block>{<block_content> 






<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name><name>parser</name><operator>-&gt;</operator><name>os_type</name></name> <operator>==</operator> <name>OS_TYPE_UNKNOWN</name> <operator>&amp;&amp;</operator> <name>bufflen</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>os_type</name></name> <operator>=</operator> <ternary><condition><expr><operator>(</operator><name><name>buffer</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&gt;=</operator> <literal type="char">'0'</literal> <operator>&amp;&amp;</operator> <name><name>buffer</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&lt;=</operator> <literal type="char">'9'</literal><operator>)</operator></expr> ?</condition><then>
<expr><name>OS_TYPE_WIN_NT</name></expr> </then><else>: <expr><name>OS_TYPE_UNIX</name></expr></else></ternary></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<while>while<condition>(<expr><name>i</name> <operator>&lt;</operator> <name>bufflen</name></expr>)</condition> <block>{<block_content> 

<decl_stmt><decl><type><name>char</name></type> <name>c</name> <init>= <expr><name><name>buffer</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name><name>parser</name><operator>-&gt;</operator><name>file_data</name></name></expr>)</condition> <block>{<block_content> 
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>file_data</name></name> <operator>=</operator> <call><name>Curl_fileinfo_alloc</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name><name>parser</name><operator>-&gt;</operator><name>file_data</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_OUT_OF_MEMORY</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>file_data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>b_data</name></name> <operator>=</operator> <call><name>malloc</name><argument_list>(<argument><expr><name>FTP_BUFFER_ALLOCSIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name><name>parser</name><operator>-&gt;</operator><name>file_data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>b_data</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_OUT_OF_MEMORY</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>file_data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>b_size</name></name> <operator>=</operator> <name>FTP_BUFFER_ALLOCSIZE</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>infop</name> <operator>=</operator> <name><name>parser</name><operator>-&gt;</operator><name>file_data</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>finfo</name> <operator>=</operator> <operator>&amp;</operator><name><name>infop</name><operator>-&gt;</operator><name>info</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name><index>[<expr><name><name>finfo</name><operator>-&gt;</operator><name>b_used</name></name><operator>++</operator></expr>]</index></name> <operator>=</operator> <name>c</name></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name><name>finfo</name><operator>-&gt;</operator><name>b_used</name></name> <operator>&gt;=</operator> <name><name>finfo</name><operator>-&gt;</operator><name>b_size</name></name> <operator>-</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>tmp</name> <init>= <expr><call><name>realloc</name><argument_list>(<argument><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name></name></expr></argument>,
<argument><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_size</name></name> <operator>+</operator> <name>FTP_BUFFER_ALLOCSIZE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><name>tmp</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_size</name></name> <operator>+=</operator> <name>FTP_BUFFER_ALLOCSIZE</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name></name> <operator>=</operator> <name>tmp</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><call><name>Curl_fileinfo_cleanup</name><argument_list>(<argument><expr><name><name>parser</name><operator>-&gt;</operator><name>file_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>file_data</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_OUT_OF_MEMORY</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>

<switch>switch<condition>(<expr><name><name>parser</name><operator>-&gt;</operator><name>os_type</name></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>OS_TYPE_UNIX</name></expr>:</case>
<switch>switch<condition>(<expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name/></name>main</expr>)</condition> <block>{<block_content>
<case>case <expr><name>PL_UNIX_TOTALSIZE</name></expr>:</case>
<switch>switch<condition>(<expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>total_dirsize</name></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>PL_UNIX_TOTALSIZE_INIT</name></expr>:</case>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">'t'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>total_dirsize</name></name> <operator>=</operator> <name>PL_UNIX_TOTALSIZE_READING</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name><operator>++</operator></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name/></name>main <operator>=</operator> <name>PL_UNIX_FILETYPE</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_used</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<continue>continue;</continue>
</block_content>}</block></else></if_stmt>
<break>break;</break>
<case>case <expr><name>PL_UNIX_TOTALSIZE_READING</name></expr>:</case>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name><operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">'\r'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name><operator>--</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_used</name></name><operator>--</operator></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">'\n'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name><index>[<expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><call><name>strncmp</name><argument_list>(<argument><expr><literal type="string">"total "</literal></expr></argument>, <argument><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name></name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>endptr</name> <init>= <expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name></name> <operator>+</operator> <literal type="number">6</literal></expr></init></decl>;</decl_stmt>


<while>while<condition>(<expr><call><name>ISSPACE</name><argument_list>(<argument><expr><operator>*</operator><name>endptr</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>endptr</name><operator>++</operator></expr>;</expr_stmt></block_content></block></while>
<while>while<condition>(<expr><call><name>ISDIGIT</name><argument_list>(<argument><expr><operator>*</operator><name>endptr</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>endptr</name><operator>++</operator></expr>;</expr_stmt></block_content></block></while>
<if_stmt><if>if<condition>(<expr><operator>*</operator><name>endptr</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name/></name>main <operator>=</operator> <name>PL_UNIX_FILETYPE</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_used</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<case>case <expr><name>PL_UNIX_FILETYPE</name></expr>:</case>
<switch>switch<condition>(<expr><name>c</name></expr>)</condition> <block>{<block_content>
<case>case <expr><literal type="char">'-'</literal></expr>:</case>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>filetype</name></name> <operator>=</operator> <name>CURLFILETYPE_FILE</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="char">'d'</literal></expr>:</case>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>filetype</name></name> <operator>=</operator> <name>CURLFILETYPE_DIRECTORY</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="char">'l'</literal></expr>:</case>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>filetype</name></name> <operator>=</operator> <name>CURLFILETYPE_SYMLINK</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="char">'p'</literal></expr>:</case>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>filetype</name></name> <operator>=</operator> <name>CURLFILETYPE_NAMEDPIPE</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="char">'s'</literal></expr>:</case>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>filetype</name></name> <operator>=</operator> <name>CURLFILETYPE_SOCKET</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="char">'c'</literal></expr>:</case>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>filetype</name></name> <operator>=</operator> <name>CURLFILETYPE_DEVICE_CHAR</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="char">'b'</literal></expr>:</case>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>filetype</name></name> <operator>=</operator> <name>CURLFILETYPE_DEVICE_BLOCK</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="char">'D'</literal></expr>:</case>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>filetype</name></name> <operator>=</operator> <name>CURLFILETYPE_DOOR</name></expr>;</expr_stmt>
<break>break;</break>
<default>default:</default>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></switch>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name/></name>main <operator>=</operator> <name>PL_UNIX_PERMISSION</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>PL_UNIX_PERMISSION</name></expr>:</case>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name><operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>&lt;=</operator> <literal type="number">9</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><operator>!</operator><call><name>strchr</name><argument_list>(<argument><expr><literal type="string">"rwx-tTsS"</literal></expr></argument>, <argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if<condition>(<expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>==</operator> <literal type="number">10</literal></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>perm</name></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>!=</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name><index>[<expr><literal type="number">10</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt> 
<expr_stmt><expr><name>perm</name> <operator>=</operator> <call><name>ftp_pl_get_permission</name><argument_list>(<argument><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name></name> <operator>+</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>perm</name> <operator>&amp;</operator> <name>FTP_LP_MALFORMATED_PERM</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>file_data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>flags</name></name> <operator>|=</operator> <name>CURLFINFOFLAG_KNOWN_PERM</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>file_data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>perm</name></name> <operator>=</operator> <name>perm</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>offsets</name><operator>.</operator><name>perm</name></name> <operator>=</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name/></name>main <operator>=</operator> <name>PL_UNIX_HLINKS</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>hlinks</name></name> <operator>=</operator> <name>PL_UNIX_HLINKS_PRESPACE</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>PL_UNIX_HLINKS</name></expr>:</case>
<switch>switch<condition>(<expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>hlinks</name></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>PL_UNIX_HLINKS_PRESPACE</name></expr>:</case>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>!=</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>&gt;=</operator> <literal type="char">'0'</literal> <operator>&amp;&amp;</operator> <name>c</name> <operator>&lt;=</operator> <literal type="char">'9'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>=</operator> <name><name>finfo</name><operator>-&gt;</operator><name>b_used</name></name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>hlinks</name></name> <operator>=</operator> <name>PL_UNIX_HLINKS_NUMBER</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>PL_UNIX_HLINKS_NUMBER</name></expr>:</case>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>p</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>long</name> <name>int</name></type> <name>hlinks</name></decl>;</decl_stmt>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name><index>[<expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>+</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>hlinks</name> <operator>=</operator> <call><name>strtol</name><argument_list>(<argument><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name></name> <operator>+</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>p</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'\0'</literal> <operator>&amp;&amp;</operator> <name>hlinks</name> <operator>!=</operator> <name>LONG_MAX</name> <operator>&amp;&amp;</operator> <name>hlinks</name> <operator>!=</operator> <name>LONG_MIN</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>file_data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>flags</name></name> <operator>|=</operator> <name>CURLFINFOFLAG_KNOWN_HLINKCOUNT</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>file_data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>hardlinks</name></name> <operator>=</operator> <name>hlinks</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name/></name>main <operator>=</operator> <name>PL_UNIX_USER</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>user</name></name> <operator>=</operator> <name>PL_UNIX_USER_PRESPACE</name></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if<condition>(<expr><name><name>c</name> <argument_list type="generic">&lt; <argument><expr><literal type="char">'0'</literal> <operator>||</operator> <name>c</name></expr></argument> &gt;</argument_list></name> <literal type="char">'9'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<case>case <expr><name>PL_UNIX_USER</name></expr>:</case>
<switch>switch<condition>(<expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>user</name></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>PL_UNIX_USER_PRESPACE</name></expr>:</case>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>!=</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>=</operator> <name><name>finfo</name><operator>-&gt;</operator><name>b_used</name></name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>user</name></name> <operator>=</operator> <name>PL_UNIX_USER_PARSING</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>PL_UNIX_USER_PARSING</name></expr>:</case>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name><operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name><index>[<expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>+</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>offsets</name><operator>.</operator><name>user</name></name> <operator>=</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name/></name>main <operator>=</operator> <name>PL_UNIX_GROUP</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>group</name></name> <operator>=</operator> <name>PL_UNIX_GROUP_PRESPACE</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<case>case <expr><name>PL_UNIX_GROUP</name></expr>:</case>
<switch>switch<condition>(<expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>group</name></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>PL_UNIX_GROUP_PRESPACE</name></expr>:</case>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>!=</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>=</operator> <name><name>finfo</name><operator>-&gt;</operator><name>b_used</name></name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>group</name></name> <operator>=</operator> <name>PL_UNIX_GROUP_NAME</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>PL_UNIX_GROUP_NAME</name></expr>:</case>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name><operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name><index>[<expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>+</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>offsets</name><operator>.</operator><name>group</name></name> <operator>=</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name/></name>main <operator>=</operator> <name>PL_UNIX_SIZE</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>size</name></name> <operator>=</operator> <name>PL_UNIX_SIZE_PRESPACE</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<case>case <expr><name>PL_UNIX_SIZE</name></expr>:</case>
<switch>switch<condition>(<expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>size</name></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>PL_UNIX_SIZE_PRESPACE</name></expr>:</case>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>!=</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>&gt;=</operator> <literal type="char">'0'</literal> <operator>&amp;&amp;</operator> <name>c</name> <operator>&lt;=</operator> <literal type="char">'9'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>=</operator> <name><name>finfo</name><operator>-&gt;</operator><name>b_used</name></name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>size</name></name> <operator>=</operator> <name>PL_UNIX_SIZE_NUMBER</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>PL_UNIX_SIZE_NUMBER</name></expr>:</case>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name><operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>p</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>curl_off_t</name></type> <name>fsize</name></decl>;</decl_stmt>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name><index>[<expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>+</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><call><name>curlx_strtoofft</name><argument_list>(<argument><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name></name> <operator>+</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>p</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>fsize</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><name><name>p</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'\0'</literal> <operator>&amp;&amp;</operator> <name>fsize</name> <operator>!=</operator> <name>CURL_OFF_T_MAX</name> <operator>&amp;&amp;</operator>
<name>fsize</name> <operator>!=</operator> <name>CURL_OFF_T_MIN</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>file_data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>flags</name></name> <operator>|=</operator> <name>CURLFINFOFLAG_KNOWN_SIZE</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>file_data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>size</name></name> <operator>=</operator> <name>fsize</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name/></name>main <operator>=</operator> <name>PL_UNIX_TIME</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>time</name></name> <operator>=</operator> <name>PL_UNIX_TIME_PREPART1</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if<condition>(<expr><operator>!</operator><call><name>ISDIGIT</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<case>case <expr><name>PL_UNIX_TIME</name></expr>:</case>
<switch>switch<condition>(<expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>time</name></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>PL_UNIX_TIME_PREPART1</name></expr>:</case>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>!=</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><call><name>ISALNUM</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>=</operator> <name><name>finfo</name><operator>-&gt;</operator><name>b_used</name></name> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>time</name></name> <operator>=</operator> <name>PL_UNIX_TIME_PART1</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>PL_UNIX_TIME_PART1</name></expr>:</case>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name><operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>time</name></name> <operator>=</operator> <name>PL_UNIX_TIME_PREPART2</name></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if<condition>(<expr><operator>!</operator><call><name>ISALNUM</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name>c</name> <operator>!=</operator> <literal type="char">'.'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>PL_UNIX_TIME_PREPART2</name></expr>:</case>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name><operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>!=</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><call><name>ISALNUM</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>time</name></name> <operator>=</operator> <name>PL_UNIX_TIME_PART2</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>PL_UNIX_TIME_PART2</name></expr>:</case>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name><operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>time</name></name> <operator>=</operator> <name>PL_UNIX_TIME_PREPART3</name></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if<condition>(<expr><operator>!</operator><call><name>ISALNUM</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name>c</name> <operator>!=</operator> <literal type="char">'.'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>PL_UNIX_TIME_PREPART3</name></expr>:</case>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name><operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>!=</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><call><name>ISALNUM</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>time</name></name> <operator>=</operator> <name>PL_UNIX_TIME_PART3</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>PL_UNIX_TIME_PART3</name></expr>:</case>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name><operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name><index>[<expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>+</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>-</operator><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>offsets</name><operator>.</operator><name>time</name></name> <operator>=</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name></expr>;</expr_stmt>





<if_stmt><if>if<condition>(<expr><name><name>finfo</name><operator>-&gt;</operator><name>filetype</name></name> <operator>==</operator> <name>CURLFILETYPE_SYMLINK</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name/></name>main <operator>=</operator> <name>PL_UNIX_SYMLINK</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>symlink</name></name> <operator>=</operator> <name>PL_UNIX_SYMLINK_PRESPACE</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name/></name>main <operator>=</operator> <name>PL_UNIX_FILENAME</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>filename</name></name> <operator>=</operator> <name>PL_UNIX_FILENAME_PRESPACE</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if<condition>(<expr><operator>!</operator><call><name>ISALNUM</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name>c</name> <operator>!=</operator> <literal type="char">'.'</literal> <operator>&amp;&amp;</operator> <name>c</name> <operator>!=</operator> <literal type="char">':'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<case>case <expr><name>PL_UNIX_FILENAME</name></expr>:</case>
<switch>switch<condition>(<expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>filename</name></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>PL_UNIX_FILENAME_PRESPACE</name></expr>:</case>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>!=</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>=</operator> <name><name>finfo</name><operator>-&gt;</operator><name>b_used</name></name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>filename</name></name> <operator>=</operator> <name>PL_UNIX_FILENAME_NAME</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>PL_UNIX_FILENAME_NAME</name></expr>:</case>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name><operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">'\r'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>filename</name></name> <operator>=</operator> <name>PL_UNIX_FILENAME_WINDOWSEOL</name></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">'\n'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name><index>[<expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>+</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>offsets</name><operator>.</operator><name>filename</name></name> <operator>=</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name/></name>main <operator>=</operator> <name>PL_UNIX_FILETYPE</name></expr>;</expr_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>ftp_pl_insert_finfo</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>infop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>result</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>result</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>PL_UNIX_FILENAME_WINDOWSEOL</name></expr>:</case>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">'\n'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name><index>[<expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>+</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>offsets</name><operator>.</operator><name>filename</name></name> <operator>=</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name/></name>main <operator>=</operator> <name>PL_UNIX_FILETYPE</name></expr>;</expr_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>ftp_pl_insert_finfo</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>infop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>result</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>result</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></else></if_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<case>case <expr><name>PL_UNIX_SYMLINK</name></expr>:</case>
<switch>switch<condition>(<expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>symlink</name></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>PL_UNIX_SYMLINK_PRESPACE</name></expr>:</case>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>!=</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>=</operator> <name><name>finfo</name><operator>-&gt;</operator><name>b_used</name></name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>symlink</name></name> <operator>=</operator> <name>PL_UNIX_SYMLINK_NAME</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>PL_UNIX_SYMLINK_NAME</name></expr>:</case>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name><operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>symlink</name></name> <operator>=</operator> <name>PL_UNIX_SYMLINK_PRETARGET1</name></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">'\r'</literal> <operator>||</operator> <name>c</name> <operator>==</operator> <literal type="char">'\n'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>PL_UNIX_SYMLINK_PRETARGET1</name></expr>:</case>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name><operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">'-'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>symlink</name></name> <operator>=</operator> <name>PL_UNIX_SYMLINK_PRETARGET2</name></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">'\r'</literal> <operator>||</operator> <name>c</name> <operator>==</operator> <literal type="char">'\n'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>symlink</name></name> <operator>=</operator> <name>PL_UNIX_SYMLINK_NAME</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<break>break;</break>
<case>case <expr><name>PL_UNIX_SYMLINK_PRETARGET2</name></expr>:</case>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name><operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">'&gt;'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>symlink</name></name> <operator>=</operator> <name>PL_UNIX_SYMLINK_PRETARGET3</name></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">'\r'</literal> <operator>||</operator> <name>c</name> <operator>==</operator> <literal type="char">'\n'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>symlink</name></name> <operator>=</operator> <name>PL_UNIX_SYMLINK_NAME</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<break>break;</break>
<case>case <expr><name>PL_UNIX_SYMLINK_PRETARGET3</name></expr>:</case>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name><operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>symlink</name></name> <operator>=</operator> <name>PL_UNIX_SYMLINK_PRETARGET4</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name><index>[<expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>+</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>-</operator> <literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>offsets</name><operator>.</operator><name>filename</name></name> <operator>=</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">'\r'</literal> <operator>||</operator> <name>c</name> <operator>==</operator> <literal type="char">'\n'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>symlink</name></name> <operator>=</operator> <name>PL_UNIX_SYMLINK_NAME</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<break>break;</break>
<case>case <expr><name>PL_UNIX_SYMLINK_PRETARGET4</name></expr>:</case>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>!=</operator> <literal type="char">'\r'</literal> <operator>&amp;&amp;</operator> <name>c</name> <operator>!=</operator> <literal type="char">'\n'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>symlink</name></name> <operator>=</operator> <name>PL_UNIX_SYMLINK_TARGET</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>=</operator> <name><name>finfo</name><operator>-&gt;</operator><name>b_used</name></name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></else></if_stmt>
<break>break;</break>
<case>case <expr><name>PL_UNIX_SYMLINK_TARGET</name></expr>:</case>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name><operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">'\r'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name>sub</name><operator>.</operator><name>symlink</name></name> <operator>=</operator> <name>PL_UNIX_SYMLINK_WINDOWSEOL</name></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">'\n'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name><index>[<expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>+</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>offsets</name><operator>.</operator><name>symlink_target</name></name> <operator>=</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>ftp_pl_insert_finfo</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>infop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>result</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>result</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name/></name>main <operator>=</operator> <name>PL_UNIX_FILETYPE</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>PL_UNIX_SYMLINK_WINDOWSEOL</name></expr>:</case>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">'\n'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name><index>[<expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>+</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>offsets</name><operator>.</operator><name>symlink_target</name></name> <operator>=</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>ftp_pl_insert_finfo</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>infop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>result</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>result</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>UNIX</name><operator>.</operator><name/></name>main <operator>=</operator> <name>PL_UNIX_FILETYPE</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></else></if_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<case>case <expr><name>OS_TYPE_WIN_NT</name></expr>:</case>
<switch>switch<condition>(<expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>NT</name><operator>.</operator><name/></name>main</expr>)</condition> <block>{<block_content>
<case>case <expr><name>PL_WINNT_DATE</name></expr>:</case>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name><operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>&lt;</operator> <literal type="number">9</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><operator>!</operator><call><name>strchr</name><argument_list>(<argument><expr><literal type="string">"0123456789-"</literal></expr></argument>, <argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> 
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if<condition>(<expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>==</operator> <literal type="number">9</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>NT</name><operator>.</operator><name/></name>main <operator>=</operator> <name>PL_WINNT_TIME</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>NT</name><operator>.</operator><name>sub</name><operator>.</operator><name>time</name></name> <operator>=</operator> <name>PL_WINNT_TIME_PRESPACE</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></else></if_stmt>
<break>break;</break>
<case>case <expr><name>PL_WINNT_TIME</name></expr>:</case>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name><operator>++</operator></expr>;</expr_stmt>
<switch>switch<condition>(<expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>NT</name><operator>.</operator><name>sub</name><operator>.</operator><name>time</name></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>PL_WINNT_TIME_PRESPACE</name></expr>:</case>
<if_stmt><if>if<condition>(<expr><operator>!</operator><call><name>ISSPACE</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>NT</name><operator>.</operator><name>sub</name><operator>.</operator><name>time</name></name> <operator>=</operator> <name>PL_WINNT_TIME_TIME</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>PL_WINNT_TIME_TIME</name></expr>:</case>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>offsets</name><operator>.</operator><name>time</name></name> <operator>=</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name><index>[<expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>+</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>-</operator><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>NT</name><operator>.</operator><name/></name>main <operator>=</operator> <name>PL_WINNT_DIRORSIZE</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>NT</name><operator>.</operator><name>sub</name><operator>.</operator><name>dirorsize</name></name> <operator>=</operator> <name>PL_WINNT_DIRORSIZE_PRESPACE</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if<condition>(<expr><operator>!</operator><call><name>strchr</name><argument_list>(<argument><expr><literal type="string">"APM0123456789:"</literal></expr></argument>, <argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<case>case <expr><name>PL_WINNT_DIRORSIZE</name></expr>:</case>
<switch>switch<condition>(<expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>NT</name><operator>.</operator><name>sub</name><operator>.</operator><name>dirorsize</name></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>PL_WINNT_DIRORSIZE_PRESPACE</name></expr>:</case>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>!=</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>=</operator> <name><name>finfo</name><operator>-&gt;</operator><name>b_used</name></name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>NT</name><operator>.</operator><name>sub</name><operator>.</operator><name>dirorsize</name></name> <operator>=</operator> <name>PL_WINNT_DIRORSIZE_CONTENT</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>PL_WINNT_DIRORSIZE_CONTENT</name></expr>:</case>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name><index>[<expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>+</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><literal type="string">"&lt;DIR&gt;"</literal></expr></argument>, <argument><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name></name> <operator>+</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>filetype</name></name> <operator>=</operator> <name>CURLFILETYPE_DIRECTORY</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>size</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>endptr</name></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><call><name>curlx_strtoofft</name><argument_list>(<argument><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name></name> <operator>+</operator>
<name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>endptr</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>finfo</name><operator>-&gt;</operator><name>size</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>file_data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>filetype</name></name> <operator>=</operator> <name>CURLFILETYPE_FILE</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>file_data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>flags</name></name> <operator>|=</operator> <name>CURLFINFOFLAG_KNOWN_SIZE</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>NT</name><operator>.</operator><name/></name>main <operator>=</operator> <name>PL_WINNT_FILENAME</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>NT</name><operator>.</operator><name>sub</name><operator>.</operator><name>filename</name></name> <operator>=</operator> <name>PL_WINNT_FILENAME_PRESPACE</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<case>case <expr><name>PL_WINNT_FILENAME</name></expr>:</case>
<switch>switch<condition>(<expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>NT</name><operator>.</operator><name>sub</name><operator>.</operator><name>filename</name></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>PL_WINNT_FILENAME_PRESPACE</name></expr>:</case>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>!=</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name> <operator>=</operator> <name><name>finfo</name><operator>-&gt;</operator><name>b_used</name></name> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>NT</name><operator>.</operator><name>sub</name><operator>.</operator><name>filename</name></name> <operator>=</operator> <name>PL_WINNT_FILENAME_CONTENT</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>PL_WINNT_FILENAME_CONTENT</name></expr>:</case>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>item_length</name></name><operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">'\r'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>NT</name><operator>.</operator><name>sub</name><operator>.</operator><name>filename</name></name> <operator>=</operator> <name>PL_WINNT_FILENAME_WINEOL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name><index>[<expr><name><name>finfo</name><operator>-&gt;</operator><name>b_used</name></name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">'\n'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>offsets</name><operator>.</operator><name>filename</name></name> <operator>=</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>finfo</name><operator>-&gt;</operator><name>b_data</name><index>[<expr><name><name>finfo</name><operator>-&gt;</operator><name>b_used</name></name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>offsets</name><operator>.</operator><name>filename</name></name> <operator>=</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>ftp_pl_insert_finfo</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>infop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>result</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>result</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>NT</name><operator>.</operator><name/></name>main <operator>=</operator> <name>PL_WINNT_DATE</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>NT</name><operator>.</operator><name>sub</name><operator>.</operator><name>filename</name></name> <operator>=</operator> <name>PL_WINNT_FILENAME_PRESPACE</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>PL_WINNT_FILENAME_WINEOL</name></expr>:</case>
<if_stmt><if>if<condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">'\n'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>offsets</name><operator>.</operator><name>filename</name></name> <operator>=</operator> <name><name>parser</name><operator>-&gt;</operator><name>item_offset</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>ftp_pl_insert_finfo</name><argument_list>(<argument><expr><name>conn</name></expr></argument>, <argument><expr><name>infop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>result</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>result</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>NT</name><operator>.</operator><name/></name>main <operator>=</operator> <name>PL_WINNT_DATE</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>NT</name><operator>.</operator><name>sub</name><operator>.</operator><name>filename</name></name> <operator>=</operator> <name>PL_WINNT_FILENAME_PRESPACE</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>error</name></name> <operator>=</operator> <name>CURLE_FTP_BAD_FILE_LIST</name></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></else></if_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<default>default:</default>
<expr_stmt><expr><name>retsize</name> <operator>=</operator> <name>bufflen</name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<goto>goto <name>fail</name>;</goto>
</block_content>}</block></switch>

<expr_stmt><expr><name>i</name><operator>++</operator></expr>;</expr_stmt>
</block_content>}</block></while>
<return>return <expr><name>retsize</name></expr>;</return>

<label><name>fail</name>:</label>


<if_stmt><if>if<condition>(<expr><name><name>parser</name><operator>-&gt;</operator><name>file_data</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>Curl_fileinfo_cleanup</name><argument_list>(<argument><expr><name><name>parser</name><operator>-&gt;</operator><name>file_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>parser</name><operator>-&gt;</operator><name>file_data</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>retsize</name></expr>;</return>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
