<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats_featurelocations\curl\lib\hash.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>HEADER_CURL_HASH_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEADER_CURL_HASH_H</name></cpp:macro></cpp:define>






















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl_setup.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stddef.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"llist.h"</cpp:file></cpp:include>


<typedef>typedef <function_decl><type><name>size_t</name></type> (<modifier>*</modifier><name>hash_function</name>) <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>key_length</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>slots_num</name></decl></parameter>)</parameter_list>;</function_decl></typedef>




<typedef>typedef <function_decl><type><name>size_t</name></type> (<modifier>*</modifier><name>comp_function</name>) <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>key1</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>key1_len</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>key2</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>key2_len</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>curl_hash_dtor</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<struct>struct <name>curl_hash</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>curl_llist</name></name> <modifier>*</modifier></type><name>table</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>hash_function</name></type> <name>hash_func</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>comp_function</name></type> <name>comp_func</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>curl_hash_dtor</name></type> <name>dtor</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>slots</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>size</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>curl_hash_element</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>curl_llist_element</name></name></type> <name>list</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>key_len</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>key</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt> 
}</block>;</struct>

<struct>struct <name>curl_hash_iterator</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>curl_hash</name></name> <modifier>*</modifier></type><name>hash</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>slot_index</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>curl_llist_element</name></name> <modifier>*</modifier></type><name>current_element</name></decl>;</decl_stmt>
}</block>;</struct>

<function_decl><type><name>int</name></type> <name>Curl_hash_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>curl_hash</name></name> <modifier>*</modifier></type><name>h</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>slots</name></decl></parameter>,
<parameter><decl><type><name>hash_function</name></type> <name>hfunc</name></decl></parameter>,
<parameter><decl><type><name>comp_function</name></type> <name>comparator</name></decl></parameter>,
<parameter><decl><type><name>curl_hash_dtor</name></type> <name>dtor</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name> <modifier>*</modifier></type><name>Curl_hash_add</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>curl_hash</name></name> <modifier>*</modifier></type><name>h</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>key_len</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>Curl_hash_delete</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>curl_hash</name></name> <modifier>*</modifier></type><name>h</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>key_len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name> <modifier>*</modifier></type><name>Curl_hash_pick</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>curl_hash</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>key_len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>Curl_hash_apply</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>curl_hash</name></name> <modifier>*</modifier></type><name>h</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>,
<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>cb</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Curl_hash_count</name><parameter_list>(<parameter><type><name>h</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((h)-&gt;size)</cpp:value></cpp:define>
<function_decl><type><name>void</name></type> <name>Curl_hash_destroy</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>curl_hash</name></name> <modifier>*</modifier></type><name>h</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>Curl_hash_clean</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>curl_hash</name></name> <modifier>*</modifier></type><name>h</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>Curl_hash_clean_with_criterium</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>curl_hash</name></name> <modifier>*</modifier></type><name>h</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>,
<parameter><function_decl><type><name>int</name></type> (<modifier>*</modifier><name>comp</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>size_t</name></type> <name>Curl_hash_str</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>key_length</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>slots_num</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>size_t</name></type> <name>Curl_str_key_compare</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>k1</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>key1_len</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>k2</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>key2_len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>Curl_hash_start_iterate</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>curl_hash</name></name> <modifier>*</modifier></type><name>hash</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>curl_hash_iterator</name></name> <modifier>*</modifier></type><name>iter</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>struct</name> <name>curl_hash_element</name></name> <modifier>*</modifier></type>
<name>Curl_hash_next_element</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>curl_hash_iterator</name></name> <modifier>*</modifier></type><name>iter</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>Curl_hash_print</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>curl_hash</name></name> <modifier>*</modifier></type><name>h</name></decl></parameter>,
<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>func</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>


<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
