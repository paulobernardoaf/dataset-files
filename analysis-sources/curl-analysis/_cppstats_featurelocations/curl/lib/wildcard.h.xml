<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats_featurelocations\curl\lib\wildcard.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>HEADER_CURL_WILDCARD_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEADER_CURL_WILDCARD_H</name></cpp:macro></cpp:define>






















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl_setup.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CURL_DISABLE_FTP</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"llist.h"</cpp:file></cpp:include>


<typedef>typedef <type><enum>enum <block>{
<decl><name>CURLWC_CLEAR</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>CURLWC_INIT</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>CURLWC_MATCHING</name></decl>, 

<decl><name>CURLWC_DOWNLOADING</name></decl>,
<decl><name>CURLWC_CLEAN</name></decl>, 
<decl><name>CURLWC_SKIP</name></decl>, 
<decl><name>CURLWC_ERROR</name></decl>, 
<decl><name>CURLWC_DONE</name></decl> 

}</block></enum></type> <name>curl_wildcard_states</name>;</typedef>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>curl_wildcard_dtor</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>)</parameter_list>;</function_decl></typedef>


<struct>struct <name>WildcardData</name> <block>{
<decl_stmt><decl><type><name>curl_wildcard_states</name></type> <name>state</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>path</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>pattern</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name><name>struct</name> <name>curl_llist</name></name></type> <name>filelist</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>protdata</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>curl_wildcard_dtor</name></type> <name>dtor</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>customptr</name></decl>;</decl_stmt> 
}</block>;</struct>

<function_decl><type><name>CURLcode</name></type> <name>Curl_wildcard_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>WildcardData</name></name> <modifier>*</modifier></type><name>wc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>Curl_wildcard_dtor</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>WildcardData</name></name> <modifier>*</modifier></type><name>wc</name></decl></parameter>)</parameter_list>;</function_decl>

<struct_decl>struct <name>Curl_easy</name>;</struct_decl>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Curl_wildcard_dtor</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
