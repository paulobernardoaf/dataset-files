<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats_featurelocations\curl\lib\altsvc.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>HEADER_CURL_ALTSVC_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEADER_CURL_ALTSVC_H</name></cpp:macro></cpp:define>





















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl_setup.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CURL_DISABLE_HTTP</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name>defined</name><argument_list>(<argument><expr><name>USE_ALTSVC</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;curl/curl.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"llist.h"</cpp:file></cpp:include>

<enum>enum <name>alpnid</name> <block>{
<decl><name>ALPN_none</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>ALPN_h1</name> <init>= <expr><name>CURLALTSVC_H1</name></expr></init></decl>,
<decl><name>ALPN_h2</name> <init>= <expr><name>CURLALTSVC_H2</name></expr></init></decl>,
<decl><name>ALPN_h3</name> <init>= <expr><name>CURLALTSVC_H3</name></expr></init></decl>
}</block>;</enum>

<struct>struct <name>althost</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>host</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>short</name></type> <name>port</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>alpnid</name></name></type> <name>alpnid</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>altsvc</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>althost</name></name></type> <name>src</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>althost</name></name></type> <name>dst</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>time_t</name></type> <name>expires</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>persist</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>prio</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>curl_llist_element</name></name></type> <name>node</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>altsvcinfo</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>filename</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>curl_llist</name></name></type> <name>list</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>size_t</name></type> <name>num</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>long</name></type> <name>flags</name></decl>;</decl_stmt> 
}</block>;</struct>

<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>Curl_alpnid2str</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>alpnid</name></name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>struct</name> <name>altsvcinfo</name></name> <modifier>*</modifier></type><name>Curl_altsvc_init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>CURLcode</name></type> <name>Curl_altsvc_load</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>altsvcinfo</name></name> <modifier>*</modifier></type><name>asi</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>CURLcode</name></type> <name>Curl_altsvc_save</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Curl_easy</name></name> <modifier>*</modifier></type><name>data</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>altsvcinfo</name></name> <modifier>*</modifier></type><name>asi</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>file</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>CURLcode</name></type> <name>Curl_altsvc_ctrl</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>altsvcinfo</name></name> <modifier>*</modifier></type><name>asi</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>long</name></type> <name>ctrl</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>Curl_altsvc_cleanup</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>altsvcinfo</name></name> <modifier>*</modifier></type><name>altsvc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>CURLcode</name></type> <name>Curl_altsvc_parse</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Curl_easy</name></name> <modifier>*</modifier></type><name>data</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>altsvcinfo</name></name> <modifier>*</modifier></type><name>altsvc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>alpnid</name></name></type> <name>srcalpn</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>srchost</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>short</name></type> <name>srcport</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>Curl_altsvc_lookup</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>altsvcinfo</name></name> <modifier>*</modifier></type><name>asi</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>alpnid</name></name></type> <name>srcalpnid</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>srchost</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>srcport</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>altsvc</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>dstentry</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int</name></type> <name>versions</name></decl></parameter>)</parameter_list>;</function_decl> 
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Curl_altsvc_save</name><parameter_list>(<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>,<parameter><type><name>c</name></type></parameter>)</parameter_list></cpp:macro></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
