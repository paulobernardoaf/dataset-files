<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats_featurelocations\curl\lib\pingpong.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>HEADER_CURL_PINGPONG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEADER_CURL_PINGPONG_H</name></cpp:macro></cpp:define>






















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl_setup.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CURL_DISABLE_IMAP</name></expr></argument>)</argument_list></call> <operator>||</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CURL_DISABLE_FTP</name></expr></argument>)</argument_list></call> <operator>||</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CURL_DISABLE_POP3</name></expr></argument>)</argument_list></call> <operator>||</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CURL_DISABLE_SMTP</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>USE_PINGPONG</name></cpp:macro></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<struct_decl>struct <name>connectdata</name>;</struct_decl>

<typedef>typedef <type><enum>enum <block>{
<decl><name>FTPTRANSFER_BODY</name></decl>, 
<decl><name>FTPTRANSFER_INFO</name></decl>, 
<decl><name>FTPTRANSFER_NONE</name></decl>, 
<decl><name>FTPTRANSFER_LAST</name></decl> 
}</block></enum></type> <name>curl_pp_transfer</name>;</typedef>







<struct>struct <name>pingpong</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>cache</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>size_t</name></type> <name>cache_size</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>size_t</name></type> <name>nread_resp</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>linestart_resp</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>bool</name></type> <name>pending_resp</name></decl>;</decl_stmt> 


<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>sendthis</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>size_t</name></type> <name>sendleft</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>size_t</name></type> <name>sendsize</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name><name>struct</name> <name>curltime</name></name></type> <name>response</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>long</name></type> <name>response_time</name></decl>;</decl_stmt> 


<decl_stmt><decl><type><name><name>struct</name> <name>connectdata</name></name> <modifier>*</modifier></type><name>conn</name></decl>;</decl_stmt> 





<function_decl><type><name>CURLcode</name></type> (<modifier>*</modifier><name>statemach_act</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>connectdata</name></name> <modifier>*</modifier></type><name>conn</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>endofresp</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>connectdata</name></name> <modifier>*</modifier></type><name>conn</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>,
<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>code</name></decl></parameter>)</parameter_list>;</function_decl>
}</block>;</struct>







<function_decl><type><name>CURLcode</name></type> <name>Curl_pp_statemach</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>pingpong</name></name> <modifier>*</modifier></type><name>pp</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>block</name></decl></parameter>,
<parameter><decl><type><name>bool</name></type> <name>disconnecting</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type> <name>Curl_pp_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>pingpong</name></name> <modifier>*</modifier></type><name>pp</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>time_t</name></type> <name>Curl_pp_state_timeout</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>pingpong</name></name> <modifier>*</modifier></type><name>pp</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>disconnecting</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>CURLcode</name></type> <name>Curl_pp_sendf</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>pingpong</name></name> <modifier>*</modifier></type><name>pp</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>CURLcode</name></type> <name>Curl_pp_vsendf</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>pingpong</name></name> <modifier>*</modifier></type><name>pp</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>,
<parameter><decl><type><name>va_list</name></type> <name>args</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>CURLcode</name></type> <name>Curl_pp_readresp</name><parameter_list>(<parameter><decl><type><name>curl_socket_t</name></type> <name>sockfd</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>pingpong</name></name> <modifier>*</modifier></type><name>pp</name></decl></parameter>,
<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>code</name></decl></parameter>, 
<parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>size</name></decl></parameter>)</parameter_list>;</function_decl> 


<function_decl><type><name>CURLcode</name></type> <name>Curl_pp_flushsend</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>pingpong</name></name> <modifier>*</modifier></type><name>pp</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CURLcode</name></type> <name>Curl_pp_disconnect</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>pingpong</name></name> <modifier>*</modifier></type><name>pp</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>Curl_pp_getsock</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>pingpong</name></name> <modifier>*</modifier></type><name>pp</name></decl></parameter>, <parameter><decl><type><name>curl_socket_t</name> <modifier>*</modifier></type><name>socks</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>bool</name></type> <name>Curl_pp_moredata</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>pingpong</name></name> <modifier>*</modifier></type><name>pp</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
