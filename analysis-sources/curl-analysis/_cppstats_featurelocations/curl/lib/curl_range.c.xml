<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats_featurelocations\curl\lib\curl_range.c">





















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl_setup.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;curl/curl.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl_range.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"sendf.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"strtoofft.h"</cpp:file></cpp:include>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CURL_DISABLE_FTP</name></expr></argument>)</argument_list></call> <operator>||</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CURL_DISABLE_FILE</name></expr></argument>)</argument_list></call></expr></cpp:if>





<function><type><name>CURLcode</name></type> <name>Curl_range</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>connectdata</name></name> <modifier>*</modifier></type><name>conn</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>curl_off_t</name></type> <name>from</name></decl>, <decl><type ref="prev"/><name>to</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>ptr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>ptr2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>Curl_easy</name></name> <modifier>*</modifier></type><name>data</name> <init>= <expr><name><name>conn</name><operator>-&gt;</operator><name>data</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name><name>data</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>use_range</name></name> <operator>&amp;&amp;</operator> <name><name>data</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>range</name></name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>CURLofft</name></type> <name>from_t</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>CURLofft</name></type> <name>to_t</name></decl>;</decl_stmt>
<expr_stmt><expr><name>from_t</name> <operator>=</operator> <call><name>curlx_strtoofft</name><argument_list>(<argument><expr><name><name>data</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>range</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>ptr</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>from</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>from_t</name> <operator>==</operator> <name>CURL_OFFT_FLOW</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>CURLE_RANGE_ERROR</name></expr>;</return></block_content></block></if></if_stmt>
<while>while<condition>(<expr><operator>*</operator><name>ptr</name> <operator>&amp;&amp;</operator> <operator>(</operator><call><name>ISSPACE</name><argument_list>(<argument><expr><operator>*</operator><name>ptr</name></expr></argument>)</argument_list></call> <operator>||</operator> <operator>(</operator><operator>*</operator><name>ptr</name> <operator>==</operator> <literal type="char">'-'</literal><operator>)</operator><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>ptr</name><operator>++</operator></expr>;</expr_stmt></block_content></block></while>
<expr_stmt><expr><name>to_t</name> <operator>=</operator> <call><name>curlx_strtoofft</name><argument_list>(<argument><expr><name>ptr</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>ptr2</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>to</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>to_t</name> <operator>==</operator> <name>CURL_OFFT_FLOW</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>CURLE_RANGE_ERROR</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><operator>(</operator><name>to_t</name> <operator>==</operator> <name>CURL_OFFT_INVAL</name><operator>)</operator> <operator>&amp;&amp;</operator> <operator>!</operator><name>from_t</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>data</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>resume_from</name></name> <operator>=</operator> <name>from</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DEBUGF</name><argument_list>(<argument><expr><call><name>infof</name><argument_list>(<argument><expr><name>data</name></expr></argument>, <argument><expr><literal type="string">"RANGE %"</literal> <name>CURL_FORMAT_CURL_OFF_T</name> <literal type="string">" to end of file\n"</literal></expr></argument>,
<argument><expr><name>from</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if<condition>(<expr><operator>(</operator><name>from_t</name> <operator>==</operator> <name>CURL_OFFT_INVAL</name><operator>)</operator> <operator>&amp;&amp;</operator> <operator>!</operator><name>to_t</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>data</name><operator>-&gt;</operator><name>req</name><operator>.</operator><name>maxdownload</name></name> <operator>=</operator> <name>to</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>data</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>resume_from</name></name> <operator>=</operator> <operator>-</operator><name>to</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DEBUGF</name><argument_list>(<argument><expr><call><name>infof</name><argument_list>(<argument><expr><name>data</name></expr></argument>, <argument><expr><literal type="string">"RANGE the last %"</literal> <name>CURL_FORMAT_CURL_OFF_T</name> <literal type="string">" bytes\n"</literal></expr></argument>,
<argument><expr><name>to</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>

<decl_stmt><decl><type><name>curl_off_t</name></type> <name>totalsize</name></decl>;</decl_stmt>


<if_stmt><if>if<condition>(<expr><name>from</name> <operator>&gt;</operator> <name>to</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>CURLE_RANGE_ERROR</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>totalsize</name> <operator>=</operator> <name>to</name> <operator>-</operator> <name>from</name></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>totalsize</name> <operator>==</operator> <name>CURL_OFF_T_MAX</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>CURLE_RANGE_ERROR</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>data</name><operator>-&gt;</operator><name>req</name><operator>.</operator><name>maxdownload</name></name> <operator>=</operator> <name>totalsize</name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt> 
<expr_stmt><expr><name><name>data</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>resume_from</name></name> <operator>=</operator> <name>from</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DEBUGF</name><argument_list>(<argument><expr><call><name>infof</name><argument_list>(<argument><expr><name>data</name></expr></argument>, <argument><expr><literal type="string">"RANGE from %"</literal> <name>CURL_FORMAT_CURL_OFF_T</name>
<literal type="string">" getting %"</literal> <name>CURL_FORMAT_CURL_OFF_T</name> <literal type="string">" bytes\n"</literal></expr></argument>,
<argument><expr><name>from</name></expr></argument>, <argument><expr><name><name>data</name><operator>-&gt;</operator><name>req</name><operator>.</operator><name>maxdownload</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><call><name>DEBUGF</name><argument_list>(<argument><expr><call><name>infof</name><argument_list>(<argument><expr><name>data</name></expr></argument>, <argument><expr><literal type="string">"range-download from %"</literal> <name>CURL_FORMAT_CURL_OFF_T</name>
<literal type="string">" to %"</literal> <name>CURL_FORMAT_CURL_OFF_T</name> <literal type="string">", totally %"</literal>
<name>CURL_FORMAT_CURL_OFF_T</name> <literal type="string">" bytes\n"</literal></expr></argument>,
<argument><expr><name>from</name></expr></argument>, <argument><expr><name>to</name></expr></argument>, <argument><expr><name><name>data</name><operator>-&gt;</operator><name>req</name><operator>.</operator><name>maxdownload</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name><name>data</name><operator>-&gt;</operator><name>req</name><operator>.</operator><name>maxdownload</name></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
<return>return <expr><name>CURLE_OK</name></expr>;</return>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
