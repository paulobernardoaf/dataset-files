<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats_featurelocations\curl\src\tool_sdecls.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>HEADER_CURL_TOOL_SDECLS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEADER_CURL_TOOL_SDECLS_H</name></cpp:macro></cpp:define>





















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tool_setup.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>USE_METALINK</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;metalink/metalink.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 





































<struct>struct <name>OutStruct</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>filename</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>alloc_filename</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>is_cd_filename</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>s_isreg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>fopened</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>FILE</name> <modifier>*</modifier></type><name>stream</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>curl_off_t</name></type> <name>bytes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>curl_off_t</name></type> <name>init</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>USE_METALINK</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>metalink_parser_context_t</name> <modifier>*</modifier></type><name>metalink_parser</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
}</block>;</struct>












<struct>struct <name>InStruct</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>fd</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>OperationConfig</name></name> <modifier>*</modifier></type><name>config</name></decl>;</decl_stmt>
}</block>;</struct>








<struct>struct <name>getout</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>getout</name></name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>url</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>outfile</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>infile</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>flags</name></decl>;</decl_stmt> 
}</block>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GETOUT_OUTFILE</name></cpp:macro> <cpp:value>(1&lt;&lt;0)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GETOUT_URL</name></cpp:macro> <cpp:value>(1&lt;&lt;1)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GETOUT_USEREMOTE</name></cpp:macro> <cpp:value>(1&lt;&lt;2)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GETOUT_UPLOAD</name></cpp:macro> <cpp:value>(1&lt;&lt;3)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GETOUT_NOUPLOAD</name></cpp:macro> <cpp:value>(1&lt;&lt;4)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GETOUT_METALINK</name></cpp:macro> <cpp:value>(1&lt;&lt;5)</cpp:value></cpp:define> 





<typedef>typedef <type><enum>enum <block>{
<decl><name>TRACE_NONE</name></decl>, 
<decl><name>TRACE_BIN</name></decl>, 
<decl><name>TRACE_ASCII</name></decl>, 
<decl><name>TRACE_PLAIN</name></decl> 
}</block></enum></type> <name>trace</name>;</typedef>






<typedef>typedef <type><enum>enum <block>{
<decl><name>HTTPREQ_UNSPEC</name></decl>, 
<decl><name>HTTPREQ_GET</name></decl>,
<decl><name>HTTPREQ_HEAD</name></decl>,
<decl><name>HTTPREQ_MIMEPOST</name></decl>,
<decl><name>HTTPREQ_SIMPLEPOST</name></decl>
}</block></enum></type> <name>HttpReq</name>;</typedef>







<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tool_cfgable.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
