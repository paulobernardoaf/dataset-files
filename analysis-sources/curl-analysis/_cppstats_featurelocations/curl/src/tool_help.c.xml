<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats_featurelocations\curl\src\tool_help.c">




















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tool_setup.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_STRCASECMP</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name>defined</name><argument_list>(<argument><expr><name>HAVE_STRINGS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;strings.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tool_panykey.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tool_help.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tool_libinfo.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tool_version.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"memdebug.h"</cpp:file></cpp:include> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>MSDOS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>USE_WATT32</name></cpp:macro></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>









<struct>struct <name>helptxt</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>opt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>desc</name></decl>;</decl_stmt>
}</block>;</struct>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name><name>struct</name> <name>helptxt</name></name></type> <name><name>helptext</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{<expr><literal type="string">" --abstract-unix-socket &lt;path&gt;"</literal></expr>,
<expr><literal type="string">"Connect via abstract Unix domain socket"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --alt-svc &lt;file name&gt;"</literal></expr>,
<expr><literal type="string">"Enable alt-svc with this cache file"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --anyauth"</literal></expr>,
<expr><literal type="string">"Pick any authentication method"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-a, --append"</literal></expr>,
<expr><literal type="string">"Append to target file when uploading"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --basic"</literal></expr>,
<expr><literal type="string">"Use HTTP Basic Authentication"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --cacert &lt;file&gt;"</literal></expr>,
<expr><literal type="string">"CA certificate to verify peer against"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --capath &lt;dir&gt;"</literal></expr>,
<expr><literal type="string">"CA directory to verify peer against"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-E, --cert &lt;certificate[:password]&gt;"</literal></expr>,
<expr><literal type="string">"Client certificate file and password"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --cert-status"</literal></expr>,
<expr><literal type="string">"Verify the status of the server certificate"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --cert-type &lt;type&gt;"</literal></expr>,
<expr><literal type="string">"Certificate file type (DER/PEM/ENG)"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --ciphers &lt;list of ciphers&gt;"</literal></expr>,
<expr><literal type="string">"SSL ciphers to use"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --compressed"</literal></expr>,
<expr><literal type="string">"Request compressed response"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --compressed-ssh"</literal></expr>,
<expr><literal type="string">"Enable SSH compression"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-K, --config &lt;file&gt;"</literal></expr>,
<expr><literal type="string">"Read config from a file"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --connect-timeout &lt;seconds&gt;"</literal></expr>,
<expr><literal type="string">"Maximum time allowed for connection"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --connect-to &lt;HOST1:PORT1:HOST2:PORT2&gt;"</literal></expr>,
<expr><literal type="string">"Connect to host"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-C, --continue-at &lt;offset&gt;"</literal></expr>,
<expr><literal type="string">"Resumed transfer offset"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-b, --cookie &lt;data|filename&gt;"</literal></expr>,
<expr><literal type="string">"Send cookies from string/file"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-c, --cookie-jar &lt;filename&gt;"</literal></expr>,
<expr><literal type="string">"Write cookies to &lt;filename&gt; after operation"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --create-dirs"</literal></expr>,
<expr><literal type="string">"Create necessary local directory hierarchy"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --crlf"</literal></expr>,
<expr><literal type="string">"Convert LF to CRLF in upload"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --crlfile &lt;file&gt;"</literal></expr>,
<expr><literal type="string">"Get a CRL list in PEM format from the given file"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-d, --data &lt;data&gt;"</literal></expr>,
<expr><literal type="string">"HTTP POST data"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --data-ascii &lt;data&gt;"</literal></expr>,
<expr><literal type="string">"HTTP POST ASCII data"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --data-binary &lt;data&gt;"</literal></expr>,
<expr><literal type="string">"HTTP POST binary data"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --data-raw &lt;data&gt;"</literal></expr>,
<expr><literal type="string">"HTTP POST data, '@' allowed"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --data-urlencode &lt;data&gt;"</literal></expr>,
<expr><literal type="string">"HTTP POST data url encoded"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --delegation &lt;LEVEL&gt;"</literal></expr>,
<expr><literal type="string">"GSS-API delegation permission"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --digest"</literal></expr>,
<expr><literal type="string">"Use HTTP Digest Authentication"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-q, --disable"</literal></expr>,
<expr><literal type="string">"Disable .curlrc"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --disable-eprt"</literal></expr>,
<expr><literal type="string">"Inhibit using EPRT or LPRT"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --disable-epsv"</literal></expr>,
<expr><literal type="string">"Inhibit using EPSV"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --disallow-username-in-url"</literal></expr>,
<expr><literal type="string">"Disallow username in url"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --dns-interface &lt;interface&gt;"</literal></expr>,
<expr><literal type="string">"Interface to use for DNS requests"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --dns-ipv4-addr &lt;address&gt;"</literal></expr>,
<expr><literal type="string">"IPv4 address to use for DNS requests"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --dns-ipv6-addr &lt;address&gt;"</literal></expr>,
<expr><literal type="string">"IPv6 address to use for DNS requests"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --dns-servers &lt;addresses&gt;"</literal></expr>,
<expr><literal type="string">"DNS server addrs to use"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --doh-url &lt;URL&gt;"</literal></expr>,
<expr><literal type="string">"Resolve host names over DOH"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-D, --dump-header &lt;filename&gt;"</literal></expr>,
<expr><literal type="string">"Write the received headers to &lt;filename&gt;"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --egd-file &lt;file&gt;"</literal></expr>,
<expr><literal type="string">"EGD socket path for random data"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --engine &lt;name&gt;"</literal></expr>,
<expr><literal type="string">"Crypto engine to use"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --etag-save &lt;file&gt;"</literal></expr>,
<expr><literal type="string">"Get an ETag from response header and save it to a FILE"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --etag-compare &lt;file&gt;"</literal></expr>,
<expr><literal type="string">"Get an ETag from a file and send a conditional request"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --expect100-timeout &lt;seconds&gt;"</literal></expr>,
<expr><literal type="string">"How long to wait for 100-continue"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-f, --fail"</literal></expr>,
<expr><literal type="string">"Fail silently (no output at all) on HTTP errors"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --fail-early"</literal></expr>,
<expr><literal type="string">"Fail on first transfer error, do not continue"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --false-start"</literal></expr>,
<expr><literal type="string">"Enable TLS False Start"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-F, --form &lt;name=content&gt;"</literal></expr>,
<expr><literal type="string">"Specify multipart MIME data"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --form-string &lt;name=string&gt;"</literal></expr>,
<expr><literal type="string">"Specify multipart MIME data"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --ftp-account &lt;data&gt;"</literal></expr>,
<expr><literal type="string">"Account data string"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --ftp-alternative-to-user &lt;command&gt;"</literal></expr>,
<expr><literal type="string">"String to replace USER [name]"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --ftp-create-dirs"</literal></expr>,
<expr><literal type="string">"Create the remote dirs if not present"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --ftp-method &lt;method&gt;"</literal></expr>,
<expr><literal type="string">"Control CWD usage"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --ftp-pasv"</literal></expr>,
<expr><literal type="string">"Use PASV/EPSV instead of PORT"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-P, --ftp-port &lt;address&gt;"</literal></expr>,
<expr><literal type="string">"Use PORT instead of PASV"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --ftp-pret"</literal></expr>,
<expr><literal type="string">"Send PRET before PASV"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --ftp-skip-pasv-ip"</literal></expr>,
<expr><literal type="string">"Skip the IP address for PASV"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --ftp-ssl-ccc"</literal></expr>,
<expr><literal type="string">"Send CCC after authenticating"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --ftp-ssl-ccc-mode &lt;active/passive&gt;"</literal></expr>,
<expr><literal type="string">"Set CCC mode"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --ftp-ssl-control"</literal></expr>,
<expr><literal type="string">"Require SSL/TLS for FTP login, clear for transfer"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-G, --get"</literal></expr>,
<expr><literal type="string">"Put the post data in the URL and use GET"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-g, --globoff"</literal></expr>,
<expr><literal type="string">"Disable URL sequences and ranges using {} and []"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --happy-eyeballs-timeout-ms &lt;milliseconds&gt;"</literal></expr>,
<expr><literal type="string">"How long to wait in milliseconds for IPv6 before trying IPv4"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --haproxy-protocol"</literal></expr>,
<expr><literal type="string">"Send HAProxy PROXY protocol v1 header"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-I, --head"</literal></expr>,
<expr><literal type="string">"Show document info only"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-H, --header &lt;header/@file&gt;"</literal></expr>,
<expr><literal type="string">"Pass custom header(s) to server"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-h, --help"</literal></expr>,
<expr><literal type="string">"This help text"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --hostpubmd5 &lt;md5&gt;"</literal></expr>,
<expr><literal type="string">"Acceptable MD5 hash of the host public key"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --http0.9"</literal></expr>,
<expr><literal type="string">"Allow HTTP 0.9 responses"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-0, --http1.0"</literal></expr>,
<expr><literal type="string">"Use HTTP 1.0"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --http1.1"</literal></expr>,
<expr><literal type="string">"Use HTTP 1.1"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --http2"</literal></expr>,
<expr><literal type="string">"Use HTTP 2"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --http2-prior-knowledge"</literal></expr>,
<expr><literal type="string">"Use HTTP 2 without HTTP/1.1 Upgrade"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --http3"</literal></expr>,
<expr><literal type="string">"Use HTTP v3"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --ignore-content-length"</literal></expr>,
<expr><literal type="string">"Ignore the size of the remote resource"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-i, --include"</literal></expr>,
<expr><literal type="string">"Include protocol response headers in the output"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-k, --insecure"</literal></expr>,
<expr><literal type="string">"Allow insecure server connections when using SSL"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --interface &lt;name&gt;"</literal></expr>,
<expr><literal type="string">"Use network INTERFACE (or address)"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-4, --ipv4"</literal></expr>,
<expr><literal type="string">"Resolve names to IPv4 addresses"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-6, --ipv6"</literal></expr>,
<expr><literal type="string">"Resolve names to IPv6 addresses"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-j, --junk-session-cookies"</literal></expr>,
<expr><literal type="string">"Ignore session cookies read from file"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --keepalive-time &lt;seconds&gt;"</literal></expr>,
<expr><literal type="string">"Interval time for keepalive probes"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --key &lt;key&gt;"</literal></expr>,
<expr><literal type="string">"Private key file name"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --key-type &lt;type&gt;"</literal></expr>,
<expr><literal type="string">"Private key file type (DER/PEM/ENG)"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --krb &lt;level&gt;"</literal></expr>,
<expr><literal type="string">"Enable Kerberos with security &lt;level&gt;"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --libcurl &lt;file&gt;"</literal></expr>,
<expr><literal type="string">"Dump libcurl equivalent code of this command line"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --limit-rate &lt;speed&gt;"</literal></expr>,
<expr><literal type="string">"Limit transfer speed to RATE"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-l, --list-only"</literal></expr>,
<expr><literal type="string">"List only mode"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --local-port &lt;num/range&gt;"</literal></expr>,
<expr><literal type="string">"Force use of RANGE for local port numbers"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-L, --location"</literal></expr>,
<expr><literal type="string">"Follow redirects"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --location-trusted"</literal></expr>,
<expr><literal type="string">"Like --location, and send auth to other hosts"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --login-options &lt;options&gt;"</literal></expr>,
<expr><literal type="string">"Server login options"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --mail-auth &lt;address&gt;"</literal></expr>,
<expr><literal type="string">"Originator address of the original email"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --mail-from &lt;address&gt;"</literal></expr>,
<expr><literal type="string">"Mail from this address"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --mail-rcpt &lt;address&gt;"</literal></expr>,
<expr><literal type="string">"Mail to this address"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --mail-rcpt-allowfails"</literal></expr>,
<expr><literal type="string">"Allow RCPT TO command to fail for some recipients"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-M, --manual"</literal></expr>,
<expr><literal type="string">"Display the full manual"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --max-filesize &lt;bytes&gt;"</literal></expr>,
<expr><literal type="string">"Maximum file size to download"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --max-redirs &lt;num&gt;"</literal></expr>,
<expr><literal type="string">"Maximum number of redirects allowed"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-m, --max-time &lt;seconds&gt;"</literal></expr>,
<expr><literal type="string">"Maximum time allowed for the transfer"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --metalink"</literal></expr>,
<expr><literal type="string">"Process given URLs as metalink XML file"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --negotiate"</literal></expr>,
<expr><literal type="string">"Use HTTP Negotiate (SPNEGO) authentication"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-n, --netrc"</literal></expr>,
<expr><literal type="string">"Must read .netrc for user name and password"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --netrc-file &lt;filename&gt;"</literal></expr>,
<expr><literal type="string">"Specify FILE for netrc"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --netrc-optional"</literal></expr>,
<expr><literal type="string">"Use either .netrc or URL"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-:, --next"</literal></expr>,
<expr><literal type="string">"Make next URL use its separate set of options"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --no-alpn"</literal></expr>,
<expr><literal type="string">"Disable the ALPN TLS extension"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-N, --no-buffer"</literal></expr>,
<expr><literal type="string">"Disable buffering of the output stream"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --no-keepalive"</literal></expr>,
<expr><literal type="string">"Disable TCP keepalive on the connection"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --no-npn"</literal></expr>,
<expr><literal type="string">"Disable the NPN TLS extension"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --no-progress-meter"</literal></expr>,
<expr><literal type="string">"Do not show the progress meter"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --no-sessionid"</literal></expr>,
<expr><literal type="string">"Disable SSL session-ID reusing"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --noproxy &lt;no-proxy-list&gt;"</literal></expr>,
<expr><literal type="string">"List of hosts which do not use proxy"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --ntlm"</literal></expr>,
<expr><literal type="string">"Use HTTP NTLM authentication"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --ntlm-wb"</literal></expr>,
<expr><literal type="string">"Use HTTP NTLM authentication with winbind"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --oauth2-bearer &lt;token&gt;"</literal></expr>,
<expr><literal type="string">"OAuth 2 Bearer Token"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-o, --output &lt;file&gt;"</literal></expr>,
<expr><literal type="string">"Write to file instead of stdout"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-Z, --parallel"</literal></expr>,
<expr><literal type="string">"Perform transfers in parallel"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --parallel-immediate"</literal></expr>,
<expr><literal type="string">"Do not wait for multiplexing (with --parallel)"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --parallel-max"</literal></expr>,
<expr><literal type="string">"Maximum concurrency for parallel transfers"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --pass &lt;phrase&gt;"</literal></expr>,
<expr><literal type="string">"Pass phrase for the private key"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --path-as-is"</literal></expr>,
<expr><literal type="string">"Do not squash .. sequences in URL path"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --pinnedpubkey &lt;hashes&gt;"</literal></expr>,
<expr><literal type="string">"FILE/HASHES Public key to verify peer against"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --post301"</literal></expr>,
<expr><literal type="string">"Do not switch to GET after following a 301"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --post302"</literal></expr>,
<expr><literal type="string">"Do not switch to GET after following a 302"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --post303"</literal></expr>,
<expr><literal type="string">"Do not switch to GET after following a 303"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --preproxy [protocol://]host[:port]"</literal></expr>,
<expr><literal type="string">"Use this proxy first"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-#, --progress-bar"</literal></expr>,
<expr><literal type="string">"Display transfer progress as a bar"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proto &lt;protocols&gt;"</literal></expr>,
<expr><literal type="string">"Enable/disable PROTOCOLS"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proto-default &lt;protocol&gt;"</literal></expr>,
<expr><literal type="string">"Use PROTOCOL for any URL missing a scheme"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proto-redir &lt;protocols&gt;"</literal></expr>,
<expr><literal type="string">"Enable/disable PROTOCOLS on redirect"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-x, --proxy [protocol://]host[:port]"</literal></expr>,
<expr><literal type="string">"Use this proxy"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proxy-anyauth"</literal></expr>,
<expr><literal type="string">"Pick any proxy authentication method"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proxy-basic"</literal></expr>,
<expr><literal type="string">"Use Basic authentication on the proxy"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proxy-cacert &lt;file&gt;"</literal></expr>,
<expr><literal type="string">"CA certificate to verify peer against for proxy"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proxy-capath &lt;dir&gt;"</literal></expr>,
<expr><literal type="string">"CA directory to verify peer against for proxy"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proxy-cert &lt;cert[:passwd]&gt;"</literal></expr>,
<expr><literal type="string">"Set client certificate for proxy"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proxy-cert-type &lt;type&gt;"</literal></expr>,
<expr><literal type="string">"Client certificate type for HTTPS proxy"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proxy-ciphers &lt;list&gt;"</literal></expr>,
<expr><literal type="string">"SSL ciphers to use for proxy"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proxy-crlfile &lt;file&gt;"</literal></expr>,
<expr><literal type="string">"Set a CRL list for proxy"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proxy-digest"</literal></expr>,
<expr><literal type="string">"Use Digest authentication on the proxy"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proxy-header &lt;header/@file&gt;"</literal></expr>,
<expr><literal type="string">"Pass custom header(s) to proxy"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proxy-insecure"</literal></expr>,
<expr><literal type="string">"Do HTTPS proxy connections without verifying the proxy"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proxy-key &lt;key&gt;"</literal></expr>,
<expr><literal type="string">"Private key for HTTPS proxy"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proxy-key-type &lt;type&gt;"</literal></expr>,
<expr><literal type="string">"Private key file type for proxy"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proxy-negotiate"</literal></expr>,
<expr><literal type="string">"Use HTTP Negotiate (SPNEGO) authentication on the proxy"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proxy-ntlm"</literal></expr>,
<expr><literal type="string">"Use NTLM authentication on the proxy"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proxy-pass &lt;phrase&gt;"</literal></expr>,
<expr><literal type="string">"Pass phrase for the private key for HTTPS proxy"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proxy-pinnedpubkey &lt;hashes&gt;"</literal></expr>,
<expr><literal type="string">"FILE/HASHES public key to verify proxy with"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proxy-service-name &lt;name&gt;"</literal></expr>,
<expr><literal type="string">"SPNEGO proxy service name"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proxy-ssl-allow-beast"</literal></expr>,
<expr><literal type="string">"Allow security flaw for interop for HTTPS proxy"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proxy-tls13-ciphers &lt;list&gt;"</literal></expr>,
<expr><literal type="string">"TLS 1.3 ciphersuites for proxy (OpenSSL)"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proxy-tlsauthtype &lt;type&gt;"</literal></expr>,
<expr><literal type="string">"TLS authentication type for HTTPS proxy"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proxy-tlspassword &lt;string&gt;"</literal></expr>,
<expr><literal type="string">"TLS password for HTTPS proxy"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proxy-tlsuser &lt;name&gt;"</literal></expr>,
<expr><literal type="string">"TLS username for HTTPS proxy"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proxy-tlsv1"</literal></expr>,
<expr><literal type="string">"Use TLSv1 for HTTPS proxy"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-U, --proxy-user &lt;user:password&gt;"</literal></expr>,
<expr><literal type="string">"Proxy user and password"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --proxy1.0 &lt;host[:port]&gt;"</literal></expr>,
<expr><literal type="string">"Use HTTP/1.0 proxy on given port"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-p, --proxytunnel"</literal></expr>,
<expr><literal type="string">"Operate through an HTTP proxy tunnel (using CONNECT)"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --pubkey &lt;key&gt;"</literal></expr>,
<expr><literal type="string">"SSH Public key file name"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-Q, --quote"</literal></expr>,
<expr><literal type="string">"Send command(s) to server before transfer"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --random-file &lt;file&gt;"</literal></expr>,
<expr><literal type="string">"File for reading random data from"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-r, --range &lt;range&gt;"</literal></expr>,
<expr><literal type="string">"Retrieve only the bytes within RANGE"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --raw"</literal></expr>,
<expr><literal type="string">"Do HTTP \"raw\"; no transfer decoding"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-e, --referer &lt;URL&gt;"</literal></expr>,
<expr><literal type="string">"Referrer URL"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-J, --remote-header-name"</literal></expr>,
<expr><literal type="string">"Use the header-provided filename"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-O, --remote-name"</literal></expr>,
<expr><literal type="string">"Write output to a file named as the remote file"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --remote-name-all"</literal></expr>,
<expr><literal type="string">"Use the remote file name for all URLs"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-R, --remote-time"</literal></expr>,
<expr><literal type="string">"Set the remote file's time on the local output"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-X, --request &lt;command&gt;"</literal></expr>,
<expr><literal type="string">"Specify request command to use"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --request-target"</literal></expr>,
<expr><literal type="string">"Specify the target for this request"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --resolve &lt;host:port:address[,address]...&gt;"</literal></expr>,
<expr><literal type="string">"Resolve the host+port to this address"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --retry &lt;num&gt;"</literal></expr>,
<expr><literal type="string">"Retry request if transient problems occur"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --retry-connrefused"</literal></expr>,
<expr><literal type="string">"Retry on connection refused (use with --retry)"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --retry-delay &lt;seconds&gt;"</literal></expr>,
<expr><literal type="string">"Wait time between retries"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --retry-max-time &lt;seconds&gt;"</literal></expr>,
<expr><literal type="string">"Retry only within this period"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --sasl-authzid &lt;identity&gt; "</literal></expr>,
<expr><literal type="string">"Use this identity to act as during SASL PLAIN authentication"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --sasl-ir"</literal></expr>,
<expr><literal type="string">"Enable initial response in SASL authentication"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --service-name &lt;name&gt;"</literal></expr>,
<expr><literal type="string">"SPNEGO service name"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-S, --show-error"</literal></expr>,
<expr><literal type="string">"Show error even when -s is used"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-s, --silent"</literal></expr>,
<expr><literal type="string">"Silent mode"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --socks4 &lt;host[:port]&gt;"</literal></expr>,
<expr><literal type="string">"SOCKS4 proxy on given host + port"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --socks4a &lt;host[:port]&gt;"</literal></expr>,
<expr><literal type="string">"SOCKS4a proxy on given host + port"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --socks5 &lt;host[:port]&gt;"</literal></expr>,
<expr><literal type="string">"SOCKS5 proxy on given host + port"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --socks5-basic"</literal></expr>,
<expr><literal type="string">"Enable username/password auth for SOCKS5 proxies"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --socks5-gssapi"</literal></expr>,
<expr><literal type="string">"Enable GSS-API auth for SOCKS5 proxies"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --socks5-gssapi-nec"</literal></expr>,
<expr><literal type="string">"Compatibility with NEC SOCKS5 server"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --socks5-gssapi-service &lt;name&gt;"</literal></expr>,
<expr><literal type="string">"SOCKS5 proxy service name for GSS-API"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --socks5-hostname &lt;host[:port]&gt;"</literal></expr>,
<expr><literal type="string">"SOCKS5 proxy, pass host name to proxy"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-Y, --speed-limit &lt;speed&gt;"</literal></expr>,
<expr><literal type="string">"Stop transfers slower than this"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-y, --speed-time &lt;seconds&gt;"</literal></expr>,
<expr><literal type="string">"Trigger 'speed-limit' abort after this time"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --ssl"</literal></expr>,
<expr><literal type="string">"Try SSL/TLS"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --ssl-allow-beast"</literal></expr>,
<expr><literal type="string">"Allow security flaw to improve interop"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --ssl-no-revoke"</literal></expr>,
<expr><literal type="string">"Disable cert revocation checks (Schannel)"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --ssl-revoke-best-effort"</literal></expr>,
<expr><literal type="string">"Ignore revocation offline or missing revocation list errors (Schannel)"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --ssl-reqd"</literal></expr>,
<expr><literal type="string">"Require SSL/TLS"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-2, --sslv2"</literal></expr>,
<expr><literal type="string">"Use SSLv2"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-3, --sslv3"</literal></expr>,
<expr><literal type="string">"Use SSLv3"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --stderr"</literal></expr>,
<expr><literal type="string">"Where to redirect stderr"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --styled-output"</literal></expr>,
<expr><literal type="string">"Enable styled output for HTTP headers"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --suppress-connect-headers"</literal></expr>,
<expr><literal type="string">"Suppress proxy CONNECT response headers"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --tcp-fastopen"</literal></expr>,
<expr><literal type="string">"Use TCP Fast Open"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --tcp-nodelay"</literal></expr>,
<expr><literal type="string">"Use the TCP_NODELAY option"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-t, --telnet-option &lt;opt=val&gt;"</literal></expr>,
<expr><literal type="string">"Set telnet option"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --tftp-blksize &lt;value&gt;"</literal></expr>,
<expr><literal type="string">"Set TFTP BLKSIZE option"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --tftp-no-options"</literal></expr>,
<expr><literal type="string">"Do not send any TFTP options"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-z, --time-cond &lt;time&gt;"</literal></expr>,
<expr><literal type="string">"Transfer based on a time condition"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --tls-max &lt;VERSION&gt;"</literal></expr>,
<expr><literal type="string">"Set maximum allowed TLS version"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --tls13-ciphers &lt;list&gt;"</literal></expr>,
<expr><literal type="string">"TLS 1.3 ciphersuites (OpenSSL)"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --tlsauthtype &lt;type&gt;"</literal></expr>,
<expr><literal type="string">"TLS authentication type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --tlspassword"</literal></expr>,
<expr><literal type="string">"TLS password"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --tlsuser &lt;name&gt;"</literal></expr>,
<expr><literal type="string">"TLS user name"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-1, --tlsv1"</literal></expr>,
<expr><literal type="string">"Use TLSv1.0 or greater"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --tlsv1.0"</literal></expr>,
<expr><literal type="string">"Use TLSv1.0 or greater"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --tlsv1.1"</literal></expr>,
<expr><literal type="string">"Use TLSv1.1 or greater"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --tlsv1.2"</literal></expr>,
<expr><literal type="string">"Use TLSv1.2 or greater"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --tlsv1.3"</literal></expr>,
<expr><literal type="string">"Use TLSv1.3 or greater"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --tr-encoding"</literal></expr>,
<expr><literal type="string">"Request compressed transfer encoding"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --trace &lt;file&gt;"</literal></expr>,
<expr><literal type="string">"Write a debug trace to FILE"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --trace-ascii &lt;file&gt;"</literal></expr>,
<expr><literal type="string">"Like --trace, but without hex output"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --trace-time"</literal></expr>,
<expr><literal type="string">"Add time stamps to trace/verbose output"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --unix-socket &lt;path&gt;"</literal></expr>,
<expr><literal type="string">"Connect through this Unix domain socket"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-T, --upload-file &lt;file&gt;"</literal></expr>,
<expr><literal type="string">"Transfer local FILE to destination"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --url &lt;url&gt;"</literal></expr>,
<expr><literal type="string">"URL to work with"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-B, --use-ascii"</literal></expr>,
<expr><literal type="string">"Use ASCII/text transfer"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-u, --user &lt;user:password&gt;"</literal></expr>,
<expr><literal type="string">"Server user and password"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-A, --user-agent &lt;name&gt;"</literal></expr>,
<expr><literal type="string">"Send User-Agent &lt;name&gt; to server"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-v, --verbose"</literal></expr>,
<expr><literal type="string">"Make the operation more talkative"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-V, --version"</literal></expr>,
<expr><literal type="string">"Show version number and quit"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"-w, --write-out &lt;format&gt;"</literal></expr>,
<expr><literal type="string">"Use output FORMAT after completion"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">" --xattr"</literal></expr>,
<expr><literal type="string">"Store metadata in extended file attributes"</literal></expr>}</block></expr>,
<expr><block>{ <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>NETWARE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRINT_LINES_PAUSE</name></cpp:macro> <cpp:value>23</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__SYMBIAN32__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRINT_LINES_PAUSE</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<struct>struct <name>feat</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>bitmask</name></decl>;</decl_stmt>
}</block>;</struct>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name><name>struct</name> <name>feat</name></name></type> <name><name>feats</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{<expr><literal type="string">"AsynchDNS"</literal></expr>, <expr><name>CURL_VERSION_ASYNCHDNS</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"Debug"</literal></expr>, <expr><name>CURL_VERSION_DEBUG</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"TrackMemory"</literal></expr>, <expr><name>CURL_VERSION_CURLDEBUG</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"IDN"</literal></expr>, <expr><name>CURL_VERSION_IDN</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"IPv6"</literal></expr>, <expr><name>CURL_VERSION_IPV6</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"Largefile"</literal></expr>, <expr><name>CURL_VERSION_LARGEFILE</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"SSPI"</literal></expr>, <expr><name>CURL_VERSION_SSPI</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"GSS-API"</literal></expr>, <expr><name>CURL_VERSION_GSSAPI</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"Kerberos"</literal></expr>, <expr><name>CURL_VERSION_KERBEROS5</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"SPNEGO"</literal></expr>, <expr><name>CURL_VERSION_SPNEGO</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"NTLM"</literal></expr>, <expr><name>CURL_VERSION_NTLM</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"NTLM_WB"</literal></expr>, <expr><name>CURL_VERSION_NTLM_WB</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"SSL"</literal></expr>, <expr><name>CURL_VERSION_SSL</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"libz"</literal></expr>, <expr><name>CURL_VERSION_LIBZ</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"brotli"</literal></expr>, <expr><name>CURL_VERSION_BROTLI</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"CharConv"</literal></expr>, <expr><name>CURL_VERSION_CONV</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"TLS-SRP"</literal></expr>, <expr><name>CURL_VERSION_TLSAUTH_SRP</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"HTTP2"</literal></expr>, <expr><name>CURL_VERSION_HTTP2</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"HTTP3"</literal></expr>, <expr><name>CURL_VERSION_HTTP3</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"UnixSockets"</literal></expr>, <expr><name>CURL_VERSION_UNIX_SOCKETS</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"HTTPS-proxy"</literal></expr>, <expr><name>CURL_VERSION_HTTPS_PROXY</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"MultiSSL"</literal></expr>, <expr><name>CURL_VERSION_MULTI_SSL</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"PSL"</literal></expr>, <expr><name>CURL_VERSION_PSL</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"alt-svc"</literal></expr>, <expr><name>CURL_VERSION_ALTSVC</name></expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<function><type><name>void</name></type> <name>tool_help</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>puts</name><argument_list>(<argument><expr><literal type="string">"Usage: curl [options...] &lt;url&gt;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name><name>helptext</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>opt</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">" %-19s %s\n"</literal></expr></argument>, <argument><expr><name><name>helptext</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>opt</name></expr></argument>, <argument><expr><name><name>helptext</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>PRINT_LINES_PAUSE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<if_stmt><if>if<condition>(<expr><name>i</name> <operator>&amp;&amp;</operator> <operator>(</operator><operator>(</operator><name>i</name> <operator>%</operator> <name>PRINT_LINES_PAUSE</name><operator>)</operator> <operator>==</operator> <literal type="number">0</literal><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>tool_pressanykey</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type>
<name>featcomp</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>p1</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>p2</name></decl></parameter>)</parameter_list>
<block>{<block_content>



<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_STRCASECMP</name></expr></argument>)</argument_list></call></expr></cpp:if>
<return>return <expr><call><name>strcasecmp</name><argument_list>(<argument><expr><operator>*</operator> <operator>(</operator><name>char</name> <operator>*</operator> <specifier>const</specifier> <operator>*</operator><operator>)</operator> <name>p1</name></expr></argument>, <argument><expr><operator>*</operator> <operator>(</operator><name>char</name> <operator>*</operator> <specifier>const</specifier> <operator>*</operator><operator>)</operator> <name>p2</name></expr></argument>)</argument_list></call></expr>;</return>
<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_STRCMPI</name></expr></argument>)</argument_list></call></expr></cpp:elif>
<return>return <expr><call><name>strcmpi</name><argument_list>(<argument><expr><operator>*</operator> <operator>(</operator><name>char</name> <operator>*</operator> <specifier>const</specifier> <operator>*</operator><operator>)</operator> <name>p1</name></expr></argument>, <argument><expr><operator>*</operator> <operator>(</operator><name>char</name> <operator>*</operator> <specifier>const</specifier> <operator>*</operator><operator>)</operator> <name>p2</name></expr></argument>)</argument_list></call></expr>;</return>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<return>return <expr><call><name>strcmp</name><argument_list>(<argument><expr><operator>*</operator> <operator>(</operator><name>char</name> <operator>*</operator> <specifier>const</specifier> <operator>*</operator><operator>)</operator> <name>p1</name></expr></argument>, <argument><expr><operator>*</operator> <operator>(</operator><name>char</name> <operator>*</operator> <specifier>const</specifier> <operator>*</operator><operator>)</operator> <name>p2</name></expr></argument>)</argument_list></call></expr>;</return>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>tool_version_info</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier> <modifier>*</modifier></type><name>proto</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><name>CURL_ID</name> <literal type="string">"%s\n"</literal></expr></argument>, <argument><expr><call><name>curl_version</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>CURL_PATCHSTAMP</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"Release-Date: %s, security patched: %s\n"</literal></expr></argument>,
<argument><expr><name>LIBCURL_TIMESTAMP</name></expr></argument>, <argument><expr><name>CURL_PATCHSTAMP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"Release-Date: %s\n"</literal></expr></argument>, <argument><expr><name>LIBCURL_TIMESTAMP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<if_stmt><if>if<condition>(<expr><name><name>curlinfo</name><operator>-&gt;</operator><name>protocols</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"Protocols: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for<control>(<init><expr><name>proto</name> <operator>=</operator> <name><name>curlinfo</name><operator>-&gt;</operator><name>protocols</name></name></expr>;</init> <condition><expr><operator>*</operator><name>proto</name></expr>;</condition> <incr><expr><operator>++</operator><name>proto</name></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%s "</literal></expr></argument>, <argument><expr><operator>*</operator><name>proto</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>puts</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
</block_content>}</block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name><name>curlinfo</name><operator>-&gt;</operator><name>features</name></name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name><name>featp</name><index>[ <expr><sizeof>sizeof<argument_list>(<argument><expr><name>feats</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>feats</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>numfeat</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"Features:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>feats</name></expr></argument>)</argument_list></sizeof><operator>/</operator><sizeof>sizeof<argument_list>(<argument><expr><name><name>feats</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><name><name>curlinfo</name><operator>-&gt;</operator><name>features</name></name> <operator>&amp;</operator> <name><name>feats</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>bitmask</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>featp</name><index>[<expr><name>numfeat</name><operator>++</operator></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><name><name>feats</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>name</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></for>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>USE_METALINK</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><name><name>featp</name><index>[<expr><name>numfeat</name><operator>++</operator></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="string">"Metalink"</literal></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr_stmt><expr><call><name>qsort</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>featp</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name>numfeat</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>char</name> <operator>*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>featcomp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;</operator> <name>numfeat</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">" %s"</literal></expr></argument>, <argument><expr><name><name>featp</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<expr_stmt><expr><call><name>puts</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
</block_content>}</block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name>CURL_VERSION</name></expr></argument>, <argument><expr><name><name>curlinfo</name><operator>-&gt;</operator><name>version</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"WARNING: curl and libcurl versions do not match. "</literal>
<literal type="string">"Functionality may be affected.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>tool_list_engines</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>CURL</name> <modifier>*</modifier></type><name>curl</name> <init>= <expr><call><name>curl_easy_init</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>curl_slist</name></name> <modifier>*</modifier></type><name>engines</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>


<expr_stmt><expr><call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_SSL_ENGINES</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>engines</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>puts</name><argument_list>(<argument><expr><literal type="string">"Build-time engines:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>engines</name></expr>)</condition> <block>{<block_content>
<for>for<control>(<init>;</init> <condition><expr><name>engines</name></expr>;</condition> <incr><expr><name>engines</name> <operator>=</operator> <name><name>engines</name><operator>-&gt;</operator><name>next</name></name></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">" %s\n"</literal></expr></argument>, <argument><expr><name><name>engines</name><operator>-&gt;</operator><name>data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><call><name>puts</name><argument_list>(<argument><expr><literal type="string">" &lt;none&gt;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>


<expr_stmt><expr><call><name>curl_slist_free_all</name><argument_list>(<argument><expr><name>engines</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>curl_easy_cleanup</name><argument_list>(<argument><expr><name>curl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
