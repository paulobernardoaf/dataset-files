<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats\curl\include\curl\multi.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>BUILDING_LIBCURL</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>CURL_STRICTER</name></expr></argument>)</argument_list></call></expr></cpp:if>

<typedef>typedef <type><name><name>struct</name> <name>Curl_multi</name></name></type> <name>CURLM</name>;</typedef>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<typedef>typedef <type><name>void</name></type> <name>CURLM</name>;</typedef>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><enum>enum <block>{

<decl><name>CURLM_CALL_MULTI_PERFORM</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>, 

<decl><name>CURLM_OK</name></decl>,

<decl><name>CURLM_BAD_HANDLE</name></decl>, 

<decl><name>CURLM_BAD_EASY_HANDLE</name></decl>, 

<decl><name>CURLM_OUT_OF_MEMORY</name></decl>, 

<decl><name>CURLM_INTERNAL_ERROR</name></decl>, 

<decl><name>CURLM_BAD_SOCKET</name></decl>, 

<decl><name>CURLM_UNKNOWN_OPTION</name></decl>, 

<decl><name>CURLM_ADDED_ALREADY</name></decl>, 

<decl><name>CURLM_RECURSIVE_API_CALL</name></decl>, 

<decl><name>CURLM_WAKEUP_FAILURE</name></decl>, 

<decl><name>CURLM_BAD_FUNCTION_ARGUMENT</name></decl>, 

<decl><name>CURLM_LAST</name></decl>

}</block></enum></type> <name>CURLMcode</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURLM_CALL_MULTI_SOCKET</name></cpp:macro> <cpp:value>CURLM_CALL_MULTI_PERFORM</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURLPIPE_NOTHING</name></cpp:macro> <cpp:value>0L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURLPIPE_HTTP1</name></cpp:macro> <cpp:value>1L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURLPIPE_MULTIPLEX</name></cpp:macro> <cpp:value>2L</cpp:value></cpp:define>

<typedef>typedef <type><enum>enum <block>{

<decl><name>CURLMSG_NONE</name></decl>, 

<decl><name>CURLMSG_DONE</name></decl>, 

<decl><name>CURLMSG_LAST</name></decl> 

}</block></enum></type> <name>CURLMSG</name>;</typedef>

<struct>struct <name>CURLMsg</name> <block>{

<decl_stmt><decl><type><name>CURLMSG</name></type> <name>msg</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>CURL</name> <modifier>*</modifier></type><name>easy_handle</name></decl>;</decl_stmt> 

<union>union <block>{

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>whatever</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>CURLcode</name></type> <name>result</name></decl>;</decl_stmt> 

}</block> <decl><name>data</name></decl>;</union>

}</block>;</struct>

<typedef>typedef <type><name><name>struct</name> <name>CURLMsg</name></name></type> <name>CURLMsg</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURL_WAIT_POLLIN</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURL_WAIT_POLLPRI</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURL_WAIT_POLLOUT</name></cpp:macro> <cpp:value>0x0004</cpp:value></cpp:define>

<struct>struct <name>curl_waitfd</name> <block>{

<decl_stmt><decl><type><name>curl_socket_t</name></type> <name>fd</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>short</name></type> <name>events</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>short</name></type> <name>revents</name></decl>;</decl_stmt> 

}</block>;</struct>

<function_decl><type><name>CURL_EXTERN</name> <name>CURLM</name> <modifier>*</modifier></type><name>curl_multi_init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURL_EXTERN</name> <name>CURLMcode</name></type> <name>curl_multi_add_handle</name><parameter_list>(<parameter><decl><type><name>CURLM</name> <modifier>*</modifier></type><name>multi_handle</name></decl></parameter>,

<parameter><decl><type><name>CURL</name> <modifier>*</modifier></type><name>curl_handle</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURL_EXTERN</name> <name>CURLMcode</name></type> <name>curl_multi_remove_handle</name><parameter_list>(<parameter><decl><type><name>CURLM</name> <modifier>*</modifier></type><name>multi_handle</name></decl></parameter>,

<parameter><decl><type><name>CURL</name> <modifier>*</modifier></type><name>curl_handle</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURL_EXTERN</name> <name>CURLMcode</name></type> <name>curl_multi_fdset</name><parameter_list>(<parameter><decl><type><name>CURLM</name> <modifier>*</modifier></type><name>multi_handle</name></decl></parameter>,

<parameter><decl><type><name>fd_set</name> <modifier>*</modifier></type><name>read_fd_set</name></decl></parameter>,

<parameter><decl><type><name>fd_set</name> <modifier>*</modifier></type><name>write_fd_set</name></decl></parameter>,

<parameter><decl><type><name>fd_set</name> <modifier>*</modifier></type><name>exc_fd_set</name></decl></parameter>,

<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>max_fd</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURL_EXTERN</name> <name>CURLMcode</name></type> <name>curl_multi_wait</name><parameter_list>(<parameter><decl><type><name>CURLM</name> <modifier>*</modifier></type><name>multi_handle</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>curl_waitfd</name></name></type> <name><name>extra_fds</name><index>[]</index></name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>extra_nfds</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>timeout_ms</name></decl></parameter>,

<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>ret</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURL_EXTERN</name> <name>CURLMcode</name></type> <name>curl_multi_poll</name><parameter_list>(<parameter><decl><type><name>CURLM</name> <modifier>*</modifier></type><name>multi_handle</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>curl_waitfd</name></name></type> <name><name>extra_fds</name><index>[]</index></name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>extra_nfds</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>timeout_ms</name></decl></parameter>,

<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>ret</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURL_EXTERN</name> <name>CURLMcode</name></type> <name>curl_multi_wakeup</name><parameter_list>(<parameter><decl><type><name>CURLM</name> <modifier>*</modifier></type><name>multi_handle</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURL_EXTERN</name> <name>CURLMcode</name></type> <name>curl_multi_perform</name><parameter_list>(<parameter><decl><type><name>CURLM</name> <modifier>*</modifier></type><name>multi_handle</name></decl></parameter>,

<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>running_handles</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURL_EXTERN</name> <name>CURLMcode</name></type> <name>curl_multi_cleanup</name><parameter_list>(<parameter><decl><type><name>CURLM</name> <modifier>*</modifier></type><name>multi_handle</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURL_EXTERN</name> <name>CURLMsg</name> <modifier>*</modifier></type><name>curl_multi_info_read</name><parameter_list>(<parameter><decl><type><name>CURLM</name> <modifier>*</modifier></type><name>multi_handle</name></decl></parameter>,

<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>msgs_in_queue</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURL_EXTERN</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>curl_multi_strerror</name><parameter_list>(<parameter><decl><type><name>CURLMcode</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURL_POLL_NONE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURL_POLL_IN</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURL_POLL_OUT</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURL_POLL_INOUT</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURL_POLL_REMOVE</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURL_SOCKET_TIMEOUT</name></cpp:macro> <cpp:value>CURL_SOCKET_BAD</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURL_CSELECT_IN</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURL_CSELECT_OUT</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURL_CSELECT_ERR</name></cpp:macro> <cpp:value>0x04</cpp:value></cpp:define>

<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>curl_socket_callback</name>)<parameter_list>(<parameter><decl><type><name>CURL</name> <modifier>*</modifier></type><name>easy</name></decl></parameter>, 

<parameter><decl><type><name>curl_socket_t</name></type> <name>s</name></decl></parameter>, 

<parameter><decl><type><name>int</name></type> <name>what</name></decl></parameter>, 

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>userp</name></decl></parameter>, 

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>socketp</name></decl></parameter>)</parameter_list>;</function_decl></typedef> 

<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>curl_multi_timer_callback</name>)<parameter_list>(<parameter><decl><type><name>CURLM</name> <modifier>*</modifier></type><name>multi</name></decl></parameter>, 

<parameter><decl><type><name>long</name></type> <name>timeout_ms</name></decl></parameter>, 

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>userp</name></decl></parameter>)</parameter_list>;</function_decl></typedef> 

<function_decl><type><name>CURL_EXTERN</name> <name>CURLMcode</name></type> <name>curl_multi_socket</name><parameter_list>(<parameter><decl><type><name>CURLM</name> <modifier>*</modifier></type><name>multi_handle</name></decl></parameter>, <parameter><decl><type><name>curl_socket_t</name></type> <name>s</name></decl></parameter>,

<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>running_handles</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURL_EXTERN</name> <name>CURLMcode</name></type> <name>curl_multi_socket_action</name><parameter_list>(<parameter><decl><type><name>CURLM</name> <modifier>*</modifier></type><name>multi_handle</name></decl></parameter>,

<parameter><decl><type><name>curl_socket_t</name></type> <name>s</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>ev_bitmask</name></decl></parameter>,

<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>running_handles</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURL_EXTERN</name> <name>CURLMcode</name></type> <name>curl_multi_socket_all</name><parameter_list>(<parameter><decl><type><name>CURLM</name> <modifier>*</modifier></type><name>multi_handle</name></decl></parameter>,

<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>running_handles</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CURL_ALLOW_OLD_MULTI_SOCKET</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>curl_multi_socket</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>curl_multi_socket_action(x,y,0,z)</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>CURL_EXTERN</name> <name>CURLMcode</name></type> <name>curl_multi_timeout</name><parameter_list>(<parameter><decl><type><name>CURLM</name> <modifier>*</modifier></type><name>multi_handle</name></decl></parameter>,

<parameter><decl><type><name>long</name> <modifier>*</modifier></type><name>milliseconds</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><enum>enum <block>{

<decl><name>CURLOPT</name><argument_list>(<argument><expr><name>CURLMOPT_SOCKETFUNCTION</name></expr></argument>, <argument><expr><name>CURLOPTTYPE_FUNCTIONPOINT</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></decl>,

<decl><name>CURLOPT</name><argument_list>(<argument><expr><name>CURLMOPT_SOCKETDATA</name></expr></argument>, <argument><expr><name>CURLOPTTYPE_OBJECTPOINT</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></decl>,

<decl><name>CURLOPT</name><argument_list>(<argument><expr><name>CURLMOPT_PIPELINING</name></expr></argument>, <argument><expr><name>CURLOPTTYPE_LONG</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></decl>,

<decl><name>CURLOPT</name><argument_list>(<argument><expr><name>CURLMOPT_TIMERFUNCTION</name></expr></argument>, <argument><expr><name>CURLOPTTYPE_FUNCTIONPOINT</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></decl>,

<decl><name>CURLOPT</name><argument_list>(<argument><expr><name>CURLMOPT_TIMERDATA</name></expr></argument>, <argument><expr><name>CURLOPTTYPE_OBJECTPOINT</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></decl>,

<decl><name>CURLOPT</name><argument_list>(<argument><expr><name>CURLMOPT_MAXCONNECTS</name></expr></argument>, <argument><expr><name>CURLOPTTYPE_LONG</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></decl>,

<decl><name>CURLOPT</name><argument_list>(<argument><expr><name>CURLMOPT_MAX_HOST_CONNECTIONS</name></expr></argument>, <argument><expr><name>CURLOPTTYPE_LONG</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></decl>,

<decl><name>CURLOPT</name><argument_list>(<argument><expr><name>CURLMOPT_MAX_PIPELINE_LENGTH</name></expr></argument>, <argument><expr><name>CURLOPTTYPE_LONG</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></decl>,

<decl><name>CURLOPT</name><argument_list>(<argument><expr><name>CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE</name></expr></argument>, <argument><expr><name>CURLOPTTYPE_OFF_T</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></decl>,

<decl><name>CURLOPT</name><argument_list>(<argument><expr><name>CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE</name></expr></argument>, <argument><expr><name>CURLOPTTYPE_OFF_T</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></decl>,

<decl><name>CURLOPT</name><argument_list>(<argument><expr><name>CURLMOPT_PIPELINING_SITE_BL</name></expr></argument>, <argument><expr><name>CURLOPTTYPE_OBJECTPOINT</name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></decl>,

<decl><name>CURLOPT</name><argument_list>(<argument><expr><name>CURLMOPT_PIPELINING_SERVER_BL</name></expr></argument>, <argument><expr><name>CURLOPTTYPE_OBJECTPOINT</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></decl>,

<decl><name>CURLOPT</name><argument_list>(<argument><expr><name>CURLMOPT_MAX_TOTAL_CONNECTIONS</name></expr></argument>, <argument><expr><name>CURLOPTTYPE_LONG</name></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>)</argument_list></decl>,

<decl><name>CURLOPT</name><argument_list>(<argument><expr><name>CURLMOPT_PUSHFUNCTION</name></expr></argument>, <argument><expr><name>CURLOPTTYPE_FUNCTIONPOINT</name></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></decl>,

<decl><name>CURLOPT</name><argument_list>(<argument><expr><name>CURLMOPT_PUSHDATA</name></expr></argument>, <argument><expr><name>CURLOPTTYPE_OBJECTPOINT</name></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></decl>,

<decl><name>CURLOPT</name><argument_list>(<argument><expr><name>CURLMOPT_MAX_CONCURRENT_STREAMS</name></expr></argument>, <argument><expr><name>CURLOPTTYPE_LONG</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></decl>,

<decl><name>CURLMOPT_LASTENTRY</name></decl> 

}</block></enum></type> <name>CURLMoption</name>;</typedef>

<function_decl><type><name>CURL_EXTERN</name> <name>CURLMcode</name></type> <name>curl_multi_setopt</name><parameter_list>(<parameter><decl><type><name>CURLM</name> <modifier>*</modifier></type><name>multi_handle</name></decl></parameter>,

<parameter><decl><type><name>CURLMoption</name></type> <name>option</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURL_EXTERN</name> <name>CURLMcode</name></type> <name>curl_multi_assign</name><parameter_list>(<parameter><decl><type><name>CURLM</name> <modifier>*</modifier></type><name>multi_handle</name></decl></parameter>,

<parameter><decl><type><name>curl_socket_t</name></type> <name>sockfd</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>sockp</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURL_PUSH_OK</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURL_PUSH_DENY</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<struct_decl>struct <name>curl_pushheaders</name>;</struct_decl> 

<function_decl><type><name>CURL_EXTERN</name> <name>char</name> <modifier>*</modifier></type><name>curl_pushheader_bynum</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>curl_pushheaders</name></name> <modifier>*</modifier></type><name>h</name></decl></parameter>,

<parameter><decl><type><name>size_t</name></type> <name>num</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURL_EXTERN</name> <name>char</name> <modifier>*</modifier></type><name>curl_pushheader_byname</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>curl_pushheaders</name></name> <modifier>*</modifier></type><name>h</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>curl_push_callback</name>)<parameter_list>(<parameter><decl><type><name>CURL</name> <modifier>*</modifier></type><name>parent</name></decl></parameter>,

<parameter><decl><type><name>CURL</name> <modifier>*</modifier></type><name>easy</name></decl></parameter>,

<parameter><decl><type><name>size_t</name></type> <name>num_headers</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>curl_pushheaders</name></name> <modifier>*</modifier></type><name>headers</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>userp</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern> 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
