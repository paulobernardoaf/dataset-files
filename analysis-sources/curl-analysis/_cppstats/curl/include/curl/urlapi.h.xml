<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats\curl\include\curl\urlapi.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><enum>enum <block>{

<decl><name>CURLUE_OK</name></decl>,

<decl><name>CURLUE_BAD_HANDLE</name></decl>, 

<decl><name>CURLUE_BAD_PARTPOINTER</name></decl>, 

<decl><name>CURLUE_MALFORMED_INPUT</name></decl>, 

<decl><name>CURLUE_BAD_PORT_NUMBER</name></decl>, 

<decl><name>CURLUE_UNSUPPORTED_SCHEME</name></decl>, 

<decl><name>CURLUE_URLDECODE</name></decl>, 

<decl><name>CURLUE_OUT_OF_MEMORY</name></decl>, 

<decl><name>CURLUE_USER_NOT_ALLOWED</name></decl>, 

<decl><name>CURLUE_UNKNOWN_PART</name></decl>, 

<decl><name>CURLUE_NO_SCHEME</name></decl>, 

<decl><name>CURLUE_NO_USER</name></decl>, 

<decl><name>CURLUE_NO_PASSWORD</name></decl>, 

<decl><name>CURLUE_NO_OPTIONS</name></decl>, 

<decl><name>CURLUE_NO_HOST</name></decl>, 

<decl><name>CURLUE_NO_PORT</name></decl>, 

<decl><name>CURLUE_NO_QUERY</name></decl>, 

<decl><name>CURLUE_NO_FRAGMENT</name></decl> 

}</block></enum></type> <name>CURLUcode</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{

<decl><name>CURLUPART_URL</name></decl>,

<decl><name>CURLUPART_SCHEME</name></decl>,

<decl><name>CURLUPART_USER</name></decl>,

<decl><name>CURLUPART_PASSWORD</name></decl>,

<decl><name>CURLUPART_OPTIONS</name></decl>,

<decl><name>CURLUPART_HOST</name></decl>,

<decl><name>CURLUPART_PORT</name></decl>,

<decl><name>CURLUPART_PATH</name></decl>,

<decl><name>CURLUPART_QUERY</name></decl>,

<decl><name>CURLUPART_FRAGMENT</name></decl>,

<decl><name>CURLUPART_ZONEID</name></decl> 

}</block></enum></type> <name>CURLUPart</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURLU_DEFAULT_PORT</name></cpp:macro> <cpp:value>(1&lt;&lt;0)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURLU_NO_DEFAULT_PORT</name></cpp:macro> <cpp:value>(1&lt;&lt;1)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURLU_DEFAULT_SCHEME</name></cpp:macro> <cpp:value>(1&lt;&lt;2)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURLU_NON_SUPPORT_SCHEME</name></cpp:macro> <cpp:value>(1&lt;&lt;3)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURLU_PATH_AS_IS</name></cpp:macro> <cpp:value>(1&lt;&lt;4)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURLU_DISALLOW_USER</name></cpp:macro> <cpp:value>(1&lt;&lt;5)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURLU_URLDECODE</name></cpp:macro> <cpp:value>(1&lt;&lt;6)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURLU_URLENCODE</name></cpp:macro> <cpp:value>(1&lt;&lt;7)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURLU_APPENDQUERY</name></cpp:macro> <cpp:value>(1&lt;&lt;8)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURLU_GUESS_SCHEME</name></cpp:macro> <cpp:value>(1&lt;&lt;9)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CURLU_NO_AUTHORITY</name></cpp:macro> <cpp:value>(1&lt;&lt;10)</cpp:value></cpp:define> 

<typedef>typedef <type><name><name>struct</name> <name>Curl_URL</name></name></type> <name>CURLU</name>;</typedef>

<function_decl><type><name>CURL_EXTERN</name> <name>CURLU</name> <modifier>*</modifier></type><name>curl_url</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURL_EXTERN</name> <name>void</name></type> <name>curl_url_cleanup</name><parameter_list>(<parameter><decl><type><name>CURLU</name> <modifier>*</modifier></type><name>handle</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURL_EXTERN</name> <name>CURLU</name> <modifier>*</modifier></type><name>curl_url_dup</name><parameter_list>(<parameter><decl><type><name>CURLU</name> <modifier>*</modifier></type><name>in</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURL_EXTERN</name> <name>CURLUcode</name></type> <name>curl_url_get</name><parameter_list>(<parameter><decl><type><name>CURLU</name> <modifier>*</modifier></type><name>handle</name></decl></parameter>, <parameter><decl><type><name>CURLUPart</name></type> <name>what</name></decl></parameter>,

<parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>part</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURL_EXTERN</name> <name>CURLUcode</name></type> <name>curl_url_set</name><parameter_list>(<parameter><decl><type><name>CURLU</name> <modifier>*</modifier></type><name>handle</name></decl></parameter>, <parameter><decl><type><name>CURLUPart</name></type> <name>what</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>part</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern> 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
