<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats\curl\lib\getinfo.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl_setup.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;curl/curl.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"urldata.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"getinfo.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vtls/vtls.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"connect.h"</cpp:file></cpp:include> 

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"progress.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl_memory.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"memdebug.h"</cpp:file></cpp:include>

<function><type><name>CURLcode</name></type> <name>Curl_initinfo</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Curl_easy</name></name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>Progress</name></name> <modifier>*</modifier></type><name>pro</name> <init>= <expr><operator>&amp;</operator><name><name>data</name><operator>-&gt;</operator><name>progress</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>PureInfo</name></name> <modifier>*</modifier></type><name>info</name> <init>= <expr><operator>&amp;</operator><name><name>data</name><operator>-&gt;</operator><name>info</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>pro</name><operator>-&gt;</operator><name>t_nslookup</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>pro</name><operator>-&gt;</operator><name>t_connect</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>pro</name><operator>-&gt;</operator><name>t_appconnect</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>pro</name><operator>-&gt;</operator><name>t_pretransfer</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>pro</name><operator>-&gt;</operator><name>t_starttransfer</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>pro</name><operator>-&gt;</operator><name>timespent</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>pro</name><operator>-&gt;</operator><name>t_redirect</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>pro</name><operator>-&gt;</operator><name>is_t_startransfer_set</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>httpcode</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>httpproxycode</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>httpversion</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>filetime</name></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt> 

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>timecond</name></name> <operator>=</operator> <name>FALSE</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>header_size</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>request_size</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>proxyauthavail</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>httpauthavail</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>numconnects</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name><name>info</name><operator>-&gt;</operator><name>contenttype</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>contenttype</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name><name>info</name><operator>-&gt;</operator><name>wouldredirect</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>wouldredirect</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>conn_primary_ip</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>conn_local_ip</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>conn_primary_port</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>conn_local_port</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>conn_scheme</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>conn_protocol</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>USE_SSL</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>Curl_ssl_free_certinfo</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<return>return <expr><name>CURLE_OK</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>CURLcode</name></type> <name>getinfo_char</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Curl_easy</name></name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>CURLINFO</name></type> <name>info</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>param_charp</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<switch>switch<condition>(<expr><name>info</name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>CURLINFO_EFFECTIVE_URL</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_charp</name> <operator>=</operator> <ternary><condition><expr><name><name>data</name><operator>-&gt;</operator><name>change</name><operator>.</operator><name>url</name></name></expr>?</condition><then><expr><name><name>data</name><operator>-&gt;</operator><name>change</name><operator>.</operator><name>url</name></name></expr></then><else>:<expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><literal type="string">""</literal></expr></else></ternary></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_CONTENT_TYPE</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_charp</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>contenttype</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_PRIVATE</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_charp</name> <operator>=</operator> <operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator> <name><name>data</name><operator>-&gt;</operator><name>set</name><operator>.</operator><name>private_data</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_FTP_ENTRY_PATH</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_charp</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>most_recent_ftp_entrypath</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_REDIRECT_URL</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_charp</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>wouldredirect</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_PRIMARY_IP</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_charp</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>conn_primary_ip</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_LOCAL_IP</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_charp</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>conn_local_ip</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_RTSP_SESSION_ID</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_charp</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>set</name><operator>.</operator><name>str</name><index>[<expr><name>STRING_RTSP_SESSION_ID</name></expr>]</index></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_SCHEME</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_charp</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>conn_scheme</name></name></expr>;</expr_stmt>

<break>break;</break>

<default>default:</default>

<return>return <expr><name>CURLE_UNKNOWN_OPTION</name></expr>;</return>

</block_content>}</block></switch>

<return>return <expr><name>CURLE_OK</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>CURLcode</name></type> <name>getinfo_long</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Curl_easy</name></name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>CURLINFO</name></type> <name>info</name></decl></parameter>,

<parameter><decl><type><name>long</name> <modifier>*</modifier></type><name>param_longp</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>curl_socket_t</name></type> <name>sockfd</name></decl>;</decl_stmt>

<union>union <block>{

<decl_stmt><decl><type><name>unsigned</name> <name>long</name> <modifier>*</modifier></type><name>to_ulong</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>long</name> <modifier>*</modifier></type><name>to_long</name></decl>;</decl_stmt>

}</block> <decl><name>lptr</name></decl>;</union>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>DEBUGBUILD</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>timestr</name> <init>= <expr><call><name>getenv</name><argument_list>(<argument><expr><literal type="string">"CURL_TIME"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name>timestr</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name>val</name> <init>= <expr><call><name>strtol</name><argument_list>(<argument><expr><name>timestr</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<switch>switch<condition>(<expr><name>info</name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>CURLINFO_LOCAL_PORT</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <operator>(</operator><name>long</name><operator>)</operator><name>val</name></expr>;</expr_stmt>

<return>return <expr><name>CURLE_OK</name></expr>;</return>

<default>default:</default>

<break>break;</break>

</block_content>}</block></switch>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>timestr</name> <operator>=</operator> <call><name>getenv</name><argument_list>(<argument><expr><literal type="string">"CURL_DEBUG_SIZE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>timestr</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name>val</name> <init>= <expr><call><name>strtol</name><argument_list>(<argument><expr><name>timestr</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<switch>switch<condition>(<expr><name>info</name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>CURLINFO_HEADER_SIZE</name></expr>:</case>

<case>case <expr><name>CURLINFO_REQUEST_SIZE</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <operator>(</operator><name>long</name><operator>)</operator><name>val</name></expr>;</expr_stmt>

<return>return <expr><name>CURLE_OK</name></expr>;</return>

<default>default:</default>

<break>break;</break>

</block_content>}</block></switch>

</block_content>}</block></if></if_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<switch>switch<condition>(<expr><name>info</name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>CURLINFO_RESPONSE_CODE</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>httpcode</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_HTTP_CONNECTCODE</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>httpproxycode</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_FILETIME</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name><name>data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>filetime</name></name> <operator>&gt;</operator> <name>LONG_MAX</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <name>LONG_MAX</name></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if<condition>(<expr><name><name>data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>filetime</name></name> <operator>&lt;</operator> <name>LONG_MIN</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <name>LONG_MIN</name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <operator>(</operator><name>long</name><operator>)</operator><name><name>data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>filetime</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_HEADER_SIZE</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <operator>(</operator><name>long</name><operator>)</operator><name><name>data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>header_size</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_REQUEST_SIZE</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <operator>(</operator><name>long</name><operator>)</operator><name><name>data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>request_size</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_SSL_VERIFYRESULT</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>set</name><operator>.</operator><name>ssl</name><operator>.</operator><name>certverifyresult</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_PROXY_SSL_VERIFYRESULT</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>set</name><operator>.</operator><name>proxy_ssl</name><operator>.</operator><name>certverifyresult</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_REDIRECT_COUNT</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>set</name><operator>.</operator><name>followlocation</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_HTTPAUTH_AVAIL</name></expr>:</case>

<expr_stmt><expr><name><name>lptr</name><operator>.</operator><name>to_long</name></name> <operator>=</operator> <name>param_longp</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name><name>lptr</name><operator>.</operator><name>to_ulong</name></name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>httpauthavail</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_PROXYAUTH_AVAIL</name></expr>:</case>

<expr_stmt><expr><name><name>lptr</name><operator>.</operator><name>to_long</name></name> <operator>=</operator> <name>param_longp</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name><name>lptr</name><operator>.</operator><name>to_ulong</name></name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>proxyauthavail</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_OS_ERRNO</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>os_errno</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_NUM_CONNECTS</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>numconnects</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_LASTSOCKET</name></expr>:</case>

<expr_stmt><expr><name>sockfd</name> <operator>=</operator> <call><name>Curl_getconnectinfo</name><argument_list>(<argument><expr><name>data</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>sockfd</name> <operator>!=</operator> <name>CURL_SOCKET_BAD</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <operator>(</operator><name>long</name><operator>)</operator><name>sockfd</name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_PRIMARY_PORT</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>conn_primary_port</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_LOCAL_PORT</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>conn_local_port</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_CONDITION_UNMET</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name><name>data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>httpcode</name></name> <operator>==</operator> <literal type="number">304</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <literal type="number">1L</literal></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <ternary><condition><expr><name><name>data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>timecond</name></name></expr> ?</condition><then> <expr><literal type="number">1L</literal></expr> </then><else>: <expr><literal type="number">0L</literal></expr></else></ternary></expr>;</expr_stmt></block_content></block></else></if_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_RTSP_CLIENT_CSEQ</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>rtsp_next_client_CSeq</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_RTSP_SERVER_CSEQ</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>rtsp_next_server_CSeq</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_RTSP_CSEQ_RECV</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>rtsp_CSeq_recv</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_HTTP_VERSION</name></expr>:</case>

<switch>switch<condition>(<expr><name><name>data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>httpversion</name></name></expr>)</condition> <block>{<block_content>

<case>case <expr><literal type="number">10</literal></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <name>CURL_HTTP_VERSION_1_0</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">11</literal></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <name>CURL_HTTP_VERSION_1_1</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">20</literal></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <name>CURL_HTTP_VERSION_2_0</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="number">30</literal></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <name>CURL_HTTP_VERSION_3</name></expr>;</expr_stmt>

<break>break;</break>

<default>default:</default>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <name>CURL_HTTP_VERSION_NONE</name></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></switch>

<break>break;</break>

<case>case <expr><name>CURLINFO_PROTOCOL</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_longp</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>conn_protocol</name></name></expr>;</expr_stmt>

<break>break;</break>

<default>default:</default>

<return>return <expr><name>CURLE_UNKNOWN_OPTION</name></expr>;</return>

</block_content>}</block></switch>

<return>return <expr><name>CURLE_OK</name></expr>;</return>

</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DOUBLE_SECS</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(double)(x)/1000000</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>CURLcode</name></type> <name>getinfo_offt</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Curl_easy</name></name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>CURLINFO</name></type> <name>info</name></decl></parameter>,

<parameter><decl><type><name>curl_off_t</name> <modifier>*</modifier></type><name>param_offt</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>DEBUGBUILD</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>timestr</name> <init>= <expr><call><name>getenv</name><argument_list>(<argument><expr><literal type="string">"CURL_TIME"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name>timestr</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name>val</name> <init>= <expr><call><name>strtol</name><argument_list>(<argument><expr><name>timestr</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<switch>switch<condition>(<expr><name>info</name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>CURLINFO_TOTAL_TIME_T</name></expr>:</case>

<case>case <expr><name>CURLINFO_NAMELOOKUP_TIME_T</name></expr>:</case>

<case>case <expr><name>CURLINFO_CONNECT_TIME_T</name></expr>:</case>

<case>case <expr><name>CURLINFO_APPCONNECT_TIME_T</name></expr>:</case>

<case>case <expr><name>CURLINFO_PRETRANSFER_TIME_T</name></expr>:</case>

<case>case <expr><name>CURLINFO_STARTTRANSFER_TIME_T</name></expr>:</case>

<case>case <expr><name>CURLINFO_REDIRECT_TIME_T</name></expr>:</case>

<case>case <expr><name>CURLINFO_SPEED_DOWNLOAD_T</name></expr>:</case>

<case>case <expr><name>CURLINFO_SPEED_UPLOAD_T</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_offt</name> <operator>=</operator> <operator>(</operator><name>curl_off_t</name><operator>)</operator><name>val</name></expr>;</expr_stmt>

<return>return <expr><name>CURLE_OK</name></expr>;</return>

<default>default:</default>

<break>break;</break>

</block_content>}</block></switch>

</block_content>}</block></if></if_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<switch>switch<condition>(<expr><name>info</name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>CURLINFO_FILETIME_T</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_offt</name> <operator>=</operator> <operator>(</operator><name>curl_off_t</name><operator>)</operator><name><name>data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>filetime</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_SIZE_UPLOAD_T</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_offt</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>uploaded</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_SIZE_DOWNLOAD_T</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_offt</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>downloaded</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_SPEED_DOWNLOAD_T</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_offt</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>dlspeed</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_SPEED_UPLOAD_T</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_offt</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>ulspeed</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_CONTENT_LENGTH_DOWNLOAD_T</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_offt</name> <operator>=</operator> <ternary><condition><expr><operator>(</operator><name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>flags</name></name> <operator>&amp;</operator> <name>PGRS_DL_SIZE_KNOWN</name><operator>)</operator></expr>?</condition><then>

<expr><name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>size_dl</name></name></expr></then><else>:<expr><operator>-</operator><literal type="number">1</literal></expr></else></ternary></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_CONTENT_LENGTH_UPLOAD_T</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_offt</name> <operator>=</operator> <ternary><condition><expr><operator>(</operator><name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>flags</name></name> <operator>&amp;</operator> <name>PGRS_UL_SIZE_KNOWN</name><operator>)</operator></expr>?</condition><then>

<expr><name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>size_ul</name></name></expr></then><else>:<expr><operator>-</operator><literal type="number">1</literal></expr></else></ternary></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_TOTAL_TIME_T</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_offt</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>timespent</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_NAMELOOKUP_TIME_T</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_offt</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>t_nslookup</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_CONNECT_TIME_T</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_offt</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>t_connect</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_APPCONNECT_TIME_T</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_offt</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>t_appconnect</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_PRETRANSFER_TIME_T</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_offt</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>t_pretransfer</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_STARTTRANSFER_TIME_T</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_offt</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>t_starttransfer</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_REDIRECT_TIME_T</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_offt</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>t_redirect</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_RETRY_AFTER</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_offt</name> <operator>=</operator> <name><name>data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>retry_after</name></name></expr>;</expr_stmt>

<break>break;</break>

<default>default:</default>

<return>return <expr><name>CURLE_UNKNOWN_OPTION</name></expr>;</return>

</block_content>}</block></switch>

<return>return <expr><name>CURLE_OK</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>CURLcode</name></type> <name>getinfo_double</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Curl_easy</name></name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>CURLINFO</name></type> <name>info</name></decl></parameter>,

<parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>param_doublep</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>DEBUGBUILD</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>timestr</name> <init>= <expr><call><name>getenv</name><argument_list>(<argument><expr><literal type="string">"CURL_TIME"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name>timestr</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name>val</name> <init>= <expr><call><name>strtol</name><argument_list>(<argument><expr><name>timestr</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<switch>switch<condition>(<expr><name>info</name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>CURLINFO_TOTAL_TIME</name></expr>:</case>

<case>case <expr><name>CURLINFO_NAMELOOKUP_TIME</name></expr>:</case>

<case>case <expr><name>CURLINFO_CONNECT_TIME</name></expr>:</case>

<case>case <expr><name>CURLINFO_APPCONNECT_TIME</name></expr>:</case>

<case>case <expr><name>CURLINFO_PRETRANSFER_TIME</name></expr>:</case>

<case>case <expr><name>CURLINFO_STARTTRANSFER_TIME</name></expr>:</case>

<case>case <expr><name>CURLINFO_REDIRECT_TIME</name></expr>:</case>

<case>case <expr><name>CURLINFO_SPEED_DOWNLOAD</name></expr>:</case>

<case>case <expr><name>CURLINFO_SPEED_UPLOAD</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_doublep</name> <operator>=</operator> <operator>(</operator><name>double</name><operator>)</operator><name>val</name></expr>;</expr_stmt>

<return>return <expr><name>CURLE_OK</name></expr>;</return>

<default>default:</default>

<break>break;</break>

</block_content>}</block></switch>

</block_content>}</block></if></if_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<switch>switch<condition>(<expr><name>info</name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>CURLINFO_TOTAL_TIME</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_doublep</name> <operator>=</operator> <call><name>DOUBLE_SECS</name><argument_list>(<argument><expr><name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>timespent</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_NAMELOOKUP_TIME</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_doublep</name> <operator>=</operator> <call><name>DOUBLE_SECS</name><argument_list>(<argument><expr><name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>t_nslookup</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_CONNECT_TIME</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_doublep</name> <operator>=</operator> <call><name>DOUBLE_SECS</name><argument_list>(<argument><expr><name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>t_connect</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_APPCONNECT_TIME</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_doublep</name> <operator>=</operator> <call><name>DOUBLE_SECS</name><argument_list>(<argument><expr><name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>t_appconnect</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_PRETRANSFER_TIME</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_doublep</name> <operator>=</operator> <call><name>DOUBLE_SECS</name><argument_list>(<argument><expr><name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>t_pretransfer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_STARTTRANSFER_TIME</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_doublep</name> <operator>=</operator> <call><name>DOUBLE_SECS</name><argument_list>(<argument><expr><name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>t_starttransfer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_SIZE_UPLOAD</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_doublep</name> <operator>=</operator> <operator>(</operator><name>double</name><operator>)</operator><name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>uploaded</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_SIZE_DOWNLOAD</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_doublep</name> <operator>=</operator> <operator>(</operator><name>double</name><operator>)</operator><name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>downloaded</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_SPEED_DOWNLOAD</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_doublep</name> <operator>=</operator> <operator>(</operator><name>double</name><operator>)</operator><name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>dlspeed</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_SPEED_UPLOAD</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_doublep</name> <operator>=</operator> <operator>(</operator><name>double</name><operator>)</operator><name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>ulspeed</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_CONTENT_LENGTH_DOWNLOAD</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_doublep</name> <operator>=</operator> <ternary><condition><expr><operator>(</operator><name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>flags</name></name> <operator>&amp;</operator> <name>PGRS_DL_SIZE_KNOWN</name><operator>)</operator></expr>?</condition><then>

<expr><operator>(</operator><name>double</name><operator>)</operator><name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>size_dl</name></name></expr></then><else>:<expr><operator>-</operator><literal type="number">1</literal></expr></else></ternary></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_CONTENT_LENGTH_UPLOAD</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_doublep</name> <operator>=</operator> <ternary><condition><expr><operator>(</operator><name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>flags</name></name> <operator>&amp;</operator> <name>PGRS_UL_SIZE_KNOWN</name><operator>)</operator></expr>?</condition><then>

<expr><operator>(</operator><name>double</name><operator>)</operator><name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>size_ul</name></name></expr></then><else>:<expr><operator>-</operator><literal type="number">1</literal></expr></else></ternary></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_REDIRECT_TIME</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_doublep</name> <operator>=</operator> <call><name>DOUBLE_SECS</name><argument_list>(<argument><expr><name><name>data</name><operator>-&gt;</operator><name>progress</name><operator>.</operator><name>t_redirect</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<default>default:</default>

<return>return <expr><name>CURLE_UNKNOWN_OPTION</name></expr>;</return>

</block_content>}</block></switch>

<return>return <expr><name>CURLE_OK</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>CURLcode</name></type> <name>getinfo_slist</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Curl_easy</name></name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>CURLINFO</name></type> <name>info</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>curl_slist</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>param_slistp</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<union>union <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>curl_certinfo</name></name> <modifier>*</modifier></type><name>to_certinfo</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>curl_slist</name></name> <modifier>*</modifier></type><name>to_slist</name></decl>;</decl_stmt>

}</block> <decl><name>ptr</name></decl>;</union>

<switch>switch<condition>(<expr><name>info</name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>CURLINFO_SSL_ENGINES</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_slistp</name> <operator>=</operator> <call><name>Curl_ssl_engines_list</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_COOKIELIST</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_slistp</name> <operator>=</operator> <call><name>Curl_cookie_list</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_CERTINFO</name></expr>:</case>

<expr_stmt><expr><name><name>ptr</name><operator>.</operator><name>to_certinfo</name></name> <operator>=</operator> <operator>&amp;</operator><name><name>data</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>certs</name></name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>param_slistp</name> <operator>=</operator> <name><name>ptr</name><operator>.</operator><name>to_slist</name></name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_TLS_SESSION</name></expr>:</case>

<case>case <expr><name>CURLINFO_TLS_SSL_PTR</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>curl_tlssessioninfo</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>tsip</name> <init>= <expr><operator>(</operator>struct <name>curl_tlssessioninfo</name> <operator>*</operator><operator>*</operator><operator>)</operator>

<name>param_slistp</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>curl_tlssessioninfo</name></name> <modifier>*</modifier></type><name>tsi</name> <init>= <expr><operator>&amp;</operator><name><name>data</name><operator>-&gt;</operator><name>tsi</name></name></expr></init></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>USE_SSL</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name><name>struct</name> <name>connectdata</name></name> <modifier>*</modifier></type><name>conn</name> <init>= <expr><name><name>data</name><operator>-&gt;</operator><name>conn</name></name></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><operator>*</operator><name>tsip</name> <operator>=</operator> <name>tsi</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tsi</name><operator>-&gt;</operator><name>backend</name></name> <operator>=</operator> <call><name>Curl_ssl_backend</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tsi</name><operator>-&gt;</operator><name>internals</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>USE_SSL</name></expr></argument>)</argument_list></call></expr></cpp:if>
<if_stmt><if>if<condition>(<expr><name>conn</name> <operator>&amp;&amp;</operator> <name><name>tsi</name><operator>-&gt;</operator><name>backend</name></name> <operator>!=</operator> <name>CURLSSLBACKEND_NONE</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <operator>(</operator><sizeof>sizeof<argument_list>(<argument><expr><name><name>conn</name><operator>-&gt;</operator><name>ssl</name></name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>conn</name><operator>-&gt;</operator><name>ssl</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof><operator>)</operator></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><name><name>conn</name><operator>-&gt;</operator><name>ssl</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>use</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>tsi</name><operator>-&gt;</operator><name>internals</name></name> <operator>=</operator> <call><name><name>Curl_ssl</name><operator>-&gt;</operator><name>get_internals</name></name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>conn</name><operator>-&gt;</operator><name>ssl</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

</block_content>}</block></if></if_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</block_content>}</block>

<break>break;</break>

<default>default:</default>

<return>return <expr><name>CURLE_UNKNOWN_OPTION</name></expr>;</return>

</block_content>}</block></switch>

<return>return <expr><name>CURLE_OK</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>CURLcode</name></type> <name>getinfo_socket</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Curl_easy</name></name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>CURLINFO</name></type> <name>info</name></decl></parameter>,

<parameter><decl><type><name>curl_socket_t</name> <modifier>*</modifier></type><name>param_socketp</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<switch>switch<condition>(<expr><name>info</name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>CURLINFO_ACTIVESOCKET</name></expr>:</case>

<expr_stmt><expr><operator>*</operator><name>param_socketp</name> <operator>=</operator> <call><name>Curl_getconnectinfo</name><argument_list>(<argument><expr><name>data</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<default>default:</default>

<return>return <expr><name>CURLE_UNKNOWN_OPTION</name></expr>;</return>

</block_content>}</block></switch>

<return>return <expr><name>CURLE_OK</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>CURLcode</name></type> <name>Curl_getinfo</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Curl_easy</name></name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>CURLINFO</name></type> <name>info</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>va_list</name></type> <name>arg</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>long</name> <modifier>*</modifier></type><name>param_longp</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name> <modifier>*</modifier></type><name>param_doublep</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>curl_off_t</name> <modifier>*</modifier></type><name>param_offt</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>param_charp</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>curl_slist</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>param_slistp</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>curl_socket_t</name> <modifier>*</modifier></type><name>param_socketp</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>CURLcode</name></type> <name>result</name> <init>= <expr><name>CURLE_UNKNOWN_OPTION</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>data</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>result</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>va_start</name><argument_list>(<argument><expr><name>arg</name></expr></argument>, <argument><expr><name>info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>type</name> <operator>=</operator> <name>CURLINFO_TYPEMASK</name> <operator>&amp;</operator> <operator>(</operator><name>int</name><operator>)</operator><name>info</name></expr>;</expr_stmt>

<switch>switch<condition>(<expr><name>type</name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>CURLINFO_STRING</name></expr>:</case>

<expr_stmt><expr><name>param_charp</name> <operator>=</operator> <call><name>va_arg</name><argument_list>(<argument><expr><name>arg</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>*</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>param_charp</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>getinfo_char</name><argument_list>(<argument><expr><name>data</name></expr></argument>, <argument><expr><name>info</name></expr></argument>, <argument><expr><name>param_charp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_LONG</name></expr>:</case>

<expr_stmt><expr><name>param_longp</name> <operator>=</operator> <call><name>va_arg</name><argument_list>(<argument><expr><name>arg</name></expr></argument>, <argument><expr><name>long</name> <operator>*</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>param_longp</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>getinfo_long</name><argument_list>(<argument><expr><name>data</name></expr></argument>, <argument><expr><name>info</name></expr></argument>, <argument><expr><name>param_longp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_DOUBLE</name></expr>:</case>

<expr_stmt><expr><name>param_doublep</name> <operator>=</operator> <call><name>va_arg</name><argument_list>(<argument><expr><name>arg</name></expr></argument>, <argument><expr><name>double</name> <operator>*</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>param_doublep</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>getinfo_double</name><argument_list>(<argument><expr><name>data</name></expr></argument>, <argument><expr><name>info</name></expr></argument>, <argument><expr><name>param_doublep</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_OFF_T</name></expr>:</case>

<expr_stmt><expr><name>param_offt</name> <operator>=</operator> <call><name>va_arg</name><argument_list>(<argument><expr><name>arg</name></expr></argument>, <argument><expr><name>curl_off_t</name> <operator>*</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>param_offt</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>getinfo_offt</name><argument_list>(<argument><expr><name>data</name></expr></argument>, <argument><expr><name>info</name></expr></argument>, <argument><expr><name>param_offt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_SLIST</name></expr>:</case>

<expr_stmt><expr><name>param_slistp</name> <operator>=</operator> <call><name>va_arg</name><argument_list>(<argument><expr><name>arg</name></expr></argument>, <argument><expr>struct <name>curl_slist</name> <operator>*</operator><operator>*</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>param_slistp</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>getinfo_slist</name><argument_list>(<argument><expr><name>data</name></expr></argument>, <argument><expr><name>info</name></expr></argument>, <argument><expr><name>param_slistp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>CURLINFO_SOCKET</name></expr>:</case>

<expr_stmt><expr><name>param_socketp</name> <operator>=</operator> <call><name>va_arg</name><argument_list>(<argument><expr><name>arg</name></expr></argument>, <argument><expr><name>curl_socket_t</name> <operator>*</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>param_socketp</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>getinfo_socket</name><argument_list>(<argument><expr><name>data</name></expr></argument>, <argument><expr><name>info</name></expr></argument>, <argument><expr><name>param_socketp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<default>default:</default>

<break>break;</break>

</block_content>}</block></switch>

<expr_stmt><expr><call><name>va_end</name><argument_list>(<argument><expr><name>arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>result</name></expr>;</return>

</block_content>}</block></function>

</unit>
