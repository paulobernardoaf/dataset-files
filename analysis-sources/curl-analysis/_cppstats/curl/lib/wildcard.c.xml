<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats\curl\lib\wildcard.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl_setup.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CURL_DISABLE_FTP</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"wildcard.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"llist.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"fileinfo.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl_printf.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl_memory.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"memdebug.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>void</name></type> <name>fileinfo_dtor</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>element</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>user</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>Curl_fileinfo_cleanup</name><argument_list>(<argument><expr><name>element</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>CURLcode</name></type> <name>Curl_wildcard_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>WildcardData</name></name> <modifier>*</modifier></type><name>wc</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>Curl_llist_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>wc</name><operator>-&gt;</operator><name>filelist</name></name></expr></argument>, <argument><expr><name>fileinfo_dtor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>wc</name><operator>-&gt;</operator><name>state</name></name> <operator>=</operator> <name>CURLWC_INIT</name></expr>;</expr_stmt>

<return>return <expr><name>CURLE_OK</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>Curl_wildcard_dtor</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>WildcardData</name></name> <modifier>*</modifier></type><name>wc</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>wc</name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name><name>wc</name><operator>-&gt;</operator><name>dtor</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name><name>wc</name><operator>-&gt;</operator><name>dtor</name></name><argument_list>(<argument><expr><name><name>wc</name><operator>-&gt;</operator><name>protdata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>wc</name><operator>-&gt;</operator><name>dtor</name></name> <operator>=</operator> <name>ZERO_NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>wc</name><operator>-&gt;</operator><name>protdata</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>DEBUGASSERT</name><argument_list>(<argument><expr><name><name>wc</name><operator>-&gt;</operator><name>protdata</name></name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>Curl_llist_destroy</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>wc</name><operator>-&gt;</operator><name>filelist</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name><name>wc</name><operator>-&gt;</operator><name>path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>wc</name><operator>-&gt;</operator><name>path</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name><name>wc</name><operator>-&gt;</operator><name>pattern</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>wc</name><operator>-&gt;</operator><name>pattern</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>wc</name><operator>-&gt;</operator><name>customptr</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>wc</name><operator>-&gt;</operator><name>state</name></name> <operator>=</operator> <name>CURLWC_INIT</name></expr>;</expr_stmt>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

</unit>
