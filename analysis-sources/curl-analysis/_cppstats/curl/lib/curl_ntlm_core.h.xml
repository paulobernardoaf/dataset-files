<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats\curl\lib\curl_ntlm_core.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl_setup.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>USE_NTLM</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>USE_OPENSSL</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>USE_GNUTLS_NETTLE</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>USE_GNUTLS</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name>defined</name><argument_list>(<argument><expr><name>USE_NSS</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NTLM_NEEDS_NSS_INIT</name></cpp:macro></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>USE_WINDOWS_SSPI</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>USE_WIN32_CRYPTO</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>USE_OPENSSL</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;openssl/ssl.h&gt;</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>USE_NTRESPONSES</name></cpp:macro></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>USE_NTRESPONSES</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CURL_DISABLE_CRYPTO_AUTH</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>USE_NTLM2SESSION</name></cpp:macro></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>USE_NTRESPONSES</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>(</operator><name>CURL_SIZEOF_CURL_OFF_T</name> <operator>&gt;</operator> <literal type="number">4</literal><operator>)</operator></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>USE_NTLM_V2</name></cpp:macro></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>void</name></type> <name>Curl_ntlm_core_lm_resp</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>keys</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>plaintext</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>results</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURLcode</name></type> <name>Curl_ntlm_core_mk_lm_hash</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Curl_easy</name></name> <modifier>*</modifier></type><name>data</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>password</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>lmbuffer</name></decl></parameter> )</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>USE_NTRESPONSES</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>CURLcode</name></type> <name>Curl_ntlm_core_mk_nt_hash</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Curl_easy</name></name> <modifier>*</modifier></type><name>data</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>password</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>ntbuffer</name></decl></parameter> )</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>USE_NTLM_V2</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>USE_WINDOWS_SSPI</name></expr></argument>)</argument_list></call></expr></cpp:if>

<function_decl><type><name>CURLcode</name></type> <name>Curl_hmac_md5</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>keylen</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>datalen</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>output</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURLcode</name></type> <name>Curl_ntlm_core_mk_ntlmv2_hash</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>user</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>userlen</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>domain</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>domlen</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>ntlmhash</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>ntlmv2hash</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURLcode</name></type> <name>Curl_ntlm_core_mk_ntlmv2_resp</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>ntlmv2hash</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>challenge_client</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>ntlmdata</name></name> <modifier>*</modifier></type><name>ntlm</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>ntresp</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>ntresp_len</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURLcode</name></type> <name>Curl_ntlm_core_mk_lmv2_resp</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>ntlmv2hash</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>challenge_client</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>challenge_server</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>lmresp</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

</unit>
