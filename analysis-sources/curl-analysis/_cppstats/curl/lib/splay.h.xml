<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats\curl\lib\splay.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl_setup.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"timeval.h"</cpp:file></cpp:include>

<struct>struct <name>Curl_tree</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>Curl_tree</name></name> <modifier>*</modifier></type><name>smaller</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name><name>struct</name> <name>Curl_tree</name></name> <modifier>*</modifier></type><name>larger</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name><name>struct</name> <name>Curl_tree</name></name> <modifier>*</modifier></type><name>samen</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name><name>struct</name> <name>Curl_tree</name></name> <modifier>*</modifier></type><name>samep</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name><name>struct</name> <name>curltime</name></name></type> <name>key</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>payload</name></decl>;</decl_stmt> 

}</block>;</struct>

<function_decl><type><name><name>struct</name> <name>Curl_tree</name></name> <modifier>*</modifier></type><name>Curl_splay</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>curltime</name></name></type> <name>i</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>Curl_tree</name></name> <modifier>*</modifier></type><name>t</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>struct</name> <name>Curl_tree</name></name> <modifier>*</modifier></type><name>Curl_splayinsert</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>curltime</name></name></type> <name>key</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>Curl_tree</name></name> <modifier>*</modifier></type><name>t</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>Curl_tree</name></name> <modifier>*</modifier></type><name>newnode</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>

struct Curl_tree *Curl_splayremove(struct curltime key,

struct Curl_tree *t,

struct Curl_tree **removed);

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name><name>struct</name> <name>Curl_tree</name></name> <modifier>*</modifier></type><name>Curl_splaygetbest</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>curltime</name></name></type> <name>key</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>Curl_tree</name></name> <modifier>*</modifier></type><name>t</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>Curl_tree</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>removed</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>Curl_splayremovebyaddr</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Curl_tree</name></name> <modifier>*</modifier></type><name>t</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>Curl_tree</name></name> <modifier>*</modifier></type><name>removenode</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>Curl_tree</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>newroot</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Curl_splaycomparekeys</name><parameter_list>(<parameter><type><name>i</name></type></parameter>,<parameter><type><name>j</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>( ((i.tv_sec) &lt; (j.tv_sec)) ? -1 : ( ((i.tv_sec) &gt; (j.tv_sec)) ? 1 : ( ((i.tv_usec) &lt; (j.tv_usec)) ? -1 : ( ((i.tv_usec) &gt; (j.tv_usec)) ? 1 : 0))))</cpp:value></cpp:define>

</unit>
