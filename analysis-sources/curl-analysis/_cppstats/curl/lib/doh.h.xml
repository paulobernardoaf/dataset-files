<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats\curl\lib\doh.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"urldata.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl_addrinfo.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CURL_DISABLE_DOH</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>Curl_addrinfo</name> <modifier>*</modifier></type><name>Curl_doh</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>connectdata</name></name> <modifier>*</modifier></type><name>conn</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>hostname</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>port</name></decl></parameter>,

<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>waitp</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURLcode</name></type> <name>Curl_doh_is_resolved</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>connectdata</name></name> <modifier>*</modifier></type><name>conn</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>Curl_dns_entry</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>dns</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>Curl_doh_getsock</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>connectdata</name></name> <modifier>*</modifier></type><name>conn</name></decl></parameter>, <parameter><decl><type><name>curl_socket_t</name> <modifier>*</modifier></type><name>socks</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><enum>enum <block>{

<decl><name>DOH_OK</name></decl>,

<decl><name>DOH_DNS_BAD_LABEL</name></decl>, 

<decl><name>DOH_DNS_OUT_OF_RANGE</name></decl>, 

<decl><name>DOH_DNS_LABEL_LOOP</name></decl>, 

<decl><name>DOH_TOO_SMALL_BUFFER</name></decl>, 

<decl><name>DOH_OUT_OF_MEM</name></decl>, 

<decl><name>DOH_DNS_RDATA_LEN</name></decl>, 

<decl><name>DOH_DNS_MALFORMAT</name></decl>, 

<decl><name>DOH_DNS_BAD_RCODE</name></decl>, 

<decl><name>DOH_DNS_UNEXPECTED_TYPE</name></decl>, 

<decl><name>DOH_DNS_UNEXPECTED_CLASS</name></decl>, 

<decl><name>DOH_NO_CONTENT</name></decl>, 

<decl><name>DOH_DNS_BAD_ID</name></decl>, 

<decl><name>DOH_DNS_NAME_TOO_LONG</name></decl> 

}</block></enum></type> <name>DOHcode</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{

<decl><name>DNS_TYPE_A</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>DNS_TYPE_NS</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>DNS_TYPE_CNAME</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,

<decl><name>DNS_TYPE_AAAA</name> <init>= <expr><literal type="number">28</literal></expr></init></decl>,

<decl><name>DNS_TYPE_DNAME</name> <init>= <expr><literal type="number">39</literal></expr></init></decl> 

}</block></enum></type> <name>DNStype</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DOH_MAX_ADDR</name></cpp:macro> <cpp:value>24</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DOH_MAX_CNAME</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<struct>struct <name>cnamestore</name> <block>{

<decl_stmt><decl><type><name>size_t</name></type> <name>len</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>alloc</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>size_t</name></type> <name>allocsize</name></decl>;</decl_stmt> 

}</block>;</struct>

<struct>struct <name>dohaddr</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>type</name></decl>;</decl_stmt>

<union>union <block>{

<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>v4</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>v6</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

}</block> <decl><name>ip</name></decl>;</union>

}</block>;</struct>

<struct>struct <name>dohentry</name> <block>{

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>ttl</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>numaddr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>dohaddr</name></name></type> <name><name>addr</name><index>[<expr><name>DOH_MAX_ADDR</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>numcname</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>cnamestore</name></name></type> <name><name>cname</name><index>[<expr><name>DOH_MAX_CNAME</name></expr>]</index></name></decl>;</decl_stmt>

}</block>;</struct>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>DEBUGBUILD</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>DOHcode</name></type> <name>doh_encode</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>host</name></decl></parameter>,

<parameter><decl><type><name>DNStype</name></type> <name>dnstype</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>dnsp</name></decl></parameter>, 

<parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>, 

<parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>olen</name></decl></parameter>)</parameter_list>;</function_decl> 

<function_decl><type><name>DOHcode</name></type> <name>doh_decode</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>doh</name></decl></parameter>,

<parameter><decl><type><name>size_t</name></type> <name>dohlen</name></decl></parameter>,

<parameter><decl><type><name>DNStype</name></type> <name>dnstype</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>dohentry</name></name> <modifier>*</modifier></type><name>d</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>de_cleanup</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>dohentry</name></name> <modifier>*</modifier></type><name>d</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Curl_doh</name><parameter_list>(<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>,<parameter><type><name>c</name></type></parameter>,<parameter><type><name>d</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>NULL</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Curl_doh_is_resolved</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>CURLE_COULDNT_RESOLVE_HOST</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
