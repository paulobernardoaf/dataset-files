<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats\curl\lib\mime.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl_setup.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MIME_RAND_BOUNDARY_CHARS</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_ENCODED_LINE_LENGTH</name></cpp:macro> <cpp:value>76</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ENCODING_BUFFER_SIZE</name></cpp:macro> <cpp:value>256</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MIME_USERHEADERS_OWNER</name></cpp:macro> <cpp:value>(1 &lt;&lt; 0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MIME_BODY_ONLY</name></cpp:macro> <cpp:value>(1 &lt;&lt; 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MIME_FAST_READ</name></cpp:macro> <cpp:value>(1 &lt;&lt; 2)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FILE_CONTENTTYPE_DEFAULT</name></cpp:macro> <cpp:value>"application/octet-stream"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MULTIPART_CONTENTTYPE_DEFAULT</name></cpp:macro> <cpp:value>"multipart/mixed"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DISPOSITION_DEFAULT</name></cpp:macro> <cpp:value>"attachment"</cpp:value></cpp:define>

<enum>enum <name>mimekind</name> <block>{

<decl><name>MIMEKIND_NONE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, 

<decl><name>MIMEKIND_DATA</name></decl>, 

<decl><name>MIMEKIND_FILE</name></decl>, 

<decl><name>MIMEKIND_CALLBACK</name></decl>, 

<decl><name>MIMEKIND_MULTIPART</name></decl>, 

<decl><name>MIMEKIND_LAST</name></decl>

}</block>;</enum>

<enum>enum <name>mimestate</name> <block>{

<decl><name>MIMESTATE_BEGIN</name></decl>, 

<decl><name>MIMESTATE_CURLHEADERS</name></decl>, 

<decl><name>MIMESTATE_USERHEADERS</name></decl>, 

<decl><name>MIMESTATE_EOH</name></decl>, 

<decl><name>MIMESTATE_BODY</name></decl>, 

<decl><name>MIMESTATE_BOUNDARY1</name></decl>, 

<decl><name>MIMESTATE_BOUNDARY2</name></decl>, 

<decl><name>MIMESTATE_CONTENT</name></decl>, 

<decl><name>MIMESTATE_END</name></decl>, 

<decl><name>MIMESTATE_LAST</name></decl>

}</block>;</enum>

<enum>enum <name>mimestrategy</name> <block>{

<decl><name>MIMESTRATEGY_MAIL</name></decl>, 

<decl><name>MIMESTRATEGY_FORM</name></decl>, 

<decl><name>MIMESTRATEGY_LAST</name></decl>

}</block>;</enum>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>name</name></decl>;</decl_stmt> 

<function_decl><type><name>size_t</name></type> (<modifier>*</modifier><name>encodefunc</name>)<parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>ateof</name></decl></parameter>,

<parameter><decl><type><name>curl_mimepart</name> <modifier>*</modifier></type><name>part</name></decl></parameter>)</parameter_list>;</function_decl> 

<function_decl><type><name>curl_off_t</name></type> (<modifier>*</modifier><name>sizefunc</name>)<parameter_list>(<parameter><decl><type><name>curl_mimepart</name> <modifier>*</modifier></type><name>part</name></decl></parameter>)</parameter_list>;</function_decl> 

}</block></struct></type> <name>mime_encoder</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>size_t</name></type> <name>pos</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>size_t</name></type> <name>bufbeg</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>size_t</name></type> <name>bufend</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>char</name></type> <name><name>buf</name><index>[<expr><name>ENCODING_BUFFER_SIZE</name></expr>]</index></name></decl>;</decl_stmt> 

}</block></struct></type> <name>mime_encoder_state</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name><name>enum</name> <name>mimestate</name></name></type> <name>state</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>curl_off_t</name></type> <name>offset</name></decl>;</decl_stmt> 

}</block></struct></type> <name>mime_state</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MIME_BOUNDARY_LEN</name></cpp:macro> <cpp:value>(24 + MIME_RAND_BOUNDARY_CHARS + 1)</cpp:value></cpp:define>

<struct>struct <name>curl_mime_s</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>Curl_easy</name></name> <modifier>*</modifier></type><name>easy</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>curl_mimepart</name> <modifier>*</modifier></type><name>parent</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>curl_mimepart</name> <modifier>*</modifier></type><name>firstpart</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>curl_mimepart</name> <modifier>*</modifier></type><name>lastpart</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>char</name></type> <name><name>boundary</name><index>[<expr><name>MIME_BOUNDARY_LEN</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>mime_state</name></type> <name>state</name></decl>;</decl_stmt> 

}</block>;</struct>

<struct>struct <name>curl_mimepart_s</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>Curl_easy</name></name> <modifier>*</modifier></type><name>easy</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>curl_mime</name> <modifier>*</modifier></type><name>parent</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>curl_mimepart</name> <modifier>*</modifier></type><name>nextpart</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name><name>enum</name> <name>mimekind</name></name></type> <name>kind</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>curl_read_callback</name></type> <name>readfunc</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>curl_seek_callback</name></type> <name>seekfunc</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>curl_free_callback</name></type> <name>freefunc</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>FILE</name> <modifier>*</modifier></type><name>fp</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name><name>struct</name> <name>curl_slist</name></name> <modifier>*</modifier></type><name>curlheaders</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name><name>struct</name> <name>curl_slist</name></name> <modifier>*</modifier></type><name>userheaders</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>mimetype</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>filename</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>curl_off_t</name></type> <name>datasize</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>flags</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>mime_state</name></type> <name>state</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><specifier>const</specifier> <name>mime_encoder</name> <modifier>*</modifier></type><name>encoder</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>mime_encoder_state</name></type> <name>encstate</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>size_t</name></type> <name>lastreadstatus</name></decl>;</decl_stmt> 

}</block>;</struct>

<function_decl><type><name>CURLcode</name></type> <name>Curl_mime_add_header</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>curl_slist</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>slp</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>(</operator><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CURL_DISABLE_HTTP</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CURL_DISABLE_MIME</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>||</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CURL_DISABLE_SMTP</name></expr></argument>)</argument_list></call> <operator>||</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CURL_DISABLE_IMAP</name></expr></argument>)</argument_list></call></expr></cpp:if>

<function_decl><type><name>void</name></type> <name>Curl_mime_initpart</name><parameter_list>(<parameter><decl><type><name>curl_mimepart</name> <modifier>*</modifier></type><name>part</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>Curl_easy</name></name> <modifier>*</modifier></type><name>easy</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>Curl_mime_cleanpart</name><parameter_list>(<parameter><decl><type><name>curl_mimepart</name> <modifier>*</modifier></type><name>part</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURLcode</name></type> <name>Curl_mime_duppart</name><parameter_list>(<parameter><decl><type><name>curl_mimepart</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>curl_mimepart</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURLcode</name></type> <name>Curl_mime_set_subparts</name><parameter_list>(<parameter><decl><type><name>curl_mimepart</name> <modifier>*</modifier></type><name>part</name></decl></parameter>,

<parameter><decl><type><name>curl_mime</name> <modifier>*</modifier></type><name>subparts</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>take_ownership</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURLcode</name></type> <name>Curl_mime_prepare_headers</name><parameter_list>(<parameter><decl><type><name>curl_mimepart</name> <modifier>*</modifier></type><name>part</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>contenttype</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>disposition</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>mimestrategy</name></name></type> <name>strategy</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>curl_off_t</name></type> <name>Curl_mime_size</name><parameter_list>(<parameter><decl><type><name>curl_mimepart</name> <modifier>*</modifier></type><name>part</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>size_t</name></type> <name>Curl_mime_read</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>nitems</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>instream</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURLcode</name></type> <name>Curl_mime_rewind</name><parameter_list>(<parameter><decl><type><name>curl_mimepart</name> <modifier>*</modifier></type><name>part</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>Curl_mime_contenttype</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>Curl_mime_unpause</name><parameter_list>(<parameter><decl><type><name>curl_mimepart</name> <modifier>*</modifier></type><name>part</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Curl_mime_initpart</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>)</parameter_list></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Curl_mime_cleanpart</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Curl_mime_duppart</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>CURLE_OK</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Curl_mime_set_subparts</name><parameter_list>(<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>,<parameter><type><name>c</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>CURLE_NOT_BUILT_IN</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Curl_mime_prepare_headers</name><parameter_list>(<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>,<parameter><type><name>c</name></type></parameter>,<parameter><type><name>d</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>CURLE_NOT_BUILT_IN</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Curl_mime_size</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(curl_off_t) -1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Curl_mime_read</name></cpp:macro> <cpp:value>NULL</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Curl_mime_rewind</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((void)x, CURLE_NOT_BUILT_IN)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Curl_mime_unpause</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
