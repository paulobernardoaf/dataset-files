<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats\curl\lib\psl.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl_setup.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;curl/curl.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>USE_LIBPSL</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"psl.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"share.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl_printf.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl_memory.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"memdebug.h"</cpp:file></cpp:include>

<function><type><name>void</name></type> <name>Curl_psl_destroy</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>PslCache</name></name> <modifier>*</modifier></type><name>pslcache</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if<condition>(<expr><name><name>pslcache</name><operator>-&gt;</operator><name>psl</name></name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><name><name>pslcache</name><operator>-&gt;</operator><name>dynamic</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>psl_free</name><argument_list>(<argument><expr><operator>(</operator><name>psl_ctx_t</name> <operator>*</operator><operator>)</operator> <name><name>pslcache</name><operator>-&gt;</operator><name>psl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>pslcache</name><operator>-&gt;</operator><name>psl</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>pslcache</name><operator>-&gt;</operator><name>dynamic</name></name> <operator>=</operator> <name>FALSE</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>time_t</name></type> <name>now_seconds</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>curltime</name></name></type> <name>now</name> <init>= <expr><call><name>Curl_now</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><name><name>now</name><operator>.</operator><name>tv_sec</name></name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>psl_ctx_t</name> <modifier>*</modifier></type><name>Curl_psl_use</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Curl_easy</name></name> <modifier>*</modifier></type><name>easy</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>PslCache</name></name> <modifier>*</modifier></type><name>pslcache</name> <init>= <expr><name><name>easy</name><operator>-&gt;</operator><name>psl</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>psl_ctx_t</name> <modifier>*</modifier></type><name>psl</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>time_t</name></type> <name>now</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>pslcache</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>Curl_share_lock</name><argument_list>(<argument><expr><name>easy</name></expr></argument>, <argument><expr><name>CURL_LOCK_DATA_PSL</name></expr></argument>, <argument><expr><name>CURL_LOCK_ACCESS_SHARED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>now</name> <operator>=</operator> <call><name>now_seconds</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name><name>pslcache</name><operator>-&gt;</operator><name>psl</name></name> <operator>||</operator> <name><name>pslcache</name><operator>-&gt;</operator><name>expires</name></name> <operator>&lt;=</operator> <name>now</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>Curl_share_unlock</name><argument_list>(<argument><expr><name>easy</name></expr></argument>, <argument><expr><name>CURL_LOCK_DATA_PSL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>Curl_share_lock</name><argument_list>(<argument><expr><name>easy</name></expr></argument>, <argument><expr><name>CURL_LOCK_DATA_PSL</name></expr></argument>, <argument><expr><name>CURL_LOCK_ACCESS_SINGLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>now</name> <operator>=</operator> <call><name>now_seconds</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name><name>pslcache</name><operator>-&gt;</operator><name>psl</name></name> <operator>||</operator> <name><name>pslcache</name><operator>-&gt;</operator><name>expires</name></name> <operator>&lt;=</operator> <name>now</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>bool</name></type> <name>dynamic</name> <init>= <expr><name>FALSE</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>time_t</name></type> <name>expires</name> <init>= <expr><name>TIME_T_MAX</name></expr></init></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>PSL_VERSION_NUMBER</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name>PSL_VERSION_NUMBER</name> <operator>&gt;=</operator> <literal type="number">0x001000</literal></expr></cpp:if>

<expr_stmt><expr><name>psl</name> <operator>=</operator> <call><name>psl_latest</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dynamic</name> <operator>=</operator> <name>psl</name> <operator>!=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name>expires</name> <operator>=</operator> <ternary><condition><expr><name>now</name> <operator>&lt;</operator> <name>TIME_T_MAX</name> <operator>-</operator> <name>PSL_TTL</name></expr>?</condition><then> <expr><name>now</name> <operator>+</operator> <name>PSL_TTL</name></expr></then><else>: <expr><name>TIME_T_MAX</name></expr></else></ternary></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>psl</name> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>pslcache</name><operator>-&gt;</operator><name>dynamic</name></name></expr>)</condition><block type="pseudo"><block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><name>psl</name> <operator>=</operator> <call><name>psl_builtin</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name>psl</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>Curl_psl_destroy</name><argument_list>(<argument><expr><name>pslcache</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>pslcache</name><operator>-&gt;</operator><name>psl</name></name> <operator>=</operator> <name>psl</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>pslcache</name><operator>-&gt;</operator><name>dynamic</name></name> <operator>=</operator> <name>dynamic</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>pslcache</name><operator>-&gt;</operator><name>expires</name></name> <operator>=</operator> <name>expires</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>Curl_share_unlock</name><argument_list>(<argument><expr><name>easy</name></expr></argument>, <argument><expr><name>CURL_LOCK_DATA_PSL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>Curl_share_lock</name><argument_list>(<argument><expr><name>easy</name></expr></argument>, <argument><expr><name>CURL_LOCK_DATA_PSL</name></expr></argument>, <argument><expr><name>CURL_LOCK_ACCESS_SHARED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>psl</name> <operator>=</operator> <name><name>pslcache</name><operator>-&gt;</operator><name>psl</name></name></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>psl</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>Curl_share_unlock</name><argument_list>(<argument><expr><name>easy</name></expr></argument>, <argument><expr><name>CURL_LOCK_DATA_PSL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>psl</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>Curl_psl_release</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Curl_easy</name></name> <modifier>*</modifier></type><name>easy</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>Curl_share_unlock</name><argument_list>(<argument><expr><name>easy</name></expr></argument>, <argument><expr><name>CURL_LOCK_DATA_PSL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

</unit>
