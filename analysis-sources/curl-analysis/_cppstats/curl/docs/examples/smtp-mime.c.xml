<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats\curl\docs\examples\smtp-mime.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;curl/curl.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FROM</name></cpp:macro> <cpp:value>"&lt;sender@example.org&gt;"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TO</name></cpp:macro> <cpp:value>"&lt;addressee@example.net&gt;"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CC</name></cpp:macro> <cpp:value>"&lt;info@example.org&gt;"</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>headers_text</name><index>[]</index></name> <init>= <expr><block>{

<expr><literal type="string">"Date: Tue, 22 Aug 2017 14:08:43 +0100"</literal></expr>,

<expr><literal type="string">"To: "</literal> <name>TO</name></expr>,

<expr><literal type="string">"From: "</literal> <name>FROM</name> <literal type="string">" (Example User)"</literal></expr>,

<expr><literal type="string">"Cc: "</literal> <name>CC</name> <literal type="string">" (Another example User)"</literal></expr>,

<expr><literal type="string">"Message-ID: &lt;dcd7cb36-11db-487a-9f3a-e652a9458efd@"</literal>

<literal type="string">"rfcpedant.example.org&gt;"</literal></expr>,

<expr><literal type="string">"Subject: example sending a MIME-formatted message"</literal></expr>,

<expr><name>NULL</name></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name></type> <name><name>inline_text</name><index>[]</index></name> <init>=

<expr><literal type="string">"This is the inline text message of the e-mail.\r\n"</literal>

<literal type="string">"\r\n"</literal>

<literal type="string">" It could be a lot of lines that would be displayed in an e-mail\r\n"</literal>

<literal type="string">"viewer that is not able to handle HTML.\r\n"</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name></type> <name><name>inline_html</name><index>[]</index></name> <init>=

<expr><literal type="string">"&lt;html&gt;&lt;body&gt;\r\n"</literal>

<literal type="string">"&lt;p&gt;This is the inline &lt;b&gt;HTML&lt;/b&gt; message of the e-mail.&lt;/p&gt;"</literal>

<literal type="string">"&lt;br /&gt;\r\n"</literal>

<literal type="string">"&lt;p&gt;It could be a lot of HTML data that would be displayed by "</literal>

<literal type="string">"e-mail viewers able to handle HTML.&lt;/p&gt;"</literal>

<literal type="string">"&lt;/body&gt;&lt;/html&gt;\r\n"</literal></expr></init></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>CURL</name> <modifier>*</modifier></type><name>curl</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>CURLcode</name></type> <name>res</name> <init>= <expr><name>CURLE_OK</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>curl</name> <operator>=</operator> <call><name>curl_easy_init</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>curl</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>curl_slist</name></name> <modifier>*</modifier></type><name>headers</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>curl_slist</name></name> <modifier>*</modifier></type><name>recipients</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>curl_slist</name></name> <modifier>*</modifier></type><name>slist</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>curl_mime</name> <modifier>*</modifier></type><name>mime</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>curl_mime</name> <modifier>*</modifier></type><name>alt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>curl_mimepart</name> <modifier>*</modifier></type><name>part</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>cpp</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLOPT_URL</name></expr></argument>, <argument><expr><literal type="string">"smtp://mail.example.com"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLOPT_MAIL_FROM</name></expr></argument>, <argument><expr><name>FROM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>recipients</name> <operator>=</operator> <call><name>curl_slist_append</name><argument_list>(<argument><expr><name>recipients</name></expr></argument>, <argument><expr><name>TO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>recipients</name> <operator>=</operator> <call><name>curl_slist_append</name><argument_list>(<argument><expr><name>recipients</name></expr></argument>, <argument><expr><name>CC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLOPT_MAIL_RCPT</name></expr></argument>, <argument><expr><name>recipients</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for<control>(<init><expr><name>cpp</name> <operator>=</operator> <name>headers_text</name></expr>;</init> <condition><expr><operator>*</operator><name>cpp</name></expr>;</condition> <incr><expr><name>cpp</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name>headers</name> <operator>=</operator> <call><name>curl_slist_append</name><argument_list>(<argument><expr><name>headers</name></expr></argument>, <argument><expr><operator>*</operator><name>cpp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLOPT_HTTPHEADER</name></expr></argument>, <argument><expr><name>headers</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mime</name> <operator>=</operator> <call><name>curl_mime_init</name><argument_list>(<argument><expr><name>curl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>alt</name> <operator>=</operator> <call><name>curl_mime_init</name><argument_list>(<argument><expr><name>curl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>part</name> <operator>=</operator> <call><name>curl_mime_addpart</name><argument_list>(<argument><expr><name>alt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>curl_mime_data</name><argument_list>(<argument><expr><name>part</name></expr></argument>, <argument><expr><name>inline_html</name></expr></argument>, <argument><expr><name>CURL_ZERO_TERMINATED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>curl_mime_type</name><argument_list>(<argument><expr><name>part</name></expr></argument>, <argument><expr><literal type="string">"text/html"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>part</name> <operator>=</operator> <call><name>curl_mime_addpart</name><argument_list>(<argument><expr><name>alt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>curl_mime_data</name><argument_list>(<argument><expr><name>part</name></expr></argument>, <argument><expr><name>inline_text</name></expr></argument>, <argument><expr><name>CURL_ZERO_TERMINATED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>part</name> <operator>=</operator> <call><name>curl_mime_addpart</name><argument_list>(<argument><expr><name>mime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>curl_mime_subparts</name><argument_list>(<argument><expr><name>part</name></expr></argument>, <argument><expr><name>alt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>curl_mime_type</name><argument_list>(<argument><expr><name>part</name></expr></argument>, <argument><expr><literal type="string">"multipart/alternative"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>slist</name> <operator>=</operator> <call><name>curl_slist_append</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"Content-Disposition: inline"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>curl_mime_headers</name><argument_list>(<argument><expr><name>part</name></expr></argument>, <argument><expr><name>slist</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>part</name> <operator>=</operator> <call><name>curl_mime_addpart</name><argument_list>(<argument><expr><name>mime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>curl_mime_filedata</name><argument_list>(<argument><expr><name>part</name></expr></argument>, <argument><expr><literal type="string">"smtp-mime.c"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLOPT_MIMEPOST</name></expr></argument>, <argument><expr><name>mime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>curl_easy_perform</name><argument_list>(<argument><expr><name>curl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>res</name> <operator>!=</operator> <name>CURLE_OK</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"curl_easy_perform() failed: %s\n"</literal></expr></argument>,

<argument><expr><call><name>curl_easy_strerror</name><argument_list>(<argument><expr><name>res</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>curl_slist_free_all</name><argument_list>(<argument><expr><name>recipients</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>curl_slist_free_all</name><argument_list>(<argument><expr><name>headers</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>curl_easy_cleanup</name><argument_list>(<argument><expr><name>curl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>curl_mime_free</name><argument_list>(<argument><expr><name>mime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><operator>(</operator><name>int</name><operator>)</operator><name>res</name></expr>;</return>

</block_content>}</block></function>

</unit>
