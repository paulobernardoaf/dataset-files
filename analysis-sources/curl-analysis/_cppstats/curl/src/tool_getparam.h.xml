<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats\curl\src\tool_getparam.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tool_setup.h"</cpp:file></cpp:include>

<typedef>typedef <type><enum>enum <block>{

<decl><name>PARAM_OK</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>PARAM_OPTION_AMBIGUOUS</name></decl>,

<decl><name>PARAM_OPTION_UNKNOWN</name></decl>,

<decl><name>PARAM_REQUIRES_PARAMETER</name></decl>,

<decl><name>PARAM_BAD_USE</name></decl>,

<decl><name>PARAM_HELP_REQUESTED</name></decl>,

<decl><name>PARAM_MANUAL_REQUESTED</name></decl>,

<decl><name>PARAM_VERSION_INFO_REQUESTED</name></decl>,

<decl><name>PARAM_ENGINES_REQUESTED</name></decl>,

<decl><name>PARAM_GOT_EXTRA_PARAMETER</name></decl>,

<decl><name>PARAM_BAD_NUMERIC</name></decl>,

<decl><name>PARAM_NEGATIVE_NUMERIC</name></decl>,

<decl><name>PARAM_LIBCURL_DOESNT_SUPPORT</name></decl>,

<decl><name>PARAM_LIBCURL_UNSUPPORTED_PROTOCOL</name></decl>,

<decl><name>PARAM_NO_MEM</name></decl>,

<decl><name>PARAM_NEXT_OPERATION</name></decl>,

<decl><name>PARAM_NO_PREFIX</name></decl>,

<decl><name>PARAM_NUMBER_TOO_LARGE</name></decl>,

<decl><name>PARAM_NO_NOT_BOOLEAN</name></decl>,

<decl><name>PARAM_LAST</name></decl>

}</block></enum></type> <name>ParameterError</name>;</typedef>

<struct_decl>struct <name>GlobalConfig</name>;</struct_decl>

<struct_decl>struct <name>OperationConfig</name>;</struct_decl>

<function_decl><type><name>ParameterError</name></type> <name>getparameter</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>flag</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>nextarg</name></decl></parameter>, <parameter><decl><type><name>bool</name> <modifier>*</modifier></type><name>usedarg</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>GlobalConfig</name></name> <modifier>*</modifier></type><name>global</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>OperationConfig</name></name> <modifier>*</modifier></type><name>operation</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>UNITTESTS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>void</name></type> <name>parse_cert_parameter</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cert_parameter</name></decl></parameter>,

<parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>certname</name></decl></parameter>,

<parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>passphrase</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>ParameterError</name></type> <name>parse_args</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>GlobalConfig</name></name> <modifier>*</modifier></type><name>config</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>,

<parameter><decl><type><name>argv_item_t</name></type> <name><name>argv</name><index>[]</index></name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
