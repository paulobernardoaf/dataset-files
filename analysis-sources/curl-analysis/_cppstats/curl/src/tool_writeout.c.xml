<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats\curl\src\tool_writeout.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tool_setup.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ENABLE_CURLX_PRINTF</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curlx.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tool_cfgable.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tool_writeout.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tool_writeout_json.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"memdebug.h"</cpp:file></cpp:include> 

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name><name>struct</name> <name>writeoutvar</name></name></type> <name><name>variables</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{<expr><literal type="string">"url_effective"</literal></expr>, <expr><name>VAR_EFFECTIVE_URL</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_EFFECTIVE_URL</name></expr>, <expr><name>JSON_STRING</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"http_code"</literal></expr>, <expr><name>VAR_HTTP_CODE</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_RESPONSE_CODE</name></expr>, <expr><name>JSON_LONG</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"response_code"</literal></expr>, <expr><name>VAR_HTTP_CODE</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_RESPONSE_CODE</name></expr>, <expr><name>JSON_LONG</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"http_connect"</literal></expr>, <expr><name>VAR_HTTP_CODE_PROXY</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_HTTP_CONNECTCODE</name></expr>, <expr><name>JSON_LONG</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"time_total"</literal></expr>, <expr><name>VAR_TOTAL_TIME</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_TOTAL_TIME_T</name></expr>, <expr><name>JSON_TIME</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"time_namelookup"</literal></expr>, <expr><name>VAR_NAMELOOKUP_TIME</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_NAMELOOKUP_TIME_T</name></expr>, <expr><name>JSON_TIME</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"time_connect"</literal></expr>, <expr><name>VAR_CONNECT_TIME</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_CONNECT_TIME_T</name></expr>, <expr><name>JSON_TIME</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"time_appconnect"</literal></expr>, <expr><name>VAR_APPCONNECT_TIME</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_APPCONNECT_TIME_T</name></expr>, <expr><name>JSON_TIME</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"time_pretransfer"</literal></expr>, <expr><name>VAR_PRETRANSFER_TIME</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_PRETRANSFER_TIME_T</name></expr>, <expr><name>JSON_TIME</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"time_starttransfer"</literal></expr>, <expr><name>VAR_STARTTRANSFER_TIME</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_STARTTRANSFER_TIME_T</name></expr>, <expr><name>JSON_TIME</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"size_header"</literal></expr>, <expr><name>VAR_HEADER_SIZE</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_HEADER_SIZE</name></expr>, <expr><name>JSON_LONG</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"size_request"</literal></expr>, <expr><name>VAR_REQUEST_SIZE</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_REQUEST_SIZE</name></expr>, <expr><name>JSON_LONG</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"size_download"</literal></expr>, <expr><name>VAR_SIZE_DOWNLOAD</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_SIZE_DOWNLOAD_T</name></expr>, <expr><name>JSON_OFFSET</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"size_upload"</literal></expr>, <expr><name>VAR_SIZE_UPLOAD</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_SIZE_UPLOAD_T</name></expr>, <expr><name>JSON_OFFSET</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"speed_download"</literal></expr>, <expr><name>VAR_SPEED_DOWNLOAD</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_SPEED_DOWNLOAD_T</name></expr>, <expr><name>JSON_OFFSET</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"speed_upload"</literal></expr>, <expr><name>VAR_SPEED_UPLOAD</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_SPEED_UPLOAD_T</name></expr>, <expr><name>JSON_OFFSET</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"content_type"</literal></expr>, <expr><name>VAR_CONTENT_TYPE</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_CONTENT_TYPE</name></expr>, <expr><name>JSON_STRING</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"num_connects"</literal></expr>, <expr><name>VAR_NUM_CONNECTS</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_NUM_CONNECTS</name></expr>, <expr><name>JSON_LONG</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"time_redirect"</literal></expr>, <expr><name>VAR_REDIRECT_TIME</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_REDIRECT_TIME_T</name></expr>, <expr><name>JSON_TIME</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"num_redirects"</literal></expr>, <expr><name>VAR_REDIRECT_COUNT</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_REDIRECT_COUNT</name></expr>, <expr><name>JSON_LONG</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"ftp_entry_path"</literal></expr>, <expr><name>VAR_FTP_ENTRY_PATH</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_FTP_ENTRY_PATH</name></expr>, <expr><name>JSON_STRING</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"redirect_url"</literal></expr>, <expr><name>VAR_REDIRECT_URL</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_REDIRECT_URL</name></expr>, <expr><name>JSON_STRING</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"ssl_verify_result"</literal></expr>, <expr><name>VAR_SSL_VERIFY_RESULT</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_SSL_VERIFYRESULT</name></expr>, <expr><name>JSON_LONG</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"proxy_ssl_verify_result"</literal></expr>, <expr><name>VAR_PROXY_SSL_VERIFY_RESULT</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_PROXY_SSL_VERIFYRESULT</name></expr>, <expr><name>JSON_LONG</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"filename_effective"</literal></expr>, <expr><name>VAR_EFFECTIVE_FILENAME</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><literal type="number">0</literal></expr>, <expr><name>JSON_FILENAME</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"remote_ip"</literal></expr>, <expr><name>VAR_PRIMARY_IP</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_PRIMARY_IP</name></expr>, <expr><name>JSON_STRING</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"remote_port"</literal></expr>, <expr><name>VAR_PRIMARY_PORT</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_PRIMARY_PORT</name></expr>, <expr><name>JSON_LONG</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"local_ip"</literal></expr>, <expr><name>VAR_LOCAL_IP</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_LOCAL_IP</name></expr>, <expr><name>JSON_STRING</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"local_port"</literal></expr>, <expr><name>VAR_LOCAL_PORT</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_LOCAL_PORT</name></expr>, <expr><name>JSON_LONG</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"http_version"</literal></expr>, <expr><name>VAR_HTTP_VERSION</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_HTTP_VERSION</name></expr>, <expr><name>JSON_VERSION</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"scheme"</literal></expr>, <expr><name>VAR_SCHEME</name></expr>, <expr><literal type="number">0</literal></expr>,

<expr><name>CURLINFO_SCHEME</name></expr>, <expr><name>JSON_STRING</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"stdout"</literal></expr>, <expr><name>VAR_STDOUT</name></expr>, <expr><literal type="number">1</literal></expr>,

<expr><literal type="number">0</literal></expr>, <expr><name>JSON_NONE</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"stderr"</literal></expr>, <expr><name>VAR_STDERR</name></expr>, <expr><literal type="number">1</literal></expr>,

<expr><literal type="number">0</literal></expr>, <expr><name>JSON_NONE</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"json"</literal></expr>, <expr><name>VAR_JSON</name></expr>, <expr><literal type="number">1</literal></expr>,

<expr><literal type="number">0</literal></expr>, <expr><name>JSON_NONE</name></expr>}</block></expr>,

<expr><block>{<expr><name>NULL</name></expr>, <expr><name>VAR_NONE</name></expr>, <expr><literal type="number">1</literal></expr>,

<expr><literal type="number">0</literal></expr>, <expr><name>JSON_NONE</name></expr>}</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<function><type><name>void</name></type> <name>ourWriteOut</name><parameter_list>(<parameter><decl><type><name>CURL</name> <modifier>*</modifier></type><name>curl</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>OutStruct</name></name> <modifier>*</modifier></type><name>outs</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>writeinfo</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>FILE</name> <modifier>*</modifier></type><name>stream</name> <init>= <expr><name>stdout</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ptr</name> <init>= <expr><name>writeinfo</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>stringp</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>long</name></type> <name>longinfo</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>doubleinfo</name></decl>;</decl_stmt>

<while>while<condition>(<expr><name>ptr</name> <operator>&amp;&amp;</operator> <operator>*</operator><name>ptr</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><literal type="char">'%'</literal> <operator>==</operator> <operator>*</operator><name>ptr</name> <operator>&amp;&amp;</operator> <name><name>ptr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><literal type="char">'%'</literal> <operator>==</operator> <name><name>ptr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>fputc</name><argument_list>(<argument><expr><literal type="char">'%'</literal></expr></argument>, <argument><expr><name>stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ptr</name> <operator>+=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else <block>{<block_content>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>end</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><literal type="char">'{'</literal> <operator>==</operator> <name><name>ptr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>char</name></type> <name>keepit</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>match</name> <init>= <expr><name>FALSE</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>end</name> <operator>=</operator> <call><name>strchr</name><argument_list>(<argument><expr><name>ptr</name></expr></argument>, <argument><expr><literal type="char">'}'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ptr</name> <operator>+=</operator> <literal type="number">2</literal></expr>;</expr_stmt> 

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>end</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>fputs</name><argument_list>(<argument><expr><literal type="string">"%{"</literal></expr></argument>, <argument><expr><name>stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<continue>continue;</continue>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>keepit</name> <operator>=</operator> <operator>*</operator><name>end</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>end</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt> 

<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name><name>variables</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>name</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><call><name>curl_strequal</name><argument_list>(<argument><expr><name>ptr</name></expr></argument>, <argument><expr><name><name>variables</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>name</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>match</name> <operator>=</operator> <name>TRUE</name></expr>;</expr_stmt>

<switch>switch<condition>(<expr><name><name>variables</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>id</name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>VAR_EFFECTIVE_URL</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><operator>(</operator><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_EFFECTIVE_URL</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>stringp</name></expr></argument>)</argument_list></call><operator>)</operator>

<operator>&amp;&amp;</operator> <name>stringp</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fputs</name><argument_list>(<argument><expr><name>stringp</name></expr></argument>, <argument><expr><name>stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_HTTP_CODE</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_RESPONSE_CODE</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>longinfo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="string">"%03ld"</literal></expr></argument>, <argument><expr><name>longinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_HTTP_CODE_PROXY</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_HTTP_CONNECTCODE</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>longinfo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="string">"%03ld"</literal></expr></argument>, <argument><expr><name>longinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_HEADER_SIZE</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_HEADER_SIZE</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>longinfo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="string">"%ld"</literal></expr></argument>, <argument><expr><name>longinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_REQUEST_SIZE</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_REQUEST_SIZE</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>longinfo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="string">"%ld"</literal></expr></argument>, <argument><expr><name>longinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_NUM_CONNECTS</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_NUM_CONNECTS</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>longinfo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="string">"%ld"</literal></expr></argument>, <argument><expr><name>longinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_REDIRECT_COUNT</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_REDIRECT_COUNT</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>longinfo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="string">"%ld"</literal></expr></argument>, <argument><expr><name>longinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_REDIRECT_TIME</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_REDIRECT_TIME</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>doubleinfo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="string">"%.6f"</literal></expr></argument>, <argument><expr><name>doubleinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_TOTAL_TIME</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_TOTAL_TIME</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>doubleinfo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="string">"%.6f"</literal></expr></argument>, <argument><expr><name>doubleinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_NAMELOOKUP_TIME</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_NAMELOOKUP_TIME</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>doubleinfo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="string">"%.6f"</literal></expr></argument>, <argument><expr><name>doubleinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_CONNECT_TIME</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_CONNECT_TIME</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>doubleinfo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="string">"%.6f"</literal></expr></argument>, <argument><expr><name>doubleinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_APPCONNECT_TIME</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_APPCONNECT_TIME</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>doubleinfo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="string">"%.6f"</literal></expr></argument>, <argument><expr><name>doubleinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_PRETRANSFER_TIME</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_PRETRANSFER_TIME</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>doubleinfo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="string">"%.6f"</literal></expr></argument>, <argument><expr><name>doubleinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_STARTTRANSFER_TIME</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_STARTTRANSFER_TIME</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>doubleinfo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="string">"%.6f"</literal></expr></argument>, <argument><expr><name>doubleinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_SIZE_UPLOAD</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_SIZE_UPLOAD</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>doubleinfo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="string">"%.0f"</literal></expr></argument>, <argument><expr><name>doubleinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_SIZE_DOWNLOAD</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_SIZE_DOWNLOAD</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>doubleinfo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="string">"%.0f"</literal></expr></argument>, <argument><expr><name>doubleinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_SPEED_DOWNLOAD</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_SPEED_DOWNLOAD</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>doubleinfo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="string">"%.3f"</literal></expr></argument>, <argument><expr><name>doubleinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_SPEED_UPLOAD</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_SPEED_UPLOAD</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>doubleinfo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="string">"%.3f"</literal></expr></argument>, <argument><expr><name>doubleinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_CONTENT_TYPE</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><operator>(</operator><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_CONTENT_TYPE</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>stringp</name></expr></argument>)</argument_list></call><operator>)</operator>

<operator>&amp;&amp;</operator> <name>stringp</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fputs</name><argument_list>(<argument><expr><name>stringp</name></expr></argument>, <argument><expr><name>stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_FTP_ENTRY_PATH</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><operator>(</operator><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_FTP_ENTRY_PATH</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>stringp</name></expr></argument>)</argument_list></call><operator>)</operator>

<operator>&amp;&amp;</operator> <name>stringp</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fputs</name><argument_list>(<argument><expr><name>stringp</name></expr></argument>, <argument><expr><name>stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_REDIRECT_URL</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><operator>(</operator><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_REDIRECT_URL</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>stringp</name></expr></argument>)</argument_list></call><operator>)</operator>

<operator>&amp;&amp;</operator> <name>stringp</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fputs</name><argument_list>(<argument><expr><name>stringp</name></expr></argument>, <argument><expr><name>stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_SSL_VERIFY_RESULT</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_SSL_VERIFYRESULT</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>longinfo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="string">"%ld"</literal></expr></argument>, <argument><expr><name>longinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_PROXY_SSL_VERIFY_RESULT</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_PROXY_SSL_VERIFYRESULT</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>longinfo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="string">"%ld"</literal></expr></argument>, <argument><expr><name>longinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_EFFECTIVE_FILENAME</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name><name>outs</name><operator>-&gt;</operator><name>filename</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="string">"%s"</literal></expr></argument>, <argument><expr><name><name>outs</name><operator>-&gt;</operator><name>filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_PRIMARY_IP</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_PRIMARY_IP</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>stringp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="string">"%s"</literal></expr></argument>, <argument><expr><name>stringp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_PRIMARY_PORT</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_PRIMARY_PORT</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>longinfo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="string">"%ld"</literal></expr></argument>, <argument><expr><name>longinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_LOCAL_IP</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_LOCAL_IP</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>stringp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="string">"%s"</literal></expr></argument>, <argument><expr><name>stringp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_LOCAL_PORT</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_LOCAL_PORT</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>longinfo</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="string">"%ld"</literal></expr></argument>, <argument><expr><name>longinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_HTTP_VERSION</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_HTTP_VERSION</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>longinfo</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>version</name> <init>= <expr><literal type="string">"0"</literal></expr></init></decl>;</decl_stmt>

<switch>switch<condition>(<expr><name>longinfo</name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>CURL_HTTP_VERSION_1_0</name></expr>:</case>

<expr_stmt><expr><name>version</name> <operator>=</operator> <literal type="string">"1.0"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURL_HTTP_VERSION_1_1</name></expr>:</case>

<expr_stmt><expr><name>version</name> <operator>=</operator> <literal type="string">"1.1"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURL_HTTP_VERSION_2_0</name></expr>:</case>

<expr_stmt><expr><name>version</name> <operator>=</operator> <literal type="string">"2"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>CURL_HTTP_VERSION_3</name></expr>:</case>

<expr_stmt><expr><name>version</name> <operator>=</operator> <literal type="string">"3"</literal></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></switch>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><name>version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_SCHEME</name></expr>:</case>

<if_stmt><if>if<condition>(<expr><name>CURLE_OK</name> <operator>==</operator>

<call><name>curl_easy_getinfo</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLINFO_SCHEME</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>stringp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><literal type="string">"%s"</literal></expr></argument>, <argument><expr><name>stringp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>VAR_STDOUT</name></expr>:</case>

<expr_stmt><expr><name>stream</name> <operator>=</operator> <name>stdout</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>VAR_STDERR</name></expr>:</case>

<expr_stmt><expr><name>stream</name> <operator>=</operator> <name>stderr</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>VAR_JSON</name></expr>:</case>

<expr_stmt><expr><call><name>ourWriteOutJSON</name><argument_list>(<argument><expr><name>variables</name></expr></argument>, <argument><expr><name>curl</name></expr></argument>, <argument><expr><name>outs</name></expr></argument>, <argument><expr><name>stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<default>default:</default>

<break>break;</break>

</block_content>}</block></switch>

<break>break;</break>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>match</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"curl: unknown --write-out variable: '%s'\n"</literal></expr></argument>, <argument><expr><name>ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>ptr</name> <operator>=</operator> <name>end</name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt> 

<expr_stmt><expr><operator>*</operator><name>end</name> <operator>=</operator> <name>keepit</name></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else <block>{<block_content>

<expr_stmt><expr><call><name>fputc</name><argument_list>(<argument><expr><literal type="char">'%'</literal></expr></argument>, <argument><expr><name>stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>fputc</name><argument_list>(<argument><expr><name><name>ptr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name>stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ptr</name> <operator>+=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></if>

<if type="elseif">else if<condition>(<expr><literal type="char">'\\'</literal> <operator>==</operator> <operator>*</operator><name>ptr</name> <operator>&amp;&amp;</operator> <name><name>ptr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>)</condition> <block>{<block_content>

<switch>switch<condition>(<expr><name><name>ptr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>)</condition> <block>{<block_content>

<case>case <expr><literal type="char">'r'</literal></expr>:</case>

<expr_stmt><expr><call><name>fputc</name><argument_list>(<argument><expr><literal type="char">'\r'</literal></expr></argument>, <argument><expr><name>stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="char">'n'</literal></expr>:</case>

<expr_stmt><expr><call><name>fputc</name><argument_list>(<argument><expr><literal type="char">'\n'</literal></expr></argument>, <argument><expr><name>stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><literal type="char">'t'</literal></expr>:</case>

<expr_stmt><expr><call><name>fputc</name><argument_list>(<argument><expr><literal type="char">'\t'</literal></expr></argument>, <argument><expr><name>stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<default>default:</default>

<expr_stmt><expr><call><name>fputc</name><argument_list>(<argument><expr><operator>*</operator><name>ptr</name></expr></argument>, <argument><expr><name>stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>fputc</name><argument_list>(<argument><expr><name><name>ptr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name>stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></switch>

<expr_stmt><expr><name>ptr</name> <operator>+=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else <block>{<block_content>

<expr_stmt><expr><call><name>fputc</name><argument_list>(<argument><expr><operator>*</operator><name>ptr</name></expr></argument>, <argument><expr><name>stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ptr</name><operator>++</operator></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></while>

</block_content>}</block></function>

</unit>
