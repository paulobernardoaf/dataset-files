<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats\curl\src\tool_cb_see.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tool_setup.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ENABLE_CURLX_PRINTF</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curlx.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tool_cfgable.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tool_cb_see.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"memdebug.h"</cpp:file></cpp:include> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OUR_MAX_SEEK_L</name></cpp:macro> <cpp:value>2147483647L - 1L</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OUR_MAX_SEEK_O</name></cpp:macro> <cpp:value>CURL_OFF_T_C(0x7FFFFFFF) - CURL_OFF_T_C(0x1)</cpp:value></cpp:define>

<function><type><name>int</name></type> <name>tool_seek_cb</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>userdata</name></decl></parameter>, <parameter><decl><type><name>curl_off_t</name></type> <name>offset</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>whence</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>InStruct</name></name> <modifier>*</modifier></type><name>in</name> <init>= <expr><name>userdata</name></expr></init></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive><expr><operator>(</operator><name>CURL_SIZEOF_CURL_OFF_T</name> <operator>&gt;</operator> <name>SIZEOF_OFF_T</name><operator>)</operator> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>USE_WIN32_LARGE_FILES</name></expr></argument>)</argument_list></call></expr></cpp:if>

<if_stmt><if>if<condition>(<expr><name>offset</name> <operator>&gt;</operator> <name>OUR_MAX_SEEK_O</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>curl_off_t</name></type> <name>left</name> <init>= <expr><name>offset</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name>whence</name> <operator>!=</operator> <name>SEEK_SET</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>CURL_SEEKFUNC_FAIL</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name>LSEEK_ERROR</name> <operator>==</operator> <call><name>lseek</name><argument_list>(<argument><expr><name><name>in</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>SEEK_SET</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>CURL_SEEKFUNC_FAIL</name></expr>;</return></block_content></block></if></if_stmt>

<while>while<condition>(<expr><name>left</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>long</name></type> <name>step</name> <init>= <expr><ternary><condition><expr><operator>(</operator><name>left</name> <operator>&gt;</operator> <name>OUR_MAX_SEEK_O</name><operator>)</operator></expr> ?</condition><then> <expr><name>OUR_MAX_SEEK_L</name></expr> </then><else>: <expr><operator>(</operator><name>long</name><operator>)</operator><name>left</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name>LSEEK_ERROR</name> <operator>==</operator> <call><name>lseek</name><argument_list>(<argument><expr><name><name>in</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>, <argument><expr><name>step</name></expr></argument>, <argument><expr><name>SEEK_CUR</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>CURL_SEEKFUNC_FAIL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>left</name> <operator>-=</operator> <name>step</name></expr>;</expr_stmt>

</block_content>}</block></while>

<return>return <expr><name>CURL_SEEKFUNC_OK</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<if_stmt><if>if<condition>(<expr><name>LSEEK_ERROR</name> <operator>==</operator> <call><name>lseek</name><argument_list>(<argument><expr><name><name>in</name><operator>-&gt;</operator><name>fd</name></name></expr></argument>, <argument><expr><name>offset</name></expr></argument>, <argument><expr><name>whence</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>CURL_SEEKFUNC_CANTSEEK</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><name>CURL_SEEKFUNC_OK</name></expr>;</return>

</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>USE_TOOL_FTRUNCATE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__BORLANDC__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_lseeki64</name><parameter_list>(<parameter><type><name>hnd</name></type></parameter>,<parameter><type><name>ofs</name></type></parameter>,<parameter><type><name>whence</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>lseek(hnd,ofs,whence)</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__POCC__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive><expr><operator>(</operator><name>__POCC__</name> <operator>&lt;</operator> <literal type="number">450</literal><operator>)</operator></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_lseeki64</name><parameter_list>(<parameter><type><name>hnd</name></type></parameter>,<parameter><type><name>ofs</name></type></parameter>,<parameter><type><name>whence</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_lseek(hnd,ofs,whence)</cpp:value></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_lseeki64</name><parameter_list>(<parameter><type><name>hnd</name></type></parameter>,<parameter><type><name>ofs</name></type></parameter>,<parameter><type><name>whence</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_lseek64(hnd,ofs,whence)</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32_WCE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>_lseeki64</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_lseeki64</name><parameter_list>(<parameter><type><name>hnd</name></type></parameter>,<parameter><type><name>ofs</name></type></parameter>,<parameter><type><name>whence</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>lseek(hnd,ofs,whence)</cpp:value></cpp:define>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>_get_osfhandle</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_get_osfhandle</name><parameter_list>(<parameter><type><name>fd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(fd)</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><name>int</name></type> <name>tool_ftruncate64</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>, <parameter><decl><type><name>curl_off_t</name></type> <name>where</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>intptr_t</name></type> <name>handle</name> <init>= <expr><call><name>_get_osfhandle</name><argument_list>(<argument><expr><name>fd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><call><name>_lseeki64</name><argument_list>(<argument><expr><name>fd</name></expr></argument>, <argument><expr><name>where</name></expr></argument>, <argument><expr><name>SEEK_SET</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><operator>!</operator><call><name>SetEndOfFile</name><argument_list>(<argument><expr><operator>(</operator><name>HANDLE</name><operator>)</operator><name>handle</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

</unit>
