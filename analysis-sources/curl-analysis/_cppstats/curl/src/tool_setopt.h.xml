<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats\curl\src\tool_setopt.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tool_setup.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tool_formparse.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SETOPT_CHECK</name><parameter_list>(<parameter><type><name>v</name></type></parameter>,<parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { if(!tool_setopt_skip(opt)) { result = (v); if(result) break; } } while(0)</cpp:value></cpp:define>

<function_decl><type><name>bool</name></type> <name>tool_setopt_skip</name><parameter_list>(<parameter><decl><type><name>CURLoption</name></type> <name>tag</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CURL_DISABLE_LIBCURL_OPTION</name></expr></argument>)</argument_list></call></expr></cpp:if>
<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>long</name></type> <name>value</name></decl>;</decl_stmt>

}</block></struct></type> <name>NameValue</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name>value</name></decl>;</decl_stmt>

}</block></struct></type> <name>NameValueUnsigned</name>;</typedef>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>NameValue</name></type> <name><name>setopt_nv_CURLPROXY</name><index>[]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>NameValue</name></type> <name><name>setopt_nv_CURL_SOCKS_PROXY</name><index>[]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>NameValue</name></type> <name><name>setopt_nv_CURL_HTTP_VERSION</name><index>[]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>NameValue</name></type> <name><name>setopt_nv_CURL_SSLVERSION</name><index>[]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>NameValue</name></type> <name><name>setopt_nv_CURL_TIMECOND</name><index>[]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>NameValue</name></type> <name><name>setopt_nv_CURLFTPSSL_CCC</name><index>[]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>NameValue</name></type> <name><name>setopt_nv_CURLUSESSL</name><index>[]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>NameValueUnsigned</name></type> <name><name>setopt_nv_CURLSSLOPT</name><index>[]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>NameValue</name></type> <name><name>setopt_nv_CURL_NETRC</name><index>[]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>NameValue</name></type> <name><name>setopt_nv_CURLPROTO</name><index>[]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>NameValueUnsigned</name></type> <name><name>setopt_nv_CURLAUTH</name><index>[]</index></name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>setopt_nv_CURLOPT_HTTP_VERSION</name></cpp:macro> <cpp:value>setopt_nv_CURL_HTTP_VERSION</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>setopt_nv_CURLOPT_HTTPAUTH</name></cpp:macro> <cpp:value>setopt_nv_CURLAUTH</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>setopt_nv_CURLOPT_SSLVERSION</name></cpp:macro> <cpp:value>setopt_nv_CURL_SSLVERSION</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>setopt_nv_CURLOPT_PROXY_SSLVERSION</name></cpp:macro> <cpp:value>setopt_nv_CURL_SSLVERSION</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>setopt_nv_CURLOPT_TIMECONDITION</name></cpp:macro> <cpp:value>setopt_nv_CURL_TIMECOND</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>setopt_nv_CURLOPT_FTP_SSL_CCC</name></cpp:macro> <cpp:value>setopt_nv_CURLFTPSSL_CCC</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>setopt_nv_CURLOPT_USE_SSL</name></cpp:macro> <cpp:value>setopt_nv_CURLUSESSL</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>setopt_nv_CURLOPT_SSL_OPTIONS</name></cpp:macro> <cpp:value>setopt_nv_CURLSSLOPT</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>setopt_nv_CURLOPT_NETRC</name></cpp:macro> <cpp:value>setopt_nv_CURL_NETRC</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>setopt_nv_CURLOPT_PROTOCOLS</name></cpp:macro> <cpp:value>setopt_nv_CURLPROTO</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>setopt_nv_CURLOPT_REDIR_PROTOCOLS</name></cpp:macro> <cpp:value>setopt_nv_CURLPROTO</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>setopt_nv_CURLOPT_PROXYTYPE</name></cpp:macro> <cpp:value>setopt_nv_CURLPROXY</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>setopt_nv_CURLOPT_PROXYAUTH</name></cpp:macro> <cpp:value>setopt_nv_CURLAUTH</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>setopt_nv_CURLOPT_SOCKS5_AUTH</name></cpp:macro> <cpp:value>setopt_nv_CURLAUTH</cpp:value></cpp:define>

<function_decl><type><name>CURLcode</name></type> <name>tool_setopt_enum</name><parameter_list>(<parameter><decl><type><name>CURL</name> <modifier>*</modifier></type><name>curl</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>GlobalConfig</name></name> <modifier>*</modifier></type><name>config</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>CURLoption</name></type> <name>tag</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>NameValue</name> <modifier>*</modifier></type><name>nv</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>lval</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURLcode</name></type> <name>tool_setopt_flags</name><parameter_list>(<parameter><decl><type><name>CURL</name> <modifier>*</modifier></type><name>curl</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>GlobalConfig</name></name> <modifier>*</modifier></type><name>config</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>CURLoption</name></type> <name>tag</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>NameValue</name> <modifier>*</modifier></type><name>nv</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>lval</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURLcode</name></type> <name>tool_setopt_bitmask</name><parameter_list>(<parameter><decl><type><name>CURL</name> <modifier>*</modifier></type><name>curl</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>GlobalConfig</name></name> <modifier>*</modifier></type><name>config</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>CURLoption</name></type> <name>tag</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>NameValueUnsigned</name> <modifier>*</modifier></type><name>nv</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>lval</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURLcode</name></type> <name>tool_setopt_mimepost</name><parameter_list>(<parameter><decl><type><name>CURL</name> <modifier>*</modifier></type><name>curl</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>GlobalConfig</name></name> <modifier>*</modifier></type><name>config</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>CURLoption</name></type> <name>tag</name></decl></parameter>,

<parameter><decl><type><name>curl_mime</name> <modifier>*</modifier></type><name>mimepost</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURLcode</name></type> <name>tool_setopt_slist</name><parameter_list>(<parameter><decl><type><name>CURL</name> <modifier>*</modifier></type><name>curl</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>GlobalConfig</name></name> <modifier>*</modifier></type><name>config</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>CURLoption</name></type> <name>tag</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>curl_slist</name></name> <modifier>*</modifier></type><name>list</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>CURLcode</name></type> <name>tool_setopt</name><parameter_list>(<parameter><decl><type><name>CURL</name> <modifier>*</modifier></type><name>curl</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>str</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>GlobalConfig</name></name> <modifier>*</modifier></type><name>config</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>CURLoption</name></type> <name>tag</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>my_setopt</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SETOPT_CHECK(tool_setopt(x, FALSE, global, #y, y, z), y)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>my_setopt_str</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SETOPT_CHECK(tool_setopt(x, TRUE, global, #y, y, z), y)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>my_setopt_enum</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SETOPT_CHECK(tool_setopt_enum(x, global, #y, y, setopt_nv_ ##y, z), y)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>my_setopt_flags</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SETOPT_CHECK(tool_setopt_flags(x, global, #y, y, setopt_nv_ ##y, z), y)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>my_setopt_bitmask</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SETOPT_CHECK(tool_setopt_bitmask(x, global, #y, y, setopt_nv_ ##y, z), y)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>my_setopt_mimepost</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SETOPT_CHECK(tool_setopt_mimepost(x, global, #y, y, z), y)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>my_setopt_slist</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SETOPT_CHECK(tool_setopt_slist(x, global, #y, y, z), y)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>res_setopt</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>tool_setopt(x, FALSE, global, #y, y, z)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>res_setopt_str</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>tool_setopt(x, TRUE, global, #y, y, z)</cpp:value></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>my_setopt</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SETOPT_CHECK(curl_easy_setopt(x, y, z), y)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>my_setopt_str</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SETOPT_CHECK(curl_easy_setopt(x, y, z), y)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>my_setopt_enum</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SETOPT_CHECK(curl_easy_setopt(x, y, z), y)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>my_setopt_flags</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SETOPT_CHECK(curl_easy_setopt(x, y, z), y)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>my_setopt_bitmask</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SETOPT_CHECK(curl_easy_setopt(x, y, z), y)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>my_setopt_mimepost</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SETOPT_CHECK(curl_easy_setopt(x, y, z), y)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>my_setopt_slist</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SETOPT_CHECK(curl_easy_setopt(x, y, z), y)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>res_setopt</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>curl_easy_setopt(x,y,z)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>res_setopt_str</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>curl_easy_setopt(x,y,z)</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

</unit>
