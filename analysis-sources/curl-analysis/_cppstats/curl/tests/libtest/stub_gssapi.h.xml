<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats\curl\tests\libtest\stub_gssapi.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stddef.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GSS_ERROR</name><parameter_list>(<parameter><type><name>status</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(status &amp; 0x80000000)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GSS_S_COMPLETE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GSS_S_FAILURE</name></cpp:macro> <cpp:value>(0x80000000)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GSS_S_CONTINUE_NEEDED</name></cpp:macro> <cpp:value>(1ul)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GSS_C_QOP_DEFAULT</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GSS_C_NO_OID</name></cpp:macro> <cpp:value>((gss_OID) 0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GSS_C_NO_NAME</name></cpp:macro> <cpp:value>((gss_name_t) 0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GSS_C_NO_BUFFER</name></cpp:macro> <cpp:value>((gss_buffer_t) 0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GSS_C_NO_CONTEXT</name></cpp:macro> <cpp:value>((gss_ctx_id_t) 0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GSS_C_NO_CREDENTIAL</name></cpp:macro> <cpp:value>((gss_cred_id_t) 0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GSS_C_NO_CHANNEL_BINDINGS</name></cpp:macro> <cpp:value>((gss_channel_bindings_t) 0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GSS_C_NULL_OID</name></cpp:macro> <cpp:value>GSS_C_NO_OID</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GSS_C_EMPTY_BUFFER</name></cpp:macro> <cpp:value>{0, NULL}</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GSS_C_AF_INET</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GSS_C_GSS_CODE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GSS_C_MECH_CODE</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GSS_C_DELEG_FLAG</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GSS_C_MUTUAL_FLAG</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GSS_C_REPLAY_FLAG</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GSS_C_CONF_FLAG</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GSS_C_INTEG_FLAG</name></cpp:macro> <cpp:value>32</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GSS_C_INDEFINITE</name></cpp:macro> <cpp:value>0xfffffffful</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GSS_C_NT_HOSTBASED_SERVICE</name></cpp:macro> <cpp:value>NULL</cpp:value></cpp:define>

<typedef>typedef <type><name>uint32_t</name></type> <name>OM_uint32</name>;</typedef>

<typedef>typedef <type><name>OM_uint32</name></type> <name>gss_qop_t</name>;</typedef>

<typedef>typedef <type><struct>struct <name>gss_buffer_desc_struct</name> <block>{

<decl_stmt><decl><type><name>size_t</name></type> <name>length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>value</name></decl>;</decl_stmt>

}</block></struct></type> <name>gss_buffer_desc</name><operator>,</operator> *<name>gss_buffer_t</name>;</typedef>

<struct_decl>struct <name>gss_cred_id_t_desc_struct</name>;</struct_decl>

<typedef>typedef <type><name><name>struct</name> <name>gss_cred_id_t_desc_struct</name></name> <modifier>*</modifier></type><name>gss_cred_id_t</name>;</typedef>

<typedef>typedef <type><specifier>const</specifier> <name><name>struct</name> <name>gss_cred_id_t_desc_struct</name></name> <modifier>*</modifier></type><name>gss_const_cred_id_t</name>;</typedef>

<struct_decl>struct <name>gss_ctx_id_t_desc_struct</name>;</struct_decl>

<typedef>typedef <type><name><name>struct</name> <name>gss_ctx_id_t_desc_struct</name></name> <modifier>*</modifier></type><name>gss_ctx_id_t</name>;</typedef>

<typedef>typedef <type><specifier>const</specifier> <name><name>struct</name> <name>gss_ctx_id_t_desc_struct</name></name> <modifier>*</modifier></type><name>gss_const_ctx_id_t</name>;</typedef>

<struct_decl>struct <name>gss_name_t_desc_struct</name>;</struct_decl>

<typedef>typedef <type><name><name>struct</name> <name>gss_name_t_desc_struct</name></name> <modifier>*</modifier></type><name>gss_name_t</name>;</typedef>

<typedef>typedef <type><specifier>const</specifier> <name><name>struct</name> <name>gss_name_t_desc_struct</name></name> <modifier>*</modifier></type><name>gss_const_name_t</name>;</typedef>

<typedef>typedef <type><struct>struct <name>gss_OID_desc_struct</name> <block>{

<decl_stmt><decl><type><name>OM_uint32</name></type> <name>length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>elements</name></decl>;</decl_stmt>

}</block></struct></type> <name>gss_OID_desc</name><operator>,</operator> *<name>gss_OID</name>;</typedef>

<typedef>typedef <type><struct>struct <name>gss_channel_bindings_struct</name> <block>{

<decl_stmt><decl><type><name>OM_uint32</name></type> <name>initiator_addrtype</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>gss_buffer_desc</name></type> <name>initiator_address</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OM_uint32</name></type> <name>acceptor_addrtype</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>gss_buffer_desc</name></type> <name>acceptor_address</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>gss_buffer_desc</name></type> <name>application_data</name></decl>;</decl_stmt>

}</block></struct></type> *<name>gss_channel_bindings_t</name>;</typedef>

<function_decl><type><name>OM_uint32</name></type> <name>gss_release_buffer</name><parameter_list>(<parameter><decl><type><name>OM_uint32</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>gss_buffer_t</name></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>OM_uint32</name></type> <name>gss_init_sec_context</name><parameter_list>(<parameter><decl><type><name>OM_uint32</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>gss_const_cred_id_t</name></type></decl></parameter> ,

<parameter><decl><type><name>gss_ctx_id_t</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>gss_const_name_t</name></type></decl></parameter> ,

<parameter><decl><type><specifier>const</specifier> <name>gss_OID</name></type></decl></parameter> ,

<parameter><decl><type><name>OM_uint32</name></type></decl></parameter> ,

<parameter><decl><type><name>OM_uint32</name></type></decl></parameter> ,

<parameter><decl><type><specifier>const</specifier> <name>gss_channel_bindings_t</name></type></decl></parameter> ,

<parameter><decl><type><specifier>const</specifier> <name>gss_buffer_t</name></type></decl></parameter> ,

<parameter><decl><type><name>gss_OID</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>gss_buffer_t</name></type></decl></parameter> ,

<parameter><decl><type><name>OM_uint32</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>OM_uint32</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>OM_uint32</name></type> <name>gss_delete_sec_context</name><parameter_list>(<parameter><decl><type><name>OM_uint32</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>gss_ctx_id_t</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>gss_buffer_t</name></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>OM_uint32</name></type> <name>gss_inquire_context</name><parameter_list>(<parameter><decl><type><name>OM_uint32</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>gss_const_ctx_id_t</name></type></decl></parameter> ,

<parameter><decl><type><name>gss_name_t</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>gss_name_t</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>OM_uint32</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>gss_OID</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>OM_uint32</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>int</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>int</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>OM_uint32</name></type> <name>gss_wrap</name><parameter_list>(<parameter><decl><type><name>OM_uint32</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>gss_const_ctx_id_t</name></type></decl></parameter> ,

<parameter><decl><type><name>int</name></type></decl></parameter> ,

<parameter><decl><type><name>gss_qop_t</name></type></decl></parameter> ,

<parameter><decl><type><specifier>const</specifier> <name>gss_buffer_t</name></type></decl></parameter> ,

<parameter><decl><type><name>int</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>gss_buffer_t</name></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>OM_uint32</name></type> <name>gss_unwrap</name><parameter_list>(<parameter><decl><type><name>OM_uint32</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>gss_const_ctx_id_t</name></type></decl></parameter> ,

<parameter><decl><type><specifier>const</specifier> <name>gss_buffer_t</name></type></decl></parameter> ,

<parameter><decl><type><name>gss_buffer_t</name></type></decl></parameter> ,

<parameter><decl><type><name>int</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>gss_qop_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>OM_uint32</name></type> <name>gss_seal</name><parameter_list>(<parameter><decl><type><name>OM_uint32</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>gss_ctx_id_t</name></type></decl></parameter> ,

<parameter><decl><type><name>int</name></type></decl></parameter> ,

<parameter><decl><type><name>int</name></type></decl></parameter> ,

<parameter><decl><type><name>gss_buffer_t</name></type></decl></parameter> ,

<parameter><decl><type><name>int</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>gss_buffer_t</name></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>OM_uint32</name></type> <name>gss_unseal</name><parameter_list>(<parameter><decl><type><name>OM_uint32</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>gss_ctx_id_t</name></type></decl></parameter> ,

<parameter><decl><type><name>gss_buffer_t</name></type></decl></parameter> ,

<parameter><decl><type><name>gss_buffer_t</name></type></decl></parameter> ,

<parameter><decl><type><name>int</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>int</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>OM_uint32</name></type> <name>gss_import_name</name><parameter_list>(<parameter><decl><type><name>OM_uint32</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><specifier>const</specifier> <name>gss_buffer_t</name></type></decl></parameter> ,

<parameter><decl><type><specifier>const</specifier> <name>gss_OID</name></type></decl></parameter> ,

<parameter><decl><type><name>gss_name_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>OM_uint32</name></type> <name>gss_release_name</name><parameter_list>(<parameter><decl><type><name>OM_uint32</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>gss_name_t</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>OM_uint32</name></type> <name>gss_display_name</name><parameter_list>(<parameter><decl><type><name>OM_uint32</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>gss_const_name_t</name></type></decl></parameter> ,

<parameter><decl><type><name>gss_buffer_t</name></type></decl></parameter> ,

<parameter><decl><type><name>gss_OID</name> <modifier>*</modifier></type></decl></parameter> )</parameter_list>;</function_decl>

<function_decl><type><name>OM_uint32</name></type> <name>gss_display_status</name><parameter_list>(<parameter><decl><type><name>OM_uint32</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>OM_uint32</name></type></decl></parameter> ,

<parameter><decl><type><name>int</name></type></decl></parameter> ,

<parameter><decl><type><specifier>const</specifier> <name>gss_OID</name></type></decl></parameter> ,

<parameter><decl><type><name>OM_uint32</name> <modifier>*</modifier></type></decl></parameter> ,

<parameter><decl><type><name>gss_buffer_t</name></type></decl></parameter> )</parameter_list>;</function_decl>

</unit>
