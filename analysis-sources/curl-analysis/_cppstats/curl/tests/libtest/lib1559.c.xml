<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats\curl\tests\libtest\lib1559.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"test.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"testutil.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"warnless.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"memdebug.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EXCESSIVE</name></cpp:macro> <cpp:value>10*1000*1000</cpp:value></cpp:define>

<function><type><name>int</name></type> <name>test</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>URL</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>CURLcode</name></type> <name>res</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>CURL</name> <modifier>*</modifier></type><name>curl</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>longurl</name> <init>= <expr><call><name>malloc</name><argument_list>(<argument><expr><name>EXCESSIVE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>CURLU</name> <modifier>*</modifier></type><name>u</name></decl>;</decl_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>URL</name></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>longurl</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>longurl</name></expr></argument>, <argument><expr><literal type="char">'a'</literal></expr></argument>, <argument><expr><name>EXCESSIVE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>longurl</name><index>[<expr><name>EXCESSIVE</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>global_init</name><argument_list>(<argument><expr><name>CURL_GLOBAL_ALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>easy_init</name><argument_list>(<argument><expr><name>curl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLOPT_URL</name></expr></argument>, <argument><expr><name>longurl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"CURLOPT_URL %d bytes URL == %d\n"</literal></expr></argument>,

<argument><expr><name>EXCESSIVE</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><name>res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>curl_easy_setopt</name><argument_list>(<argument><expr><name>curl</name></expr></argument>, <argument><expr><name>CURLOPT_POSTFIELDS</name></expr></argument>, <argument><expr><name>longurl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"CURLOPT_POSTFIELDS %d bytes data == %d\n"</literal></expr></argument>,

<argument><expr><name>EXCESSIVE</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><name>res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>u</name> <operator>=</operator> <call><name>curl_url</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>u</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>CURLUcode</name></type> <name>uc</name> <init>= <expr><call><name>curl_url_set</name><argument_list>(<argument><expr><name>u</name></expr></argument>, <argument><expr><name>CURLUPART_URL</name></expr></argument>, <argument><expr><name>longurl</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"CURLUPART_URL %d bytes URL == %d\n"</literal></expr></argument>,

<argument><expr><name>EXCESSIVE</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><name>uc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>uc</name> <operator>=</operator> <call><name>curl_url_set</name><argument_list>(<argument><expr><name>u</name></expr></argument>, <argument><expr><name>CURLUPART_SCHEME</name></expr></argument>, <argument><expr><name>longurl</name></expr></argument>, <argument><expr><name>CURLU_NON_SUPPORT_SCHEME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"CURLUPART_SCHEME %d bytes scheme == %d\n"</literal></expr></argument>,

<argument><expr><name>EXCESSIVE</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><name>uc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>uc</name> <operator>=</operator> <call><name>curl_url_set</name><argument_list>(<argument><expr><name>u</name></expr></argument>, <argument><expr><name>CURLUPART_USER</name></expr></argument>, <argument><expr><name>longurl</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"CURLUPART_USER %d bytes user == %d\n"</literal></expr></argument>,

<argument><expr><name>EXCESSIVE</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><name>uc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>curl_url_cleanup</name><argument_list>(<argument><expr><name>u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<label><name>test_cleanup</name>:</label>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>longurl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>curl_easy_cleanup</name><argument_list>(<argument><expr><name>curl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>curl_global_cleanup</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>res</name></expr>;</return> 

</block_content>}</block></function>

</unit>
