<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats\curl\tests\unit\unit1301.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curlcheck.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"strcase.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>CURLcode</name></type> <name>unit_setup</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content><return>return <expr><name>CURLE_OK</name></expr>;</return></block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>unit_stop</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content/>}</block></function>

<decl_stmt><decl><type><name>UNITTEST_START</name>

<name>int</name></type> <name>rc</name></decl>;</decl_stmt>

<expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>curl_strequal</name><argument_list>(<argument><expr><literal type="string">"iii"</literal></expr></argument>, <argument><expr><literal type="string">"III"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>rc</name> <operator>!=</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"return code should be non-zero"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>curl_strequal</name><argument_list>(<argument><expr><literal type="string">"iiia"</literal></expr></argument>, <argument><expr><literal type="string">"III"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>rc</name> <operator>==</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"return code should be zero"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>curl_strequal</name><argument_list>(<argument><expr><literal type="string">"iii"</literal></expr></argument>, <argument><expr><literal type="string">"IIIa"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>rc</name> <operator>==</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"return code should be zero"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>curl_strequal</name><argument_list>(<argument><expr><literal type="string">"iiiA"</literal></expr></argument>, <argument><expr><literal type="string">"IIIa"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>rc</name> <operator>!=</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"return code should be non-zero"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>curl_strnequal</name><argument_list>(<argument><expr><literal type="string">"iii"</literal></expr></argument>, <argument><expr><literal type="string">"III"</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>rc</name> <operator>!=</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"return code should be non-zero"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>curl_strnequal</name><argument_list>(<argument><expr><literal type="string">"iiiABC"</literal></expr></argument>, <argument><expr><literal type="string">"IIIcba"</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>rc</name> <operator>!=</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"return code should be non-zero"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>rc</name> <operator>=</operator> <call><name>curl_strnequal</name><argument_list>(<argument><expr><literal type="string">"ii"</literal></expr></argument>, <argument><expr><literal type="string">"II"</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>fail_unless</name><argument_list>(<argument><expr><name>rc</name> <operator>!=</operator> <literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"return code should be non-zero"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr><name>UNITTEST_STOP</name></expr>

</unit>
