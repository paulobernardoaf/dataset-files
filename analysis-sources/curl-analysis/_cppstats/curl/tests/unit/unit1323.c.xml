<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats\curl\tests\unit\unit1323.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curlcheck.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"timeval.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>CURLcode</name></type> <name>unit_setup</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><name>CURLE_OK</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>unit_stop</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

</block_content>}</block></function>

<struct>struct <name>a</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>curltime</name></name></type> <name>first</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>curltime</name></name></type> <name>second</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>time_t</name></type> <name>result</name></decl>;</decl_stmt>

}</block>;</struct>

<macro><name>UNITTEST_START</name></macro>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>a</name></name></type> <name><name>tests</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><block>{<expr><literal type="number">36762</literal></expr>, <expr><literal type="number">8345</literal></expr> }</block></expr>, <expr><block>{<expr><literal type="number">36761</literal></expr>, <expr><literal type="number">995926</literal></expr> }</block></expr>, <expr><literal type="number">13</literal></expr> }</block></expr>,

<expr><block>{ <expr><block>{<expr><literal type="number">36761</literal></expr>, <expr><literal type="number">995926</literal></expr> }</block></expr>, <expr><block>{<expr><literal type="number">36762</literal></expr>, <expr><literal type="number">8345</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">13</literal></expr> }</block></expr>,

<expr><block>{ <expr><block>{<expr><literal type="number">36761</literal></expr>, <expr><literal type="number">995926</literal></expr> }</block></expr>, <expr><block>{<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><literal type="number">36761995</literal></expr> }</block></expr>,

<expr><block>{ <expr><block>{<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>, <expr><block>{<expr><literal type="number">36761</literal></expr>, <expr><literal type="number">995926</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">36761995</literal></expr> }</block></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>

<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>tests</name></expr></argument>)</argument_list></sizeof><operator>/</operator><sizeof>sizeof<argument_list>(<argument><expr><name><name>tests</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name>timediff_t</name></type> <name>result</name> <init>= <expr><call><name>Curl_timediff</name><argument_list>(<argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>first</name></expr></argument>, <argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>second</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name>result</name> <operator>!=</operator> <name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>result</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d.%06u to %d.%06u got %d, but expected %d\n"</literal></expr></argument>,

<argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name><name>first</name><operator>.</operator><name>tv_sec</name></name></expr></argument>,

<argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name><name>first</name><operator>.</operator><name>tv_usec</name></name></expr></argument>,

<argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name><name>second</name><operator>.</operator><name>tv_sec</name></name></expr></argument>,

<argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name><name>second</name><operator>.</operator><name>tv_usec</name></name></expr></argument>,

<argument><expr><name>result</name></expr></argument>,

<argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"unexpected result!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

</block_content>}</block>

<expr><name>UNITTEST_STOP</name></expr>

</unit>
