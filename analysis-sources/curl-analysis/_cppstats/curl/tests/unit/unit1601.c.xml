<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats\curl\tests\unit\unit1601.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curlcheck.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl_md5.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>CURLcode</name></type> <name>unit_setup</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><name>CURLE_OK</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>unit_stop</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

</block_content>}</block></function>

<decl_stmt><decl><type><name>UNITTEST_START</name>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CURL_DISABLE_CRYPTO_AUTH</name></expr></argument>)</argument_list></call></expr></cpp:if>
<specifier>const</specifier> <name>char</name></type> <name><name>string1</name><index>[]</index></name> <init>= <expr><literal type="string">"1"</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>string2</name><index>[]</index></name> <init>= <expr><literal type="string">"hello-you-fool"</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>output</name><index>[<expr><name>MD5_DIGEST_LEN</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>testp</name> <init>= <expr><name>output</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>Curl_md5it</name><argument_list>(<argument><expr><name>output</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator> <name>string1</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>string1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>verify_memory</name><argument_list>(<argument><expr><name>testp</name></expr></argument>, <argument><expr><literal type="string">"\xc4\xca\x42\x38\xa0\xb9\x23\x82\x0d\xcc\x50\x9a\x6f"</literal>

<literal type="string">"\x75\x84\x9b"</literal></expr></argument>, <argument><expr><name>MD5_DIGEST_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>Curl_md5it</name><argument_list>(<argument><expr><name>output</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator> <name>string2</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>string2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>verify_memory</name><argument_list>(<argument><expr><name>testp</name></expr></argument>, <argument><expr><literal type="string">"\x88\x67\x0b\x6d\x5d\x74\x2f\xad\xa5\xcd\xf9\xb6\x82"</literal>

<literal type="string">"\x87\x5f\x22"</literal></expr></argument>, <argument><expr><name>MD5_DIGEST_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr><name>UNITTEST_STOP</name></expr>

</unit>
