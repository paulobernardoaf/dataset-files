<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\curl-analysis\_cppstats\curl\tests\unit\unit1307.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curlcheck.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"curl_fnmatch.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>CURLcode</name></type> <name>unit_setup</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><name>CURLE_OK</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>unit_stop</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CURL_DISABLE_FTP</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MATCH</name></cpp:macro> <cpp:value>CURL_FNMATCH_MATCH</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NOMATCH</name></cpp:macro> <cpp:value>CURL_FNMATCH_NOMATCH</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LINUX_DIFFER</name></cpp:macro> <cpp:value>0x80</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LINUX_SHIFT</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LINUX_MATCH</name></cpp:macro> <cpp:value>((CURL_FNMATCH_MATCH &lt;&lt; LINUX_SHIFT) | LINUX_DIFFER)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LINUX_NOMATCH</name></cpp:macro> <cpp:value>((CURL_FNMATCH_NOMATCH &lt;&lt; LINUX_SHIFT) | LINUX_DIFFER)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LINUX_FAIL</name></cpp:macro> <cpp:value>((CURL_FNMATCH_FAIL &lt;&lt; LINUX_SHIFT) | LINUX_DIFFER)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAC_DIFFER</name></cpp:macro> <cpp:value>0x40</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAC_SHIFT</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAC_MATCH</name></cpp:macro> <cpp:value>((CURL_FNMATCH_MATCH &lt;&lt; MAC_SHIFT) | MAC_DIFFER)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAC_NOMATCH</name></cpp:macro> <cpp:value>((CURL_FNMATCH_NOMATCH &lt;&lt; MAC_SHIFT) | MAC_DIFFER)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAC_FAIL</name></cpp:macro> <cpp:value>((CURL_FNMATCH_FAIL &lt;&lt; MAC_SHIFT) | MAC_DIFFER)</cpp:value></cpp:define>

<struct>struct <name>testcase</name> <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>pattern</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>string</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>result</name></decl>;</decl_stmt>

}</block>;</struct>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name><name>struct</name> <name>testcase</name></name></type> <name><name>tests</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{<expr><literal type="string">"*[*[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[["</literal>

<literal type="string">"[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[["</literal>

<literal type="string">"[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[\001\177[[[[[[[[[[[[[[[[[[[[["</literal></expr>,

<expr><literal type="string">"[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[["</literal>

<literal type="string">"[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[["</literal>

<literal type="string">"[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[["</literal></expr>,

<expr><name>NOMATCH</name><operator>|</operator><name>MAC_FAIL</name></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"\\["</literal></expr>, <expr><literal type="string">"["</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"["</literal></expr>, <expr><literal type="string">"["</literal></expr>, <expr><name>NOMATCH</name><operator>|</operator><name>LINUX_MATCH</name><operator>|</operator><name>MAC_FAIL</name></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"[]"</literal></expr>, <expr><literal type="string">"[]"</literal></expr>, <expr><name>NOMATCH</name><operator>|</operator><name>LINUX_MATCH</name><operator>|</operator><name>MAC_FAIL</name></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"[][]"</literal></expr>, <expr><literal type="string">"["</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[][]"</literal></expr>, <expr><literal type="string">"]"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[]"</literal></expr>, <expr><literal type="string">"["</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[[]"</literal></expr>, <expr><literal type="string">"["</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[[[]"</literal></expr>, <expr><literal type="string">"["</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[[[]"</literal></expr>, <expr><literal type="string">"["</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[][[]"</literal></expr>, <expr><literal type="string">"]"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[][[[]"</literal></expr>, <expr><literal type="string">"["</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[]"</literal></expr>, <expr><literal type="string">"]"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[a@]"</literal></expr>, <expr><literal type="string">"a"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[a-z]"</literal></expr>, <expr><literal type="string">"a"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[a-z]"</literal></expr>, <expr><literal type="string">"A"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"?[a-z]"</literal></expr>, <expr><literal type="string">"?Z"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[A-Z]"</literal></expr>, <expr><literal type="string">"C"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[A-Z]"</literal></expr>, <expr><literal type="string">"c"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[0-9]"</literal></expr>, <expr><literal type="string">"7"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[7-8]"</literal></expr>, <expr><literal type="string">"7"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[7-]"</literal></expr>, <expr><literal type="string">"7"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[7-]"</literal></expr>, <expr><literal type="string">"-"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[7-]"</literal></expr>, <expr><literal type="string">"["</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[a-bA-F]"</literal></expr>, <expr><literal type="string">"F"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[a-bA-B9]"</literal></expr>, <expr><literal type="string">"9"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[a-bA-B98]"</literal></expr>, <expr><literal type="string">"8"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[a-bA-B98]"</literal></expr>, <expr><literal type="string">"C"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[a-bA-Z9]"</literal></expr>, <expr><literal type="string">"F"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[a-bA-Z9]ero*"</literal></expr>, <expr><literal type="string">"Zero chance."</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"S[a-][x]opho*"</literal></expr>, <expr><literal type="string">"Saxophone"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"S[a-][x]opho*"</literal></expr>, <expr><literal type="string">"SaXophone"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"S[a-][x]*.txt"</literal></expr>, <expr><literal type="string">"S-x.txt"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[\\a-\\b]"</literal></expr>, <expr><literal type="string">"a"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[\\a-\\b]"</literal></expr>, <expr><literal type="string">"b"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[?*[][?*[][?*[]"</literal></expr>, <expr><literal type="string">"?*["</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[][?*-]"</literal></expr>, <expr><literal type="string">"]"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[][?*-]"</literal></expr>, <expr><literal type="string">"["</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[][?*-]"</literal></expr>, <expr><literal type="string">"?"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[][?*-]"</literal></expr>, <expr><literal type="string">"*"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[][?*-]"</literal></expr>, <expr><literal type="string">"-"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[]?*-]"</literal></expr>, <expr><literal type="string">"-"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[\xFF]"</literal></expr>, <expr><literal type="string">"\xFF"</literal></expr>, <expr><name>MATCH</name><operator>|</operator><name>LINUX_FAIL</name><operator>|</operator><name>MAC_FAIL</name></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"?/b/c"</literal></expr>, <expr><literal type="string">"a/b/c"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"^_{}~"</literal></expr>, <expr><literal type="string">"^_{}~"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"!#%+,-./01234567889"</literal></expr>, <expr><literal type="string">"!#%+,-./01234567889"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"PQRSTUVWXYZ]abcdefg"</literal></expr>, <expr><literal type="string">"PQRSTUVWXYZ]abcdefg"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">":;=@ABCDEFGHIJKLMNO"</literal></expr>, <expr><literal type="string">":;=@ABCDEFGHIJKLMNO"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[!a]"</literal></expr>, <expr><literal type="string">"b"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[!a]"</literal></expr>, <expr><literal type="string">"a"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[^a]"</literal></expr>, <expr><literal type="string">"b"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[^a]"</literal></expr>, <expr><literal type="string">"a"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[^a-z0-9A-Z]"</literal></expr>, <expr><literal type="string">"a"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[^a-z0-9A-Z]"</literal></expr>, <expr><literal type="string">"-"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"curl[!a-z]lib"</literal></expr>, <expr><literal type="string">"curl lib"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"curl[! ]lib"</literal></expr>, <expr><literal type="string">"curl lib"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[! ][ ]"</literal></expr>, <expr><literal type="string">" "</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[! ][ ]"</literal></expr>, <expr><literal type="string">"a "</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"*[^a].t?t"</literal></expr>, <expr><literal type="string">"a.txt"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"*[^a].t?t"</literal></expr>, <expr><literal type="string">"ba.txt"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"*[^a].t?t"</literal></expr>, <expr><literal type="string">"ab.txt"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"*[^a]"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[!\xFF]"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><name>NOMATCH</name><operator>|</operator><name>LINUX_FAIL</name></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"[!\xFF]"</literal></expr>, <expr><literal type="string">"\xFF"</literal></expr>, <expr><name>NOMATCH</name><operator>|</operator><name>LINUX_FAIL</name><operator>|</operator><name>MAC_FAIL</name></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"[!\xFF]"</literal></expr>, <expr><literal type="string">"a"</literal></expr>, <expr><name>MATCH</name><operator>|</operator><name>LINUX_FAIL</name><operator>|</operator><name>MAC_FAIL</name></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"[!?*[]"</literal></expr>, <expr><literal type="string">"?"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[!!]"</literal></expr>, <expr><literal type="string">"!"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[!!]"</literal></expr>, <expr><literal type="string">"x"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:alpha:]]"</literal></expr>, <expr><literal type="string">"a"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:alpha:]]"</literal></expr>, <expr><literal type="string">"9"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:alnum:]]"</literal></expr>, <expr><literal type="string">"a"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:alnum:]]"</literal></expr>, <expr><literal type="string">"["</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:alnum:]]"</literal></expr>, <expr><literal type="string">"]"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:alnum:]]"</literal></expr>, <expr><literal type="string">"9"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:digit:]]"</literal></expr>, <expr><literal type="string">"9"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:xdigit:]]"</literal></expr>, <expr><literal type="string">"9"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:xdigit:]]"</literal></expr>, <expr><literal type="string">"F"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:xdigit:]]"</literal></expr>, <expr><literal type="string">"G"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:upper:]]"</literal></expr>, <expr><literal type="string">"U"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:upper:]]"</literal></expr>, <expr><literal type="string">"u"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:lower:]]"</literal></expr>, <expr><literal type="string">"l"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:lower:]]"</literal></expr>, <expr><literal type="string">"L"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:print:]]"</literal></expr>, <expr><literal type="string">"L"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:print:]]"</literal></expr>, <expr><literal type="string">"\10"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:print:]]"</literal></expr>, <expr><literal type="string">"\10"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:space:]]"</literal></expr>, <expr><literal type="string">" "</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:space:]]"</literal></expr>, <expr><literal type="string">"x"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:graph:]]"</literal></expr>, <expr><literal type="string">" "</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:graph:]]"</literal></expr>, <expr><literal type="string">"x"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:blank:]]"</literal></expr>, <expr><literal type="string">"\t"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:blank:]]"</literal></expr>, <expr><literal type="string">" "</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:blank:]]"</literal></expr>, <expr><literal type="string">"\r"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[^[:blank:]]"</literal></expr>, <expr><literal type="string">"\t"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[^[:print:]]"</literal></expr>, <expr><literal type="string">"\10"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:lower:]][[:lower:]]"</literal></expr>, <expr><literal type="string">"ll"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:foo:]]"</literal></expr>, <expr><literal type="string">"bar"</literal></expr>, <expr><name>NOMATCH</name><operator>|</operator><name>MAC_FAIL</name></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"[[:foo:]]"</literal></expr>, <expr><literal type="string">"f]"</literal></expr>, <expr><name>MATCH</name><operator>|</operator><name>LINUX_NOMATCH</name><operator>|</operator><name>MAC_FAIL</name></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"Curl[[:blank:]];-)"</literal></expr>, <expr><literal type="string">"Curl ;-)"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"*[[:blank:]]*"</literal></expr>, <expr><literal type="string">" "</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"*[[:blank:]]*"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"*[[:blank:]]*"</literal></expr>, <expr><literal type="string">"hi, im_Pavel"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"filename.dat"</literal></expr>, <expr><literal type="string">"filename.dat"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"*curl*"</literal></expr>, <expr><literal type="string">"lets use curl!!"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"filename.txt"</literal></expr>, <expr><literal type="string">"filename.dat"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"*.txt"</literal></expr>, <expr><literal type="string">"text.txt"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"*.txt"</literal></expr>, <expr><literal type="string">"a.txt"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"*.txt"</literal></expr>, <expr><literal type="string">".txt"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"*.txt"</literal></expr>, <expr><literal type="string">"txt"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"??.txt"</literal></expr>, <expr><literal type="string">"99.txt"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"??.txt"</literal></expr>, <expr><literal type="string">"a99.txt"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"?.???"</literal></expr>, <expr><literal type="string">"a.txt"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"*.???"</literal></expr>, <expr><literal type="string">"somefile.dat"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"*.???"</literal></expr>, <expr><literal type="string">"photo.jpeg"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".*"</literal></expr>, <expr><literal type="string">".htaccess"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".*"</literal></expr>, <expr><literal type="string">"."</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">".*"</literal></expr>, <expr><literal type="string">".."</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"**.txt"</literal></expr>, <expr><literal type="string">"text.txt"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"***.txt"</literal></expr>, <expr><literal type="string">"t.txt"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"****.txt"</literal></expr>, <expr><literal type="string">".txt"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">""</literal></expr>, <expr><literal type="string">"hello"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"file"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"?"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"*"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"x"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"\\"</literal></expr>, <expr><literal type="string">"\\"</literal></expr>, <expr><name>MATCH</name><operator>|</operator><name>LINUX_NOMATCH</name></expr>}</block></expr>,

<expr><block>{ <expr><literal type="string">"\\\\"</literal></expr>, <expr><literal type="string">"\\"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"\\\\"</literal></expr>, <expr><literal type="string">"\\\\"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"\\?"</literal></expr>, <expr><literal type="string">"?"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"\\*"</literal></expr>, <expr><literal type="string">"*"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"?.txt"</literal></expr>, <expr><literal type="string">"?.txt"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"*.txt"</literal></expr>, <expr><literal type="string">"*.txt"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"\\?.txt"</literal></expr>, <expr><literal type="string">"?.txt"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"\\*.txt"</literal></expr>, <expr><literal type="string">"*.txt"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"\\?.txt"</literal></expr>, <expr><literal type="string">"x.txt"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"\\*.txt"</literal></expr>, <expr><literal type="string">"x.txt"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"\\*\\\\.txt"</literal></expr>, <expr><literal type="string">"*\\.txt"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"*\\**\\?*\\\\*"</literal></expr>, <expr><literal type="string">"cc*cc?cccc"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"*\\?*\\**"</literal></expr>, <expr><literal type="string">"cc?cc"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"\\\"\\$\\&amp;\\'\\(\\)"</literal></expr>, <expr><literal type="string">"\"$&amp;'()"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"\\*\\?\\[\\\\\\`\\|"</literal></expr>, <expr><literal type="string">"*?[\\`|"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[\\a\\b]c"</literal></expr>, <expr><literal type="string">"ac"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[\\a\\b]c"</literal></expr>, <expr><literal type="string">"bc"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[\\a\\b]d"</literal></expr>, <expr><literal type="string">"bc"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[a-bA-B\\?]"</literal></expr>, <expr><literal type="string">"?"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"cu[a-ab-b\\r]l"</literal></expr>, <expr><literal type="string">"curl"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"[\\a-z]"</literal></expr>, <expr><literal type="string">"c"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"?*?*?.*?*"</literal></expr>, <expr><literal type="string">"abc.c"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"?*?*?.*?*"</literal></expr>, <expr><literal type="string">"abcc"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"?*?*?.*?*"</literal></expr>, <expr><literal type="string">"abc."</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"?*?*?.*?*"</literal></expr>, <expr><literal type="string">"abc.c++"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"?*?*?.*?*"</literal></expr>, <expr><literal type="string">"abcdef.c++"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"?*?*?.?"</literal></expr>, <expr><literal type="string">"abcdef.c"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"?*?*?.?"</literal></expr>, <expr><literal type="string">"abcdef.cd"</literal></expr>, <expr><name>NOMATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"LindmÃ¤tarv"</literal></expr>, <expr><literal type="string">"LindmÃ¤tarv"</literal></expr>, <expr><name>MATCH</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><name>MATCH</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"**]*[*[\x13]**[*\x13)]*]*[**[*\x13~r-]*]**[.*]*[\xe3\xe3\xe3\xe3\xe3\xe3"</literal>

<literal type="string">"\xe3\xe3\xe3\xe3\xe3\xe3\xe3\xe3\xe3\xe3\xe3\xe3\xe3\xe3\xe3\xe3\xe3\xe3"</literal>

<literal type="string">"\xe3\xe3\xe3\xe3\xe3*[\x13]**[*\x13)]*]*[*[\x13]*[~r]*]*\xba\x13\xa6~b-]*"</literal></expr>,

<expr><literal type="string">"a"</literal></expr>, <expr><name>NOMATCH</name><operator>|</operator><name>LINUX_FAIL</name></expr>}</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ret2name</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>i</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<switch>switch<condition>(<expr><name>i</name></expr>)</condition> <block>{<block_content>

<case>case <expr><literal type="number">0</literal></expr>:</case>

<return>return <expr><literal type="string">"MATCH"</literal></expr>;</return>

<case>case <expr><literal type="number">1</literal></expr>:</case>

<return>return <expr><literal type="string">"NOMATCH"</literal></expr>;</return>

<case>case <expr><literal type="number">2</literal></expr>:</case>

<return>return <expr><literal type="string">"FAIL"</literal></expr>;</return>

<default>default:</default>

<return>return <expr><literal type="string">"unknown"</literal></expr>;</return>

</block_content>}</block></switch>

</block_content>}</block></function>

<enum>enum <name>system</name> <block>{

<decl><name>SYSTEM_CUSTOM</name></decl>,

<decl><name>SYSTEM_LINUX</name></decl>,

<decl><name>SYSTEM_MACOS</name></decl>

}</block>;</enum>

<macro><name>UNITTEST_START</name></macro>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>testnum</name> <init>= <expr><sizeof>sizeof<argument_list>(<argument><expr><name>tests</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr>struct <name>testcase</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>system</name></name></type> <name>machine</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_FNMATCH</name></expr></argument>)</argument_list></call></expr></cpp:if>
<if_stmt><if>if<condition>(<expr><call><name>strstr</name><argument_list>(<argument><expr><name>OS</name></expr></argument>, <argument><expr><literal type="string">"apple"</literal></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>strstr</name><argument_list>(<argument><expr><name>OS</name></expr></argument>, <argument><expr><literal type="string">"darwin"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>machine</name> <operator>=</operator> <name>SYSTEM_MACOS</name></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name>machine</name> <operator>=</operator> <name>SYSTEM_LINUX</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"Tested with system fnmatch(), %s-style\n"</literal></expr></argument>,

<argument><expr><ternary><condition><expr><name>machine</name> <operator>==</operator> <name>SYSTEM_LINUX</name></expr> ?</condition><then> <expr><literal type="string">"linux"</literal></expr> </then><else>: <expr><literal type="string">"mac"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"Tested with custom fnmatch()\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>machine</name> <operator>=</operator> <name>SYSTEM_CUSTOM</name></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>testnum</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>result</name> <init>= <expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>result</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>rc</name> <init>= <expr><call><name>Curl_fnmatch</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>pattern</name></expr></argument>, <argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>string</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name>result</name> <operator>&amp;</operator> <operator>(</operator><name>LINUX_DIFFER</name><operator>|</operator><name>MAC_DIFFER</name><operator>)</operator></expr>)</condition> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><operator>(</operator><name>result</name> <operator>&amp;</operator> <name>LINUX_DIFFER</name><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><name>machine</name> <operator>==</operator> <name>SYSTEM_LINUX</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>result</name> <operator>&gt;&gt;=</operator> <name>LINUX_SHIFT</name></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if<condition>(<expr><operator>(</operator><name>result</name> <operator>&amp;</operator> <name>MAC_DIFFER</name><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><name>machine</name> <operator>==</operator> <name>SYSTEM_MACOS</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>result</name> <operator>&gt;&gt;=</operator> <name>MAC_SHIFT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>result</name> <operator>&amp;=</operator> <literal type="number">0x03</literal></expr>;</expr_stmt> 

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><name>rc</name> <operator>!=</operator> <name>result</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"Curl_fnmatch(\"%s\", \"%s\") should return %s (returns %s)"</literal>

<literal type="string">" [%d]\n"</literal></expr></argument>,

<argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>pattern</name></expr></argument>, <argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>string</name></expr></argument>, <argument><expr><call><name>ret2name</name><argument_list>(<argument><expr><name>result</name></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><call><name>ret2name</name><argument_list>(<argument><expr><name>rc</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"pattern mismatch"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

</block_content>}</block>

<decl_stmt><decl><type><name>UNITTEST_STOP</name></type>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<name>UNITTEST_START</name>

<block>{<block_content>

<return>return <expr><literal type="number">1</literal></expr>;</return>

</block_content>}</block></decl></decl_stmt>

<expr><name>UNITTEST_STOP</name></expr>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
