<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\demos\skater\src\menu_graphics.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;allegro5/allegro.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"defines.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"global.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"menu.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"menus.h"</cpp:file></cpp:include>


<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>_id</name> <init>= <expr><name>DEMO_STATE_GFX</name></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>int</name></type> <name>id</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name>_id</name></expr>;</return>
</block_content>}</block></function>


<decl_stmt><decl><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type><name><name>choice_on_off</name><index>[]</index></name> <init>= <expr><block>{ <expr><literal type="string">"off"</literal></expr>, <expr><literal type="string">"on"</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type><name><name>choice_bpp</name><index>[]</index></name> <init>= <expr><block>{ <expr><literal type="string">"15 bpp"</literal></expr>, <expr><literal type="string">"16 bpp"</literal></expr>, <expr><literal type="string">"24 bpp"</literal></expr>, <expr><literal type="string">"32 bpp"</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>choice_res</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type><name><name>choice_samples</name><index>[]</index></name> <init>=
<expr><block>{ <expr><literal type="string">"1x"</literal></expr>, <expr><literal type="string">"2x"</literal></expr>, <expr><literal type="string">"4x"</literal></expr>, <expr><literal type="string">"8x"</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type><name><name>choice_fullscreen</name><index>[]</index></name> <init>=
<expr><block>{ <expr><literal type="string">"window"</literal></expr>, <expr><literal type="string">"fullscreen window"</literal></expr>, <expr><literal type="string">"fullscreen"</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>apply</name><parameter_list>(<parameter><decl><type><name>DEMO_MENU</name> <modifier>*</modifier></type> <name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>on_fullscreen</name><parameter_list>(<parameter><decl><type><name>DEMO_MENU</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <name>void</name></type> <name>on_vsync</name><parameter_list>(<parameter><decl><type><name>DEMO_MENU</name> <modifier>*</modifier></type> <name>item</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name>use_vsync</name> <operator>=</operator> <name><name>item</name><operator>-&gt;</operator><name>extra</name></name></expr>;</expr_stmt>
</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <name>DEMO_MENU</name></type> <name><name>menu</name><index>[]</index></name> <init>= <expr><block>{
<expr><call><name>DEMO_MENU_ITEM2</name><argument_list>(<argument><expr><name>demo_text_proc</name></expr></argument>, <argument><expr><literal type="string">"GFX SETTINGS"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>DEMO_MENU_ITEM6</name><argument_list>(<argument><expr><name>demo_choice_proc</name></expr></argument>, <argument><expr><literal type="string">"Mode"</literal></expr></argument>, <argument><expr><name>DEMO_MENU_SELECTABLE</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name>choice_fullscreen</name></expr></argument>, <argument><expr><name>on_fullscreen</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>DEMO_MENU_ITEM6</name><argument_list>(<argument><expr><name>demo_choice_proc</name></expr></argument>, <argument><expr><literal type="string">"Bit Depth"</literal></expr></argument>, <argument><expr><name>DEMO_MENU_SELECTABLE</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name>choice_bpp</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>DEMO_MENU_ITEM6</name><argument_list>(<argument><expr><name>demo_choice_proc</name></expr></argument>, <argument><expr><literal type="string">"Screen Size"</literal></expr></argument>, <argument><expr><name>DEMO_MENU_SELECTABLE</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>DEMO_MENU_ITEM6</name><argument_list>(<argument><expr><name>demo_choice_proc</name></expr></argument>, <argument><expr><literal type="string">"Supersampling"</literal></expr></argument>, <argument><expr><name>DEMO_MENU_SELECTABLE</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name>choice_samples</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>DEMO_MENU_ITEM6</name><argument_list>(<argument><expr><name>demo_choice_proc</name></expr></argument>, <argument><expr><literal type="string">"Vsync"</literal></expr></argument>, <argument><expr><name>DEMO_MENU_SELECTABLE</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name>choice_on_off</name></expr></argument>, <argument><expr><name>on_vsync</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>DEMO_MENU_ITEM6</name><argument_list>(<argument><expr><name>demo_button_proc</name></expr></argument>, <argument><expr><literal type="string">"Apply"</literal></expr></argument>, <argument><expr><name>DEMO_MENU_SELECTABLE</name></expr></argument>, <argument><expr><name>DEMO_STATE_GFX</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>apply</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>DEMO_MENU_ITEM6</name><argument_list>(<argument><expr><name>demo_button_proc</name></expr></argument>, <argument><expr><literal type="string">"Back"</literal></expr></argument>, <argument><expr><name>DEMO_MENU_SELECTABLE</name></expr></argument>, <argument><expr><name>DEMO_STATE_OPTIONS</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>,
<expr><name>DEMO_MENU_END</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>void</name></type> <name>on_fullscreen</name><parameter_list>(<parameter><decl><type><name>DEMO_MENU</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>menu</name><index>[<expr><literal type="number">3</literal></expr>]</index></name><operator>.</operator><name>flags</name> <operator>=</operator> <ternary><condition><expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name> <operator>==</operator> <literal type="number">2</literal></expr> ?</condition><then> <expr><name>DEMO_MENU_SELECTABLE</name></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>already</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>mode</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name><name>choice_res</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>strcmp</name><argument_list>(<argument><expr><name><name>choice_res</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>mode</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>true</name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></for>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>choice_res</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>n</name> <init>= <expr><call><name>al_get_num_display_modes</name><argument_list>()</argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>choice_res</name> <operator>=</operator> <call><name>calloc</name><argument_list>(<argument><expr><name>n</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof <name/></sizeof>*<name>choice_res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>menu</name><index>[<expr><literal type="number">3</literal></expr>]</index></name><operator>.</operator><name>data</name> <operator>=</operator> <operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name>choice_res</name></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY_MODE</name></type> <name>m</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>str</name><index>[<expr><literal type="number">100</literal></expr>]</index></name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>al_get_display_mode</name><argument_list>(<argument><expr><name>i</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>sprintf</name><argument_list>(<argument><expr><name>str</name></expr></argument>, <argument><expr><literal type="string">"%dx%d"</literal></expr></argument>, <argument><expr><name><name>m</name><operator>.</operator><name>width</name></name></expr></argument>, <argument><expr><name><name>m</name><operator>.</operator><name>height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>already</name><argument_list>(<argument><expr><name>str</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>m</name><operator>.</operator><name>width</name></name> <operator>==</operator> <name>screen_width</name> <operator>&amp;&amp;</operator> <name><name>m</name><operator>.</operator><name>height</name></name> <operator>==</operator> <name>screen_height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>menu</name><index>[<expr><literal type="number">3</literal></expr>]</index></name><operator>.</operator><name>extra</name> <operator>=</operator> <name>j</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>choice_res</name><index>[<expr><name>j</name><operator>++</operator></expr>]</index></name> <operator>=</operator> <call><name>strdup</name><argument_list>(<argument><expr><name>str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>init_demo_menu</name><argument_list>(<argument><expr><name>menu</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>menu</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>extra</name> <operator>=</operator> <name>fullscreen</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>menu</name><index>[<expr><literal type="number">5</literal></expr>]</index></name><operator>.</operator><name>extra</name> <operator>=</operator> <name>use_vsync</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>on_fullscreen</name><argument_list>(<argument><expr><name>menu</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>int</name></type> <name>update</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><call><name>update_demo_menu</name><argument_list>(<argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<switch>switch <condition>(<expr><name>ret</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>DEMO_MENU_CONTINUE</name></expr>:</case>
<return>return <expr><call><name>id</name><argument_list>()</argument_list></call></expr>;</return>

<case>case <expr><name>DEMO_MENU_BACK</name></expr>:</case>
<return>return <expr><name>DEMO_STATE_OPTIONS</name></expr>;</return>

<default>default:</default>
<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></switch><empty_stmt>;</empty_stmt>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>void</name></type> <name>draw</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>draw_demo_menu</name><argument_list>(<argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>create_gfx_menu</name><parameter_list>(<parameter><decl><type><name>GAMESTATE</name> <modifier>*</modifier></type> <name>state</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>state</name><operator>-&gt;</operator><name>id</name></name> <operator>=</operator> <name>id</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>state</name><operator>-&gt;</operator><name>init</name></name> <operator>=</operator> <name>init</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>state</name><operator>-&gt;</operator><name>update</name></name> <operator>=</operator> <name>update</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>state</name><operator>-&gt;</operator><name>draw</name></name> <operator>=</operator> <name>draw</name></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>void</name></type> <name>apply</name><parameter_list>(<parameter><decl><type><name>DEMO_MENU</name> <modifier>*</modifier></type> <name>item</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>old_fullscreen</name> <init>= <expr><name>fullscreen</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>old_bit_depth</name> <init>= <expr><name>bit_depth</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>old_screen_width</name> <init>= <expr><name>screen_width</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>old_screen_height</name> <init>= <expr><name>screen_height</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>old_screen_samples</name> <init>= <expr><name>screen_samples</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>old_use_vsync</name> <init>= <expr><name>use_vsync</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>p</name></decl>;</decl_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>item</name></expr>;</expr_stmt>

<expr_stmt><expr><name>fullscreen</name> <operator>=</operator> <name><name>menu</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>extra</name></expr>;</expr_stmt>

<expr_stmt><expr><name>bit_depth</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>p</name> <operator>=</operator> <name><name>choice_res</name><index>[<expr><name><name>menu</name><index>[<expr><literal type="number">3</literal></expr>]</index></name><operator>.</operator><name>extra</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>screen_width</name> <operator>=</operator> <call><name>strtol</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>p</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>screen_height</name> <operator>=</operator> <call><name>strtol</name><argument_list>(<argument><expr><name>p</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>p</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>screen_samples</name> <operator>=</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <name><name>menu</name><index>[<expr><literal type="number">4</literal></expr>]</index></name><operator>.</operator><name>extra</name></expr>;</expr_stmt>

<expr_stmt><expr><name>use_vsync</name> <operator>=</operator> <name><name>menu</name><index>[<expr><literal type="number">5</literal></expr>]</index></name><operator>.</operator><name>extra</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>fullscreen</name> <operator>==</operator> <name>old_fullscreen</name> <operator>&amp;&amp;</operator>
<name>bit_depth</name> <operator>==</operator> <name>old_bit_depth</name> <operator>&amp;&amp;</operator>
<name>use_vsync</name> <operator>==</operator> <name>old_use_vsync</name> <operator>&amp;&amp;</operator>
<name>screen_width</name> <operator>==</operator> <name>old_screen_width</name> <operator>&amp;&amp;</operator>
<name>screen_height</name> <operator>==</operator> <name>old_screen_height</name> <operator>&amp;&amp;</operator>
<name>screen_samples</name> <operator>==</operator> <name>old_screen_samples</name></expr>)</condition> <block>{<block_content>
<return>return;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>change_gfx_mode</name><argument_list>()</argument_list></call> <operator>!=</operator> <name>DEMO_OK</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>fullscreen</name> <operator>=</operator> <name>old_fullscreen</name></expr>;</expr_stmt>
<expr_stmt><expr><name>bit_depth</name> <operator>=</operator> <name>old_bit_depth</name></expr>;</expr_stmt>
<expr_stmt><expr><name>screen_width</name> <operator>=</operator> <name>old_screen_width</name></expr>;</expr_stmt>
<expr_stmt><expr><name>screen_height</name> <operator>=</operator> <name>old_screen_height</name></expr>;</expr_stmt>
<expr_stmt><expr><name>screen_samples</name> <operator>=</operator> <name>old_screen_samples</name></expr>;</expr_stmt>
<expr_stmt><expr><name>use_vsync</name> <operator>=</operator> <name>old_use_vsync</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>change_gfx_mode</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>init</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
