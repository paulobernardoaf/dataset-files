<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\demos\skater\src\fps.c">



<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;allegro5/allegro.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"fps.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"global.h"</cpp:file></cpp:include>


<function><type><name>FPS</name> <modifier>*</modifier></type><name>create_fps</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>fps</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>FPS</name> <modifier>*</modifier></type><name>ret</name> <init>= <expr><call><name>malloc</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>FPS</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>ret</name><operator>-&gt;</operator><name>nSamples</name></name> <operator>=</operator> <name>fps</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ret</name><operator>-&gt;</operator><name>samples</name></name> <operator>=</operator> <call><name>malloc</name><argument_list>(<argument><expr><name>fps</name> <operator>*</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>fps</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name><name>ret</name><operator>-&gt;</operator><name>samples</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><name><name>ret</name><operator>-&gt;</operator><name>curSample</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ret</name><operator>-&gt;</operator><name>frameCounter</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ret</name><operator>-&gt;</operator><name>framesPerSecond</name></name> <operator>=</operator> <name>fps</name></expr>;</expr_stmt>
<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>destroy_fps</name><parameter_list>(<parameter><decl><type><name>FPS</name> <modifier>*</modifier></type> <name>fps</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name><name>fps</name><operator>-&gt;</operator><name>samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fps</name><operator>-&gt;</operator><name>samples</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fps</name><operator>-&gt;</operator><name>nSamples</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fps</name><operator>-&gt;</operator><name>frameCounter</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>fps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>fps</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>fps_tick</name><parameter_list>(<parameter><decl><type><name>FPS</name> <modifier>*</modifier></type> <name>fps</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>fps</name><operator>-&gt;</operator><name>curSample</name></name><operator>++</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fps</name><operator>-&gt;</operator><name>curSample</name></name> <operator>%=</operator> <name><name>fps</name><operator>-&gt;</operator><name>nSamples</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fps</name><operator>-&gt;</operator><name>framesPerSecond</name></name> <operator>-=</operator> <name><name>fps</name><operator>-&gt;</operator><name>samples</name><index>[<expr><name><name>fps</name><operator>-&gt;</operator><name>curSample</name></name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fps</name><operator>-&gt;</operator><name>framesPerSecond</name></name> <operator>+=</operator> <name><name>fps</name><operator>-&gt;</operator><name>frameCounter</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fps</name><operator>-&gt;</operator><name>samples</name><index>[<expr><name><name>fps</name><operator>-&gt;</operator><name>curSample</name></name></expr>]</index></name> <operator>=</operator> <name><name>fps</name><operator>-&gt;</operator><name>frameCounter</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fps</name><operator>-&gt;</operator><name>frameCounter</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>fps_frame</name><parameter_list>(<parameter><decl><type><name>FPS</name> <modifier>*</modifier></type> <name>fps</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><operator>++</operator><operator>(</operator><name><name>fps</name><operator>-&gt;</operator><name>frameCounter</name></name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>int</name></type> <name>get_fps</name><parameter_list>(<parameter><decl><type><name>FPS</name> <modifier>*</modifier></type> <name>fps</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>fps</name><operator>-&gt;</operator><name>framesPerSecond</name></name></expr>;</return>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>draw_fps</name><parameter_list>(<parameter><decl><type><name>FPS</name> <modifier>*</modifier></type> <name>fps</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_FONT</name> <modifier>*</modifier></type><name>font</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_COLOR</name></type> <name>fg</name></decl></parameter>,
<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>format</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>demo_textprintf_right</name><argument_list>(<argument><expr><name>font</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>y</name></expr></argument>, <argument><expr><name>fg</name></expr></argument>, <argument><expr><name>format</name></expr></argument>,
<argument><expr><call><name>get_fps</name><argument_list>(<argument><expr><name>fps</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
