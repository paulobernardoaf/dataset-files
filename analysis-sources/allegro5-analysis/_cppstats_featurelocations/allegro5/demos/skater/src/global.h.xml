<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\demos\skater\src\global.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__DEMO_GLOBAL_H__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__DEMO_GLOBAL_H__</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mouse_event</name></cpp:macro> <cpp:value>WIN32_mouse_event</cpp:value></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;math.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;allegro5/allegro.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;allegro5/allegro_acodec.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;allegro5/allegro_audio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;allegro5/allegro_font.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;allegro5/allegro_image.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;allegro5/allegro_primitives.h&gt;</cpp:file></cpp:include>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>mouse_event</name></cpp:undef>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"defines.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"keyboard.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_MSVC</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>snprintf</name></cpp:macro> <cpp:value>_snprintf</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vsnprintf</name></cpp:macro> <cpp:value>_vsnprintf</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>



<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>fullscreen</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>bit_depth</name></decl>;</decl_stmt> 



<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>screen_width</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>screen_height</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>screen_orientation</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>window_width</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>window_height</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>screen_samples</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>use_vsync</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>logic_framerate</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>max_frame_skip</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>limit_framerate</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>display_framerate</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>reduce_cpu_usage</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>sound_volume</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>music_volume</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>controller_id</name></decl>;</decl_stmt> 


<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>shadow_offset</name></decl>;</decl_stmt>



<decl_stmt><decl><type><specifier>extern</specifier> <name>VCONTROLLER</name> <modifier>*</modifier></type><name><name>controller</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name></type> <name><name>config_path</name><index>[<expr><name>DEMO_PATH_LENGTH</name></expr>]</index></name></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name></type> <name><name>data_path</name><index>[<expr><name>DEMO_PATH_LENGTH</name></expr>]</index></name></decl>;</decl_stmt>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>demo_font</name></cpp:macro> <cpp:value>((ALLEGRO_FONT *)demo_data[DEMO_FONT].dat)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>demo_font_logo</name></cpp:macro> <cpp:value>((ALLEGRO_FONT *)demo_data[DEMO_FONT_LOGO].dat)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>plain_font</name></cpp:macro> <cpp:value>demo_font</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>extern</specifier> <name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>screen</name></decl>;</decl_stmt>











<function_decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>demo_error</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>














<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>change_gfx_mode</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>read_global_config</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>config</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>write_global_config</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>config</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>unload_data</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>


















<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>demo_textprintf_ex</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ALLEGRO_FONT</name> <modifier>*</modifier></type> <name>font</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>,
<parameter><decl><type><name>ALLEGRO_COLOR</name></type> <name>col</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>align</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>format</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>demo_textprintf</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ALLEGRO_FONT</name> <modifier>*</modifier></type> <name>font</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>,
<parameter><decl><type><name>ALLEGRO_COLOR</name></type> <name>col</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>format</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>demo_textprintf_right</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ALLEGRO_FONT</name> <modifier>*</modifier></type> <name>font</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>,
<parameter><decl><type><name>ALLEGRO_COLOR</name></type> <name>col</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>format</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>demo_textprintf_centre</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ALLEGRO_FONT</name> <modifier>*</modifier></type> <name>font</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>,
<parameter><decl><type><name>ALLEGRO_COLOR</name></type> <name>col</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>format</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>demo_textout</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ALLEGRO_FONT</name> <modifier>*</modifier></type><name>f</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_COLOR</name></type> <name>color</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>demo_textout_right</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ALLEGRO_FONT</name> <modifier>*</modifier></type><name>f</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>s</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_COLOR</name></type> <name>color</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>demo_textout_centre</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ALLEGRO_FONT</name> <modifier>*</modifier></type><name>f</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>s</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_COLOR</name></type> <name>color</name></decl></parameter>)</parameter_list>;</function_decl>
















<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>shadow_textprintf</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_FONT</name> <modifier>*</modifier></type> <name>font</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>,
<parameter><decl><type><name>ALLEGRO_COLOR</name></type> <name>col</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>align</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>text</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><struct>struct <name>DATA_ENTRY</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <specifier>const</specifier> <modifier>*</modifier></type><name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>path</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>subfolder</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>ext</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>dat</name></decl>;</decl_stmt>
}</block></struct></type> <name>DATA_ENTRY</name>;</typedef>

<decl_stmt><decl><type><specifier>extern</specifier> <name>DATA_ENTRY</name> <modifier>*</modifier></type><name>demo_data</name></decl>;</decl_stmt>

<function_decl><type><name>void</name></type> <name>unload_data_entries</name><parameter_list>(<parameter><decl><type><name>DATA_ENTRY</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>get_config_int</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ALLEGRO_CONFIG</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>section</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>def</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>set_config_int</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_CONFIG</name> <modifier>*</modifier></type><name>cfg</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>section</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>my_stricmp</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>s1</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>s2</name></decl></parameter>)</parameter_list>;</function_decl>


<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
