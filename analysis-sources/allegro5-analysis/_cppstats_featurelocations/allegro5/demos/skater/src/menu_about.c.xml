<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\demos\skater\src\menu_about.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;allegro5/allegro.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"defines.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"global.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"menu.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"menus.h"</cpp:file></cpp:include>


<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>_id</name> <init>= <expr><name>DEMO_STATE_ABOUT</name></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>int</name></type> <name>id</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name>_id</name></expr>;</return>
</block_content>}</block></function>


<decl_stmt><decl><type><specifier>static</specifier> <name>DEMO_MENU</name></type> <name><name>menu</name><index>[]</index></name> <init>= <expr><block>{
<expr><call><name>DEMO_MENU_ITEM2</name><argument_list>(<argument><expr><name>demo_text_proc</name></expr></argument>, <argument><expr><literal type="string">"Looks like rain. And soon!"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>DEMO_MENU_ITEM2</name><argument_list>(<argument><expr><name>demo_text_proc</name></expr></argument>, <argument><expr><literal type="string">" "</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>DEMO_MENU_ITEM2</name><argument_list>(<argument><expr><name>demo_text_proc</name></expr></argument>, <argument><expr><literal type="string">"Help coastal outdoor confectioner Ted collect the cherries,"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>DEMO_MENU_ITEM2</name><argument_list>(<argument><expr><name>demo_text_proc</name></expr></argument>, <argument><expr><literal type="string">"bananas, sliced oranges, sweets and ice creams he has on display"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>DEMO_MENU_ITEM2</name><argument_list>(<argument><expr><name>demo_text_proc</name></expr></argument>, <argument><expr><literal type="string">"before the rain begins!"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>DEMO_MENU_ITEM2</name><argument_list>(<argument><expr><name>demo_text_proc</name></expr></argument>, <argument><expr><literal type="string">"Luckily he has a skateboard so it should be a breeze!"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>DEMO_MENU_ITEM2</name><argument_list>(<argument><expr><name>demo_text_proc</name></expr></argument>, <argument><expr><literal type="string">" "</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>DEMO_MENU_ITEM2</name><argument_list>(<argument><expr><name>demo_text_proc</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>DEMO_MENU_ITEM2</name><argument_list>(<argument><expr><name>demo_text_proc</name></expr></argument>, <argument><expr><literal type="string">"by Shawn Hargreaves and many others"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>DEMO_MENU_ITEM2</name><argument_list>(<argument><expr><name>demo_text_proc</name></expr></argument>, <argument><expr><literal type="string">" "</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>DEMO_MENU_ITEM2</name><argument_list>(<argument><expr><name>demo_text_proc</name></expr></argument>, <argument><expr><literal type="string">"Allegro Demo Game"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>DEMO_MENU_ITEM2</name><argument_list>(<argument><expr><name>demo_text_proc</name></expr></argument>, <argument><expr><literal type="string">"By Miran Amon, Nick Davies, Elias Pschernig, Thomas Harte &amp; Jakub Wasilewski"</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>DEMO_MENU_ITEM2</name><argument_list>(<argument><expr><name>demo_text_proc</name></expr></argument>, <argument><expr><literal type="string">" "</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>DEMO_MENU_ITEM4</name><argument_list>(<argument><expr><name>demo_button_proc</name></expr></argument>, <argument><expr><literal type="string">"Back"</literal></expr></argument>, <argument><expr><name>DEMO_MENU_SELECTABLE</name></expr></argument>, <argument><expr><name>DEMO_STATE_MAIN_MENU</name></expr></argument>)</argument_list></call></expr>,
<expr><name>DEMO_MENU_END</name></expr>
}</block></expr></init></decl>;</decl_stmt>


<function><type><specifier>static</specifier> <name>void</name></type> <name>init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>static</specifier> <name>char</name></type> <name><name>version</name><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>v</name> <init>= <expr><call><name>al_get_allegro_version</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>menu</name><index>[<expr><literal type="number">7</literal></expr>]</index></name><operator>.</operator><name>name</name> <operator>=</operator> <name>version</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>sprintf</name><argument_list>(<argument><expr><name><name>menu</name><index>[<expr><literal type="number">7</literal></expr>]</index></name><operator>.</operator><name>name</name></expr></argument>, <argument><expr><literal type="string">"Allegro %d.%d.%d"</literal></expr></argument>, <argument><expr><operator>(</operator><name>v</name> <operator>&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr></argument>, <argument><expr><operator>(</operator><name>v</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr></argument>, <argument><expr><operator>(</operator><name>v</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>init_demo_menu</name><argument_list>(<argument><expr><name>menu</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>int</name></type> <name>update</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><call><name>update_demo_menu</name><argument_list>(<argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<switch>switch <condition>(<expr><name>ret</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>DEMO_MENU_CONTINUE</name></expr>:</case>
<return>return <expr><call><name>id</name><argument_list>()</argument_list></call></expr>;</return>

<case>case <expr><name>DEMO_MENU_BACK</name></expr>:</case>
<return>return <expr><name>DEMO_STATE_MAIN_MENU</name></expr>;</return>

<default>default:</default>
<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></switch><empty_stmt>;</empty_stmt>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>void</name></type> <name>draw</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>draw_demo_menu</name><argument_list>(<argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>create_about_menu</name><parameter_list>(<parameter><decl><type><name>GAMESTATE</name> <modifier>*</modifier></type><name>state</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>state</name><operator>-&gt;</operator><name>id</name></name> <operator>=</operator> <name>id</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>state</name><operator>-&gt;</operator><name>init</name></name> <operator>=</operator> <name>init</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>state</name><operator>-&gt;</operator><name>update</name></name> <operator>=</operator> <name>update</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>state</name><operator>-&gt;</operator><name>draw</name></name> <operator>=</operator> <name>draw</name></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
