<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\demos\skater\src\level.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__LEVEL_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__LEVEL_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;allegro5/allegro.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"quadtree.h"</cpp:file></cpp:include>

<function_decl><type><specifier>extern</specifier> <name><name>struct</name> <name>Level</name></name> <modifier>*</modifier></type><name>LoadLevel</name><parameter_list>(<parameter><decl><type><name>char</name> <specifier>const</specifier> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>collradius</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>FreeLevel</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Level</name></name> <modifier>*</modifier></type><name>lvl</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>GetLevelError</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>SetInitialState</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Level</name></name> <modifier>*</modifier></type><name>lvl</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>DrawLevelBackground</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Level</name></name> <modifier>*</modifier></type><name>lev</name></decl></parameter>,
<parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>pos</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>DrawLevelForeground</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Level</name></name> <modifier>*</modifier></type><name>lev</name></decl></parameter>)</parameter_list>;</function_decl>



<struct>struct <name>LevelState</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>Length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>Data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>DoorOpen</name></decl>;</decl_stmt>
}</block>;</struct>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>SetDoorOpen</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Level</name></name> <modifier>*</modifier></type><name>Lvl</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name><name>struct</name> <name>LevelState</name></name> <modifier>*</modifier></type><name>BorrowState</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Level</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>ReturnState</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Level</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>LevelState</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>FreeState</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>LevelState</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>ObtainBitmap</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>ALLEGRO_SAMPLE</name> <modifier>*</modifier></type><name>ObtainSample</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
