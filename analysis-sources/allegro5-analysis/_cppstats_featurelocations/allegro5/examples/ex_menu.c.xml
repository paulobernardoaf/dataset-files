<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\examples\ex_menu.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro_native_dialog.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro_image.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;math.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common.c"</cpp:file></cpp:include>





<enum>enum <block>{
<decl><name>FILE_ID</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>FILE_OPEN_ID</name></decl>,
<decl><name>FILE_RESIZE_ID</name></decl>,
<decl><name>FILE_FULLSCREEN_ID</name></decl>,
<decl><name>FILE_CLOSE_ID</name></decl>,
<decl><name>FILE_EXIT_ID</name></decl>,
<decl><name>DYNAMIC_ID</name></decl>,
<decl><name>DYNAMIC_CHECKBOX_ID</name></decl>,
<decl><name>DYNAMIC_DISABLED_ID</name></decl>,
<decl><name>DYNAMIC_DELETE_ID</name></decl>,
<decl><name>DYNAMIC_CREATE_ID</name></decl>,
<decl><name>HELP_ABOUT_ID</name></decl>
}</block>;</enum>




<decl_stmt><decl><type><name>ALLEGRO_MENU_INFO</name></type> <name><name>main_menu_info</name><index>[]</index></name> <init>= <expr><block>{
<expr><call><name>ALLEGRO_START_OF_MENU</name><argument_list>(<argument><expr><literal type="string">"&amp;File"</literal></expr></argument>, <argument><expr><name>FILE_ID</name></expr></argument>)</argument_list></call></expr>,
<expr><block>{ <expr><literal type="string">"&amp;Open"</literal></expr>, <expr><name>FILE_OPEN_ID</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr> }</block></expr>,
<expr><name>ALLEGRO_MENU_SEPARATOR</name></expr>,
<expr><block>{ <expr><literal type="string">"E&amp;xit"</literal></expr>, <expr><name>FILE_EXIT_ID</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr> }</block></expr>,
<expr><name>ALLEGRO_END_OF_MENU</name></expr>,

<expr><call><name>ALLEGRO_START_OF_MENU</name><argument_list>(<argument><expr><literal type="string">"&amp;Dynamic Options"</literal></expr></argument>, <argument><expr><name>DYNAMIC_ID</name></expr></argument>)</argument_list></call></expr>,
<expr><block>{ <expr><literal type="string">"&amp;Checkbox"</literal></expr>, <expr><name>DYNAMIC_CHECKBOX_ID</name></expr>, <expr><name>ALLEGRO_MENU_ITEM_CHECKED</name></expr>, <expr><name>NULL</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"&amp;Disabled"</literal></expr>, <expr><name>DYNAMIC_DISABLED_ID</name></expr>, <expr><name>ALLEGRO_MENU_ITEM_DISABLED</name></expr>, <expr><name>NULL</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"DELETE ME!"</literal></expr>, <expr><name>DYNAMIC_DELETE_ID</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"Click Me"</literal></expr>, <expr><name>DYNAMIC_CREATE_ID</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr> }</block></expr>,
<expr><name>ALLEGRO_END_OF_MENU</name></expr>,

<expr><call><name>ALLEGRO_START_OF_MENU</name><argument_list>(<argument><expr><literal type="string">"&amp;Help"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>,
<expr><block>{ <expr><literal type="string">"&amp;About"</literal></expr>, <expr><name>HELP_ABOUT_ID</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr> }</block></expr>,
<expr><name>ALLEGRO_END_OF_MENU</name></expr>,

<expr><name>ALLEGRO_END_OF_MENU</name></expr>
}</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><name>ALLEGRO_MENU_INFO</name></type> <name><name>child_menu_info</name><index>[]</index></name> <init>= <expr><block>{
<expr><call><name>ALLEGRO_START_OF_MENU</name><argument_list>(<argument><expr><literal type="string">"&amp;File"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>,
<expr><block>{ <expr><literal type="string">"&amp;Close"</literal></expr>, <expr><name>FILE_CLOSE_ID</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr> }</block></expr>,
<expr><name>ALLEGRO_END_OF_MENU</name></expr>,
<expr><name>ALLEGRO_END_OF_MENU</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>argv</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>initial_width</name> <init>= <expr><literal type="number">320</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>initial_height</name> <init>= <expr><literal type="number">200</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>dcount</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_EVENT_QUEUE</name> <modifier>*</modifier></type><name>queue</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_TIMER</name> <modifier>*</modifier></type><name>timer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>redraw</name> <init>= <expr><name>true</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>menu_visible</name> <init>= <expr><name>true</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>pmenu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bg</name></decl>;</decl_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>argc</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>argv</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>al_init</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>abort_example</name><argument_list>(<argument><expr><literal type="string">"Could not init Allegro.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>al_init_native_dialog_addon</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>abort_example</name><argument_list>(<argument><expr><literal type="string">"Could not init the native dialog addon.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>al_init_image_addon</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_install_keyboard</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_install_mouse</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>queue</name> <operator>=</operator> <call><name>al_create_event_queue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_GTK_TOPLEVEL</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>al_set_new_display_flags</name><argument_list>(<argument><expr><name>ALLEGRO_RESIZABLE</name> <operator>|</operator> <name>ALLEGRO_GTK_TOPLEVEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr_stmt><expr><call><name>al_set_new_display_flags</name><argument_list>(<argument><expr><name>ALLEGRO_RESIZABLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr_stmt><expr><name>display</name> <operator>=</operator> <call><name>al_create_display</name><argument_list>(<argument><expr><name>initial_width</name></expr></argument>, <argument><expr><name>initial_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>display</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>abort_example</name><argument_list>(<argument><expr><literal type="string">"Error creating display\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>al_set_window_title</name><argument_list>(<argument><expr><name>display</name></expr></argument>, <argument><expr><literal type="string">"ex_menu - Main Window"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>menu</name> <operator>=</operator> <call><name>al_build_menu</name><argument_list>(<argument><expr><name>main_menu_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>menu</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>abort_example</name><argument_list>(<argument><expr><literal type="string">"Error creating menu\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>



<expr_stmt><expr><call><name>al_set_menu_item_icon</name><argument_list>(<argument><expr><name>menu</name></expr></argument>, <argument><expr><name>HELP_ABOUT_ID</name></expr></argument>, <argument><expr><call><name>al_load_bitmap</name><argument_list>(<argument><expr><literal type="string">"data/icon.tga"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>al_set_display_menu</name><argument_list>(<argument><expr><name>display</name></expr></argument>, <argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>


<expr_stmt><expr><name>pmenu</name> <operator>=</operator> <call><name>al_clone_menu_for_popup</name><argument_list>(<argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_destroy_menu</name><argument_list>(<argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>menu</name> <operator>=</operator> <name>pmenu</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>

<expr_stmt><expr><name>pmenu</name> <operator>=</operator> <call><name>al_create_popup_menu</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>pmenu</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>al_append_menu_item</name><argument_list>(<argument><expr><name>pmenu</name></expr></argument>, <argument><expr><literal type="string">"&amp;Open"</literal></expr></argument>, <argument><expr><name>FILE_OPEN_ID</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_append_menu_item</name><argument_list>(<argument><expr><name>pmenu</name></expr></argument>, <argument><expr><literal type="string">"&amp;Resize"</literal></expr></argument>, <argument><expr><name>FILE_RESIZE_ID</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_append_menu_item</name><argument_list>(<argument><expr><name>pmenu</name></expr></argument>, <argument><expr><literal type="string">"&amp;Fullscreen window"</literal></expr></argument>, <argument><expr><name>FILE_FULLSCREEN_ID</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_append_menu_item</name><argument_list>(<argument><expr><name>pmenu</name></expr></argument>, <argument><expr><literal type="string">"E&amp;xit"</literal></expr></argument>, <argument><expr><name>FILE_EXIT_ID</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>timer</name> <operator>=</operator> <call><name>al_create_timer</name><argument_list>(<argument><expr><literal type="number">1.0</literal> <operator>/</operator> <literal type="number">60</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_register_event_source</name><argument_list>(<argument><expr><name>queue</name></expr></argument>, <argument><expr><call><name>al_get_display_event_source</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_register_event_source</name><argument_list>(<argument><expr><name>queue</name></expr></argument>, <argument><expr><call><name>al_get_default_menu_event_source</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_register_event_source</name><argument_list>(<argument><expr><name>queue</name></expr></argument>, <argument><expr><call><name>al_get_keyboard_event_source</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_register_event_source</name><argument_list>(<argument><expr><name>queue</name></expr></argument>, <argument><expr><call><name>al_get_mouse_event_source</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_register_event_source</name><argument_list>(<argument><expr><name>queue</name></expr></argument>, <argument><expr><call><name>al_get_timer_event_source</name><argument_list>(<argument><expr><name>timer</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>bg</name> <operator>=</operator> <call><name>al_load_bitmap</name><argument_list>(<argument><expr><literal type="string">"data/mysha.pcx"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_start_timer</name><argument_list>(<argument><expr><name>timer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<while>while <condition>(<expr><name>true</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_EVENT</name></type> <name>event</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>redraw</name> <operator>&amp;&amp;</operator> <call><name>al_is_event_queue_empty</name><argument_list>(<argument><expr><name>queue</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>redraw</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>bg</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>float</name></type> <name>t</name> <init>= <expr><call><name>al_get_timer_count</name><argument_list>(<argument><expr><name>timer</name></expr></argument>)</argument_list></call> <operator>*</operator> <literal type="number">0.1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>sw</name> <init>= <expr><call><name>al_get_bitmap_width</name><argument_list>(<argument><expr><name>bg</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>sh</name> <init>= <expr><call><name>al_get_bitmap_height</name><argument_list>(<argument><expr><name>bg</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>dw</name> <init>= <expr><call><name>al_get_display_width</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>dh</name> <init>= <expr><call><name>al_get_display_height</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>cx</name> <init>= <expr><name>dw</name><operator>/</operator><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>cy</name> <init>= <expr><name>dh</name><operator>/</operator><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>dw</name> <operator>*=</operator> <literal type="number">1.2</literal> <operator>+</operator> <literal type="number">0.2</literal> <operator>*</operator> <call><name>cos</name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dh</name> <operator>*=</operator> <literal type="number">1.2</literal> <operator>+</operator> <literal type="number">0.2</literal> <operator>*</operator> <call><name>cos</name><argument_list>(<argument><expr><literal type="number">1.1</literal> <operator>*</operator> <name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_draw_scaled_bitmap</name><argument_list>(<argument><expr><name>bg</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>sw</name></expr></argument>, <argument><expr><name>sh</name></expr></argument>,
<argument><expr><name>cx</name> <operator>-</operator> <name>dw</name><operator>/</operator><literal type="number">2</literal></expr></argument>, <argument><expr><name>cy</name> <operator>-</operator> <name>dh</name><operator>/</operator><literal type="number">2</literal></expr></argument>, <argument><expr><name>dw</name></expr></argument>, <argument><expr><name>dh</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>al_flip_display</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>al_wait_for_event</name><argument_list>(<argument><expr><name>queue</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>event</name><operator>.</operator><name>type</name></name> <operator>==</operator> <name>ALLEGRO_EVENT_DISPLAY_CLOSE</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>event</name><operator>.</operator><name>display</name><operator>.</operator><name>source</name></name> <operator>==</operator> <name>display</name></expr>)</condition> <block>{<block_content>

<break>break;</break>
</block_content>}</block></if>
<else>else <block>{<block_content>

<expr_stmt><expr><call><name>al_set_display_menu</name><argument_list>(<argument><expr><name><name>event</name><operator>.</operator><name>display</name><operator>.</operator><name>source</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_destroy_display</name><argument_list>(<argument><expr><name><name>event</name><operator>.</operator><name>display</name><operator>.</operator><name>source</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>event</name><operator>.</operator><name>type</name></name> <operator>==</operator> <name>ALLEGRO_EVENT_MENU_CLICK</name></expr>)</condition> <block>{<block_content>




<if_stmt><if>if <condition>(<expr><name><name>event</name><operator>.</operator><name>user</name><operator>.</operator><name>data2</name></name> <operator>==</operator> <operator>(</operator><name>intptr_t</name><operator>)</operator> <name>display</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>event</name><operator>.</operator><name>user</name><operator>.</operator><name>data1</name></name> <operator>==</operator> <name>FILE_OPEN_ID</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>d</name> <init>= <expr><call><name>al_create_display</name><argument_list>(<argument><expr><literal type="number">320</literal></expr></argument>, <argument><expr><literal type="number">240</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>d</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name> <init>= <expr><call><name>al_build_menu</name><argument_list>(<argument><expr><name>child_menu_info</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>al_set_display_menu</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_clear_to_color</name><argument_list>(<argument><expr><call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_flip_display</name><argument_list>()</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>al_register_event_source</name><argument_list>(<argument><expr><name>queue</name></expr></argument>, <argument><expr><call><name>al_get_display_event_source</name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_target_backbuffer</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_window_title</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><literal type="string">"ex_menu - Child Window"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>event</name><operator>.</operator><name>user</name><operator>.</operator><name>data1</name></name> <operator>==</operator> <name>DYNAMIC_CHECKBOX_ID</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>al_set_menu_item_flags</name><argument_list>(<argument><expr><name>menu</name></expr></argument>, <argument><expr><name>DYNAMIC_DISABLED_ID</name></expr></argument>, <argument><expr><call><name>al_get_menu_item_flags</name><argument_list>(<argument><expr><name>menu</name></expr></argument>, <argument><expr><name>DYNAMIC_DISABLED_ID</name></expr></argument>)</argument_list></call> <operator>^</operator> <name>ALLEGRO_MENU_ITEM_DISABLED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_menu_item_caption</name><argument_list>(<argument><expr><name>menu</name></expr></argument>, <argument><expr><name>DYNAMIC_DISABLED_ID</name></expr></argument>, 
<argument><expr><ternary><condition><expr><operator>(</operator><call><name>al_get_menu_item_flags</name><argument_list>(<argument><expr><name>menu</name></expr></argument>, <argument><expr><name>DYNAMIC_DISABLED_ID</name></expr></argument>)</argument_list></call> <operator>&amp;</operator> <name>ALLEGRO_MENU_ITEM_DISABLED</name><operator>)</operator></expr> ?</condition><then>
<expr><literal type="string">"&amp;Disabled"</literal></expr> </then><else>: <expr><literal type="string">"&amp;Enabled"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>event</name><operator>.</operator><name>user</name><operator>.</operator><name>data1</name></name> <operator>==</operator> <name>DYNAMIC_DELETE_ID</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>al_remove_menu_item</name><argument_list>(<argument><expr><name>menu</name></expr></argument>, <argument><expr><name>DYNAMIC_DELETE_ID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>event</name><operator>.</operator><name>user</name><operator>.</operator><name>data1</name></name> <operator>==</operator> <name>DYNAMIC_CREATE_ID</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>dcount</name> <operator>&lt;</operator> <literal type="number">5</literal></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>char</name></type> <name><name>new_name</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><operator>++</operator><name>dcount</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>dcount</name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>al_append_menu_item</name><argument_list>(<argument><expr><call><name>al_find_menu</name><argument_list>(<argument><expr><name>menu</name></expr></argument>, <argument><expr><name>DYNAMIC_ID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>sprintf</name><argument_list>(<argument><expr><name>new_name</name></expr></argument>, <argument><expr><literal type="string">"New #%d"</literal></expr></argument>, <argument><expr><name>dcount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>al_append_menu_item</name><argument_list>(<argument><expr><call><name>al_find_menu</name><argument_list>(<argument><expr><name>menu</name></expr></argument>, <argument><expr><name>DYNAMIC_ID</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>new_name</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>dcount</name> <operator>==</operator> <literal type="number">5</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>al_set_menu_item_flags</name><argument_list>(<argument><expr><name>menu</name></expr></argument>, <argument><expr><name>DYNAMIC_CREATE_ID</name></expr></argument>, <argument><expr><name>ALLEGRO_MENU_ITEM_DISABLED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>event</name><operator>.</operator><name>user</name><operator>.</operator><name>data1</name></name> <operator>==</operator> <name>HELP_ABOUT_ID</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>al_show_native_message_box</name><argument_list>(<argument><expr><name>display</name></expr></argument>, <argument><expr><literal type="string">"About"</literal></expr></argument>, <argument><expr><literal type="string">"ex_menu"</literal></expr></argument>,
<argument><expr><literal type="string">"This is a sample program that shows how to use menus"</literal></expr></argument>,
<argument><expr><literal type="string">"OK"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>event</name><operator>.</operator><name>user</name><operator>.</operator><name>data1</name></name> <operator>==</operator> <name>FILE_EXIT_ID</name></expr>)</condition> <block>{<block_content>
<break>break;</break>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>event</name><operator>.</operator><name>user</name><operator>.</operator><name>data1</name></name> <operator>==</operator> <name>FILE_RESIZE_ID</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>w</name> <init>= <expr><call><name>al_get_display_width</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call> <operator>*</operator> <literal type="number">2</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>h</name> <init>= <expr><call><name>al_get_display_height</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call> <operator>*</operator> <literal type="number">2</literal></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>w</name> <operator>&gt;</operator> <literal type="number">960</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>w</name> <operator>=</operator> <literal type="number">960</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>h</name> <operator>&gt;</operator> <literal type="number">600</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>h</name> <operator>=</operator> <literal type="number">600</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>al_resize_display</name><argument_list>(<argument><expr><name>display</name></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>event</name><operator>.</operator><name>user</name><operator>.</operator><name>data1</name></name> <operator>==</operator> <name>FILE_FULLSCREEN_ID</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>flags</name> <init>= <expr><call><name>al_get_display_flags</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>value</name> <init>= <expr><ternary><condition><expr><operator>(</operator><name>flags</name> <operator>&amp;</operator> <name>ALLEGRO_FULLSCREEN_WINDOW</name><operator>)</operator></expr> ?</condition><then> <expr><name>true</name></expr> </then><else>: <expr><name>false</name></expr></else></ternary></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>al_set_display_flag</name><argument_list>(<argument><expr><name>display</name></expr></argument>, <argument><expr><name>ALLEGRO_FULLSCREEN_WINDOW</name></expr></argument>, <argument><expr><operator>!</operator><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>event</name><operator>.</operator><name>user</name><operator>.</operator><name>data1</name></name> <operator>==</operator> <name>FILE_CLOSE_ID</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>d</name> <init>= <expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><operator>)</operator> <name><name>event</name><operator>.</operator><name>user</name><operator>.</operator><name>data2</name></name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>d</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>al_set_display_menu</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_destroy_display</name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>event</name><operator>.</operator><name>type</name></name> <operator>==</operator> <name>ALLEGRO_EVENT_MOUSE_BUTTON_UP</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>event</name><operator>.</operator><name>mouse</name><operator>.</operator><name>display</name></name> <operator>==</operator> <name>display</name> <operator>&amp;&amp;</operator> <name><name>event</name><operator>.</operator><name>mouse</name><operator>.</operator><name>button</name></name> <operator>==</operator> <literal type="number">2</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>pmenu</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>al_popup_menu</name><argument_list>(<argument><expr><name>pmenu</name></expr></argument>, <argument><expr><name>display</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>log_printf</name><argument_list>(<argument><expr><literal type="string">"Couldn't popup menu!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>event</name><operator>.</operator><name>type</name></name> <operator>==</operator> <name>ALLEGRO_EVENT_KEY_CHAR</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>event</name><operator>.</operator><name>keyboard</name><operator>.</operator><name>display</name></name> <operator>==</operator> <name>display</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>event</name><operator>.</operator><name>keyboard</name><operator>.</operator><name>unichar</name></name> <operator>==</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>menu_visible</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>al_remove_display_menu</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><call><name>al_set_display_menu</name><argument_list>(<argument><expr><name>display</name></expr></argument>, <argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><name>menu_visible</name> <operator>=</operator> <operator>!</operator><name>menu_visible</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>event</name><operator>.</operator><name>type</name></name> <operator>==</operator> <name>ALLEGRO_EVENT_DISPLAY_RESIZE</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>al_acknowledge_resize</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>redraw</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>event</name><operator>.</operator><name>type</name></name> <operator>==</operator> <name>ALLEGRO_EVENT_TIMER</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>redraw</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></while>


<expr_stmt><expr><call><name>al_set_display_menu</name><argument_list>(<argument><expr><name>display</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
