<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\addons\native_dialog\gtk_xgtk.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;gtk/gtk.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_native_dialog_cfg.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_bitmap.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_x.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_xdisplay.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_xevents.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_xsystem.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gtk_dialog.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gtk_xgtk.h"</cpp:file></cpp:include>

<macro><name>ALLEGRO_DEBUG_CHANNEL</name><argument_list>(<argument><literal type="string">"gtk"</literal></argument>)</argument_list></macro>


<typedef>typedef <type><struct>struct <name>ARGS_CREATE</name>
<block>{
<decl_stmt><decl><type><name>ARGS_BASE</name></type> <name>base</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY_XGLX</name> <modifier>*</modifier></type><name>display</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>w</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>h</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>title</name></decl>;</decl_stmt>
}</block></struct></type> <name>ARGS_CREATE</name>;</typedef>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>ARGS_BASE</name></type> <name>base</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY_XGLX</name> <modifier>*</modifier></type><name>display</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>is_last</name></decl>;</decl_stmt>
}</block></struct></type> <name>ARGS_DESTROY</name>;</typedef>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>ARGS_BASE</name></type> <name>base</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY_XGLX</name> <modifier>*</modifier></type><name>display</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>w</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>h</name></decl>;</decl_stmt>
}</block></struct></type> <name>ARGS_RESIZE</name>;</typedef>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>ARGS_BASE</name></type> <name>base</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY_XGLX</name> <modifier>*</modifier></type><name>display</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>title</name></decl>;</decl_stmt>
}</block></struct></type> <name>ARGS_TITLE</name>;</typedef>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>ARGS_BASE</name></type> <name>base</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY_XGLX</name> <modifier>*</modifier></type><name>display</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>fullscreen</name></decl>;</decl_stmt>
}</block></struct></type> <name>ARGS_FULLSCREEN_WINDOW</name>;</typedef>

<typedef>typedef <type><struct>struct
<block>{
<decl_stmt><decl><type><name>ARGS_BASE</name></type> <name>base</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY_XGLX</name> <modifier>*</modifier></type><name>display</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>y</name></decl>;</decl_stmt>
}</block></struct></type> <name>ARGS_POSITION</name>;</typedef>



<function_decl><type><specifier>static</specifier> <name>gboolean</name></type> <name>xgtk_quit_callback</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>, <parameter><decl><type><name>GdkEvent</name> <modifier>*</modifier></type><name>event</name></decl></parameter>,
<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>gboolean</name></type> <name>xgtk_handle_configure_event</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>,
<parameter><decl><type><name>GdkEventConfigure</name> <modifier>*</modifier></type><name>event</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>xgtk_set_fullscreen_window</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>onoff</name></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><specifier>static</specifier> <name><name>struct</name> <name>ALLEGRO_XWIN_DISPLAY_OVERRIDABLE_INTERFACE</name></name></type> <name>xgtk_override_vt</name></decl>;</decl_stmt>



<function><type><specifier>static</specifier> <name>gboolean</name></type> <name>do_create_display_hook</name><parameter_list>(<parameter><decl><type><name>gpointer</name></type> <name>data</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>ARGS_CREATE</name> <modifier>*</modifier></type><name>args</name> <init>= <expr><call><name>_al_gtk_lock_args</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name> <init>= <expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><operator>)</operator><name><name>args</name><operator>-&gt;</operator><name>display</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY_XGLX</name> <modifier>*</modifier></type><name>d</name> <init>= <expr><name><name>args</name><operator>-&gt;</operator><name>display</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>w</name> <init>= <expr><name><name>args</name><operator>-&gt;</operator><name>w</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>h</name> <init>= <expr><name><name>args</name><operator>-&gt;</operator><name>h</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>window</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>vbox</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>socket</name></decl>;</decl_stmt>

<expr_stmt><expr><name>window</name> <operator>=</operator> <call><name>gtk_window_new</name><argument_list>(<argument><expr><name>GTK_WINDOW_TOPLEVEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>gtk</name><operator>-&gt;</operator><name>gtkwindow</name></name> <operator>=</operator> <name>window</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>gtk_window_set_default_size</name><argument_list>(<argument><expr><call><name>GTK_WINDOW</name><argument_list>(<argument><expr><name>window</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>g_signal_connect</name><argument_list>(<argument><expr><call><name>G_OBJECT</name><argument_list>(<argument><expr><name>window</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"delete-event"</literal></expr></argument>,
<argument><expr><call><name>G_CALLBACK</name><argument_list>(<argument><expr><name>xgtk_quit_callback</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>display</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>g_signal_connect</name><argument_list>(<argument><expr><call><name>G_OBJECT</name><argument_list>(<argument><expr><name>window</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"configure-event"</literal></expr></argument>,
<argument><expr><call><name>G_CALLBACK</name><argument_list>(<argument><expr><name>xgtk_handle_configure_event</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>display</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vbox</name> <operator>=</operator> <call><name>gtk_vbox_new</name><argument_list>(<argument><expr><name>FALSE</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>gtk_container_add</name><argument_list>(<argument><expr><call><name>GTK_CONTAINER</name><argument_list>(<argument><expr><name>window</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>vbox</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>socket</name> <operator>=</operator> <call><name>gtk_socket_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>gtk</name><operator>-&gt;</operator><name>gtksocket</name></name> <operator>=</operator> <name>socket</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>gtk_box_pack_end</name><argument_list>(<argument><expr><call><name>GTK_BOX</name><argument_list>(<argument><expr><name>vbox</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>socket</name></expr></argument>, <argument><expr><name>TRUE</name></expr></argument>, <argument><expr><name>TRUE</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>gtk_socket_add_id</name><argument_list>(<argument><expr><call><name>GTK_SOCKET</name><argument_list>(<argument><expr><name>socket</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>d</name><operator>-&gt;</operator><name>window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"gtk_socket_add_id: window = %ld\n"</literal></expr></argument>, <argument><expr><name><name>d</name><operator>-&gt;</operator><name>window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_window_set_title</name><argument_list>(<argument><expr><call><name>GTK_WINDOW</name><argument_list>(<argument><expr><name>window</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>args</name><operator>-&gt;</operator><name>title</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_widget_show_all</name><argument_list>(<argument><expr><name>window</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>display</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>ALLEGRO_RESIZABLE</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>gtk_widget_set_size_request</name><argument_list>(<argument><expr><name>socket</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>gtk_window_set_resizable</name><argument_list>(<argument><expr><call><name>GTK_WINDOW</name><argument_list>(<argument><expr><name>window</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><call><name>gtk_window_set_resizable</name><argument_list>(<argument><expr><call><name>GTK_WINDOW</name><argument_list>(<argument><expr><name>window</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>display</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>ALLEGRO_FULLSCREEN_WINDOW</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>gtk_window_fullscreen</name><argument_list>(<argument><expr><call><name>GTK_WINDOW</name><argument_list>(<argument><expr><name>window</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>overridable_vt</name></name> <operator>=</operator> <operator>&amp;</operator><name>xgtk_override_vt</name></expr>;</expr_stmt>

<return>return <expr><call><name>_al_gtk_release_args</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>bool</name></type> <name>xgtk_create_display_hook</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>h</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY_XGLX</name> <modifier>*</modifier></type><name>d</name> <init>= <expr><operator>(</operator><name>ALLEGRO_DISPLAY_XGLX</name> <operator>*</operator><operator>)</operator><name>display</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ARGS_CREATE</name></type> <name>args</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>gtk</name></name> <operator>=</operator> <call><name>al_calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><operator>(</operator><name><name>d</name><operator>-&gt;</operator><name>gtk</name></name><operator>)</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>d</name><operator>-&gt;</operator><name>gtk</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ALLEGRO_WARN</name><argument_list>(<argument><expr><literal type="string">"Out of memory\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>_al_gtk_ensure_thread</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>al_free</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>gtk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>gtk</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>_al_gtk_init_args</name><argument_list>(<argument><expr><operator>&amp;</operator><name>args</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>al_free</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>gtk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>gtk</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>args</name><operator>.</operator><name>display</name></name> <operator>=</operator> <name>d</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>args</name><operator>.</operator><name>w</name></name> <operator>=</operator> <name>w</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>args</name><operator>.</operator><name>h</name></name> <operator>=</operator> <name>h</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>args</name><operator>.</operator><name>title</name></name> <operator>=</operator> <call><name>al_get_new_window_title</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>_al_gtk_wait_for_args</name><argument_list>(<argument><expr><name>do_create_display_hook</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>args</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>gboolean</name></type> <name>xgtk_quit_callback</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>, <parameter><decl><type><name>GdkEvent</name> <modifier>*</modifier></type><name>event</name></decl></parameter>,
<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>widget</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>event</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_display_xglx_closebutton</name><argument_list>(<argument><expr><name>display</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>TRUE</name></expr>;</return>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>gboolean</name></type> <name>xgtk_handle_configure_event</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>widget</name></decl></parameter>,
<parameter><decl><type><name>GdkEventConfigure</name> <modifier>*</modifier></type><name>event</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY_XGLX</name> <modifier>*</modifier></type><name>d</name> <init>= <expr><operator>(</operator><name>ALLEGRO_DISPLAY_XGLX</name> <operator>*</operator><operator>)</operator><name>display</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>widget</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>event</name></expr>;</expr_stmt>




<expr_stmt><expr><call><name>gtk_window_get_position</name><argument_list>(<argument><expr><call><name>GTK_WINDOW</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>gtk</name><operator>-&gt;</operator><name>gtkwindow</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>d</name><operator>-&gt;</operator><name>x</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>d</name><operator>-&gt;</operator><name>y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>FALSE</name></expr>;</return>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>gboolean</name></type> <name>do_destroy_display_hook</name><parameter_list>(<parameter><decl><type><name>gpointer</name></type> <name>data</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ARGS_DESTROY</name> <modifier>*</modifier></type><name>args</name> <init>= <expr><call><name>_al_gtk_lock_args</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY_XGLX</name> <modifier>*</modifier></type><name>d</name> <init>= <expr><name><name>args</name><operator>-&gt;</operator><name>display</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>is_last</name> <init>= <expr><name><name>args</name><operator>-&gt;</operator><name>is_last</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>gtk_widget_destroy</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>gtk</name><operator>-&gt;</operator><name>gtkwindow</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>is_last</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>gtk_main_quit</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><call><name>_al_gtk_release_args</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>void</name></type> <name>xgtk_destroy_display_hook</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>is_last</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY_XGLX</name> <modifier>*</modifier></type><name>d</name> <init>= <expr><operator>(</operator><name>ALLEGRO_DISPLAY_XGLX</name> <operator>*</operator><operator>)</operator><name>display</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ARGS_DESTROY</name></type> <name>args</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>_al_gtk_init_args</name><argument_list>(<argument><expr><operator>&amp;</operator><name>args</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>args</name><operator>.</operator><name>display</name></name> <operator>=</operator> <name>d</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>args</name><operator>.</operator><name>is_last</name></name> <operator>=</operator> <name>is_last</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_gtk_wait_for_args</name><argument_list>(<argument><expr><name>do_destroy_display_hook</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_free</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>gtk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>gtk</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>gboolean</name></type> <name>do_resize_display1</name><parameter_list>(<parameter><decl><type><name>gpointer</name></type> <name>data</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ARGS_RESIZE</name> <modifier>*</modifier></type><name>args</name> <init>= <expr><call><name>_al_gtk_lock_args</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY_XGLX</name> <modifier>*</modifier></type><name>d</name> <init>= <expr><name><name>args</name><operator>-&gt;</operator><name>display</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>w</name> <init>= <expr><name><name>args</name><operator>-&gt;</operator><name>w</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>h</name> <init>= <expr><name><name>args</name><operator>-&gt;</operator><name>h</name></name></expr></init></decl>;</decl_stmt>








<expr_stmt><expr><call><name>gtk_window_resize</name><argument_list>(<argument><expr><call><name>GTK_WINDOW</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>gtk</name><operator>-&gt;</operator><name>gtkwindow</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>gtk_widget_set_size_request</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>gtk</name><operator>-&gt;</operator><name>gtksocket</name></name></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>_al_gtk_release_args</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>gboolean</name></type> <name>do_resize_display2</name><parameter_list>(<parameter><decl><type><name>gpointer</name></type> <name>data</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ARGS_RESIZE</name> <modifier>*</modifier></type><name>args</name> <init>= <expr><call><name>_al_gtk_lock_args</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY_XGLX</name> <modifier>*</modifier></type><name>d</name> <init>= <expr><name><name>args</name><operator>-&gt;</operator><name>display</name></name></expr></init></decl>;</decl_stmt>


<expr_stmt><expr><call><name>gtk_widget_set_size_request</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>gtk</name><operator>-&gt;</operator><name>gtksocket</name></name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>_al_gtk_release_args</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>bool</name></type> <name>xgtk_resize_display</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>h</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_SYSTEM_XGLX</name> <modifier>*</modifier></type><name>system</name> <init>= <expr><operator>(</operator><name>ALLEGRO_SYSTEM_XGLX</name> <operator>*</operator><operator>)</operator><call><name>al_get_system_driver</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY_XGLX</name> <modifier>*</modifier></type><name>d</name> <init>= <expr><operator>(</operator><name>ALLEGRO_DISPLAY_XGLX</name> <operator>*</operator><operator>)</operator><name>display</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>ret</name> <init>= <expr><name>true</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>_al_mutex_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>system</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>w</name> <operator>!=</operator> <name><name>display</name><operator>-&gt;</operator><name>w</name></name> <operator>||</operator> <name>h</name> <operator>!=</operator> <name><name>display</name><operator>-&gt;</operator><name>h</name></name></expr>)</condition> <block>{<block_content>
<do>do <block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>old_resize_count</name> <init>= <expr><name><name>d</name><operator>-&gt;</operator><name>resize_count</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ARGS_RESIZE</name></type> <name>args</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>programmatic_resize</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>_al_gtk_init_args</name><argument_list>(<argument><expr><operator>&amp;</operator><name>args</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>args</name><operator>.</operator><name>display</name></name> <operator>=</operator> <name>d</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>args</name><operator>.</operator><name>w</name></name> <operator>=</operator> <name>w</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>args</name><operator>.</operator><name>h</name></name> <operator>=</operator> <name>h</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_gtk_wait_for_args</name><argument_list>(<argument><expr><name>do_resize_display1</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_display_xglx_await_resize</name><argument_list>(<argument><expr><name>display</name></expr></argument>, <argument><expr><name>old_resize_count</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>_al_gtk_init_args</name><argument_list>(<argument><expr><operator>&amp;</operator><name>args</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>args</name><operator>.</operator><name>display</name></name> <operator>=</operator> <name>d</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_gtk_wait_for_args</name><argument_list>(<argument><expr><name>do_resize_display2</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>programmatic_resize</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
</block_content>}</block> while <condition>(<expr><literal type="number">0</literal></expr>)</condition>;</do>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>_al_mutex_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>system</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>gboolean</name></type> <name>do_set_window_title</name><parameter_list>(<parameter><decl><type><name>gpointer</name></type> <name>data</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ARGS_TITLE</name> <modifier>*</modifier></type><name>args</name> <init>= <expr><call><name>_al_gtk_lock_args</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY_XGLX</name> <modifier>*</modifier></type><name>d</name> <init>= <expr><name><name>args</name><operator>-&gt;</operator><name>display</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>title</name> <init>= <expr><name><name>args</name><operator>-&gt;</operator><name>title</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>gtk_window_set_title</name><argument_list>(<argument><expr><call><name>GTK_WINDOW</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>gtk</name><operator>-&gt;</operator><name>gtkwindow</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>title</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>_al_gtk_release_args</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>void</name></type> <name>xgtk_set_window_title</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>title</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ARGS_TITLE</name></type> <name>args</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>_al_gtk_init_args</name><argument_list>(<argument><expr><operator>&amp;</operator><name>args</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>args</name><operator>.</operator><name>display</name></name> <operator>=</operator> <operator>(</operator><name>ALLEGRO_DISPLAY_XGLX</name> <operator>*</operator><operator>)</operator><name>display</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>args</name><operator>.</operator><name>title</name></name> <operator>=</operator> <name>title</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_gtk_wait_for_args</name><argument_list>(<argument><expr><name>do_set_window_title</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>gboolean</name></type> <name>do_set_fullscreen_window</name><parameter_list>(<parameter><decl><type><name>gpointer</name></type> <name>data</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ARGS_FULLSCREEN_WINDOW</name> <modifier>*</modifier></type><name>args</name> <init>= <expr><call><name>_al_gtk_lock_args</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY_XGLX</name> <modifier>*</modifier></type><name>d</name> <init>= <expr><name><name>args</name><operator>-&gt;</operator><name>display</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>fullscreen</name> <init>= <expr><name><name>args</name><operator>-&gt;</operator><name>fullscreen</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>fullscreen</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>gtk_window_fullscreen</name><argument_list>(<argument><expr><call><name>GTK_WINDOW</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>gtk</name><operator>-&gt;</operator><name>gtkwindow</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><call><name>gtk_window_unfullscreen</name><argument_list>(<argument><expr><call><name>GTK_WINDOW</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>gtk</name><operator>-&gt;</operator><name>gtkwindow</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<return>return <expr><call><name>_al_gtk_release_args</name><argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>void</name></type> <name>xgtk_set_fullscreen_window</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>onoff</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_SYSTEM_XGLX</name> <modifier>*</modifier></type><name>system</name> <init>= <expr><operator>(</operator><name>ALLEGRO_SYSTEM_XGLX</name> <operator>*</operator><operator>)</operator><call><name>al_get_system_driver</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY_XGLX</name> <modifier>*</modifier></type><name>d</name> <init>= <expr><operator>(</operator><name>ALLEGRO_DISPLAY_XGLX</name> <operator>*</operator><operator>)</operator><name>display</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>onoff</name> <operator>==</operator> <operator>(</operator><name><name>display</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>ALLEGRO_FULLSCREEN_WINDOW</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<return>return;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>_al_mutex_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>system</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>old_resize_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ARGS_FULLSCREEN_WINDOW</name></type> <name>args</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>display</name><operator>-&gt;</operator><name>flags</name></name> <operator>^=</operator> <name>ALLEGRO_FULLSCREEN_WINDOW</name></expr>;</expr_stmt>
<expr_stmt><expr><name>old_resize_count</name> <operator>=</operator> <name><name>d</name><operator>-&gt;</operator><name>resize_count</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>programmatic_resize</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>_al_gtk_init_args</name><argument_list>(<argument><expr><operator>&amp;</operator><name>args</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>args</name><operator>.</operator><name>display</name></name> <operator>=</operator> <name>d</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>args</name><operator>.</operator><name>fullscreen</name></name> <operator>=</operator> <name>onoff</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_gtk_wait_for_args</name><argument_list>(<argument><expr><name>do_set_fullscreen_window</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_display_xglx_await_resize</name><argument_list>(<argument><expr><name>display</name></expr></argument>, <argument><expr><name>old_resize_count</name></expr></argument>,
<argument><expr><operator>(</operator><name><name>display</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>ALLEGRO_FULLSCREEN</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>programmatic_resize</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
</block_content>}</block>
<expr_stmt><expr><call><name>_al_mutex_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>system</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>gboolean</name></type> <name>do_set_window_position</name><parameter_list>(<parameter><decl><type><name>gpointer</name></type> <name>data</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ARGS_POSITION</name> <modifier>*</modifier></type><name>args</name> <init>= <expr><call><name>_al_gtk_lock_args</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>gtk_window_move</name><argument_list>(<argument><expr><call><name>GTK_WINDOW</name><argument_list>(<argument><expr><name><name>args</name><operator>-&gt;</operator><name>display</name><operator>-&gt;</operator><name>gtk</name><operator>-&gt;</operator><name>gtkwindow</name></name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name><name>args</name><operator>-&gt;</operator><name>x</name></name></expr></argument>, <argument><expr><name><name>args</name><operator>-&gt;</operator><name>y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>_al_gtk_release_args</name><argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>void</name></type> <name>xgtk_set_window_position</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ARGS_POSITION</name></type> <name>args</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>_al_gtk_init_args</name><argument_list>(<argument><expr><operator>&amp;</operator><name>args</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>args</name><operator>.</operator><name>display</name></name> <operator>=</operator> <operator>(</operator><name>ALLEGRO_DISPLAY_XGLX</name> <operator>*</operator><operator>)</operator><name>display</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>args</name><operator>.</operator><name>x</name></name> <operator>=</operator> <name>x</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>args</name><operator>.</operator><name>y</name></name> <operator>=</operator> <name>y</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_gtk_wait_for_args</name><argument_list>(<argument><expr><name>do_set_window_position</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>bool</name></type> <name>xgtk_set_window_constraints</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>min_w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>min_h</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>max_w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>max_h</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>display</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>min_w</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>min_h</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>max_w</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>max_h</name></expr>;</expr_stmt>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>


<decl_stmt><decl><type><specifier>static</specifier> <name><name>struct</name> <name>ALLEGRO_XWIN_DISPLAY_OVERRIDABLE_INTERFACE</name></name></type> <name>xgtk_override_vt</name> <init>=
<expr><block>{
<expr><name>xgtk_create_display_hook</name></expr>,
<expr><name>xgtk_destroy_display_hook</name></expr>,
<expr><name>xgtk_resize_display</name></expr>,
<expr><name>xgtk_set_window_title</name></expr>,
<expr><name>xgtk_set_fullscreen_window</name></expr>,
<expr><name>xgtk_set_window_position</name></expr>,
<expr><name>xgtk_set_window_constraints</name></expr>
}</block></expr></init></decl>;</decl_stmt>


<function><type><name>bool</name></type> <name>_al_gtk_set_display_overridable_interface</name><parameter_list>(<parameter><decl><type><name>bool</name></type> <name>on</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_al_xwin_set_gtk_display_overridable_interface</name><argument_list>(<argument><expr><name>ALLEGRO_VERSION_INT</name></expr></argument>,
<argument><expr><ternary><condition><expr><operator>(</operator><name>on</name><operator>)</operator></expr> ?</condition><then> <expr><operator>&amp;</operator><name>xgtk_override_vt</name></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


<function><type><name>GtkWidget</name> <modifier>*</modifier></type><name>_al_gtk_get_window</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY_XGLX</name> <modifier>*</modifier></type><name>d</name> <init>= <expr><operator>(</operator><name>ALLEGRO_DISPLAY_XGLX</name> <operator>*</operator><operator>)</operator><name>display</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>d</name><operator>-&gt;</operator><name>overridable_vt</name></name> <operator>==</operator> <operator>&amp;</operator><name>xgtk_override_vt</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name><name>d</name><operator>-&gt;</operator><name>gtk</name><operator>-&gt;</operator><name>gtkwindow</name></name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>ALLEGRO_WARN</name><argument_list>(<argument><expr><literal type="string">"Not display created with GTK.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>



</unit>
