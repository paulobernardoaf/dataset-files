<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\addons\native_dialog\gtk_msgbox.c">














<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;gtk/gtk.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro_native_dialog.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_native_dialog.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gtk_dialog.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gtk_xgtk.h"</cpp:file></cpp:include>


<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_NATIVE_DIALOG</name> <modifier>*</modifier></type><name>dialog</name></decl>;</decl_stmt>
}</block></struct></type> <name>Msg</name>;</typedef>




<function><type><specifier>static</specifier> <name>void</name></type> <name>msgbox_destroy</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>w</name></decl></parameter>, <parameter><decl><type><name>gpointer</name></type> <name>data</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_NATIVE_DIALOG</name> <modifier>*</modifier></type><name>nd</name> <init>= <expr><name>data</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>w</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name><name>nd</name><operator>-&gt;</operator><name>async_queue</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>g_async_queue_push</name><argument_list>(<argument><expr><name><name>nd</name><operator>-&gt;</operator><name>async_queue</name></name></expr></argument>, <argument><expr><name>ACK_CLOSED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>msgbox_response</name><parameter_list>(<parameter><decl><type><name>GtkDialog</name> <modifier>*</modifier></type><name>dialog</name></decl></parameter>, <parameter><decl><type><name>gint</name></type> <name>response_id</name></decl></parameter>,
<parameter><decl><type><name>gpointer</name></type> <name>user_data</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_NATIVE_DIALOG</name> <modifier>*</modifier></type><name>nd</name> <init>= <expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name>user_data</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>dialog</name></expr>;</expr_stmt>
<switch>switch <condition>(<expr><name>response_id</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>GTK_RESPONSE_DELETE_EVENT</name></expr>:</case>
<expr_stmt><expr><name><name>nd</name><operator>-&gt;</operator><name>mb_pressed_button</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>GTK_RESPONSE_YES</name></expr>:</case>
<case>case <expr><name>GTK_RESPONSE_OK</name></expr>:</case>
<expr_stmt><expr><name><name>nd</name><operator>-&gt;</operator><name>mb_pressed_button</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>GTK_RESPONSE_NO</name></expr>:</case>
<case>case <expr><name>GTK_RESPONSE_CANCEL</name></expr>:</case>
<expr_stmt><expr><name><name>nd</name><operator>-&gt;</operator><name>mb_pressed_button</name></name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<break>break;</break>
<default>default:</default>
<expr_stmt><expr><name><name>nd</name><operator>-&gt;</operator><name>mb_pressed_button</name></name> <operator>=</operator> <name>response_id</name></expr>;</expr_stmt>
</block_content>}</block></switch>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>gboolean</name></type> <name>create_native_message_box</name><parameter_list>(<parameter><decl><type><name>gpointer</name></type> <name>data</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>Msg</name> <modifier>*</modifier></type><name>msg</name> <init>= <expr><name>data</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name> <init>= <expr><name><name>msg</name><operator>-&gt;</operator><name>display</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_NATIVE_DIALOG</name> <modifier>*</modifier></type><name>fd</name> <init>= <expr><name><name>msg</name><operator>-&gt;</operator><name>dialog</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>window</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>GtkMessageType</name></type> <name>type</name> <init>= <expr><name>GTK_MESSAGE_INFO</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GtkButtonsType</name></type> <name>buttons</name> <init>= <expr><name>GTK_BUTTONS_OK</name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name><name>fd</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>ALLEGRO_MESSAGEBOX_YES_NO</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>type</name> <operator>=</operator> <name>GTK_MESSAGE_QUESTION</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>fd</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>ALLEGRO_MESSAGEBOX_QUESTION</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>type</name> <operator>=</operator> <name>GTK_MESSAGE_QUESTION</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>fd</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>ALLEGRO_MESSAGEBOX_WARN</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>type</name> <operator>=</operator> <name>GTK_MESSAGE_WARNING</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>fd</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>ALLEGRO_MESSAGEBOX_ERROR</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>type</name> <operator>=</operator> <name>GTK_MESSAGE_ERROR</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>fd</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>ALLEGRO_MESSAGEBOX_YES_NO</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>buttons</name> <operator>=</operator> <name>GTK_BUTTONS_YES_NO</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>fd</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>ALLEGRO_MESSAGEBOX_OK_CANCEL</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>buttons</name> <operator>=</operator> <name>GTK_BUTTONS_OK_CANCEL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>fd</name><operator>-&gt;</operator><name>mb_buttons</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>buttons</name> <operator>=</operator> <name>GTK_BUTTONS_NONE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>window</name> <operator>=</operator> <call><name>gtk_message_dialog_new</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>type</name></expr></argument>, <argument><expr><name>buttons</name></expr></argument>, <argument><expr><literal type="string">"%s"</literal></expr></argument>,
<argument><expr><call><name>al_cstr</name><argument_list>(<argument><expr><name><name>fd</name><operator>-&gt;</operator><name>mb_heading</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>gtk_message_dialog_format_secondary_text</name><argument_list>(<argument><expr><call><name>GTK_MESSAGE_DIALOG</name><argument_list>(<argument><expr><name>window</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"%s"</literal></expr></argument>,
<argument><expr><call><name>al_cstr</name><argument_list>(<argument><expr><name><name>fd</name><operator>-&gt;</operator><name>mb_text</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_gtk_make_transient</name><argument_list>(<argument><expr><name>display</name></expr></argument>, <argument><expr><name>window</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>fd</name><operator>-&gt;</operator><name>mb_buttons</name></name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>pos</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>next</name> <init>= <expr><call><name>al_ustr_find_chr</name><argument_list>(<argument><expr><name><name>fd</name><operator>-&gt;</operator><name>mb_buttons</name></name></expr></argument>, <argument><expr><name>pos</name></expr></argument>, <argument><expr><literal type="char">'|'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>pos2</name> <init>= <expr><name>next</name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>next</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>pos2</name> <operator>=</operator> <call><name>al_ustr_size</name><argument_list>(<argument><expr><name><name>fd</name><operator>-&gt;</operator><name>mb_buttons</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<decl_stmt><decl><type><name>ALLEGRO_USTR_INFO</name></type> <name>info</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>ALLEGRO_USTR</name> <modifier>*</modifier></type><name>button_text</name></decl>;</decl_stmt>
<expr_stmt><expr><name>button_text</name> <operator>=</operator> <call><name>al_ref_ustr</name><argument_list>(<argument><expr><operator>&amp;</operator><name>info</name></expr></argument>, <argument><expr><name><name>fd</name><operator>-&gt;</operator><name>mb_buttons</name></name></expr></argument>, <argument><expr><name>pos</name></expr></argument>, <argument><expr><name>pos2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>pos</name> <operator>=</operator> <name>pos2</name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>buffer</name><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>al_ustr_to_buffer</name><argument_list>(<argument><expr><name>button_text</name></expr></argument>, <argument><expr><name>buffer</name></expr></argument>, <argument><expr><sizeof>sizeof <name>buffer</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>gtk_dialog_add_button</name><argument_list>(<argument><expr><call><name>GTK_DIALOG</name><argument_list>(<argument><expr><name>window</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>buffer</name></expr></argument>, <argument><expr><name>i</name><operator>++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>next</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>
</block_content>}</block></while>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>gtk_window_set_title</name><argument_list>(<argument><expr><call><name>GTK_WINDOW</name><argument_list>(<argument><expr><name>window</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>al_cstr</name><argument_list>(<argument><expr><name><name>fd</name><operator>-&gt;</operator><name>title</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>g_signal_connect</name><argument_list>(<argument><expr><call><name>G_OBJECT</name><argument_list>(<argument><expr><name>window</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"destroy"</literal></expr></argument>, <argument><expr><call><name>G_CALLBACK</name><argument_list>(<argument><expr><name>msgbox_destroy</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>g_signal_connect</name><argument_list>(<argument><expr><call><name>G_OBJECT</name><argument_list>(<argument><expr><name>window</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"response"</literal></expr></argument>, <argument><expr><call><name>G_CALLBACK</name><argument_list>(<argument><expr><name>msgbox_response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>g_signal_connect_swapped</name><argument_list>(<argument><expr><call><name>G_OBJECT</name><argument_list>(<argument><expr><name>window</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"response"</literal></expr></argument>, <argument><expr><call><name>G_CALLBACK</name><argument_list>(<argument><expr><name>gtk_widget_destroy</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>window</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_widget_show</name><argument_list>(<argument><expr><name>window</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>FALSE</name></expr>;</return>
</block_content>}</block></function>


<function><type><name>int</name></type> <name>_al_show_native_message_box</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>,
<parameter><decl><type><name>ALLEGRO_NATIVE_DIALOG</name> <modifier>*</modifier></type><name>fd</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>Msg</name></type> <name>msg</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>_al_gtk_ensure_thread</name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt> 

<expr_stmt><expr><name><name>fd</name><operator>-&gt;</operator><name>async_queue</name></name> <operator>=</operator> <call><name>g_async_queue_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>msg</name><operator>.</operator><name>display</name></name> <operator>=</operator> <name>display</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>msg</name><operator>.</operator><name>dialog</name></name> <operator>=</operator> <name>fd</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>g_timeout_add</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>create_native_message_box</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<while>while <condition>(<expr><call><name>g_async_queue_pop</name><argument_list>(<argument><expr><name><name>fd</name><operator>-&gt;</operator><name>async_queue</name></name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>ACK_CLOSED</name></expr>)</condition><block type="pseudo"><block_content>
<empty_stmt>;</empty_stmt></block_content></block></while>
<expr_stmt><expr><call><name>g_async_queue_unref</name><argument_list>(<argument><expr><name><name>fd</name><operator>-&gt;</operator><name>async_queue</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fd</name><operator>-&gt;</operator><name>async_queue</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<return>return <expr><name><name>fd</name><operator>-&gt;</operator><name>mb_pressed_button</name></name></expr>;</return>
</block_content>}</block></function>


</unit>
