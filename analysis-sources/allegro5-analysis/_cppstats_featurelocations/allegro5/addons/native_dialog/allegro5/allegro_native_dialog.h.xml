<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\addons\native_dialog\allegro5\allegro_native_dialog.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__al_included_allegro5_allegro_native_dialog_h</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__al_included_allegro5_allegro_native_dialog_h</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>(</operator><name>defined</name> <name>ALLEGRO_MINGW32</name><operator>)</operator> <operator>||</operator> <operator>(</operator><name>defined</name> <name>ALLEGRO_MSVC</name><operator>)</operator> <operator>||</operator> <operator>(</operator><name>defined</name> <name>ALLEGRO_BCC32</name><operator>)</operator></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_STATICLINK</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_NATIVE_DIALOG_SRC</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_ALLEGRO_DIALOG_DLL</name></cpp:macro> <cpp:value>__declspec(dllexport)</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_ALLEGRO_DIALOG_DLL</name></cpp:macro> <cpp:value>__declspec(dllimport)</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_ALLEGRO_DIALOG_DLL</name></cpp:macro></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>ALLEGRO_MSVC</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_DIALOG_FUNC</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>args</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_ALLEGRO_DIALOG_DLL type __cdecl name args</cpp:value></cpp:define>
<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><name>defined</name> <name>ALLEGRO_MINGW32</name></expr></cpp:elif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_DIALOG_FUNC</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>args</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>extern type name args</cpp:value></cpp:define>
<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><name>defined</name> <name>ALLEGRO_BCC32</name></expr></cpp:elif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_DIALOG_FUNC</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>args</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>extern _ALLEGRO_DIALOG_DLL type name args</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_DIALOG_FUNC</name></cpp:macro> <cpp:value>AL_FUNC</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_WITH_XWINDOWS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_GTK_TOPLEVEL</name></cpp:macro> <cpp:value>ALLEGRO_GTK_TOPLEVEL_INTERNAL</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>



<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_FILECHOOSER</name></name></type> <name>ALLEGRO_FILECHOOSER</name>;</typedef>



<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_TEXTLOG</name></name></type> <name>ALLEGRO_TEXTLOG</name>;</typedef>



<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_MENU</name></name></type> <name>ALLEGRO_MENU</name>;</typedef>



<typedef>typedef <type><struct>struct <name>ALLEGRO_MENU_INFO</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>caption</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>icon</name></decl>;</decl_stmt>
}</block></struct></type> <name>ALLEGRO_MENU_INFO</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_MENU_SEPARATOR</name></cpp:macro> <cpp:value>{ NULL, -1, 0, NULL }</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_START_OF_MENU</name><parameter_list>(<parameter><type><name>caption</name></type></parameter>, <parameter><type><name>id</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ caption "-&gt;", id, 0, NULL }</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_END_OF_MENU</name></cpp:macro> <cpp:value>{ NULL, 0, 0, NULL }</cpp:value></cpp:define>

<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_init_native_dialog_addon</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_is_native_dialog_addon_initialized</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_shutdown_native_dialog_addon</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_FILECHOOSER</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_create_native_file_dialog</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <specifier>const</specifier> <operator>*</operator><name>initial_path</name><operator>,</operator>
<name>char</name> <specifier>const</specifier> <operator>*</operator><name>title</name><operator>,</operator> <name>char</name> <specifier>const</specifier> <operator>*</operator><name>patterns</name><operator>,</operator> <name>int</name> <name>mode</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_show_native_file_dialog</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>,</operator> <name>ALLEGRO_FILECHOOSER</name> <operator>*</operator><name>dialog</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_native_file_dialog_count</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_FILECHOOSER</name> <operator>*</operator><name>dialog</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_get_native_file_dialog_path</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_FILECHOOSER</name> <operator>*</operator><name>dialog</name><operator>,</operator>
<name>size_t</name> <name>index</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_destroy_native_file_dialog</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_FILECHOOSER</name> <operator>*</operator><name>dialog</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_show_native_message_box</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>,</operator> <name>char</name> <specifier>const</specifier> <operator>*</operator><name>title</name><operator>,</operator>
<name>char</name> <specifier>const</specifier> <operator>*</operator><name>heading</name><operator>,</operator> <name>char</name> <specifier>const</specifier> <operator>*</operator><name>text</name><operator>,</operator> <name>char</name> <specifier>const</specifier> <operator>*</operator><name>buttons</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_TEXTLOG</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_open_native_text_log</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <specifier>const</specifier> <operator>*</operator><name>title</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_close_native_text_log</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_TEXTLOG</name> <operator>*</operator><name>textlog</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_append_native_text_log</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_TEXTLOG</name> <operator>*</operator><name>textlog</name><operator>,</operator> <name>char</name> <specifier>const</specifier> <operator>*</operator><name>format</name><operator>,</operator> <operator>...</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_EVENT_SOURCE</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_get_native_text_log_event_source</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_TEXTLOG</name> <operator>*</operator><name>textlog</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_MENU</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_create_menu</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_MENU</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_create_popup_menu</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_MENU</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_build_menu</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_MENU_INFO</name> <operator>*</operator><name>info</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_append_menu_item</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_MENU</name> <operator>*</operator><name>parent</name><operator>,</operator> <name>char</name> <specifier>const</specifier> <operator>*</operator><name>title</name><operator>,</operator> <name>uint16_t</name> <name>id</name><operator>,</operator> <name>int</name> <name>flags</name><operator>,</operator>
<name>ALLEGRO_BITMAP</name> <operator>*</operator><name>icon</name><operator>,</operator> <name>ALLEGRO_MENU</name> <operator>*</operator><name>submenu</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_insert_menu_item</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_MENU</name> <operator>*</operator><name>parent</name><operator>,</operator> <name>int</name> <name>pos</name><operator>,</operator> <name>char</name> <specifier>const</specifier> <operator>*</operator><name>title</name><operator>,</operator> <name>uint16_t</name> <name>id</name><operator>,</operator>
<name>int</name> <name>flags</name><operator>,</operator> <name>ALLEGRO_BITMAP</name> <operator>*</operator><name>icon</name><operator>,</operator> <name>ALLEGRO_MENU</name> <operator>*</operator><name>submenu</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_remove_menu_item</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_MENU</name> <operator>*</operator><name>menu</name><operator>,</operator> <name>int</name> <name>pos</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_MENU</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_clone_menu</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_MENU</name> <operator>*</operator><name>menu</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_MENU</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_clone_menu_for_popup</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_MENU</name> <operator>*</operator><name>menu</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_destroy_menu</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_MENU</name> <operator>*</operator><name>menu</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_get_menu_item_caption</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_MENU</name> <operator>*</operator><name>menu</name><operator>,</operator> <name>int</name> <name>pos</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_set_menu_item_caption</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_MENU</name> <operator>*</operator><name>menu</name><operator>,</operator> <name>int</name> <name>pos</name><operator>,</operator> <specifier>const</specifier> <name>char</name> <operator>*</operator><name>caption</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_menu_item_flags</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_MENU</name> <operator>*</operator><name>menu</name><operator>,</operator> <name>int</name> <name>pos</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_set_menu_item_flags</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_MENU</name> <operator>*</operator><name>menu</name><operator>,</operator> <name>int</name> <name>pos</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_BITMAP</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_get_menu_item_icon</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_MENU</name> <operator>*</operator><name>menu</name><operator>,</operator> <name>int</name> <name>pos</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_set_menu_item_icon</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_MENU</name> <operator>*</operator><name>menu</name><operator>,</operator> <name>int</name> <name>pos</name><operator>,</operator> <name>ALLEGRO_BITMAP</name> <operator>*</operator><name>icon</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_UNSTABLE</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_INTERNAL_UNSTABLE</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_NATIVE_DIALOG_SRC</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_toggle_menu_item_flags</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_MENU</name> <operator>*</operator><name>menu</name><operator>,</operator> <name>int</name> <name>pos</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_MENU</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_find_menu</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_MENU</name> <operator>*</operator><name>haystack</name><operator>,</operator> <name>uint16_t</name> <name>id</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_find_menu_item</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_MENU</name> <operator>*</operator><name>haystack</name><operator>,</operator> <name>uint16_t</name> <name>id</name><operator>,</operator> <name>ALLEGRO_MENU</name> <operator>*</operator><operator>*</operator><name>menu</name><operator>,</operator> <name>int</name> <operator>*</operator><name>index</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_EVENT_SOURCE</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_get_default_menu_event_source</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_EVENT_SOURCE</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_enable_menu_event_source</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_MENU</name> <operator>*</operator><name>menu</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_disable_menu_event_source</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_MENU</name> <operator>*</operator><name>menu</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_MENU</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_get_display_menu</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_set_display_menu</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>,</operator> <name>ALLEGRO_MENU</name> <operator>*</operator><name>menu</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_popup_menu</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_MENU</name> <operator>*</operator><name>popup</name><operator>,</operator> <name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_MENU</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_remove_display_menu</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_DIALOG_FUNC</name><argument_list>(<argument><expr><name>uint32_t</name></expr></argument>, <argument><expr><name>al_get_allegro_native_dialog_version</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<enum>enum <block>{
<decl><name>ALLEGRO_FILECHOOSER_FILE_MUST_EXIST</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>ALLEGRO_FILECHOOSER_SAVE</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>ALLEGRO_FILECHOOSER_FOLDER</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,
<decl><name>ALLEGRO_FILECHOOSER_PICTURES</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,
<decl><name>ALLEGRO_FILECHOOSER_SHOW_HIDDEN</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>,
<decl><name>ALLEGRO_FILECHOOSER_MULTIPLE</name> <init>= <expr><literal type="number">32</literal></expr></init></decl>
}</block>;</enum>

<enum>enum <block>{
<decl><name>ALLEGRO_MESSAGEBOX_WARN</name> <init>= <expr><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">0</literal></expr></init></decl>,
<decl><name>ALLEGRO_MESSAGEBOX_ERROR</name> <init>= <expr><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">1</literal></expr></init></decl>,
<decl><name>ALLEGRO_MESSAGEBOX_OK_CANCEL</name> <init>= <expr><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">2</literal></expr></init></decl>,
<decl><name>ALLEGRO_MESSAGEBOX_YES_NO</name> <init>= <expr><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">3</literal></expr></init></decl>,
<decl><name>ALLEGRO_MESSAGEBOX_QUESTION</name> <init>= <expr><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">4</literal></expr></init></decl>
}</block>;</enum>

<enum>enum <block>{
<decl><name>ALLEGRO_TEXTLOG_NO_CLOSE</name> <init>= <expr><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">0</literal></expr></init></decl>,
<decl><name>ALLEGRO_TEXTLOG_MONOSPACE</name> <init>= <expr><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">1</literal></expr></init></decl>
}</block>;</enum>

<enum>enum <block>{
<decl><name>ALLEGRO_EVENT_NATIVE_DIALOG_CLOSE</name> <init>= <expr><literal type="number">600</literal></expr></init></decl>,
<decl><name>ALLEGRO_EVENT_MENU_CLICK</name> <init>= <expr><literal type="number">601</literal></expr></init></decl>
}</block>;</enum>

<enum>enum <block>{
<decl><name>ALLEGRO_MENU_ITEM_ENABLED</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>ALLEGRO_MENU_ITEM_CHECKBOX</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>ALLEGRO_MENU_ITEM_CHECKED</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>ALLEGRO_MENU_ITEM_DISABLED</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>
}</block>;</enum>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


</unit>
