<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\addons\native_dialog\menu.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro_native_dialog.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_native_dialog.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_dtor.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_system.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_vector.h"</cpp:file></cpp:include>


<typedef>typedef <type><name><name>struct</name> <name>DISPLAY_MENU</name></name></type> <name>DISPLAY_MENU</name>;</typedef>

<struct>struct <name>DISPLAY_MENU</name>
<block>{
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl>;</decl_stmt>
}</block>;</struct>

<decl_stmt><decl><type><specifier>static</specifier> <name>_AL_VECTOR</name></type> <name>display_menus</name> <init>= <expr><call><name>_AL_VECTOR_INITIALIZER</name><argument_list>(<argument><expr><name>DISPLAY_MENU</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>




<decl_stmt><decl><type><specifier>static</specifier> <name>uint16_t</name></type> <name>unique_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>_AL_VECTOR</name></type> <name>menu_ids</name> <init>= <expr><call><name>_AL_VECTOR_INITIALIZER</name><argument_list>(<argument><expr><name>_AL_MENU_ID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



<decl_stmt><decl><type><specifier>static</specifier> <name>ALLEGRO_EVENT_SOURCE</name></type> <name>default_menu_es</name></decl>;</decl_stmt>


<function_decl><type><specifier>static</specifier> <name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>clone_menu</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>popup</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>create_menu_item</name><parameter_list>(<parameter><decl><type><name>char</name> <specifier>const</specifier> <modifier>*</modifier></type><name>title</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>popup</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>destroy_menu_item</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>bool</name></type> <name>find_menu_item_r</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>extra</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>interpret_menu_id_param</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier><modifier>*</modifier></type><name>menu</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>ALLEGRO_MENU_INFO</name> <modifier>*</modifier></type><name>parse_menu_info</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>parent</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MENU_INFO</name> <modifier>*</modifier></type><name>info</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>static</specifier> <name>bool</name></type> <name>set_menu_display_r</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>extra</name></decl></parameter>)</parameter_list>;</function_decl>



<function><type><specifier>static</specifier> <name>bool</name></type> <name>get_unique_id</name><parameter_list>(<parameter><decl><type><name>uint16_t</name><modifier>*</modifier></type> <name>id</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>unique_id</name> <operator>+</operator> <literal type="number">1</literal> <operator>==</operator> <name>UINT16_MAX</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><operator>*</operator><name>id</name> <operator>=</operator> <name>unique_id</name><operator>++</operator></expr>;</expr_stmt>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <name>void</name></type> <name>set_item_icon</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>icon</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>item</name><operator>-&gt;</operator><name>icon</name></name> <operator>=</operator> <name>icon</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>icon</name> <operator>&amp;&amp;</operator> <call><name>al_get_bitmap_flags</name><argument_list>(<argument><expr><name><name>item</name><operator>-&gt;</operator><name>icon</name></name></expr></argument>)</argument_list></call> <operator>&amp;</operator> <name>ALLEGRO_VIDEO_BITMAP</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>old_flags</name> <init>= <expr><call><name>al_get_new_bitmap_flags</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>al_set_new_bitmap_flags</name><argument_list>(<argument><expr><name>ALLEGRO_MEMORY_BITMAP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>item</name><operator>-&gt;</operator><name>icon</name></name> <operator>=</operator> <call><name>al_clone_bitmap</name><argument_list>(<argument><expr><name>icon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_destroy_bitmap</name><argument_list>(<argument><expr><name>icon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_bitmap_flags</name><argument_list>(<argument><expr><name>old_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>create_menu_item</name><parameter_list>(<parameter><decl><type><name>char</name> <specifier>const</specifier> <modifier>*</modifier></type><name>title</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>popup</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name> <init>= <expr><call><name>al_calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>item</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>item</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>get_unique_id</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>item</name><operator>-&gt;</operator><name>unique_id</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <name>ALLEGRO_MENU_ITEM_CHECKED</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>flags</name> <operator>|=</operator> <name>ALLEGRO_MENU_ITEM_CHECKBOX</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>title</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>item</name><operator>-&gt;</operator><name>caption</name></name> <operator>=</operator> <call><name>al_ustr_new</name><argument_list>(<argument><expr><name>title</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>item</name><operator>-&gt;</operator><name>id</name></name> <operator>=</operator> <name>id</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>item</name><operator>-&gt;</operator><name>flags</name></name> <operator>=</operator> <name>flags</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>item</name><operator>-&gt;</operator><name>popup</name></name> <operator>=</operator> <name>popup</name></expr>;</expr_stmt>

<return>return <expr><name>item</name></expr>;</return>
</block_content>}</block></function>





<function><type><name>bool</name></type> <name>_al_walk_over_menu</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>,
<parameter><function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>proc</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>extra</name></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>extra</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier><modifier>*</modifier></type><name>slot</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>proc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>_al_vector_size</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>menu</name><operator>-&gt;</operator><name>items</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>slot</name> <operator>=</operator> <call><name>_al_vector_ref</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>menu</name><operator>-&gt;</operator><name>items</name></name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><operator>(</operator><operator>*</operator><name>slot</name><operator>)</operator><operator>-&gt;</operator><name>popup</name></name> <operator>&amp;&amp;</operator> <call><name>_al_walk_over_menu</name><argument_list>(<argument><expr><name><operator>(</operator><operator>*</operator><name>slot</name><operator>)</operator><operator>-&gt;</operator><name>popup</name></name></expr></argument>, <argument><expr><name>proc</name></expr></argument>, <argument><expr><name>extra</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>true</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>proc</name><argument_list>(<argument><expr><name>menu</name></expr></argument>, <argument><expr><operator>*</operator><name>slot</name></expr></argument>, <argument><expr><name>i</name></expr></argument>, <argument><expr><name>extra</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>true</name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></for>

<return>return <expr><call><name>proc</name><argument_list>(<argument><expr><name>menu</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>extra</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <name>bool</name></type> <name>set_menu_display_r</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>extra</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>index</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>item</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>menu</name><operator>-&gt;</operator><name>display</name></name> <operator>=</operator> <name>extra</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <name>bool</name></type> <name>find_menu_item_r</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>extra</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>info</name> <init>= <expr><operator>(</operator><name>ALLEGRO_MENU_ITEM</name> <operator>*</operator><operator>)</operator> <name>extra</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>item</name> <operator>!=</operator> <name>NULL</name> <operator>&amp;&amp;</operator> <name><name>info</name><operator>-&gt;</operator><name>id</name></name> <operator>==</operator> <name><name>item</name><operator>-&gt;</operator><name>id</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>id</name></name> <operator>=</operator> <name>index</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>parent</name></name> <operator>=</operator> <name>menu</name></expr>;</expr_stmt>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>bool</name></type> <name>find_menu_item_r_unique</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>extra</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>info</name> <init>= <expr><operator>(</operator><name>ALLEGRO_MENU_ITEM</name> <operator>*</operator><operator>)</operator> <name>extra</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>item</name> <operator>!=</operator> <name>NULL</name> <operator>&amp;&amp;</operator> <name><name>info</name><operator>-&gt;</operator><name>unique_id</name></name> <operator>==</operator> <name><name>item</name><operator>-&gt;</operator><name>unique_id</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>id</name></name> <operator>=</operator> <name>index</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>parent</name></name> <operator>=</operator> <name>menu</name></expr>;</expr_stmt>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <name>void</name></type> <name>destroy_menu_item</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>item</name><operator>-&gt;</operator><name>parent</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>_al_destroy_menu_item_at</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>_al_vector_size</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>item</name><operator>-&gt;</operator><name>parent</name><operator>-&gt;</operator><name>items</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>*</operator><operator>(</operator><name>ALLEGRO_MENU_ITEM</name> <operator>*</operator><operator>*</operator><operator>)</operator><call><name>_al_vector_ref</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>item</name><operator>-&gt;</operator><name>parent</name><operator>-&gt;</operator><name>items</name></name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>item</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>_al_destroy_menu_item_at</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>id</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>_AL_MENU_ID</name> <modifier>*</modifier></type><name>menu_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>j</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <call><name>_al_vector_size</name><argument_list>(<argument><expr><operator>&amp;</operator><name>menu_ids</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>j</name></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>menu_id</name> <operator>=</operator> <operator>(</operator><name>_AL_MENU_ID</name> <operator>*</operator><operator>)</operator> <call><name>_al_vector_ref</name><argument_list>(<argument><expr><operator>&amp;</operator><name>menu_ids</name></expr></argument>, <argument><expr><name>j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>menu_id</name><operator>-&gt;</operator><name>menu</name></name> <operator>==</operator> <name><name>item</name><operator>-&gt;</operator><name>parent</name></name> <operator>&amp;&amp;</operator> <name><name>menu_id</name><operator>-&gt;</operator><name>unique_id</name></name> <operator>==</operator> <name><name>item</name><operator>-&gt;</operator><name>unique_id</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>_al_vector_delete_at</name><argument_list>(<argument><expr><operator>&amp;</operator><name>menu_ids</name></expr></argument>, <argument><expr><name>j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><call><name>_al_vector_delete_at</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>item</name><operator>-&gt;</operator><name>parent</name><operator>-&gt;</operator><name>items</name></name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>caption</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>al_ustr_free</name><argument_list>(<argument><expr><name><name>item</name><operator>-&gt;</operator><name>caption</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>popup</name></name></expr>)</condition> <block>{<block_content>



<expr_stmt><expr><name><name>item</name><operator>-&gt;</operator><name>popup</name><operator>-&gt;</operator><name>parent</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>item</name><operator>-&gt;</operator><name>popup</name><operator>-&gt;</operator><name>display</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_destroy_menu</name><argument_list>(<argument><expr><name><name>item</name><operator>-&gt;</operator><name>popup</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>icon</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>al_destroy_bitmap</name><argument_list>(<argument><expr><name><name>item</name><operator>-&gt;</operator><name>icon</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>al_free</name><argument_list>(<argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <name>ALLEGRO_MENU_INFO</name> <modifier>*</modifier></type><name>parse_menu_info</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>parent</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MENU_INFO</name> <modifier>*</modifier></type><name>info</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<while>while <condition>(<expr><name><name>info</name><operator>-&gt;</operator><name>caption</name></name> <operator>||</operator> <name><name>info</name><operator>-&gt;</operator><name>id</name></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>info</name><operator>-&gt;</operator><name>caption</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>al_append_menu_item</name><argument_list>(<argument><expr><name>parent</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>info</name></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><call><name>strlen</name><argument_list>(<argument><expr><name><name>info</name><operator>-&gt;</operator><name>caption</name></name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">2</literal> <operator>&amp;&amp;</operator>
<operator>!</operator><call><name>strncmp</name><argument_list>(<argument><expr><literal type="string">"-&gt;"</literal></expr></argument>, <argument><expr><name><name>info</name><operator>-&gt;</operator><name>caption</name></name> <operator>+</operator> <call><name>strlen</name><argument_list>(<argument><expr><name><name>info</name><operator>-&gt;</operator><name>caption</name></name></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>



<decl_stmt><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name> <init>= <expr><call><name>al_create_menu</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>menu</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_USTR</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><call><name>al_ustr_new</name><argument_list>(<argument><expr><name><name>info</name><operator>-&gt;</operator><name>caption</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>al_ustr_remove_range</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><call><name>al_ustr_size</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><call><name>al_ustr_size</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_append_menu_item</name><argument_list>(<argument><expr><name>parent</name></expr></argument>, <argument><expr><call><name>al_cstr</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>info</name><operator>-&gt;</operator><name>id</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>info</name> <operator>=</operator> <call><name>parse_menu_info</name><argument_list>(<argument><expr><name>menu</name></expr></argument>, <argument><expr><name>info</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_ustr_free</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>

<expr_stmt><expr><call><name>al_append_menu_item</name><argument_list>(<argument><expr><name>parent</name></expr></argument>, <argument><expr><name><name>info</name><operator>-&gt;</operator><name>caption</name></name></expr></argument>, <argument><expr><name><name>info</name><operator>-&gt;</operator><name>id</name></name></expr></argument>, <argument><expr><name><name>info</name><operator>-&gt;</operator><name>flags</name></name></expr></argument>, <argument><expr><name><name>info</name><operator>-&gt;</operator><name>icon</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>info</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></while>

<return>return <expr><name>info</name> <operator>+</operator> <literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>interpret_menu_id_param</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier><modifier>*</modifier></type><name>menu</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>*</operator><name>id</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>al_find_menu_item</name><argument_list>(<argument><expr><operator>*</operator><name>menu</name></expr></argument>, <argument><expr><operator>*</operator><name>id</name></expr></argument>, <argument><expr><name>menu</name></expr></argument>, <argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>id</name> <operator>=</operator> <operator>(</operator><literal type="number">0</literal> <operator>-</operator> <operator>*</operator><name>id</name><operator>)</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>size_t</name><operator>)</operator> <operator>*</operator><name>id</name> <operator>&gt;=</operator> <call><name>_al_vector_size</name><argument_list>(<argument><expr><operator>&amp;</operator><operator>(</operator><name><operator>(</operator><operator>*</operator><name>menu</name><operator>)</operator><operator>-&gt;</operator><name>items</name></name><operator>)</operator></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></else></if_stmt>

<return>return <expr><operator>*</operator><operator>(</operator><name>ALLEGRO_MENU_ITEM</name> <operator>*</operator><operator>*</operator><operator>)</operator> <call><name>_al_vector_ref</name><argument_list>(<argument><expr><operator>&amp;</operator><operator>(</operator><name><operator>(</operator><operator>*</operator><name>menu</name><operator>)</operator><operator>-&gt;</operator><name>items</name></name><operator>)</operator></expr></argument>, <argument><expr><operator>(</operator><name>size_t</name><operator>)</operator> <operator>*</operator><name>id</name></expr></argument>)</argument_list></call></expr>;</return> 
</block_content>}</block></function> 




<function><type><specifier>static</specifier> <name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>clone_menu</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>popup</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>clone</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>menu</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>clone</name> <operator>=</operator> <ternary><condition><expr><name>popup</name></expr> ?</condition><then> <expr><call><name>al_create_popup_menu</name><argument_list>()</argument_list></call></expr> </then><else>: <expr><call><name>al_create_menu</name><argument_list>()</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>_al_vector_size</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>menu</name><operator>-&gt;</operator><name>items</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name> <init>= <expr><operator>*</operator><operator>(</operator><name>ALLEGRO_MENU_ITEM</name> <operator>*</operator><operator>*</operator><operator>)</operator><call><name>_al_vector_ref</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>menu</name><operator>-&gt;</operator><name>items</name></name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>icon</name> <init>= <expr><name><name>item</name><operator>-&gt;</operator><name>icon</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>icon</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>icon</name> <operator>=</operator> <call><name>al_clone_bitmap</name><argument_list>(<argument><expr><name>icon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>al_append_menu_item</name><argument_list>(<argument><expr><name>clone</name></expr></argument>, <argument><expr><ternary><condition><expr><name><name>item</name><operator>-&gt;</operator><name>caption</name></name></expr> ?</condition><then> <expr><call><name>al_cstr</name><argument_list>(<argument><expr><name><name>item</name><operator>-&gt;</operator><name>caption</name></name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr></argument>,
<argument><expr><name><name>item</name><operator>-&gt;</operator><name>id</name></name></expr></argument>, <argument><expr><name><name>item</name><operator>-&gt;</operator><name>flags</name></name></expr></argument>, <argument><expr><name>icon</name></expr></argument>, <argument><expr><call><name>al_clone_menu</name><argument_list>(<argument><expr><name><name>item</name><operator>-&gt;</operator><name>popup</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>clone</name></expr>;</return>
</block_content>}</block></function>



<function><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>al_create_menu</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>m</name> <init>= <expr><call><name>al_calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>m</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>m</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>_al_vector_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>m</name><operator>-&gt;</operator><name>items</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>ALLEGRO_MENU_ITEM</name><operator>*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>_al_init_menu</name><argument_list>(<argument><expr><name>m</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>al_destroy_menu</name><argument_list>(<argument><expr><name>m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>m</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>m</name></expr>;</return>
</block_content>}</block></function>



<function><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>al_create_popup_menu</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>m</name> <init>= <expr><call><name>al_calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>m</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>m</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>_al_vector_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>m</name><operator>-&gt;</operator><name>items</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>ALLEGRO_MENU_ITEM</name><operator>*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>_al_init_popup_menu</name><argument_list>(<argument><expr><name>m</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>al_destroy_menu</name><argument_list>(<argument><expr><name>m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>m</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>



<expr_stmt><expr><name><name>m</name><operator>-&gt;</operator><name>is_popup_menu</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>m</name></expr>;</return>
</block_content>}</block></function>



<function><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>al_clone_menu</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>clone_menu</name><argument_list>(<argument><expr><name>menu</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>



<function><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>al_clone_menu_for_popup</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>clone_menu</name><argument_list>(<argument><expr><name>menu</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>



<function><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>al_build_menu</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU_INFO</name> <modifier>*</modifier></type><name>info</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>root</name> <init>= <expr><call><name>al_create_menu</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>root</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>parse_menu_info</name><argument_list>(<argument><expr><name>root</name></expr></argument>, <argument><expr><name>info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>root</name></expr>;</return>
</block_content>}</block></function>



<function><type><name>int</name></type> <name>al_append_menu_item</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>parent</name></decl></parameter>, <parameter><decl><type><name>char</name> <specifier>const</specifier> <modifier>*</modifier></type><name>title</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>id</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>icon</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>submenu</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<return>return <expr><call><name>al_insert_menu_item</name><argument_list>(<argument><expr><name>parent</name></expr></argument>, <argument><expr><literal type="number">0</literal> <operator>-</operator> <operator>(</operator><name>int</name><operator>)</operator> <call><name>_al_vector_size</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>parent</name><operator>-&gt;</operator><name>items</name></name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name>title</name></expr></argument>, <argument><expr><name>id</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>, <argument><expr><name>icon</name></expr></argument>, <argument><expr><name>submenu</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>



<function><type><name>int</name></type> <name>al_insert_menu_item</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>parent</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>pos</name></decl></parameter>, <parameter><decl><type><name>char</name> <specifier>const</specifier> <modifier>*</modifier></type><name>title</name></decl></parameter>,
<parameter><decl><type><name>uint16_t</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>icon</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>submenu</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier><modifier>*</modifier></type><name>slot</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>_AL_MENU_ID</name> <modifier>*</modifier></type><name>menu_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>interpret_menu_id_param</name><argument_list>(<argument><expr><operator>&amp;</operator><name>parent</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>pos</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>pos</name> <operator>=</operator> <call><name>_al_vector_size</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>parent</name><operator>-&gt;</operator><name>items</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>




<if_stmt><if>if <condition>(<expr><name>submenu</name> <operator>&amp;&amp;</operator> <operator>(</operator><name><name>submenu</name><operator>-&gt;</operator><name>display</name></name> <operator>||</operator> <name><name>submenu</name><operator>-&gt;</operator><name>parent</name></name> <operator>||</operator> <name><name>submenu</name><operator>-&gt;</operator><name>is_popup_menu</name></name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>item</name> <operator>=</operator> <call><name>create_menu_item</name><argument_list>(<argument><expr><name>title</name></expr></argument>, <argument><expr><name>id</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>, <argument><expr><name>submenu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>item</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>item</name><operator>-&gt;</operator><name>parent</name></name> <operator>=</operator> <name>parent</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>set_item_icon</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><name>icon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>i</name> <operator>=</operator> <operator>(</operator><name>size_t</name><operator>)</operator> <name>pos</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>i</name> <operator>&gt;=</operator> <call><name>_al_vector_size</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>parent</name><operator>-&gt;</operator><name>items</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>i</name> <operator>=</operator> <call><name>_al_vector_size</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>parent</name><operator>-&gt;</operator><name>items</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>slot</name> <operator>=</operator> <call><name>_al_vector_alloc_back</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>parent</name><operator>-&gt;</operator><name>items</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>

<expr_stmt><expr><name>slot</name> <operator>=</operator> <call><name>_al_vector_alloc_mid</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>parent</name><operator>-&gt;</operator><name>items</name></name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt> 

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>slot</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>destroy_menu_item</name><argument_list>(<argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><operator>*</operator><name>slot</name> <operator>=</operator> <name>item</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>submenu</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>submenu</name><operator>-&gt;</operator><name>parent</name></name> <operator>=</operator> <name>item</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>parent</name><operator>-&gt;</operator><name>display</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>_al_walk_over_menu</name><argument_list>(<argument><expr><name>submenu</name></expr></argument>, <argument><expr><name>set_menu_display_r</name></expr></argument>, <argument><expr><name><name>parent</name><operator>-&gt;</operator><name>display</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>_al_insert_menu_item_at</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator> <name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>id</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>menu_id</name> <operator>=</operator> <operator>(</operator><name>_AL_MENU_ID</name> <operator>*</operator><operator>)</operator> <call><name>_al_vector_alloc_back</name><argument_list>(<argument><expr><operator>&amp;</operator><name>menu_ids</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>menu_id</name><operator>-&gt;</operator><name>unique_id</name></name> <operator>=</operator> <name><name>item</name><operator>-&gt;</operator><name>unique_id</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>menu_id</name><operator>-&gt;</operator><name>id</name></name> <operator>=</operator> <name>id</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>menu_id</name><operator>-&gt;</operator><name>menu</name></name> <operator>=</operator> <name>parent</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><operator>(</operator><name>int</name><operator>)</operator> <name>i</name></expr>;</return>
</block_content>}</block></function>



<function><type><name>bool</name></type> <name>al_remove_menu_item</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>pos</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>item</name> <operator>=</operator> <call><name>interpret_menu_id_param</name><argument_list>(<argument><expr><operator>&amp;</operator><name>menu</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>item</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>destroy_menu_item</name><argument_list>(<argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>



<function><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>al_find_menu</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>haystack</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>id</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>index</name></decl>;</decl_stmt>

<return>return <expr><ternary><condition><expr><operator>!</operator><call><name>al_find_menu_item</name><argument_list>(<argument><expr><name>haystack</name></expr></argument>, <argument><expr><name>id</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>haystack</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>index</name></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><name>NULL</name></expr> </then><else>:
<expr><operator>(</operator><operator>*</operator><operator>(</operator><name>ALLEGRO_MENU_ITEM</name> <operator>*</operator><operator>*</operator><operator>)</operator><call><name>_al_vector_ref</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>haystack</name><operator>-&gt;</operator><name>items</name></name></expr></argument>, <argument><expr><name>index</name></expr></argument>)</argument_list></call><operator>)</operator><operator>-&gt;</operator><name>popup</name></expr></else></ternary></expr>;</return>
</block_content>}</block></function>



<function><type><name>bool</name></type> <name>al_find_menu_item</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>haystack</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier><modifier>*</modifier></type><name>menu</name></decl></parameter>,
<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>index</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_MENU_ITEM</name></type> <name>item</name></decl>;</decl_stmt> 

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>haystack</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





<expr_stmt><expr><name><name>item</name><operator>.</operator><name>id</name></name> <operator>=</operator> <name>id</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>_al_walk_over_menu</name><argument_list>(<argument><expr><name>haystack</name></expr></argument>, <argument><expr><name>find_menu_item_r</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>item</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>menu</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><operator>*</operator><name>menu</name> <operator>=</operator> <name><name>item</name><operator>.</operator><name>parent</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>index</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><operator>*</operator><name>index</name> <operator>=</operator> <name><name>item</name><operator>.</operator><name>id</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>



<function><type><name>bool</name></type> <name>_al_find_menu_item_unique</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>haystack</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>unique_id</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier><modifier>*</modifier></type><name>menu</name></decl></parameter>,
<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>index</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_MENU_ITEM</name></type> <name>item</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>haystack</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>item</name><operator>.</operator><name>unique_id</name></name> <operator>=</operator> <name>unique_id</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>_al_walk_over_menu</name><argument_list>(<argument><expr><name>haystack</name></expr></argument>, <argument><expr><name>find_menu_item_r_unique</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>item</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>menu</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><operator>*</operator><name>menu</name> <operator>=</operator> <name><name>item</name><operator>.</operator><name>parent</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>index</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><operator>*</operator><name>index</name> <operator>=</operator> <name><name>item</name><operator>.</operator><name>id</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>



<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>al_get_menu_item_caption</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>pos</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>item</name> <operator>=</operator> <call><name>interpret_menu_id_param</name><argument_list>(<argument><expr><operator>&amp;</operator><name>menu</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><ternary><condition><expr><name>item</name> <operator>&amp;&amp;</operator> <name><name>item</name><operator>-&gt;</operator><name>caption</name></name></expr> ?</condition><then> <expr><call><name>al_cstr</name><argument_list>(<argument><expr><name><name>item</name><operator>-&gt;</operator><name>caption</name></name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr>;</return>
</block_content>}</block></function>




<function><type><name>void</name></type> <name>al_set_menu_item_caption</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>pos</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>caption</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>item</name> <operator>=</operator> <call><name>interpret_menu_id_param</name><argument_list>(<argument><expr><operator>&amp;</operator><name>menu</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>item</name> <operator>&amp;&amp;</operator> <name><name>item</name><operator>-&gt;</operator><name>caption</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>al_ustr_free</name><argument_list>(<argument><expr><name><name>item</name><operator>-&gt;</operator><name>caption</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>item</name><operator>-&gt;</operator><name>caption</name></name> <operator>=</operator> <call><name>al_ustr_new</name><argument_list>(<argument><expr><name>caption</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_update_menu_item_at</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><name>pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>



<function><type><name>int</name></type> <name>al_get_menu_item_flags</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>pos</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>item</name> <operator>=</operator> <call><name>interpret_menu_id_param</name><argument_list>(<argument><expr><operator>&amp;</operator><name>menu</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><ternary><condition><expr><name>item</name></expr> ?</condition><then> <expr><name><name>item</name><operator>-&gt;</operator><name>flags</name></name></expr> </then><else>: <expr><operator>-</operator><literal type="number">1</literal></expr></else></ternary></expr>;</return>
</block_content>}</block></function>



<function><type><name>void</name></type> <name>al_set_menu_item_flags</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>pos</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>item</name> <operator>=</operator> <call><name>interpret_menu_id_param</name><argument_list>(<argument><expr><operator>&amp;</operator><name>menu</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>item</name></expr>)</condition> <block>{<block_content>



<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>ALLEGRO_MENU_ITEM_CHECKBOX</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>flags</name> <operator>|=</operator> <name>ALLEGRO_MENU_ITEM_CHECKBOX</name></expr>;</expr_stmt></block_content></block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name>flags</name> <operator>&amp;=</operator> <operator>~</operator><name>ALLEGRO_MENU_ITEM_CHECKED</name></expr>;</expr_stmt>
<expr_stmt><expr><name>flags</name> <operator>&amp;=</operator> <operator>~</operator><name>ALLEGRO_MENU_ITEM_CHECKBOX</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name><name>item</name><operator>-&gt;</operator><name>flags</name></name> <operator>=</operator> <name>flags</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_update_menu_item_at</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><name>pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>



<function><type><name>int</name></type> <name>al_toggle_menu_item_flags</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>pos</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>item</name> <operator>=</operator> <call><name>interpret_menu_id_param</name><argument_list>(<argument><expr><operator>&amp;</operator><name>menu</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>item</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>




<expr_stmt><expr><name>flags</name> <operator>&amp;=</operator> <operator>~</operator><name>ALLEGRO_MENU_ITEM_CHECKBOX</name></expr>;</expr_stmt> 
<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name><name>item</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>ALLEGRO_MENU_ITEM_CHECKBOX</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>flags</name> <operator>&amp;=</operator> <operator>~</operator><name>ALLEGRO_MENU_ITEM_CHECKED</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>item</name><operator>-&gt;</operator><name>flags</name></name> <operator>^=</operator> <name>flags</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_update_menu_item_at</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><name>pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name><name>item</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>flags</name></expr>;</return>
</block_content>}</block></function>



<function><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>al_get_menu_item_icon</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>pos</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>item</name> <operator>=</operator> <call><name>interpret_menu_id_param</name><argument_list>(<argument><expr><operator>&amp;</operator><name>menu</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><ternary><condition><expr><name>item</name></expr> ?</condition><then> <expr><name><name>item</name><operator>-&gt;</operator><name>icon</name></name></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr>;</return>
</block_content>}</block></function>




<function><type><name>void</name></type> <name>al_set_menu_item_icon</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>pos</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>icon</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>item</name> <operator>=</operator> <call><name>interpret_menu_id_param</name><argument_list>(<argument><expr><operator>&amp;</operator><name>menu</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>item</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>icon</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>al_destroy_bitmap</name><argument_list>(<argument><expr><name><name>item</name><operator>-&gt;</operator><name>icon</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>set_item_icon</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><name>icon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_update_menu_item_at</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><name>pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>



<function><type><name>void</name></type> <name>al_destroy_menu</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier><modifier>*</modifier></type><name>slot</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>menu</name><operator>-&gt;</operator><name>parent</name></name></expr>)</condition> <block>{<block_content>


<decl_stmt><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>parent</name> <init>= <expr><name><name>menu</name><operator>-&gt;</operator><name>parent</name><operator>-&gt;</operator><name>parent</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>_al_vector_size</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>parent</name><operator>-&gt;</operator><name>items</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>slot</name> <operator>=</operator> <call><name>_al_vector_ref</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>parent</name><operator>-&gt;</operator><name>items</name></name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>*</operator><name>slot</name> <operator>==</operator> <name><name>menu</name><operator>-&gt;</operator><name>parent</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>al_remove_menu_item</name><argument_list>(<argument><expr><name>parent</name></expr></argument>, <argument><expr><literal type="number">0</literal> <operator>-</operator> <operator>(</operator><name>int</name><operator>)</operator> <name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>


<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return;</return>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>menu</name><operator>-&gt;</operator><name>display</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>menu</name><operator>-&gt;</operator><name>is_popup_menu</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>al_remove_display_menu</name><argument_list>(<argument><expr><name><name>menu</name><operator>-&gt;</operator><name>display</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<while>while <condition>(<expr><call><name>_al_vector_size</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>menu</name><operator>-&gt;</operator><name>items</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>slot</name> <operator>=</operator> <call><name>_al_vector_ref_back</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>menu</name><operator>-&gt;</operator><name>items</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>destroy_menu_item</name><argument_list>(<argument><expr><operator>*</operator><name>slot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></while>

<expr_stmt><expr><call><name>_al_vector_free</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>menu</name><operator>-&gt;</operator><name>items</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_disable_menu_event_source</name><argument_list>(<argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_free</name><argument_list>(<argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>



<function><type><name>ALLEGRO_EVENT_SOURCE</name> <modifier>*</modifier></type><name>al_get_default_menu_event_source</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>&amp;</operator><name>default_menu_es</name></expr>;</return>
</block_content>}</block></function>



<function><type><name>ALLEGRO_EVENT_SOURCE</name> <modifier>*</modifier></type><name>al_enable_menu_event_source</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>menu</name><operator>-&gt;</operator><name>is_event_source</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>al_init_user_event_source</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>menu</name><operator>-&gt;</operator><name>es</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>menu</name><operator>-&gt;</operator><name>is_event_source</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><operator>&amp;</operator><name><name>menu</name><operator>-&gt;</operator><name>es</name></name></expr>;</return>
</block_content>}</block></function>



<function><type><name>void</name></type> <name>al_disable_menu_event_source</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>menu</name><operator>-&gt;</operator><name>is_event_source</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>al_destroy_user_event_source</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>menu</name><operator>-&gt;</operator><name>es</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>menu</name><operator>-&gt;</operator><name>is_event_source</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>



<function><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>al_get_display_menu</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>_al_vector_size</name><argument_list>(<argument><expr><operator>&amp;</operator><name>display_menus</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>DISPLAY_MENU</name> <modifier>*</modifier></type><name>dm</name> <init>= <expr><operator>(</operator><name>DISPLAY_MENU</name> <operator>*</operator><operator>)</operator> <call><name>_al_vector_ref</name><argument_list>(<argument><expr><operator>&amp;</operator><name>display_menus</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name><name>dm</name><operator>-&gt;</operator><name>display</name></name> <operator>==</operator> <name>display</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name><name>dm</name><operator>-&gt;</operator><name>menu</name></name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></for>

<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>



<function><type><name>bool</name></type> <name>al_set_display_menu</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>DISPLAY_MENU</name> <modifier>*</modifier></type><name>dm</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>menu_height</name> <init>= <expr><call><name>_al_get_menu_display_height</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>automatic_menu_display_resize</name> <init>= <expr><name>true</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>automatic_menu_display_resize_value</name> <init>=
<expr><call><name>al_get_config_value</name><argument_list>(<argument><expr><call><name>al_get_system_config</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"compatibility"</literal></expr></argument>, <argument><expr><literal type="string">"automatic_menu_display_resize"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>automatic_menu_display_resize_value</name> <operator>&amp;&amp;</operator> <call><name>strcmp</name><argument_list>(<argument><expr><name>automatic_menu_display_resize_value</name></expr></argument>, <argument><expr><literal type="string">"false"</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>automatic_menu_display_resize</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt></block_content></block></if></if_stmt> 

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>_al_vector_size</name><argument_list>(<argument><expr><operator>&amp;</operator><name>display_menus</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>dm</name> <operator>=</operator> <operator>(</operator><name>DISPLAY_MENU</name> <operator>*</operator><operator>)</operator> <call><name>_al_vector_ref</name><argument_list>(<argument><expr><operator>&amp;</operator><name>display_menus</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>dm</name><operator>-&gt;</operator><name>display</name></name> <operator>==</operator> <name>display</name></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>
</block_content>}</block></for>


<if_stmt><if>if <condition>(<expr><name>i</name> <operator>==</operator> <call><name>_al_vector_size</name><argument_list>(<argument><expr><operator>&amp;</operator><name>display_menus</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>dm</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>menu</name></expr>)</condition> <block>{<block_content>


<if_stmt><if>if <condition>(<expr><operator>!</operator><name>dm</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>_al_hide_display_menu</name><argument_list>(<argument><expr><name>display</name></expr></argument>, <argument><expr><name><name>dm</name><operator>-&gt;</operator><name>menu</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_walk_over_menu</name><argument_list>(<argument><expr><name><name>dm</name><operator>-&gt;</operator><name>menu</name></name></expr></argument>, <argument><expr><name>set_menu_display_r</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_vector_delete_at</name><argument_list>(<argument><expr><operator>&amp;</operator><name>display_menus</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>automatic_menu_display_resize</name> <operator>&amp;&amp;</operator> <name>menu_height</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>display</name><operator>-&gt;</operator><name>extra_resize_height</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_resize_display</name><argument_list>(<argument><expr><name>display</name></expr></argument>, <argument><expr><call><name>al_get_display_width</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>al_get_display_height</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>


<if_stmt><if>if <condition>(<expr><name><name>menu</name><operator>-&gt;</operator><name>display</name></name> <operator>||</operator> <name><name>menu</name><operator>-&gt;</operator><name>parent</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>dm</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>_al_hide_display_menu</name><argument_list>(<argument><expr><name>display</name></expr></argument>, <argument><expr><name><name>dm</name><operator>-&gt;</operator><name>menu</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_walk_over_menu</name><argument_list>(<argument><expr><name><name>dm</name><operator>-&gt;</operator><name>menu</name></name></expr></argument>, <argument><expr><name>set_menu_display_r</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>_al_show_display_menu</name><argument_list>(<argument><expr><name>display</name></expr></argument>, <argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>


<if_stmt><if>if <condition>(<expr><name>dm</name></expr>)</condition><block type="pseudo"><block_content> 
<expr_stmt><expr><call><name>_al_vector_delete_at</name><argument_list>(<argument><expr><operator>&amp;</operator><name>display_menus</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><call><name>_al_walk_over_menu</name><argument_list>(<argument><expr><name>menu</name></expr></argument>, <argument><expr><name>set_menu_display_r</name></expr></argument>, <argument><expr><name>display</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>dm</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>dm</name> <operator>=</operator> <call><name>_al_vector_alloc_back</name><argument_list>(<argument><expr><operator>&amp;</operator><name>display_menus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>automatic_menu_display_resize</name> <operator>&amp;&amp;</operator> <name>menu_height</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>bool</name></type> <name>old_constraints</name> <init>= <expr><name><name>display</name><operator>-&gt;</operator><name>use_constraints</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>display</name><operator>-&gt;</operator><name>use_constraints</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>display</name><operator>-&gt;</operator><name>extra_resize_height</name></name> <operator>=</operator> <name>menu_height</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_resize_display</name><argument_list>(<argument><expr><name>display</name></expr></argument>, <argument><expr><call><name>al_get_display_width</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>al_get_display_height</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>display</name><operator>-&gt;</operator><name>use_constraints</name></name> <operator>=</operator> <name>old_constraints</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>dm</name><operator>-&gt;</operator><name>display</name></name> <operator>=</operator> <name>display</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dm</name><operator>-&gt;</operator><name>menu</name></name> <operator>=</operator> <name>menu</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>



<function><type><name>bool</name></type> <name>al_popup_menu</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>popup</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>bool</name></type> <name>ret</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>popup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>popup</name><operator>-&gt;</operator><name>is_popup_menu</name></name> <operator>||</operator> <name><name>popup</name><operator>-&gt;</operator><name>parent</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>display</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>display</name> <operator>=</operator> <call><name>al_get_current_display</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>


<expr_stmt><expr><call><name>_al_walk_over_menu</name><argument_list>(<argument><expr><name>popup</name></expr></argument>, <argument><expr><name>set_menu_display_r</name></expr></argument>, <argument><expr><name>display</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>_al_show_popup_menu</name><argument_list>(<argument><expr><name>display</name></expr></argument>, <argument><expr><name>popup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>ret</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>_al_walk_over_menu</name><argument_list>(<argument><expr><name>popup</name></expr></argument>, <argument><expr><name>set_menu_display_r</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>



<function><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>al_remove_display_menu</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>menu</name> <operator>=</operator> <call><name>al_get_display_menu</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>menu</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>al_set_display_menu</name><argument_list>(<argument><expr><name>display</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>menu</name></expr>;</return>
</block_content>}</block></function>




<function><type><name>_AL_MENU_ID</name> <modifier>*</modifier></type><name>_al_find_parent_menu_by_id</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>unique_id</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>_AL_MENU_ID</name> <modifier>*</modifier></type><name>menu_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>_al_vector_size</name><argument_list>(<argument><expr><operator>&amp;</operator><name>menu_ids</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>menu_id</name> <operator>=</operator> <operator>(</operator><name>_AL_MENU_ID</name> <operator>*</operator><operator>)</operator> <call><name>_al_vector_ref</name><argument_list>(<argument><expr><operator>&amp;</operator><name>menu_ids</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>menu_id</name><operator>-&gt;</operator><name>unique_id</name></name> <operator>==</operator> <name>unique_id</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>display</name> <operator>||</operator> <name><name>menu_id</name><operator>-&gt;</operator><name>menu</name><operator>-&gt;</operator><name>display</name></name> <operator>==</operator> <name>display</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>menu_id</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>

<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>






<function><type><name>bool</name></type> <name>_al_emit_menu_event</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>unique_id</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_EVENT</name></type> <name>event</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>_AL_MENU_ID</name> <modifier>*</modifier></type><name>menu_id</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_EVENT_SOURCE</name> <modifier>*</modifier></type><name>source</name> <init>= <expr><call><name>al_get_default_menu_event_source</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>


<expr_stmt><expr><name>menu_id</name> <operator>=</operator> <call><name>_al_find_parent_menu_by_id</name><argument_list>(<argument><expr><name>display</name></expr></argument>, <argument><expr><name>unique_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>menu_id</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>menu_id</name><operator>-&gt;</operator><name>id</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>menu_id</name></expr>)</condition> <block>{<block_content>


<decl_stmt><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>m</name> <init>= <expr><name><name>menu_id</name><operator>-&gt;</operator><name>menu</name></name></expr></init></decl>;</decl_stmt>
<while>while <condition>(<expr><name>true</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>m</name><operator>-&gt;</operator><name>is_event_source</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>source</name> <operator>=</operator> <operator>&amp;</operator><name><name>m</name><operator>-&gt;</operator><name>es</name></name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>m</name><operator>-&gt;</operator><name>parent</name></name></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>



<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name><name>m</name><operator>-&gt;</operator><name>parent</name><operator>-&gt;</operator><name>parent</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>m</name> <operator>=</operator> <name><name>m</name><operator>-&gt;</operator><name>parent</name><operator>-&gt;</operator><name>parent</name></name></expr>;</expr_stmt>
</block_content>}</block></while>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>user</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>ALLEGRO_EVENT_MENU_CLICK</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>user</name><operator>.</operator><name>data1</name></name> <operator>=</operator> <name><name>menu_id</name><operator>-&gt;</operator><name>id</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>user</name><operator>.</operator><name>data2</name></name> <operator>=</operator> <operator>(</operator><name>intptr_t</name><operator>)</operator> <name>display</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>user</name><operator>.</operator><name>data3</name></name> <operator>=</operator> <operator>(</operator><name>intptr_t</name><operator>)</operator> <name><name>menu_id</name><operator>-&gt;</operator><name>menu</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_emit_user_event</name><argument_list>(<argument><expr><name>source</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>event</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>



</unit>
