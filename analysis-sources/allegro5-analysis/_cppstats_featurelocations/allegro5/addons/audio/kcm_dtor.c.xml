<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\addons\audio\kcm_dtor.c">

















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro_audio.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_dtor.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_thread.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_audio.h"</cpp:file></cpp:include>


<decl_stmt><decl><type><specifier>static</specifier> <name>_AL_DTOR_LIST</name> <modifier>*</modifier></type><name>kcm_dtors</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>





<function><type><name>void</name></type> <name>_al_kcm_init_destructors</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>kcm_dtors</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>kcm_dtors</name> <operator>=</operator> <call><name>_al_init_destructors</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>





<function><type><name>void</name></type> <name>_al_kcm_shutdown_destructors</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>kcm_dtors</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>_al_run_destructors</name><argument_list>(<argument><expr><name>kcm_dtors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_shutdown_destructors</name><argument_list>(<argument><expr><name>kcm_dtors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>kcm_dtors</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>





<function><type><name>_AL_LIST_ITEM</name> <modifier>*</modifier></type><name>_al_kcm_register_destructor</name><parameter_list>(<parameter><decl><type><name>char</name> <specifier>const</specifier> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>object</name></decl></parameter>,
<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>func</name>)<parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_al_register_destructor</name><argument_list>(<argument><expr><name>kcm_dtors</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>object</name></expr></argument>, <argument><expr><name>func</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>





<function><type><name>void</name></type> <name>_al_kcm_unregister_destructor</name><parameter_list>(<parameter><decl><type><name>_AL_LIST_ITEM</name> <modifier>*</modifier></type><name>dtor_item</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>_al_unregister_destructor</name><argument_list>(<argument><expr><name>kcm_dtors</name></expr></argument>, <argument><expr><name>dtor_item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>





<function><type><name>void</name></type> <name>_al_kcm_foreach_destructor</name><parameter_list>(
<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>callback</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>object</name></decl></parameter>, <parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>func</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>udata</name></decl></parameter>)</parameter_list></function_decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>userdata</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>_al_foreach_destructor</name><argument_list>(<argument><expr><name>kcm_dtors</name></expr></argument>, <argument><expr><name>callback</name></expr></argument>, <argument><expr><name>userdata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>



</unit>
