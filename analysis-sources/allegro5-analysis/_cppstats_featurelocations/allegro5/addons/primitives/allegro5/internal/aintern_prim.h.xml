<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\addons\primitives\allegro5\internal\aintern_prim.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__al_included_allegro5_aintern_prim_h</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__al_included_allegro5_aintern_prim_h</name></cpp:macro></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<enum>enum <name>ALLEGRO_PRIM_VERTEX_CACHE_TYPE</name>
<block>{
<decl><name>ALLEGRO_PRIM_VERTEX_CACHE_TRIANGLE</name></decl>,
<decl><name>ALLEGRO_PRIM_VERTEX_CACHE_LINE_STRIP</name></decl>
}</block>;</enum>

<struct>struct <name>ALLEGRO_VERTEX_DECL</name> <block>{
<decl_stmt><decl><type><name>ALLEGRO_VERTEX_ELEMENT</name><modifier>*</modifier></type> <name>elements</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>stride</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name><modifier>*</modifier></type> <name>d3d_decl</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name><modifier>*</modifier></type> <name>d3d_dummy_shader</name></decl>;</decl_stmt>
}</block>;</struct>

<typedef>typedef <type><struct>struct <name>ALLEGRO_PRIM_VERTEX_CACHE</name> <block>{
<decl_stmt><decl><type><name>ALLEGRO_VERTEX</name></type> <name><name>buffer</name><index>[<expr><name>ALLEGRO_VERTEX_CACHE_SIZE</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_VERTEX</name><modifier>*</modifier></type> <name>current</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_COLOR</name></type> <name>color</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>prim_type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name><modifier>*</modifier></type> <name>user_data</name></decl>;</decl_stmt>
}</block></struct></type> <name>ALLEGRO_PRIM_VERTEX_CACHE</name>;</typedef>

<typedef>typedef <type><struct>struct <name>ALLEGRO_BUFFER_COMMON</name> <block>{
<decl_stmt><decl><type><name>uintptr_t</name></type> <name>handle</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>write_only</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>is_locked</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>lock_flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name><modifier>*</modifier></type> <name>locked_memory</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>local_buffer_length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>lock_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>lock_length</name></decl>;</decl_stmt>
}</block></struct></type> <name>ALLEGRO_BUFFER_COMMON</name>;</typedef>

<struct>struct <name>ALLEGRO_VERTEX_BUFFER</name> <block>{
<decl_stmt><decl><type><name>ALLEGRO_VERTEX_DECL</name><modifier>*</modifier></type> <name>decl</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_BUFFER_COMMON</name></type> <name>common</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>ALLEGRO_INDEX_BUFFER</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>index_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_BUFFER_COMMON</name></type> <name>common</name></decl>;</decl_stmt>
}</block>;</struct>


<function_decl><type><name>void</name></type> <name>_al_prim_cache_init</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_PRIM_VERTEX_CACHE</name><modifier>*</modifier></type> <name>cache</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>prim_type</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_COLOR</name></type> <name>color</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_al_prim_cache_init_ex</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_PRIM_VERTEX_CACHE</name><modifier>*</modifier></type> <name>cache</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>prim_type</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_COLOR</name></type> <name>color</name></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>user_data</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_al_prim_cache_term</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_PRIM_VERTEX_CACHE</name><modifier>*</modifier></type> <name>cache</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_al_prim_cache_flush</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_PRIM_VERTEX_CACHE</name><modifier>*</modifier></type> <name>cache</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_al_prim_cache_push_point</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_PRIM_VERTEX_CACHE</name><modifier>*</modifier></type> <name>cache</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name><modifier>*</modifier></type> <name>v</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_al_prim_cache_push_triangle</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_PRIM_VERTEX_CACHE</name><modifier>*</modifier></type> <name>cache</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name><modifier>*</modifier></type> <name>v0</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name><modifier>*</modifier></type> <name>v1</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name><modifier>*</modifier></type> <name>v2</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>float</name></type> <name>_al_prim_get_scale</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>float</name></type> <name>_al_prim_normalize</name><parameter_list>(<parameter><decl><type><name>float</name><modifier>*</modifier></type> <name>vector</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_al_prim_test_line_side</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>float</name><modifier>*</modifier></type> <name>origin</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name><modifier>*</modifier></type> <name>normal</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name><modifier>*</modifier></type> <name>point</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>_al_prim_is_point_in_triangle</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>float</name><modifier>*</modifier></type> <name>point</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name><modifier>*</modifier></type> <name>v0</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name><modifier>*</modifier></type> <name>v1</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name><modifier>*</modifier></type> <name>v2</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>_al_prim_intersect_segment</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>float</name><modifier>*</modifier></type> <name>v0</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name><modifier>*</modifier></type> <name>v1</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name><modifier>*</modifier></type> <name>p0</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name><modifier>*</modifier></type> <name>p1</name></decl></parameter>, <parameter><decl><type><name>float</name><modifier>*</modifier></type> <name>point</name></decl></parameter>, <parameter><decl><type><name>float</name><modifier>*</modifier></type> <name>t0</name></decl></parameter>, <parameter><decl><type><name>float</name><modifier>*</modifier></type> <name>t1</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>_al_prim_are_points_equal</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>float</name><modifier>*</modifier></type> <name>point_a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name><modifier>*</modifier></type> <name>point_b</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>_al_bitmap_region_is_locked</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name><modifier>*</modifier></type> <name>bmp</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x1</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y1</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x2</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y2</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_al_draw_buffer_common_soft</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_VERTEX_BUFFER</name><modifier>*</modifier></type> <name>vertex_buffer</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_BITMAP</name><modifier>*</modifier></type> <name>texture</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_INDEX_BUFFER</name><modifier>*</modifier></type> <name>index_buffer</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>start</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>end</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
