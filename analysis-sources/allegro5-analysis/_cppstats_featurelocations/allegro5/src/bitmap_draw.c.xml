<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\src\bitmap_draw.c">















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_bitmap.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_display.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_memblit.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_pixels.h"</cpp:file></cpp:include>


<decl_stmt><decl><type><specifier>static</specifier> <name>ALLEGRO_COLOR</name></type> <name>solid_white</name> <init>= <expr><block>{<expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>}</block></expr></init></decl>;</decl_stmt>


<function><type><specifier>static</specifier> <name>void</name></type> <name>_bitmap_drawer</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_COLOR</name></type> <name>tint</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>sx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>sy</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>sw</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>sh</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>dest</name> <init>= <expr><call><name>al_get_target_bitmap</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name> <init>= <expr><call><name>_al_get_bitmap_display</name><argument_list>(<argument><expr><name>dest</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name><name>bitmap</name><operator>-&gt;</operator><name>parent</name></name> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><operator>!</operator><operator>(</operator><name>flags</name> <operator>&amp;</operator> <operator>(</operator><name>ALLEGRO_FLIP_HORIZONTAL</name> <operator>|</operator> <name>ALLEGRO_FLIP_VERTICAL</name><operator>)</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>bitmap</name> <operator>!=</operator> <name>dest</name> <operator>&amp;&amp;</operator> <name>bitmap</name> <operator>!=</operator> <name><name>dest</name><operator>-&gt;</operator><name>parent</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><call><name>al_get_bitmap_flags</name><argument_list>(<argument><expr><name>dest</name></expr></argument>)</argument_list></call> <operator>&amp;</operator> <name>ALLEGRO_MEMORY_BITMAP</name> <operator>||</operator>
<call><name>_al_pixel_format_is_compressed</name><argument_list>(<argument><expr><call><name>al_get_bitmap_format</name><argument_list>(<argument><expr><name>dest</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>_al_draw_bitmap_region_memory</name><argument_list>(<argument><expr><name>bitmap</name></expr></argument>, <argument><expr><name>tint</name></expr></argument>, <argument><expr><name>sx</name></expr></argument>, <argument><expr><name>sy</name></expr></argument>, <argument><expr><name>sw</name></expr></argument>, <argument><expr><name>sh</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>(</operator><call><name>al_get_bitmap_flags</name><argument_list>(<argument><expr><name>bitmap</name></expr></argument>)</argument_list></call> <operator>&amp;</operator> <name>ALLEGRO_MEMORY_BITMAP</name><operator>)</operator> <operator>||</operator>
<operator>(</operator><operator>!</operator><call><name>al_is_compatible_bitmap</name><argument_list>(<argument><expr><name>bitmap</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>display</name> <operator>&amp;&amp;</operator> <name><name>display</name><operator>-&gt;</operator><name>vt</name><operator>-&gt;</operator><name>draw_memory_bitmap_region</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name><name>display</name><operator>-&gt;</operator><name>vt</name><operator>-&gt;</operator><name>draw_memory_bitmap_region</name></name><argument_list>(<argument><expr><name>display</name></expr></argument>, <argument><expr><name>bitmap</name></expr></argument>,
<argument><expr><name>sx</name></expr></argument>, <argument><expr><name>sy</name></expr></argument>, <argument><expr><name>sw</name></expr></argument>, <argument><expr><name>sh</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><call><name>_al_draw_bitmap_region_memory</name><argument_list>(<argument><expr><name>bitmap</name></expr></argument>, <argument><expr><name>tint</name></expr></argument>, <argument><expr><name>sx</name></expr></argument>, <argument><expr><name>sy</name></expr></argument>, <argument><expr><name>sw</name></expr></argument>, <argument><expr><name>sh</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>

<expr_stmt><expr><call><name><name>bitmap</name><operator>-&gt;</operator><name>vt</name><operator>-&gt;</operator><name>draw_bitmap_region</name></name><argument_list>(<argument><expr><name>bitmap</name></expr></argument>, <argument><expr><name>tint</name></expr></argument>, <argument><expr><name>sx</name></expr></argument>, <argument><expr><name>sy</name></expr></argument>, <argument><expr><name>sw</name></expr></argument>, <argument><expr><name>sh</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>void</name></type> <name>_draw_tinted_rotated_scaled_bitmap_region</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>,
<parameter><decl><type><name>ALLEGRO_COLOR</name></type> <name>tint</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>cx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>cy</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>angle</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>xscale</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>yscale</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>sx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>sy</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>sw</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>sh</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dy</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_TRANSFORM</name></type> <name>backup</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_TRANSFORM</name></type> <name>t</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>parent</name> <init>= <expr><name>bitmap</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name> <specifier>const</specifier></type> <name>orig_sw</name> <init>= <expr><name>sw</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name> <specifier>const</specifier></type> <name>orig_sh</name> <init>= <expr><name>sh</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>bitmap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_copy_transform</name><argument_list>(<argument><expr><operator>&amp;</operator><name>backup</name></expr></argument>, <argument><expr><call><name>al_get_current_transform</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_identity_transform</name><argument_list>(<argument><expr><operator>&amp;</operator><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>bitmap</name><operator>-&gt;</operator><name>parent</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>parent</name> <operator>=</operator> <name><name>bitmap</name><operator>-&gt;</operator><name>parent</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>sx</name> <operator>+=</operator> <name><name>bitmap</name><operator>-&gt;</operator><name>xofs</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>sy</name> <operator>+=</operator> <name><name>bitmap</name><operator>-&gt;</operator><name>yofs</name></name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>sx</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>sw</name> <operator>+=</operator> <name>sx</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_translate_transform</name><argument_list>(<argument><expr><operator>&amp;</operator><name>t</name></expr></argument>, <argument><expr><operator>-</operator><name>sx</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>sx</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>sy</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>sh</name> <operator>+=</operator> <name>sy</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_translate_transform</name><argument_list>(<argument><expr><operator>&amp;</operator><name>t</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>-</operator><name>sy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>sy</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>sx</name> <operator>+</operator> <name>sw</name> <operator>&gt;</operator> <name><name>parent</name><operator>-&gt;</operator><name>w</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>sw</name> <operator>=</operator> <name><name>parent</name><operator>-&gt;</operator><name>w</name></name> <operator>-</operator> <name>sx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>sy</name> <operator>+</operator> <name>sh</name> <operator>&gt;</operator> <name><name>parent</name><operator>-&gt;</operator><name>h</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>sh</name> <operator>=</operator> <name><name>parent</name><operator>-&gt;</operator><name>h</name></name> <operator>-</operator> <name>sy</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <name>ALLEGRO_FLIP_HORIZONTAL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>al_scale_transform</name><argument_list>(<argument><expr><operator>&amp;</operator><name>t</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_translate_transform</name><argument_list>(<argument><expr><operator>&amp;</operator><name>t</name></expr></argument>, <argument><expr><name>orig_sw</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>flags</name> <operator>&amp;=</operator> <operator>~</operator><name>ALLEGRO_FLIP_HORIZONTAL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <name>ALLEGRO_FLIP_VERTICAL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>al_scale_transform</name><argument_list>(<argument><expr><operator>&amp;</operator><name>t</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_translate_transform</name><argument_list>(<argument><expr><operator>&amp;</operator><name>t</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>orig_sh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>flags</name> <operator>&amp;=</operator> <operator>~</operator><name>ALLEGRO_FLIP_VERTICAL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>al_translate_transform</name><argument_list>(<argument><expr><operator>&amp;</operator><name>t</name></expr></argument>, <argument><expr><operator>-</operator><name>cx</name></expr></argument>, <argument><expr><operator>-</operator><name>cy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_scale_transform</name><argument_list>(<argument><expr><operator>&amp;</operator><name>t</name></expr></argument>, <argument><expr><name>xscale</name></expr></argument>, <argument><expr><name>yscale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_rotate_transform</name><argument_list>(<argument><expr><operator>&amp;</operator><name>t</name></expr></argument>, <argument><expr><name>angle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_translate_transform</name><argument_list>(<argument><expr><operator>&amp;</operator><name>t</name></expr></argument>, <argument><expr><name>dx</name></expr></argument>, <argument><expr><name>dy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_compose_transform</name><argument_list>(<argument><expr><operator>&amp;</operator><name>t</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>backup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_use_transform</name><argument_list>(<argument><expr><operator>&amp;</operator><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_bitmap_drawer</name><argument_list>(<argument><expr><name>parent</name></expr></argument>, <argument><expr><name>tint</name></expr></argument>, <argument><expr><name>sx</name></expr></argument>, <argument><expr><name>sy</name></expr></argument>, <argument><expr><name>sw</name></expr></argument>, <argument><expr><name>sh</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_use_transform</name><argument_list>(<argument><expr><operator>&amp;</operator><name>backup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>




<function><type><name>void</name></type> <name>al_draw_tinted_bitmap_region</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>,
<parameter><decl><type><name>ALLEGRO_COLOR</name></type> <name>tint</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>sx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>sy</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>sw</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>sh</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dy</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>_draw_tinted_rotated_scaled_bitmap_region</name><argument_list>(<argument><expr><name>bitmap</name></expr></argument>, <argument><expr><name>tint</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>sx</name></expr></argument>, <argument><expr><name>sy</name></expr></argument>, <argument><expr><name>sw</name></expr></argument>, <argument><expr><name>sh</name></expr></argument>, <argument><expr><name>dx</name></expr></argument>, <argument><expr><name>dy</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>




<function><type><name>void</name></type> <name>al_draw_tinted_bitmap</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_COLOR</name></type> <name>tint</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>dx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dy</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>bitmap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_draw_tinted_bitmap_region</name><argument_list>(<argument><expr><name>bitmap</name></expr></argument>, <argument><expr><name>tint</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,
<argument><expr><name><name>bitmap</name><operator>-&gt;</operator><name>w</name></name></expr></argument>, <argument><expr><name><name>bitmap</name><operator>-&gt;</operator><name>h</name></name></expr></argument>, <argument><expr><name>dx</name></expr></argument>, <argument><expr><name>dy</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>




<function><type><name>void</name></type> <name>al_draw_bitmap</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dy</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>al_draw_tinted_bitmap</name><argument_list>(<argument><expr><name>bitmap</name></expr></argument>, <argument><expr><name>solid_white</name></expr></argument>, <argument><expr><name>dx</name></expr></argument>, <argument><expr><name>dy</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>




<function><type><name>void</name></type> <name>al_draw_bitmap_region</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>sx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>sy</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>sw</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>sh</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dy</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>al_draw_tinted_bitmap_region</name><argument_list>(<argument><expr><name>bitmap</name></expr></argument>, <argument><expr><name>solid_white</name></expr></argument>, <argument><expr><name>sx</name></expr></argument>, <argument><expr><name>sy</name></expr></argument>, <argument><expr><name>sw</name></expr></argument>, <argument><expr><name>sh</name></expr></argument>,
<argument><expr><name>dx</name></expr></argument>, <argument><expr><name>dy</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>




<function><type><name>void</name></type> <name>al_draw_tinted_scaled_bitmap</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>,
<parameter><decl><type><name>ALLEGRO_COLOR</name></type> <name>tint</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>sx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>sy</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>sw</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>sh</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>dx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dy</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dw</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dh</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>_draw_tinted_rotated_scaled_bitmap_region</name><argument_list>(<argument><expr><name>bitmap</name></expr></argument>, <argument><expr><name>tint</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,
<argument><expr><name>dw</name> <operator>/</operator> <name>sw</name></expr></argument>, <argument><expr><name>dh</name> <operator>/</operator> <name>sh</name></expr></argument>,
<argument><expr><name>sx</name></expr></argument>, <argument><expr><name>sy</name></expr></argument>, <argument><expr><name>sw</name></expr></argument>, <argument><expr><name>sh</name></expr></argument>, <argument><expr><name>dx</name></expr></argument>, <argument><expr><name>dy</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>




<function><type><name>void</name></type> <name>al_draw_scaled_bitmap</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>sx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>sy</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>sw</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>sh</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>dx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dy</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dw</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dh</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>al_draw_tinted_scaled_bitmap</name><argument_list>(<argument><expr><name>bitmap</name></expr></argument>, <argument><expr><name>solid_white</name></expr></argument>, <argument><expr><name>sx</name></expr></argument>, <argument><expr><name>sy</name></expr></argument>, <argument><expr><name>sw</name></expr></argument>, <argument><expr><name>sh</name></expr></argument>,
<argument><expr><name>dx</name></expr></argument>, <argument><expr><name>dy</name></expr></argument>, <argument><expr><name>dw</name></expr></argument>, <argument><expr><name>dh</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>







<function><type><name>void</name></type> <name>al_draw_tinted_rotated_bitmap</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>,
<parameter><decl><type><name>ALLEGRO_COLOR</name></type> <name>tint</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>cx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>cy</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dy</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>angle</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>al_draw_tinted_scaled_rotated_bitmap</name><argument_list>(<argument><expr><name>bitmap</name></expr></argument>, <argument><expr><name>tint</name></expr></argument>, <argument><expr><name>cx</name></expr></argument>, <argument><expr><name>cy</name></expr></argument>, <argument><expr><name>dx</name></expr></argument>, <argument><expr><name>dy</name></expr></argument>,
<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>angle</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>




<function><type><name>void</name></type> <name>al_draw_rotated_bitmap</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>cx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>cy</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dy</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>angle</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>al_draw_tinted_rotated_bitmap</name><argument_list>(<argument><expr><name>bitmap</name></expr></argument>, <argument><expr><name>solid_white</name></expr></argument>, <argument><expr><name>cx</name></expr></argument>, <argument><expr><name>cy</name></expr></argument>, <argument><expr><name>dx</name></expr></argument>, <argument><expr><name>dy</name></expr></argument>,
<argument><expr><name>angle</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>




<function><type><name>void</name></type> <name>al_draw_tinted_scaled_rotated_bitmap</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>,
<parameter><decl><type><name>ALLEGRO_COLOR</name></type> <name>tint</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>cx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>cy</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dy</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>xscale</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>yscale</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>angle</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>_draw_tinted_rotated_scaled_bitmap_region</name><argument_list>(<argument><expr><name>bitmap</name></expr></argument>, <argument><expr><name>tint</name></expr></argument>,
<argument><expr><name>cx</name></expr></argument>, <argument><expr><name>cy</name></expr></argument>, <argument><expr><name>angle</name></expr></argument>,
<argument><expr><name>xscale</name></expr></argument>, <argument><expr><name>yscale</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>bitmap</name><operator>-&gt;</operator><name>w</name></name></expr></argument>, <argument><expr><name><name>bitmap</name><operator>-&gt;</operator><name>h</name></name></expr></argument>, <argument><expr><name>dx</name></expr></argument>, <argument><expr><name>dy</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>




<function><type><name>void</name></type> <name>al_draw_tinted_scaled_rotated_bitmap_region</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>sx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>sy</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>sw</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>sh</name></decl></parameter>,
<parameter><decl><type><name>ALLEGRO_COLOR</name></type> <name>tint</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>cx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>cy</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dy</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>xscale</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>yscale</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>angle</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>_draw_tinted_rotated_scaled_bitmap_region</name><argument_list>(<argument><expr><name>bitmap</name></expr></argument>, <argument><expr><name>tint</name></expr></argument>,
<argument><expr><name>cx</name></expr></argument>, <argument><expr><name>cy</name></expr></argument>, <argument><expr><name>angle</name></expr></argument>,
<argument><expr><name>xscale</name></expr></argument>, <argument><expr><name>yscale</name></expr></argument>,
<argument><expr><name>sx</name></expr></argument>, <argument><expr><name>sy</name></expr></argument>, <argument><expr><name>sw</name></expr></argument>, <argument><expr><name>sh</name></expr></argument>, <argument><expr><name>dx</name></expr></argument>, <argument><expr><name>dy</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>




<function><type><name>void</name></type> <name>al_draw_scaled_rotated_bitmap</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>cx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>cy</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dy</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>xscale</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>yscale</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>angle</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>al_draw_tinted_scaled_rotated_bitmap</name><argument_list>(<argument><expr><name>bitmap</name></expr></argument>, <argument><expr><name>solid_white</name></expr></argument>,
<argument><expr><name>cx</name></expr></argument>, <argument><expr><name>cy</name></expr></argument>, <argument><expr><name>dx</name></expr></argument>, <argument><expr><name>dy</name></expr></argument>, <argument><expr><name>xscale</name></expr></argument>, <argument><expr><name>yscale</name></expr></argument>, <argument><expr><name>angle</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>



</unit>
