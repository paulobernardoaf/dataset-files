<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\src\evtsrc.c">




















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_dtor.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_events.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_system.h"</cpp:file></cpp:include>


<expr_stmt><expr><call><name>ALLEGRO_STATIC_ASSERT</name><argument_list>(<argument><expr><name>evtsrc</name></expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>ALLEGRO_EVENT_SOURCE_REAL</name></expr></argument>)</argument_list></sizeof> <operator>&lt;=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>ALLEGRO_EVENT_SOURCE</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>






<function><type><name>void</name></type> <name>_al_event_source_init</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_EVENT_SOURCE</name> <modifier>*</modifier></type><name>es</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_EVENT_SOURCE_REAL</name> <modifier>*</modifier></type><name>this</name> <init>= <expr><operator>(</operator><name>ALLEGRO_EVENT_SOURCE_REAL</name> <operator>*</operator><operator>)</operator><name>es</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>es</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>es</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_AL_MARK_MUTEX_UNINITED</name><argument_list>(<argument><expr><name><name>this</name><operator>-&gt;</operator><name>mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_mutex_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>this</name><operator>-&gt;</operator><name>mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_vector_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>this</name><operator>-&gt;</operator><name>queues</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>ALLEGRO_EVENT_QUEUE</name> <operator>*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>this</name><operator>-&gt;</operator><name>data</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></function>








<function><type><name>void</name></type> <name>_al_event_source_free</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_EVENT_SOURCE</name> <modifier>*</modifier></type><name>es</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_EVENT_SOURCE_REAL</name> <modifier>*</modifier></type><name>this</name> <init>= <expr><operator>(</operator><name>ALLEGRO_EVENT_SOURCE_REAL</name> <operator>*</operator><operator>)</operator><name>es</name></expr></init></decl>;</decl_stmt>


<while>while <condition>(<expr><operator>!</operator><call><name>_al_vector_is_empty</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>this</name><operator>-&gt;</operator><name>queues</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_EVENT_QUEUE</name> <modifier>*</modifier><modifier>*</modifier></type><name>slot</name> <init>= <expr><call><name>_al_vector_ref_back</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>this</name><operator>-&gt;</operator><name>queues</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>al_unregister_event_source</name><argument_list>(<argument><expr><operator>*</operator><name>slot</name></expr></argument>, <argument><expr><name>es</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></while>

<expr_stmt><expr><call><name>_al_vector_free</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>this</name><operator>-&gt;</operator><name>queues</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_mutex_destroy</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>this</name><operator>-&gt;</operator><name>mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>






<function><type><name>void</name></type> <name>_al_event_source_lock</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_EVENT_SOURCE</name> <modifier>*</modifier></type><name>es</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_EVENT_SOURCE_REAL</name> <modifier>*</modifier></type><name>this</name> <init>= <expr><operator>(</operator><name>ALLEGRO_EVENT_SOURCE_REAL</name> <operator>*</operator><operator>)</operator><name>es</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>_al_mutex_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>this</name><operator>-&gt;</operator><name>mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>






<function><type><name>void</name></type> <name>_al_event_source_unlock</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_EVENT_SOURCE</name> <modifier>*</modifier></type><name>es</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_EVENT_SOURCE_REAL</name> <modifier>*</modifier></type><name>this</name> <init>= <expr><operator>(</operator><name>ALLEGRO_EVENT_SOURCE_REAL</name> <operator>*</operator><operator>)</operator><name>es</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>_al_mutex_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>this</name><operator>-&gt;</operator><name>mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>









<function><type><name>void</name></type> <name>_al_event_source_on_registration_to_queue</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_EVENT_SOURCE</name> <modifier>*</modifier></type><name>es</name></decl></parameter>,
<parameter><decl><type><name>ALLEGRO_EVENT_QUEUE</name> <modifier>*</modifier></type><name>queue</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>_al_event_source_lock</name><argument_list>(<argument><expr><name>es</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_EVENT_SOURCE_REAL</name> <modifier>*</modifier></type><name>this</name> <init>= <expr><operator>(</operator><name>ALLEGRO_EVENT_SOURCE_REAL</name> <operator>*</operator><operator>)</operator><name>es</name></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><name>ALLEGRO_EVENT_QUEUE</name> <modifier>*</modifier><modifier>*</modifier></type><name>slot</name> <init>= <expr><call><name>_al_vector_alloc_back</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>this</name><operator>-&gt;</operator><name>queues</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><operator>*</operator><name>slot</name> <operator>=</operator> <name>queue</name></expr>;</expr_stmt>
</block_content>}</block>
<expr_stmt><expr><call><name>_al_event_source_unlock</name><argument_list>(<argument><expr><name>es</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>







<function><type><name>void</name></type> <name>_al_event_source_on_unregistration_from_queue</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_EVENT_SOURCE</name> <modifier>*</modifier></type><name>es</name></decl></parameter>,
<parameter><decl><type><name>ALLEGRO_EVENT_QUEUE</name> <modifier>*</modifier></type><name>queue</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>_al_event_source_lock</name><argument_list>(<argument><expr><name>es</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_EVENT_SOURCE_REAL</name> <modifier>*</modifier></type><name>this</name> <init>= <expr><operator>(</operator><name>ALLEGRO_EVENT_SOURCE_REAL</name> <operator>*</operator><operator>)</operator><name>es</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>_al_vector_find_and_delete</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>this</name><operator>-&gt;</operator><name>queues</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>queue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block>
<expr_stmt><expr><call><name>_al_event_source_unlock</name><argument_list>(<argument><expr><name>es</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>















<function><type><name>bool</name></type> <name>_al_event_source_needs_to_generate_event</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_EVENT_SOURCE</name> <modifier>*</modifier></type><name>es</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_EVENT_SOURCE_REAL</name> <modifier>*</modifier></type><name>this</name> <init>= <expr><operator>(</operator><name>ALLEGRO_EVENT_SOURCE_REAL</name> <operator>*</operator><operator>)</operator><name>es</name></expr></init></decl>;</decl_stmt>




<return>return <expr><operator>!</operator><call><name>_al_vector_is_empty</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>this</name><operator>-&gt;</operator><name>queues</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>













<function><type><name>void</name></type> <name>_al_event_source_emit_event</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_EVENT_SOURCE</name> <modifier>*</modifier></type><name>es</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_EVENT</name> <modifier>*</modifier></type><name>event</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_EVENT_SOURCE_REAL</name> <modifier>*</modifier></type><name>this</name> <init>= <expr><operator>(</operator><name>ALLEGRO_EVENT_SOURCE_REAL</name> <operator>*</operator><operator>)</operator><name>es</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>event</name><operator>-&gt;</operator><name>any</name><operator>.</operator><name>source</name></name> <operator>=</operator> <name>es</name></expr>;</expr_stmt>




<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>num_queues</name> <init>= <expr><call><name>_al_vector_size</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>this</name><operator>-&gt;</operator><name>queues</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_EVENT_QUEUE</name> <modifier>*</modifier><modifier>*</modifier></type><name>slot</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>num_queues</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>slot</name> <operator>=</operator> <call><name>_al_vector_ref</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>this</name><operator>-&gt;</operator><name>queues</name></name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_event_queue_push_event</name><argument_list>(<argument><expr><operator>*</operator><name>slot</name></expr></argument>, <argument><expr><name>event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block>
</block_content>}</block></function>





<function><type><name>void</name></type> <name>al_init_user_event_source</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_EVENT_SOURCE</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_event_source_init</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>





<function><type><name>void</name></type> <name>al_destroy_user_event_source</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_EVENT_SOURCE</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>src</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>_al_event_source_free</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>





<function><type><name>bool</name></type> <name>al_emit_user_event</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_EVENT_SOURCE</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ALLEGRO_EVENT</name> <modifier>*</modifier></type><name>event</name></decl></parameter>, <parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>dtor</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_USER_EVENT</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>num_queues</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>rc</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>dtor</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_USER_EVENT_DESCRIPTOR</name> <modifier>*</modifier></type><name>descr</name> <init>= <expr><call><name>al_malloc</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>descr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>descr</name><operator>-&gt;</operator><name>refcount</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>descr</name><operator>-&gt;</operator><name>dtor</name></name> <operator>=</operator> <name>dtor</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>-&gt;</operator><name>user</name><operator>.</operator><name>__internal__descr</name></name> <operator>=</operator> <name>descr</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name><name>event</name><operator>-&gt;</operator><name>user</name><operator>.</operator><name>__internal__descr</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>_al_event_source_lock</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_EVENT_SOURCE_REAL</name> <modifier>*</modifier></type><name>rsrc</name> <init>= <expr><operator>(</operator><name>ALLEGRO_EVENT_SOURCE_REAL</name> <operator>*</operator><operator>)</operator><name>src</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>num_queues</name> <operator>=</operator> <call><name>_al_vector_size</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>rsrc</name><operator>-&gt;</operator><name>queues</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>num_queues</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>event</name><operator>-&gt;</operator><name>any</name><operator>.</operator><name>timestamp</name></name> <operator>=</operator> <call><name>al_get_time</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_event_source_emit_event</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>rc</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name>rc</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block>
<expr_stmt><expr><call><name>_al_event_source_unlock</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>dtor</name> <operator>&amp;&amp;</operator> <operator>!</operator><name>rc</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>dtor</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>event</name><operator>-&gt;</operator><name>user</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_free</name><argument_list>(<argument><expr><name><name>event</name><operator>-&gt;</operator><name>user</name><operator>.</operator><name>__internal__descr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>rc</name></expr>;</return>
</block_content>}</block></function>





<function><type><name>void</name></type> <name>al_set_event_source_data</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_EVENT_SOURCE</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>data</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_EVENT_SOURCE_REAL</name> <modifier>*</modifier><specifier>const</specifier></type> <name>rsource</name> <init>= <expr><operator>(</operator><name>ALLEGRO_EVENT_SOURCE_REAL</name> <operator>*</operator><operator>)</operator><name>source</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>rsource</name><operator>-&gt;</operator><name>data</name></name> <operator>=</operator> <name>data</name></expr>;</expr_stmt>
</block_content>}</block></function>





<function><type><name>intptr_t</name></type> <name>al_get_event_source_data</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ALLEGRO_EVENT_SOURCE</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>ALLEGRO_EVENT_SOURCE_REAL</name> <modifier>*</modifier><specifier>const</specifier></type> <name>rsource</name> <init>= <expr><operator>(</operator><name>ALLEGRO_EVENT_SOURCE_REAL</name> <operator>*</operator><operator>)</operator><name>source</name></expr></init></decl>;</decl_stmt>
<return>return <expr><name><name>rsource</name><operator>-&gt;</operator><name>data</name></name></expr>;</return>
</block_content>}</block></function>










</unit>
