<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\src\sdl\sdl_touch.c">













<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_system.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/platform/allegro_internal_sdl.h"</cpp:file></cpp:include>

<macro><name>ALLEGRO_DEBUG_CHANNEL</name><argument_list>(<argument><literal type="string">"SDL"</literal></argument>)</argument_list></macro>

<typedef>typedef <type><struct>struct <name>ALLEGRO_TOUCH_INPUT_SDL</name>
<block>{
<decl_stmt><decl><type><name>ALLEGRO_TOUCH_INPUT</name></type> <name>touch_input</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_TOUCH_INPUT_STATE</name></type> <name>state</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>touches</name></decl>;</decl_stmt>
}</block></struct></type> <name>ALLEGRO_TOUCH_INPUT_SDL</name>;</typedef>

<decl_stmt><decl><type><specifier>static</specifier> <name>ALLEGRO_TOUCH_INPUT_DRIVER</name> <modifier>*</modifier></type><name>vt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>ALLEGRO_TOUCH_INPUT_SDL</name> <modifier>*</modifier></type><name>touch_input</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>ALLEGRO_MOUSE_STATE</name></type> <name>mouse_state</name></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>void</name></type> <name>generate_touch_input_event</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>timestamp</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dy</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>primary</name></decl></parameter>,
<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>disp</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_EVENT</name></type> <name>event</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>want_touch_event</name> <init>= <expr><call><name>_al_event_source_needs_to_generate_event</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>es</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>want_mouse_emulation_event</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>mouse_emulation_mode</name></name> <operator>==</operator> <name>ALLEGRO_MOUSE_EMULATION_5_0_x</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>want_mouse_emulation_event</name> <operator>=</operator> <call><name>_al_event_source_needs_to_generate_event</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>mouse_emulation_es</name></name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name>al_is_mouse_installed</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name>want_mouse_emulation_event</name> <operator>=</operator> <call><name>_al_event_source_needs_to_generate_event</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>mouse_emulation_es</name></name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name>primary</name> <operator>&amp;&amp;</operator> <call><name>al_is_mouse_installed</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>mouse_emulation_mode</name></name> <operator>==</operator> <name>ALLEGRO_MOUSE_EMULATION_NONE</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>want_mouse_emulation_event</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>mouse_emulation_mode</name></name> <operator>==</operator> <name>ALLEGRO_MOUSE_EMULATION_INCLUSIVE</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>want_touch_event</name> <operator>=</operator> <ternary><condition><expr><call><name>al_is_mouse_installed</name><argument_list>()</argument_list></call></expr> ?</condition><then> <expr><operator>(</operator><name>want_touch_event</name> <operator>&amp;&amp;</operator> <operator>!</operator><name>primary</name><operator>)</operator></expr> </then><else>: <expr><name>want_touch_event</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>mouse_emulation_mode</name></name> <operator>==</operator> <name>ALLEGRO_MOUSE_EMULATION_EXCLUSIVE</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>want_touch_event</name> <operator>=</operator> <ternary><condition><expr><call><name>al_is_mouse_installed</name><argument_list>()</argument_list></call></expr> ?</condition><then> <expr><name>false</name></expr> </then><else>: <expr><name>want_touch_event</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><operator>!</operator><name>want_touch_event</name> <operator>&amp;&amp;</operator> <operator>!</operator><name>want_mouse_emulation_event</name></expr>)</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>want_touch_event</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>touch</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>type</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>touch</name><operator>.</operator><name>display</name></name> <operator>=</operator> <operator>(</operator><name>ALLEGRO_DISPLAY</name><operator>*</operator><operator>)</operator><name>disp</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>touch</name><operator>.</operator><name>timestamp</name></name> <operator>=</operator> <name>timestamp</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>touch</name><operator>.</operator><name>id</name></name> <operator>=</operator> <name>id</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>touch</name><operator>.</operator><name>x</name></name> <operator>=</operator> <name>x</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>touch</name><operator>.</operator><name>y</name></name> <operator>=</operator> <name>y</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>touch</name><operator>.</operator><name>dx</name></name> <operator>=</operator> <name>dx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>touch</name><operator>.</operator><name>dy</name></name> <operator>=</operator> <name>dy</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>touch</name><operator>.</operator><name>primary</name></name> <operator>=</operator> <name>primary</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_event_source_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>es</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_event_source_emit_event</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>es</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_event_source_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>es</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>mouse_emulation_mode</name></name> <operator>!=</operator> <name>ALLEGRO_MOUSE_EMULATION_NONE</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>mouse_state</name><operator>.</operator><name>x</name></name> <operator>=</operator> <operator>(</operator><name>int</name><operator>)</operator><name>x</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>mouse_state</name><operator>.</operator><name>y</name></name> <operator>=</operator> <operator>(</operator><name>int</name><operator>)</operator><name>y</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>type</name> <operator>==</operator> <name>ALLEGRO_EVENT_TOUCH_BEGIN</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>mouse_state</name><operator>.</operator><name>buttons</name></name><operator>++</operator></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name>type</name> <operator>==</operator> <name>ALLEGRO_EVENT_TOUCH_END</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>mouse_state</name><operator>.</operator><name>buttons</name></name><operator>--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>mouse_state</name><operator>.</operator><name>pressure</name></name> <operator>=</operator> <ternary><condition><expr><name><name>mouse_state</name><operator>.</operator><name>buttons</name></name></expr> ?</condition><then> <expr><literal type="number">1.0</literal></expr> </then><else>: <expr><literal type="number">0.0</literal></expr></else></ternary></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>_al_event_source_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>mouse_emulation_es</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>want_mouse_emulation_event</name></expr>)</condition> <block>{<block_content>

<switch>switch <condition>(<expr><name>type</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>ALLEGRO_EVENT_TOUCH_BEGIN</name></expr>:</case> <expr_stmt><expr><name>type</name> <operator>=</operator> <name>ALLEGRO_EVENT_MOUSE_BUTTON_DOWN</name></expr>;</expr_stmt> <break>break;</break>
<case>case <expr><name>ALLEGRO_EVENT_TOUCH_CANCEL</name></expr>:</case>
<case>case <expr><name>ALLEGRO_EVENT_TOUCH_END</name></expr>:</case> <expr_stmt><expr><name>type</name> <operator>=</operator> <name>ALLEGRO_EVENT_MOUSE_BUTTON_UP</name></expr>;</expr_stmt> <break>break;</break>
<case>case <expr><name>ALLEGRO_EVENT_TOUCH_MOVE</name></expr>:</case> <expr_stmt><expr><name>type</name> <operator>=</operator> <name>ALLEGRO_EVENT_MOUSE_AXES</name></expr>;</expr_stmt> <break>break;</break>
</block_content>}</block></switch>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>mouse</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>type</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>mouse</name><operator>.</operator><name>timestamp</name></name> <operator>=</operator> <name>timestamp</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>mouse</name><operator>.</operator><name>display</name></name> <operator>=</operator> <operator>(</operator><name>ALLEGRO_DISPLAY</name><operator>*</operator><operator>)</operator><name>disp</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>mouse</name><operator>.</operator><name>x</name></name> <operator>=</operator> <operator>(</operator><name>int</name><operator>)</operator><name>x</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>mouse</name><operator>.</operator><name>y</name></name> <operator>=</operator> <operator>(</operator><name>int</name><operator>)</operator><name>y</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>mouse</name><operator>.</operator><name>dx</name></name> <operator>=</operator> <operator>(</operator><name>int</name><operator>)</operator><name>dx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>mouse</name><operator>.</operator><name>dy</name></name> <operator>=</operator> <operator>(</operator><name>int</name><operator>)</operator><name>dy</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>mouse</name><operator>.</operator><name>dz</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>mouse</name><operator>.</operator><name>dw</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>mouse_emulation_mode</name></name> <operator>!=</operator> <name>ALLEGRO_MOUSE_EMULATION_5_0_x</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>mouse</name><operator>.</operator><name>button</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>mouse</name><operator>.</operator><name>button</name></name> <operator>=</operator> <name>id</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>mouse</name><operator>.</operator><name>pressure</name></name> <operator>=</operator> <name><name>mouse_state</name><operator>.</operator><name>pressure</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>mouse_emulation_mode</name></name> <operator>!=</operator> <name>ALLEGRO_MOUSE_EMULATION_5_0_x</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>al_set_mouse_xy</name><argument_list>(<argument><expr><name><name>event</name><operator>.</operator><name>mouse</name><operator>.</operator><name>display</name></name></expr></argument>, <argument><expr><name><name>event</name><operator>.</operator><name>mouse</name><operator>.</operator><name>x</name></name></expr></argument>, <argument><expr><name><name>event</name><operator>.</operator><name>mouse</name><operator>.</operator><name>y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>_al_event_source_emit_event</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>mouse_emulation_es</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>_al_event_source_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>mouse_emulation_es</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>_al_sdl_touch_input_event</name><parameter_list>(<parameter><decl><type><name>SDL_Event</name> <modifier>*</modifier></type><name>e</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>touch_input</name></expr>)</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>ALLEGRO_EVENT_TYPE</name></type> <name>type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>d</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_SYSTEM</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><call><name>al_get_system_driver</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>_al_vector_size</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>s</name><operator>-&gt;</operator><name>displays</name></name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>v</name> <init>= <expr><operator>(</operator><name>void</name> <operator>*</operator><operator>*</operator><operator>)</operator><call><name>_al_vector_ref</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>s</name><operator>-&gt;</operator><name>displays</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>d</name> <operator>=</operator> <operator>*</operator><name>v</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>d</name></expr>)</condition> <block>{<block_content>
<return>return;</return>
</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>touchId</name> <init>= <expr><name><name>e</name><operator>-&gt;</operator><name>tfinger</name><operator>.</operator><name>fingerId</name></name></expr></init></decl>;</decl_stmt>






<expr_stmt><expr><name><name>touch_input</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>touches</name><index>[<expr><name>touchId</name></expr>]</index></name><operator>.</operator><name>x</name> <operator>=</operator> <name><name>e</name><operator>-&gt;</operator><name>tfinger</name><operator>.</operator><name>x</name></name> <operator>*</operator> <call><name>al_get_display_width</name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>touch_input</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>touches</name><index>[<expr><name>touchId</name></expr>]</index></name><operator>.</operator><name>y</name> <operator>=</operator> <name><name>e</name><operator>-&gt;</operator><name>tfinger</name><operator>.</operator><name>y</name></name> <operator>*</operator> <call><name>al_get_display_height</name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>touch_input</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>touches</name><index>[<expr><name>touchId</name></expr>]</index></name><operator>.</operator><name>dx</name> <operator>=</operator> <name><name>e</name><operator>-&gt;</operator><name>tfinger</name><operator>.</operator><name>dx</name></name> <operator>*</operator> <call><name>al_get_display_width</name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>touch_input</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>touches</name><index>[<expr><name>touchId</name></expr>]</index></name><operator>.</operator><name>dy</name> <operator>=</operator> <name><name>e</name><operator>-&gt;</operator><name>tfinger</name><operator>.</operator><name>dy</name></name> <operator>*</operator> <call><name>al_get_display_height</name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>e</name><operator>-&gt;</operator><name>type</name></name> <operator>==</operator> <name>SDL_FINGERDOWN</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>type</name> <operator>=</operator> <name>ALLEGRO_EVENT_TOUCH_BEGIN</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>touch_input</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>touches</name><index>[<expr><name>touchId</name></expr>]</index></name><operator>.</operator><name>id</name> <operator>=</operator> <name>touchId</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>touch_input</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>touches</name><index>[<expr><name>touchId</name></expr>]</index></name><operator>.</operator><name>primary</name> <operator>=</operator> <operator>(</operator><name><name>touch_input</name><operator>-&gt;</operator><name>touches</name></name> <operator>==</operator> <literal type="number">0</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>touch_input</name><operator>-&gt;</operator><name>touches</name></name><operator>++</operator></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>e</name><operator>-&gt;</operator><name>type</name></name> <operator>==</operator> <name>SDL_FINGERMOTION</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>type</name> <operator>=</operator> <name>ALLEGRO_EVENT_TOUCH_MOVE</name></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>e</name><operator>-&gt;</operator><name>type</name></name> <operator>==</operator> <name>SDL_FINGERUP</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>type</name> <operator>=</operator> <name>ALLEGRO_EVENT_TOUCH_END</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>touch_input</name><operator>-&gt;</operator><name>touches</name></name><operator>--</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>touch_input</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>touches</name><index>[<expr><name>touchId</name></expr>]</index></name><operator>.</operator><name>id</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<return>return;</return>
</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>generate_touch_input_event</name><argument_list>(<argument><expr><name>type</name></expr></argument>, <argument><expr><name><name>e</name><operator>-&gt;</operator><name>tfinger</name><operator>.</operator><name>timestamp</name></name> <operator>/</operator> <literal type="number">1000.0</literal></expr></argument>, <argument><expr><name>touchId</name></expr></argument>,
<argument><expr><name><name>touch_input</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>touches</name><index>[<expr><name>touchId</name></expr>]</index></name><operator>.</operator><name>x</name></expr></argument>,
<argument><expr><name><name>touch_input</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>touches</name><index>[<expr><name>touchId</name></expr>]</index></name><operator>.</operator><name>y</name></expr></argument>,
<argument><expr><name><name>touch_input</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>touches</name><index>[<expr><name>touchId</name></expr>]</index></name><operator>.</operator><name>dx</name></expr></argument>,
<argument><expr><name><name>touch_input</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>touches</name><index>[<expr><name>touchId</name></expr>]</index></name><operator>.</operator><name>dy</name></expr></argument>,
<argument><expr><name><name>touch_input</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>touches</name><index>[<expr><name>touchId</name></expr>]</index></name><operator>.</operator><name>primary</name></expr></argument>,
<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>sdl_init_touch_input</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name>touch_input</name> <operator>=</operator> <call><name>al_calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof <name/></sizeof>*<name>touch_input</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_event_source_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>es</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_event_source_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>mouse_emulation_es</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>mouse_emulation_mode</name></name> <operator>=</operator> <name>ALLEGRO_MOUSE_EMULATION_TRANSPARENT</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>ALLEGRO_TOUCH_INPUT_MAX_TOUCH_COUNT</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name><name>touch_input</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>touches</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>id</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></for>

<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>sdl_exit_touch_input</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>ALLEGRO_TOUCH_INPUT</name> <modifier>*</modifier></type><name>sdl_get_touch_input</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>&amp;</operator><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name></name></expr>;</return>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>void</name></type> <name>sdl_get_touch_input_state</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_TOUCH_INPUT_STATE</name> <modifier>*</modifier></type><name>ret_state</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>_al_event_source_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>es</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>ret_state</name> <operator>=</operator> <name><name>touch_input</name><operator>-&gt;</operator><name>state</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_event_source_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>es</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>touch_input_handle_cancel</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>timestamp</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>primary</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>disp</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_TOUCH_STATE</name><modifier>*</modifier></type> <name>state</name> <init>= <expr><name><name>touch_input</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>touches</name></name> <operator>+</operator> <name>index</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>primary</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>NULL</name> <operator>==</operator> <name>state</name></expr>)</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>_al_event_source_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>es</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>state</name><operator>-&gt;</operator><name>dx</name></name> <operator>=</operator> <name>x</name> <operator>-</operator> <name><name>state</name><operator>-&gt;</operator><name>x</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>state</name><operator>-&gt;</operator><name>dy</name></name> <operator>=</operator> <name>y</name> <operator>-</operator> <name><name>state</name><operator>-&gt;</operator><name>y</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>state</name><operator>-&gt;</operator><name>x</name></name> <operator>=</operator> <name>x</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>state</name><operator>-&gt;</operator><name>y</name></name> <operator>=</operator> <name>y</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_event_source_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>es</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>generate_touch_input_event</name><argument_list>(<argument><expr><name>ALLEGRO_EVENT_TOUCH_CANCEL</name></expr></argument>, <argument><expr><name>timestamp</name></expr></argument>,
<argument><expr><name><name>state</name><operator>-&gt;</operator><name>id</name></name></expr></argument>, <argument><expr><name><name>state</name><operator>-&gt;</operator><name>x</name></name></expr></argument>, <argument><expr><name><name>state</name><operator>-&gt;</operator><name>y</name></name></expr></argument>, <argument><expr><name><name>state</name><operator>-&gt;</operator><name>dx</name></name></expr></argument>, <argument><expr><name><name>state</name><operator>-&gt;</operator><name>dy</name></name></expr></argument>, <argument><expr><name><name>state</name><operator>-&gt;</operator><name>primary</name></name></expr></argument>, <argument><expr><name>disp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_event_source_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>es</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>state</name><operator>-&gt;</operator><name>id</name></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_event_source_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>es</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>sdl_set_mouse_emulation_mode</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>mouse_emulation_mode</name></name> <operator>!=</operator> <name>mode</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>ALLEGRO_TOUCH_INPUT_MAX_TOUCH_COUNT</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_TOUCH_STATE</name><modifier>*</modifier></type> <name>touch</name> <init>= <expr><name><name>touch_input</name><operator>-&gt;</operator><name>state</name><operator>.</operator><name>touches</name></name> <operator>+</operator> <name>i</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>touch</name><operator>-&gt;</operator><name>id</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>touch_input_handle_cancel</name><argument_list>(<argument><expr><name>i</name></expr></argument>, <argument><expr><call><name>al_get_time</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name><name>touch</name><operator>-&gt;</operator><name>x</name></name></expr></argument>, <argument><expr><name><name>touch</name><operator>-&gt;</operator><name>y</name></name></expr></argument>, <argument><expr><name><name>touch</name><operator>-&gt;</operator><name>primary</name></name></expr></argument>, <argument><expr><name><name>touch</name><operator>-&gt;</operator><name>display</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>

<expr_stmt><expr><name><name>touch_input</name><operator>-&gt;</operator><name>touch_input</name><operator>.</operator><name>mouse_emulation_mode</name></name> <operator>=</operator> <name>mode</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>ALLEGRO_TOUCH_INPUT_DRIVER</name> <modifier>*</modifier></type><name>_al_sdl_touch_input_driver</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>vt</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>vt</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>vt</name> <operator>=</operator> <call><name>al_calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof <name/></sizeof>*<name>vt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vt</name><operator>-&gt;</operator><name>init_touch_input</name></name> <operator>=</operator> <name>sdl_init_touch_input</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vt</name><operator>-&gt;</operator><name>exit_touch_input</name></name> <operator>=</operator> <name>sdl_exit_touch_input</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vt</name><operator>-&gt;</operator><name>get_touch_input</name></name> <operator>=</operator> <name>sdl_get_touch_input</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vt</name><operator>-&gt;</operator><name>get_touch_input_state</name></name> <operator>=</operator> <name>sdl_get_touch_input_state</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vt</name><operator>-&gt;</operator><name>set_mouse_emulation_mode</name></name> <operator>=</operator> <name>sdl_set_mouse_emulation_mode</name></expr>;</expr_stmt>

<return>return <expr><name>vt</name></expr>;</return>
</block_content>}</block></function>
</unit>
