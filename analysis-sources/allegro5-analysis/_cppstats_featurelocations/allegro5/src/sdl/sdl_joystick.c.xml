<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\src\sdl\sdl_joystick.c">













<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_system.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/platform/allegro_internal_sdl.h"</cpp:file></cpp:include>

<macro><name>ALLEGRO_DEBUG_CHANNEL</name><argument_list>(<argument><literal type="string">"SDL"</literal></argument>)</argument_list></macro>

<typedef>typedef <type><struct>struct <name>ALLEGRO_JOYSTICK_SDL</name>
<block>{
<decl_stmt><decl><type><name>int</name></type> <name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_JOYSTICK</name></type> <name>allegro</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SDL_Joystick</name> <modifier>*</modifier></type><name>sdl</name></decl>;</decl_stmt>
}</block></struct></type> <name>ALLEGRO_JOYSTICK_SDL</name>;</typedef>

<decl_stmt><decl><type><specifier>static</specifier> <name>ALLEGRO_JOYSTICK_DRIVER</name> <modifier>*</modifier></type><name>vt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>ALLEGRO_JOYSTICK_SDL</name> <modifier>*</modifier></type><name>joysticks</name></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>int</name></type> <name>get_id</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>allegro</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>count</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>&amp;</operator><name><name>joysticks</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>allegro</name> <operator>==</operator> <name>allegro</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>i</name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></for>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>SDL_Joystick</name> <modifier>*</modifier></type><name>get_sdl</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>allegro</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>id</name> <init>= <expr><call><name>get_id</name><argument_list>(<argument><expr><name>allegro</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>id</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
<return>return <expr><name><name>joysticks</name><index>[<expr><name>id</name></expr>]</index></name><operator>.</operator><name>sdl</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>_al_sdl_joystick_event</name><parameter_list>(<parameter><decl><type><name>SDL_Event</name> <modifier>*</modifier></type><name>e</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>count</name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>ALLEGRO_EVENT</name></type> <name>event</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><operator>&amp;</operator><name>event</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof <name>event</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>timestamp</name></name> <operator>=</operator> <call><name>al_get_time</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>e</name><operator>-&gt;</operator><name>type</name></name> <operator>==</operator> <name>SDL_JOYAXISMOTION</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>ALLEGRO_EVENT_JOYSTICK_AXIS</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>id</name></name> <operator>=</operator> <operator>&amp;</operator><name><name>joysticks</name><index>[<expr><name><name>e</name><operator>-&gt;</operator><name>jaxis</name><operator>.</operator><name>which</name></name></expr>]</index></name><operator>.</operator><name>allegro</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>stick</name></name> <operator>=</operator> <name><name>e</name><operator>-&gt;</operator><name>jaxis</name><operator>.</operator><name>axis</name></name> <operator>/</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>axis</name></name> <operator>=</operator> <name><name>e</name><operator>-&gt;</operator><name>jaxis</name><operator>.</operator><name>axis</name></name> <operator>%</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>pos</name></name> <operator>=</operator> <name><name>e</name><operator>-&gt;</operator><name>jaxis</name><operator>.</operator><name>value</name></name> <operator>/</operator> <literal type="number">32768.0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>button</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>e</name><operator>-&gt;</operator><name>type</name></name> <operator>==</operator> <name>SDL_JOYBUTTONDOWN</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>ALLEGRO_EVENT_JOYSTICK_BUTTON_DOWN</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>id</name></name> <operator>=</operator> <operator>&amp;</operator><name><name>joysticks</name><index>[<expr><name><name>e</name><operator>-&gt;</operator><name>jbutton</name><operator>.</operator><name>which</name></name></expr>]</index></name><operator>.</operator><name>allegro</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>stick</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>axis</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>pos</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>button</name></name> <operator>=</operator> <name><name>e</name><operator>-&gt;</operator><name>jbutton</name><operator>.</operator><name>button</name></name></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>e</name><operator>-&gt;</operator><name>type</name></name> <operator>==</operator> <name>SDL_JOYBUTTONUP</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>ALLEGRO_EVENT_JOYSTICK_BUTTON_UP</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>id</name></name> <operator>=</operator> <operator>&amp;</operator><name><name>joysticks</name><index>[<expr><name><name>e</name><operator>-&gt;</operator><name>jbutton</name><operator>.</operator><name>which</name></name></expr>]</index></name><operator>.</operator><name>allegro</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>stick</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>axis</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>pos</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>button</name></name> <operator>=</operator> <name><name>e</name><operator>-&gt;</operator><name>jbutton</name><operator>.</operator><name>button</name></name></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>e</name><operator>-&gt;</operator><name>type</name></name> <operator>==</operator> <name>SDL_JOYDEVICEADDED</name> <operator>||</operator> <name><name>e</name><operator>-&gt;</operator><name>type</name></name> <operator>==</operator> <name>SDL_JOYDEVICEREMOVED</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>ALLEGRO_EVENT_JOYSTICK_CONFIGURATION</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<return>return;</return>
</block_content>}</block></else></if_stmt>

<decl_stmt><decl><type><name>ALLEGRO_EVENT_SOURCE</name> <modifier>*</modifier></type><name>es</name> <init>= <expr><call><name>al_get_joystick_event_source</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>_al_event_source_lock</name><argument_list>(<argument><expr><name>es</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_event_source_emit_event</name><argument_list>(<argument><expr><name>es</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_event_source_unlock</name><argument_list>(<argument><expr><name>es</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>sdl_init_joystick</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name>count</name> <operator>=</operator> <call><name>SDL_NumJoysticks</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>joysticks</name> <operator>=</operator> <call><name>calloc</name><argument_list>(<argument><expr><name>count</name></expr></argument>, <argument><expr><sizeof>sizeof <name/></sizeof>* <name>joysticks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>count</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name><name>joysticks</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>sdl</name> <operator>=</operator> <call><name>SDL_JoystickOpen</name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>_AL_JOYSTICK_INFO</name> <modifier>*</modifier></type><name>info</name> <init>= <expr><operator>&amp;</operator><name><name>joysticks</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name><name>allegro</name><operator>.</operator><name>info</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>an</name> <init>= <expr><call><name>SDL_JoystickNumAxes</name><argument_list>(<argument><expr><name><name>joysticks</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>sdl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>a</name></decl>;</decl_stmt>
<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>num_sticks</name></name> <operator>=</operator> <name>an</name> <operator>/</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>a</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>a</name> <operator>&lt;</operator> <name>an</name></expr>;</condition> <incr><expr><name>a</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>stick</name><index>[<expr><name>a</name> <operator>/</operator> <literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>num_axes</name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>stick</name><index>[<expr><name>a</name> <operator>/</operator> <literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"stick"</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>stick</name><index>[<expr><name>a</name> <operator>/</operator> <literal type="number">2</literal></expr>]</index></name><operator>.</operator><name><name>axis</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"X"</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>stick</name><index>[<expr><name>a</name> <operator>/</operator> <literal type="number">2</literal></expr>]</index></name><operator>.</operator><name><name>axis</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"Y"</literal></expr>;</expr_stmt>
</block_content>}</block></for>

<decl_stmt><decl><type><name>int</name></type> <name>bn</name> <init>= <expr><call><name>SDL_JoystickNumButtons</name><argument_list>(<argument><expr><name><name>joysticks</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>sdl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>num_buttons</name></name> <operator>=</operator> <name>bn</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>b</name></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>b</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>b</name> <operator>&lt;</operator> <name>bn</name></expr>;</condition> <incr><expr><name>b</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>button</name><index>[<expr><name>b</name></expr>]</index></name><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"button"</literal></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></for>
<expr_stmt><expr><call><name>SDL_JoystickEventState</name><argument_list>(<argument><expr><name>SDL_ENABLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>sdl_exit_joystick</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>count</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>SDL_JoystickClose</name><argument_list>(<argument><expr><name><name>joysticks</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>sdl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><name>count</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>joysticks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>sdl_reconfigure_joysticks</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>sdl_exit_joystick</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>sdl_init_joystick</name><argument_list>()</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>sdl_num_joysticks</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name>count</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>sdl_get_joystick</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>joyn</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>&amp;</operator><name><name>joysticks</name><index>[<expr><name>joyn</name></expr>]</index></name><operator>.</operator><name>allegro</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>sdl_release_joystick</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>joy</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>joy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>sdl_get_joystick_state</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>joy</name></decl></parameter>,
<parameter><decl><type><name>ALLEGRO_JOYSTICK_STATE</name> <modifier>*</modifier></type><name>ret_state</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_SYSTEM_INTERFACE</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><call><name>_al_sdl_system_driver</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>heartbeat</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>SDL_Joystick</name> <modifier>*</modifier></type><name>sdl</name> <init>= <expr><call><name>get_sdl</name><argument_list>(<argument><expr><name>joy</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>an</name> <init>= <expr><call><name>SDL_JoystickNumAxes</name><argument_list>(<argument><expr><name>sdl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>an</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name><name>ret_state</name><operator>-&gt;</operator><name>stick</name><index>[<expr><name>i</name> <operator>/</operator> <literal type="number">2</literal></expr>]</index></name><operator>.</operator><name><name>axis</name><index>[<expr><name>i</name> <operator>%</operator> <literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <call><name>SDL_JoystickGetAxis</name><argument_list>(<argument><expr><name>sdl</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call> <operator>/</operator> <literal type="number">32768.0</literal></expr>;</expr_stmt>
</block_content>}</block></for>
<decl_stmt><decl><type><name>int</name></type> <name>bn</name> <init>= <expr><call><name>SDL_JoystickNumButtons</name><argument_list>(<argument><expr><name>sdl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>bn</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name><name>ret_state</name><operator>-&gt;</operator><name>button</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>SDL_JoystickGetButton</name><argument_list>(<argument><expr><name>sdl</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call> <operator>*</operator> <literal type="number">32767</literal></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>sdl_get_name</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>joy</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>SDL_Joystick</name> <modifier>*</modifier></type><name>sdl</name> <init>= <expr><call><name>get_sdl</name><argument_list>(<argument><expr><name>joy</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<return>return <expr><call><name>SDL_JoystickName</name><argument_list>(<argument><expr><name>sdl</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>sdl_get_active</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>joy</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>SDL_Joystick</name> <modifier>*</modifier></type><name>sdl</name> <init>= <expr><call><name>get_sdl</name><argument_list>(<argument><expr><name>joy</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<return>return <expr><call><name>SDL_JoystickGetAttached</name><argument_list>(<argument><expr><name>sdl</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>ALLEGRO_JOYSTICK_DRIVER</name> <modifier>*</modifier></type><name>_al_sdl_joystick_driver</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>vt</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>vt</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>vt</name> <operator>=</operator> <call><name>al_calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof <name/></sizeof>*<name>vt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vt</name><operator>-&gt;</operator><name>joydrv_id</name></name> <operator>=</operator> <call><name>AL_ID</name><argument_list>(<argument><expr><literal type="char">'S'</literal></expr></argument>,<argument><expr><literal type="char">'D'</literal></expr></argument>,<argument><expr><literal type="char">'L'</literal></expr></argument>,<argument><expr><literal type="char">'2'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vt</name><operator>-&gt;</operator><name>joydrv_name</name></name> <operator>=</operator> <literal type="string">"SDL2 Joystick"</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vt</name><operator>-&gt;</operator><name>joydrv_desc</name></name> <operator>=</operator> <literal type="string">"SDL2 Joystick"</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vt</name><operator>-&gt;</operator><name>joydrv_ascii_name</name></name> <operator>=</operator> <literal type="string">"SDL2 Joystick"</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vt</name><operator>-&gt;</operator><name>init_joystick</name></name> <operator>=</operator> <name>sdl_init_joystick</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vt</name><operator>-&gt;</operator><name>exit_joystick</name></name> <operator>=</operator> <name>sdl_exit_joystick</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vt</name><operator>-&gt;</operator><name>reconfigure_joysticks</name></name> <operator>=</operator> <name>sdl_reconfigure_joysticks</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vt</name><operator>-&gt;</operator><name>num_joysticks</name></name> <operator>=</operator> <name>sdl_num_joysticks</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vt</name><operator>-&gt;</operator><name>get_joystick</name></name> <operator>=</operator> <name>sdl_get_joystick</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vt</name><operator>-&gt;</operator><name>release_joystick</name></name> <operator>=</operator> <name>sdl_release_joystick</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vt</name><operator>-&gt;</operator><name>get_joystick_state</name></name> <operator>=</operator> <name>sdl_get_joystick_state</name></expr>;</expr_stmt><empty_stmt>;</empty_stmt>
<expr_stmt><expr><name><name>vt</name><operator>-&gt;</operator><name>get_name</name></name> <operator>=</operator> <name>sdl_get_name</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>vt</name><operator>-&gt;</operator><name>get_active</name></name> <operator>=</operator> <name>sdl_get_active</name></expr>;</expr_stmt>

<return>return <expr><name>vt</name></expr>;</return>
</block_content>}</block></function>
</unit>
