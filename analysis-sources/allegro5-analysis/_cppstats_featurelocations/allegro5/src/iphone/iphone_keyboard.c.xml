<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\src\iphone\iphone_keyboard.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_keyboard.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_events.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <name>ALLEGRO_KEYBOARD</name></type> <name>the_keyboard</name></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>iphone_init_keyboard</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><operator>&amp;</operator><name>the_keyboard</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof <name>the_keyboard</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_event_source_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>the_keyboard</name><operator>.</operator><name>es</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>iphone_exit_keyboard</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>_al_event_source_free</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>the_keyboard</name><operator>.</operator><name>es</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>ALLEGRO_KEYBOARD</name> <modifier>*</modifier></type><name>iphone_get_keyboard</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>&amp;</operator><name>the_keyboard</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>iphone_set_keyboard_leds</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>leds</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>leds</name></expr>;</expr_stmt>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>char</name> <specifier>const</specifier> <modifier>*</modifier></type><name>iphone_keycode_to_name</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>keycode</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>keycode</name></expr>;</expr_stmt>
<return>return <expr><literal type="string">"none"</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>iphone_get_keyboard_state</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_KEYBOARD_STATE</name> <modifier>*</modifier></type><name>ret_state</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>ret_state</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof <name/></sizeof>*<name>ret_state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>iphone_clear_keyboard_state</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return;</return>
</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <name>ALLEGRO_KEYBOARD_DRIVER</name></type> <name>iphone_keyboard_driver</name> <init>= <expr><block>{
<expr><call><name>AL_ID</name><argument_list>(<argument><expr><literal type="char">'I'</literal></expr></argument>,<argument><expr><literal type="char">'P'</literal></expr></argument>,<argument><expr><literal type="char">'H'</literal></expr></argument>,<argument><expr><literal type="char">'O'</literal></expr></argument>)</argument_list></call></expr>,
<expr><literal type="string">""</literal></expr>,
<expr><literal type="string">""</literal></expr>,
<expr><literal type="string">"iphone keyboard"</literal></expr>,
<expr><name>iphone_init_keyboard</name></expr>,
<expr><name>iphone_exit_keyboard</name></expr>,
<expr><name>iphone_get_keyboard</name></expr>,
<expr><name>iphone_set_keyboard_leds</name></expr>,
<expr><name>iphone_keycode_to_name</name></expr>,
<expr><name>iphone_get_keyboard_state</name></expr>,
<expr><name>iphone_clear_keyboard_state</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<function><type><name>ALLEGRO_KEYBOARD_DRIVER</name> <modifier>*</modifier></type><name>_al_get_iphone_keyboard_driver</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>&amp;</operator><name>iphone_keyboard_driver</name></expr>;</return>
</block_content>}</block></function>
</unit>
