<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\src\joynu.c">




















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_NO_COMPATIBILITY</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_events.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_exitfunc.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_joystick.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_system.h"</cpp:file></cpp:include>




<decl_stmt><decl><type><specifier>static</specifier> <name>ALLEGRO_JOYSTICK_DRIVER</name> <modifier>*</modifier></type><name>new_joystick_driver</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>ALLEGRO_EVENT_SOURCE</name></type> <name>es</name></decl>;</decl_stmt>




<function><type><name>bool</name></type> <name>al_install_joystick</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_SYSTEM</name> <modifier>*</modifier></type><name>sysdrv</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_JOYSTICK_DRIVER</name> <modifier>*</modifier></type><name>joydrv</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>new_joystick_driver</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>true</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>sysdrv</name> <operator>=</operator> <call><name>al_get_system_driver</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>sysdrv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><name><name>sysdrv</name><operator>-&gt;</operator><name>vt</name><operator>-&gt;</operator><name>get_joystick_driver</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>joydrv</name> <operator>=</operator> <call><name><name>sysdrv</name><operator>-&gt;</operator><name>vt</name><operator>-&gt;</operator><name>get_joystick_driver</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>



<expr_stmt><expr><call><name>_al_event_source_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name>es</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>joydrv</name> <operator>&amp;&amp;</operator> <call><name><name>joydrv</name><operator>-&gt;</operator><name>init_joystick</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>new_joystick_driver</name> <operator>=</operator> <name>joydrv</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_add_exit_func</name><argument_list>(<argument><expr><name>al_uninstall_joystick</name></expr></argument>, <argument><expr><literal type="string">"al_uninstall_joystick"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>_al_event_source_free</name><argument_list>(<argument><expr><operator>&amp;</operator><name>es</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></function>





<function><type><name>void</name></type> <name>al_uninstall_joystick</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>new_joystick_driver</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name><name>new_joystick_driver</name><operator>-&gt;</operator><name>exit_joystick</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_event_source_free</name><argument_list>(<argument><expr><operator>&amp;</operator><name>es</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>new_joystick_driver</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>





<function><type><name>bool</name></type> <name>al_is_joystick_installed</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><ternary><condition><expr><operator>(</operator><name>new_joystick_driver</name><operator>)</operator></expr> ?</condition><then> <expr><name>true</name></expr> </then><else>: <expr><name>false</name></expr></else></ternary></expr>;</return>
</block_content>}</block></function>





<function><type><name>bool</name></type> <name>al_reconfigure_joysticks</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>new_joystick_driver</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>new_joystick_driver</name><operator>-&gt;</operator><name>reconfigure_joysticks</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name><name>new_joystick_driver</name><operator>-&gt;</operator><name>num_joysticks</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<return>return <expr><call><name><name>new_joystick_driver</name><operator>-&gt;</operator><name>reconfigure_joysticks</name></name><argument_list>()</argument_list></call></expr>;</return>
</block_content>}</block></function>





<function><type><name>ALLEGRO_EVENT_SOURCE</name> <modifier>*</modifier></type><name>al_get_joystick_event_source</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>new_joystick_driver</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
<return>return <expr><operator>&amp;</operator><name>es</name></expr>;</return>
</block_content>}</block></function>



<function><type><name>void</name></type> <name>_al_generate_joystick_event</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_EVENT</name> <modifier>*</modifier></type><name>event</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>new_joystick_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_event_source_lock</name><argument_list>(<argument><expr><operator>&amp;</operator><name>es</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>_al_event_source_needs_to_generate_event</name><argument_list>(<argument><expr><operator>&amp;</operator><name>es</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>_al_event_source_emit_event</name><argument_list>(<argument><expr><operator>&amp;</operator><name>es</name></expr></argument>, <argument><expr><name>event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>_al_event_source_unlock</name><argument_list>(<argument><expr><operator>&amp;</operator><name>es</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>





<function><type><name>int</name></type> <name>al_get_num_joysticks</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>new_joystick_driver</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name><name>new_joystick_driver</name><operator>-&gt;</operator><name>num_joysticks</name></name><argument_list>()</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>





<function><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type> <name>al_get_joystick</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>num</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>new_joystick_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>num</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>new_joystick_driver</name><operator>-&gt;</operator><name>get_joystick</name></name><argument_list>(<argument><expr><name>num</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>





<function><type><name>void</name></type> <name>al_release_joystick</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>joy</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>new_joystick_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>joy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name><name>new_joystick_driver</name><operator>-&gt;</operator><name>release_joystick</name></name><argument_list>(<argument><expr><name>joy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>





<function><type><name>bool</name></type> <name>al_get_joystick_active</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>joy</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>joy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>new_joystick_driver</name><operator>-&gt;</operator><name>get_active</name></name><argument_list>(<argument><expr><name>joy</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>





<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>al_get_joystick_name</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>joy</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>joy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>new_joystick_driver</name><operator>-&gt;</operator><name>get_name</name></name><argument_list>(<argument><expr><name>joy</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>





<function><type><name>int</name></type> <name>al_get_joystick_num_sticks</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>joy</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>joy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>num_sticks</name></name></expr>;</return>
</block_content>}</block></function>





<function><type><name>int</name></type> <name>al_get_joystick_stick_flags</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>joy</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stick</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>joy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>stick</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>stick</name> <operator>&lt;</operator> <name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>num_sticks</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>stick</name><index>[<expr><name>stick</name></expr>]</index></name><operator>.</operator><name>flags</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>





<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>al_get_joystick_stick_name</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>joy</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stick</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>joy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>stick</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>stick</name> <operator>&lt;</operator> <name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>num_sticks</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>stick</name><index>[<expr><name>stick</name></expr>]</index></name><operator>.</operator><name>name</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>





<function><type><name>int</name></type> <name>al_get_joystick_num_axes</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>joy</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stick</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>joy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>stick</name> <operator>&lt;</operator> <name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>num_sticks</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>stick</name><index>[<expr><name>stick</name></expr>]</index></name><operator>.</operator><name>num_axes</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>





<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>al_get_joystick_axis_name</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>joy</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stick</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>axis</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>joy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>stick</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>axis</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>stick</name> <operator>&lt;</operator> <name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>num_sticks</name></name></expr>)</condition><block type="pseudo"><block_content>
<if_stmt><if>if <condition>(<expr><name>axis</name> <operator>&lt;</operator> <name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>stick</name><index>[<expr><name>stick</name></expr>]</index></name><operator>.</operator><name>num_axes</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>stick</name><index>[<expr><name>stick</name></expr>]</index></name><operator>.</operator><name><name>axis</name><index>[<expr><name>axis</name></expr>]</index></name><operator>.</operator><name>name</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>





<function><type><name>int</name></type> <name>al_get_joystick_num_buttons</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>joy</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>joy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>num_buttons</name></name></expr>;</return>
</block_content>}</block></function>





<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>al_get_joystick_button_name</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>joy</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>button</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>joy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>button</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>button</name> <operator>&lt;</operator> <name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>num_buttons</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>button</name><index>[<expr><name>button</name></expr>]</index></name><operator>.</operator><name>name</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>





<function><type><name>void</name></type> <name>al_get_joystick_state</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>joy</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_JOYSTICK_STATE</name> <modifier>*</modifier></type><name>ret_state</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>new_joystick_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>joy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>ret_state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name><name>new_joystick_driver</name><operator>-&gt;</operator><name>get_joystick_state</name></name><argument_list>(<argument><expr><name>joy</name></expr></argument>, <argument><expr><name>ret_state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>








</unit>
