<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\src\display_settings.c">


















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_display.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;math.h&gt;</cpp:file></cpp:include>

<macro><name>ALLEGRO_DEBUG_CHANNEL</name><argument_list>(<argument><literal type="string">"display"</literal></argument>)</argument_list></macro>




<function><type><name>void</name></type> <name>al_set_new_display_option</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>option</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>value</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>importance</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_EXTRA_DISPLAY_SETTINGS</name> <modifier>*</modifier></type><name>extras</name></decl>;</decl_stmt>
<expr_stmt><expr><name>extras</name> <operator>=</operator> <call><name>_al_get_new_display_settings</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<switch>switch <condition>(<expr><name>importance</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>ALLEGRO_REQUIRE</name></expr>:</case>
<expr_stmt><expr><name><name>extras</name><operator>-&gt;</operator><name>required</name></name> <operator>|=</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <name>option</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>extras</name><operator>-&gt;</operator><name>suggested</name></name> <operator>&amp;=</operator> <operator>~</operator><operator>(</operator><operator>(</operator><name>int64_t</name><operator>)</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <name>option</name><operator>)</operator></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ALLEGRO_SUGGEST</name></expr>:</case>
<expr_stmt><expr><name><name>extras</name><operator>-&gt;</operator><name>suggested</name></name> <operator>|=</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <name>option</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>extras</name><operator>-&gt;</operator><name>required</name></name> <operator>&amp;=</operator> <operator>~</operator><operator>(</operator><operator>(</operator><name>int64_t</name><operator>)</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <name>option</name><operator>)</operator></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ALLEGRO_DONTCARE</name></expr>:</case>
<expr_stmt><expr><name><name>extras</name><operator>-&gt;</operator><name>required</name></name> <operator>&amp;=</operator> <operator>~</operator><operator>(</operator><operator>(</operator><name>int64_t</name><operator>)</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <name>option</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>extras</name><operator>-&gt;</operator><name>suggested</name></name> <operator>&amp;=</operator> <operator>~</operator><operator>(</operator><operator>(</operator><name>int64_t</name><operator>)</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <name>option</name><operator>)</operator></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>
<expr_stmt><expr><name><name>extras</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>option</name></expr>]</index></name> <operator>=</operator> <name>value</name></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>int</name></type> <name>_al_get_suggested_display_option</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>d</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>option</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>default_value</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_EXTRA_DISPLAY_SETTINGS</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><operator>&amp;</operator><name><name>d</name><operator>-&gt;</operator><name>extra_settings</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>flags</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>required</name></name> <operator>|</operator> <name><name>s</name><operator>-&gt;</operator><name>suggested</name></name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <operator>(</operator><operator>(</operator><name>uint64_t</name><operator>)</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <name>option</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name><name>s</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>option</name></expr>]</index></name></expr>;</return></block_content></block></if></if_stmt>
<return>return <expr><name>default_value</name></expr>;</return>
</block_content>}</block></function>




<function><type><name>int</name></type> <name>al_get_new_display_option</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>option</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>importance</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_EXTRA_DISPLAY_SETTINGS</name> <modifier>*</modifier></type><name>extras</name></decl>;</decl_stmt>
<expr_stmt><expr><name>extras</name> <operator>=</operator> <call><name>_al_get_new_display_settings</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>extras</name><operator>-&gt;</operator><name>required</name></name> <operator>&amp;</operator> <operator>(</operator><operator>(</operator><name>int64_t</name><operator>)</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <name>option</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>importance</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><operator>*</operator><name>importance</name> <operator>=</operator> <name>ALLEGRO_REQUIRE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<return>return <expr><name><name>extras</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>option</name></expr>]</index></name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>extras</name><operator>-&gt;</operator><name>suggested</name></name> <operator>&amp;</operator> <operator>(</operator><operator>(</operator><name>int64_t</name><operator>)</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <name>option</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>importance</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><operator>*</operator><name>importance</name> <operator>=</operator> <name>ALLEGRO_SUGGEST</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<return>return <expr><name><name>extras</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>option</name></expr>]</index></name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>importance</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><operator>*</operator><name>importance</name> <operator>=</operator> <name>ALLEGRO_DONTCARE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>



<function><type><name>void</name></type> <name>al_set_display_option</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>option</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>value</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_EXTRA_DISPLAY_SETTINGS</name> <modifier>*</modifier></type><name>extras</name></decl>;</decl_stmt>
<expr_stmt><expr><name>extras</name> <operator>=</operator> <operator>&amp;</operator><name><name>display</name><operator>-&gt;</operator><name>extra_settings</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>extras</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>option</name></expr>]</index></name> <operator>=</operator> <name>value</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>display</name><operator>-&gt;</operator><name>vt</name><operator>-&gt;</operator><name>set_display_option</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name><name>display</name><operator>-&gt;</operator><name>vt</name><operator>-&gt;</operator><name>set_display_option</name></name><argument_list>(<argument><expr><name>display</name></expr></argument>, <argument><expr><name>option</name></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>



<function><type><name>int</name></type> <name>al_get_display_option</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>option</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_EXTRA_DISPLAY_SETTINGS</name> <modifier>*</modifier></type><name>extras</name></decl>;</decl_stmt>
<expr_stmt><expr><name>extras</name> <operator>=</operator> <operator>&amp;</operator><name><name>display</name><operator>-&gt;</operator><name>extra_settings</name></name></expr>;</expr_stmt>
<return>return <expr><name><name>extras</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>option</name></expr>]</index></name></expr>;</return>
</block_content>}</block></function>




<function><type><name>void</name></type> <name>al_reset_new_display_options</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_EXTRA_DISPLAY_SETTINGS</name> <modifier>*</modifier></type><name>extras</name></decl>;</decl_stmt>
<expr_stmt><expr><name>extras</name> <operator>=</operator> <call><name>_al_get_new_display_settings</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_fill_display_settings</name><argument_list>(<argument><expr><name>extras</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>req</name></cpp:macro> <cpp:value>ref-&gt;required</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>sug</name></cpp:macro> <cpp:value>ref-&gt;suggested</cpp:value></cpp:define>





<function><type><name>void</name></type> <name>_al_fill_display_settings</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_EXTRA_DISPLAY_SETTINGS</name> <modifier>*</modifier></type><name>ref</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>all_components</name> <init>= <expr><operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_RED_SIZE</name><operator>)</operator>
<operator>|</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_GREEN_SIZE</name><operator>)</operator>
<operator>|</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_BLUE_SIZE</name><operator>)</operator>
<operator>|</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_ALPHA_SIZE</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>ref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><operator>(</operator><operator>(</operator><operator>(</operator><name>req</name> <operator>|</operator> <name>sug</name><operator>)</operator> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_COLOR_SIZE</name><operator>)</operator><operator>)</operator> <operator>==</operator> <literal type="number">0</literal><operator>)</operator>
<operator>&amp;&amp;</operator> <operator>(</operator><operator>(</operator><operator>(</operator><name>req</name> <operator>|</operator> <name>sug</name><operator>)</operator> <operator>&amp;</operator> <name>all_components</name><operator>)</operator> <operator>==</operator> <name>all_components</name><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_COLOR_SIZE</name></expr>]</index></name> <operator>=</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SIZE</name></expr>]</index></name>
<operator>+</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SIZE</name></expr>]</index></name>
<operator>+</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SIZE</name></expr>]</index></name>
<operator>+</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SIZE</name></expr>]</index></name></expr>;</expr_stmt>


<expr_stmt><expr><name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_COLOR_SIZE</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_COLOR_SIZE</name></expr>]</index></name> <operator>+</operator> <literal type="number">7</literal><operator>)</operator> <operator>/</operator> <literal type="number">8</literal></expr>;</expr_stmt>
</block_content>}</block></if>

<if type="elseif">else if <condition>(<expr><operator>(</operator><name>req</name> <operator>|</operator> <name>sug</name><operator>)</operator> <operator>&amp;</operator> <name>all_components</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>avg</name> <init>= <expr><operator>(</operator><ternary><condition><expr><operator>(</operator><name>req</name> <operator>|</operator> <name>sug</name><operator>)</operator> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_RED_SIZE</name><operator>)</operator></expr> ?</condition><then> <expr><name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SIZE</name></expr>]</index></name></expr></then><else>: <expr><literal type="number">0</literal></expr></else></ternary><operator>)</operator>
<operator>+</operator> <operator>(</operator><ternary><condition><expr><operator>(</operator><name>req</name> <operator>|</operator> <name>sug</name><operator>)</operator> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_GREEN_SIZE</name><operator>)</operator></expr> ?</condition><then> <expr><name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SIZE</name></expr>]</index></name></expr></then><else>: <expr><literal type="number">0</literal></expr></else></ternary><operator>)</operator>
<operator>+</operator> <operator>(</operator><ternary><condition><expr><operator>(</operator><name>req</name> <operator>|</operator> <name>sug</name><operator>)</operator> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_BLUE_SIZE</name><operator>)</operator></expr> ?</condition><then> <expr><name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SIZE</name></expr>]</index></name></expr></then><else>: <expr><literal type="number">0</literal></expr></else></ternary><operator>)</operator>
<operator>+</operator> <operator>(</operator><ternary><condition><expr><operator>(</operator><name>req</name> <operator>|</operator> <name>sug</name><operator>)</operator> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_ALPHA_SIZE</name><operator>)</operator></expr> ?</condition><then> <expr><name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SIZE</name></expr>]</index></name></expr></then><else>: <expr><literal type="number">0</literal></expr></else></ternary><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>num</name> <init>= <expr><operator>(</operator><ternary><condition><expr><operator>(</operator><name>req</name> <operator>|</operator> <name>sug</name><operator>)</operator> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_RED_SIZE</name><operator>)</operator></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary><operator>)</operator>
<operator>+</operator> <operator>(</operator><ternary><condition><expr><operator>(</operator><name>req</name> <operator>|</operator> <name>sug</name><operator>)</operator> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_GREEN_SIZE</name><operator>)</operator></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary><operator>)</operator>
<operator>+</operator> <operator>(</operator><ternary><condition><expr><operator>(</operator><name>req</name> <operator>|</operator> <name>sug</name><operator>)</operator> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_BLUE_SIZE</name><operator>)</operator></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary><operator>)</operator>
<operator>+</operator> <operator>(</operator><ternary><condition><expr><operator>(</operator><name>req</name> <operator>|</operator> <name>sug</name><operator>)</operator> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_ALPHA_SIZE</name><operator>)</operator></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary><operator>)</operator></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>avg</name> <operator>/=</operator> <operator>(</operator><ternary><condition><expr><name>num</name></expr> ?</condition><then> <expr><name>num</name></expr> </then><else>: <expr><literal type="number">1</literal></expr></else></ternary><operator>)</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><operator>(</operator><name>req</name> <operator>|</operator> <name>sug</name><operator>)</operator> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_RED_SIZE</name><operator>)</operator> <operator>)</operator><operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>sug</name> <operator>|=</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_RED_SIZE</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SIZE</name></expr>]</index></name> <operator>=</operator> <name>avg</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><operator>(</operator><name>req</name> <operator>|</operator> <name>sug</name><operator>)</operator> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_GREEN_SIZE</name><operator>)</operator><operator>)</operator> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>sug</name> <operator>|=</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_GREEN_SIZE</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SIZE</name></expr>]</index></name> <operator>=</operator> <name>avg</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><operator>(</operator><name>req</name> <operator>|</operator> <name>sug</name><operator>)</operator> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_BLUE_SIZE</name><operator>)</operator><operator>)</operator> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>sug</name> <operator>|=</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_BLUE_SIZE</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SIZE</name></expr>]</index></name> <operator>=</operator> <name>avg</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><operator>(</operator><name>req</name> <operator>|</operator> <name>sug</name><operator>)</operator> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_ALPHA_SIZE</name><operator>)</operator><operator>)</operator> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>sug</name> <operator>|=</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_ALPHA_SIZE</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SIZE</name></expr>]</index></name> <operator>=</operator> <name>avg</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><operator>(</operator><operator>(</operator><name>req</name> <operator>|</operator> <name>sug</name><operator>)</operator> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_COLOR_SIZE</name><operator>)</operator><operator>)</operator> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>_al_fill_display_settings</name><argument_list>(<argument><expr><name>ref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><operator>(</operator><name>req</name> <operator>|</operator> <name>sug</name><operator>)</operator> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_SINGLE_BUFFER</name><operator>)</operator><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_SINGLE_BUFFER</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ALLEGRO_REQUIRE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><operator>(</operator><name>req</name> <operator>|</operator> <name>sug</name><operator>)</operator> <operator>&amp;</operator> <operator>(</operator><operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_SAMPLE_BUFFERS</name><operator>)</operator> <operator>|</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_SAMPLES</name><operator>)</operator><operator>)</operator><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_SAMPLE_BUFFERS</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ALLEGRO_SUGGEST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_SAMPLES</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ALLEGRO_SUGGEST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><operator>(</operator><name>req</name> <operator>|</operator> <name>sug</name><operator>)</operator> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_STEREO</name><operator>)</operator><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_STEREO</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ALLEGRO_SUGGEST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><operator>(</operator><name>req</name> <operator>|</operator> <name>sug</name><operator>)</operator> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_RENDER_METHOD</name><operator>)</operator><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_RENDER_METHOD</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>ALLEGRO_SUGGEST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><operator>(</operator><name>req</name> <operator>|</operator> <name>sug</name><operator>)</operator> <operator>&amp;</operator> <operator>(</operator><operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_FLOAT_COLOR</name><operator>)</operator> <operator>|</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_FLOAT_DEPTH</name><operator>)</operator><operator>)</operator><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_FLOAT_DEPTH</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ALLEGRO_SUGGEST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_FLOAT_COLOR</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ALLEGRO_SUGGEST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><operator>(</operator><name>req</name> <operator>|</operator> <name>sug</name><operator>)</operator> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_COMPATIBLE_DISPLAY</name><operator>)</operator><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_COMPATIBLE_DISPLAY</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>ALLEGRO_REQUIRE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>debug_display_settings</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_EXTRA_DISPLAY_SETTINGS</name> <modifier>*</modifier></type><name>eds</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"color: %d (rgba %d%d%d%d), depth: %d, stencil: %d, "</literal>
<literal type="string">"acc: %d%d%d%d, samples: %d/%d\n"</literal></expr></argument>,
<argument><expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_COLOR_SIZE</name></expr>]</index></name></expr></argument>,
<argument><expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SIZE</name></expr>]</index></name></expr></argument>,
<argument><expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SIZE</name></expr>]</index></name></expr></argument>,
<argument><expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SIZE</name></expr>]</index></name></expr></argument>,
<argument><expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SIZE</name></expr>]</index></name></expr></argument>,
<argument><expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_DEPTH_SIZE</name></expr>]</index></name></expr></argument>,
<argument><expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_STENCIL_SIZE</name></expr>]</index></name></expr></argument>,
<argument><expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_RED_SIZE</name></expr>]</index></name></expr></argument>,
<argument><expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_RED_SIZE</name></expr>]</index></name></expr></argument>,
<argument><expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_RED_SIZE</name></expr>]</index></name></expr></argument>,
<argument><expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_RED_SIZE</name></expr>]</index></name></expr></argument>,
<argument><expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_SAMPLES</name></expr>]</index></name></expr></argument>,
<argument><expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_SAMPLE_BUFFERS</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>_al_score_display_settings</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_EXTRA_DISPLAY_SETTINGS</name> <modifier>*</modifier></type><name>eds</name></decl></parameter>,
<parameter><decl><type><name>ALLEGRO_EXTRA_DISPLAY_SETTINGS</name> <modifier>*</modifier></type><name>ref</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>score</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>debug_display_settings</name><argument_list>(<argument><expr><name>eds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_COMPATIBLE_DISPLAY</name></expr>]</index></name> <operator>!=</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_COMPATIBLE_DISPLAY</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>req</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_COMPATIBLE_DISPLAY</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Display not compatible with Allegro.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <literal type="number">128</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_VSYNC</name></expr>]</index></name> <operator>!=</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_VSYNC</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>req</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_VSYNC</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Vsync requirement not met.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <literal type="number">128</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_COLOR_SIZE</name></expr>]</index></name> <operator>!=</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_COLOR_SIZE</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>req</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_COLOR_SIZE</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Color depth requirement not met.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>

<expr_stmt><expr><name>score</name> <operator>+=</operator> <literal type="number">128</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name>sug</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_COLOR_SIZE</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_COLOR_SIZE</name></expr>]</index></name> <operator>&lt;</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_COLOR_SIZE</name></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <operator>(</operator><literal type="number">96</literal> <operator>*</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_COLOR_SIZE</name></expr>]</index></name><operator>)</operator> <operator>/</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_COLOR_SIZE</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <literal type="number">96</literal> <operator>+</operator> <literal type="number">96</literal> <operator>/</operator> <operator>(</operator><literal type="number">1</literal> <operator>+</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_COLOR_SIZE</name></expr>]</index></name> <operator>-</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_COLOR_SIZE</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><operator>(</operator><name>req</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_RED_SIZE</name><operator>)</operator><operator>)</operator>
<operator>&amp;&amp;</operator> <operator>(</operator><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SIZE</name></expr>]</index></name> <operator>!=</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SIZE</name></expr>]</index></name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Red depth requirement not met.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>sug</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_RED_SIZE</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SIZE</name></expr>]</index></name> <operator>&lt;</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SIZE</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <operator>(</operator><literal type="number">16</literal> <operator>*</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SIZE</name></expr>]</index></name><operator>)</operator> <operator>/</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SIZE</name></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <literal type="number">16</literal> <operator>+</operator> <literal type="number">16</literal> <operator>/</operator> <operator>(</operator><literal type="number">1</literal> <operator>+</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SIZE</name></expr>]</index></name> <operator>-</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SIZE</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>req</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_GREEN_SIZE</name><operator>)</operator><operator>)</operator>
<operator>&amp;&amp;</operator> <operator>(</operator><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SIZE</name></expr>]</index></name> <operator>!=</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SIZE</name></expr>]</index></name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Green depth requirement not met.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>sug</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_GREEN_SIZE</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SIZE</name></expr>]</index></name> <operator>&lt;</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SIZE</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <operator>(</operator><literal type="number">16</literal> <operator>*</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SIZE</name></expr>]</index></name><operator>)</operator> <operator>/</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SIZE</name></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <literal type="number">16</literal> <operator>+</operator> <literal type="number">16</literal> <operator>/</operator> <operator>(</operator><literal type="number">1</literal> <operator>+</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SIZE</name></expr>]</index></name> <operator>-</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SIZE</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>req</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_BLUE_SIZE</name><operator>)</operator><operator>)</operator>
<operator>&amp;&amp;</operator> <operator>(</operator><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SIZE</name></expr>]</index></name> <operator>!=</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SIZE</name></expr>]</index></name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Blue depth requirement not met.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>sug</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_BLUE_SIZE</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SIZE</name></expr>]</index></name> <operator>&lt;</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SIZE</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <operator>(</operator><literal type="number">16</literal> <operator>*</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SIZE</name></expr>]</index></name><operator>)</operator> <operator>/</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SIZE</name></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <literal type="number">16</literal> <operator>+</operator> <literal type="number">16</literal> <operator>/</operator> <operator>(</operator><literal type="number">1</literal> <operator>+</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SIZE</name></expr>]</index></name> <operator>-</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SIZE</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>req</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_ALPHA_SIZE</name><operator>)</operator><operator>)</operator>
<operator>&amp;&amp;</operator> <operator>(</operator><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SIZE</name></expr>]</index></name> <operator>!=</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SIZE</name></expr>]</index></name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Alpha depth requirement not met (%d instead of %d).\n"</literal></expr></argument>,
<argument><expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SIZE</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SIZE</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>sug</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_ALPHA_SIZE</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SIZE</name></expr>]</index></name> <operator>&lt;</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SIZE</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <operator>(</operator><literal type="number">16</literal> <operator>*</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SIZE</name></expr>]</index></name><operator>)</operator> <operator>/</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SIZE</name></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <literal type="number">16</literal> <operator>+</operator> <literal type="number">16</literal> <operator>/</operator> <operator>(</operator><literal type="number">1</literal> <operator>+</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SIZE</name></expr>]</index></name> <operator>-</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SIZE</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>req</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_ACC_RED_SIZE</name><operator>)</operator><operator>)</operator>
<operator>&amp;&amp;</operator> <operator>(</operator><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_RED_SIZE</name></expr>]</index></name> <operator>!=</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_RED_SIZE</name></expr>]</index></name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Accumulator Red depth requirement not met.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>sug</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_ACC_RED_SIZE</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_RED_SIZE</name></expr>]</index></name> <operator>&lt;</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_RED_SIZE</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <operator>(</operator><literal type="number">16</literal> <operator>*</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_RED_SIZE</name></expr>]</index></name><operator>)</operator> <operator>/</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_RED_SIZE</name></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <literal type="number">16</literal> <operator>+</operator> <literal type="number">16</literal> <operator>/</operator> <operator>(</operator><literal type="number">1</literal> <operator>+</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_RED_SIZE</name></expr>]</index></name> <operator>-</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_RED_SIZE</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>req</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_ACC_GREEN_SIZE</name><operator>)</operator><operator>)</operator>
<operator>&amp;&amp;</operator> <operator>(</operator><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_GREEN_SIZE</name></expr>]</index></name> <operator>!=</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_GREEN_SIZE</name></expr>]</index></name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Accumulator Green depth requirement not met.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>sug</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_ACC_GREEN_SIZE</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_GREEN_SIZE</name></expr>]</index></name> <operator>&lt;</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_GREEN_SIZE</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <operator>(</operator><literal type="number">16</literal> <operator>*</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_GREEN_SIZE</name></expr>]</index></name><operator>)</operator> <operator>/</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_GREEN_SIZE</name></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <literal type="number">16</literal> <operator>+</operator> <literal type="number">16</literal> <operator>/</operator> <operator>(</operator><literal type="number">1</literal> <operator>+</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_GREEN_SIZE</name></expr>]</index></name> <operator>-</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_GREEN_SIZE</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>req</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_ACC_BLUE_SIZE</name><operator>)</operator><operator>)</operator>
<operator>&amp;&amp;</operator> <operator>(</operator><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_BLUE_SIZE</name></expr>]</index></name> <operator>!=</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_BLUE_SIZE</name></expr>]</index></name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Accumulator Blue depth requirement not met.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>sug</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_ACC_BLUE_SIZE</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_BLUE_SIZE</name></expr>]</index></name> <operator>&lt;</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_BLUE_SIZE</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <operator>(</operator><literal type="number">16</literal> <operator>*</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_BLUE_SIZE</name></expr>]</index></name><operator>)</operator> <operator>/</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_BLUE_SIZE</name></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <literal type="number">16</literal> <operator>+</operator> <literal type="number">16</literal> <operator>/</operator> <operator>(</operator><literal type="number">1</literal> <operator>+</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_BLUE_SIZE</name></expr>]</index></name> <operator>-</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_BLUE_SIZE</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>req</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_ACC_ALPHA_SIZE</name><operator>)</operator><operator>)</operator>
<operator>&amp;&amp;</operator> <operator>(</operator><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_ALPHA_SIZE</name></expr>]</index></name> <operator>!=</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_ALPHA_SIZE</name></expr>]</index></name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Accumulator Alpha depth requirement not met.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>sug</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_ACC_ALPHA_SIZE</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_ALPHA_SIZE</name></expr>]</index></name> <operator>&lt;</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_ALPHA_SIZE</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <operator>(</operator><literal type="number">16</literal> <operator>*</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_ALPHA_SIZE</name></expr>]</index></name><operator>)</operator> <operator>/</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_ALPHA_SIZE</name></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <literal type="number">16</literal> <operator>+</operator> <literal type="number">16</literal> <operator>/</operator> <operator>(</operator><literal type="number">1</literal> <operator>+</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_ALPHA_SIZE</name></expr>]</index></name> <operator>-</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ACC_ALPHA_SIZE</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_SINGLE_BUFFER</name></expr>]</index></name> <operator>!=</operator> <operator>!</operator><name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_SINGLE_BUFFER</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>req</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_SINGLE_BUFFER</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Single Buffer requirement not met.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <ternary><condition><expr><operator>(</operator><name>sug</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_SINGLE_BUFFER</name><operator>)</operator><operator>)</operator></expr> ?</condition><then> <expr><literal type="number">256</literal></expr> </then><else>: <expr><literal type="number">1</literal></expr></else></ternary></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_STEREO</name></expr>]</index></name> <operator>!=</operator> <operator>!</operator><name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_STEREO</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>req</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_STEREO</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Stereo Buffer requirement not met.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>sug</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_STEREO</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <literal type="number">128</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>req</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_AUX_BUFFERS</name><operator>)</operator><operator>)</operator> <operator>&amp;&amp;</operator>
<operator>(</operator><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_AUX_BUFFERS</name></expr>]</index></name> <operator>&lt;</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_AUX_BUFFERS</name></expr>]</index></name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Aux Buffer requirement not met.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>sug</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_AUX_BUFFERS</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_AUX_BUFFERS</name></expr>]</index></name> <operator>&lt;</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_AUX_BUFFERS</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <operator>(</operator><literal type="number">64</literal> <operator>*</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_AUX_BUFFERS</name></expr>]</index></name><operator>)</operator> <operator>/</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_AUX_BUFFERS</name></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <literal type="number">64</literal> <operator>+</operator> <literal type="number">64</literal> <operator>/</operator> <operator>(</operator><literal type="number">1</literal> <operator>+</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_AUX_BUFFERS</name></expr>]</index></name> <operator>-</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_AUX_BUFFERS</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>req</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_DEPTH_SIZE</name><operator>)</operator><operator>)</operator> <operator>&amp;&amp;</operator>
<operator>(</operator><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_DEPTH_SIZE</name></expr>]</index></name> <operator>!=</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_DEPTH_SIZE</name></expr>]</index></name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Z-Buffer requirement not met.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>sug</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_DEPTH_SIZE</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_DEPTH_SIZE</name></expr>]</index></name> <operator>&lt;</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_DEPTH_SIZE</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <operator>(</operator><literal type="number">64</literal> <operator>*</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_DEPTH_SIZE</name></expr>]</index></name><operator>)</operator> <operator>/</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_DEPTH_SIZE</name></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <literal type="number">64</literal> <operator>+</operator> <literal type="number">64</literal> <operator>/</operator> <operator>(</operator><literal type="number">1</literal> <operator>+</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_DEPTH_SIZE</name></expr>]</index></name> <operator>-</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_DEPTH_SIZE</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>req</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_STENCIL_SIZE</name><operator>)</operator><operator>)</operator>
<operator>&amp;&amp;</operator> <operator>(</operator><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_STENCIL_SIZE</name></expr>]</index></name> <operator>!=</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_STENCIL_SIZE</name></expr>]</index></name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Stencil depth requirement not met.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>sug</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_STENCIL_SIZE</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_STENCIL_SIZE</name></expr>]</index></name> <operator>&lt;</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_STENCIL_SIZE</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <operator>(</operator><literal type="number">64</literal> <operator>*</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_STENCIL_SIZE</name></expr>]</index></name><operator>)</operator> <operator>/</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_STENCIL_SIZE</name></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <literal type="number">64</literal> <operator>+</operator> <literal type="number">64</literal> <operator>/</operator> <operator>(</operator><literal type="number">1</literal> <operator>+</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_STENCIL_SIZE</name></expr>]</index></name> <operator>-</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_STENCIL_SIZE</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>req</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_RENDER_METHOD</name><operator>)</operator><operator>)</operator>
<operator>&amp;&amp;</operator> <operator>(</operator><operator>(</operator><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RENDER_METHOD</name></expr>]</index></name> <operator>!=</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RENDER_METHOD</name></expr>]</index></name><operator>)</operator>
<operator>||</operator> <operator>(</operator><name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RENDER_METHOD</name></expr>]</index></name> <operator>==</operator> <literal type="number">2</literal><operator>)</operator><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Render Method requirement not met.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>sug</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_RENDER_METHOD</name><operator>)</operator><operator>)</operator>
<operator>&amp;&amp;</operator> <operator>(</operator><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RENDER_METHOD</name></expr>]</index></name> <operator>==</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RENDER_METHOD</name></expr>]</index></name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <literal type="number">1024</literal></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RENDER_METHOD</name></expr>]</index></name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>score</name><operator>++</operator></expr>;</expr_stmt> 
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>req</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_SAMPLE_BUFFERS</name><operator>)</operator><operator>)</operator>
<operator>&amp;&amp;</operator> <operator>(</operator><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_SAMPLE_BUFFERS</name></expr>]</index></name> <operator>!=</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_SAMPLE_BUFFERS</name></expr>]</index></name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Multisample Buffers requirement not met\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name>sug</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_SAMPLE_BUFFERS</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_SAMPLE_BUFFERS</name></expr>]</index></name> <operator>==</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_SAMPLE_BUFFERS</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <literal type="number">128</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>req</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_SAMPLES</name><operator>)</operator><operator>)</operator>
<operator>&amp;&amp;</operator> <operator>(</operator><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_SAMPLES</name></expr>]</index></name> <operator>!=</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_SAMPLES</name></expr>]</index></name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Multisample Samples requirement not met\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>sug</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_SAMPLES</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_SAMPLES</name></expr>]</index></name> <operator>&lt;</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_SAMPLES</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <operator>(</operator><literal type="number">64</literal> <operator>*</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_SAMPLES</name></expr>]</index></name><operator>)</operator> <operator>/</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_SAMPLES</name></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <literal type="number">64</literal> <operator>+</operator> <literal type="number">64</literal> <operator>/</operator> <operator>(</operator><literal type="number">1</literal> <operator>+</operator> <name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_SAMPLES</name></expr>]</index></name> <operator>-</operator> <name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_SAMPLES</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_FLOAT_COLOR</name></expr>]</index></name> <operator>!=</operator> <operator>!</operator><name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_FLOAT_COLOR</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>req</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_FLOAT_COLOR</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Float Color requirement not met.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>sug</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_FLOAT_COLOR</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <literal type="number">128</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_FLOAT_DEPTH</name></expr>]</index></name> <operator>!=</operator> <operator>!</operator><name><name>ref</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_FLOAT_DEPTH</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>req</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_FLOAT_DEPTH</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Float Depth requirement not met.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>sug</name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>ALLEGRO_FLOAT_DEPTH</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>score</name> <operator>+=</operator> <literal type="number">128</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Score is : %i\n"</literal></expr></argument>, <argument><expr><name>score</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>score</name></expr>;</return>
</block_content>}</block></function>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>req</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>sug</name></cpp:undef>



<function><type><name>int</name></type> <name>_al_display_settings_sorter</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>p0</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>p1</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>ALLEGRO_EXTRA_DISPLAY_SETTINGS</name> <modifier>*</modifier></type><name>f0</name> <init>= <expr><operator>*</operator><operator>(</operator><operator>(</operator><name>ALLEGRO_EXTRA_DISPLAY_SETTINGS</name> <operator>*</operator><operator>*</operator><operator>)</operator><name>p0</name><operator>)</operator></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>ALLEGRO_EXTRA_DISPLAY_SETTINGS</name> <modifier>*</modifier></type><name>f1</name> <init>= <expr><operator>*</operator><operator>(</operator><operator>(</operator><name>ALLEGRO_EXTRA_DISPLAY_SETTINGS</name> <operator>*</operator><operator>*</operator><operator>)</operator><name>p1</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>f0</name> <operator>&amp;&amp;</operator> <operator>!</operator><name>f1</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>f0</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>f1</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>f0</name><operator>-&gt;</operator><name>score</name></name> <operator>==</operator> <name><name>f1</name><operator>-&gt;</operator><name>score</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name><name>f0</name><operator>-&gt;</operator><name>index</name></name> <operator>-</operator> <name><name>f1</name><operator>-&gt;</operator><name>index</name></name></expr>;</return></block_content></block></if> 
<else>else<block type="pseudo"><block_content>
<return>return <expr><name><name>f1</name><operator>-&gt;</operator><name>score</name></name> <operator>-</operator> <name><name>f0</name><operator>-&gt;</operator><name>score</name></name></expr>;</return></block_content></block></else></if_stmt> 
</block_content>}</block></function>


<function><type><name>int</name></type> <name>_al_deduce_color_format</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_EXTRA_DISPLAY_SETTINGS</name> <modifier>*</modifier></type><name>eds</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>format</name> <init>= <expr><name>ALLEGRO_PIXEL_FORMAT_ANY</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SIZE</name></expr>]</index></name> <operator>==</operator> <literal type="number">8</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SIZE</name></expr>]</index></name> <operator>==</operator> <literal type="number">8</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SIZE</name></expr>]</index></name> <operator>==</operator> <literal type="number">8</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SIZE</name></expr>]</index></name> <operator>==</operator> <literal type="number">8</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_COLOR_SIZE</name></expr>]</index></name> <operator>==</operator> <literal type="number">32</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">8</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">16</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">24</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>format</name> <operator>=</operator> <name>ALLEGRO_PIXEL_FORMAT_RGBA_8888</name></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">24</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">8</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">16</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>format</name> <operator>=</operator> <name>ALLEGRO_PIXEL_FORMAT_ABGR_8888</name></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">24</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">16</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">8</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>format</name> <operator>=</operator> <name>ALLEGRO_PIXEL_FORMAT_ARGB_8888</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SIZE</name></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_COLOR_SIZE</name></expr>]</index></name> <operator>==</operator> <literal type="number">24</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">8</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">16</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>format</name> <operator>=</operator> <name>ALLEGRO_PIXEL_FORMAT_RGB_888</name></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">8</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">16</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>format</name> <operator>=</operator> <name>ALLEGRO_PIXEL_FORMAT_BGR_888</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SIZE</name></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_COLOR_SIZE</name></expr>]</index></name> <operator>==</operator> <literal type="number">32</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">8</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">16</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>format</name> <operator>=</operator> <name>ALLEGRO_PIXEL_FORMAT_XRGB_8888</name></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">8</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">16</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>format</name> <operator>=</operator> <name>ALLEGRO_PIXEL_FORMAT_XBGR_8888</name></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">24</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">16</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">8</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>format</name> <operator>=</operator> <name>ALLEGRO_PIXEL_FORMAT_RGBX_8888</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SIZE</name></expr>]</index></name> <operator>==</operator> <literal type="number">5</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SIZE</name></expr>]</index></name> <operator>==</operator> <literal type="number">6</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SIZE</name></expr>]</index></name> <operator>==</operator> <literal type="number">5</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">5</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">11</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>format</name> <operator>=</operator> <name>ALLEGRO_PIXEL_FORMAT_BGR_565</name></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">5</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">11</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>format</name> <operator>=</operator> <name>ALLEGRO_PIXEL_FORMAT_RGB_565</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SIZE</name></expr>]</index></name> <operator>==</operator> <literal type="number">5</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SIZE</name></expr>]</index></name> <operator>==</operator> <literal type="number">5</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SIZE</name></expr>]</index></name> <operator>==</operator> <literal type="number">5</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SIZE</name></expr>]</index></name> <operator>==</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_COLOR_SIZE</name></expr>]</index></name> <operator>==</operator> <literal type="number">16</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">6</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">11</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>format</name> <operator>=</operator> <name>ALLEGRO_PIXEL_FORMAT_RGBA_5551</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">15</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">5</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">10</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>format</name> <operator>=</operator> <name>ALLEGRO_PIXEL_FORMAT_ARGB_1555</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SIZE</name></expr>]</index></name> <operator>==</operator> <literal type="number">4</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SIZE</name></expr>]</index></name> <operator>==</operator> <literal type="number">4</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SIZE</name></expr>]</index></name> <operator>==</operator> <literal type="number">4</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SIZE</name></expr>]</index></name> <operator>==</operator> <literal type="number">4</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_COLOR_SIZE</name></expr>]</index></name> <operator>==</operator> <literal type="number">16</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">12</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">4</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">8</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>format</name> <operator>=</operator> <name>ALLEGRO_PIXEL_FORMAT_ARGB_4444</name></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">12</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">8</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">4</literal> <operator>&amp;&amp;</operator>
<name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SHIFT</name></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>format</name> <operator>=</operator> <name>ALLEGRO_PIXEL_FORMAT_RGBA_4444</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>format</name> <operator>==</operator> <name>ALLEGRO_PIXEL_FORMAT_ANY</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ALLEGRO_WARN</name><argument_list>(
<argument><expr><literal type="string">"Could not deduce color format, sizes = (%d,%d,%d,%d,%d), shifts = (%d,%d,%d,%d)\n"</literal></expr></argument>,
<argument><expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SIZE</name></expr>]</index></name></expr></argument>,
<argument><expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SIZE</name></expr>]</index></name></expr></argument>,
<argument><expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SIZE</name></expr>]</index></name></expr></argument>,
<argument><expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SIZE</name></expr>]</index></name></expr></argument>,
<argument><expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_COLOR_SIZE</name></expr>]</index></name></expr></argument>,
<argument><expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_RED_SHIFT</name></expr>]</index></name></expr></argument>,
<argument><expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_GREEN_SHIFT</name></expr>]</index></name></expr></argument>,
<argument><expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_BLUE_SHIFT</name></expr>]</index></name></expr></argument>,
<argument><expr><name><name>eds</name><operator>-&gt;</operator><name>settings</name><index>[<expr><name>ALLEGRO_ALPHA_SHIFT</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>format</name></expr>;</return>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>_al_set_color_components</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>format</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_EXTRA_DISPLAY_SETTINGS</name> <modifier>*</modifier></type><name>eds</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>importance</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ALLEGRO_EXTRA_DISPLAY_SETTINGS</name></type> <name>old_eds</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>old_eds</name></expr></argument>, <argument><expr><call><name>_al_get_new_display_settings</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>old_eds</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_set_new_display_settings</name><argument_list>(<argument><expr><name>eds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_RED_SIZE</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ALLEGRO_DONTCARE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_RED_SHIFT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ALLEGRO_DONTCARE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_GREEN_SIZE</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ALLEGRO_DONTCARE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_GREEN_SHIFT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ALLEGRO_DONTCARE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_BLUE_SIZE</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ALLEGRO_DONTCARE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_BLUE_SHIFT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ALLEGRO_DONTCARE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SIZE</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ALLEGRO_DONTCARE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SHIFT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ALLEGRO_DONTCARE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_COLOR_SIZE</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ALLEGRO_DONTCARE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<switch>switch <condition>(<expr><name>format</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_ANY_NO_ALPHA</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SIZE</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_ANY_WITH_ALPHA</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SIZE</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_ANY_16_NO_ALPHA</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SIZE</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_COLOR_SIZE</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_ANY_16_WITH_ALPHA</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SIZE</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_COLOR_SIZE</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_ANY_24_NO_ALPHA</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SIZE</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_COLOR_SIZE</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_ANY_32_NO_ALPHA</name></expr>:</case>











<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SIZE</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_COLOR_SIZE</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>ALLEGRO_SUGGEST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_ANY_32_WITH_ALPHA</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SIZE</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_COLOR_SIZE</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>

<switch>switch <condition>(<expr><name>format</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_RGBA_8888</name></expr>:</case>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_ABGR_8888</name></expr>:</case>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_ARGB_8888</name></expr>:</case>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_RGB_888</name></expr>:</case>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_BGR_888</name></expr>:</case>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_RGBX_8888</name></expr>:</case>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_XRGB_8888</name></expr>:</case>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_XBGR_8888</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_RED_SIZE</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_GREEN_SIZE</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_BLUE_SIZE</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_BGR_565</name></expr>:</case>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_RGB_565</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_RED_SIZE</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_GREEN_SIZE</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_BLUE_SIZE</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_RGBA_5551</name></expr>:</case>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_ARGB_1555</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_RED_SIZE</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_GREEN_SIZE</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_BLUE_SIZE</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_ARGB_4444</name></expr>:</case>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_RGBA_4444</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_RED_SIZE</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_GREEN_SIZE</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_BLUE_SIZE</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>

<switch>switch <condition>(<expr><name>format</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_RGBA_8888</name></expr>:</case>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_ABGR_8888</name></expr>:</case>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_ARGB_8888</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SIZE</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_COLOR_SIZE</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_RGB_888</name></expr>:</case>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_BGR_888</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SIZE</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_COLOR_SIZE</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_RGBX_8888</name></expr>:</case>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_XRGB_8888</name></expr>:</case>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_XBGR_8888</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SIZE</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_COLOR_SIZE</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_BGR_565</name></expr>:</case>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_RGB_565</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SIZE</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_COLOR_SIZE</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_RGBA_5551</name></expr>:</case>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_ARGB_1555</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SIZE</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_COLOR_SIZE</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_ARGB_4444</name></expr>:</case>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_RGBA_4444</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SIZE</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_COLOR_SIZE</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>

<switch>switch <condition>(<expr><name>format</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_RGBA_8888</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SHIFT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_BLUE_SHIFT</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_GREEN_SHIFT</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_RED_SHIFT</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_ABGR_8888</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SHIFT</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_BLUE_SHIFT</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_GREEN_SHIFT</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_RED_SHIFT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_ARGB_8888</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SHIFT</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_BLUE_SHIFT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_GREEN_SHIFT</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_RED_SHIFT</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_RGB_888</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SHIFT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_BLUE_SHIFT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_GREEN_SHIFT</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_RED_SHIFT</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_BGR_888</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SHIFT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_BLUE_SHIFT</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_GREEN_SHIFT</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_RED_SHIFT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_XRGB_8888</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SHIFT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_BLUE_SHIFT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_GREEN_SHIFT</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_RED_SHIFT</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_RGBX_8888</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SHIFT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_BLUE_SHIFT</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_GREEN_SHIFT</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_RED_SHIFT</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_XBGR_8888</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SHIFT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_BLUE_SHIFT</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_GREEN_SHIFT</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_RED_SHIFT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_BGR_565</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SHIFT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_BLUE_SHIFT</name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_GREEN_SHIFT</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_RED_SHIFT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_RGB_565</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SHIFT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_BLUE_SHIFT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_GREEN_SHIFT</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_RED_SHIFT</name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_RGBA_5551</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SHIFT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_BLUE_SHIFT</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_GREEN_SHIFT</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_RED_SHIFT</name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_ARGB_1555</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SHIFT</name></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_BLUE_SHIFT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_GREEN_SHIFT</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_RED_SHIFT</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_ARGB_4444</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SHIFT</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_BLUE_SHIFT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_GREEN_SHIFT</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_RED_SHIFT</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<break>break;</break>
<case>case <expr><name>ALLEGRO_PIXEL_FORMAT_RGBA_4444</name></expr>:</case>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_ALPHA_SHIFT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_BLUE_SHIFT</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_GREEN_SHIFT</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>al_set_new_display_option</name><argument_list>(<argument><expr><name>ALLEGRO_RED_SHIFT</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<break>break;</break>
</block_content>}</block></switch>

<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>eds</name></expr></argument>, <argument><expr><call><name>_al_get_new_display_settings</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>eds</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_al_set_new_display_settings</name><argument_list>(<argument><expr><operator>&amp;</operator><name>old_eds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
