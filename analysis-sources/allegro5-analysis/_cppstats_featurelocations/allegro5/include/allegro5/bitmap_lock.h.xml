<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\include\allegro5\bitmap_lock.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__al_included_allegro5_bitmap_lock_h</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__al_included_allegro5_bitmap_lock_h</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/bitmap.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>





<enum>enum <block>{
<decl><name>ALLEGRO_LOCK_READWRITE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>ALLEGRO_LOCK_READONLY</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>ALLEGRO_LOCK_WRITEONLY</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>
}</block>;</enum>




<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_LOCKED_REGION</name></name></type> <name>ALLEGRO_LOCKED_REGION</name>;</typedef>
<struct>struct <name>ALLEGRO_LOCKED_REGION</name> <block>{
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>format</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>pitch</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>pixel_size</name></decl>;</decl_stmt>
}</block>;</struct>


<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_LOCKED_REGION</name><operator>*</operator></expr></argument>, <argument><expr><name>al_lock_bitmap</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_BITMAP</name> <operator>*</operator><name>bitmap</name><operator>,</operator> <name>int</name> <name>format</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_LOCKED_REGION</name><operator>*</operator></expr></argument>, <argument><expr><name>al_lock_bitmap_region</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_BITMAP</name> <operator>*</operator><name>bitmap</name><operator>,</operator> <name>int</name> <name>x</name><operator>,</operator> <name>int</name> <name>y</name><operator>,</operator> <name>int</name> <name>width</name><operator>,</operator> <name>int</name> <name>height</name><operator>,</operator> <name>int</name> <name>format</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_LOCKED_REGION</name><operator>*</operator></expr></argument>, <argument><expr><name>al_lock_bitmap_blocked</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_BITMAP</name> <operator>*</operator><name>bitmap</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_LOCKED_REGION</name><operator>*</operator></expr></argument>, <argument><expr><name>al_lock_bitmap_region_blocked</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_BITMAP</name> <operator>*</operator><name>bitmap</name><operator>,</operator> <name>int</name> <name>x_block</name><operator>,</operator> <name>int</name> <name>y_block</name><operator>,</operator>
<name>int</name> <name>width_block</name><operator>,</operator> <name>int</name> <name>height_block</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_unlock_bitmap</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_BITMAP</name> <operator>*</operator><name>bitmap</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_is_bitmap_locked</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_BITMAP</name> <operator>*</operator><name>bitmap</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
