<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\include\allegro5\internal\aintern_bitmap.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__al_included_allegro5_aintern_bitmap_h</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__al_included_allegro5_aintern_bitmap_h</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/bitmap.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/bitmap_lock.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/display.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/render_state.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/transformations.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_display.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_list.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_BITMAP_INTERFACE</name></name></type> <name>ALLEGRO_BITMAP_INTERFACE</name>;</typedef>

<struct>struct <name>ALLEGRO_BITMAP</name>
<block>{
<decl_stmt><decl><type><name>ALLEGRO_BITMAP_INTERFACE</name> <modifier>*</modifier></type><name>vt</name></decl>;</decl_stmt>







<decl_stmt><decl><type><name>int</name></type> <name>_format</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>_flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>_depth</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>_samples</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>_display</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>_memory_format</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>w</name></decl>, <decl><type ref="prev"/><name>h</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>pitch</name></decl>;</decl_stmt>









<decl_stmt><decl><type><name>int</name></type> <name>cl</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>cr_excl</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ct</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>cb_excl</name></decl>;</decl_stmt>















<decl_stmt><decl><type><name>bool</name></type> <name>locked</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>lock_x</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>lock_y</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>lock_w</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>lock_h</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name><modifier>*</modifier></type> <name>lock_data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>lock_flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_LOCKED_REGION</name></type> <name>locked_region</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>ALLEGRO_TRANSFORM</name></type> <name>transform</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_TRANSFORM</name></type> <name>inverse_transform</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>inverse_transform_dirty</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_TRANSFORM</name></type> <name>proj_transform</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>bool</name></type> <name>use_bitmap_blender</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ALLEGRO_BLENDER</name></type> <name>blender</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>ALLEGRO_SHADER</name> <modifier>*</modifier></type><name>shader</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>parent</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>xofs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>yofs</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>memory</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>extra</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>_AL_LIST_ITEM</name> <modifier>*</modifier></type><name>dtor_item</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>bool</name></type> <name>dirty</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>ALLEGRO_BITMAP_INTERFACE</name>
<block>{
<decl_stmt><decl><type><name>int</name></type> <name>id</name></decl>;</decl_stmt>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>draw_bitmap_region</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>,
<parameter><decl><type><name>ALLEGRO_COLOR</name></type> <name>tint</name></decl></parameter>,<parameter><decl><type><name>float</name></type> <name>sx</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>sy</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>sw</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>sh</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>upload_bitmap</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>update_clipping_rectangle</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>destroy_bitmap</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>ALLEGRO_LOCKED_REGION</name> <modifier>*</modifier></type> (<modifier>*</modifier><name>lock_region</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>h</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>format</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>unlock_region</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>ALLEGRO_LOCKED_REGION</name> <modifier>*</modifier></type> (<modifier>*</modifier><name>lock_compressed_region</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>h</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>unlock_compressed_region</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>bitmap_pointer_changed</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>old</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>backup_dirty_bitmap</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>)</parameter_list>;</function_decl>
}</block>;</struct>

<function_decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>_al_create_bitmap_params</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>current_display</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>h</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>format</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>depth</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>samples</name></decl></parameter>)</parameter_list>;</function_decl>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_DISPLAY</name><operator>*</operator></expr></argument>, <argument><expr><name>_al_get_bitmap_display</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_BITMAP</name> <operator>*</operator><name>bitmap</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> (<modifier>*</modifier><name>_al_convert_funcs</name><index>[<expr><name>ALLEGRO_NUM_PIXEL_FORMATS</name></expr>]</index>
<index>[<expr><name>ALLEGRO_NUM_PIXEL_FORMATS</name></expr>]</index>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>,
<parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type> <name>_al_convert_bitmap_data</name><parameter_list>(
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>src_format</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>src_pitch</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dst_format</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dst_pitch</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>sx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>sy</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dy</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_copy_bitmap_data</name><parameter_list>(
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>src_pitch</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dst_pitch</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>sx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>sy</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dy</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>format</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type> <name>_al_init_convert_bitmap_list</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_al_register_convert_bitmap</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_al_unregister_convert_bitmap</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_al_convert_to_display_bitmap</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_al_convert_to_memory_bitmap</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type> <name>_al_put_pixel</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_COLOR</name></type> <name>color</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type> <name>_al_init_iio_table</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>int</name></type> <name>_al_get_bitmap_memory_format</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
