<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\include\allegro5\internal\aintern_xdisplay.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__al_included_allegro5_aintern_xdisplay_h</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__al_included_allegro5_aintern_xdisplay_h</name></cpp:macro></cpp:define>





<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_RASPBERRYPI</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;GL/glx.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_display.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_x.h"</cpp:file></cpp:include>

<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_DISPLAY_XGLX_GTK</name></name></type> <name>ALLEGRO_DISPLAY_XGLX_GTK</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_XWIN_DISPLAY_OVERRIDABLE_INTERFACE</name></name></type> <name>ALLEGRO_XWIN_DISPLAY_OVERRIDABLE_INTERFACE</name>;</typedef>


<struct>struct <name>ALLEGRO_DISPLAY_XGLX</name>
<block>{

<decl_stmt><decl><type><name>ALLEGRO_DISPLAY</name></type> <name>display</name></decl>;</decl_stmt>



<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>ALLEGRO_XWIN_DISPLAY_OVERRIDABLE_INTERFACE</name></name> <modifier>*</modifier></type><name>overridable_vt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Window</name></type> <name>window</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>xscreen</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>adapter</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>GLXWindow</name></type> <name>glxwindow</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GLXContext</name></type> <name>context</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Atom</name></type> <name>wm_delete_window_atom</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>XVisualInfo</name> <modifier>*</modifier></type><name>xvinfo</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>GLXFBConfig</name> <modifier>*</modifier></type><name>fbc</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>glx_version</name></decl>;</decl_stmt> 




<decl_stmt><decl><type><name>ALLEGRO_DISPLAY_XGLX_GTK</name> <modifier>*</modifier></type><name>gtk</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>Window</name></type> <name>embedder_window</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>_AL_COND</name></type> <name>mapped</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>bool</name></type> <name>is_mapped</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>resize_count</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>bool</name></type> <name>programmatic_resize</name></decl>;</decl_stmt> 


<decl_stmt><decl><type><name>Cursor</name></type> <name>invisible_cursor</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Cursor</name></type> <name>current_cursor</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>cursor_hidden</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>Pixmap</name></type> <name>icon</name></decl>, <decl><type ref="prev"/><name>icon_mask</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>, <decl><type ref="prev"/><name>y</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>bool</name></type> <name>mouse_warp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>_AL_COND</name></type> <name>selectioned</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>bool</name></type> <name>is_selectioned</name></decl>;</decl_stmt> 

}</block>;</struct>

<function_decl><type><name>void</name></type> <name>_al_display_xglx_await_resize</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>old_resize_count</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>delay_hack</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_al_xglx_display_configure</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>setglxy</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_al_xglx_display_configure_event</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><name>XEvent</name> <modifier>*</modifier></type><name>event</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_al_xwin_display_switch_handler</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>d</name></decl></parameter>,
<parameter><decl><type><name>XFocusChangeEvent</name> <modifier>*</modifier></type><name>event</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_al_xwin_display_switch_handler_inner</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>focus_in</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_al_xwin_display_expose</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>XExposeEvent</name> <modifier>*</modifier></type><name>xevent</name></decl></parameter>)</parameter_list>;</function_decl>





<struct>struct <name>ALLEGRO_XWIN_DISPLAY_OVERRIDABLE_INTERFACE</name>
<block>{
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>create_display_hook</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>h</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>destroy_display_hook</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>is_last</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>resize_display</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>h</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>set_window_title</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>title</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>set_fullscreen_window</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>onoff</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>set_window_position</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>set_window_constraints</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>min_w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>min_h</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>max_w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>max_h</name></decl></parameter>)</parameter_list>;</function_decl>
}</block>;</struct>

<function_decl><type><name>bool</name></type> <name>_al_xwin_set_gtk_display_overridable_interface</name><parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>check_version</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>ALLEGRO_XWIN_DISPLAY_OVERRIDABLE_INTERFACE</name> <modifier>*</modifier></type><name>vt</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


</unit>
