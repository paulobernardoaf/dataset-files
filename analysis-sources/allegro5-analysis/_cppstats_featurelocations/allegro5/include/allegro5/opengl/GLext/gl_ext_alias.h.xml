<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\include\allegro5\opengl\GLext\gl_ext_alias.h">


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_ALLEGRO_GL_VERSION_1_2</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBlendColor</name></cpp:macro> <cpp:value>_al_glBlendColor</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBlendEquation</name></cpp:macro> <cpp:value>_al_glBlendEquation</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDrawRangeElements</name></cpp:macro> <cpp:value>_al_glDrawRangeElements</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColorTable</name></cpp:macro> <cpp:value>_al_glColorTable</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColorTableParameterfv</name></cpp:macro> <cpp:value>_al_glColorTableParameterfv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColorTableParameteriv</name></cpp:macro> <cpp:value>_al_glColorTableParameteriv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyColorTable</name></cpp:macro> <cpp:value>_al_glCopyColorTable</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetColorTable</name></cpp:macro> <cpp:value>_al_glGetColorTable</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetColorTableParameterfv</name></cpp:macro> <cpp:value>_al_glGetColorTableParameterfv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetColorTableParameteriv</name></cpp:macro> <cpp:value>_al_glGetColorTableParameteriv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColorSubTable</name></cpp:macro> <cpp:value>_al_glColorSubTable</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyColorSubTable</name></cpp:macro> <cpp:value>_al_glCopyColorSubTable</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexImage3D</name></cpp:macro> <cpp:value>_al_glTexImage3D</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexSubImage3D</name></cpp:macro> <cpp:value>_al_glTexSubImage3D</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyTexSubImage3D</name></cpp:macro> <cpp:value>_al_glCopyTexSubImage3D</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_imaging</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glConvolutionFilter1D</name></cpp:macro> <cpp:value>_al_glConvolutionFilter1D</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glConvolutionFilter2D</name></cpp:macro> <cpp:value>_al_glConvolutionFilter2D</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glConvolutionParameterf</name></cpp:macro> <cpp:value>_al_glConvolutionParameterf</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glConvolutionParameterfv</name></cpp:macro> <cpp:value>_al_glConvolutionParameterfv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glConvolutionParameteri</name></cpp:macro> <cpp:value>_al_glConvolutionParameteri</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glConvolutionParameteriv</name></cpp:macro> <cpp:value>_al_glConvolutionParameteriv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyConvolutionFilter1D</name></cpp:macro> <cpp:value>_al_glCopyConvolutionFilter1D</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyConvolutionFilter2D</name></cpp:macro> <cpp:value>_al_glCopyConvolutionFilter2D</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetConvolutionFilter</name></cpp:macro> <cpp:value>_al_glGetConvolutionFilter</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetConvolutionParameterfv</name></cpp:macro> <cpp:value>_al_glGetConvolutionParameterfv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetConvolutionParameteriv</name></cpp:macro> <cpp:value>_al_glGetConvolutionParameteriv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetSeparableFilter</name></cpp:macro> <cpp:value>_al_glGetSeparableFilter</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSeparableFilter2D</name></cpp:macro> <cpp:value>_al_glSeparableFilter2D</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetHistogram</name></cpp:macro> <cpp:value>_al_glGetHistogram</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetHistogramParameterfv</name></cpp:macro> <cpp:value>_al_glGetHistogramParameterfv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetHistogramParameteriv</name></cpp:macro> <cpp:value>_al_glGetHistogramParameteriv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMinmax</name></cpp:macro> <cpp:value>_al_glGetMinmax</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMinmaxParameterfv</name></cpp:macro> <cpp:value>_al_glGetMinmaxParameterfv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMinmaxParameteriv</name></cpp:macro> <cpp:value>_al_glGetMinmaxParameteriv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glHistogram</name></cpp:macro> <cpp:value>_al_glHistogram</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMinmax</name></cpp:macro> <cpp:value>_al_glMinmax</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glResetHistogram</name></cpp:macro> <cpp:value>_al_glResetHistogram</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glResetMinmax</name></cpp:macro> <cpp:value>_al_glResetMinmax</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_VERSION_1_3</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glActiveTexture</name></cpp:macro> <cpp:value>_al_glActiveTexture</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glClientActiveTexture</name></cpp:macro> <cpp:value>_al_glClientActiveTexture</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord1d</name></cpp:macro> <cpp:value>_al_glMultiTexCoord1d</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord1dv</name></cpp:macro> <cpp:value>_al_glMultiTexCoord1dv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord1f</name></cpp:macro> <cpp:value>_al_glMultiTexCoord1f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord1fv</name></cpp:macro> <cpp:value>_al_glMultiTexCoord1fv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord1i</name></cpp:macro> <cpp:value>_al_glMultiTexCoord1i</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord1iv</name></cpp:macro> <cpp:value>_al_glMultiTexCoord1iv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord1s</name></cpp:macro> <cpp:value>_al_glMultiTexCoord1s</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord1sv</name></cpp:macro> <cpp:value>_al_glMultiTexCoord1sv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord2d</name></cpp:macro> <cpp:value>_al_glMultiTexCoord2d</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord2dv</name></cpp:macro> <cpp:value>_al_glMultiTexCoord2dv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord2f</name></cpp:macro> <cpp:value>_al_glMultiTexCoord2f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord2fv</name></cpp:macro> <cpp:value>_al_glMultiTexCoord2fv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord2i</name></cpp:macro> <cpp:value>_al_glMultiTexCoord2i</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord2iv</name></cpp:macro> <cpp:value>_al_glMultiTexCoord2iv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord2s</name></cpp:macro> <cpp:value>_al_glMultiTexCoord2s</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord2sv</name></cpp:macro> <cpp:value>_al_glMultiTexCoord2sv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord3d</name></cpp:macro> <cpp:value>_al_glMultiTexCoord3d</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord3dv</name></cpp:macro> <cpp:value>_al_glMultiTexCoord3dv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord3f</name></cpp:macro> <cpp:value>_al_glMultiTexCoord3f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord3fv</name></cpp:macro> <cpp:value>_al_glMultiTexCoord3fv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord3i</name></cpp:macro> <cpp:value>_al_glMultiTexCoord3i</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord3iv</name></cpp:macro> <cpp:value>_al_glMultiTexCoord3iv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord3s</name></cpp:macro> <cpp:value>_al_glMultiTexCoord3s</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord3sv</name></cpp:macro> <cpp:value>_al_glMultiTexCoord3sv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord4d</name></cpp:macro> <cpp:value>_al_glMultiTexCoord4d</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord4dv</name></cpp:macro> <cpp:value>_al_glMultiTexCoord4dv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord4f</name></cpp:macro> <cpp:value>_al_glMultiTexCoord4f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord4fv</name></cpp:macro> <cpp:value>_al_glMultiTexCoord4fv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord4i</name></cpp:macro> <cpp:value>_al_glMultiTexCoord4i</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord4iv</name></cpp:macro> <cpp:value>_al_glMultiTexCoord4iv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord4s</name></cpp:macro> <cpp:value>_al_glMultiTexCoord4s</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord4sv</name></cpp:macro> <cpp:value>_al_glMultiTexCoord4sv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glLoadTransposeMatrixf</name></cpp:macro> <cpp:value>_al_glLoadTransposeMatrixf</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glLoadTransposeMatrixd</name></cpp:macro> <cpp:value>_al_glLoadTransposeMatrixd</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultTransposeMatrixf</name></cpp:macro> <cpp:value>_al_glMultTransposeMatrixf</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultTransposeMatrixd</name></cpp:macro> <cpp:value>_al_glMultTransposeMatrixd</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSampleCoverage</name></cpp:macro> <cpp:value>_al_glSampleCoverage</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompressedTexImage3D</name></cpp:macro> <cpp:value>_al_glCompressedTexImage3D</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompressedTexImage2D</name></cpp:macro> <cpp:value>_al_glCompressedTexImage2D</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompressedTexImage1D</name></cpp:macro> <cpp:value>_al_glCompressedTexImage1D</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompressedTexSubImage3D</name></cpp:macro> <cpp:value>_al_glCompressedTexSubImage3D</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompressedTexSubImage2D</name></cpp:macro> <cpp:value>_al_glCompressedTexSubImage2D</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompressedTexSubImage1D</name></cpp:macro> <cpp:value>_al_glCompressedTexSubImage1D</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetCompressedTexImage</name></cpp:macro> <cpp:value>_al_glGetCompressedTexImage</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_VERSION_1_4</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBlendFuncSeparate</name></cpp:macro> <cpp:value>_al_glBlendFuncSeparate</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFogCoordf</name></cpp:macro> <cpp:value>_al_glFogCoordf</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFogCoordfv</name></cpp:macro> <cpp:value>_al_glFogCoordfv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFogCoordd</name></cpp:macro> <cpp:value>_al_glFogCoordd</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFogCoorddv</name></cpp:macro> <cpp:value>_al_glFogCoorddv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFogCoordPointer</name></cpp:macro> <cpp:value>_al_glFogCoordPointer</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiDrawArrays</name></cpp:macro> <cpp:value>_al_glMultiDrawArrays</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiDrawElements</name></cpp:macro> <cpp:value>_al_glMultiDrawElements</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPointParameterf</name></cpp:macro> <cpp:value>_al_glPointParameterf</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPointParameterfv</name></cpp:macro> <cpp:value>_al_glPointParameterfv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPointParameteri</name></cpp:macro> <cpp:value>_al_glPointParameteri</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPointParameteriv</name></cpp:macro> <cpp:value>_al_glPointParameteriv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3b</name></cpp:macro> <cpp:value>_al_glSecondaryColor3b</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3bv</name></cpp:macro> <cpp:value>_al_glSecondaryColor3bv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3d</name></cpp:macro> <cpp:value>_al_glSecondaryColor3d</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3dv</name></cpp:macro> <cpp:value>_al_glSecondaryColor3dv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3f</name></cpp:macro> <cpp:value>_al_glSecondaryColor3f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3fv</name></cpp:macro> <cpp:value>_al_glSecondaryColor3fv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3i</name></cpp:macro> <cpp:value>_al_glSecondaryColor3i</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3iv</name></cpp:macro> <cpp:value>_al_glSecondaryColor3iv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3s</name></cpp:macro> <cpp:value>_al_glSecondaryColor3s</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3sv</name></cpp:macro> <cpp:value>_al_glSecondaryColor3sv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3ub</name></cpp:macro> <cpp:value>_al_glSecondaryColor3ub</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3ubv</name></cpp:macro> <cpp:value>_al_glSecondaryColor3ubv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3ui</name></cpp:macro> <cpp:value>_al_glSecondaryColor3ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3uiv</name></cpp:macro> <cpp:value>_al_glSecondaryColor3uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3us</name></cpp:macro> <cpp:value>_al_glSecondaryColor3us</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3usv</name></cpp:macro> <cpp:value>_al_glSecondaryColor3usv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColorPointer</name></cpp:macro> <cpp:value>_al_glSecondaryColorPointer</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos2d</name></cpp:macro> <cpp:value>_al_glWindowPos2d</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos2dv</name></cpp:macro> <cpp:value>_al_glWindowPos2dv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos2f</name></cpp:macro> <cpp:value>_al_glWindowPos2f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos2fv</name></cpp:macro> <cpp:value>_al_glWindowPos2fv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos2i</name></cpp:macro> <cpp:value>_al_glWindowPos2i</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos2iv</name></cpp:macro> <cpp:value>_al_glWindowPos2iv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos2s</name></cpp:macro> <cpp:value>_al_glWindowPos2s</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos2sv</name></cpp:macro> <cpp:value>_al_glWindowPos2sv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos3d</name></cpp:macro> <cpp:value>_al_glWindowPos3d</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos3dv</name></cpp:macro> <cpp:value>_al_glWindowPos3dv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos3f</name></cpp:macro> <cpp:value>_al_glWindowPos3f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos3fv</name></cpp:macro> <cpp:value>_al_glWindowPos3fv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos3i</name></cpp:macro> <cpp:value>_al_glWindowPos3i</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos3iv</name></cpp:macro> <cpp:value>_al_glWindowPos3iv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos3s</name></cpp:macro> <cpp:value>_al_glWindowPos3s</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos3sv</name></cpp:macro> <cpp:value>_al_glWindowPos3sv</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_VERSION_1_5</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindBuffer</name></cpp:macro> <cpp:value>_al_glBindBuffer</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteBuffers</name></cpp:macro> <cpp:value>_al_glDeleteBuffers</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenBuffers</name></cpp:macro> <cpp:value>_al_glGenBuffers</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsBuffer</name></cpp:macro> <cpp:value>_al_glIsBuffer</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBufferData</name></cpp:macro> <cpp:value>_al_glBufferData</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBufferSubData</name></cpp:macro> <cpp:value>_al_glBufferSubData</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetBufferSubData</name></cpp:macro> <cpp:value>_al_glGetBufferSubData</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMapBuffer</name></cpp:macro> <cpp:value>_al_glMapBuffer</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUnmapBuffer</name></cpp:macro> <cpp:value>_al_glUnmapBuffer</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetBufferParameteriv</name></cpp:macro> <cpp:value>_al_glGetBufferParameteriv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetBufferPointerv</name></cpp:macro> <cpp:value>_al_glGetBufferPointerv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenQueries</name></cpp:macro> <cpp:value>_al_glGenQueries</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteQueries</name></cpp:macro> <cpp:value>_al_glDeleteQueries</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsQuery</name></cpp:macro> <cpp:value>_al_glIsQuery</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBeginQuery</name></cpp:macro> <cpp:value>_al_glBeginQuery</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEndQuery</name></cpp:macro> <cpp:value>_al_glEndQuery</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetQueryiv</name></cpp:macro> <cpp:value>_al_glGetQueryiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetQueryObjectiv</name></cpp:macro> <cpp:value>_al_glGetQueryObjectiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetQueryObjectuiv</name></cpp:macro> <cpp:value>_al_glGetQueryObjectuiv</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_VERSION_2_0</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBlendEquationSeparate</name></cpp:macro> <cpp:value>_al_glBlendEquationSeparate</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCreateProgram</name></cpp:macro> <cpp:value>_al_glCreateProgram</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCreateShader</name></cpp:macro> <cpp:value>_al_glCreateShader</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteProgram</name></cpp:macro> <cpp:value>_al_glDeleteProgram</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteShader</name></cpp:macro> <cpp:value>_al_glDeleteShader</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glAttachShader</name></cpp:macro> <cpp:value>_al_glAttachShader</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDetachShader</name></cpp:macro> <cpp:value>_al_glDetachShader</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glShaderSource</name></cpp:macro> <cpp:value>_al_glShaderSource</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompileShader</name></cpp:macro> <cpp:value>_al_glCompileShader</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsProgram</name></cpp:macro> <cpp:value>_al_glIsProgram</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsShader</name></cpp:macro> <cpp:value>_al_glIsShader</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glLinkProgram</name></cpp:macro> <cpp:value>_al_glLinkProgram</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUseProgram</name></cpp:macro> <cpp:value>_al_glUseProgram</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glValidateProgram</name></cpp:macro> <cpp:value>_al_glValidateProgram</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform1f</name></cpp:macro> <cpp:value>_al_glUniform1f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform2f</name></cpp:macro> <cpp:value>_al_glUniform2f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform3f</name></cpp:macro> <cpp:value>_al_glUniform3f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform4f</name></cpp:macro> <cpp:value>_al_glUniform4f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform1i</name></cpp:macro> <cpp:value>_al_glUniform1i</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform2i</name></cpp:macro> <cpp:value>_al_glUniform2i</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform3i</name></cpp:macro> <cpp:value>_al_glUniform3i</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform4i</name></cpp:macro> <cpp:value>_al_glUniform4i</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform1fv</name></cpp:macro> <cpp:value>_al_glUniform1fv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform2fv</name></cpp:macro> <cpp:value>_al_glUniform2fv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform3fv</name></cpp:macro> <cpp:value>_al_glUniform3fv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform4fv</name></cpp:macro> <cpp:value>_al_glUniform4fv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform1iv</name></cpp:macro> <cpp:value>_al_glUniform1iv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform2iv</name></cpp:macro> <cpp:value>_al_glUniform2iv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform3iv</name></cpp:macro> <cpp:value>_al_glUniform3iv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform4iv</name></cpp:macro> <cpp:value>_al_glUniform4iv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformMatrix2fv</name></cpp:macro> <cpp:value>_al_glUniformMatrix2fv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformMatrix3fv</name></cpp:macro> <cpp:value>_al_glUniformMatrix3fv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformMatrix4fv</name></cpp:macro> <cpp:value>_al_glUniformMatrix4fv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetShaderfv</name></cpp:macro> <cpp:value>_al_glGetShaderfv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetShaderiv</name></cpp:macro> <cpp:value>_al_glGetShaderiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramfv</name></cpp:macro> <cpp:value>_al_glGetProgramfv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramiv</name></cpp:macro> <cpp:value>_al_glGetProgramiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetShaderInfoLog</name></cpp:macro> <cpp:value>_al_glGetShaderInfoLog</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramInfoLog</name></cpp:macro> <cpp:value>_al_glGetProgramInfoLog</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetAttachedShaders</name></cpp:macro> <cpp:value>_al_glGetAttachedShaders</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetUniformLocation</name></cpp:macro> <cpp:value>_al_glGetUniformLocation</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetActiveUniform</name></cpp:macro> <cpp:value>_al_glGetActiveUniform</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetUniformfv</name></cpp:macro> <cpp:value>_al_glGetUniformfv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetUniformiv</name></cpp:macro> <cpp:value>_al_glGetUniformiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetShaderSource</name></cpp:macro> <cpp:value>_al_glGetShaderSource</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1f</name></cpp:macro> <cpp:value>_al_glVertexAttrib1f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1s</name></cpp:macro> <cpp:value>_al_glVertexAttrib1s</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1d</name></cpp:macro> <cpp:value>_al_glVertexAttrib1d</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2f</name></cpp:macro> <cpp:value>_al_glVertexAttrib2f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2s</name></cpp:macro> <cpp:value>_al_glVertexAttrib2s</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2d</name></cpp:macro> <cpp:value>_al_glVertexAttrib2d</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3f</name></cpp:macro> <cpp:value>_al_glVertexAttrib3f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3s</name></cpp:macro> <cpp:value>_al_glVertexAttrib3s</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3d</name></cpp:macro> <cpp:value>_al_glVertexAttrib3d</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4f</name></cpp:macro> <cpp:value>_al_glVertexAttrib4f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4s</name></cpp:macro> <cpp:value>_al_glVertexAttrib4s</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4d</name></cpp:macro> <cpp:value>_al_glVertexAttrib4d</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4Nub</name></cpp:macro> <cpp:value>_al_glVertexAttrib4Nub</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1fv</name></cpp:macro> <cpp:value>_al_glVertexAttrib1fv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1sv</name></cpp:macro> <cpp:value>_al_glVertexAttrib1sv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1dv</name></cpp:macro> <cpp:value>_al_glVertexAttrib1dv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2fv</name></cpp:macro> <cpp:value>_al_glVertexAttrib2fv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2sv</name></cpp:macro> <cpp:value>_al_glVertexAttrib2sv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2dv</name></cpp:macro> <cpp:value>_al_glVertexAttrib2dv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3fv</name></cpp:macro> <cpp:value>_al_glVertexAttrib3fv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3sv</name></cpp:macro> <cpp:value>_al_glVertexAttrib3sv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3dv</name></cpp:macro> <cpp:value>_al_glVertexAttrib3dv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4fv</name></cpp:macro> <cpp:value>_al_glVertexAttrib4fv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4sv</name></cpp:macro> <cpp:value>_al_glVertexAttrib4sv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4dv</name></cpp:macro> <cpp:value>_al_glVertexAttrib4dv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4iv</name></cpp:macro> <cpp:value>_al_glVertexAttrib4iv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4bv</name></cpp:macro> <cpp:value>_al_glVertexAttrib4bv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4ubv</name></cpp:macro> <cpp:value>_al_glVertexAttrib4ubv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4usv</name></cpp:macro> <cpp:value>_al_glVertexAttrib4usv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4uiv</name></cpp:macro> <cpp:value>_al_glVertexAttrib4uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4Nbv</name></cpp:macro> <cpp:value>_al_glVertexAttrib4Nbv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4Nsv</name></cpp:macro> <cpp:value>_al_glVertexAttrib4Nsv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4Niv</name></cpp:macro> <cpp:value>_al_glVertexAttrib4Niv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4Nubv</name></cpp:macro> <cpp:value>_al_glVertexAttrib4Nubv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4Nusv</name></cpp:macro> <cpp:value>_al_glVertexAttrib4Nusv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4Nuiv</name></cpp:macro> <cpp:value>_al_glVertexAttrib4Nuiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribPointer</name></cpp:macro> <cpp:value>_al_glVertexAttribPointer</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEnableVertexAttribArray</name></cpp:macro> <cpp:value>_al_glEnableVertexAttribArray</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDisableVertexAttribArray</name></cpp:macro> <cpp:value>_al_glDisableVertexAttribArray</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindAttribLocation</name></cpp:macro> <cpp:value>_al_glBindAttribLocation</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetActiveAttrib</name></cpp:macro> <cpp:value>_al_glGetActiveAttrib</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetAttribLocation</name></cpp:macro> <cpp:value>_al_glGetAttribLocation</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVertexAttribdv</name></cpp:macro> <cpp:value>_al_glGetVertexAttribdv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVertexAttribfv</name></cpp:macro> <cpp:value>_al_glGetVertexAttribfv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVertexAttribiv</name></cpp:macro> <cpp:value>_al_glGetVertexAttribiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVertexAttribPointerv</name></cpp:macro> <cpp:value>_al_glGetVertexAttribPointerv</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDrawBuffers</name></cpp:macro> <cpp:value>_al_glDrawBuffers</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glStencilOpSeparate</name></cpp:macro> <cpp:value>_al_glStencilOpSeparate</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glStencilFuncSeparate</name></cpp:macro> <cpp:value>_al_glStencilFuncSeparate</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glStencilMaskSeparate</name></cpp:macro> <cpp:value>_al_glStencilMaskSeparate</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_VERSION_2_1</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformMatrix2x3fv</name></cpp:macro> <cpp:value>_al_glUniformMatrix2x3fv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformMatrix3x2fv</name></cpp:macro> <cpp:value>_al_glUniformMatrix3x2fv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformMatrix2x4fv</name></cpp:macro> <cpp:value>_al_glUniformMatrix2x4fv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformMatrix4x2fv</name></cpp:macro> <cpp:value>_al_glUniformMatrix4x2fv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformMatrix3x4fv</name></cpp:macro> <cpp:value>_al_glUniformMatrix3x4fv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformMatrix4x3fv</name></cpp:macro> <cpp:value>_al_glUniformMatrix4x3fv</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_VERSION_3_0</name></expr></cpp:if>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColorMaski</name></cpp:macro> <cpp:value>_al_glColorMaski</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetBooleani_v</name></cpp:macro> <cpp:value>_al_glGetBooleani_v</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetIntegeri_v</name></cpp:macro> <cpp:value>_al_glGetIntegeri_v</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEnablei</name></cpp:macro> <cpp:value>_al_glEnablei</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDisablei</name></cpp:macro> <cpp:value>_al_glDisablei</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsEnabledi</name></cpp:macro> <cpp:value>_al_glIsEnabledi</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBeginTransformFeedback</name></cpp:macro> <cpp:value>_al_glBeginTransformFeedback</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEndTransformFeedback</name></cpp:macro> <cpp:value>_al_glEndTransformFeedback</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindBufferRange</name></cpp:macro> <cpp:value>_al_glBindBufferRange</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindBufferBase</name></cpp:macro> <cpp:value>_al_glBindBufferBase</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTransformFeedbackVaryings</name></cpp:macro> <cpp:value>_al_glTransformFeedbackVaryings</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetTransformFeedbackVarying</name></cpp:macro> <cpp:value>_al_glGetTransformFeedbackVarying</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glClampColor</name></cpp:macro> <cpp:value>_al_glClampColor</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBeginConditionalRender</name></cpp:macro> <cpp:value>_al_glBeginConditionalRender</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEndConditionalRender</name></cpp:macro> <cpp:value>_al_glEndConditionalRender</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI1i</name></cpp:macro> <cpp:value>_al_glVertexAttribI1i</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI2i</name></cpp:macro> <cpp:value>_al_glVertexAttribI2i</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI3i</name></cpp:macro> <cpp:value>_al_glVertexAttribI3i</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI4i</name></cpp:macro> <cpp:value>_al_glVertexAttribI4i</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI1ui</name></cpp:macro> <cpp:value>_al_glVertexAttribI1ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI2ui</name></cpp:macro> <cpp:value>_al_glVertexAttribI2ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI3ui</name></cpp:macro> <cpp:value>_al_glVertexAttribI3ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI4ui</name></cpp:macro> <cpp:value>_al_glVertexAttribI4ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI1iv</name></cpp:macro> <cpp:value>_al_glVertexAttribI1iv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI2iv</name></cpp:macro> <cpp:value>_al_glVertexAttribI2iv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI3iv</name></cpp:macro> <cpp:value>_al_glVertexAttribI3iv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI4iv</name></cpp:macro> <cpp:value>_al_glVertexAttribI4iv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI1uiv</name></cpp:macro> <cpp:value>_al_glVertexAttribI1uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI2uiv</name></cpp:macro> <cpp:value>_al_glVertexAttribI2uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI3uiv</name></cpp:macro> <cpp:value>_al_glVertexAttribI3uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI4uiv</name></cpp:macro> <cpp:value>_al_glVertexAttribI4uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI4bv</name></cpp:macro> <cpp:value>_al_glVertexAttribI4bv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI4sv</name></cpp:macro> <cpp:value>_al_glVertexAttribI4sv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI4ubv</name></cpp:macro> <cpp:value>_al_glVertexAttribI4ubv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI4usv</name></cpp:macro> <cpp:value>_al_glVertexAttribI4usv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribIPointer</name></cpp:macro> <cpp:value>_al_glVertexAttribIPointer</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVertexAttribIiv</name></cpp:macro> <cpp:value>_al_glGetVertexAttribIiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVertexAttribIuiv</name></cpp:macro> <cpp:value>_al_glGetVertexAttribIuiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetUniformuiv</name></cpp:macro> <cpp:value>_al_glGetUniformuiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindFragDataLocation</name></cpp:macro> <cpp:value>_al_glBindFragDataLocation</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetFragDataLocation</name></cpp:macro> <cpp:value>_al_glGetFragDataLocation</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform1ui</name></cpp:macro> <cpp:value>_al_glUniform1ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform2ui</name></cpp:macro> <cpp:value>_al_glUniform2ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform3ui</name></cpp:macro> <cpp:value>_al_glUniform3ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform4ui</name></cpp:macro> <cpp:value>_al_glUniform4ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform1uiv</name></cpp:macro> <cpp:value>_al_glUniform1uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform2uiv</name></cpp:macro> <cpp:value>_al_glUniform2uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform3uiv</name></cpp:macro> <cpp:value>_al_glUniform3uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform4uiv</name></cpp:macro> <cpp:value>_al_glUniform4uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexParameterIiv</name></cpp:macro> <cpp:value>_al_glTexParameterIiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexParameterIuiv</name></cpp:macro> <cpp:value>_al_glTexParameterIuiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetTexParameterIiv</name></cpp:macro> <cpp:value>_al_glGetTexParameterIiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetTexParameterIuiv</name></cpp:macro> <cpp:value>_al_glGetTexParameterIuiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glClearBufferiv</name></cpp:macro> <cpp:value>_al_glClearBufferiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glClearBufferuiv</name></cpp:macro> <cpp:value>_al_glClearBufferuiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glClearBufferfv</name></cpp:macro> <cpp:value>_al_glClearBufferfv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glClearBufferfi</name></cpp:macro> <cpp:value>_al_glClearBufferfi</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetStringi</name></cpp:macro> <cpp:value>_al_glGetStringi</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_VERSION_3_1</name></expr></cpp:if>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDrawArraysInstanced</name></cpp:macro> <cpp:value>_al_glDrawArraysInstanced</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDrawElementsInstanced</name></cpp:macro> <cpp:value>_al_glDrawElementsInstanced</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexBuffer</name></cpp:macro> <cpp:value>_al_glTexBuffer</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPrimitiveRestartIndex</name></cpp:macro> <cpp:value>_al_glPrimitiveRestartIndex</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_VERSION_3_2</name></expr></cpp:if>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetInteger64i_v</name></cpp:macro> <cpp:value>_al_glGetInteger64i_v</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetBufferParameteri64v</name></cpp:macro> <cpp:value>_al_glGetBufferParameteri64v</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramParameteri</name></cpp:macro> <cpp:value>_al_glProgramParameteri</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFramebufferTexture</name></cpp:macro> <cpp:value>_al_glFramebufferTexture</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_VERSION_3_3</name></expr></cpp:if>










<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_VERSION_4_3</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glClearBufferData</name></cpp:macro> <cpp:value>_al_glClearBufferData</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glClearBufferSubData</name></cpp:macro> <cpp:value>_al_glClearBufferSubData</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDispatchCompute</name></cpp:macro> <cpp:value>_al_glDispatchCompute</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDispatchComputeIndirect</name></cpp:macro> <cpp:value>_al_glDispatchComputeIndirect</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyImageSubData</name></cpp:macro> <cpp:value>_al_glCopyImageSubData</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFramebufferParameteri</name></cpp:macro> <cpp:value>_al_glFramebufferParameteri</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetFramebufferParameteriv</name></cpp:macro> <cpp:value>_al_glGetFramebufferParameteriv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetInternalformati64v</name></cpp:macro> <cpp:value>_al_glGetInternalformati64v</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glInvalidateTexSubImage</name></cpp:macro> <cpp:value>_al_glInvalidateTexSubImage</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glInvalidateTexImage</name></cpp:macro> <cpp:value>_al_glInvalidateTexImage</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glInvalidateBufferSubData</name></cpp:macro> <cpp:value>_al_glInvalidateBufferSubData</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glInvalidateBufferData</name></cpp:macro> <cpp:value>_al_glInvalidateBufferData</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glInvalidateFramebuffer</name></cpp:macro> <cpp:value>_al_glInvalidateFramebuffer</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glInvalidateSubFramebuffer</name></cpp:macro> <cpp:value>_al_glInvalidateSubFramebuffer</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiDrawArraysIndirect</name></cpp:macro> <cpp:value>_al_glMultiDrawArraysIndirect</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiDrawElementsIndirect</name></cpp:macro> <cpp:value>_al_glMultiDrawElementsIndirect</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramInterfaceiv</name></cpp:macro> <cpp:value>_al_glGetProgramInterfaceiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramResourceIndex</name></cpp:macro> <cpp:value>_al_glGetProgramResourceIndex</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramResourceName</name></cpp:macro> <cpp:value>_al_glGetProgramResourceName</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramResourceiv</name></cpp:macro> <cpp:value>_al_glGetProgramResourceiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramResourceLocation</name></cpp:macro> <cpp:value>_al_glGetProgramResourceLocation</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramResourceLocationIndex</name></cpp:macro> <cpp:value>_al_glGetProgramResourceLocationIndex</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glShaderStorageBlockBinding</name></cpp:macro> <cpp:value>_al_glShaderStorageBlockBinding</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexBufferRange</name></cpp:macro> <cpp:value>_al_glTexBufferRange</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexStorage2DMultisample</name></cpp:macro> <cpp:value>_al_glTexStorage2DMultisample</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexStorage3DMultisample</name></cpp:macro> <cpp:value>_al_glTexStorage3DMultisample</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTextureView</name></cpp:macro> <cpp:value>_al_glTextureView</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindVertexBuffer</name></cpp:macro> <cpp:value>_al_glBindVertexBuffer</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribFormat</name></cpp:macro> <cpp:value>_al_glVertexAttribFormat</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribIFormat</name></cpp:macro> <cpp:value>_al_glVertexAttribIFormat</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribLFormat</name></cpp:macro> <cpp:value>_al_glVertexAttribLFormat</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribBinding</name></cpp:macro> <cpp:value>_al_glVertexAttribBinding</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexBindingDivisor</name></cpp:macro> <cpp:value>_al_glVertexBindingDivisor</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDebugMessageControl</name></cpp:macro> <cpp:value>_al_glDebugMessageControl</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDebugMessageInsert</name></cpp:macro> <cpp:value>_al_glDebugMessageInsert</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDebugMessageCallback</name></cpp:macro> <cpp:value>_al_glDebugMessageCallback</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetDebugMessageLog</name></cpp:macro> <cpp:value>_al_glGetDebugMessageLog</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPushDebugGroup</name></cpp:macro> <cpp:value>_al_glPushDebugGroup</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPopDebugGroup</name></cpp:macro> <cpp:value>_al_glPopDebugGroup</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glObjectLabel</name></cpp:macro> <cpp:value>_al_glObjectLabel</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetObjectLabel</name></cpp:macro> <cpp:value>_al_glGetObjectLabel</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glObjectPtrLabel</name></cpp:macro> <cpp:value>_al_glObjectPtrLabel</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetObjectPtrLabel</name></cpp:macro> <cpp:value>_al_glGetObjectPtrLabel</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 





<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_ALLEGRO_GL_ARB_multitexture</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glActiveTextureARB</name></cpp:macro> <cpp:value>_al_glActiveTextureARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glClientActiveTextureARB</name></cpp:macro> <cpp:value>_al_glClientActiveTextureARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord1dARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord1dARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord1dvARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord1dvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord1fARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord1fARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord1fvARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord1fvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord1iARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord1iARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord1ivARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord1ivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord1sARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord1sARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord1svARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord1svARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord2dARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord2dARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord2dvARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord2dvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord2fARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord2fARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord2fvARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord2fvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord2iARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord2iARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord2ivARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord2ivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord2sARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord2sARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord2svARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord2svARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord3dARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord3dARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord3dvARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord3dvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord3fARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord3fARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord3fvARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord3fvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord3iARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord3iARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord3ivARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord3ivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord3sARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord3sARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord3svARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord3svARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord4dARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord4dARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord4dvARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord4dvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord4fARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord4fARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord4fvARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord4fvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord4iARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord4iARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord4ivARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord4ivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord4sARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord4sARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord4svARB</name></cpp:macro> <cpp:value>_al_glMultiTexCoord4svARB</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_transpose_matrix</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glLoadTransposeMatrixfARB</name></cpp:macro> <cpp:value>_al_glLoadTransposeMatrixfARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glLoadTransposeMatrixdARB</name></cpp:macro> <cpp:value>_al_glLoadTransposeMatrixdARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultTransposeMatrixfARB</name></cpp:macro> <cpp:value>_al_glMultTransposeMatrixfARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultTransposeMatrixdARB</name></cpp:macro> <cpp:value>_al_glMultTransposeMatrixdARB</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_multisample</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSampleCoverageARB</name></cpp:macro> <cpp:value>_al_glSampleCoverageARB</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_texture_compression</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompressedTexImage3DARB</name></cpp:macro> <cpp:value>_al_glCompressedTexImage3DARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompressedTexImage2DARB</name></cpp:macro> <cpp:value>_al_glCompressedTexImage2DARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompressedTexImage1DARB</name></cpp:macro> <cpp:value>_al_glCompressedTexImage1DARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompressedTexSubImage3DARB</name></cpp:macro> <cpp:value>_al_glCompressedTexSubImage3DARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompressedTexSubImage2DARB</name></cpp:macro> <cpp:value>_al_glCompressedTexSubImage2DARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompressedTexSubImage1DARB</name></cpp:macro> <cpp:value>_al_glCompressedTexSubImage1DARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetCompressedTexImageARB</name></cpp:macro> <cpp:value>_al_glGetCompressedTexImageARB</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_point_parameters</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPointParameterfARB</name></cpp:macro> <cpp:value>_al_glPointParameterfARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPointParameterfvARB</name></cpp:macro> <cpp:value>_al_glPointParameterfvARB</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_vertex_blend</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWeightbvARB</name></cpp:macro> <cpp:value>_al_glWeightbvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWeightsvARB</name></cpp:macro> <cpp:value>_al_glWeightsvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWeightivARB</name></cpp:macro> <cpp:value>_al_glWeightivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWeightfvARB</name></cpp:macro> <cpp:value>_al_glWeightfvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWeightdvARB</name></cpp:macro> <cpp:value>_al_glWeightdvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWeightubvARB</name></cpp:macro> <cpp:value>_al_glWeightubvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWeightusvARB</name></cpp:macro> <cpp:value>_al_glWeightusvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWeightuivARB</name></cpp:macro> <cpp:value>_al_glWeightuivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWeightPointerARB</name></cpp:macro> <cpp:value>_al_glWeightPointerARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexBlendARB</name></cpp:macro> <cpp:value>_al_glVertexBlendARB</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_matrix_palette</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCurrentPaletteMatrixARB</name></cpp:macro> <cpp:value>_al_glCurrentPaletteMatrixARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMatrixIndexubvARB</name></cpp:macro> <cpp:value>_al_glMatrixIndexubvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMatrixIndexusvARB</name></cpp:macro> <cpp:value>_al_glMatrixIndexusvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMatrixIndexuivARB</name></cpp:macro> <cpp:value>_al_glMatrixIndexuivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMatrixIndexPointerARB</name></cpp:macro> <cpp:value>_al_glMatrixIndexPointerARB</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_window_pos</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos2dARB</name></cpp:macro> <cpp:value>_al_glWindowPos2dARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos2dvARB</name></cpp:macro> <cpp:value>_al_glWindowPos2dvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos2fARB</name></cpp:macro> <cpp:value>_al_glWindowPos2fARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos2fvARB</name></cpp:macro> <cpp:value>_al_glWindowPos2fvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos2iARB</name></cpp:macro> <cpp:value>_al_glWindowPos2iARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos2ivARB</name></cpp:macro> <cpp:value>_al_glWindowPos2ivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos2sARB</name></cpp:macro> <cpp:value>_al_glWindowPos2sARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos2svARB</name></cpp:macro> <cpp:value>_al_glWindowPos2svARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos3dARB</name></cpp:macro> <cpp:value>_al_glWindowPos3dARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos3dvARB</name></cpp:macro> <cpp:value>_al_glWindowPos3dvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos3fARB</name></cpp:macro> <cpp:value>_al_glWindowPos3fARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos3fvARB</name></cpp:macro> <cpp:value>_al_glWindowPos3fvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos3iARB</name></cpp:macro> <cpp:value>_al_glWindowPos3iARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos3ivARB</name></cpp:macro> <cpp:value>_al_glWindowPos3ivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos3sARB</name></cpp:macro> <cpp:value>_al_glWindowPos3sARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos3svARB</name></cpp:macro> <cpp:value>_al_glWindowPos3svARB</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_vertex_program</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1dARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib1dARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1dvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib1dvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1fARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib1fARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1fvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib1fvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1sARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib1sARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1svARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib1svARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2dARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib2dARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2dvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib2dvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2fARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib2fARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2fvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib2fvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2sARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib2sARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2svARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib2svARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3dARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib3dARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3dvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib3dvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3fARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib3fARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3fvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib3fvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3sARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib3sARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3svARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib3svARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4NbvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4NbvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4NivARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4NivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4NsvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4NsvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4NubARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4NubARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4NubvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4NubvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4NuivARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4NuivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4NusvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4NusvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4bvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4bvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4dARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4dARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4dvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4dvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4fARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4fARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4fvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4fvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4ivARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4ivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4sARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4sARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4svARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4svARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4ubvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4ubvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4uivARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4uivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4usvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4usvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribPointerARB</name></cpp:macro> <cpp:value>_al_glVertexAttribPointerARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEnableVertexAttribArrayARB</name></cpp:macro> <cpp:value>_al_glEnableVertexAttribArrayARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDisableVertexAttribArrayARB</name></cpp:macro> <cpp:value>_al_glDisableVertexAttribArrayARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramStringARB</name></cpp:macro> <cpp:value>_al_glProgramStringARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindProgramARB</name></cpp:macro> <cpp:value>_al_glBindProgramARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteProgramsARB</name></cpp:macro> <cpp:value>_al_glDeleteProgramsARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenProgramsARB</name></cpp:macro> <cpp:value>_al_glGenProgramsARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramEnvParameter4dARB</name></cpp:macro> <cpp:value>_al_glProgramEnvParameter4dARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramEnvParameter4dvARB</name></cpp:macro> <cpp:value>_al_glProgramEnvParameter4dvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramEnvParameter4fARB</name></cpp:macro> <cpp:value>_al_glProgramEnvParameter4fARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramEnvParameter4fvARB</name></cpp:macro> <cpp:value>_al_glProgramEnvParameter4fvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramLocalParameter4dARB</name></cpp:macro> <cpp:value>_al_glProgramLocalParameter4dARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramLocalParameter4dvARB</name></cpp:macro> <cpp:value>_al_glProgramLocalParameter4dvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramLocalParameter4fARB</name></cpp:macro> <cpp:value>_al_glProgramLocalParameter4fARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramLocalParameter4fvARB</name></cpp:macro> <cpp:value>_al_glProgramLocalParameter4fvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramEnvParameterdvARB</name></cpp:macro> <cpp:value>_al_glGetProgramEnvParameterdvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramEnvParameterfvARB</name></cpp:macro> <cpp:value>_al_glGetProgramEnvParameterfvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramLocalParameterdvARB</name></cpp:macro> <cpp:value>_al_glGetProgramLocalParameterdvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramLocalParameterfvARB</name></cpp:macro> <cpp:value>_al_glGetProgramLocalParameterfvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramivARB</name></cpp:macro> <cpp:value>_al_glGetProgramivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramStringARB</name></cpp:macro> <cpp:value>_al_glGetProgramStringARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVertexAttribdvARB</name></cpp:macro> <cpp:value>_al_glGetVertexAttribdvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVertexAttribfvARB</name></cpp:macro> <cpp:value>_al_glGetVertexAttribfvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVertexAttribivARB</name></cpp:macro> <cpp:value>_al_glGetVertexAttribivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVertexAttribPointervARB</name></cpp:macro> <cpp:value>_al_glGetVertexAttribPointervARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsProgramARB</name></cpp:macro> <cpp:value>_al_glIsProgramARB</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_vertex_buffer_object</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindBufferARB</name></cpp:macro> <cpp:value>_al_glBindBufferARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteBuffersARB</name></cpp:macro> <cpp:value>_al_glDeleteBuffersARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenBuffersARB</name></cpp:macro> <cpp:value>_al_glGenBuffersARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsBufferARB</name></cpp:macro> <cpp:value>_al_glIsBufferARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBufferDataARB</name></cpp:macro> <cpp:value>_al_glBufferDataARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBufferSubDataARB</name></cpp:macro> <cpp:value>_al_glBufferSubDataARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetBufferSubDataARB</name></cpp:macro> <cpp:value>_al_glGetBufferSubDataARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMapBufferARB</name></cpp:macro> <cpp:value>_al_glMapBufferARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUnmapBufferARB</name></cpp:macro> <cpp:value>_al_glUnmapBufferARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetBufferParameterivARB</name></cpp:macro> <cpp:value>_al_glGetBufferParameterivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetBufferPointervARB</name></cpp:macro> <cpp:value>_al_glGetBufferPointervARB</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_occlusion_query</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenQueriesARB</name></cpp:macro> <cpp:value>_al_glGenQueriesARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteQueriesARB</name></cpp:macro> <cpp:value>_al_glDeleteQueriesARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsQueryARB</name></cpp:macro> <cpp:value>_al_glIsQueryARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBeginQueryARB</name></cpp:macro> <cpp:value>_al_glBeginQueryARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEndQueryARB</name></cpp:macro> <cpp:value>_al_glEndQueryARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetQueryivARB</name></cpp:macro> <cpp:value>_al_glGetQueryivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetQueryObjectivARB</name></cpp:macro> <cpp:value>_al_glGetQueryObjectivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetQueryObjectuivARB</name></cpp:macro> <cpp:value>_al_glGetQueryObjectuivARB</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_shader_objects</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteObjectARB</name></cpp:macro> <cpp:value>_al_glDeleteObjectARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetHandleARB</name></cpp:macro> <cpp:value>_al_glGetHandleARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDetachObjectARB</name></cpp:macro> <cpp:value>_al_glDetachObjectARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCreateShaderObjectARB</name></cpp:macro> <cpp:value>_al_glCreateShaderObjectARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glShaderSourceARB</name></cpp:macro> <cpp:value>_al_glShaderSourceARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompileShaderARB</name></cpp:macro> <cpp:value>_al_glCompileShaderARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCreateProgramObjectARB</name></cpp:macro> <cpp:value>_al_glCreateProgramObjectARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glAttachObjectARB</name></cpp:macro> <cpp:value>_al_glAttachObjectARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glLinkProgramARB</name></cpp:macro> <cpp:value>_al_glLinkProgramARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUseProgramObjectARB</name></cpp:macro> <cpp:value>_al_glUseProgramObjectARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glValidateProgramARB</name></cpp:macro> <cpp:value>_al_glValidateProgramARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform1fARB</name></cpp:macro> <cpp:value>_al_glUniform1fARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform2fARB</name></cpp:macro> <cpp:value>_al_glUniform2fARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform3fARB</name></cpp:macro> <cpp:value>_al_glUniform3fARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform4fARB</name></cpp:macro> <cpp:value>_al_glUniform4fARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform1iARB</name></cpp:macro> <cpp:value>_al_glUniform1iARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform2iARB</name></cpp:macro> <cpp:value>_al_glUniform2iARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform3iARB</name></cpp:macro> <cpp:value>_al_glUniform3iARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform4iARB</name></cpp:macro> <cpp:value>_al_glUniform4iARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform1fvARB</name></cpp:macro> <cpp:value>_al_glUniform1fvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform2fvARB</name></cpp:macro> <cpp:value>_al_glUniform2fvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform3fvARB</name></cpp:macro> <cpp:value>_al_glUniform3fvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform4fvARB</name></cpp:macro> <cpp:value>_al_glUniform4fvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform1ivARB</name></cpp:macro> <cpp:value>_al_glUniform1ivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform2ivARB</name></cpp:macro> <cpp:value>_al_glUniform2ivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform3ivARB</name></cpp:macro> <cpp:value>_al_glUniform3ivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform4ivARB</name></cpp:macro> <cpp:value>_al_glUniform4ivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformMatrix2fvARB</name></cpp:macro> <cpp:value>_al_glUniformMatrix2fvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformMatrix3fvARB</name></cpp:macro> <cpp:value>_al_glUniformMatrix3fvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformMatrix4fvARB</name></cpp:macro> <cpp:value>_al_glUniformMatrix4fvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetObjectParameterfvARB</name></cpp:macro> <cpp:value>_al_glGetObjectParameterfvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetObjectParameterivARB</name></cpp:macro> <cpp:value>_al_glGetObjectParameterivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetInfoLogARB</name></cpp:macro> <cpp:value>_al_glGetInfoLogARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetAttachedObjectsARB</name></cpp:macro> <cpp:value>_al_glGetAttachedObjectsARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetUniformLocationARB</name></cpp:macro> <cpp:value>_al_glGetUniformLocationARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetActiveUniformARB</name></cpp:macro> <cpp:value>_al_glGetActiveUniformARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetUniformfvARB</name></cpp:macro> <cpp:value>_al_glGetUniformfvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetUniformivARB</name></cpp:macro> <cpp:value>_al_glGetUniformivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetShaderSourceARB</name></cpp:macro> <cpp:value>_al_glGetShaderSourceARB</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_ALLEGRO_GL_ARB_vertex_shader</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>GL_ARB_vertex_program</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1fARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib1fARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1sARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib1sARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1dARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib1dARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2fARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib2fARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2sARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib2sARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2dARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib2dARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3fARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib3fARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3sARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib3sARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3dARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib3dARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4fARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4fARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4sARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4sARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4dARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4dARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4NubARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4NubARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1fvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib1fvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1svARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib1svARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1dvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib1dvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2fvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib2fvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2svARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib2svARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2dvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib2dvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3fvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib3fvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3svARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib3svARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3dvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib3dvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4fvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4fvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4svARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4svARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4dvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4dvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4ivARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4ivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4bvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4bvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4ubvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4ubvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4usvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4usvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4uivARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4uivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4NbvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4NbvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4NsvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4NsvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4NivARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4NivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4NubvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4NubvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4NusvARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4NusvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4NuivARB</name></cpp:macro> <cpp:value>_al_glVertexAttrib4NuivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribPointerARB</name></cpp:macro> <cpp:value>_al_glVertexAttribPointerARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEnableVertexAttribArrayARB</name></cpp:macro> <cpp:value>_al_glEnableVertexAttribArrayARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDisableVertexAttribArrayARB</name></cpp:macro> <cpp:value>_al_glDisableVertexAttribArrayARB</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindAttribLocationARB</name></cpp:macro> <cpp:value>_al_glBindAttribLocationARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetActiveAttribARB</name></cpp:macro> <cpp:value>_al_glGetActiveAttribARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetAttribLocationARB</name></cpp:macro> <cpp:value>_al_glGetAttribLocationARB</cpp:value></cpp:define>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>GL_ARB_vertex_program</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVertexAttribdvARB</name></cpp:macro> <cpp:value>_al_glGetVertexAttribdvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVertexAttribfvARB</name></cpp:macro> <cpp:value>_al_glGetVertexAttribfvARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVertexAttribivARB</name></cpp:macro> <cpp:value>_al_glGetVertexAttribivARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVertexAttribPointervARB</name></cpp:macro> <cpp:value>_al_glGetVertexAttribPointervARB</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_draw_buffers</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDrawBuffersARB</name></cpp:macro> <cpp:value>_al_glDrawBuffersARB</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_color_buffer_float</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glClampColorARB</name></cpp:macro> <cpp:value>_al_glClampColorARB</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_draw_instanced</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDrawArraysInstancedARB</name></cpp:macro> <cpp:value>_al_glDrawArraysInstancedARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDrawElementsInstancedARB</name></cpp:macro> <cpp:value>_al_glDrawElementsInstancedARB</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_framebuffer_object</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsRenderbuffer</name></cpp:macro> <cpp:value>_al_glIsRenderbuffer</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindRenderbuffer</name></cpp:macro> <cpp:value>_al_glBindRenderbuffer</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteRenderbuffers</name></cpp:macro> <cpp:value>_al_glDeleteRenderbuffers</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenRenderbuffers</name></cpp:macro> <cpp:value>_al_glGenRenderbuffers</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glRenderbufferStorage</name></cpp:macro> <cpp:value>_al_glRenderbufferStorage</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetRenderbufferParameteriv</name></cpp:macro> <cpp:value>_al_glGetRenderbufferParameteriv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsFramebuffer</name></cpp:macro> <cpp:value>_al_glIsFramebuffer</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindFramebuffer</name></cpp:macro> <cpp:value>_al_glBindFramebuffer</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteFramebuffers</name></cpp:macro> <cpp:value>_al_glDeleteFramebuffers</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenFramebuffers</name></cpp:macro> <cpp:value>_al_glGenFramebuffers</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCheckFramebufferStatus</name></cpp:macro> <cpp:value>_al_glCheckFramebufferStatus</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFramebufferTexture1D</name></cpp:macro> <cpp:value>_al_glFramebufferTexture1D</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFramebufferTexture2D</name></cpp:macro> <cpp:value>_al_glFramebufferTexture2D</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFramebufferTexture3D</name></cpp:macro> <cpp:value>_al_glFramebufferTexture3D</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFramebufferRenderbuffer</name></cpp:macro> <cpp:value>_al_glFramebufferRenderbuffer</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetFramebufferAttachmentParameteriv</name></cpp:macro> <cpp:value>_al_glGetFramebufferAttachmentParameteriv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenerateMipmap</name></cpp:macro> <cpp:value>_al_glGenerateMipmap</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBlitFramebuffer</name></cpp:macro> <cpp:value>_al_glBlitFramebuffer</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glRenderbufferStorageMultisample</name></cpp:macro> <cpp:value>_al_glRenderbufferStorageMultisample</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFramebufferTextureLayer</name></cpp:macro> <cpp:value>_al_glFramebufferTextureLayer</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_geometry_shader4</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramParameteriARB</name></cpp:macro> <cpp:value>_al_glProgramParameteriARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFramebufferTextureARB</name></cpp:macro> <cpp:value>_al_glFramebufferTextureARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFramebufferTextureLayerARB</name></cpp:macro> <cpp:value>_al_glFramebufferTextureLayerARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFramebufferTextureFaceARB</name></cpp:macro> <cpp:value>_al_glFramebufferTextureFaceARB</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_instanced_arrays</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribDivisor</name></cpp:macro> <cpp:value>_al_glVertexAttribDivisor</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_map_buffer_range</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMapBufferRange</name></cpp:macro> <cpp:value>_al_glMapBufferRange</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFlushMappedBufferRange</name></cpp:macro> <cpp:value>_al_glFlushMappedBufferRange</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_texture_buffer_object</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexBufferARB</name></cpp:macro> <cpp:value>_al_glTexBufferARB</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_vertex_array_object</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindVertexArray</name></cpp:macro> <cpp:value>_al_glBindVertexArray</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteVertexArrays</name></cpp:macro> <cpp:value>_al_glDeleteVertexArrays</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenVertexArrays</name></cpp:macro> <cpp:value>_al_glGenVertexArrays</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsVertexArray</name></cpp:macro> <cpp:value>_al_glIsVertexArray</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_uniform_buffer_object</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetUniformIndices</name></cpp:macro> <cpp:value>_al_glGetUniformIndices</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetActiveUniformsiv</name></cpp:macro> <cpp:value>_al_glGetActiveUniformsiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetActiveUniformName</name></cpp:macro> <cpp:value>_al_glGetActiveUniformName</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetUniformBlockIndex</name></cpp:macro> <cpp:value>_al_glGetUniformBlockIndex</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetActiveUniformBlockiv</name></cpp:macro> <cpp:value>_al_glGetActiveUniformBlockiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetActiveUniformBlockName</name></cpp:macro> <cpp:value>_al_glGetActiveUniformBlockName</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformBlockBinding</name></cpp:macro> <cpp:value>_al_glUniformBlockBinding</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_copy_buffer</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyBufferSubData</name></cpp:macro> <cpp:value>_al_glCopyBufferSubData</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_draw_elements_base_vertex</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDrawElementsBaseVertex</name></cpp:macro> <cpp:value>_al_glDrawElementsBaseVertex</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDrawRangeElementsBaseVertex</name></cpp:macro> <cpp:value>_al_glDrawRangeElementsBaseVertex</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDrawElementsInstancedBaseVertex</name></cpp:macro> <cpp:value>_al_glDrawElementsInstancedBaseVertex</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiDrawElementsBaseVertex</name></cpp:macro> <cpp:value>_al_glMultiDrawElementsBaseVertex</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_provoking_vertex</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProvokingVertex</name></cpp:macro> <cpp:value>_al_glProvokingVertex</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_sync</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFenceSync</name></cpp:macro> <cpp:value>_al_glFenceSync</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsSync</name></cpp:macro> <cpp:value>_al_glIsSync</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteSync</name></cpp:macro> <cpp:value>_al_glDeleteSync</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glClientWaitSync</name></cpp:macro> <cpp:value>_al_glClientWaitSync</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWaitSync</name></cpp:macro> <cpp:value>_al_glWaitSync</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetInteger64v</name></cpp:macro> <cpp:value>_al_glGetInteger64v</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetSynciv</name></cpp:macro> <cpp:value>_al_glGetSynciv</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_texture_multisample</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexImage2DMultisample</name></cpp:macro> <cpp:value>_al_glTexImage2DMultisample</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexImage3DMultisample</name></cpp:macro> <cpp:value>_al_glTexImage3DMultisample</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMultisamplefv</name></cpp:macro> <cpp:value>_al_glGetMultisamplefv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSampleMaski</name></cpp:macro> <cpp:value>_al_glSampleMaski</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_draw_buffers_blend</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBlendEquationi</name></cpp:macro> <cpp:value>_al_glBlendEquationi</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBlendEquationSeparatei</name></cpp:macro> <cpp:value>_al_glBlendEquationSeparatei</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBlendFunci</name></cpp:macro> <cpp:value>_al_glBlendFunci</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBlendFuncSeparatei</name></cpp:macro> <cpp:value>_al_glBlendFuncSeparatei</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_sample_shading</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMinSampleShading</name></cpp:macro> <cpp:value>_al_glMinSampleShading</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_shading_language_include</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNamedStringARB</name></cpp:macro> <cpp:value>_al_glNamedStringARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteNamedStringARB</name></cpp:macro> <cpp:value>_al_glDeleteNamedStringARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompileShaderIncludeARB</name></cpp:macro> <cpp:value>_al_glCompileShaderIncludeARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsNamedStringARB</name></cpp:macro> <cpp:value>_al_glIsNamedStringARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetNamedStringARB</name></cpp:macro> <cpp:value>_al_glGetNamedStringARB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetNamedStringivARB</name></cpp:macro> <cpp:value>_al_glGetNamedStringivARB</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_blend_func_extended</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindFragDataLocationIndexed</name></cpp:macro> <cpp:value>_al_glBindFragDataLocationIndexed</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetFragDataIndex</name></cpp:macro> <cpp:value>_al_glGetFragDataIndex</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_sampler_objects</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenSamplers</name></cpp:macro> <cpp:value>_al_glGenSamplers</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteSamplers</name></cpp:macro> <cpp:value>_al_glDeleteSamplers</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsSampler</name></cpp:macro> <cpp:value>_al_glIsSampler</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindSampler</name></cpp:macro> <cpp:value>_al_glBindSampler</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSamplerParameteri</name></cpp:macro> <cpp:value>_al_glSamplerParameteri</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSamplerParameteriv</name></cpp:macro> <cpp:value>_al_glSamplerParameteriv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSamplerParameterf</name></cpp:macro> <cpp:value>_al_glSamplerParameterf</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSamplerParameterfv</name></cpp:macro> <cpp:value>_al_glSamplerParameterfv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSamplerParameterIiv</name></cpp:macro> <cpp:value>_al_glSamplerParameterIiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSamplerParameterIuiv</name></cpp:macro> <cpp:value>_al_glSamplerParameterIuiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetSamplerParameteriv</name></cpp:macro> <cpp:value>_al_glGetSamplerParameteriv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetSamplerParameterIiv</name></cpp:macro> <cpp:value>_al_glGetSamplerParameterIiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetSamplerParameterfv</name></cpp:macro> <cpp:value>_al_glGetSamplerParameterfv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetSamplerParameterIfv</name></cpp:macro> <cpp:value>_al_glGetSamplerParameterIfv</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_timer_query</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glQueryCounter</name></cpp:macro> <cpp:value>_al_glQueryCounter</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetQueryObjecti64v</name></cpp:macro> <cpp:value>_al_glGetQueryObjecti64v</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetQueryObjectui64v</name></cpp:macro> <cpp:value>_al_glGetQueryObjectui64v</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_vertex_type_2_10_10_10_rev</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexP2ui</name></cpp:macro> <cpp:value>_al_glVertexP2ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexP2uiv</name></cpp:macro> <cpp:value>_al_glVertexP2uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexP3ui</name></cpp:macro> <cpp:value>_al_glVertexP3ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexP3uiv</name></cpp:macro> <cpp:value>_al_glVertexP3uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexP4ui</name></cpp:macro> <cpp:value>_al_glVertexP4ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexP4uiv</name></cpp:macro> <cpp:value>_al_glVertexP4uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoordP1ui</name></cpp:macro> <cpp:value>_al_glTexCoordP1ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoordP1uiv</name></cpp:macro> <cpp:value>_al_glTexCoordP1uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoordP2ui</name></cpp:macro> <cpp:value>_al_glTexCoordP2ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoordP2uiv</name></cpp:macro> <cpp:value>_al_glTexCoordP2uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoordP3ui</name></cpp:macro> <cpp:value>_al_glTexCoordP3ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoordP3uiv</name></cpp:macro> <cpp:value>_al_glTexCoordP3uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoordP4ui</name></cpp:macro> <cpp:value>_al_glTexCoordP4ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoordP4uiv</name></cpp:macro> <cpp:value>_al_glTexCoordP4uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoordP1ui</name></cpp:macro> <cpp:value>_al_glMultiTexCoordP1ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoordP1uiv</name></cpp:macro> <cpp:value>_al_glMultiTexCoordP1uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoordP2ui</name></cpp:macro> <cpp:value>_al_glMultiTexCoordP2ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoordP2uiv</name></cpp:macro> <cpp:value>_al_glMultiTexCoordP2uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoordP3ui</name></cpp:macro> <cpp:value>_al_glMultiTexCoordP3ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoordP3uiv</name></cpp:macro> <cpp:value>_al_glMultiTexCoordP3uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoordP4ui</name></cpp:macro> <cpp:value>_al_glMultiTexCoordP4ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoordP4uiv</name></cpp:macro> <cpp:value>_al_glMultiTexCoordP4uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNormalP3ui</name></cpp:macro> <cpp:value>_al_glNormalP3ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNormalP3uiv</name></cpp:macro> <cpp:value>_al_glNormalP3uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColorP3ui</name></cpp:macro> <cpp:value>_al_glColorP3ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColorP3uiv</name></cpp:macro> <cpp:value>_al_glColorP3uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColorP4ui</name></cpp:macro> <cpp:value>_al_glColorP4ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColorP4uiv</name></cpp:macro> <cpp:value>_al_glColorP4uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColorP3ui</name></cpp:macro> <cpp:value>_al_glSecondaryColorP3ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColorP3uiv</name></cpp:macro> <cpp:value>_al_glSecondaryColorP3uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribP1ui</name></cpp:macro> <cpp:value>_al_glVertexAttribP1ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribP1uiv</name></cpp:macro> <cpp:value>_al_glVertexAttribP1uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribP2ui</name></cpp:macro> <cpp:value>_al_glVertexAttribP2ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribP2uiv</name></cpp:macro> <cpp:value>_al_glVertexAttribP2uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribP3ui</name></cpp:macro> <cpp:value>_al_glVertexAttribP3ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribP3uiv</name></cpp:macro> <cpp:value>_al_glVertexAttribP3uiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribP4ui</name></cpp:macro> <cpp:value>_al_glVertexAttribP4ui</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribP4uiv</name></cpp:macro> <cpp:value>_al_glVertexAttribP4uiv</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_draw_indirect</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDrawArraysIndirect</name></cpp:macro> <cpp:value>_al_glDrawArraysIndirect</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDrawElementsIndirect</name></cpp:macro> <cpp:value>_al_glDrawElementsIndirect</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_gpu_shader_fp64</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform1d</name></cpp:macro> <cpp:value>_al_glUniform1d</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform2d</name></cpp:macro> <cpp:value>_al_glUniform2d</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform3d</name></cpp:macro> <cpp:value>_al_glUniform3d</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform4d</name></cpp:macro> <cpp:value>_al_glUniform4d</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform1dv</name></cpp:macro> <cpp:value>_al_glUniform1dv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform2dv</name></cpp:macro> <cpp:value>_al_glUniform2dv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform3dv</name></cpp:macro> <cpp:value>_al_glUniform3dv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform4dv</name></cpp:macro> <cpp:value>_al_glUniform4dv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformMatrix2dv</name></cpp:macro> <cpp:value>_al_glUniformMatrix2dv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformMatrix3dv</name></cpp:macro> <cpp:value>_al_glUniformMatrix3dv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformMatrix4dv</name></cpp:macro> <cpp:value>_al_glUniformMatrix4dv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformMatrix2x3dv</name></cpp:macro> <cpp:value>_al_glUniformMatrix2x3dv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformMatrix2x4dv</name></cpp:macro> <cpp:value>_al_glUniformMatrix2x4dv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformMatrix3x2dv</name></cpp:macro> <cpp:value>_al_glUniformMatrix3x2dv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformMatrix3x4dv</name></cpp:macro> <cpp:value>_al_glUniformMatrix3x4dv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformMatrix4x2dv</name></cpp:macro> <cpp:value>_al_glUniformMatrix4x2dv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformMatrix4x3dv</name></cpp:macro> <cpp:value>_al_glUniformMatrix4x3dv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetUniformdv</name></cpp:macro> <cpp:value>_al_glGetUniformdv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform1dEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform1dEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform2dEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform2dEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform3dEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform3dEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform4dEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform4dEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform1dvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform1dvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform2dvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform2dvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform3dvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform3dvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform4dvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform4dvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniformMatrix2dvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniformMatrix2dvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniformMatrix3dvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniformMatrix3dvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniformMatrix4dvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniformMatrix4dvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniformMatrix2x3dvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniformMatrix2x3dvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniformMatrix2x4dvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniformMatrix2x4dvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniformMatrix3x2dvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniformMatrix3x2dvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniformMatrix3x4dvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniformMatrix3x4dvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniformMatrix4x2dvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniformMatrix4x2dvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniformMatrix4x3dvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniformMatrix4x3dvEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_shader_subroutine</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetSubroutineUniformLocation</name></cpp:macro> <cpp:value>_al_glGetSubroutineUniformLocation</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetSubroutineIndex</name></cpp:macro> <cpp:value>_al_glGetSubroutineIndex</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetActiveSubroutineUniformiv</name></cpp:macro> <cpp:value>_al_glGetActiveSubroutineUniformiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetActiveSubroutineUniformName</name></cpp:macro> <cpp:value>_al_glGetActiveSubroutineUniformName</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetActiveSubroutineName</name></cpp:macro> <cpp:value>_al_glGetActiveSubroutineName</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformSubroutinesuiv</name></cpp:macro> <cpp:value>_al_glUniformSubroutinesuiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetUniformSubroutineuiv</name></cpp:macro> <cpp:value>_al_glGetUniformSubroutineuiv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramStageiv</name></cpp:macro> <cpp:value>_al_glGetProgramStageiv</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_tessellation_shader</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPatchParameteri</name></cpp:macro> <cpp:value>_al_glPatchParameteri</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPatchParameterfv</name></cpp:macro> <cpp:value>_al_glPatchParameterfv</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_transform_feedback2</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindTransformFeedback</name></cpp:macro> <cpp:value>_al_glBindTransformFeedback</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteTransformFeedbacks</name></cpp:macro> <cpp:value>_al_glDeleteTransformFeedbacks</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenTransformFeedbacks</name></cpp:macro> <cpp:value>_al_glGenTransformFeedbacks</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsTransformFeedback</name></cpp:macro> <cpp:value>_al_glIsTransformFeedback</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPauseTransformFeedback</name></cpp:macro> <cpp:value>_al_glPauseTransformFeedback</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glResumeTransformFeedback</name></cpp:macro> <cpp:value>_al_glResumeTransformFeedback</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDrawTransformFeedback</name></cpp:macro> <cpp:value>_al_glDrawTransformFeedback</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ARB_transform_feedback3</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDrawTransformFeedbackStream</name></cpp:macro> <cpp:value>_al_glDrawTransformFeedbackStream</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBeginQueryIndexed</name></cpp:macro> <cpp:value>_al_glBeginQueryIndexed</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEndQueryIndexed</name></cpp:macro> <cpp:value>_al_glEndQueryIndexed</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetQueryIndexediv</name></cpp:macro> <cpp:value>_al_glGetQueryIndexediv</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>





<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_blend_color</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBlendColorEXT</name></cpp:macro> <cpp:value>_al_glBlendColorEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_polygon_offset</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPolygonOffsetEXT</name></cpp:macro> <cpp:value>_al_glPolygonOffsetEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_texture3D</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexImage3DEXT</name></cpp:macro> <cpp:value>_al_glTexImage3DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexSubImage3DEXT</name></cpp:macro> <cpp:value>_al_glTexSubImage3DEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SGIS_texture_filter4</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetTexFilterFuncSGIS</name></cpp:macro> <cpp:value>_al_glGetTexFilterFuncSGIS</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexFilterFuncSGIS</name></cpp:macro> <cpp:value>_al_glTexFilterFuncSGIS</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_subtexture</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexSubImage1DEXT</name></cpp:macro> <cpp:value>_al_glTexSubImage1DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexSubImage2DEXT</name></cpp:macro> <cpp:value>_al_glTexSubImage2DEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_copy_texture</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyTexImage1DEXT</name></cpp:macro> <cpp:value>_al_glCopyTexImage1DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyTexImage2DEXT</name></cpp:macro> <cpp:value>_al_glCopyTexImage2DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyTexSubImage1DEXT</name></cpp:macro> <cpp:value>_al_glCopyTexSubImage1DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyTexSubImage2DEXT</name></cpp:macro> <cpp:value>_al_glCopyTexSubImage2DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyTexSubImage3DEXT</name></cpp:macro> <cpp:value>_al_glCopyTexSubImage3DEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_histogram</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetHistogramEXT</name></cpp:macro> <cpp:value>_al_glGetHistogramEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetHistogramParameterfvEXT</name></cpp:macro> <cpp:value>_al_glGetHistogramParameterfvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetHistogramParameterivEXT</name></cpp:macro> <cpp:value>_al_glGetHistogramParameterivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMinmaxEXT</name></cpp:macro> <cpp:value>_al_glGetMinmaxEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMinmaxParameterfvEXT</name></cpp:macro> <cpp:value>_al_glGetMinmaxParameterfvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMinmaxParameterivEXT</name></cpp:macro> <cpp:value>_al_glGetMinmaxParameterivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glHistogramEXT</name></cpp:macro> <cpp:value>_al_glHistogramEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMinmaxEXT</name></cpp:macro> <cpp:value>_al_glMinmaxEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glResetHistogramEXT</name></cpp:macro> <cpp:value>_al_glResetHistogramEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glResetMinmaxEXT</name></cpp:macro> <cpp:value>_al_glResetMinmaxEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_convolution</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glConvolutionFilter1DEXT</name></cpp:macro> <cpp:value>_al_glConvolutionFilter1DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glConvolutionFilter2DEXT</name></cpp:macro> <cpp:value>_al_glConvolutionFilter2DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glConvolutionParameterfEXT</name></cpp:macro> <cpp:value>_al_glConvolutionParameterfEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glConvolutionParameterfvEXT</name></cpp:macro> <cpp:value>_al_glConvolutionParameterfvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glConvolutionParameteriEXT</name></cpp:macro> <cpp:value>_al_glConvolutionParameteriEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glConvolutionParameterivEXT</name></cpp:macro> <cpp:value>_al_glConvolutionParameterivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyConvolutionFilter1DEXT</name></cpp:macro> <cpp:value>_al_glCopyConvolutionFilter1DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyConvolutionFilter2DEXT</name></cpp:macro> <cpp:value>_al_glCopyConvolutionFilter2DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetConvolutionFilterEXT</name></cpp:macro> <cpp:value>_al_glGetConvolutionFilterEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetConvolutionParameterfvEXT</name></cpp:macro> <cpp:value>_al_glGetConvolutionParameterfvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetConvolutionParameterivEXT</name></cpp:macro> <cpp:value>_al_glGetConvolutionParameterivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetSeparableFilterEXT</name></cpp:macro> <cpp:value>_al_glGetSeparableFilterEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSeparableFilter2DEXT</name></cpp:macro> <cpp:value>_al_glSeparableFilter2DEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SGI_color_table</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColorTableSGI</name></cpp:macro> <cpp:value>_al_glColorTableSGI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColorTableParameterfvSGI</name></cpp:macro> <cpp:value>_al_glColorTableParameterfvSGI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColorTableParameterivSGI</name></cpp:macro> <cpp:value>_al_glColorTableParameterivSGI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyColorTableSGI</name></cpp:macro> <cpp:value>_al_glCopyColorTableSGI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetColorTableSGI</name></cpp:macro> <cpp:value>_al_glGetColorTableSGI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetColorTableParameterfvSGI</name></cpp:macro> <cpp:value>_al_glGetColorTableParameterfvSGI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetColorTableParameterivSGI</name></cpp:macro> <cpp:value>_al_glGetColorTableParameterivSGI</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SGIX_pixel_texture</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPixelTexGenSGIX</name></cpp:macro> <cpp:value>_al_glPixelTexGenSGIX</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SGIS_pixel_texture</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPixelTexGenParameteriSGIS</name></cpp:macro> <cpp:value>_al_glPixelTexGenParameteriSGIS</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPixelTexGenParameterivSGIS</name></cpp:macro> <cpp:value>_al_glPixelTexGenParameterivSGIS</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPixelTexGenParameterfSGIS</name></cpp:macro> <cpp:value>_al_glPixelTexGenParameterfSGIS</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPixelTexGenParameterfvSGIS</name></cpp:macro> <cpp:value>_al_glPixelTexGenParameterfvSGIS</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetPixelTexGenParameterivSGIS</name></cpp:macro> <cpp:value>_al_glGetPixelTexGenParameterivSGIS</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetPixelTexGenParameterfvSGIS</name></cpp:macro> <cpp:value>_al_glGetPixelTexGenParameterfvSGIS</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SGIS_texture4D</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexImage4DSGIS</name></cpp:macro> <cpp:value>_al_glTexImage4DSGIS</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexSubImage4DSGIS</name></cpp:macro> <cpp:value>_al_glTexSubImage4DSGIS</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_texture_object</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glAreTexturesResidentEXT</name></cpp:macro> <cpp:value>_al_glAreTexturesResidentEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindTextureEXT</name></cpp:macro> <cpp:value>_al_glBindTextureEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteTexturesEXT</name></cpp:macro> <cpp:value>_al_glDeleteTexturesEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenTexturesEXT</name></cpp:macro> <cpp:value>_al_glGenTexturesEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsTextureEXT</name></cpp:macro> <cpp:value>_al_glIsTextureEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPrioritizeTexturesEXT</name></cpp:macro> <cpp:value>_al_glPrioritizeTexturesEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SGIS_detail_texture</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDetailTexFuncSGIS</name></cpp:macro> <cpp:value>_al_glDetailTexFuncSGIS</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetDetailTexFuncSGIS</name></cpp:macro> <cpp:value>_al_glGetDetailTexFuncSGIS</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SGIS_sharpen_texture</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSharpenTexFuncSGIS</name></cpp:macro> <cpp:value>_al_glSharpenTexFuncSGIS</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetSharpenTexFuncSGIS</name></cpp:macro> <cpp:value>_al_glGetSharpenTexFuncSGIS</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SGIS_multisample</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSampleMaskSGIS</name></cpp:macro> <cpp:value>_al_glSampleMaskSGIS</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSamplePatternSGIS</name></cpp:macro> <cpp:value>_al_glSamplePatternSGIS</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_vertex_array</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glArrayElementEXT</name></cpp:macro> <cpp:value>_al_glArrayElementEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColorPointerEXT</name></cpp:macro> <cpp:value>_al_glColorPointerEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDrawArraysEXT</name></cpp:macro> <cpp:value>_al_glDrawArraysEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEdgeFlagPointerEXT</name></cpp:macro> <cpp:value>_al_glEdgeFlagPointerEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetPointervEXT</name></cpp:macro> <cpp:value>_al_glGetPointervEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIndexPointerEXT</name></cpp:macro> <cpp:value>_al_glIndexPointerEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNormalPointerEXT</name></cpp:macro> <cpp:value>_al_glNormalPointerEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoordPointerEXT</name></cpp:macro> <cpp:value>_al_glTexCoordPointerEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexPointerEXT</name></cpp:macro> <cpp:value>_al_glVertexPointerEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_blend_minmax</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBlendEquationEXT</name></cpp:macro> <cpp:value>_al_glBlendEquationEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SGIX_sprite</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSpriteParameterfSGIX</name></cpp:macro> <cpp:value>_al_glSpriteParameterfSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSpriteParameterfvSGIX</name></cpp:macro> <cpp:value>_al_glSpriteParameterfvSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSpriteParameteriSGIX</name></cpp:macro> <cpp:value>_al_glSpriteParameteriSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSpriteParameterivSGIX</name></cpp:macro> <cpp:value>_al_glSpriteParameterivSGIX</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_point_parameters</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPointParameterfEXT</name></cpp:macro> <cpp:value>_al_glPointParameterfEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPointParameterfvEXT</name></cpp:macro> <cpp:value>_al_glPointParameterfvEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SGIS_point_parameters</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPointParameterfSGIS</name></cpp:macro> <cpp:value>_al_glPointParameterfSGIS</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPointParameterfvSGIS</name></cpp:macro> <cpp:value>_al_glPointParameterfvSGIS</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SGIX_instruments</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetInstrumentsSGIX</name></cpp:macro> <cpp:value>_al_glGetInstrumentsSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glInstrumentsBufferSGIX</name></cpp:macro> <cpp:value>_al_glInstrumentsBufferSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPollInstrumentsSGIX</name></cpp:macro> <cpp:value>_al_glPollInstrumentsSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glReadInstrumentsSGIX</name></cpp:macro> <cpp:value>_al_glReadInstrumentsSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glStartInstrumentsSGIX</name></cpp:macro> <cpp:value>_al_glStartInstrumentsSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glStopInstrumentsSGIX</name></cpp:macro> <cpp:value>_al_glStopInstrumentsSGIX</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SGIX_framezoom</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFrameZoomSGIX</name></cpp:macro> <cpp:value>_al_glFrameZoomSGIX</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SGIX_tag_sample_buffer</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTagSampleBufferSGIX</name></cpp:macro> <cpp:value>_al_glTagSampleBufferSGIX</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SGIX_polynomial_ffd</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeformationMap3dSGIX</name></cpp:macro> <cpp:value>_al_glDeformationMap3dSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeformationMap3fSGIX</name></cpp:macro> <cpp:value>_al_glDeformationMap3fSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeformSGIX</name></cpp:macro> <cpp:value>_al_glDeformSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glLoadIdentityDeformationMapSGIX</name></cpp:macro> <cpp:value>_al_glLoadIdentityDeformationMapSGIX</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SGIX_reference_plane</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glReferencePlaneSGIX</name></cpp:macro> <cpp:value>_al_glReferencePlaneSGIX</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SGIX_flush_raster</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFlushRasterSGIX</name></cpp:macro> <cpp:value>_al_glFlushRasterSGIX</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SGIS_fog_function</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFogFuncSGIS</name></cpp:macro> <cpp:value>_al_glFogFuncSGIS</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetFogFuncSGIS</name></cpp:macro> <cpp:value>_al_glGetFogFuncSGIS</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_HP_image_transform</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glImageTransformParameteriHP</name></cpp:macro> <cpp:value>_al_glImageTransformParameteriHP</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glImageTransformParameterfHP</name></cpp:macro> <cpp:value>_al_glImageTransformParameterfHP</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glImageTransformParameterivHP</name></cpp:macro> <cpp:value>_al_glImageTransformParameterivHP</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glImageTransformParameterfvHP</name></cpp:macro> <cpp:value>_al_glImageTransformParameterfvHP</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetImageTransformParameterivHP</name></cpp:macro> <cpp:value>_al_glGetImageTransformParameterivHP</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetImageTransformParameterfvHP</name></cpp:macro> <cpp:value>_al_glGetImageTransformParameterfvHP</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_color_subtable</name></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>GL_EXT_paletted_texture</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColorSubTableEXT</name></cpp:macro> <cpp:value>_al_glColorSubTableEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyColorSubTableEXT</name></cpp:macro> <cpp:value>_al_glCopyColorSubTableEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_PGI_misc_hints</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glHintPGI</name></cpp:macro> <cpp:value>_al_glHintPGI</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_paletted_texture</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColorTableEXT</name></cpp:macro> <cpp:value>_al_glColorTableEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetColorTableEXT</name></cpp:macro> <cpp:value>_al_glGetColorTableEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetColorTableParameterivEXT</name></cpp:macro> <cpp:value>_al_glGetColorTableParameterivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetColorTableParameterfvEXT</name></cpp:macro> <cpp:value>_al_glGetColorTableParameterfvEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SGIX_list_priority</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetListParameterfvSGIX</name></cpp:macro> <cpp:value>_al_glGetListParameterfvSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetListParameterivSGIX</name></cpp:macro> <cpp:value>_al_glGetListParameterivSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glListParameterfSGIX</name></cpp:macro> <cpp:value>_al_glListParameterfSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glListParameterfvSGIX</name></cpp:macro> <cpp:value>_al_glListParameterfvSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glListParameteriSGIX</name></cpp:macro> <cpp:value>_al_glListParameteriSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glListParameterivSGIX</name></cpp:macro> <cpp:value>_al_glListParameterivSGIX</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_index_material</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIndexMaterialEXT</name></cpp:macro> <cpp:value>_al_glIndexMaterialEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_index_func</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIndexFuncEXT</name></cpp:macro> <cpp:value>_al_glIndexFuncEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_compiled_vertex_array</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glLockArraysEXT</name></cpp:macro> <cpp:value>_al_glLockArraysEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUnlockArraysEXT</name></cpp:macro> <cpp:value>_al_glUnlockArraysEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_cull_vertex</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCullParameterdvEXT</name></cpp:macro> <cpp:value>_al_glCullParameterdvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCullParameterfvEXT</name></cpp:macro> <cpp:value>_al_glCullParameterfvEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SGIX_fragment_lighting</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFragmentColorMaterialSGIX</name></cpp:macro> <cpp:value>_al_glFragmentColorMaterialSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFragmentLightfSGIX</name></cpp:macro> <cpp:value>_al_glFragmentLightfSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFragmentLightfvSGIX</name></cpp:macro> <cpp:value>_al_glFragmentLightfvSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFragmentLightiSGIX</name></cpp:macro> <cpp:value>_al_glFragmentLightiSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFragmentLightivSGIX</name></cpp:macro> <cpp:value>_al_glFragmentLightivSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFragmentLightModelfSGIX</name></cpp:macro> <cpp:value>_al_glFragmentLightModelfSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFragmentLightModelfvSGIX</name></cpp:macro> <cpp:value>_al_glFragmentLightModelfvSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFragmentLightModeliSGIX</name></cpp:macro> <cpp:value>_al_glFragmentLightModeliSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFragmentLightModelivSGIX</name></cpp:macro> <cpp:value>_al_glFragmentLightModelivSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFragmentMaterialfSGIX</name></cpp:macro> <cpp:value>_al_glFragmentMaterialfSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFragmentMaterialfvSGIX</name></cpp:macro> <cpp:value>_al_glFragmentMaterialfvSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFragmentMaterialiSGIX</name></cpp:macro> <cpp:value>_al_glFragmentMaterialiSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFragmentMaterialivSGIX</name></cpp:macro> <cpp:value>_al_glFragmentMaterialivSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetFragmentLightfvSGIX</name></cpp:macro> <cpp:value>_al_glGetFragmentLightfvSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetFragmentLightivSGIX</name></cpp:macro> <cpp:value>_al_glGetFragmentLightivSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetFragmentMaterialfvSGIX</name></cpp:macro> <cpp:value>_al_glGetFragmentMaterialfvSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetFragmentMaterialivSGIX</name></cpp:macro> <cpp:value>_al_glGetFragmentMaterialivSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glLightEnviSGIX</name></cpp:macro> <cpp:value>_al_glLightEnviSGIX</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_draw_range_elements</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDrawRangeElementsEXT</name></cpp:macro> <cpp:value>_al_glDrawRangeElementsEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_light_texture</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glApplyTextureEXT</name></cpp:macro> <cpp:value>_al_glApplyTextureEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTextureLightEXT</name></cpp:macro> <cpp:value>_al_glTextureLightEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTextureMaterialEXT</name></cpp:macro> <cpp:value>_al_glTextureMaterialEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SGIX_async</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glAsyncMarkerSGIX</name></cpp:macro> <cpp:value>_al_glAsyncMarkerSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFinishAsyncSGIX</name></cpp:macro> <cpp:value>_al_glFinishAsyncSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPollAsyncSGIX</name></cpp:macro> <cpp:value>_al_glPollAsyncSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenAsyncMarkersSGIX</name></cpp:macro> <cpp:value>_al_glGenAsyncMarkersSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteAsyncMarkersSGIX</name></cpp:macro> <cpp:value>_al_glDeleteAsyncMarkersSGIX</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsAsyncMarkerSGIX</name></cpp:macro> <cpp:value>_al_glIsAsyncMarkerSGIX</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_INTEL_parallel_arrays</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexPointervINTEL</name></cpp:macro> <cpp:value>_al_glVertexPointervINTEL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNormalPointervINTEL</name></cpp:macro> <cpp:value>_al_glNormalPointervINTEL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColorPointervINTEL</name></cpp:macro> <cpp:value>_al_glColorPointervINTEL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoordPointervINTEL</name></cpp:macro> <cpp:value>_al_glTexCoordPointervINTEL</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_pixel_transform</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPixelTransformParameteriEXT</name></cpp:macro> <cpp:value>_al_glPixelTransformParameteriEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPixelTransformParameterfEXT</name></cpp:macro> <cpp:value>_al_glPixelTransformParameterfEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPixelTransformParameterivEXT</name></cpp:macro> <cpp:value>_al_glPixelTransformParameterivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPixelTransformParameterfvEXT</name></cpp:macro> <cpp:value>_al_glPixelTransformParameterfvEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_secondary_color</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3bEXT</name></cpp:macro> <cpp:value>_al_glSecondaryColor3bEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3bvEXT</name></cpp:macro> <cpp:value>_al_glSecondaryColor3bvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3dEXT</name></cpp:macro> <cpp:value>_al_glSecondaryColor3dEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3dvEXT</name></cpp:macro> <cpp:value>_al_glSecondaryColor3dvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3fEXT</name></cpp:macro> <cpp:value>_al_glSecondaryColor3fEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3fvEXT</name></cpp:macro> <cpp:value>_al_glSecondaryColor3fvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3iEXT</name></cpp:macro> <cpp:value>_al_glSecondaryColor3iEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3ivEXT</name></cpp:macro> <cpp:value>_al_glSecondaryColor3ivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3sEXT</name></cpp:macro> <cpp:value>_al_glSecondaryColor3sEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3svEXT</name></cpp:macro> <cpp:value>_al_glSecondaryColor3svEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3ubEXT</name></cpp:macro> <cpp:value>_al_glSecondaryColor3ubEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3ubvEXT</name></cpp:macro> <cpp:value>_al_glSecondaryColor3ubvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3uiEXT</name></cpp:macro> <cpp:value>_al_glSecondaryColor3uiEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3uivEXT</name></cpp:macro> <cpp:value>_al_glSecondaryColor3uivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3usEXT</name></cpp:macro> <cpp:value>_al_glSecondaryColor3usEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3usvEXT</name></cpp:macro> <cpp:value>_al_glSecondaryColor3usvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColorPointerEXT</name></cpp:macro> <cpp:value>_al_glSecondaryColorPointerEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_texture_perturb_normal</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTextureNormalEXT</name></cpp:macro> <cpp:value>_al_glTextureNormalEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_multi_draw_arrays</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiDrawArraysEXT</name></cpp:macro> <cpp:value>_al_glMultiDrawArraysEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiDrawElementsEXT</name></cpp:macro> <cpp:value>_al_glMultiDrawElementsEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_fog_coord</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFogCoordfEXT</name></cpp:macro> <cpp:value>_al_glFogCoordfEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFogCoordfvEXT</name></cpp:macro> <cpp:value>_al_glFogCoordfvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFogCoorddEXT</name></cpp:macro> <cpp:value>_al_glFogCoorddEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFogCoorddvEXT</name></cpp:macro> <cpp:value>_al_glFogCoorddvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFogCoordPointerEXT</name></cpp:macro> <cpp:value>_al_glFogCoordPointerEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_coordinate_frame</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTangent3bEXT</name></cpp:macro> <cpp:value>_al_glTangent3bEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTangent3bvEXT</name></cpp:macro> <cpp:value>_al_glTangent3bvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTangent3dEXT</name></cpp:macro> <cpp:value>_al_glTangent3dEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTangent3dvEXT</name></cpp:macro> <cpp:value>_al_glTangent3dvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTangent3fEXT</name></cpp:macro> <cpp:value>_al_glTangent3fEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTangent3fvEXT</name></cpp:macro> <cpp:value>_al_glTangent3fvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTangent3iEXT</name></cpp:macro> <cpp:value>_al_glTangent3iEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTangent3ivEXT</name></cpp:macro> <cpp:value>_al_glTangent3ivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTangent3sEXT</name></cpp:macro> <cpp:value>_al_glTangent3sEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTangent3svEXT</name></cpp:macro> <cpp:value>_al_glTangent3svEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBinormal3bEXT</name></cpp:macro> <cpp:value>_al_glBinormal3bEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBinormal3bvEXT</name></cpp:macro> <cpp:value>_al_glBinormal3bvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBinormal3dEXT</name></cpp:macro> <cpp:value>_al_glBinormal3dEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBinormal3dvEXT</name></cpp:macro> <cpp:value>_al_glBinormal3dvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBinormal3fEXT</name></cpp:macro> <cpp:value>_al_glBinormal3fEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBinormal3fvEXT</name></cpp:macro> <cpp:value>_al_glBinormal3fvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBinormal3iEXT</name></cpp:macro> <cpp:value>_al_glBinormal3iEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBinormal3ivEXT</name></cpp:macro> <cpp:value>_al_glBinormal3ivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBinormal3sEXT</name></cpp:macro> <cpp:value>_al_glBinormal3sEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBinormal3svEXT</name></cpp:macro> <cpp:value>_al_glBinormal3svEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTangentPointerEXT</name></cpp:macro> <cpp:value>_al_glTangentPointerEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBinormalPointerEXT</name></cpp:macro> <cpp:value>_al_glBinormalPointerEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SUNX_constant_data</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFinishTextureSUNX</name></cpp:macro> <cpp:value>_al_glFinishTextureSUNX</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SUN_global_alpha</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGlobalAlphaFactorbSUN</name></cpp:macro> <cpp:value>_al_glGlobalAlphaFactorbSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGlobalAlphaFactorsSUN</name></cpp:macro> <cpp:value>_al_glGlobalAlphaFactorsSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGlobalAlphaFactoriSUN</name></cpp:macro> <cpp:value>_al_glGlobalAlphaFactoriSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGlobalAlphaFactorfSUN</name></cpp:macro> <cpp:value>_al_glGlobalAlphaFactorfSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGlobalAlphaFactordSUN</name></cpp:macro> <cpp:value>_al_glGlobalAlphaFactordSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGlobalAlphaFactorubSUN</name></cpp:macro> <cpp:value>_al_glGlobalAlphaFactorubSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGlobalAlphaFactorusSUN</name></cpp:macro> <cpp:value>_al_glGlobalAlphaFactorusSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGlobalAlphaFactoruiSUN</name></cpp:macro> <cpp:value>_al_glGlobalAlphaFactoruiSUN</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SUN_triangle_list</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glReplacementCodeuiSUN</name></cpp:macro> <cpp:value>_al_glReplacementCodeuiSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glReplacementCodeusSUN</name></cpp:macro> <cpp:value>_al_glReplacementCodeusSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glReplacementCodeubSUN</name></cpp:macro> <cpp:value>_al_glReplacementCodeubSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glReplacementCodeuivSUN</name></cpp:macro> <cpp:value>_al_glReplacementCodeuivSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glReplacementCodeusvSUN</name></cpp:macro> <cpp:value>_al_glReplacementCodeusvSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glReplacementCodeubvSUN</name></cpp:macro> <cpp:value>_al_glReplacementCodeubvSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glReplacementCodePointerSUN</name></cpp:macro> <cpp:value>_al_glReplacementCodePointerSUN</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SUN_vertex</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColor4ubVertex2fSUN</name></cpp:macro> <cpp:value>_al_glColor4ubVertex2fSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColor4ubVertex2fvSUN</name></cpp:macro> <cpp:value>_al_glColor4ubVertex2fvSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColor4ubVertex3fSUN</name></cpp:macro> <cpp:value>_al_glColor4ubVertex3fSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColor4ubVertex3fvSUN</name></cpp:macro> <cpp:value>_al_glColor4ubVertex3fvSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColor3fVertex3fSUN</name></cpp:macro> <cpp:value>_al_glColor3fVertex3fSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColor3fVertex3fvSUN</name></cpp:macro> <cpp:value>_al_glColor3fVertex3fvSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNormal3fVertex3fSUN</name></cpp:macro> <cpp:value>_al_glNormal3fVertex3fSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNormal3fVertex3fvSUN</name></cpp:macro> <cpp:value>_al_glNormal3fVertex3fvSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColor4fNormal3fVertex3fSUN</name></cpp:macro> <cpp:value>_al_glColor4fNormal3fVertex3fSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColor4fNormal3fVertex3fvSUN</name></cpp:macro> <cpp:value>_al_glColor4fNormal3fVertex3fvSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord2fVertex3fSUN</name></cpp:macro> <cpp:value>_al_glTexCoord2fVertex3fSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord2fVertex3fvSUN</name></cpp:macro> <cpp:value>_al_glTexCoord2fVertex3fvSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord4fVertex4fSUN</name></cpp:macro> <cpp:value>_al_glTexCoord4fVertex4fSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord4fVertex4fvSUN</name></cpp:macro> <cpp:value>_al_glTexCoord4fVertex4fvSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord2fColor4ubVertex3fSUN</name></cpp:macro> <cpp:value>_al_glTexCoord2fColor4ubVertex3fSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord2fColor4ubVertex3fvSUN</name></cpp:macro> <cpp:value>_al_glTexCoord2fColor4ubVertex3fvSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord2fColor3fVertex3fSUN</name></cpp:macro> <cpp:value>_al_glTexCoord2fColor3fVertex3fSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord2fColor3fVertex3fvSUN</name></cpp:macro> <cpp:value>_al_glTexCoord2fColor3fVertex3fvSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord2fNormal3fVertex3fSUN</name></cpp:macro> <cpp:value>_al_glTexCoord2fNormal3fVertex3fSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord2fNormal3fVertex3fvSUN</name></cpp:macro> <cpp:value>_al_glTexCoord2fNormal3fVertex3fvSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord2fColor4fNormal3fVertex3fSUN</name></cpp:macro> <cpp:value>_al_glTexCoord2fColor4fNormal3fVertex3fSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord2fColor4fNormal3fVertex3fvSUN</name></cpp:macro> <cpp:value>_al_glTexCoord2fColor4fNormal3fVertex3fvSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord4fColor4fNormal3fVertex4fSUN</name></cpp:macro> <cpp:value>_al_glTexCoord4fColor4fNormal3fVertex4fSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord4fColor4fNormal3fVertex4fvSUN</name></cpp:macro> <cpp:value>_al_glTexCoord4fColor4fNormal3fVertex4fvSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glReplacementCodeuiVertex3fSUN</name></cpp:macro> <cpp:value>_al_glReplacementCodeuiVertex3fSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glReplacementCodeuiVertex3fvSUN</name></cpp:macro> <cpp:value>_al_glReplacementCodeuiVertex3fvSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glReplacementCodeuiColor4ubVertex3fSUN</name></cpp:macro> <cpp:value>_al_glReplacementCodeuiColor4ubVertex3fSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glReplacementCodeuiColor4ubVertex3fvSUN</name></cpp:macro> <cpp:value>_al_glReplacementCodeuiColor4ubVertex3fvSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glReplacementCodeuiColor3fVertex3fSUN</name></cpp:macro> <cpp:value>_al_glReplacementCodeuiColor3fVertex3fSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glReplacementCodeuiColor3fVertex3fvSUN</name></cpp:macro> <cpp:value>_al_glReplacementCodeuiColor3fVertex3fvSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glReplacementCodeuiNormal3fVertex3fSUN</name></cpp:macro> <cpp:value>_al_glReplacementCodeuiNormal3fVertex3fSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glReplacementCodeuiNormal3fVertex3fvSUN</name></cpp:macro> <cpp:value>_al_glReplacementCodeuiNormal3fVertex3fvSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glReplacementCodeuiColor4fNormal3fVertex3fSUN</name></cpp:macro> <cpp:value>_al_glReplacementCodeuiColor4fNormal3fVertex3fSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glReplacementCodeuiColor4fNormal3fVertex3fvSUN</name></cpp:macro> <cpp:value>_al_glReplacementCodeuiColor4fNormal3fVertex3fvSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glReplacementCodeuiTexCoord2fVertex3fSUN</name></cpp:macro> <cpp:value>_al_glReplacementCodeuiTexCoord2fVertex3fSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glReplacementCodeuiTexCoord2fVertex3fvSUN</name></cpp:macro> <cpp:value>_al_glReplacementCodeuiTexCoord2fVertex3fvSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN</name></cpp:macro> <cpp:value>_al_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN</name></cpp:macro> <cpp:value>_al_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN</name></cpp:macro> <cpp:value>_al_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN</name></cpp:macro> <cpp:value>_al_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_blend_func_separate</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBlendFuncSeparateEXT</name></cpp:macro> <cpp:value>_al_glBlendFuncSeparateEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_INGR_blend_func_separate</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBlendFuncSeparateINGR</name></cpp:macro> <cpp:value>_al_glBlendFuncSeparateINGR</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_vertex_weighting</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexWeightfEXT</name></cpp:macro> <cpp:value>_al_glVertexWeightfEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexWeightfvEXT</name></cpp:macro> <cpp:value>_al_glVertexWeightfvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexWeightPointerEXT</name></cpp:macro> <cpp:value>_al_glVertexWeightPointerEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_vertex_array_range</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFlushVertexArrayRangeNV</name></cpp:macro> <cpp:value>_al_glFlushVertexArrayRangeNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexArrayRangeNV</name></cpp:macro> <cpp:value>_al_glVertexArrayRangeNV</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_register_combiners</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCombinerParameterfvNV</name></cpp:macro> <cpp:value>_al_glCombinerParameterfvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCombinerParameterfNV</name></cpp:macro> <cpp:value>_al_glCombinerParameterfNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCombinerParameterivNV</name></cpp:macro> <cpp:value>_al_glCombinerParameterivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCombinerParameteriNV</name></cpp:macro> <cpp:value>_al_glCombinerParameteriNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCombinerInputNV</name></cpp:macro> <cpp:value>_al_glCombinerInputNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCombinerOutputNV</name></cpp:macro> <cpp:value>_al_glCombinerOutputNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFinalCombinerInputNV</name></cpp:macro> <cpp:value>_al_glFinalCombinerInputNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetCombinerInputParameterfvNV</name></cpp:macro> <cpp:value>_al_glGetCombinerInputParameterfvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetCombinerInputParameterivNV</name></cpp:macro> <cpp:value>_al_glGetCombinerInputParameterivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetCombinerOutputParameterfvNV</name></cpp:macro> <cpp:value>_al_glGetCombinerOutputParameterfvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetCombinerOutputParameterivNV</name></cpp:macro> <cpp:value>_al_glGetCombinerOutputParameterivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetFinalCombinerInputParameterfvNV</name></cpp:macro> <cpp:value>_al_glGetFinalCombinerInputParameterfvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetFinalCombinerInputParameterivNV</name></cpp:macro> <cpp:value>_al_glGetFinalCombinerInputParameterivNV</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_MESA_resize_buffers</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glResizeBuffersMESA</name></cpp:macro> <cpp:value>_al_glResizeBuffersMESA</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_MESA_window_pos</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos2dMESA</name></cpp:macro> <cpp:value>_al_glWindowPos2dMESA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos2dvMESA</name></cpp:macro> <cpp:value>_al_glWindowPos2dvMESA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos2fMESA</name></cpp:macro> <cpp:value>_al_glWindowPos2fMESA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos2fvMESA</name></cpp:macro> <cpp:value>_al_glWindowPos2fvMESA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos2iMESA</name></cpp:macro> <cpp:value>_al_glWindowPos2iMESA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos2ivMESA</name></cpp:macro> <cpp:value>_al_glWindowPos2ivMESA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos2sMESA</name></cpp:macro> <cpp:value>_al_glWindowPos2sMESA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos2svMESA</name></cpp:macro> <cpp:value>_al_glWindowPos2svMESA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos3dMESA</name></cpp:macro> <cpp:value>_al_glWindowPos3dMESA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos3dvMESA</name></cpp:macro> <cpp:value>_al_glWindowPos3dvMESA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos3fMESA</name></cpp:macro> <cpp:value>_al_glWindowPos3fMESA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos3fvMESA</name></cpp:macro> <cpp:value>_al_glWindowPos3fvMESA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos3iMESA</name></cpp:macro> <cpp:value>_al_glWindowPos3iMESA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos3ivMESA</name></cpp:macro> <cpp:value>_al_glWindowPos3ivMESA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos3sMESA</name></cpp:macro> <cpp:value>_al_glWindowPos3sMESA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos3svMESA</name></cpp:macro> <cpp:value>_al_glWindowPos3svMESA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos4dMESA</name></cpp:macro> <cpp:value>_al_glWindowPos4dMESA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos4dvMESA</name></cpp:macro> <cpp:value>_al_glWindowPos4dvMESA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos4fMESA</name></cpp:macro> <cpp:value>_al_glWindowPos4fMESA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos4fvMESA</name></cpp:macro> <cpp:value>_al_glWindowPos4fvMESA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos4iMESA</name></cpp:macro> <cpp:value>_al_glWindowPos4iMESA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos4ivMESA</name></cpp:macro> <cpp:value>_al_glWindowPos4ivMESA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos4sMESA</name></cpp:macro> <cpp:value>_al_glWindowPos4sMESA</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWindowPos4svMESA</name></cpp:macro> <cpp:value>_al_glWindowPos4svMESA</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_IBM_multimode_draw_arrays</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiModeDrawArraysIBM</name></cpp:macro> <cpp:value>_al_glMultiModeDrawArraysIBM</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiModeDrawElementsIBM</name></cpp:macro> <cpp:value>_al_glMultiModeDrawElementsIBM</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>AGK_IBM_vertex_array_lists</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColorPointerListIBM</name></cpp:macro> <cpp:value>_al_glColorPointerListIBM</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColorPointerListIBM</name></cpp:macro> <cpp:value>_al_glSecondaryColorPointerListIBM</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEdgeFlagPointerListIBM</name></cpp:macro> <cpp:value>_al_glEdgeFlagPointerListIBM</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFogCoordPointerListIBM</name></cpp:macro> <cpp:value>_al_glFogCoordPointerListIBM</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIndexPointerListIBM</name></cpp:macro> <cpp:value>_al_glIndexPointerListIBM</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNormalPointerListIBM</name></cpp:macro> <cpp:value>_al_glNormalPointerListIBM</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoordPointerListIBM</name></cpp:macro> <cpp:value>_al_glTexCoordPointerListIBM</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexPointerListIBM</name></cpp:macro> <cpp:value>_al_glVertexPointerListIBM</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_3DFX_tbuffer</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTbufferMask3DFX</name></cpp:macro> <cpp:value>_al_glTbufferMask3DFX</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_multisample</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSampleMaskEXT</name></cpp:macro> <cpp:value>_al_glSampleMaskEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSamplePatternEXT</name></cpp:macro> <cpp:value>_al_glSamplePatternEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SGIS_texture_color_mask</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTextureColorMaskSGIS</name></cpp:macro> <cpp:value>_al_glTextureColorMaskSGIS</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SGIX_igloo_interface</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIglooInterfaceSGIX</name></cpp:macro> <cpp:value>_al_glIglooInterfaceSGIX</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_fence</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteFencesNV</name></cpp:macro> <cpp:value>_al_glDeleteFencesNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenFencesNV</name></cpp:macro> <cpp:value>_al_glGenFencesNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsFenceNV</name></cpp:macro> <cpp:value>_al_glIsFenceNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTestFenceNV</name></cpp:macro> <cpp:value>_al_glTestFenceNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetFenceivNV</name></cpp:macro> <cpp:value>_al_glGetFenceivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFinishFenceNV</name></cpp:macro> <cpp:value>_al_glFinishFenceNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSetFenceNV</name></cpp:macro> <cpp:value>_al_glSetFenceNV</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_evaluators</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMapControlPointsNV</name></cpp:macro> <cpp:value>_al_glMapControlPointsNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMapParameterivNV</name></cpp:macro> <cpp:value>_al_glMapParameterivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMapParameterfvNV</name></cpp:macro> <cpp:value>_al_glMapParameterfvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMapControlPointsNV</name></cpp:macro> <cpp:value>_al_glGetMapControlPointsNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMapParameterivNV</name></cpp:macro> <cpp:value>_al_glGetMapParameterivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMapParameterfvNV</name></cpp:macro> <cpp:value>_al_glGetMapParameterfvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMapAttribParameterivNV</name></cpp:macro> <cpp:value>_al_glGetMapAttribParameterivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMapAttribParameterfvNV</name></cpp:macro> <cpp:value>_al_glGetMapAttribParameterfvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEvalMapsNV</name></cpp:macro> <cpp:value>_al_glEvalMapsNV</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_register_combiners2</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCombinerStageParameterfvNV</name></cpp:macro> <cpp:value>_al_glCombinerStageParameterfvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetCombinerStageParameterfvNV</name></cpp:macro> <cpp:value>_al_glGetCombinerStageParameterfvNV</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_vertex_program</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glAreProgramsResidentNV</name></cpp:macro> <cpp:value>_al_glAreProgramsResidentNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindProgramNV</name></cpp:macro> <cpp:value>_al_glBindProgramNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteProgramsNV</name></cpp:macro> <cpp:value>_al_glDeleteProgramsNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glExecuteProgramNV</name></cpp:macro> <cpp:value>_al_glExecuteProgramNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenProgramsNV</name></cpp:macro> <cpp:value>_al_glGenProgramsNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramParameterdvNV</name></cpp:macro> <cpp:value>_al_glGetProgramParameterdvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramParameterfvNV</name></cpp:macro> <cpp:value>_al_glGetProgramParameterfvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramivNV</name></cpp:macro> <cpp:value>_al_glGetProgramivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramStringNV</name></cpp:macro> <cpp:value>_al_glGetProgramStringNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetTrackMatrixivNV</name></cpp:macro> <cpp:value>_al_glGetTrackMatrixivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVertexAttribdvNV</name></cpp:macro> <cpp:value>_al_glGetVertexAttribdvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVertexAttribfvNV</name></cpp:macro> <cpp:value>_al_glGetVertexAttribfvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVertexAttribivNV</name></cpp:macro> <cpp:value>_al_glGetVertexAttribivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVertexAttribPointervNV</name></cpp:macro> <cpp:value>_al_glGetVertexAttribPointervNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsProgramNV</name></cpp:macro> <cpp:value>_al_glIsProgramNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glLoadProgramNV</name></cpp:macro> <cpp:value>_al_glLoadProgramNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramParameter4dNV</name></cpp:macro> <cpp:value>_al_glProgramParameter4dNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramParameter4dvNV</name></cpp:macro> <cpp:value>_al_glProgramParameter4dvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramParameter4fNV</name></cpp:macro> <cpp:value>_al_glProgramParameter4fNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramParameter4fvNV</name></cpp:macro> <cpp:value>_al_glProgramParameter4fvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramParameters4dvNV</name></cpp:macro> <cpp:value>_al_glProgramParameters4dvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramParameters4fvNV</name></cpp:macro> <cpp:value>_al_glProgramParameters4fvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glRequestResidentProgramsNV</name></cpp:macro> <cpp:value>_al_glRequestResidentProgramsNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTrackMatrixNV</name></cpp:macro> <cpp:value>_al_glTrackMatrixNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribPointerNV</name></cpp:macro> <cpp:value>_al_glVertexAttribPointerNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1dNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib1dNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1dvNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib1dvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1fNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib1fNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1fvNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib1fvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1sNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib1sNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1svNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib1svNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2dNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib2dNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2dvNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib2dvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2fNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib2fNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2fvNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib2fvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2sNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib2sNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2svNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib2svNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3dNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib3dNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3dvNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib3dvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3fNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib3fNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3fvNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib3fvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3sNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib3sNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3svNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib3svNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4dNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib4dNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4dvNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib4dvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4fNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib4fNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4fvNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib4fvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4sNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib4sNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4svNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib4svNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4ubNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib4ubNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4ubvNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib4ubvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribs1dvNV</name></cpp:macro> <cpp:value>_al_glVertexAttribs1dvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribs1fvNV</name></cpp:macro> <cpp:value>_al_glVertexAttribs1fvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribs1svNV</name></cpp:macro> <cpp:value>_al_glVertexAttribs1svNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribs2dvNV</name></cpp:macro> <cpp:value>_al_glVertexAttribs2dvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribs2fvNV</name></cpp:macro> <cpp:value>_al_glVertexAttribs2fvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribs2svNV</name></cpp:macro> <cpp:value>_al_glVertexAttribs2svNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribs3dvNV</name></cpp:macro> <cpp:value>_al_glVertexAttribs3dvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribs3fvNV</name></cpp:macro> <cpp:value>_al_glVertexAttribs3fvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribs3svNV</name></cpp:macro> <cpp:value>_al_glVertexAttribs3svNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribs4dvNV</name></cpp:macro> <cpp:value>_al_glVertexAttribs4dvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribs4fvNV</name></cpp:macro> <cpp:value>_al_glVertexAttribs4fvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribs4svNV</name></cpp:macro> <cpp:value>_al_glVertexAttribs4svNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribs4ubvNV</name></cpp:macro> <cpp:value>_al_glVertexAttribs4ubvNV</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ATI_envmap_bumpmap</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexBumpParameterivATI</name></cpp:macro> <cpp:value>_al_glTexBumpParameterivATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexBumpParameterfvATI</name></cpp:macro> <cpp:value>_al_glTexBumpParameterfvATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetTexBumpParameterivATI</name></cpp:macro> <cpp:value>_al_glGetTexBumpParameterivATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetTexBumpParameterfvATI</name></cpp:macro> <cpp:value>_al_glGetTexBumpParameterfvATI</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ATI_fragment_shader</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenFragmentShadersATI</name></cpp:macro> <cpp:value>_al_glGenFragmentShadersATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindFragmentShaderATI</name></cpp:macro> <cpp:value>_al_glBindFragmentShaderATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteFragmentShaderATI</name></cpp:macro> <cpp:value>_al_glDeleteFragmentShaderATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBeginFragmentShaderATI</name></cpp:macro> <cpp:value>_al_glBeginFragmentShaderATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEndFragmentShaderATI</name></cpp:macro> <cpp:value>_al_glEndFragmentShaderATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPassTexCoordATI</name></cpp:macro> <cpp:value>_al_glPassTexCoordATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSampleMapATI</name></cpp:macro> <cpp:value>_al_glSampleMapATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColorFragmentOp1ATI</name></cpp:macro> <cpp:value>_al_glColorFragmentOp1ATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColorFragmentOp2ATI</name></cpp:macro> <cpp:value>_al_glColorFragmentOp2ATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColorFragmentOp3ATI</name></cpp:macro> <cpp:value>_al_glColorFragmentOp3ATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glAlphaFragmentOp1ATI</name></cpp:macro> <cpp:value>_al_glAlphaFragmentOp1ATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glAlphaFragmentOp2ATI</name></cpp:macro> <cpp:value>_al_glAlphaFragmentOp2ATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glAlphaFragmentOp3ATI</name></cpp:macro> <cpp:value>_al_glAlphaFragmentOp3ATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSetFragmentShaderConstantATI</name></cpp:macro> <cpp:value>_al_glSetFragmentShaderConstantATI</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ATI_pn_triangles</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPNTrianglesiATI</name></cpp:macro> <cpp:value>_al_glPNTrianglesiATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPNTrianglesfATI</name></cpp:macro> <cpp:value>_al_glPNTrianglesfATI</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ATI_vertex_array_object</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNewObjectBufferATI</name></cpp:macro> <cpp:value>_al_glNewObjectBufferATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsObjectBufferATI</name></cpp:macro> <cpp:value>_al_glIsObjectBufferATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUpdateObjectBufferATI</name></cpp:macro> <cpp:value>_al_glUpdateObjectBufferATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetObjectBufferfvATI</name></cpp:macro> <cpp:value>_al_glGetObjectBufferfvATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetObjectBufferivATI</name></cpp:macro> <cpp:value>_al_glGetObjectBufferivATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFreeObjectBufferATI</name></cpp:macro> <cpp:value>_al_glFreeObjectBufferATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glArrayObjectATI</name></cpp:macro> <cpp:value>_al_glArrayObjectATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetArrayObjectfvATI</name></cpp:macro> <cpp:value>_al_glGetArrayObjectfvATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetArrayObjectivATI</name></cpp:macro> <cpp:value>_al_glGetArrayObjectivATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVariantArrayObjectATI</name></cpp:macro> <cpp:value>_al_glVariantArrayObjectATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVariantArrayObjectfvATI</name></cpp:macro> <cpp:value>_al_glGetVariantArrayObjectfvATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVariantArrayObjectivATI</name></cpp:macro> <cpp:value>_al_glGetVariantArrayObjectivATI</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_vertex_shader</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBeginVertexShaderEXT</name></cpp:macro> <cpp:value>_al_glBeginVertexShaderEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEndVertexShaderEXT</name></cpp:macro> <cpp:value>_al_glEndVertexShaderEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindVertexShaderEXT</name></cpp:macro> <cpp:value>_al_glBindVertexShaderEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenVertexShadersEXT</name></cpp:macro> <cpp:value>_al_glGenVertexShadersEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteVertexShaderEXT</name></cpp:macro> <cpp:value>_al_glDeleteVertexShaderEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glShaderOp1EXT</name></cpp:macro> <cpp:value>_al_glShaderOp1EXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glShaderOp2EXT</name></cpp:macro> <cpp:value>_al_glShaderOp2EXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glShaderOp3EXT</name></cpp:macro> <cpp:value>_al_glShaderOp3EXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSwizzleEXT</name></cpp:macro> <cpp:value>_al_glSwizzleEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glWriteMaskEXT</name></cpp:macro> <cpp:value>_al_glWriteMaskEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glInsertComponentEXT</name></cpp:macro> <cpp:value>_al_glInsertComponentEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glExtractComponentEXT</name></cpp:macro> <cpp:value>_al_glExtractComponentEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenSymbolsEXT</name></cpp:macro> <cpp:value>_al_glGenSymbolsEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSetInvariantEXT</name></cpp:macro> <cpp:value>_al_glSetInvariantEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSetLocalConstantEXT</name></cpp:macro> <cpp:value>_al_glSetLocalConstantEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVariantbvEXT</name></cpp:macro> <cpp:value>_al_glVariantbvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVariantsvEXT</name></cpp:macro> <cpp:value>_al_glVariantsvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVariantivEXT</name></cpp:macro> <cpp:value>_al_glVariantivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVariantfvEXT</name></cpp:macro> <cpp:value>_al_glVariantfvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVariantdvEXT</name></cpp:macro> <cpp:value>_al_glVariantdvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVariantubvEXT</name></cpp:macro> <cpp:value>_al_glVariantubvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVariantusvEXT</name></cpp:macro> <cpp:value>_al_glVariantusvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVariantuivEXT</name></cpp:macro> <cpp:value>_al_glVariantuivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVariantPointerEXT</name></cpp:macro> <cpp:value>_al_glVariantPointerEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEnableVariantClientStateEXT</name></cpp:macro> <cpp:value>_al_glEnableVariantClientStateEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDisableVariantClientStateEXT</name></cpp:macro> <cpp:value>_al_glDisableVariantClientStateEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindLightParameterEXT</name></cpp:macro> <cpp:value>_al_glBindLightParameterEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindMaterialParameterEXT</name></cpp:macro> <cpp:value>_al_glBindMaterialParameterEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindTexGenParameterEXT</name></cpp:macro> <cpp:value>_al_glBindTexGenParameterEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindTextureUnitParameterEXT</name></cpp:macro> <cpp:value>_al_glBindTextureUnitParameterEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindParameterEXT</name></cpp:macro> <cpp:value>_al_glBindParameterEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsVariantEnabledEXT</name></cpp:macro> <cpp:value>_al_glIsVariantEnabledEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVariantBooleanvEXT</name></cpp:macro> <cpp:value>_al_glGetVariantBooleanvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVariantIntegervEXT</name></cpp:macro> <cpp:value>_al_glGetVariantIntegervEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVariantFloatvEXT</name></cpp:macro> <cpp:value>_al_glGetVariantFloatvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVariantPointervEXT</name></cpp:macro> <cpp:value>_al_glGetVariantPointervEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetInvariantBooleanvEXT</name></cpp:macro> <cpp:value>_al_glGetInvariantBooleanvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetInvariantIntegervEXT</name></cpp:macro> <cpp:value>_al_glGetInvariantIntegervEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetInvariantFloatvEXT</name></cpp:macro> <cpp:value>_al_glGetInvariantFloatvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetLocalConstantBooleanvEXT</name></cpp:macro> <cpp:value>_al_glGetLocalConstantBooleanvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetLocalConstantIntegervEXT</name></cpp:macro> <cpp:value>_al_glGetLocalConstantIntegervEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetLocalConstantFloatvEXT</name></cpp:macro> <cpp:value>_al_glGetLocalConstantFloatvEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ATI_vertex_streams</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream1sATI</name></cpp:macro> <cpp:value>_al_glVertexStream1sATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream1svATI</name></cpp:macro> <cpp:value>_al_glVertexStream1svATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream1iATI</name></cpp:macro> <cpp:value>_al_glVertexStream1iATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream1ivATI</name></cpp:macro> <cpp:value>_al_glVertexStream1ivATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream1fATI</name></cpp:macro> <cpp:value>_al_glVertexStream1fATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream1fvATI</name></cpp:macro> <cpp:value>_al_glVertexStream1fvATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream1dATI</name></cpp:macro> <cpp:value>_al_glVertexStream1dATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream1dvATI</name></cpp:macro> <cpp:value>_al_glVertexStream1dvATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream2sATI</name></cpp:macro> <cpp:value>_al_glVertexStream2sATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream2svATI</name></cpp:macro> <cpp:value>_al_glVertexStream2svATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream2iATI</name></cpp:macro> <cpp:value>_al_glVertexStream2iATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream2ivATI</name></cpp:macro> <cpp:value>_al_glVertexStream2ivATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream2fATI</name></cpp:macro> <cpp:value>_al_glVertexStream2fATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream2fvATI</name></cpp:macro> <cpp:value>_al_glVertexStream2fvATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream2dATI</name></cpp:macro> <cpp:value>_al_glVertexStream2dATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream2dvATI</name></cpp:macro> <cpp:value>_al_glVertexStream2dvATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream3sATI</name></cpp:macro> <cpp:value>_al_glVertexStream3sATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream3svATI</name></cpp:macro> <cpp:value>_al_glVertexStream3svATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream3iATI</name></cpp:macro> <cpp:value>_al_glVertexStream3iATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream3ivATI</name></cpp:macro> <cpp:value>_al_glVertexStream3ivATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream3fATI</name></cpp:macro> <cpp:value>_al_glVertexStream3fATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream3fvATI</name></cpp:macro> <cpp:value>_al_glVertexStream3fvATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream3dATI</name></cpp:macro> <cpp:value>_al_glVertexStream3dATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream3dvATI</name></cpp:macro> <cpp:value>_al_glVertexStream3dvATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream4sATI</name></cpp:macro> <cpp:value>_al_glVertexStream4sATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream4svATI</name></cpp:macro> <cpp:value>_al_glVertexStream4svATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream4iATI</name></cpp:macro> <cpp:value>_al_glVertexStream4iATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream4ivATI</name></cpp:macro> <cpp:value>_al_glVertexStream4ivATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream4fATI</name></cpp:macro> <cpp:value>_al_glVertexStream4fATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream4fvATI</name></cpp:macro> <cpp:value>_al_glVertexStream4fvATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream4dATI</name></cpp:macro> <cpp:value>_al_glVertexStream4dATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexStream4dvATI</name></cpp:macro> <cpp:value>_al_glVertexStream4dvATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNormalStream3bATI</name></cpp:macro> <cpp:value>_al_glNormalStream3bATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNormalStream3bvATI</name></cpp:macro> <cpp:value>_al_glNormalStream3bvATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNormalStream3sATI</name></cpp:macro> <cpp:value>_al_glNormalStream3sATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNormalStream3svATI</name></cpp:macro> <cpp:value>_al_glNormalStream3svATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNormalStream3iATI</name></cpp:macro> <cpp:value>_al_glNormalStream3iATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNormalStream3ivATI</name></cpp:macro> <cpp:value>_al_glNormalStream3ivATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNormalStream3fATI</name></cpp:macro> <cpp:value>_al_glNormalStream3fATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNormalStream3fvATI</name></cpp:macro> <cpp:value>_al_glNormalStream3fvATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNormalStream3dATI</name></cpp:macro> <cpp:value>_al_glNormalStream3dATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNormalStream3dvATI</name></cpp:macro> <cpp:value>_al_glNormalStream3dvATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glClientActiveVertexStreamATI</name></cpp:macro> <cpp:value>_al_glClientActiveVertexStreamATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexBlendEnviATI</name></cpp:macro> <cpp:value>_al_glVertexBlendEnviATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexBlendEnvfATI</name></cpp:macro> <cpp:value>_al_glVertexBlendEnvfATI</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ATI_element_array</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glElementPointerATI</name></cpp:macro> <cpp:value>_al_glElementPointerATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDrawElementArrayATI</name></cpp:macro> <cpp:value>_al_glDrawElementArrayATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDrawRangeElementArrayATI</name></cpp:macro> <cpp:value>_al_glDrawRangeElementArrayATI</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_SUN_mesh_array</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDrawMeshArraysSUN</name></cpp:macro> <cpp:value>_al_glDrawMeshArraysSUN</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_occlusion_query</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenOcclusionQueriesNV</name></cpp:macro> <cpp:value>_al_glGenOcclusionQueriesNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteOcclusionQueriesNV</name></cpp:macro> <cpp:value>_al_glDeleteOcclusionQueriesNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsOcclusionQueryNV</name></cpp:macro> <cpp:value>_al_glIsOcclusionQueryNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBeginOcclusionQueryNV</name></cpp:macro> <cpp:value>_al_glBeginOcclusionQueryNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEndOcclusionQueryNV</name></cpp:macro> <cpp:value>_al_glEndOcclusionQueryNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetOcclusionQueryivNV</name></cpp:macro> <cpp:value>_al_glGetOcclusionQueryivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetOcclusionQueryuivNV</name></cpp:macro> <cpp:value>_al_glGetOcclusionQueryuivNV</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_point_sprite</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPointParameteriNV</name></cpp:macro> <cpp:value>_al_glPointParameteriNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPointParameterivNV</name></cpp:macro> <cpp:value>_al_glPointParameterivNV</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_stencil_two_side</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glActiveStencilFaceEXT</name></cpp:macro> <cpp:value>_al_glActiveStencilFaceEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_APPLE_element_array</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glElementPointerAPPLE</name></cpp:macro> <cpp:value>_al_glElementPointerAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDrawElementArrayAPPLE</name></cpp:macro> <cpp:value>_al_glDrawElementArrayAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDrawRangeElementArrayAPPLE</name></cpp:macro> <cpp:value>_al_glDrawRangeElementArrayAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiDrawElementArrayAPPLE</name></cpp:macro> <cpp:value>_al_glMultiDrawElementArrayAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiDrawRangeElementArrayAPPLE</name></cpp:macro> <cpp:value>_al_glMultiDrawRangeElementArrayAPPLE</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_APPLE_fence</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenFencesAPPLE</name></cpp:macro> <cpp:value>_al_glGenFencesAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteFencesAPPLE</name></cpp:macro> <cpp:value>_al_glDeleteFencesAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSetFenceAPPLE</name></cpp:macro> <cpp:value>_al_glSetFenceAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsFenceAPPLE</name></cpp:macro> <cpp:value>_al_glIsFenceAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTestFenceAPPLE</name></cpp:macro> <cpp:value>_al_glTestFenceAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFinishFenceAPPLE</name></cpp:macro> <cpp:value>_al_glFinishFenceAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTestObjectAPPLE</name></cpp:macro> <cpp:value>_al_glTestObjectAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFinishObjectAPPLE</name></cpp:macro> <cpp:value>_al_glFinishObjectAPPLE</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_APPLE_vertex_array_object</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindVertexArrayAPPLE</name></cpp:macro> <cpp:value>_al_glBindVertexArrayAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteVertexArraysAPPLE</name></cpp:macro> <cpp:value>_al_glDeleteVertexArraysAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenVertexArraysAPPLE</name></cpp:macro> <cpp:value>_al_glGenVertexArraysAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsVertexArrayAPPLE</name></cpp:macro> <cpp:value>_al_glIsVertexArrayAPPLE</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_APPLE_vertex_array_range</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexArrayRangeAPPLE</name></cpp:macro> <cpp:value>_al_glVertexArrayRangeAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFlushVertexArrayRangeAPPLE</name></cpp:macro> <cpp:value>_al_glFlushVertexArrayRangeAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexArrayParameteriAPPLE</name></cpp:macro> <cpp:value>_al_glVertexArrayParameteriAPPLE</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ATI_draw_buffers</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDrawBuffersATI</name></cpp:macro> <cpp:value>_al_glDrawBuffersATI</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_fragment_program</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramNamedParameter4fNV</name></cpp:macro> <cpp:value>_al_glProgramNamedParameter4fNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramNamedParameter4dNV</name></cpp:macro> <cpp:value>_al_glProgramNamedParameter4dNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramNamedParameter4fvNV</name></cpp:macro> <cpp:value>_al_glProgramNamedParameter4fvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramNamedParameter4dvNV</name></cpp:macro> <cpp:value>_al_glProgramNamedParameter4dvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramNamedParameterfvNV</name></cpp:macro> <cpp:value>_al_glGetProgramNamedParameterfvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramNamedParameterdvNV</name></cpp:macro> <cpp:value>_al_glGetProgramNamedParameterdvNV</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_half_float</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertex2hNV</name></cpp:macro> <cpp:value>_al_glVertex2hNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertex2hvNV</name></cpp:macro> <cpp:value>_al_glVertex2hvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertex3hNV</name></cpp:macro> <cpp:value>_al_glVertex3hNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertex3hvNV</name></cpp:macro> <cpp:value>_al_glVertex3hvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertex4hNV</name></cpp:macro> <cpp:value>_al_glVertex4hNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertex4hvNV</name></cpp:macro> <cpp:value>_al_glVertex4hvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNormal3hNV</name></cpp:macro> <cpp:value>_al_glNormal3hNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNormal3hvNV</name></cpp:macro> <cpp:value>_al_glNormal3hvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColor3hNV</name></cpp:macro> <cpp:value>_al_glColor3hNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColor3hvNV</name></cpp:macro> <cpp:value>_al_glColor3hvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColor4hNV</name></cpp:macro> <cpp:value>_al_glColor4hNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColor4hvNV</name></cpp:macro> <cpp:value>_al_glColor4hvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord1hNV</name></cpp:macro> <cpp:value>_al_glTexCoord1hNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord1hvNV</name></cpp:macro> <cpp:value>_al_glTexCoord1hvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord2hNV</name></cpp:macro> <cpp:value>_al_glTexCoord2hNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord2hvNV</name></cpp:macro> <cpp:value>_al_glTexCoord2hvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord3hNV</name></cpp:macro> <cpp:value>_al_glTexCoord3hNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord3hvNV</name></cpp:macro> <cpp:value>_al_glTexCoord3hvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord4hNV</name></cpp:macro> <cpp:value>_al_glTexCoord4hNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord4hvNV</name></cpp:macro> <cpp:value>_al_glTexCoord4hvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord1hNV</name></cpp:macro> <cpp:value>_al_glMultiTexCoord1hNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord1hvNV</name></cpp:macro> <cpp:value>_al_glMultiTexCoord1hvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord2hNV</name></cpp:macro> <cpp:value>_al_glMultiTexCoord2hNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord2hvNV</name></cpp:macro> <cpp:value>_al_glMultiTexCoord2hvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord3hNV</name></cpp:macro> <cpp:value>_al_glMultiTexCoord3hNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord3hvNV</name></cpp:macro> <cpp:value>_al_glMultiTexCoord3hvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord4hNV</name></cpp:macro> <cpp:value>_al_glMultiTexCoord4hNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord4hvNV</name></cpp:macro> <cpp:value>_al_glMultiTexCoord4hvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFogCoordhNV</name></cpp:macro> <cpp:value>_al_glFogCoordhNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFogCoordhvNV</name></cpp:macro> <cpp:value>_al_glFogCoordhvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3hNV</name></cpp:macro> <cpp:value>_al_glSecondaryColor3hNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColor3hvNV</name></cpp:macro> <cpp:value>_al_glSecondaryColor3hvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexWeighthNV</name></cpp:macro> <cpp:value>_al_glVertexWeighthNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexWeighthvNV</name></cpp:macro> <cpp:value>_al_glVertexWeighthvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1hNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib1hNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib1hvNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib1hvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2hNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib2hNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib2hvNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib2hvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3hNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib3hNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib3hvNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib3hvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4hNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib4hNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttrib4hvNV</name></cpp:macro> <cpp:value>_al_glVertexAttrib4hvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribs1hvNV</name></cpp:macro> <cpp:value>_al_glVertexAttribs1hvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribs2hvNV</name></cpp:macro> <cpp:value>_al_glVertexAttribs2hvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribs3hvNV</name></cpp:macro> <cpp:value>_al_glVertexAttribs3hvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribs4hvNV</name></cpp:macro> <cpp:value>_al_glVertexAttribs4hvNV</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_pixel_data_range</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPixelDataRangeNV</name></cpp:macro> <cpp:value>_al_glPixelDataRangeNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFlushPixelDataRangeNV</name></cpp:macro> <cpp:value>_al_glFlushPixelDataRangeNV</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_primitive_restart</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPrimitiveRestartNV</name></cpp:macro> <cpp:value>_al_glPrimitiveRestartNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPrimitiveRestartIndexNV</name></cpp:macro> <cpp:value>_al_glPrimitiveRestartIndexNV</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ATI_map_object_buffer</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMapObjectBufferATI</name></cpp:macro> <cpp:value>_al_glMapObjectBufferATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUnmapObjectBufferATI</name></cpp:macro> <cpp:value>_al_glUnmapObjectBufferATI</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ATI_separate_stencil</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glStencilOpSeparateATI</name></cpp:macro> <cpp:value>_al_glStencilOpSeparateATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glStencilFuncSeparateATI</name></cpp:macro> <cpp:value>_al_glStencilFuncSeparateATI</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_ATI_vertex_attrib_array_object</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribArrayObjectATI</name></cpp:macro> <cpp:value>_al_glVertexAttribArrayObjectATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVertexAttribArrayObjectfvATI</name></cpp:macro> <cpp:value>_al_glGetVertexAttribArrayObjectfvATI</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVertexAttribArrayObjectivATI</name></cpp:macro> <cpp:value>_al_glGetVertexAttribArrayObjectivATI</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_OES_byte_coordinates</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertex2bOES</name></cpp:macro> <cpp:value>_al_glVertex2bOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertex3bOES</name></cpp:macro> <cpp:value>_al_glVertex3bOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertex4bOES</name></cpp:macro> <cpp:value>_al_glVertex4bOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertex2bvOES</name></cpp:macro> <cpp:value>_al_glVertex2bvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertex3bvOES</name></cpp:macro> <cpp:value>_al_glVertex3bvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertex4bvOES</name></cpp:macro> <cpp:value>_al_glVertex4bvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord1bOES</name></cpp:macro> <cpp:value>_al_glTexCoord1bOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord2bOES</name></cpp:macro> <cpp:value>_al_glTexCoord2bOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord3bOES</name></cpp:macro> <cpp:value>_al_glTexCoord3bOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord4bOES</name></cpp:macro> <cpp:value>_al_glTexCoord4bOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord1bvOES</name></cpp:macro> <cpp:value>_al_glTexCoord1bvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord2bvOES</name></cpp:macro> <cpp:value>_al_glTexCoord2bvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord3bvOES</name></cpp:macro> <cpp:value>_al_glTexCoord3bvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord4bvOES</name></cpp:macro> <cpp:value>_al_glTexCoord4bvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord1bOES</name></cpp:macro> <cpp:value>_al_glMultiTexCoord1bOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord2bOES</name></cpp:macro> <cpp:value>_al_glMultiTexCoord2bOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord3bOES</name></cpp:macro> <cpp:value>_al_glMultiTexCoord3bOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord4bOES</name></cpp:macro> <cpp:value>_al_glMultiTexCoord4bOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord1bvOES</name></cpp:macro> <cpp:value>_al_glMultiTexCoord1bvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord2bvOES</name></cpp:macro> <cpp:value>_al_glMultiTexCoord2bvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord3bvOES</name></cpp:macro> <cpp:value>_al_glMultiTexCoord3bvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord4bvOES</name></cpp:macro> <cpp:value>_al_glMultiTexCoord4bvOES</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_OES_fixed_point</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertex2xOES</name></cpp:macro> <cpp:value>_al_glVertex2xOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertex3xOES</name></cpp:macro> <cpp:value>_al_glVertex3xOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertex4xOES</name></cpp:macro> <cpp:value>_al_glVertex4xOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertex2xvOES</name></cpp:macro> <cpp:value>_al_glVertex2xvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertex3xvOES</name></cpp:macro> <cpp:value>_al_glVertex3xvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertex4xvOES</name></cpp:macro> <cpp:value>_al_glVertex4xvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNormal3xOES</name></cpp:macro> <cpp:value>_al_glNormal3xOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNormal3xvOES</name></cpp:macro> <cpp:value>_al_glNormal3xvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord1xOES</name></cpp:macro> <cpp:value>_al_glTexCoord1xOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord2xOES</name></cpp:macro> <cpp:value>_al_glTexCoord2xOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord3xOES</name></cpp:macro> <cpp:value>_al_glTexCoord3xOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord4xOES</name></cpp:macro> <cpp:value>_al_glTexCoord4xOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord1xvOES</name></cpp:macro> <cpp:value>_al_glTexCoord1xvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord2xvOES</name></cpp:macro> <cpp:value>_al_glTexCoord2xvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord3xvOES</name></cpp:macro> <cpp:value>_al_glTexCoord3xvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoord4xvOES</name></cpp:macro> <cpp:value>_al_glTexCoord4xvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord1xOES</name></cpp:macro> <cpp:value>_al_glMultiTexCoord1xOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord2xOES</name></cpp:macro> <cpp:value>_al_glMultiTexCoord2xOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord3xOES</name></cpp:macro> <cpp:value>_al_glMultiTexCoord3xOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord4xOES</name></cpp:macro> <cpp:value>_al_glMultiTexCoord4xOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord1xvOES</name></cpp:macro> <cpp:value>_al_glMultiTexCoord1xvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord2xvOES</name></cpp:macro> <cpp:value>_al_glMultiTexCoord2xvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord3xvOES</name></cpp:macro> <cpp:value>_al_glMultiTexCoord3xvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoord4xvOES</name></cpp:macro> <cpp:value>_al_glMultiTexCoord4xvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColor3xOES</name></cpp:macro> <cpp:value>_al_glColor3xOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColor4xOES</name></cpp:macro> <cpp:value>_al_glColor4xOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColor3xvOES</name></cpp:macro> <cpp:value>_al_glColor3xvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColor4xvOES</name></cpp:macro> <cpp:value>_al_glColor4xvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIndexxOES</name></cpp:macro> <cpp:value>_al_glIndexxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIndexxvOES</name></cpp:macro> <cpp:value>_al_glIndexxvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glRectxOES</name></cpp:macro> <cpp:value>_al_glRectxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glRectxvOES</name></cpp:macro> <cpp:value>_al_glRectxvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDepthRangexOES</name></cpp:macro> <cpp:value>_al_glDepthRangexOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glLoadMatrixxOES</name></cpp:macro> <cpp:value>_al_glLoadMatrixxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultMatrixxOES</name></cpp:macro> <cpp:value>_al_glMultMatrixxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glLoadTransposeMatrixxOES</name></cpp:macro> <cpp:value>_al_glLoadTransposeMatrixxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultTransposeMatrixxOES</name></cpp:macro> <cpp:value>_al_glMultTransposeMatrixxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glRotatexOES</name></cpp:macro> <cpp:value>_al_glRotatexOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glScalexOES</name></cpp:macro> <cpp:value>_al_glScalexOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTranslatexOES</name></cpp:macro> <cpp:value>_al_glTranslatexOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFrustumxOES</name></cpp:macro> <cpp:value>_al_glFrustumxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glOrthoxOES</name></cpp:macro> <cpp:value>_al_glOrthoxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexGenxOES</name></cpp:macro> <cpp:value>_al_glTexGenxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexGenxvOES</name></cpp:macro> <cpp:value>_al_glTexGenxvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetTexGenxvOES</name></cpp:macro> <cpp:value>_al_glGetTexGenxvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glClipPlanexOES</name></cpp:macro> <cpp:value>_al_glClipPlanexOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetClipPlanexOES</name></cpp:macro> <cpp:value>_al_glGetClipPlanexOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glRasterPos2xOES</name></cpp:macro> <cpp:value>_al_glRasterPos2xOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glRasterPos3xOES</name></cpp:macro> <cpp:value>_al_glRasterPos3xOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glRasterPos4xOES</name></cpp:macro> <cpp:value>_al_glRasterPos4xOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glRasterPos2xvOES</name></cpp:macro> <cpp:value>_al_glRasterPos2xvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glRasterPos3xvOES</name></cpp:macro> <cpp:value>_al_glRasterPos3xvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glRasterPos4xvOES</name></cpp:macro> <cpp:value>_al_glRasterPos4xvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMaterialxOES</name></cpp:macro> <cpp:value>_al_glMaterialxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMaterialxvOES</name></cpp:macro> <cpp:value>_al_glMaterialxvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMaterialxOES</name></cpp:macro> <cpp:value>_al_glGetMaterialxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glLightxOES</name></cpp:macro> <cpp:value>_al_glLightxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glLightxvOES</name></cpp:macro> <cpp:value>_al_glLightxvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetLightxOES</name></cpp:macro> <cpp:value>_al_glGetLightxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glLightModelxOES</name></cpp:macro> <cpp:value>_al_glLightModelxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glLightModelxvOES</name></cpp:macro> <cpp:value>_al_glLightModelxvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPointSizexOES</name></cpp:macro> <cpp:value>_al_glPointSizexOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glLineWidthxOES</name></cpp:macro> <cpp:value>_al_glLineWidthxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPolygonOffsetxOES</name></cpp:macro> <cpp:value>_al_glPolygonOffsetxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPixelStorex</name></cpp:macro> <cpp:value>_al_glPixelStorex</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPixelTransferxOES</name></cpp:macro> <cpp:value>_al_glPixelTransferxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPixelMapx</name></cpp:macro> <cpp:value>_al_glPixelMapx</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetPixelMapxv</name></cpp:macro> <cpp:value>_al_glGetPixelMapxv</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glConvolutionParameterxOES</name></cpp:macro> <cpp:value>_al_glConvolutionParameterxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glConvolutionParameterxvOES</name></cpp:macro> <cpp:value>_al_glConvolutionParameterxvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetConvolutionParameterxvOES</name></cpp:macro> <cpp:value>_al_glGetConvolutionParameterxvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetHistogramParameterxvOES</name></cpp:macro> <cpp:value>_al_glGetHistogramParameterxvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPixelZoomxOES</name></cpp:macro> <cpp:value>_al_glPixelZoomxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBitmapxOES</name></cpp:macro> <cpp:value>_al_glBitmapxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexParameterxOES</name></cpp:macro> <cpp:value>_al_glTexParameterxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexParameterxvOES</name></cpp:macro> <cpp:value>_al_glTexParameterxvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetTexParameterxvOES</name></cpp:macro> <cpp:value>_al_glGetTexParameterxvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetTexLevelParameterxvOES</name></cpp:macro> <cpp:value>_al_glGetTexLevelParameterxvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPrioritizeTexturesxOES</name></cpp:macro> <cpp:value>_al_glPrioritizeTexturesxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexEnvxOES</name></cpp:macro> <cpp:value>_al_glTexEnvxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexEnvxvOES</name></cpp:macro> <cpp:value>_al_glTexEnvxvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetTexEnvxvOES</name></cpp:macro> <cpp:value>_al_glGetTexEnvxvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFogxOES</name></cpp:macro> <cpp:value>_al_glFogxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFogxvOES</name></cpp:macro> <cpp:value>_al_glFogxvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSampleCoverageOES</name></cpp:macro> <cpp:value>_al_glSampleCoverageOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glAlphaFuncxOES</name></cpp:macro> <cpp:value>_al_glAlphaFuncxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBlendColorxOES</name></cpp:macro> <cpp:value>_al_glBlendColorxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glClearColorxOES</name></cpp:macro> <cpp:value>_al_glClearColorxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glClearDepthxOES</name></cpp:macro> <cpp:value>_al_glClearDepthxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glClearAccumxOES</name></cpp:macro> <cpp:value>_al_glClearAccumxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glAccumxOES</name></cpp:macro> <cpp:value>_al_glAccumxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMap1xOES</name></cpp:macro> <cpp:value>_al_glMap1xOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMap2xOES</name></cpp:macro> <cpp:value>_al_glMap2xOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMapGrid1xOES</name></cpp:macro> <cpp:value>_al_glMapGrid1xOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMapGrid2xOES</name></cpp:macro> <cpp:value>_al_glMapGrid2xOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMapxvOES</name></cpp:macro> <cpp:value>_al_glGetMapxvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEvalCoord1xOES</name></cpp:macro> <cpp:value>_al_glEvalCoord1xOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEvalCoord2xOES</name></cpp:macro> <cpp:value>_al_glEvalCoord2xOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEvalCoord1xvOES</name></cpp:macro> <cpp:value>_al_glEvalCoord1xvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEvalCoord2xvOES</name></cpp:macro> <cpp:value>_al_glEvalCoord2xvOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFeedbackBufferxOES</name></cpp:macro> <cpp:value>_al_glFeedbackBufferxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPassThroughxOES</name></cpp:macro> <cpp:value>_al_glPassThroughxOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetFixedvOES</name></cpp:macro> <cpp:value>_al_glGetFixedvOES</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_OES_single_precision</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDepthRangefOES</name></cpp:macro> <cpp:value>_al_glDepthRangefOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFrustumfOES</name></cpp:macro> <cpp:value>_al_glFrustumfOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glOrthofOES</name></cpp:macro> <cpp:value>_al_glOrthofOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glClipPlanefOES</name></cpp:macro> <cpp:value>_al_glClipPlanefOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetClipPlanefOES</name></cpp:macro> <cpp:value>_al_glGetClipPlanefOES</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glClearDepthfOES</name></cpp:macro> <cpp:value>_al_glClearDepthfOES</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_OES_query_matrix</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glQueryMatrixxOES</name></cpp:macro> <cpp:value>_al_glQueryMatrixxOES</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_depth_bounds_test</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDepthBoundsEXT</name></cpp:macro> <cpp:value>_al_glDepthBoundsEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_blend_equation_separate</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBlendEquationSeparateEXT</name></cpp:macro> <cpp:value>_al_glBlendEquationSeparateEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_framebuffer_object</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsRenderbufferEXT</name></cpp:macro> <cpp:value>_al_glIsRenderbufferEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindRenderbufferEXT</name></cpp:macro> <cpp:value>_al_glBindRenderbufferEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteRenderbuffersEXT</name></cpp:macro> <cpp:value>_al_glDeleteRenderbuffersEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenRenderbuffersEXT</name></cpp:macro> <cpp:value>_al_glGenRenderbuffersEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glRenderbufferStorageEXT</name></cpp:macro> <cpp:value>_al_glRenderbufferStorageEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetRenderbufferParameterivEXT</name></cpp:macro> <cpp:value>_al_glGetRenderbufferParameterivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsFramebufferEXT</name></cpp:macro> <cpp:value>_al_glIsFramebufferEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindFramebufferEXT</name></cpp:macro> <cpp:value>_al_glBindFramebufferEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteFramebuffersEXT</name></cpp:macro> <cpp:value>_al_glDeleteFramebuffersEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenFramebuffersEXT</name></cpp:macro> <cpp:value>_al_glGenFramebuffersEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCheckFramebufferStatusEXT</name></cpp:macro> <cpp:value>_al_glCheckFramebufferStatusEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFramebufferTexture1DEXT</name></cpp:macro> <cpp:value>_al_glFramebufferTexture1DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFramebufferTexture2DEXT</name></cpp:macro> <cpp:value>_al_glFramebufferTexture2DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFramebufferTexture3DEXT</name></cpp:macro> <cpp:value>_al_glFramebufferTexture3DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFramebufferRenderbufferEXT</name></cpp:macro> <cpp:value>_al_glFramebufferRenderbufferEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetFramebufferAttachmentParameterivEXT</name></cpp:macro> <cpp:value>_al_glGetFramebufferAttachmentParameterivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenerateMipmapEXT</name></cpp:macro> <cpp:value>_al_glGenerateMipmapEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_GREMEDY_string_marker</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glStringMarkerGREMEDY</name></cpp:macro> <cpp:value>_al_glStringMarkerGREMEDY</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_stencil_clear_tag</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glStencilClearTagEXT</name></cpp:macro> <cpp:value>_al_glStencilClearTagEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_framebuffer_blit</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBlitFramebufferEXT</name></cpp:macro> <cpp:value>_al_glBlitFramebufferEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_framebuffer_multisample</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glRenderbufferStorageMultisampleEXT</name></cpp:macro> <cpp:value>_al_glRenderbufferStorageMultisampleEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_timer_query</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetQueryObjecti64vEXT</name></cpp:macro> <cpp:value>_al_glGetQueryObjecti64vEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetQueryObjectui64vEXT</name></cpp:macro> <cpp:value>_al_glGetQueryObjectui64vEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_gpu_program_parameters</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramEnvParameters4fvEXT</name></cpp:macro> <cpp:value>_al_glProgramEnvParameters4fvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramLocalParameters4fvEXT</name></cpp:macro> <cpp:value>_al_glProgramLocalParameters4fvEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_APPLE_flush_buffer_range</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBufferParameteriAPPLE</name></cpp:macro> <cpp:value>_al_glBufferParameteriAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFlushMappedBufferRangeAPPLE</name></cpp:macro> <cpp:value>_al_glFlushMappedBufferRangeAPPLE</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_bindable_uniform</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformBufferEXT</name></cpp:macro> <cpp:value>_al_glUniformBufferEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetUniformBufferSizeEXT</name></cpp:macro> <cpp:value>_al_glGetUniformBufferSizeEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetUniformOffsetEXT</name></cpp:macro> <cpp:value>_al_glGetUniformOffsetEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_draw_buffers2</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColorMaskIndexedEXT</name></cpp:macro> <cpp:value>_al_glColorMaskIndexedEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetBooleanIndexedvEXT</name></cpp:macro> <cpp:value>_al_glGetBooleanIndexedvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetIntegerIndexedvEXT</name></cpp:macro> <cpp:value>_al_glGetIntegerIndexedvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEnableIndexedEXT</name></cpp:macro> <cpp:value>_al_glEnableIndexedEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDisableIndexedEXT</name></cpp:macro> <cpp:value>_al_glDisableIndexedEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsEnabledIndexedEXT</name></cpp:macro> <cpp:value>_al_glIsEnabledIndexedEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_draw_instanced</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDrawArraysInstancedEXT</name></cpp:macro> <cpp:value>_al_glDrawArraysInstancedEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDrawElementsInstancedEXT</name></cpp:macro> <cpp:value>_al_glDrawElementsInstancedEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_geometry_shader4</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramParameteriEXT</name></cpp:macro> <cpp:value>_al_glProgramParameteriEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFramebufferTextureEXT</name></cpp:macro> <cpp:value>_al_glFramebufferTextureEXT</cpp:value></cpp:define>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><name>defined</name> <name>_ALLEGRO_GL_EXT_texture_array</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFramebufferTextureLayerEXT</name></cpp:macro> <cpp:value>_al_glFramebufferTextureLayerEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFramebufferTextureFaceEXT</name></cpp:macro> <cpp:value>_al_glFramebufferTextureFaceEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_gpu_shader4</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI1iEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI1iEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI2iEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI2iEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI3iEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI3iEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI4iEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI4iEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI1uiEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI1uiEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI2uiEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI2uiEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI3uiEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI3uiEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI4uiEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI4uiEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI1ivEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI1ivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI2ivEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI2ivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI3ivEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI3ivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI4ivEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI4ivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI1uivEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI1uivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI2uivEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI2uivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI3uivEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI3uivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI4uivEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI4uivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI4bvEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI4bvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI4svEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI4svEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI4ubvEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI4ubvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI4usvEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI4usvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribIPointerEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribIPointerEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVertexAttribIivEXT</name></cpp:macro> <cpp:value>_al_glGetVertexAttribIivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVertexAttribIuivEXT</name></cpp:macro> <cpp:value>_al_glGetVertexAttribIuivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform1uiEXT</name></cpp:macro> <cpp:value>_al_glUniform1uiEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform2uiEXT</name></cpp:macro> <cpp:value>_al_glUniform2uiEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform3uiEXT</name></cpp:macro> <cpp:value>_al_glUniform3uiEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform4uiEXT</name></cpp:macro> <cpp:value>_al_glUniform4uiEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform1uivEXT</name></cpp:macro> <cpp:value>_al_glUniform1uivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform2uivEXT</name></cpp:macro> <cpp:value>_al_glUniform2uivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform3uivEXT</name></cpp:macro> <cpp:value>_al_glUniform3uivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniform4uivEXT</name></cpp:macro> <cpp:value>_al_glUniform4uivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetUniformuivEXT</name></cpp:macro> <cpp:value>_al_glGetUniformuivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindFragDataLocationEXT</name></cpp:macro> <cpp:value>_al_glBindFragDataLocationEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetFragDataLocationEXT</name></cpp:macro> <cpp:value>_al_glGetFragDataLocationEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_texture_array</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFramebufferTextureLayerEXT</name></cpp:macro> <cpp:value>_al_glFramebufferTextureLayerEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_texture_buffer_object</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexBufferEXT</name></cpp:macro> <cpp:value>_al_glTexBufferEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_texture_integer</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glClearColorIiEXT</name></cpp:macro> <cpp:value>_al_glClearColorIiEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glClearColorIuiEXT</name></cpp:macro> <cpp:value>_al_glClearColorIuiEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexParameterIivEXT</name></cpp:macro> <cpp:value>_al_glTexParameterIivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexParameterIuivEXT</name></cpp:macro> <cpp:value>_al_glTexParameterIuivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetTexParameterIivEXT</name></cpp:macro> <cpp:value>_al_glGetTexParameterIivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetTexParameterIiuvEXT</name></cpp:macro> <cpp:value>_al_glGetTexParameterIiuvEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_depth_buffer_float</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDepthRangedNV</name></cpp:macro> <cpp:value>_al_glDepthRangedNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glClearDepthdNV</name></cpp:macro> <cpp:value>_al_glClearDepthdNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDepthBoundsdNV</name></cpp:macro> <cpp:value>_al_glDepthBoundsdNV</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_framebuffer_multisample_coverage</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glRenderbufferStorageMultsampleCoverageNV</name></cpp:macro> <cpp:value>_al_glRenderbufferStorageMultsampleCoverageNV</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_geometry_program4</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramVertexLimitNV</name></cpp:macro> <cpp:value>_al_glProgramVertexLimitNV</cpp:value></cpp:define>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><name>defined</name> <name>_ALLEGRO_GL_EXT_geometry_shader4</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFramebufferTextureEXT</name></cpp:macro> <cpp:value>_al_glFramebufferTextureEXT</cpp:value></cpp:define>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><name>defined</name> <name>_ALLEGRO_GL_EXT_texture_array</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFramebufferTextureLayerEXT</name></cpp:macro> <cpp:value>_al_glFramebufferTextureLayerEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_gpu_program4</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramLocalParameterI4iNV</name></cpp:macro> <cpp:value>_al_glProgramLocalParameterI4iNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramLocalParameterI4ivNV</name></cpp:macro> <cpp:value>_al_glProgramLocalParameterI4ivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramLocalParametersI4ivNV</name></cpp:macro> <cpp:value>_al_glProgramLocalParametersI4ivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramLocalParameterI4uiNV</name></cpp:macro> <cpp:value>_al_glProgramLocalParameterI4uiNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramLocalParameterI4uivNV</name></cpp:macro> <cpp:value>_al_glProgramLocalParameterI4uivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramLocalParametersI4uivNV</name></cpp:macro> <cpp:value>_al_glProgramLocalParametersI4uivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramEnvParameterI4iNV</name></cpp:macro> <cpp:value>_al_glProgramEnvParameterI4iNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramEnvParameterI4ivNV</name></cpp:macro> <cpp:value>_al_glProgramEnvParameterI4ivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramEnvParametersI4ivNV</name></cpp:macro> <cpp:value>_al_glProgramEnvParametersI4ivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramEnvParameterI4uiNV</name></cpp:macro> <cpp:value>_al_glProgramEnvParameterI4uiNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramEnvParameterI4uivNV</name></cpp:macro> <cpp:value>_al_glProgramEnvParameterI4uivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramEnvParametersI4uivNV</name></cpp:macro> <cpp:value>_al_glProgramEnvParametersI4uivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramLocalParameterIivNV</name></cpp:macro> <cpp:value>_al_glGetProgramLocalParameterIivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramLocalParameterIuivNV</name></cpp:macro> <cpp:value>_al_glGetProgramLocalParameterIuivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramEnvParameterIivNV</name></cpp:macro> <cpp:value>_al_glGetProgramEnvParameterIivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetProgramEnvParameterIuivNV</name></cpp:macro> <cpp:value>_al_glGetProgramEnvParameterIuivNV</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_parameter_buffer_object</name></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><name>defined</name> <name>_ALLEGRO_GL_NV_transform_feedback</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindBufferRangeNV</name></cpp:macro> <cpp:value>_al_glBindBufferRangeNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindBufferOffsetNV</name></cpp:macro> <cpp:value>_al_glBindBufferOffsetNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindBufferBaseNV</name></cpp:macro> <cpp:value>_al_glBindBufferBaseNV</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramBufferParametersfvNV</name></cpp:macro> <cpp:value>_al_glProgramBufferParametersfvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramBufferParametersIivNV</name></cpp:macro> <cpp:value>_al_glProgramBufferParametersIivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramBufferParametersIuivNV</name></cpp:macro> <cpp:value>_al_glProgramBufferParametersIuivNV</cpp:value></cpp:define>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><name>defined</name> <name>_ALLEGRO_GL_EXT_draw_buffers2</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetIntegerIndexedvEXT</name></cpp:macro> <cpp:value>_al_glGetIntegerIndexedvEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_transform_feedback</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindBufferRangeNV</name></cpp:macro> <cpp:value>_al_glBindBufferRangeNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindBufferOffsetNV</name></cpp:macro> <cpp:value>_al_glBindBufferOffsetNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindBufferBaseNV</name></cpp:macro> <cpp:value>_al_glBindBufferBaseNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTransformFeedbackAttribsNV</name></cpp:macro> <cpp:value>_al_glTransformFeedbackAttribsNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTransformFeedbackVaryingsNV</name></cpp:macro> <cpp:value>_al_glTransformFeedbackVaryingsNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBeginTransformFeedbackNV</name></cpp:macro> <cpp:value>_al_glBeginTransformFeedbackNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEndTransformFeedbackNV</name></cpp:macro> <cpp:value>_al_glEndTransformFeedbackNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVaryingLocationNV</name></cpp:macro> <cpp:value>_al_glGetVaryingLocationNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetActiveVaryingNV</name></cpp:macro> <cpp:value>_al_glGetActiveVaryingNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glActiveVaryingNV</name></cpp:macro> <cpp:value>_al_glActiveVaryingNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetTransformFeedbackVaryingNV</name></cpp:macro> <cpp:value>_al_glGetTransformFeedbackVaryingNV</cpp:value></cpp:define>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><name>defined</name> <name>_ALLEGRO_GL_EXT_draw_buffers2</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetBooleanIndexedvEXT</name></cpp:macro> <cpp:value>_al_glGetBooleanIndexedvEXT</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_vertex_program4</name></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_ALLEGRO_GL_EXT_gpu_shader4</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI1iEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI1iEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI2iEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI2iEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI3iEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI3iEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI4iEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI4iEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI1uiEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI1uiEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI2uiEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI2uiEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI3uiEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI3uiEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI4uiEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI4uiEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI1ivEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI1ivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI2ivEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI2ivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI3ivEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI3ivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI4ivEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI4ivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI1uivEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI1uivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI2uivEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI2uivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI3uivEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI3uivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI4uivEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI4uivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI4bvEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI4bvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI4svEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI4svEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI4ubvEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI4ubvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribI4usvEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribI4usvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribIPointerEXT</name></cpp:macro> <cpp:value>_al_glVertexAttribIPointerEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVertexAttribIivEXT</name></cpp:macro> <cpp:value>_al_glGetVertexAttribIivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVertexAttribIuivEXT</name></cpp:macro> <cpp:value>_al_glGetVertexAttribIuivEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_GREMEDY_frame_terminator</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFrameTerminatorGREMEDY</name></cpp:macro> <cpp:value>_al_glFrameTerminatorGREMEDY</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_conditional_render</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBeginConditionalRenderNV</name></cpp:macro> <cpp:value>_al_glBeginConditionalRenderNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEndConditionalRenderNV</name></cpp:macro> <cpp:value>_al_glEndConditionalRenderNV</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_transform_feedback</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBeginTransformFeedbackEXT</name></cpp:macro> <cpp:value>_al_glBeginTransformFeedbackEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEndTransformFeedbackEXT</name></cpp:macro> <cpp:value>_al_glEndTransformFeedbackEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindBufferRangeEXT</name></cpp:macro> <cpp:value>_al_glBindBufferRangeEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindBufferOffsetEXT</name></cpp:macro> <cpp:value>_al_glBindBufferOffsetEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindBufferBaseEXT</name></cpp:macro> <cpp:value>_al_glBindBufferBaseEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTransformFeedbackVaryingsEXT</name></cpp:macro> <cpp:value>_al_glTransformFeedbackVaryingsEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetTransformFeedbackVaryingEXT</name></cpp:macro> <cpp:value>_al_glGetTransformFeedbackVaryingEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_direct_state_access</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glClientAttribDefaultEXT</name></cpp:macro> <cpp:value>_al_glClientAttribDefaultEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPushClientAttribDefaultEXT</name></cpp:macro> <cpp:value>_al_glPushClientAttribDefaultEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMatrixLoadfEXT</name></cpp:macro> <cpp:value>_al_glMatrixLoadfEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMatrixLoaddEXT</name></cpp:macro> <cpp:value>_al_glMatrixLoaddEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMatrixMultfEXT</name></cpp:macro> <cpp:value>_al_glMatrixMultfEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMatrixMultdEXT</name></cpp:macro> <cpp:value>_al_glMatrixMultdEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMatrixLoadIdentityEXT</name></cpp:macro> <cpp:value>_al_glMatrixLoadIdentityEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMatrixRotatefEXT</name></cpp:macro> <cpp:value>_al_glMatrixRotatefEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMatrixRotatedEXT</name></cpp:macro> <cpp:value>_al_glMatrixRotatedEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMatrixScalefEXT</name></cpp:macro> <cpp:value>_al_glMatrixScalefEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMatrixScaledEXT</name></cpp:macro> <cpp:value>_al_glMatrixScaledEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMatrixTranslatefEXT</name></cpp:macro> <cpp:value>_al_glMatrixTranslatefEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMatrixTranslatedEXT</name></cpp:macro> <cpp:value>_al_glMatrixTranslatedEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMatrixFrustumEXT</name></cpp:macro> <cpp:value>_al_glMatrixFrustumEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMatrixOrthoEXT</name></cpp:macro> <cpp:value>_al_glMatrixOrthoEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMatrixPopEXT</name></cpp:macro> <cpp:value>_al_glMatrixPopEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMatrixPushEXT</name></cpp:macro> <cpp:value>_al_glMatrixPushEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMatrixLoadTransposefEXT</name></cpp:macro> <cpp:value>_al_glMatrixLoadTransposefEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMatrixLoadTransposedEXT</name></cpp:macro> <cpp:value>_al_glMatrixLoadTransposedEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMatrixMultTransposefEXT</name></cpp:macro> <cpp:value>_al_glMatrixMultTransposefEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMatrixMultTransposedEXT</name></cpp:macro> <cpp:value>_al_glMatrixMultTransposedEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTextureParameterfEXT</name></cpp:macro> <cpp:value>_al_glTextureParameterfEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTextureParameterfvEXT</name></cpp:macro> <cpp:value>_al_glTextureParameterfvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTextureParameteriEXT</name></cpp:macro> <cpp:value>_al_glTextureParameteriEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTextureParameterivEXT</name></cpp:macro> <cpp:value>_al_glTextureParameterivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTextureImage1DEXT</name></cpp:macro> <cpp:value>_al_glTextureImage1DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTextureImage2DEXT</name></cpp:macro> <cpp:value>_al_glTextureImage2DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTextureSubImage1DEXT</name></cpp:macro> <cpp:value>_al_glTextureSubImage1DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTextureSubImage2DEXT</name></cpp:macro> <cpp:value>_al_glTextureSubImage2DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyTextureImage1DEXT</name></cpp:macro> <cpp:value>_al_glCopyTextureImage1DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyTextureImage2DEXT</name></cpp:macro> <cpp:value>_al_glCopyTextureImage2DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyTextureSubImage1DEXT</name></cpp:macro> <cpp:value>_al_glCopyTextureSubImage1DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyTextureSubImage2DEXT</name></cpp:macro> <cpp:value>_al_glCopyTextureSubImage2DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetTextureImageEXT</name></cpp:macro> <cpp:value>_al_glGetTextureImageEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetTextureParameterfvEXT</name></cpp:macro> <cpp:value>_al_glGetTextureParameterfvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetTextureParameterivEXT</name></cpp:macro> <cpp:value>_al_glGetTextureParameterivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetTextureLevelParameterfvEXT</name></cpp:macro> <cpp:value>_al_glGetTextureLevelParameterfvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetTextureLevelParameterivEXT</name></cpp:macro> <cpp:value>_al_glGetTextureLevelParameterivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTextureImage3DEXT</name></cpp:macro> <cpp:value>_al_glTextureImage3DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTextureSubImage3DEXT</name></cpp:macro> <cpp:value>_al_glTextureSubImage3DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyTextureSubImage3DEXT</name></cpp:macro> <cpp:value>_al_glCopyTextureSubImage3DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexParameterfEXT</name></cpp:macro> <cpp:value>_al_glMultiTexParameterfEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexParameterfvEXT</name></cpp:macro> <cpp:value>_al_glMultiTexParameterfvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexParameteriEXT</name></cpp:macro> <cpp:value>_al_glMultiTexParameteriEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexParameterivEXT</name></cpp:macro> <cpp:value>_al_glMultiTexParameterivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexImage1DEXT</name></cpp:macro> <cpp:value>_al_glMultiTexImage1DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexImage2DEXT</name></cpp:macro> <cpp:value>_al_glMultiTexImage2DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexSubImage1DEXT</name></cpp:macro> <cpp:value>_al_glMultiTexSubImage1DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexSubImage2DEXT</name></cpp:macro> <cpp:value>_al_glMultiTexSubImage2DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyMultiTexImage1DEXT</name></cpp:macro> <cpp:value>_al_glCopyMultiTexImage1DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyMultiTexImage2DEXT</name></cpp:macro> <cpp:value>_al_glCopyMultiTexImage2DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyMultiTexSubImage1DEXT</name></cpp:macro> <cpp:value>_al_glCopyMultiTexSubImage1DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyMultiTexSubImage2DEXT</name></cpp:macro> <cpp:value>_al_glCopyMultiTexSubImage2DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMultiTexImageEXT</name></cpp:macro> <cpp:value>_al_glGetMultiTexImageEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMultiTexParameterfvEXT</name></cpp:macro> <cpp:value>_al_glGetMultiTexParameterfvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMultiTexParameterivEXT</name></cpp:macro> <cpp:value>_al_glGetMultiTexParameterivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMultiTexLevelParameterfvEXT</name></cpp:macro> <cpp:value>_al_glGetMultiTexLevelParameterfvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMultiTexLevelParameterivEXT</name></cpp:macro> <cpp:value>_al_glGetMultiTexLevelParameterivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexImage3DEXT</name></cpp:macro> <cpp:value>_al_glMultiTexImage3DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexSubImage3DEXT</name></cpp:macro> <cpp:value>_al_glMultiTexSubImage3DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCopyMultiTexSubImage3DEXT</name></cpp:macro> <cpp:value>_al_glCopyMultiTexSubImage3DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindMultiTextureEXT</name></cpp:macro> <cpp:value>_al_glBindMultiTextureEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEnableClientStateIndexedEXT</name></cpp:macro> <cpp:value>_al_glEnableClientStateIndexedEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDisableClientStateIndexedEXT</name></cpp:macro> <cpp:value>_al_glDisableClientStateIndexedEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexCoordPointerEXT</name></cpp:macro> <cpp:value>_al_glMultiTexCoordPointerEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexEnvfEXT</name></cpp:macro> <cpp:value>_al_glMultiTexEnvfEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexEnvfvEXT</name></cpp:macro> <cpp:value>_al_glMultiTexEnvfvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexEnviEXT</name></cpp:macro> <cpp:value>_al_glMultiTexEnviEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexEnvivEXT</name></cpp:macro> <cpp:value>_al_glMultiTexEnvivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexGendEXT</name></cpp:macro> <cpp:value>_al_glMultiTexGendEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexGendvEXT</name></cpp:macro> <cpp:value>_al_glMultiTexGendvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexGenfEXT</name></cpp:macro> <cpp:value>_al_glMultiTexGenfEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexGenfvEXT</name></cpp:macro> <cpp:value>_al_glMultiTexGenfvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexGeniEXT</name></cpp:macro> <cpp:value>_al_glMultiTexGeniEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexGenivEXT</name></cpp:macro> <cpp:value>_al_glMultiTexGenivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMultiTexEnvfvEXT</name></cpp:macro> <cpp:value>_al_glGetMultiTexEnvfvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMultiTexEnvivEXT</name></cpp:macro> <cpp:value>_al_glGetMultiTexEnvivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMultiTexGendvEXT</name></cpp:macro> <cpp:value>_al_glGetMultiTexGendvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMultiTexGenfvEXT</name></cpp:macro> <cpp:value>_al_glGetMultiTexGenfvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMultiTexGenivEXT</name></cpp:macro> <cpp:value>_al_glGetMultiTexGenivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetFloatIndexedvEXT</name></cpp:macro> <cpp:value>_al_glGetFloatIndexedvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetDoubleIndexedvEXT</name></cpp:macro> <cpp:value>_al_glGetDoubleIndexedvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetPointerIndexedvEXT</name></cpp:macro> <cpp:value>_al_glGetPointerIndexedvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompressedTextureImage3DEXT</name></cpp:macro> <cpp:value>_al_glCompressedTextureImage3DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompressedTextureImage2DEXT</name></cpp:macro> <cpp:value>_al_glCompressedTextureImage2DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompressedTextureImage1DEXT</name></cpp:macro> <cpp:value>_al_glCompressedTextureImage1DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompressedTextureSubImage3DEXT</name></cpp:macro> <cpp:value>_al_glCompressedTextureSubImage3DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompressedTextureSubImage2DEXT</name></cpp:macro> <cpp:value>_al_glCompressedTextureSubImage2DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompressedTextureSubImage1DEXT</name></cpp:macro> <cpp:value>_al_glCompressedTextureSubImage1DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetCompressedTextureImageEXT</name></cpp:macro> <cpp:value>_al_glGetCompressedTextureImageEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompressedMultiTexImage3DEXT</name></cpp:macro> <cpp:value>_al_glCompressedMultiTexImage3DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompressedMultiTexImage2DEXT</name></cpp:macro> <cpp:value>_al_glCompressedMultiTexImage2DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompressedMultiTexImage1DEXT</name></cpp:macro> <cpp:value>_al_glCompressedMultiTexImage1DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompressedMultiTexSubImage3DEXT</name></cpp:macro> <cpp:value>_al_glCompressedMultiTexSubImage3DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompressedMultiTexSubImage2DEXT</name></cpp:macro> <cpp:value>_al_glCompressedMultiTexSubImage2DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCompressedMultiTexSubImage1DEXT</name></cpp:macro> <cpp:value>_al_glCompressedMultiTexSubImage1DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetCompressedMultiTexImageEXT</name></cpp:macro> <cpp:value>_al_glGetCompressedMultiTexImageEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNamedProgramStringEXT</name></cpp:macro> <cpp:value>_al_glNamedProgramStringEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNamedProgramLocalParameter4dEXT</name></cpp:macro> <cpp:value>_al_glNamedProgramLocalParameter4dEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNamedProgramLocalParameter4dvEXT</name></cpp:macro> <cpp:value>_al_glNamedProgramLocalParameter4dvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNamedProgramLocalParameter4fEXT</name></cpp:macro> <cpp:value>_al_glNamedProgramLocalParameter4fEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNamedProgramLocalParameter4fvEXT</name></cpp:macro> <cpp:value>_al_glNamedProgramLocalParameter4fvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetNamedProgramLocalParameterdvEXT</name></cpp:macro> <cpp:value>_al_glGetNamedProgramLocalParameterdvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetNamedProgramLocalParameterfvEXT</name></cpp:macro> <cpp:value>_al_glGetNamedProgramLocalParameterfvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetNamedProgramivEXT</name></cpp:macro> <cpp:value>_al_glGetNamedProgramivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetNamedProgramStringEXT</name></cpp:macro> <cpp:value>_al_glGetNamedProgramStringEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNamedProgramLocalParameters4fvEXT</name></cpp:macro> <cpp:value>_al_glNamedProgramLocalParameters4fvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNamedProgramLocalParameterI4iEXT</name></cpp:macro> <cpp:value>_al_glNamedProgramLocalParameterI4iEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNamedProgramLocalParameterI4ivEXT</name></cpp:macro> <cpp:value>_al_glNamedProgramLocalParameterI4ivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNamedProgramLocalParametersI4ivEXT</name></cpp:macro> <cpp:value>_al_glNamedProgramLocalParametersI4ivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNamedProgramLocalParameterI4uiEXT</name></cpp:macro> <cpp:value>_al_glNamedProgramLocalParameterI4uiEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNamedProgramLocalParameterI4uivEXT</name></cpp:macro> <cpp:value>_al_glNamedProgramLocalParameterI4uivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNamedProgramLocalParametersI4uivEXT</name></cpp:macro> <cpp:value>_al_glNamedProgramLocalParametersI4uivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetNamedProgramLocalParameterIivEXT</name></cpp:macro> <cpp:value>_al_glGetNamedProgramLocalParameterIivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetNamedProgramLocalParameterIuivEXT</name></cpp:macro> <cpp:value>_al_glGetNamedProgramLocalParameterIuivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTextureParameterIivEXT</name></cpp:macro> <cpp:value>_al_glTextureParameterIivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTextureParameterIuivEXT</name></cpp:macro> <cpp:value>_al_glTextureParameterIuivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetTextureParameterIivEXT</name></cpp:macro> <cpp:value>_al_glGetTextureParameterIivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetTextureParameterIuivEXT</name></cpp:macro> <cpp:value>_al_glGetTextureParameterIuivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexParameterIivEXT</name></cpp:macro> <cpp:value>_al_glMultiTexParameterIivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexParameterIuivEXT</name></cpp:macro> <cpp:value>_al_glMultiTexParameterIuivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMultiTexParameterIivEXT</name></cpp:macro> <cpp:value>_al_glGetMultiTexParameterIivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMultiTexParameterIuivEXT</name></cpp:macro> <cpp:value>_al_glGetMultiTexParameterIuivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform1fEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform1fEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform2fEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform2fEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform3fEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform3fEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform4fEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform4fEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform1iEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform1iEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform2iEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform2iEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform3iEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform3iEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform4iEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform4iEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform1fvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform1fvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform2fvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform2fvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform3fvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform3fvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform4fvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform4fvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform1ivEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform1ivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform2ivEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform2ivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform3ivEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform3ivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform4ivEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform4ivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniformMatrix2fvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniformMatrix2fvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniformMatrix3fvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniformMatrix3fvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniformMatrix4fvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniformMatrix4fvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniformMatrix2x3fvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniformMatrix2x3fvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniformMatrix3x2fvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniformMatrix3x2fvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniformMatrix2x4fvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniformMatrix2x4fvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniformMatrix4x2fvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniformMatrix4x2fvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniformMatrix3x4fvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniformMatrix3x4fvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniformMatrix4x3fvEXT</name></cpp:macro> <cpp:value>_al_glProgramUniformMatrix4x3fvEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform1uiEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform1uiEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform2uiEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform2uiEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform3uiEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform3uiEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform4uiEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform4uiEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform1uivEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform1uivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform2uivEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform2uivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform3uivEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform3uivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniform4uivEXT</name></cpp:macro> <cpp:value>_al_glProgramUniform4uivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNamedBufferDataEXT</name></cpp:macro> <cpp:value>_al_glNamedBufferDataEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNamedBufferSubDataEXT</name></cpp:macro> <cpp:value>_al_glNamedBufferSubDataEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMapNamedBufferEXT</name></cpp:macro> <cpp:value>_al_glMapNamedBufferEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUnmapNamedBufferEXT</name></cpp:macro> <cpp:value>_al_glUnmapNamedBufferEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetNamedBufferParameterivEXT</name></cpp:macro> <cpp:value>_al_glGetNamedBufferParameterivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetNamedBufferPointervEXT</name></cpp:macro> <cpp:value>_al_glGetNamedBufferPointervEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetNamedBufferSubDataEXT</name></cpp:macro> <cpp:value>_al_glGetNamedBufferSubDataEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTextureBufferEXT</name></cpp:macro> <cpp:value>_al_glTextureBufferEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexBufferEXT</name></cpp:macro> <cpp:value>_al_glMultiTexBufferEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNamedRenderbufferStorageEXT</name></cpp:macro> <cpp:value>_al_glNamedRenderbufferStorageEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetNamedRenderbufferParameterivEXT</name></cpp:macro> <cpp:value>_al_glGetNamedRenderbufferParameterivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCheckNamedFramebufferStatusEXT</name></cpp:macro> <cpp:value>_al_glCheckNamedFramebufferStatusEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNamedFramebufferTexture1DEXT</name></cpp:macro> <cpp:value>_al_glNamedFramebufferTexture1DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNamedFramebufferTexture2DEXT</name></cpp:macro> <cpp:value>_al_glNamedFramebufferTexture2DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNamedFramebufferTexture3DEXT</name></cpp:macro> <cpp:value>_al_glNamedFramebufferTexture3DEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNamedFramebufferRenderbufferEXT</name></cpp:macro> <cpp:value>_al_glNamedFramebufferRenderbufferEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetNamedFramebufferAttachmentParameterivEXT</name></cpp:macro> <cpp:value>_al_glGetNamedFramebufferAttachmentParameterivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenerateTextureMipmapEXT</name></cpp:macro> <cpp:value>_al_glGenerateTextureMipmapEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenerateMultiTexMipmapEXT</name></cpp:macro> <cpp:value>_al_glGenerateMultiTexMipmapEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFramebufferDrawBufferEXT</name></cpp:macro> <cpp:value>_al_glFramebufferDrawBufferEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFramebufferDrawBuffersEXT</name></cpp:macro> <cpp:value>_al_glFramebufferDrawBuffersEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFramebufferReadBufferEXT</name></cpp:macro> <cpp:value>_al_glFramebufferReadBufferEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetFramebufferParameterivEXT</name></cpp:macro> <cpp:value>_al_glGetFramebufferParameterivEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNamedRenderbufferStorageMultisampleEXT</name></cpp:macro> <cpp:value>_al_glNamedRenderbufferStorageMultisampleEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNamedRenderbufferStorageMultisampleCoverageEXT</name></cpp:macro> <cpp:value>_al_glNamedRenderbufferStorageMultisampleCoverageEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNamedFramebufferTextureEXT</name></cpp:macro> <cpp:value>_al_glNamedFramebufferTextureEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNamedFramebufferTextureLayerEXT</name></cpp:macro> <cpp:value>_al_glNamedFramebufferTextureLayerEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNamedFramebufferTextureFaceEXT</name></cpp:macro> <cpp:value>_al_glNamedFramebufferTextureFaceEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTextureRenderbufferEXT</name></cpp:macro> <cpp:value>_al_glTextureRenderbufferEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMultiTexRenderbufferEXT</name></cpp:macro> <cpp:value>_al_glMultiTexRenderbufferEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_explicit_multisample</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetMultisamplefvNV</name></cpp:macro> <cpp:value>_al_glGetMultisamplefvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSampleMaskIndexedNV</name></cpp:macro> <cpp:value>_al_glSampleMaskIndexedNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexRenderbufferNV</name></cpp:macro> <cpp:value>_al_glTexRenderbufferNV</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_transform_feedback2</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindTransformFeedbackNV</name></cpp:macro> <cpp:value>_al_glBindTransformFeedbackNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeleteTransformFeedbacksNV</name></cpp:macro> <cpp:value>_al_glDeleteTransformFeedbacksNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenTransformFeedbacksNV</name></cpp:macro> <cpp:value>_al_glGenTransformFeedbacksNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsTransformFeedbackNV</name></cpp:macro> <cpp:value>_al_glIsTransformFeedbackNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glPauseTransformFeedbackNV</name></cpp:macro> <cpp:value>_al_glPauseTransformFeedbackNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glResumeTransformFeedbackNV</name></cpp:macro> <cpp:value>_al_glResumeTransformFeedbackNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDrawTransformFeedbackNV</name></cpp:macro> <cpp:value>_al_glDrawTransformFeedbackNV</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_AMD_performance_monitor</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetPerfMonitorGroupsAMD</name></cpp:macro> <cpp:value>_al_glGetPerfMonitorGroupsAMD</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetPerfMonitorCountersAMD</name></cpp:macro> <cpp:value>_al_glGetPerfMonitorCountersAMD</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetPerfMonitorGroupStringAMD</name></cpp:macro> <cpp:value>_al_glGetPerfMonitorGroupStringAMD</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetPerfMonitorCounterStringAMD</name></cpp:macro> <cpp:value>_al_glGetPerfMonitorCounterStringAMD</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetPerfMonitorCounterInfoAMD</name></cpp:macro> <cpp:value>_al_glGetPerfMonitorCounterInfoAMD</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGenPerfMonitorsAMD</name></cpp:macro> <cpp:value>_al_glGenPerfMonitorsAMD</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDeletePerfMonitorsAMD</name></cpp:macro> <cpp:value>_al_glDeletePerfMonitorsAMD</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSelectPerfMonitorCountersAMD</name></cpp:macro> <cpp:value>_al_glSelectPerfMonitorCountersAMD</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBeginPerfMonitorAMD</name></cpp:macro> <cpp:value>_al_glBeginPerfMonitorAMD</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEndPerfMonitorAMD</name></cpp:macro> <cpp:value>_al_glEndPerfMonitorAMD</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetPerfMonitorCounterDataAMD</name></cpp:macro> <cpp:value>_al_glGetPerfMonitorCounterDataAMD</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_AMD_vertex_shader_tesselator</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTessellationFactorAMD</name></cpp:macro> <cpp:value>_al_glTessellationFactorAMD</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTessellationModeAMD</name></cpp:macro> <cpp:value>_al_glTessellationModeAMD</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_provoking_vertex</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProvokingVertexEXT</name></cpp:macro> <cpp:value>_al_glProvokingVertexEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_AMD_draw_buffers_blend</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBlendFuncIndexedAMD</name></cpp:macro> <cpp:value>_al_glBlendFuncIndexedAMD</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBlendFuncSeparateIndexedAMD</name></cpp:macro> <cpp:value>_al_glBlendFuncSeparateIndexedAMD</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBlendEquationIndexedAMD</name></cpp:macro> <cpp:value>_al_glBlendEquationIndexedAMD</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBlendEquationSeparateIndexedAMD</name></cpp:macro> <cpp:value>_al_glBlendEquationSeparateIndexedAMD</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_APPLE_texture_range</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTextureRangeAPPLE</name></cpp:macro> <cpp:value>_al_glTextureRangeAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetTexParameterPointervAPPLE</name></cpp:macro> <cpp:value>_al_glGetTexParameterPointervAPPLE</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_APPLE_vertex_program_evaluators</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEnableVertexAttribAPPLE</name></cpp:macro> <cpp:value>_al_glEnableVertexAttribAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glDisableVertexAttribAPPLE</name></cpp:macro> <cpp:value>_al_glDisableVertexAttribAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsVertexAttribEnabledAPPLE</name></cpp:macro> <cpp:value>_al_glIsVertexAttribEnabledAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMapVertexAttrib1dAPPLE</name></cpp:macro> <cpp:value>_al_glMapVertexAttrib1dAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMapVertexAttrib1fAPPLE</name></cpp:macro> <cpp:value>_al_glMapVertexAttrib1fAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMapVertexAttrib2dAPPLE</name></cpp:macro> <cpp:value>_al_glMapVertexAttrib2dAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMapVertexAttrib2fAPPLE</name></cpp:macro> <cpp:value>_al_glMapVertexAttrib2fAPPLE</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_APPLE_object_purgeable</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glObjectPurgeableAPPLE</name></cpp:macro> <cpp:value>_al_glObjectPurgeableAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glObjectUnpurgeableAPPLE</name></cpp:macro> <cpp:value>_al_glObjectUnpurgeableAPPLE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetObjectParameterivAPPLE</name></cpp:macro> <cpp:value>_al_glGetObjectParameterivAPPLE</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_video_capture</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBeginVideoCaptureNV</name></cpp:macro> <cpp:value>_al_glBeginVideoCaptureNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindVideoCaptureStreamBufferNV</name></cpp:macro> <cpp:value>_al_glBindVideoCaptureStreamBufferNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBindVideoCaptureStreamTextureNV</name></cpp:macro> <cpp:value>_al_glBindVideoCaptureStreamTextureNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEndVideoCaptureNV</name></cpp:macro> <cpp:value>_al_glEndVideoCaptureNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVideoCaptureivNV</name></cpp:macro> <cpp:value>_al_glGetVideoCaptureivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVideoCaptureStreamivNV</name></cpp:macro> <cpp:value>_al_glGetVideoCaptureStreamivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVideoCaptureStreamfvNV</name></cpp:macro> <cpp:value>_al_glGetVideoCaptureStreamfvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetVideoCaptureStreamdvNV</name></cpp:macro> <cpp:value>_al_glGetVideoCaptureStreamdvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVideoCaptureNV</name></cpp:macro> <cpp:value>_al_glVideoCaptureNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVideoCaptureStreamParameterivNV</name></cpp:macro> <cpp:value>_al_glVideoCaptureStreamParameterivNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVideoCaptureStreamParameterfvNV</name></cpp:macro> <cpp:value>_al_glVideoCaptureStreamParameterfvNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVideoCaptureStreamParameterdvNV</name></cpp:macro> <cpp:value>_al_glVideoCaptureStreamParameterdvNV</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_EXT_separate_shader_objects</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUseShaderProgramEXT</name></cpp:macro> <cpp:value>_al_glUseShaderProgramEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glActiveProgramEXT</name></cpp:macro> <cpp:value>_al_glActiveProgramEXT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glCreateShaderProgramEXT</name></cpp:macro> <cpp:value>_al_glCreateShaderProgramEXT</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_shader_buffer_load</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMakeBufferResidentNV</name></cpp:macro> <cpp:value>_al_glMakeBufferResidentNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMakeBufferNonResidentNV</name></cpp:macro> <cpp:value>_al_glMakeBufferNonResidentNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsBufferResidentNV</name></cpp:macro> <cpp:value>_al_glIsBufferResidentNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMakeNamedBufferResidentNV</name></cpp:macro> <cpp:value>_al_glMakeNamedBufferResidentNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glMakeNamedBufferNonResidentNV</name></cpp:macro> <cpp:value>_al_glMakeNamedBufferNonResidentNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIsNamedBufferResidentNV</name></cpp:macro> <cpp:value>_al_glIsNamedBufferResidentNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetBufferParameterui64vNV</name></cpp:macro> <cpp:value>_al_glGetBufferParameterui64vNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetNamedBufferParameterui64vNV</name></cpp:macro> <cpp:value>_al_glGetNamedBufferParameterui64vNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetIntegerui64vNV</name></cpp:macro> <cpp:value>_al_glGetIntegerui64vNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformui64NV</name></cpp:macro> <cpp:value>_al_glUniformui64NV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glUniformui64vNV</name></cpp:macro> <cpp:value>_al_glUniformui64vNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetUniformui64vNV</name></cpp:macro> <cpp:value>_al_glGetUniformui64vNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniformui64NV</name></cpp:macro> <cpp:value>_al_glProgramUniformui64NV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glProgramUniformui64vNV</name></cpp:macro> <cpp:value>_al_glProgramUniformui64vNV</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_vertex_buffer_unified_memory</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glBufferAddressRangeNV</name></cpp:macro> <cpp:value>_al_glBufferAddressRangeNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexFormatNV</name></cpp:macro> <cpp:value>_al_glVertexFormatNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glNormalFormatNV</name></cpp:macro> <cpp:value>_al_glNormalFormatNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glColorFormatNV</name></cpp:macro> <cpp:value>_al_glColorFormatNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glIndexFormatNV</name></cpp:macro> <cpp:value>_al_glIndexFormatNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTexCoordFormatNV</name></cpp:macro> <cpp:value>_al_glTexCoordFormatNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glEdgeFlagFormatNV</name></cpp:macro> <cpp:value>_al_glEdgeFlagFormatNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glSecondaryColorFormatNV</name></cpp:macro> <cpp:value>_al_glSecondaryColorFormatNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glFogCoordFormatNV</name></cpp:macro> <cpp:value>_al_glFogCoordFormatNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribFormatNV</name></cpp:macro> <cpp:value>_al_glVertexAttribFormatNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glVertexAttribIFormatNV</name></cpp:macro> <cpp:value>_al_glVertexAttribIFormatNV</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glGetIntegerui64i_vNV</name></cpp:macro> <cpp:value>_al_glGetIntegerui64i_vNV</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>_ALLEGRO_GL_NV_texture_barrier</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glTextureBarrierNV</name></cpp:macro> <cpp:value>_al_glTextureBarrierNV</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
