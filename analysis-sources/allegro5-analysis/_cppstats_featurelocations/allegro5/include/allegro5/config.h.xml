<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\include\allegro5\config.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__al_included_allegro5_config_h</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__al_included_allegro5_config_h</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/file.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>



<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_CONFIG</name></name></type> <name>ALLEGRO_CONFIG</name>;</typedef>



<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_CONFIG_SECTION</name></name></type> <name>ALLEGRO_CONFIG_SECTION</name>;</typedef>



<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_CONFIG_ENTRY</name></name></type> <name>ALLEGRO_CONFIG_ENTRY</name>;</typedef>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_CONFIG</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_create_config</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_add_config_section</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_CONFIG</name> <operator>*</operator><name>config</name><operator>,</operator> <specifier>const</specifier> <name>char</name> <operator>*</operator><name>name</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_set_config_value</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_CONFIG</name> <operator>*</operator><name>config</name><operator>,</operator> <specifier>const</specifier> <name>char</name> <operator>*</operator><name>section</name><operator>,</operator> <specifier>const</specifier> <name>char</name> <operator>*</operator><name>key</name><operator>,</operator> <specifier>const</specifier> <name>char</name> <operator>*</operator><name>value</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_add_config_comment</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_CONFIG</name> <operator>*</operator><name>config</name><operator>,</operator> <specifier>const</specifier> <name>char</name> <operator>*</operator><name>section</name><operator>,</operator> <specifier>const</specifier> <name>char</name> <operator>*</operator><name>comment</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><specifier>const</specifier> <name>char</name><operator>*</operator></expr></argument>, <argument><expr><name>al_get_config_value</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_CONFIG</name> <operator>*</operator><name>config</name><operator>,</operator> <specifier>const</specifier> <name>char</name> <operator>*</operator><name>section</name><operator>,</operator> <specifier>const</specifier> <name>char</name> <operator>*</operator><name>key</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_CONFIG</name><operator>*</operator></expr></argument>, <argument><expr><name>al_load_config_file</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><name>filename</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_CONFIG</name><operator>*</operator></expr></argument>, <argument><expr><name>al_load_config_file_f</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_FILE</name> <operator>*</operator><name>filename</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_save_config_file</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><name>filename</name><operator>,</operator> <specifier>const</specifier> <name>ALLEGRO_CONFIG</name> <operator>*</operator><name>config</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_save_config_file_f</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_FILE</name> <operator>*</operator><name>file</name><operator>,</operator> <specifier>const</specifier> <name>ALLEGRO_CONFIG</name> <operator>*</operator><name>config</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_merge_config_into</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_CONFIG</name> <operator>*</operator><name>master</name><operator>,</operator> <specifier>const</specifier> <name>ALLEGRO_CONFIG</name> <operator>*</operator><name>add</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_CONFIG</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_merge_config</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_CONFIG</name> <operator>*</operator><name>cfg1</name><operator>,</operator> <specifier>const</specifier> <name>ALLEGRO_CONFIG</name> <operator>*</operator><name>cfg2</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_destroy_config</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_CONFIG</name> <operator>*</operator><name>config</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_remove_config_section</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_CONFIG</name> <operator>*</operator><name>config</name><operator>,</operator>
<name>char</name> <specifier>const</specifier> <operator>*</operator><name>section</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_remove_config_key</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_CONFIG</name> <operator>*</operator><name>config</name><operator>,</operator>
<name>char</name> <specifier>const</specifier> <operator>*</operator><name>section</name><operator>,</operator> <name>char</name> <specifier>const</specifier> <operator>*</operator><name>key</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>char</name> <specifier>const</specifier> <operator>*</operator></expr></argument>, <argument><expr><name>al_get_first_config_section</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_CONFIG</name> <specifier>const</specifier> <operator>*</operator><name>config</name><operator>,</operator> <name>ALLEGRO_CONFIG_SECTION</name> <operator>*</operator><operator>*</operator><name>iterator</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>char</name> <specifier>const</specifier> <operator>*</operator></expr></argument>, <argument><expr><name>al_get_next_config_section</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_CONFIG_SECTION</name> <operator>*</operator><operator>*</operator><name>iterator</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>char</name> <specifier>const</specifier> <operator>*</operator></expr></argument>, <argument><expr><name>al_get_first_config_entry</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_CONFIG</name> <specifier>const</specifier> <operator>*</operator><name>config</name><operator>,</operator> <name>char</name> <specifier>const</specifier> <operator>*</operator><name>section</name><operator>,</operator>
<name>ALLEGRO_CONFIG_ENTRY</name> <operator>*</operator><operator>*</operator><name>iterator</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>char</name> <specifier>const</specifier> <operator>*</operator></expr></argument>, <argument><expr><name>al_get_next_config_entry</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_CONFIG_ENTRY</name> <operator>*</operator><operator>*</operator><name>iterator</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
