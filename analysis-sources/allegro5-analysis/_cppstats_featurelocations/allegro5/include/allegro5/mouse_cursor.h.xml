<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\include\allegro5\mouse_cursor.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__al_included_allegro5_mouse_cursor_h</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__al_included_allegro5_mouse_cursor_h</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/base.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_MOUSE_CURSOR</name></name></type> <name>ALLEGRO_MOUSE_CURSOR</name>;</typedef>

<typedef>typedef <type><enum>enum <name>ALLEGRO_SYSTEM_MOUSE_CURSOR</name>
<block>{
<decl><name>ALLEGRO_SYSTEM_MOUSE_CURSOR_NONE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>ALLEGRO_SYSTEM_MOUSE_CURSOR_DEFAULT</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>ALLEGRO_SYSTEM_MOUSE_CURSOR_ARROW</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>ALLEGRO_SYSTEM_MOUSE_CURSOR_BUSY</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,
<decl><name>ALLEGRO_SYSTEM_MOUSE_CURSOR_QUESTION</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,
<decl><name>ALLEGRO_SYSTEM_MOUSE_CURSOR_EDIT</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,
<decl><name>ALLEGRO_SYSTEM_MOUSE_CURSOR_MOVE</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,
<decl><name>ALLEGRO_SYSTEM_MOUSE_CURSOR_RESIZE_N</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>,
<decl><name>ALLEGRO_SYSTEM_MOUSE_CURSOR_RESIZE_W</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,
<decl><name>ALLEGRO_SYSTEM_MOUSE_CURSOR_RESIZE_S</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>,
<decl><name>ALLEGRO_SYSTEM_MOUSE_CURSOR_RESIZE_E</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>,
<decl><name>ALLEGRO_SYSTEM_MOUSE_CURSOR_RESIZE_NW</name> <init>= <expr><literal type="number">11</literal></expr></init></decl>,
<decl><name>ALLEGRO_SYSTEM_MOUSE_CURSOR_RESIZE_SW</name> <init>= <expr><literal type="number">12</literal></expr></init></decl>,
<decl><name>ALLEGRO_SYSTEM_MOUSE_CURSOR_RESIZE_SE</name> <init>= <expr><literal type="number">13</literal></expr></init></decl>,
<decl><name>ALLEGRO_SYSTEM_MOUSE_CURSOR_RESIZE_NE</name> <init>= <expr><literal type="number">14</literal></expr></init></decl>,
<decl><name>ALLEGRO_SYSTEM_MOUSE_CURSOR_PROGRESS</name> <init>= <expr><literal type="number">15</literal></expr></init></decl>,
<decl><name>ALLEGRO_SYSTEM_MOUSE_CURSOR_PRECISION</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>,
<decl><name>ALLEGRO_SYSTEM_MOUSE_CURSOR_LINK</name> <init>= <expr><literal type="number">17</literal></expr></init></decl>,
<decl><name>ALLEGRO_SYSTEM_MOUSE_CURSOR_ALT_SELECT</name> <init>= <expr><literal type="number">18</literal></expr></init></decl>,
<decl><name>ALLEGRO_SYSTEM_MOUSE_CURSOR_UNAVAILABLE</name> <init>= <expr><literal type="number">19</literal></expr></init></decl>,
<decl><name>ALLEGRO_NUM_SYSTEM_MOUSE_CURSORS</name></decl>
}</block></enum></type> <name>ALLEGRO_SYSTEM_MOUSE_CURSOR</name>;</typedef>

<struct_decl>struct <name>ALLEGRO_BITMAP</name>;</struct_decl>
<struct_decl>struct <name>ALLEGRO_DISPLAY</name>;</struct_decl>


<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_MOUSE_CURSOR</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_create_mouse_cursor</name></expr></argument>, <argument><expr><operator>(</operator>
struct <name>ALLEGRO_BITMAP</name> <operator>*</operator><name>sprite</name><operator>,</operator> <name>int</name> <name>xfocus</name><operator>,</operator> <name>int</name> <name>yfocus</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_destroy_mouse_cursor</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_MOUSE_CURSOR</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_set_mouse_cursor</name></expr></argument>, <argument><expr><operator>(</operator>struct <name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>,</operator>
<name>ALLEGRO_MOUSE_CURSOR</name> <operator>*</operator><name>cursor</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_set_system_mouse_cursor</name></expr></argument>, <argument><expr><operator>(</operator>struct <name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>,</operator>
<name>ALLEGRO_SYSTEM_MOUSE_CURSOR</name> <name>cursor_id</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_show_mouse_cursor</name></expr></argument>, <argument><expr><operator>(</operator>struct <name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_hide_mouse_cursor</name></expr></argument>, <argument><expr><operator>(</operator>struct <name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


</unit>
