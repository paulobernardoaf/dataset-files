<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats_featurelocations\allegro5\include\allegro5\transformations.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__al_included_allegro5_transformations_h</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__al_included_allegro5_transformations_h</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/display.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>



<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_TRANSFORM</name></name></type> <name>ALLEGRO_TRANSFORM</name>;</typedef>

<struct>struct <name>ALLEGRO_TRANSFORM</name> <block>{
<decl_stmt><decl><type><name>float</name></type> <name><name>m</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>
}</block>;</struct>


<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_use_transform</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_TRANSFORM</name><operator>*</operator> <name>trans</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_use_projection_transform</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_TRANSFORM</name><operator>*</operator> <name>trans</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_copy_transform</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_TRANSFORM</name><operator>*</operator> <name>dest</name><operator>,</operator> <specifier>const</specifier> <name>ALLEGRO_TRANSFORM</name><operator>*</operator> <name>src</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_identity_transform</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_TRANSFORM</name><operator>*</operator> <name>trans</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_build_transform</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_TRANSFORM</name><operator>*</operator> <name>trans</name><operator>,</operator> <name>float</name> <name>x</name><operator>,</operator> <name>float</name> <name>y</name><operator>,</operator> <name>float</name> <name>sx</name><operator>,</operator> <name>float</name> <name>sy</name><operator>,</operator> <name>float</name> <name>theta</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_build_camera_transform</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_TRANSFORM</name> <operator>*</operator><name>trans</name><operator>,</operator>
<name>float</name> <name>position_x</name><operator>,</operator> <name>float</name> <name>position_y</name><operator>,</operator> <name>float</name> <name>position_z</name><operator>,</operator>
<name>float</name> <name>look_x</name><operator>,</operator> <name>float</name> <name>look_y</name><operator>,</operator> <name>float</name> <name>look_z</name><operator>,</operator>
<name>float</name> <name>up_x</name><operator>,</operator> <name>float</name> <name>up_y</name><operator>,</operator> <name>float</name> <name>up_z</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_translate_transform</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_TRANSFORM</name><operator>*</operator> <name>trans</name><operator>,</operator> <name>float</name> <name>x</name><operator>,</operator> <name>float</name> <name>y</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_translate_transform_3d</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_TRANSFORM</name> <operator>*</operator><name>trans</name><operator>,</operator> <name>float</name> <name>x</name><operator>,</operator> <name>float</name> <name>y</name><operator>,</operator> <name>float</name> <name>z</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_rotate_transform</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_TRANSFORM</name><operator>*</operator> <name>trans</name><operator>,</operator> <name>float</name> <name>theta</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_rotate_transform_3d</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_TRANSFORM</name> <operator>*</operator><name>trans</name><operator>,</operator> <name>float</name> <name>x</name><operator>,</operator> <name>float</name> <name>y</name><operator>,</operator> <name>float</name> <name>z</name><operator>,</operator> <name>float</name> <name>angle</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_scale_transform</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_TRANSFORM</name><operator>*</operator> <name>trans</name><operator>,</operator> <name>float</name> <name>sx</name><operator>,</operator> <name>float</name> <name>sy</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_scale_transform_3d</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_TRANSFORM</name> <operator>*</operator><name>trans</name><operator>,</operator> <name>float</name> <name>sx</name><operator>,</operator> <name>float</name> <name>sy</name><operator>,</operator> <name>float</name> <name>sz</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_transform_coordinates</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_TRANSFORM</name><operator>*</operator> <name>trans</name><operator>,</operator> <name>float</name><operator>*</operator> <name>x</name><operator>,</operator> <name>float</name><operator>*</operator> <name>y</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_transform_coordinates_3d</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_TRANSFORM</name> <operator>*</operator><name>trans</name><operator>,</operator>
<name>float</name> <operator>*</operator><name>x</name><operator>,</operator> <name>float</name> <operator>*</operator><name>y</name><operator>,</operator> <name>float</name> <operator>*</operator><name>z</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_transform_coordinates_4d</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_TRANSFORM</name> <operator>*</operator><name>trans</name><operator>,</operator>
<name>float</name> <operator>*</operator><name>x</name><operator>,</operator> <name>float</name> <operator>*</operator><name>y</name><operator>,</operator> <name>float</name> <operator>*</operator><name>z</name><operator>,</operator> <name>float</name> <operator>*</operator><name>w</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_transform_coordinates_3d_projective</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_TRANSFORM</name> <operator>*</operator><name>trans</name><operator>,</operator>
<name>float</name> <operator>*</operator><name>x</name><operator>,</operator> <name>float</name> <operator>*</operator><name>y</name><operator>,</operator> <name>float</name> <operator>*</operator><name>z</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_compose_transform</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_TRANSFORM</name><operator>*</operator> <name>trans</name><operator>,</operator> <specifier>const</specifier> <name>ALLEGRO_TRANSFORM</name><operator>*</operator> <name>other</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ALLEGRO_TRANSFORM</name><operator>*</operator></expr></argument>, <argument><expr><name>al_get_current_transform</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ALLEGRO_TRANSFORM</name><operator>*</operator></expr></argument>, <argument><expr><name>al_get_current_inverse_transform</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ALLEGRO_TRANSFORM</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_get_current_projection_transform</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_invert_transform</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_TRANSFORM</name> <operator>*</operator><name>trans</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_transpose_transform</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_TRANSFORM</name> <operator>*</operator><name>trans</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_check_inverse</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_TRANSFORM</name> <operator>*</operator><name>trans</name><operator>,</operator> <name>float</name> <name>tol</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_orthographic_transform</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_TRANSFORM</name> <operator>*</operator><name>trans</name><operator>,</operator> <name>float</name> <name>left</name><operator>,</operator> <name>float</name> <name>top</name><operator>,</operator> <name>float</name> <name>n</name><operator>,</operator> <name>float</name> <name>right</name><operator>,</operator> <name>float</name> <name>bottom</name><operator>,</operator> <name>float</name> <name>f</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_perspective_transform</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_TRANSFORM</name> <operator>*</operator><name>trans</name><operator>,</operator> <name>float</name> <name>left</name><operator>,</operator> <name>float</name> <name>top</name><operator>,</operator> <name>float</name> <name>n</name><operator>,</operator> <name>float</name> <name>right</name><operator>,</operator> <name>float</name> <name>bottom</name><operator>,</operator> <name>float</name> <name>f</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_horizontal_shear_transform</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_TRANSFORM</name> <operator>*</operator><name>trans</name><operator>,</operator> <name>float</name> <name>theta</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_vertical_shear_transform</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_TRANSFORM</name> <operator>*</operator><name>trans</name><operator>,</operator> <name>float</name> <name>theta</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
