<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\demos\skater\src\quadtree.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"global.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TRIFLAGS_WIDTH</name></cpp:macro> <cpp:value>0x07f</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TRIFLAGS_EDGE</name></cpp:macro> <cpp:value>0x080</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OBJFLAGS_VISIBLE</name></cpp:macro> <cpp:value>0x001</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OBJFLAGS_DOOR</name></cpp:macro> <cpp:value>0x002</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FLAGS_COLLIDABLE</name></cpp:macro> <cpp:value>0x100</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FLAGS_FOREGROUND</name></cpp:macro> <cpp:value>0x200</cpp:value></cpp:define>

<struct>struct <name>Material</name> <block>{

<decl_stmt><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>Edge</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>Fill</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>Friction</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>Material</name></name> <modifier>*</modifier></type><name>Next</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>Vertex</name> <block>{

<decl_stmt><decl><type><name>double</name></type> <name><name>Pos</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name><name>Normal</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>Edge</name></name> <modifier>*</modifier></type><name><name>Edges</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>Vertex</name></name> <modifier>*</modifier></type><name>Next</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>SmallVertex</name> <block>{

<decl_stmt><decl><type><name>double</name></type> <name><name>Pos</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>BoundingBox</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>SmallVertex</name></name></type> <name>TL</name></decl>, <decl><type ref="prev"/><name>BR</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>Triangle</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>BoundingBox</name></name></type> <name>Bounder</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>Material</name></name> <modifier>*</modifier></type><name>Material</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>Triangle</name></name> <modifier>*</modifier></type><name>Next</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>Vertex</name></name> <modifier>*</modifier></type><name><name>Edges</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name><name>EdgeFlags</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>LastFrame</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>ObjectType</name> <block>{

<decl_stmt><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>Image</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_SAMPLE</name> <modifier>*</modifier></type><name>CollectNoise</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>Radius</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>ObjectType</name></name> <modifier>*</modifier></type><name>Next</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>Object</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>BoundingBox</name></name></type> <name>Bounder</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>ObjectType</name></name> <modifier>*</modifier></type><name>ObjType</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name><name>Pos</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>Flags</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>Angle</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>LastFrame</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>Object</name></name> <modifier>*</modifier></type><name>Next</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>Edge</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>BoundingBox</name></name></type> <name>Bounder</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>Material</name></name> <modifier>*</modifier></type><name>Material</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>Edge</name></name> <modifier>*</modifier></type><name>Next</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>a</name></decl>, <decl><type ref="prev"/><name>b</name></decl>, <decl><type ref="prev"/><name>c</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>Vertex</name></name> <modifier>*</modifier></type><name><name>EndPoints</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>Container</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>Container</name></name> <modifier>*</modifier></type><name>Next</name></decl>;</decl_stmt>

<enum>enum <block>{ <decl><name>TRIANGLE</name></decl>, <decl><name>OBJECT</name></decl>, <decl><name>EDGE</name></decl> }</block> <decl><name>Type</name></decl>;</enum>

<union>union <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>Edge</name></name> <modifier>*</modifier></type><name>E</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>Triangle</name></name> <modifier>*</modifier></type><name>T</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>Object</name></name> <modifier>*</modifier></type><name>O</name></decl>;</decl_stmt>

}</block> <decl><name>Content</name></decl>;</union>

}</block>;</struct>

<struct>struct <name>QuadTreeNode</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>BoundingBox</name></name></type> <name>Bounder</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>NumContents</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>Container</name></name> <modifier>*</modifier></type><name>Contents</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>Container</name></name> <modifier>*</modifier></type><name>PostContents</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>QuadTreeNode</name></name> <modifier>*</modifier></type><name>Children</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>QuadTreeNode</name></name> <modifier>*</modifier></type><name>Next</name></decl>;</decl_stmt>

}</block>;</struct>

<struct>struct <name>Level</name> <block>{

<decl_stmt><decl><type><name><name>struct</name> <name>QuadTreeNode</name></name></type> <name>DisplayTree</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>VisibleList</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>QuadTreeNode</name></name></type> <name>CollisionTree</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name><name>PlayerStartPos</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>TotalObjects</name></decl>, <decl><type ref="prev"/><name>ObjectsRequired</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>LevelState</name></name> <modifier>*</modifier></type><name>InitialState</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>ObjectType</name></name> <modifier>*</modifier></type><name>AllObjectTypes</name></decl>, <decl><type ref="prev"/><name>Door</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>Material</name></name> <modifier>*</modifier></type><name>AllMats</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>Vertex</name></name> <modifier>*</modifier></type><name>AllVerts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>Edge</name></name> <modifier>*</modifier></type><name>AllEdges</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>Triangle</name></name> <modifier>*</modifier></type><name>AllTris</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>Object</name></name> <modifier>*</modifier></type><name>AllObjects</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>DoorOpen</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>DoorShut</name></decl>;</decl_stmt>

}</block>;</struct>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>SetupQuadTree</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>QuadTreeNode</name></name> <modifier>*</modifier></type><name>Tree</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x1</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y1</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>x2</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y2</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>FreeQuadTree</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>QuadTreeNode</name></name> <modifier>*</modifier></type><name>Tree</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>BeginQuadTreeDraw</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Level</name></name> <modifier>*</modifier></type><name>Lvl</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>QuadTreeNode</name></name> <modifier>*</modifier></type><name>TriTree</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>BoundingBox</name></name> <modifier>*</modifier></type><name>ScrBounder</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>framec</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>EndQuadTreeDraw</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Level</name></name> <modifier>*</modifier></type><name>Lvl</name></decl></parameter>,

<parameter><decl><type><name><name>struct</name> <name>BoundingBox</name></name> <modifier>*</modifier></type><name>ScrBounder</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>framec</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name><name>struct</name> <name>QuadTreeNode</name></name> <modifier>*</modifier></type><name>GetCollisionNode</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Level</name></name> <modifier>*</modifier></type><name>lev</name></decl></parameter>, <parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>pos</name></decl></parameter>,

<parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>vec</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>AddTriangle</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Level</name></name> <modifier>*</modifier></type><name>Level</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>Triangle</name></name> <modifier>*</modifier></type><name>NewTri</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>AddEdge</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Level</name></name> <modifier>*</modifier></type><name>level</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>Edge</name></name> <modifier>*</modifier></type><name>NewEdge</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>AddObject</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Level</name></name> <modifier>*</modifier></type><name>level</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>Object</name></name> <modifier>*</modifier></type><name>NewObject</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>DisplayTree</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>SplitTree</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>QuadTreeNode</name></name> <modifier>*</modifier></type><name>Tree</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>OrderTree</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>QuadTreeNode</name></name> <modifier>*</modifier></type><name>Tree</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>PostTree</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
