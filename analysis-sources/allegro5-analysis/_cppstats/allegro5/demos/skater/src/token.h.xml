<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\demos\skater\src\token.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>Error</name></decl>, <decl><type ref="prev"/><name>Lines</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name></type> <name><name>ErrorText</name><index>[<expr><literal type="number">1024</literal></expr>]</index></name></decl>;</decl_stmt>

<enum>enum <name>TokenTypes</name> <block>{

<decl><name>TK_OPENBRACE</name></decl>, <decl><name>TK_CLOSEBRACE</name></decl>, <decl><name>TK_COMMA</name></decl>,

<decl><name>TK_STRING</name></decl>, <decl><name>TK_NUMBER</name></decl>, <decl><name>TK_COMMENT</name></decl>,

<decl><name>TK_UNKNOWN</name></decl>

}</block>;</enum>

<struct>struct <name>Tok</name> <block>{

<decl_stmt><decl><type><name><name>enum</name> <name>TokenTypes</name></name></type> <name>Type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>Text</name><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>FQuantity</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>IQuantity</name></decl>;</decl_stmt>

}</block>;</struct>

<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>Tok</name></name></type> <name>Token</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>ALLEGRO_FILE</name> <modifier>*</modifier></type><name>input</name></decl>;</decl_stmt> 

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>GetToken</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>ExpectToken</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>TokenTypes</name></name></type> <name>Type</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
