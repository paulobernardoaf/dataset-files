<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\demos\skater\src\menu.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"global.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"background_scroller.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"credits.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"menu.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"music.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vcontroller.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gamepad.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mouse.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MIN</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((x) &lt; (y)) ? (x) : (y))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((x) &gt; (y)) ? (x) : (y))</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>selected_item</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>item_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>locked</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>freq_variation</name> <init>= <expr><literal type="number">100</literal></expr></init></decl>;</decl_stmt>

<function><type><name>void</name></type> <name>init_demo_menu</name><parameter_list>(<parameter><decl><type><name>DEMO_MENU</name> <modifier>*</modifier></type> <name>menu</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>PlayMusic</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><name>selected_item</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>item_count</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>locked</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>proc</name> <operator>!=</operator> <name>NULL</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>proc</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>DEMO_MENU_MSG_INIT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name>item_count</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>proc</name> <operator>!=</operator> <name>NULL</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>flags</name> <operator>&amp;</operator> <name>DEMO_MENU_SELECTED</name><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>selected_item</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<if_stmt><if>if <condition>(<expr><name>selected_item</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>proc</name> <operator>!=</operator> <name>NULL</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>flags</name> <operator>&amp;</operator> <name>DEMO_MENU_SELECTABLE</name><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>selected_item</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>flags</name> <operator>|=</operator> <name>DEMO_MENU_SELECTED</name></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>PlayMusic</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>play_music</name><argument_list>(<argument><expr><name>DEMO_MIDI_MENU</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>update_demo_menu</name><parameter_list>(<parameter><decl><type><name>DEMO_MENU</name> <modifier>*</modifier></type> <name>menu</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>tmp</name></decl>, <decl><type ref="prev"/><name>c</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>update_background</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>update_credits</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>selected_item</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>menu</name><index>[<expr><name>selected_item</name></expr>]</index></name><operator>.</operator><call><name>proc</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>menu</name><index>[<expr><name>selected_item</name></expr>]</index></name></expr></argument>, <argument><expr><name>DEMO_MENU_MSG_KEY</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<for>for <control>(<init><expr><name>tmp</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name><name>menu</name><index>[<expr><name>tmp</name></expr>]</index></name><operator>.</operator><name>proc</name> <operator>!=</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>tmp</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>menu</name><index>[<expr><name>tmp</name></expr>]</index></name><operator>.</operator><call><name>proc</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>menu</name><index>[<expr><name>tmp</name></expr>]</index></name></expr></argument>, <argument><expr><name>DEMO_MENU_MSG_TICK</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call> <operator>==</operator> <name>DEMO_MENU_LOCK</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>locked</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<return>return <expr><name>DEMO_MENU_CONTINUE</name></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<if_stmt><if>if <condition>(<expr><name>locked</name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<return>return <expr><name>DEMO_MENU_CONTINUE</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>key_pressed</name><argument_list>(<argument><expr><name>ALLEGRO_KEY_ESCAPE</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<return>return <expr><name>DEMO_MENU_BACK</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>mouse_button_pressed</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>proc</name> <operator>!=</operator> <name>NULL</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>mouse_x</name><argument_list>()</argument_list></call> <operator>&gt;=</operator> <name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>x</name> <operator>&amp;&amp;</operator> <call><name>mouse_y</name><argument_list>()</argument_list></call> <operator>&gt;=</operator> <name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>y</name> <operator>&amp;&amp;</operator>

<call><name>mouse_x</name><argument_list>()</argument_list></call> <operator>&lt;</operator> <name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>x</name> <operator>+</operator> <name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>w</name> <operator>&amp;&amp;</operator>

<call><name>mouse_y</name><argument_list>()</argument_list></call> <operator>&lt;</operator> <name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>y</name> <operator>+</operator> <name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>h</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>flags</name> <operator>&amp;</operator> <name>DEMO_MENU_SELECTABLE</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>selected_item</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>menu</name><index>[<expr><name>selected_item</name></expr>]</index></name><operator>.</operator><name>flags</name> <operator>&amp;=</operator> <operator>~</operator><name>DEMO_MENU_SELECTED</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>selected_item</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>flags</name> <operator>|=</operator> <name>DEMO_MENU_SELECTED</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>play_sound_id</name><argument_list>(<argument><expr><name>DEMO_SAMPLE_BUTTON</name></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>, <argument><expr><operator>-</operator><name>freq_variation</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>proc</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>DEMO_MENU_MSG_CHAR</name></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>key_pressed</name><argument_list>(<argument><expr><name>ALLEGRO_KEY_UP</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>selected_item</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>tmp</name> <operator>=</operator> <name>selected_item</name></expr>;</expr_stmt>

<while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><operator>--</operator><name>selected_item</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>selected_item</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>selected_item</name> <operator>=</operator> <name>item_count</name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>menu</name><index>[<expr><name>selected_item</name></expr>]</index></name><operator>.</operator><name>flags</name> <operator>&amp;</operator> <name>DEMO_MENU_SELECTABLE</name></expr>)</condition> <block>{<block_content>

<break>break;</break>

</block_content>}</block></if></if_stmt>

</block_content>}</block></while>

<if_stmt><if>if <condition>(<expr><name>tmp</name> <operator>!=</operator> <name>selected_item</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>menu</name><index>[<expr><name>tmp</name></expr>]</index></name><operator>.</operator><name>flags</name> <operator>&amp;=</operator> <operator>~</operator><name>DEMO_MENU_SELECTED</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>menu</name><index>[<expr><name>selected_item</name></expr>]</index></name><operator>.</operator><name>flags</name> <operator>|=</operator> <name>DEMO_MENU_SELECTED</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>play_sound_id</name><argument_list>(<argument><expr><name>DEMO_SAMPLE_BUTTON</name></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>, <argument><expr><operator>-</operator><name>freq_variation</name></expr></argument>,

<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>key_pressed</name><argument_list>(<argument><expr><name>ALLEGRO_KEY_DOWN</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>selected_item</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>tmp</name> <operator>=</operator> <name>selected_item</name></expr>;</expr_stmt>

<while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><operator>++</operator><name>selected_item</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>selected_item</name> <operator>&gt;=</operator> <name>item_count</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>selected_item</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>menu</name><index>[<expr><name>selected_item</name></expr>]</index></name><operator>.</operator><name>flags</name> <operator>&amp;</operator> <name>DEMO_MENU_SELECTABLE</name></expr>)</condition> <block>{<block_content>

<break>break;</break>

</block_content>}</block></if></if_stmt>

</block_content>}</block></while>

<if_stmt><if>if <condition>(<expr><name>tmp</name> <operator>!=</operator> <name>selected_item</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>menu</name><index>[<expr><name>tmp</name></expr>]</index></name><operator>.</operator><name>flags</name> <operator>&amp;=</operator> <operator>~</operator><name>DEMO_MENU_SELECTED</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>menu</name><index>[<expr><name>selected_item</name></expr>]</index></name><operator>.</operator><name>flags</name> <operator>|=</operator> <name>DEMO_MENU_SELECTED</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>play_sound_id</name><argument_list>(<argument><expr><name>DEMO_SAMPLE_BUTTON</name></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>, <argument><expr><operator>-</operator><name>freq_variation</name></expr></argument>,

<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>c</name> <operator>=</operator> <call><name>unicode_char</name><argument_list>(<argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><call><name>gamepad_button</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>c</name> <operator>=</operator> <literal type="number">32</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>selected_item</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal> <operator>&amp;&amp;</operator> <name>c</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>tmp</name> <operator>=</operator> <name><name>menu</name><index>[<expr><name>selected_item</name></expr>]</index></name><operator>.</operator><call><name>proc</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>menu</name><index>[<expr><name>selected_item</name></expr>]</index></name></expr></argument>,

<argument><expr><name>DEMO_MENU_MSG_CHAR</name></expr></argument>, <argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>tmp</name> <operator>==</operator> <name>DEMO_MENU_LOCK</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>locked</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<return>return <expr><name>DEMO_MENU_CONTINUE</name></expr>;</return>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>locked</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<return>return <expr><name>tmp</name></expr>;</return>

</block_content>}</block></else></if_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>DEMO_MENU_CONTINUE</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>draw_demo_menu</name><parameter_list>(<parameter><decl><type><name>DEMO_MENU</name> <modifier>*</modifier></type> <name>menu</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>x</name></decl>, <decl><type ref="prev"/><name>y</name></decl>, <decl><type ref="prev"/><name>h</name></decl>, <decl><type ref="prev"/><name>w</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>tmp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>char</name></type> <name><name>logo_text</name><index>[]</index></name> <init>= <expr><literal type="string">"Demo Game"</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>draw_background</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>draw_credits</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x</name> <operator>=</operator> <name>screen_width</name> <operator>/</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>y</name> <operator>=</operator> <literal type="number">1</literal> <operator>*</operator> <name>screen_height</name> <operator>/</operator> <literal type="number">6</literal> <operator>-</operator> <call><name>al_get_font_line_height</name><argument_list>(<argument><expr><name>demo_font_logo</name></expr></argument>)</argument_list></call> <operator>/</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>demo_textprintf_centre</name><argument_list>(<argument><expr><name>demo_font_logo</name></expr></argument>, <argument><expr><name>x</name> <operator>+</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><name>y</name> <operator>+</operator> <literal type="number">5</literal></expr></argument>,

<argument><expr><call><name>al_map_rgba_f</name><argument_list>(<argument><expr><literal type="number">0.125</literal></expr></argument>, <argument><expr><literal type="number">0.125</literal></expr></argument>, <argument><expr><literal type="number">0.125</literal></expr></argument>, <argument><expr><literal type="number">0.25</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>logo_text</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>demo_textprintf_centre</name><argument_list>(<argument><expr><name>demo_font_logo</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>y</name></expr></argument>, <argument><expr><call><name>al_map_rgb_f</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>logo_text</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>h</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr><operator>,</operator> <expr><name>h</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>proc</name> <operator>!=</operator> <name>NULL</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>h</name> <operator>+=</operator> <name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>proc</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>DEMO_MENU_MSG_HEIGHT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name>h</name> <operator>+=</operator> <literal type="number">2</literal> <operator>*</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>y</name> <operator>=</operator> <literal type="number">3</literal> <operator>*</operator> <name>screen_height</name> <operator>/</operator> <literal type="number">5</literal> <operator>-</operator> <name>h</name> <operator>/</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>w</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>proc</name> <operator>!=</operator> <name>NULL</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>tmp</name> <operator>=</operator> <name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>proc</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>DEMO_MENU_MSG_WIDTH</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>w</name> <operator>=</operator> <name>tmp</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>x</name> <operator>=</operator> <operator>(</operator><name>screen_width</name> <operator>-</operator> <name>tmp</name><operator>)</operator> <operator>/</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>tmp</name> <operator>&gt;</operator> <name>w</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>w</name> <operator>=</operator> <name>tmp</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name>w</name> <operator>+=</operator> <literal type="number">2</literal> <operator>*</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>w</name> <operator>&lt;</operator> <name>screen_width</name> <operator>/</operator> <literal type="number">3</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>w</name> <operator>=</operator> <name>screen_width</name> <operator>/</operator> <literal type="number">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>w</name> <operator>&gt;</operator> <name>screen_width</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>w</name> <operator>=</operator> <name>screen_width</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>x</name> <operator>=</operator> <operator>(</operator><name>screen_width</name> <operator>-</operator> <name>w</name><operator>)</operator> <operator>/</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_draw_filled_rectangle</name><argument_list>(<argument><expr><name>x</name></expr></argument>, <argument><expr><name>y</name></expr></argument>, <argument><expr><name>x</name> <operator>+</operator> <name>w</name></expr></argument>, <argument><expr><name>y</name> <operator>+</operator> <name>h</name></expr></argument>,

<argument><expr><call><name>al_map_rgba_f</name><argument_list>(<argument><expr><literal type="number">0.37</literal> <operator>*</operator> <literal type="number">0.6</literal></expr></argument>, <argument><expr><literal type="number">0.42</literal> <operator>*</operator> <literal type="number">0.6</literal></expr></argument>, <argument><expr><literal type="number">0.45</literal> <operator>*</operator> <literal type="number">0.6</literal></expr></argument>, <argument><expr><literal type="number">0.6</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_draw_rectangle</name><argument_list>(<argument><expr><name>x</name></expr></argument>, <argument><expr><name>y</name></expr></argument>, <argument><expr><name>x</name> <operator>+</operator> <name>w</name></expr></argument>, <argument><expr><name>y</name> <operator>+</operator> <name>h</name></expr></argument>, <argument><expr><call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>y</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>proc</name> <operator>!=</operator> <name>NULL</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>proc</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>DEMO_MENU_MSG_DRAW</name></expr></argument>, <argument><expr><name>y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>y</name> <operator>=</operator> <name>y</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp</name> <operator>=</operator> <name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>proc</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>DEMO_MENU_MSG_HEIGHT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>menu</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>h</name> <operator>=</operator> <name>tmp</name></expr>;</expr_stmt>

<expr_stmt><expr><name>y</name> <operator>+=</operator> <name>tmp</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>demo_text_proc</name><parameter_list>(<parameter><decl><type><name>DEMO_MENU</name> <modifier>*</modifier></type> <name>item</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>msg</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>extra</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_DRAW</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>shadow_textprintf</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>, <argument><expr><name>screen_width</name> <operator>/</operator> <literal type="number">2</literal></expr></argument>,

<argument><expr><name>extra</name></expr></argument>, <argument><expr><call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">210</literal></expr></argument>, <argument><expr><literal type="number">230</literal></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>item</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_WIDTH</name></expr>)</condition> <block>{<block_content>

<return>return <expr><call><name>al_get_text_width</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>, <argument><expr><name><name>item</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_HEIGHT</name></expr>)</condition> <block>{<block_content>

<return>return <expr><call><name>al_get_font_line_height</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">8</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>DEMO_MENU_CONTINUE</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>demo_edit_proc</name><parameter_list>(<parameter><decl><type><name>DEMO_MENU</name> <modifier>*</modifier></type> <name>item</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>msg</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>extra</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_COLOR</name></type> <name>col</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>w</name></decl>, <decl><type ref="prev"/><name>h</name></decl>, <decl><type ref="prev"/><name>x</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>l</name></decl>, <decl><type ref="prev"/><name>c</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_DRAW</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>DEMO_MENU_SELECTED</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>col</name> <operator>=</operator> <call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>col</name> <operator>=</operator> <call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>w</name> <operator>=</operator> <call><name>demo_edit_proc</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><name>DEMO_MENU_MSG_WIDTH</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>h</name> <operator>=</operator> <call><name>al_get_font_line_height</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_draw_filled_rectangle</name><argument_list>(<argument><expr><operator>(</operator><name>screen_width</name> <operator>-</operator> <name>w</name><operator>)</operator> <operator>/</operator> <literal type="number">2</literal> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>extra</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>,

<argument><expr><operator>(</operator><name>screen_width</name> <operator>+</operator> <name>w</name><operator>)</operator> <operator>/</operator> <literal type="number">2</literal> <operator>+</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>extra</name> <operator>+</operator> <name>h</name> <operator>+</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_draw_rectangle</name><argument_list>(<argument><expr><operator>(</operator><name>screen_width</name> <operator>-</operator> <name>w</name><operator>)</operator> <operator>/</operator> <literal type="number">2</literal> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>extra</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>,

<argument><expr><operator>(</operator><name>screen_width</name> <operator>+</operator> <name>w</name><operator>)</operator> <operator>/</operator> <literal type="number">2</literal> <operator>+</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>extra</name> <operator>+</operator> <name>h</name> <operator>+</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>col</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>shadow_textprintf</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>, <argument><expr><name>screen_width</name> <operator>/</operator> <literal type="number">2</literal></expr></argument>,

<argument><expr><name>extra</name></expr></argument>, <argument><expr><name>col</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>item</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>DEMO_MENU_SELECTED</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>x</name> <operator>=</operator> <operator>(</operator><name>screen_width</name> <operator>+</operator> <call><name>al_get_text_width</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>, <argument><expr><name><name>item</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>/</operator> <literal type="number">2</literal> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_draw_line</name><argument_list>(<argument><expr><name>x</name> <operator>+</operator> <literal type="number">0.5</literal></expr></argument>, <argument><expr><name>extra</name> <operator>+</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>x</name> <operator>+</operator> <literal type="number">0.5</literal></expr></argument>, <argument><expr><name>extra</name> <operator>+</operator> <name>h</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>col</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_draw_line</name><argument_list>(<argument><expr><name>x</name> <operator>+</operator> <literal type="number">1.5</literal></expr></argument>, <argument><expr><name>extra</name> <operator>+</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>x</name> <operator>+</operator> <literal type="number">1.5</literal></expr></argument>, <argument><expr><name>extra</name> <operator>+</operator> <name>h</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>col</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_CHAR</name></expr>)</condition> <block>{<block_content>

<switch>switch <condition>(<expr><name>extra</name></expr>)</condition> <block>{<block_content>

<case>case <expr><literal type="number">8</literal></expr>:</case>

<expr_stmt><expr><name>l</name> <operator>=</operator> <call><name>strlen</name><argument_list>(<argument><expr><name><name>item</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>l</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>item</name><operator>-&gt;</operator><name>name</name><index>[<expr><name>l</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>on_activate</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name><name>item</name><operator>-&gt;</operator><name>on_activate</name></name><argument_list>(<argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>play_sound_id</name><argument_list>(<argument><expr><name>DEMO_SAMPLE_BUTTON</name></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>, <argument><expr><operator>-</operator><name>freq_variation</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<break>break;</break>

<default>default:</default>

<expr_stmt><expr><name>l</name> <operator>=</operator> <call><name>strlen</name><argument_list>(<argument><expr><name><name>item</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>c</name> <operator>=</operator> <name>extra</name> <operator>&amp;</operator> <literal type="number">0xff</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>l</name> <operator>&lt;</operator> <name><name>item</name><operator>-&gt;</operator><name>extra</name></name> <operator>&amp;&amp;</operator> <name>c</name> <operator>&gt;=</operator> <literal type="number">0x20</literal> <operator>&amp;&amp;</operator> <name>c</name> <operator>&lt;</operator> <literal type="number">0x7f</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>item</name><operator>-&gt;</operator><name>name</name><index>[<expr><name>l</name></expr>]</index></name> <operator>=</operator> <name>c</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>on_activate</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name><name>item</name><operator>-&gt;</operator><name>on_activate</name></name><argument_list>(<argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>play_sound_id</name><argument_list>(<argument><expr><name>DEMO_SAMPLE_BUTTON</name></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>, <argument><expr><operator>-</operator><name>freq_variation</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<break>break;</break>

</block_content>}</block></switch>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_WIDTH</name></expr>)</condition> <block>{<block_content>

<return>return <expr><call><name>MAX</name><argument_list>(<argument><expr><call><name>al_get_text_width</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>, <argument><expr><name><name>item</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name> <operator>*</operator> <call><name>al_get_text_width</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>, <argument><expr><literal type="string">" "</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_HEIGHT</name></expr>)</condition> <block>{<block_content>

<return>return <expr><call><name>al_get_font_line_height</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">8</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>DEMO_MENU_CONTINUE</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>demo_button_proc</name><parameter_list>(<parameter><decl><type><name>DEMO_MENU</name> <modifier>*</modifier></type> <name>item</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>msg</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>extra</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_COLOR</name></type> <name>col</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_DRAW</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>DEMO_MENU_SELECTED</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>col</name> <operator>=</operator> <call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>col</name> <operator>=</operator> <call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>shadow_textprintf</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>, <argument><expr><name>screen_width</name> <operator>/</operator> <literal type="number">2</literal></expr></argument>,

<argument><expr><name>extra</name></expr></argument>, <argument><expr><name>col</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>item</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_CHAR</name></expr>)</condition> <block>{<block_content>

<switch>switch <condition>(<expr><name>extra</name></expr>)</condition> <block>{<block_content>

<case>case <expr><literal type="number">13</literal></expr>:</case>

<case>case <expr><literal type="number">32</literal></expr>:</case>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>on_activate</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name><name>item</name><operator>-&gt;</operator><name>on_activate</name></name><argument_list>(<argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>play_sound_id</name><argument_list>(<argument><expr><name>DEMO_SAMPLE_BUTTON</name></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>, <argument><expr><operator>-</operator><name>freq_variation</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name></expr>;</return>

<break>break;</break>

</block_content>}</block></switch>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_WIDTH</name> <operator>||</operator> <name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_HEIGHT</name></expr>)</condition> <block>{<block_content>

<return>return <expr><call><name>demo_text_proc</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><name>msg</name></expr></argument>, <argument><expr><name>extra</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>DEMO_MENU_CONTINUE</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>demo_choice_proc</name><parameter_list>(<parameter><decl><type><name>DEMO_MENU</name> <modifier>*</modifier></type> <name>item</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>msg</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>extra</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>, <decl><type ref="prev"/><name>cw</name></decl>, <decl><type ref="prev"/><name>ch</name></decl>, <decl><type ref="prev"/><name>dy</name></decl>, <decl><type ref="prev"/><name>cx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>choice_count</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>slider_width</name> <init>= <expr><name>screen_width</name> <operator>/</operator> <literal type="number">6</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>tmp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_COLOR</name></type> <name>col</name></decl>;</decl_stmt>

<for>for <control>(<init>;</init> <condition><expr><name><name>item</name><operator>-&gt;</operator><name>data</name><index>[<expr><name>choice_count</name></expr>]</index></name> <operator>!=</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>choice_count</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content><empty_stmt>;</empty_stmt></block_content></block></for>

<if_stmt><if>if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_DRAW</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>choice_count</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>DEMO_MENU_CONTINUE</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>DEMO_MENU_SELECTED</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>col</name> <operator>=</operator> <call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>col</name> <operator>=</operator> <call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>x</name> <operator>=</operator> <operator>(</operator><name>screen_width</name> <operator>-</operator> <name>slider_width</name><operator>)</operator> <operator>/</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>shadow_textprintf</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>, <argument><expr><name>x</name> <operator>-</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>extra</name></expr></argument>, <argument><expr><name>col</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,

<argument><expr><name><name>item</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ch</name> <operator>=</operator> <call><name>al_get_font_line_height</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>)</argument_list></call> <operator>/</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>ch</name> <operator>=</operator> <call><name>MAX</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dy</name> <operator>=</operator> <operator>(</operator><call><name>al_get_font_line_height</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>)</argument_list></call> <operator>-</operator> <name>ch</name><operator>)</operator> <operator>/</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_draw_rectangle</name><argument_list>(<argument><expr><name>x</name> <operator>+</operator> <name>shadow_offset</name></expr></argument>,

<argument><expr><name>extra</name> <operator>+</operator> <name>dy</name> <operator>+</operator> <name>shadow_offset</name></expr></argument>,

<argument><expr><name>x</name> <operator>+</operator> <name>slider_width</name> <operator>+</operator> <name>shadow_offset</name></expr></argument>, <argument><expr><name>extra</name> <operator>+</operator> <name>dy</name> <operator>+</operator> <name>ch</name> <operator>+</operator> <name>shadow_offset</name></expr></argument>,

<argument><expr><call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>cw</name> <operator>=</operator> <operator>(</operator><name>slider_width</name> <operator>-</operator> <literal type="number">4</literal><operator>)</operator> <operator>/</operator> <name>choice_count</name></expr>;</expr_stmt>

<expr_stmt><expr><name>cw</name> <operator>=</operator> <call><name>MAX</name><argument_list>(<argument><expr><name>cw</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>cx</name> <operator>=</operator> <operator>(</operator><name>slider_width</name> <operator>-</operator> <literal type="number">4</literal><operator>)</operator> <operator>*</operator> <name><name>item</name><operator>-&gt;</operator><name>extra</name></name> <operator>/</operator> <name>choice_count</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>cx</name> <operator>+</operator> <name>cw</name> <operator>&gt;</operator> <name>slider_width</name> <operator>-</operator> <literal type="number">4</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>cx</name> <operator>=</operator> <name>slider_width</name> <operator>-</operator> <literal type="number">4</literal> <operator>-</operator> <name>cw</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name> <operator>==</operator> <name>choice_count</name> <operator>-</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>cw</name> <operator>=</operator> <name>slider_width</name> <operator>-</operator> <literal type="number">4</literal> <operator>-</operator> <name>cx</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>al_draw_filled_rectangle</name><argument_list>(<argument><expr><name>x</name> <operator>+</operator> <literal type="number">3</literal> <operator>+</operator> <name>cx</name></expr></argument>, <argument><expr><name>extra</name> <operator>+</operator> <name>dy</name> <operator>+</operator> <literal type="number">3</literal></expr></argument>,

<argument><expr><name>x</name> <operator>+</operator> <literal type="number">3</literal> <operator>+</operator> <name>cx</name> <operator>+</operator> <name>cw</name></expr></argument>, <argument><expr><name>extra</name> <operator>+</operator> <name>dy</name> <operator>+</operator> <name>ch</name></expr></argument>, <argument><expr><call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_draw_rectangle</name><argument_list>(<argument><expr><name>x</name></expr></argument>, <argument><expr><name>extra</name> <operator>+</operator> <name>dy</name></expr></argument>, <argument><expr><name>x</name> <operator>+</operator> <name>slider_width</name></expr></argument>, <argument><expr><name>extra</name> <operator>+</operator> <name>dy</name> <operator>+</operator> <name>ch</name></expr></argument>,

<argument><expr><name>col</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_draw_filled_rectangle</name><argument_list>(<argument><expr><name>x</name> <operator>+</operator> <literal type="number">2</literal> <operator>+</operator> <name>cx</name></expr></argument>, <argument><expr><name>extra</name> <operator>+</operator> <name>dy</name> <operator>+</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>x</name> <operator>+</operator> <literal type="number">2</literal> <operator>+</operator> <name>cx</name> <operator>+</operator> <name>cw</name></expr></argument>,

<argument><expr><name>extra</name> <operator>+</operator> <name>dy</name> <operator>+</operator> <name>ch</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>col</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x</name> <operator>+=</operator> <name>slider_width</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>shadow_textprintf</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>, <argument><expr><name>x</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>extra</name></expr></argument>, <argument><expr><name>col</name></expr></argument>,

<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><operator>(</operator><name><name>item</name><operator>-&gt;</operator><name>data</name></name><operator>)</operator><index>[<expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_KEY</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>key_pressed</name><argument_list>(<argument><expr><name>ALLEGRO_KEY_LEFT</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><operator>--</operator><name><name>item</name><operator>-&gt;</operator><name>extra</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>play_sound_id</name><argument_list>(<argument><expr><name>DEMO_SAMPLE_BUTTON</name></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>, <argument><expr><operator>-</operator><name>freq_variation</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>on_activate</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name><name>item</name><operator>-&gt;</operator><name>on_activate</name></name><argument_list>(<argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>key_pressed</name><argument_list>(<argument><expr><name>ALLEGRO_KEY_RIGHT</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name> <operator>&lt;</operator> <name>choice_count</name> <operator>-</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><operator>++</operator><name><name>item</name><operator>-&gt;</operator><name>extra</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>play_sound_id</name><argument_list>(<argument><expr><name>DEMO_SAMPLE_BUTTON</name></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>, <argument><expr><operator>-</operator><name>freq_variation</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>on_activate</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name><name>item</name><operator>-&gt;</operator><name>on_activate</name></name><argument_list>(<argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_CHAR</name> <operator>&amp;&amp;</operator> <name>extra</name> <operator>==</operator> <literal type="number">13</literal></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>mouse_button_pressed</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>x</name> <operator>=</operator> <operator>(</operator><name>screen_width</name> <operator>-</operator> <name>slider_width</name><operator>)</operator> <operator>/</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name> <operator>=</operator> <operator>(</operator><call><name>mouse_x</name><argument_list>()</argument_list></call> <operator>-</operator> <name>x</name><operator>)</operator> <operator>*</operator> <name>choice_count</name> <operator>/</operator> <name>slider_width</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>play_sound_id</name><argument_list>(<argument><expr><name>DEMO_SAMPLE_BUTTON</name></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>, <argument><expr><operator>-</operator><name>freq_variation</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>on_activate</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name><name>item</name><operator>-&gt;</operator><name>on_activate</name></name><argument_list>(<argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_WIDTH</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>cw</name> <operator>=</operator> <call><name>al_get_text_width</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>, <argument><expr><name><name>item</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name><name>item</name><operator>-&gt;</operator><name>data</name><index>[<expr><name>i</name></expr>]</index></name> <operator>!=</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>tmp</name> <operator>=</operator> <call><name>al_get_text_width</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><operator>(</operator><name><name>item</name><operator>-&gt;</operator><name>data</name></name><operator>)</operator><index>[<expr><name>i</name></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>tmp</name> <operator>&gt;</operator> <name>cw</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>cw</name> <operator>=</operator> <name>tmp</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<return>return <expr><call><name>MAX</name><argument_list>(<argument><expr><call><name>al_get_text_width</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>, <argument><expr><name><name>item</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><name>cw</name></expr></argument>)</argument_list></call> <operator>*</operator> <literal type="number">2</literal> <operator>+</operator> <name>slider_width</name> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <literal type="number">8</literal></expr>;</return>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_HEIGHT</name></expr>)</condition> <block>{<block_content>

<return>return <expr><call><name>demo_text_proc</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><name>msg</name></expr></argument>, <argument><expr><name>extra</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>DEMO_MENU_CONTINUE</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>demo_key_proc</name><parameter_list>(<parameter><decl><type><name>DEMO_MENU</name> <modifier>*</modifier></type> <name>item</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>msg</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>extra</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_COLOR</name></type> <name>col</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_DRAW</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>DEMO_MENU_SELECTED</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>col</name> <operator>=</operator> <call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>col</name> <operator>=</operator> <call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>shadow_textprintf</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>, <argument><expr><name>screen_width</name> <operator>/</operator> <literal type="number">2</literal> <operator>-</operator> <literal type="number">16</literal></expr></argument>,

<argument><expr><name>extra</name></expr></argument>, <argument><expr><name>col</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>item</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>DEMO_MENU_EXTRA</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>shadow_textprintf</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>,

<argument><expr><name>screen_width</name> <operator>/</operator> <literal type="number">2</literal> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>extra</name></expr></argument>, <argument><expr><name>col</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name>shadow_textprintf</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>,

<argument><expr><name>screen_width</name> <operator>/</operator> <literal type="number">2</literal> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>extra</name></expr></argument>, <argument><expr><name>col</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,

<argument><expr><name><name>controller</name><index>[<expr><name>controller_id</name></expr>]</index></name><operator>-&gt;</operator>

<call><name>get_button_description</name><argument_list>(<argument><expr><name><name>controller</name>

<index>[<expr><name>controller_id</name></expr>]</index></name></expr></argument>,

<argument><expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_CHAR</name></expr>)</condition> <block>{<block_content>

<switch>switch <condition>(<expr><name>extra</name></expr>)</condition> <block>{<block_content>

<case>case <expr><literal type="number">13</literal></expr>:</case>

<case>case <expr><literal type="number">32</literal></expr>:</case>

<expr_stmt><expr><name><name>item</name><operator>-&gt;</operator><name>flags</name></name> <operator>|=</operator> <name>DEMO_MENU_EXTRA</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>play_sound_id</name><argument_list>(<argument><expr><name>DEMO_SAMPLE_BUTTON</name></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>, <argument><expr><operator>-</operator><name>freq_variation</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>DEMO_MENU_LOCK</name></expr>;</return>

<break>break;</break>

</block_content>}</block></switch>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_TICK</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>DEMO_MENU_EXTRA</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>controller</name><index>[<expr><name>controller_id</name></expr>]</index></name><operator>-&gt;</operator>

<call><name>calibrate_button</name><argument_list>(<argument><expr><name><name>controller</name><index>[<expr><name>controller_id</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>item</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;=</operator> <operator>~</operator><name>DEMO_MENU_EXTRA</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>play_sound_id</name><argument_list>(<argument><expr><name>DEMO_SAMPLE_BUTTON</name></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>, <argument><expr><operator>-</operator><name>freq_variation</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>on_activate</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name><name>item</name><operator>-&gt;</operator><name>on_activate</name></name><argument_list>(<argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>DEMO_MENU_LOCK</name></expr>;</return>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name>key_pressed</name><argument_list>(<argument><expr><name>ALLEGRO_KEY_ESCAPE</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>item</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;=</operator> <operator>~</operator><name>DEMO_MENU_EXTRA</name></expr>;</expr_stmt>

<return>return <expr><name>DEMO_MENU_LOCK</name></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_WIDTH</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>w1</name> <init>= <expr><call><name>al_get_text_width</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>, <argument><expr><name><name>item</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>w2</name> <init>= <expr><call><name>al_get_text_width</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>,

<argument><expr><ternary><condition><expr><operator>(</operator><name><name>item</name><operator>-&gt;</operator>

<name>flags</name></name> <operator>&amp;</operator> <name>DEMO_MENU_EXTRA</name><operator>)</operator></expr> ?</condition><then> <expr><literal type="string">"..."</literal></expr> </then><else>:

<expr><name><name>controller</name><index>[<expr><name>controller_id</name></expr>]</index></name><operator>-&gt;</operator>

<call><name>get_button_description</name><argument_list>(<argument><expr><name><name>controller</name><index>[<expr><name>controller_id</name></expr>]</index></name></expr></argument>,

<argument><expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name></expr></argument>)</argument_list></call></expr></else></ternary></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><literal type="number">2</literal> <operator>*</operator> <operator>(</operator><literal type="number">16</literal> <operator>+</operator> <operator>(</operator><ternary><condition><expr><operator>(</operator><name>w2</name> <operator>&gt;</operator> <name>w1</name><operator>)</operator></expr> ?</condition><then> <expr><name>w2</name></expr> </then><else>: <expr><name>w1</name></expr></else></ternary><operator>)</operator><operator>)</operator></expr>;</return>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_HEIGHT</name></expr>)</condition> <block>{<block_content>

<return>return <expr><call><name>demo_text_proc</name><argument_list>(<argument><expr><name>item</name></expr></argument>, <argument><expr><name>msg</name></expr></argument>, <argument><expr><name>extra</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>DEMO_MENU_CONTINUE</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>demo_color_proc</name><parameter_list>(<parameter><decl><type><name>DEMO_MENU</name> <modifier>*</modifier></type> <name>item</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>msg</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>extra</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>, <decl><type ref="prev"/><name>h</name></decl>, <decl><type ref="prev"/><name>cw</name></decl>, <decl><type ref="prev"/><name>cx</name></decl>, <decl><type ref="prev"/><name>i</name></decl>, <decl><type ref="prev"/><name>c</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_COLOR</name></type> <name>col1</name></decl>, <decl><type ref="prev"/><name>col2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>rgb</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>char</name></type> <name><name>buf</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>changed</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>slider_width</name> <init>= <expr><name>screen_width</name> <operator>/</operator> <literal type="number">6</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>slider_width</name> <operator>/=</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>slider_width</name> <operator>-=</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_DRAW</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>DEMO_MENU_SELECTED</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>col1</name> <operator>=</operator> <call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>col2</name> <operator>=</operator> <call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>col1</name> <operator>=</operator> <call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>col2</name> <operator>=</operator> <call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>x</name> <operator>=</operator> <name>screen_width</name> <operator>/</operator> <literal type="number">2</literal> <operator>-</operator> <operator>(</operator><name>slider_width</name> <operator>+</operator> <literal type="number">4</literal><operator>)</operator> <operator>*</operator> <literal type="number">3</literal> <operator>/</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>h</name> <operator>=</operator> <call><name>al_get_font_line_height</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>shadow_textprintf</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>, <argument><expr><name>x</name> <operator>-</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>extra</name></expr></argument>, <argument><expr><name>col1</name></expr></argument>,

<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>item</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>c</name> <operator>=</operator> <operator>*</operator><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator><operator>(</operator><name><name>item</name><operator>-&gt;</operator><name>data</name></name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>rgb</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>c</name> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>rgb</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>c</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>rgb</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>c</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">3</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>cw</name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>cx</name> <operator>=</operator> <operator>(</operator><name>slider_width</name> <operator>-</operator> <literal type="number">4</literal> <operator>-</operator> <name>cw</name><operator>)</operator> <operator>*</operator> <name><name>rgb</name><index>[<expr><name>i</name></expr>]</index></name> <operator>/</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_draw_rectangle</name><argument_list>(<argument><expr><name>x</name> <operator>+</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>extra</name> <operator>+</operator> <literal type="number">5</literal></expr></argument>,

<argument><expr><name>x</name> <operator>+</operator> <name>slider_width</name> <operator>+</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>extra</name> <operator>+</operator> <name>h</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_draw_filled_rectangle</name><argument_list>(<argument><expr><name>x</name> <operator>+</operator> <literal type="number">3</literal> <operator>+</operator> <name>cx</name></expr></argument>, <argument><expr><name>extra</name> <operator>+</operator> <literal type="number">6</literal></expr></argument>,

<argument><expr><name>x</name> <operator>+</operator> <literal type="number">3</literal> <operator>+</operator> <name>cx</name> <operator>+</operator> <name>cw</name></expr></argument>, <argument><expr><name>extra</name> <operator>+</operator> <name>h</name> <operator>-</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_draw_rectangle</name><argument_list>(<argument><expr><name>x</name></expr></argument>, <argument><expr><name>extra</name> <operator>+</operator> <literal type="number">3</literal></expr></argument>, <argument><expr><name>x</name> <operator>+</operator> <name>slider_width</name></expr></argument>,

<argument><expr><name>extra</name> <operator>+</operator> <name>h</name> <operator>-</operator> <literal type="number">3</literal></expr></argument>, <argument><expr><ternary><condition><expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name> <operator>==</operator> <name>i</name></expr> ?</condition><then> <expr><name>col1</name></expr> </then><else>: <expr><name>col2</name></expr></else></ternary></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_draw_filled_rectangle</name><argument_list>(<argument><expr><name>x</name> <operator>+</operator> <literal type="number">2</literal> <operator>+</operator> <name>cx</name></expr></argument>, <argument><expr><name>extra</name> <operator>+</operator> <literal type="number">5</literal></expr></argument>,

<argument><expr><name>x</name> <operator>+</operator> <literal type="number">2</literal> <operator>+</operator> <name>cx</name> <operator>+</operator> <name>cw</name></expr></argument>, <argument><expr><name>extra</name> <operator>+</operator> <name>h</name> <operator>-</operator> <literal type="number">5</literal></expr></argument>,

<argument><expr><ternary><condition><expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name> <operator>==</operator> <name>i</name></expr> ?</condition><then> <expr><name>col1</name></expr> </then><else>: <expr><name>col2</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>x</name> <operator>+=</operator> <name>slider_width</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"%d,%d,%d"</literal></expr></argument>, <argument><expr><name><name>rgb</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>rgb</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>rgb</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>shadow_textprintf</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>, <argument><expr><name>x</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>extra</name></expr></argument>, <argument><expr><call><name>al_map_rgb</name><argument_list>(<argument><expr><name><name>rgb</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>rgb</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>rgb</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_KEY</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>c</name> <operator>=</operator> <operator>*</operator><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator><operator>(</operator><name><name>item</name><operator>-&gt;</operator><name>data</name></name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>rgb</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>c</name> <operator>&gt;&gt;</operator> <literal type="number">0</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>rgb</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>c</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>rgb</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>c</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">255</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>key_pressed</name><argument_list>(<argument><expr><name>ALLEGRO_KEY_LEFT</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>rgb</name><index>[<expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name></expr>]</index></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>key_down</name><argument_list>(<argument><expr><name>ALLEGRO_KEY_LSHIFT</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>key_down</name><argument_list>(<argument><expr><name>ALLEGRO_KEY_RSHIFT</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><operator>--</operator><name><name>rgb</name><index>[<expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name><name>rgb</name><index>[<expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name></expr>]</index></name> <operator>-=</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>rgb</name><index>[<expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name></expr>]</index></name> <operator>=</operator> <call><name>MAX</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>rgb</name><index>[<expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>changed</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>key_pressed</name><argument_list>(<argument><expr><name>ALLEGRO_KEY_RIGHT</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>rgb</name><index>[<expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name></expr>]</index></name> <operator>&lt;</operator> <literal type="number">255</literal></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>key_down</name><argument_list>(<argument><expr><name>ALLEGRO_KEY_LSHIFT</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>key_down</name><argument_list>(<argument><expr><name>ALLEGRO_KEY_RSHIFT</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><operator>++</operator><name><name>rgb</name><index>[<expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name><name>rgb</name><index>[<expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name></expr>]</index></name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>rgb</name><index>[<expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name></expr>]</index></name> <operator>=</operator> <call><name>MIN</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><name><name>rgb</name><index>[<expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>changed</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>key_pressed</name><argument_list>(<argument><expr><name>ALLEGRO_KEY_TAB</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>key_down</name><argument_list>(<argument><expr><name>ALLEGRO_KEY_LSHIFT</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>key_down</name><argument_list>(<argument><expr><name>ALLEGRO_KEY_RSHIFT</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><operator>--</operator><name><name>item</name><operator>-&gt;</operator><name>extra</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name> <operator>+=</operator> <literal type="number">3</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><operator>++</operator><name><name>item</name><operator>-&gt;</operator><name>extra</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name> <operator>%=</operator> <literal type="number">3</literal></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>play_sound_id</name><argument_list>(<argument><expr><name>DEMO_SAMPLE_BUTTON</name></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>, <argument><expr><operator>-</operator><name>freq_variation</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>on_activate</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name><name>item</name><operator>-&gt;</operator><name>on_activate</name></name><argument_list>(<argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>changed</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><operator>*</operator><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator><operator>(</operator><name><name>item</name><operator>-&gt;</operator><name>data</name></name><operator>)</operator> <operator>=</operator> <name><name>rgb</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <operator>(</operator><name><name>rgb</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>+</operator> <operator>(</operator><name><name>rgb</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>play_sound_id</name><argument_list>(<argument><expr><name>DEMO_SAMPLE_BUTTON</name></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>, <argument><expr><operator>-</operator><name>freq_variation</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>on_activate</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name><name>item</name><operator>-&gt;</operator><name>on_activate</name></name><argument_list>(<argument><expr><name>item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_WIDTH</name></expr>)</condition> <block>{<block_content>

<return>return <expr><call><name>MAX</name><argument_list>(<argument><expr><call><name>al_get_text_width</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>, <argument><expr><name><name>item</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call> <operator>*</operator> <literal type="number">2</literal> <operator>+</operator> <literal type="number">8</literal> <operator>*</operator> <literal type="number">2</literal> <operator>+</operator>

<literal type="number">3</literal> <operator>*</operator> <operator>(</operator><name>slider_width</name> <operator>+</operator> <literal type="number">4</literal><operator>)</operator></expr></argument>,

<argument><expr><literal type="number">8</literal> <operator>*</operator> <literal type="number">2</literal> <operator>+</operator> <literal type="number">3</literal> <operator>*</operator> <operator>(</operator><name>slider_width</name> <operator>+</operator> <literal type="number">4</literal><operator>)</operator> <operator>+</operator>

<literal type="number">2</literal> <operator>*</operator> <call><name>al_get_text_width</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>, <argument><expr><literal type="string">"255,255,255"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_HEIGHT</name></expr>)</condition> <block>{<block_content>

<return>return <expr><call><name>al_get_font_line_height</name><argument_list>(<argument><expr><name>demo_font</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>DEMO_MENU_CONTINUE</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>demo_separator_proc</name><parameter_list>(<parameter><decl><type><name>DEMO_MENU</name> <modifier>*</modifier></type> <name>item</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>msg</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>extra</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_WIDTH</name></expr>)</condition> <block>{<block_content>

<return>return <expr><name>extra</name> <operator>-</operator> <name>extra</name></expr>;</return>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>msg</name> <operator>==</operator> <name>DEMO_MENU_MSG_HEIGHT</name></expr>)</condition> <block>{<block_content>

<return>return <expr><name><name>item</name><operator>-&gt;</operator><name>extra</name></name></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>DEMO_MENU_CONTINUE</name></expr>;</return>

</block_content>}</block></function>

</unit>
