<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\src\haptic.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/haptic.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_events.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_exitfunc.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_haptic.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_system.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <name>ALLEGRO_HAPTIC_DRIVER</name> <modifier>*</modifier></type><name>haptic_driver</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<function><type><name>bool</name></type> <name>al_install_haptic</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_SYSTEM</name> <modifier>*</modifier></type><name>sysdrv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_HAPTIC_DRIVER</name> <modifier>*</modifier></type><name>hapdrv</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>haptic_driver</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>true</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>sysdrv</name> <operator>=</operator> <call><name>al_get_system_driver</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>sysdrv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sysdrv</name><operator>-&gt;</operator><name>vt</name><operator>-&gt;</operator><name>get_haptic_driver</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>hapdrv</name> <operator>=</operator> <call><name><name>sysdrv</name><operator>-&gt;</operator><name>vt</name><operator>-&gt;</operator><name>get_haptic_driver</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>hapdrv</name> <operator>&amp;&amp;</operator> <call><name><name>hapdrv</name><operator>-&gt;</operator><name>init_haptic</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>haptic_driver</name> <operator>=</operator> <name>hapdrv</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_add_exit_func</name><argument_list>(<argument><expr><name>al_uninstall_haptic</name></expr></argument>, <argument><expr><literal type="string">"al_uninstall_haptic"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>al_uninstall_haptic</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>haptic_driver</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name><name>haptic_driver</name><operator>-&gt;</operator><name>exit_haptic</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>haptic_driver</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>al_is_haptic_installed</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><ternary><condition><expr><operator>(</operator><name>haptic_driver</name><operator>)</operator></expr> ?</condition><then> <expr><name>true</name></expr> </then><else>: <expr><name>false</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>al_is_joystick_haptic</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>dev</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>haptic_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>haptic_driver</name><operator>-&gt;</operator><name>is_joystick_haptic</name></name><argument_list>(<argument><expr><name>dev</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>al_is_mouse_haptic</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MOUSE</name> <modifier>*</modifier></type><name>dev</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>haptic_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>haptic_driver</name><operator>-&gt;</operator><name>is_mouse_haptic</name></name><argument_list>(<argument><expr><name>dev</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>al_is_keyboard_haptic</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_KEYBOARD</name> <modifier>*</modifier></type><name>dev</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>haptic_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>haptic_driver</name><operator>-&gt;</operator><name>is_keyboard_haptic</name></name><argument_list>(<argument><expr><name>dev</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>al_is_display_haptic</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>dev</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>haptic_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>haptic_driver</name><operator>-&gt;</operator><name>is_display_haptic</name></name><argument_list>(<argument><expr><name>dev</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>al_is_touch_input_haptic</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_TOUCH_INPUT</name> <modifier>*</modifier></type><name>dev</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>haptic_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>haptic_driver</name><operator>-&gt;</operator><name>is_touch_input_haptic</name></name><argument_list>(<argument><expr><name>dev</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>ALLEGRO_HAPTIC</name> <modifier>*</modifier></type><name>al_get_haptic_from_joystick</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>dev</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>haptic_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>haptic_driver</name><operator>-&gt;</operator><name>get_from_joystick</name></name><argument_list>(<argument><expr><name>dev</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>ALLEGRO_HAPTIC</name> <modifier>*</modifier></type><name>al_get_haptic_from_mouse</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MOUSE</name> <modifier>*</modifier></type><name>dev</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>haptic_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>haptic_driver</name><operator>-&gt;</operator><name>get_from_mouse</name></name><argument_list>(<argument><expr><name>dev</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>ALLEGRO_HAPTIC</name> <modifier>*</modifier></type><name>al_get_haptic_from_keyboard</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_KEYBOARD</name> <modifier>*</modifier></type><name>dev</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>haptic_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>haptic_driver</name><operator>-&gt;</operator><name>get_from_keyboard</name></name><argument_list>(<argument><expr><name>dev</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>ALLEGRO_HAPTIC</name> <modifier>*</modifier></type><name>al_get_haptic_from_display</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>dev</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>haptic_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>haptic_driver</name><operator>-&gt;</operator><name>get_from_display</name></name><argument_list>(<argument><expr><name>dev</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>ALLEGRO_HAPTIC</name> <modifier>*</modifier></type><name>al_get_haptic_from_touch_input</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_TOUCH_INPUT</name> <modifier>*</modifier></type><name>dev</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>haptic_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>haptic_driver</name><operator>-&gt;</operator><name>get_from_touch_input</name></name><argument_list>(<argument><expr><name>dev</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>al_is_haptic_active</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_HAPTIC</name> <modifier>*</modifier></type><name>hap</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>hap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>haptic_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>haptic_driver</name><operator>-&gt;</operator><name>get_active</name></name><argument_list>(<argument><expr><name>hap</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>al_get_haptic_capabilities</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_HAPTIC</name> <modifier>*</modifier></type><name>hap</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>hap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>haptic_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>haptic_driver</name><operator>-&gt;</operator><name>get_capabilities</name></name><argument_list>(<argument><expr><name>hap</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>al_is_haptic_capable</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_HAPTIC</name> <modifier>*</modifier></type> <name>hap</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>query</name></decl></parameter>)</parameter_list> <block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>capabilities</name> <init>= <expr><call><name>al_get_haptic_capabilities</name><argument_list>(<argument><expr><name>hap</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><operator>(</operator><name>capabilities</name> <operator>&amp;</operator> <name>query</name><operator>)</operator> <operator>==</operator> <name>query</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>double</name></type> <name>al_get_haptic_gain</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_HAPTIC</name> <modifier>*</modifier></type><name>hap</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>hap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>haptic_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>haptic_driver</name><operator>-&gt;</operator><name>get_gain</name></name><argument_list>(<argument><expr><name>hap</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>al_set_haptic_gain</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_HAPTIC</name> <modifier>*</modifier></type><name>hap</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>gain</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>hap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>haptic_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>haptic_driver</name><operator>-&gt;</operator><name>set_gain</name></name><argument_list>(<argument><expr><name>hap</name></expr></argument>, <argument><expr><name>gain</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>double</name></type> <name>al_get_haptic_autocenter</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_HAPTIC</name> <modifier>*</modifier></type><name>hap</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>hap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>haptic_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>haptic_driver</name><operator>-&gt;</operator><name>get_autocenter</name></name><argument_list>(<argument><expr><name>hap</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>al_set_haptic_autocenter</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_HAPTIC</name> <modifier>*</modifier></type><name>hap</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>intensity</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>hap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>haptic_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>haptic_driver</name><operator>-&gt;</operator><name>set_autocenter</name></name><argument_list>(<argument><expr><name>hap</name></expr></argument>, <argument><expr><name>intensity</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>al_get_max_haptic_effects</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_HAPTIC</name> <modifier>*</modifier></type><name>hap</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>hap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>haptic_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>haptic_driver</name><operator>-&gt;</operator><name>get_max_effects</name></name><argument_list>(<argument><expr><name>hap</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>al_is_haptic_effect_ok</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_HAPTIC</name> <modifier>*</modifier></type><name>hap</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_HAPTIC_EFFECT</name> <modifier>*</modifier></type><name>effect</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>hap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>haptic_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>haptic_driver</name><operator>-&gt;</operator><name>is_effect_ok</name></name><argument_list>(<argument><expr><name>hap</name></expr></argument>, <argument><expr><name>effect</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>al_upload_haptic_effect</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_HAPTIC</name> <modifier>*</modifier></type><name>hap</name></decl></parameter>,

<parameter><decl><type><name>ALLEGRO_HAPTIC_EFFECT</name> <modifier>*</modifier></type><name>effect</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_HAPTIC_EFFECT_ID</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>hap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>haptic_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>haptic_driver</name><operator>-&gt;</operator><name>upload_effect</name></name><argument_list>(<argument><expr><name>hap</name></expr></argument>, <argument><expr><name>effect</name></expr></argument>, <argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>al_play_haptic_effect</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_HAPTIC_EFFECT_ID</name> <modifier>*</modifier></type><name>id</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>loop</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>haptic_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>haptic_driver</name><operator>-&gt;</operator><name>play_effect</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><name>loop</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>al_upload_and_play_haptic_effect</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_HAPTIC</name> <modifier>*</modifier></type><name>hap</name></decl></parameter>,

<parameter><decl><type><name>ALLEGRO_HAPTIC_EFFECT</name> <modifier>*</modifier></type><name>effect</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_HAPTIC_EFFECT_ID</name> <modifier>*</modifier></type><name>id</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>loop</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>hap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>effect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>al_upload_haptic_effect</name><argument_list>(<argument><expr><name>hap</name></expr></argument>, <argument><expr><name>effect</name></expr></argument>, <argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>al_play_haptic_effect</name><argument_list>(<argument><expr><name>id</name></expr></argument>, <argument><expr><name>loop</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>al_release_haptic_effect</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>al_stop_haptic_effect</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_HAPTIC_EFFECT_ID</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>haptic_driver</name><operator>-&gt;</operator><name>stop_effect</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>al_is_haptic_effect_playing</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_HAPTIC_EFFECT_ID</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>haptic_driver</name><operator>-&gt;</operator><name>is_effect_playing</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>double</name></type> <name>al_get_haptic_effect_duration</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_HAPTIC_EFFECT</name> <modifier>*</modifier></type> <name>effect</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><name><name>effect</name><operator>-&gt;</operator><name>replay</name><operator>.</operator><name>delay</name></name> <operator>+</operator> <name><name>effect</name><operator>-&gt;</operator><name>replay</name><operator>.</operator><name>length</name></name></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>al_rumble_haptic</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_HAPTIC</name> <modifier>*</modifier></type><name>hap</name></decl></parameter>,

<parameter><decl><type><name>double</name></type> <name>intensity</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>duration</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_HAPTIC_EFFECT_ID</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_HAPTIC_EFFECT</name></type> <name>effect</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>hap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>effect</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>ALLEGRO_HAPTIC_RUMBLE</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>effect</name><operator>.</operator><name>data</name><operator>.</operator><name>rumble</name><operator>.</operator><name>strong_magnitude</name></name> <operator>=</operator> <name>intensity</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>effect</name><operator>.</operator><name>data</name><operator>.</operator><name>rumble</name><operator>.</operator><name>weak_magnitude</name></name> <operator>=</operator> <name>intensity</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>effect</name><operator>.</operator><name>replay</name><operator>.</operator><name>delay</name></name> <operator>=</operator> <literal type="number">0.0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>effect</name><operator>.</operator><name>replay</name><operator>.</operator><name>length</name></name> <operator>=</operator> <name>duration</name></expr>;</expr_stmt>

<return>return <expr><call><name>al_upload_and_play_haptic_effect</name><argument_list>(<argument><expr><name>hap</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>effect</name></expr></argument>, <argument><expr><name>id</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>al_release_haptic_effect</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_HAPTIC_EFFECT_ID</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>haptic_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>haptic_driver</name><operator>-&gt;</operator><name>release_effect</name></name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>al_release_haptic</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_HAPTIC</name> <modifier>*</modifier></type><name>haptic</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>haptic_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>haptic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name><name>haptic_driver</name><operator>-&gt;</operator><name>release</name></name><argument_list>(<argument><expr><name>haptic</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

</unit>
