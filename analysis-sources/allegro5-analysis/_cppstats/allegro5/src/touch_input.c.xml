<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\src\touch_input.c"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_NO_COMPATIBILITY</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_bitmap.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_exitfunc.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_system.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_touch_input.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <name>ALLEGRO_TOUCH_INPUT_DRIVER</name> <modifier>*</modifier></type><name>touch_input_driver</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<function><type><name>bool</name></type> <name>al_is_touch_input_installed</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><operator>(</operator><ternary><condition><expr><name>touch_input_driver</name></expr> ?</condition><then> <expr><name>true</name></expr> </then><else>: <expr><name>false</name></expr></else></ternary><operator>)</operator></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>al_install_touch_input</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>touch_input_driver</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>true</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>al_get_system_driver</name><argument_list>()</argument_list></call><operator>-&gt;</operator><name><name>vt</name><operator>-&gt;</operator><name>get_touch_input_driver</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>touch_input_driver</name> <operator>=</operator> <call><name>al_get_system_driver</name><argument_list>()</argument_list></call><operator>-&gt;</operator><call><name><name>vt</name><operator>-&gt;</operator><name>get_touch_input_driver</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>touch_input_driver</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>touch_input_driver</name><operator>-&gt;</operator><name>init_touch_input</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>touch_input_driver</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>_al_add_exit_func</name><argument_list>(<argument><expr><name>al_uninstall_touch_input</name></expr></argument>, <argument><expr><literal type="string">"al_uninstall_touch_input"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>al_uninstall_touch_input</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>touch_input_driver</name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name><name>touch_input_driver</name><operator>-&gt;</operator><name>exit_touch_input</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>touch_input_driver</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>ALLEGRO_TOUCH_INPUT</name> <modifier>*</modifier></type><name>get_touch_input</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_TOUCH_INPUT</name> <modifier>*</modifier></type><name>touch_input</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>touch_input_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>touch_input</name> <operator>=</operator> <call><name><name>touch_input_driver</name><operator>-&gt;</operator><name>get_touch_input</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>touch_input</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>touch_input</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>al_get_touch_input_state</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_TOUCH_INPUT_STATE</name> <modifier>*</modifier></type><name>ret_state</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>touch_input_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>ret_state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name><name>touch_input_driver</name><operator>-&gt;</operator><name>get_touch_input_state</name></name><argument_list>(<argument><expr><name>ret_state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>al_set_mouse_emulation_mode</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>touch_input_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>touch_input_driver</name><operator>-&gt;</operator><name>set_mouse_emulation_mode</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name><name>touch_input_driver</name><operator>-&gt;</operator><name>set_mouse_emulation_mode</name></name><argument_list>(<argument><expr><name>mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><call><name>get_touch_input</name><argument_list>()</argument_list></call><operator>-&gt;</operator><name>mouse_emulation_mode</name> <operator>=</operator> <name>mode</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>al_get_mouse_emulation_mode</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>touch_input_driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>touch_input_driver</name><operator>-&gt;</operator><name>get_mouse_emulation_mode</name></name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><call><name><name>touch_input_driver</name><operator>-&gt;</operator><name>get_mouse_emulation_mode</name></name><argument_list>()</argument_list></call></expr>;</return></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<return>return <expr><call><name>get_touch_input</name><argument_list>()</argument_list></call><operator>-&gt;</operator><name>mouse_emulation_mode</name></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>

<function><type><name>ALLEGRO_EVENT_SOURCE</name> <modifier>*</modifier></type><name>al_get_touch_input_event_source</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_TOUCH_INPUT</name> <modifier>*</modifier></type><name>touch_input</name> <init>= <expr><call><name>get_touch_input</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><ternary><condition><expr><operator>(</operator><name>touch_input</name><operator>)</operator></expr> ?</condition><then> <expr><operator>&amp;</operator><name><name>touch_input</name><operator>-&gt;</operator><name>es</name></name></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>

<function><type><name>ALLEGRO_EVENT_SOURCE</name> <modifier>*</modifier></type><name>al_get_touch_input_mouse_emulation_event_source</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_TOUCH_INPUT</name> <modifier>*</modifier></type><name>touch_input</name> <init>= <expr><call><name>get_touch_input</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><ternary><condition><expr><operator>(</operator><name>touch_input</name><operator>)</operator></expr> ?</condition><then> <expr><operator>&amp;</operator><name><name>touch_input</name><operator>-&gt;</operator><name>mouse_emulation_es</name></name></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>

</unit>
