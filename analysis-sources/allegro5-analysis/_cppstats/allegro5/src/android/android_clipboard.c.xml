<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\src\android\android_clipboard.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro_android.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_android.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_bitmap.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;jni.h&gt;</cpp:file></cpp:include>

<macro><name>ALLEGRO_DEBUG_CHANNEL</name><argument_list>(<argument><literal type="string">"clipboard"</literal></argument>)</argument_list></macro>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>android_set_clipboard_text</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>text</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>JNIEnv</name> <modifier>*</modifier></type> <name>env</name> <init>= <expr><operator>(</operator><name>JNIEnv</name> <operator>*</operator><operator>)</operator><call><name>_al_android_get_jnienv</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>jstring</name></type> <name>jtext</name><init>= <expr><call><name>_jni_call</name><argument_list>(<argument><expr><name>env</name></expr></argument>, <argument><expr><name>jstring</name></expr></argument>, <argument><expr><name>NewStringUTF</name></expr></argument>, <argument><expr><name>text</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>display</name></expr>;</expr_stmt>

<return>return <expr><call><name>_jni_callBooleanMethodV</name><argument_list>(<argument><expr><name>env</name></expr></argument>, <argument><expr><call><name>_al_android_activity_object</name><argument_list>()</argument_list></call></expr></argument>,

<argument><expr><literal type="string">"setClipboardText"</literal></expr></argument>, <argument><expr><literal type="string">"(Ljava/lang/String;)Z"</literal></expr></argument>, <argument><expr><name>jtext</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type><name>android_get_clipboard_text</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>JNIEnv</name> <modifier>*</modifier></type> <name>env</name> <init>= <expr><operator>(</operator><name>JNIEnv</name> <operator>*</operator><operator>)</operator><call><name>_al_android_get_jnienv</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>jobject</name></type> <name>jtext</name> <init>= <expr><call><name>_jni_callObjectMethod</name><argument_list>(<argument><expr><name>env</name></expr></argument>, <argument><expr><call><name>_al_android_activity_object</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"getClipboardText"</literal></expr></argument>, <argument><expr><literal type="string">"()Ljava/lang/String;"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>jsize</name></type> <name>len</name> <init>= <expr><call><name>_jni_call</name><argument_list>(<argument><expr><name>env</name></expr></argument>, <argument><expr><name>jsize</name></expr></argument>, <argument><expr><name>GetStringUTFLength</name></expr></argument>, <argument><expr><name>jtext</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name> <init>= <expr><call><name>_jni_call</name><argument_list>(<argument><expr><name>env</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator></expr></argument>, <argument><expr><name>GetStringUTFChars</name></expr></argument>, <argument><expr><name>jtext</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type> <name>text</name> <init>= <expr><call><name>al_malloc</name><argument_list>(<argument><expr><name>len</name><operator>+</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>display</name></expr>;</expr_stmt>

<expr_stmt><expr><name>text</name> <operator>=</operator> <call><name>_al_sane_strncpy</name><argument_list>(<argument><expr><name>text</name></expr></argument>, <argument><expr><name>str</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_jni_callv</name><argument_list>(<argument><expr><name>env</name></expr></argument>, <argument><expr><name>ReleaseStringUTFChars</name></expr></argument>, <argument><expr><name>jtext</name></expr></argument>, <argument><expr><name>str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_jni_callv</name><argument_list>(<argument><expr><name>env</name></expr></argument>, <argument><expr><name>DeleteLocalRef</name></expr></argument>, <argument><expr><name>jtext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>text</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>android_has_clipboard_text</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>JNIEnv</name> <modifier>*</modifier></type> <name>env</name> <init>= <expr><operator>(</operator><name>JNIEnv</name> <operator>*</operator><operator>)</operator><call><name>_al_android_get_jnienv</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>display</name></expr>;</expr_stmt>

<return>return <expr><call><name>_jni_callBooleanMethodV</name><argument_list>(<argument><expr><name>env</name></expr></argument>, <argument><expr><call><name>_al_android_activity_object</name><argument_list>()</argument_list></call></expr></argument>,

<argument><expr><literal type="string">"hasClipboardText"</literal></expr></argument>, <argument><expr><literal type="string">"()Z"</literal></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>_al_android_add_clipboard_functions</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY_INTERFACE</name> <modifier>*</modifier></type><name>vt</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><name><name>vt</name><operator>-&gt;</operator><name>set_clipboard_text</name></name> <operator>=</operator> <name>android_set_clipboard_text</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vt</name><operator>-&gt;</operator><name>get_clipboard_text</name></name> <operator>=</operator> <name>android_get_clipboard_text</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vt</name><operator>-&gt;</operator><name>has_clipboard_text</name></name> <operator>=</operator> <name>android_has_clipboard_text</name></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
