<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\src\android\android_joystick.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_events.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_joystick.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_android.h"</cpp:file></cpp:include>

<macro><name>ALLEGRO_DEBUG_CHANNEL</name><argument_list>(<argument><literal type="string">"android"</literal></argument>)</argument_list></macro>

<typedef>typedef <type><struct>struct <name>ALLEGRO_JOYSTICK_ANDROID</name> <block>{

<decl_stmt><decl><type><name>ALLEGRO_JOYSTICK</name></type> <name>parent</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_JOYSTICK_STATE</name></type> <name>joystate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>

}</block></struct></type> <name>ALLEGRO_JOYSTICK_ANDROID</name>;</typedef>

<decl_stmt><decl><type><specifier>static</specifier> <name>_AL_VECTOR</name></type> <name>joysticks</name> <init>= <expr><call><name>_AL_VECTOR_INITIALIZER</name><argument_list>(<argument><expr><name>ALLEGRO_JOYSTICK_ANDROID</name> <operator>*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name></type> <name>initialized</name></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>void</name></type> <name>android_init_joysticks</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>num</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>j</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>num</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_JOYSTICK_ANDROID</name> <modifier>*</modifier></type><name>stick</name> <init>= <expr><call><name>al_calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>ALLEGRO_JOYSTICK_ANDROID</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_JOYSTICK_ANDROID</name> <modifier>*</modifier><modifier>*</modifier></type><name>ptr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>joy</name></decl>;</decl_stmt>

<expr_stmt><expr><name>joy</name> <operator>=</operator> <operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name>stick</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>stick</name><operator>-&gt;</operator><name>name</name></name> <operator>=</operator> <literal type="string">"Android Joystick"</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>num_sticks</name></name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>num_buttons</name></name> <operator>=</operator> <literal type="number">11</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>stick</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"Stick 1"</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>stick</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>num_axes</name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>stick</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name><name>axis</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"X"</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>stick</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name><name>axis</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"Y"</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>stick</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>flags</name> <operator>=</operator> <name>ALLEGRO_JOYFLAG_ANALOGUE</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>stick</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"Stick 2"</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>stick</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>num_axes</name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>stick</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name><name>axis</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"X"</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>stick</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name><name>axis</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"Y"</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>stick</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>flags</name> <operator>=</operator> <name>ALLEGRO_JOYFLAG_ANALOGUE</name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>num_buttons</name></name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>button</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">""</literal></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name>ptr</name> <operator>=</operator> <call><name>_al_vector_alloc_back</name><argument_list>(<argument><expr><operator>&amp;</operator><name>joysticks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>ptr</name> <operator>=</operator> <name>stick</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>andjoy_init_joystick</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_JOYSTICK_ANDROID</name> <modifier>*</modifier></type><name>accel</name> <init>= <expr><call><name>al_calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>ALLEGRO_JOYSTICK_ANDROID</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_JOYSTICK_ANDROID</name> <modifier>*</modifier><modifier>*</modifier></type><name>ptr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>joy</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>num</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>accel</name><operator>-&gt;</operator><name>name</name></name> <operator>=</operator> <literal type="string">"Accelerometer"</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>joy</name> <operator>=</operator> <operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name>accel</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>num_sticks</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>num_buttons</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>stick</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"Accelerometer"</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>stick</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>num_axes</name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>stick</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name><name>axis</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"X"</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>stick</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name><name>axis</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"Y"</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>stick</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name><name>axis</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"Z"</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>joy</name><operator>-&gt;</operator><name>info</name><operator>.</operator><name>stick</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>flags</name> <operator>=</operator> <name>ALLEGRO_JOYFLAG_ANALOGUE</name></expr>;</expr_stmt>

<expr_stmt><expr><name>ptr</name> <operator>=</operator> <call><name>_al_vector_alloc_back</name><argument_list>(<argument><expr><operator>&amp;</operator><name>joysticks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>ptr</name> <operator>=</operator> <name>accel</name></expr>;</expr_stmt>

<expr_stmt><expr><name>num</name> <operator>=</operator> <call><name>_jni_callIntMethodV</name><argument_list>(<argument><expr><call><name>_al_android_get_jnienv</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>_al_android_activity_object</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"getNumJoysticks"</literal></expr></argument>, <argument><expr><literal type="string">"()I"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>android_init_joysticks</name><argument_list>(<argument><expr><name>num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>initialized</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_jni_callVoidMethod</name><argument_list>(<argument><expr><call><name>_al_android_get_jnienv</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>_al_android_activity_object</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"setJoystickActive"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>andjoy_exit_joystick</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><name>initialized</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>andjoy_reconfigure_joysticks</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>sz</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>num</name></decl>;</decl_stmt>

<expr_stmt><expr><name>sz</name> <operator>=</operator> <call><name>_al_vector_size</name><argument_list>(<argument><expr><operator>&amp;</operator><name>joysticks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>sz</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>al_free</name><argument_list>(<argument><expr><operator>*</operator><operator>(</operator><operator>(</operator><name>ALLEGRO_JOYSTICK_ANDROID</name> <operator>*</operator><operator>*</operator><operator>)</operator><call><name>_al_vector_ref</name><argument_list>(<argument><expr><operator>&amp;</operator><name>joysticks</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_vector_delete_at</name><argument_list>(<argument><expr><operator>&amp;</operator><name>joysticks</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>_jni_callVoidMethod</name><argument_list>(<argument><expr><call><name>_al_android_get_jnienv</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>_al_android_activity_object</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"reconfigureJoysticks"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>num</name> <operator>=</operator> <call><name>_jni_callIntMethodV</name><argument_list>(<argument><expr><call><name>_al_android_get_jnienv</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>_al_android_activity_object</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"getNumJoysticks"</literal></expr></argument>, <argument><expr><literal type="string">"()I"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>android_init_joysticks</name><argument_list>(<argument><expr><name>num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>andjoy_num_joysticks</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>_al_vector_size</name><argument_list>(<argument><expr><operator>&amp;</operator><name>joysticks</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>andjoy_get_joystick</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>num</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_JOYSTICK_ANDROID</name> <modifier>*</modifier></type><name>andjoy</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>joy</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>num</name> <operator>&gt;=</operator> <call><name>andjoy_num_joysticks</name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>andjoy</name> <operator>=</operator> <operator>*</operator><operator>(</operator><operator>(</operator><name>ALLEGRO_JOYSTICK_ANDROID</name> <operator>*</operator><operator>*</operator><operator>)</operator><call><name>_al_vector_ref</name><argument_list>(<argument><expr><operator>&amp;</operator><name>joysticks</name></expr></argument>, <argument><expr><name>num</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>joy</name> <operator>=</operator> <operator>&amp;</operator><name><name>andjoy</name><operator>-&gt;</operator><name>parent</name></name></expr>;</expr_stmt>

<return>return <expr><name>joy</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>andjoy_release_joystick</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>joy</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>sz</name></decl>;</decl_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>joy</name></expr>;</expr_stmt>

<expr_stmt><expr><name>sz</name> <operator>=</operator> <call><name>_al_vector_size</name><argument_list>(<argument><expr><operator>&amp;</operator><name>joysticks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>sz</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>al_free</name><argument_list>(<argument><expr><operator>*</operator><operator>(</operator><operator>(</operator><name>ALLEGRO_JOYSTICK_ANDROID</name> <operator>*</operator><operator>*</operator><operator>)</operator><call><name>_al_vector_ref</name><argument_list>(<argument><expr><operator>&amp;</operator><name>joysticks</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_vector_delete_at</name><argument_list>(<argument><expr><operator>&amp;</operator><name>joysticks</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>_jni_callVoidMethod</name><argument_list>(<argument><expr><call><name>_al_android_get_jnienv</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>_al_android_activity_object</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"setJoystickInactive"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Joystick released.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>initialized</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>andjoy_get_joystick_state</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>joy</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_JOYSTICK_STATE</name> <modifier>*</modifier></type><name>ret_state</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_JOYSTICK_ANDROID</name> <modifier>*</modifier></type><name>andjoy</name> <init>= <expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name>joy</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_EVENT_SOURCE</name> <modifier>*</modifier></type><name>es</name> <init>= <expr><call><name>al_get_joystick_event_source</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>found</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <operator>(</operator><name>int</name><operator>)</operator><call><name>_al_vector_size</name><argument_list>(<argument><expr><operator>&amp;</operator><name>joysticks</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_JOYSTICK_ANDROID</name> <modifier>*</modifier><modifier>*</modifier></type><name>ptr</name> <init>= <expr><call><name>_al_vector_ref</name><argument_list>(<argument><expr><operator>&amp;</operator><name>joysticks</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_JOYSTICK_ANDROID</name> <modifier>*</modifier></type><name>thisjoy</name> <init>= <expr><operator>*</operator><name>ptr</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>andjoy</name> <operator>==</operator> <name>thisjoy</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>found</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>found</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>ret_state</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>ret_state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>_al_event_source_lock</name><argument_list>(<argument><expr><name>es</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>ret_state</name> <operator>=</operator> <name><name>andjoy</name><operator>-&gt;</operator><name>joystate</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_event_source_unlock</name><argument_list>(<argument><expr><name>es</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>_al_android_generate_accelerometer_event</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>z</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>initialized</name></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>x</name> <operator>/=</operator> <operator>-</operator><literal type="number">9.81f</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>x</name> <operator>&lt;</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>x</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>x</name> <operator>&gt;</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>x</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>y</name> <operator>/=</operator> <operator>-</operator><literal type="number">9.81f</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>y</name> <operator>&lt;</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>y</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>y</name> <operator>&gt;</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>y</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>z</name> <operator>/=</operator> <operator>-</operator><literal type="number">9.81f</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>z</name> <operator>&lt;</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>z</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>z</name> <operator>&gt;</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>z</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>ALLEGRO_JOYSTICK_ANDROID</name> <modifier>*</modifier></type><name>accel</name> <init>= <expr><operator>*</operator><operator>(</operator><operator>(</operator><name>ALLEGRO_JOYSTICK_ANDROID</name> <operator>*</operator><operator>*</operator><operator>)</operator><call><name>_al_vector_ref</name><argument_list>(<argument><expr><operator>&amp;</operator><name>joysticks</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>joy</name> <init>= <expr><operator>&amp;</operator><name><name>accel</name><operator>-&gt;</operator><name>parent</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_EVENT_SOURCE</name> <modifier>*</modifier></type><name>es</name> <init>= <expr><call><name>al_get_joystick_event_source</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_EVENT</name></type> <name>event</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>_al_event_source_lock</name><argument_list>(<argument><expr><name>es</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>_al_event_source_needs_to_generate_event</name><argument_list>(<argument><expr><name>es</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>float</name></type> <name><name>pos</name><index>[]</index></name> <init>= <expr><block>{<expr><name>x</name></expr>, <expr><name>y</name></expr>, <expr><name>z</name></expr>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">3</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>id</name></name> <operator>=</operator> <name>joy</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>ALLEGRO_EVENT_JOYSTICK_AXIS</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>timestamp</name></name> <operator>=</operator> <call><name>al_get_time</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>stick</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>axis</name></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>pos</name></name> <operator>=</operator> <name><name>pos</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>button</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>accel</name><operator>-&gt;</operator><name>joystate</name><operator>.</operator><name>stick</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name><name>axis</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>pos</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_event_source_emit_event</name><argument_list>(<argument><expr><name>es</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>_al_event_source_unlock</name><argument_list>(<argument><expr><name>es</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>_al_android_generate_joystick_axis_event</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stick</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>axis</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>value</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>initialized</name> <operator>||</operator> <name>index</name> <operator>&gt;=</operator> <call><name>andjoy_num_joysticks</name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>ALLEGRO_JOYSTICK_ANDROID</name> <modifier>*</modifier></type><name>joystick</name> <init>= <expr><operator>*</operator><operator>(</operator><operator>(</operator><name>ALLEGRO_JOYSTICK_ANDROID</name> <operator>*</operator><operator>*</operator><operator>)</operator><call><name>_al_vector_ref</name><argument_list>(<argument><expr><operator>&amp;</operator><name>joysticks</name></expr></argument>, <argument><expr><name>index</name></expr></argument>)</argument_list></call><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>joy</name> <init>= <expr><operator>&amp;</operator><name><name>joystick</name><operator>-&gt;</operator><name>parent</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_EVENT_SOURCE</name> <modifier>*</modifier></type><name>es</name> <init>= <expr><call><name>al_get_joystick_event_source</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_EVENT</name></type> <name>event</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>_al_event_source_lock</name><argument_list>(<argument><expr><name>es</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>_al_event_source_needs_to_generate_event</name><argument_list>(<argument><expr><name>es</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>id</name></name> <operator>=</operator> <name>joy</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>ALLEGRO_EVENT_JOYSTICK_AXIS</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>timestamp</name></name> <operator>=</operator> <call><name>al_get_time</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>stick</name></name> <operator>=</operator> <name>stick</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>axis</name></name> <operator>=</operator> <name>axis</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>pos</name></name> <operator>=</operator> <name>value</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>button</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>joystick</name><operator>-&gt;</operator><name>joystate</name><operator>.</operator><name>stick</name><index>[<expr><name>stick</name></expr>]</index></name><operator>.</operator><name><name>axis</name><index>[<expr><name>axis</name></expr>]</index></name> <operator>=</operator> <name>value</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_event_source_emit_event</name><argument_list>(<argument><expr><name>es</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>_al_event_source_unlock</name><argument_list>(<argument><expr><name>es</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>_al_android_generate_joystick_button_event</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>button</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>down</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>type</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>initialized</name> <operator>||</operator> <name>index</name> <operator>&gt;=</operator> <call><name>andjoy_num_joysticks</name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>ALLEGRO_JOYSTICK_ANDROID</name> <modifier>*</modifier></type><name>joystick</name> <init>= <expr><operator>*</operator><operator>(</operator><operator>(</operator><name>ALLEGRO_JOYSTICK_ANDROID</name> <operator>*</operator><operator>*</operator><operator>)</operator><call><name>_al_vector_ref</name><argument_list>(<argument><expr><operator>&amp;</operator><name>joysticks</name></expr></argument>, <argument><expr><name>index</name></expr></argument>)</argument_list></call><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>joy</name> <init>= <expr><operator>&amp;</operator><name><name>joystick</name><operator>-&gt;</operator><name>parent</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_EVENT_SOURCE</name> <modifier>*</modifier></type><name>es</name> <init>= <expr><call><name>al_get_joystick_event_source</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_EVENT</name></type> <name>event</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>_al_event_source_lock</name><argument_list>(<argument><expr><name>es</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>down</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>type</name> <operator>=</operator> <name>ALLEGRO_EVENT_JOYSTICK_BUTTON_DOWN</name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name>type</name> <operator>=</operator> <name>ALLEGRO_EVENT_JOYSTICK_BUTTON_UP</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>_al_event_source_needs_to_generate_event</name><argument_list>(<argument><expr><name>es</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>id</name></name> <operator>=</operator> <name>joy</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>type</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>timestamp</name></name> <operator>=</operator> <call><name>al_get_time</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>stick</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>axis</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>pos</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>event</name><operator>.</operator><name>joystick</name><operator>.</operator><name>button</name></name> <operator>=</operator> <name>button</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>joystick</name><operator>-&gt;</operator><name>joystate</name><operator>.</operator><name>button</name><index>[<expr><name>button</name></expr>]</index></name> <operator>=</operator> <ternary><condition><expr><name>type</name> <operator>==</operator> <name>ALLEGRO_EVENT_JOYSTICK_BUTTON_DOWN</name></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_event_source_emit_event</name><argument_list>(<argument><expr><name>es</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>_al_event_source_unlock</name><argument_list>(<argument><expr><name>es</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>char</name> <specifier>const</specifier> <modifier>*</modifier></type><name>andjoy_get_name</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>joy</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>joy</name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <operator>(</operator><name>int</name><operator>)</operator><call><name>_al_vector_size</name><argument_list>(<argument><expr><operator>&amp;</operator><name>joysticks</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_JOYSTICK_ANDROID</name> <modifier>*</modifier></type><name>andjoy</name> <init>= <expr><operator>*</operator><operator>(</operator><operator>(</operator><name>ALLEGRO_JOYSTICK_ANDROID</name> <operator>*</operator><operator>*</operator><operator>)</operator><call><name>_al_vector_ref</name><argument_list>(<argument><expr><operator>&amp;</operator><name>joysticks</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call><operator>)</operator></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>ALLEGRO_JOYSTICK</name> <operator>*</operator><operator>)</operator><name>andjoy</name> <operator>==</operator> <name>joy</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name><name>andjoy</name><operator>-&gt;</operator><name>name</name></name></expr>;</return></block_content></block></if></if_stmt>

</block_content>}</block></for>

<return>return <expr><literal type="string">""</literal></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>andjoy_get_active</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_JOYSTICK</name> <modifier>*</modifier></type><name>joy</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>joy</name></expr>;</expr_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></function>

<decl_stmt><decl><type><name>ALLEGRO_JOYSTICK_DRIVER</name></type> <name>_al_android_joystick_driver</name> <init>= <expr><block>{

<expr><call><name>AL_ID</name><argument_list>(<argument><expr><literal type="char">'A'</literal></expr></argument>, <argument><expr><literal type="char">'N'</literal></expr></argument>, <argument><expr><literal type="char">'D'</literal></expr></argument>, <argument><expr><literal type="char">'R'</literal></expr></argument>)</argument_list></call></expr>,

<expr><literal type="string">""</literal></expr>,

<expr><literal type="string">""</literal></expr>,

<expr><literal type="string">"android joystick"</literal></expr>,

<expr><name>andjoy_init_joystick</name></expr>,

<expr><name>andjoy_exit_joystick</name></expr>,

<expr><name>andjoy_reconfigure_joysticks</name></expr>,

<expr><name>andjoy_num_joysticks</name></expr>,

<expr><name>andjoy_get_joystick</name></expr>,

<expr><name>andjoy_release_joystick</name></expr>,

<expr><name>andjoy_get_joystick_state</name></expr>,

<expr><name>andjoy_get_name</name></expr>,

<expr><name>andjoy_get_active</name></expr>

}</block></expr></init></decl>;</decl_stmt>

</unit>
