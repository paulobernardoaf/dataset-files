<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\src\gp2xwiz\wiz_display_opengl.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_gp2xwiz.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_bitmap.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_opengl.h"</cpp:file></cpp:include>

<macro><name>ALLEGRO_DEBUG_CHANNEL</name><argument_list>(<argument><literal type="string">"display"</literal></argument>)</argument_list></macro>

<decl_stmt><decl><type><specifier>static</specifier> <name>ALLEGRO_DISPLAY_INTERFACE</name> <modifier>*</modifier></type><name>gp2xwiz_vt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name></type> <name>set_gfx_mode</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>void</name></type> <name>setup_gl</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>d</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_OGL_EXTRAS</name> <modifier>*</modifier></type><name>ogl</name> <init>= <expr><name><name>d</name><operator>-&gt;</operator><name>ogl_extras</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>glViewport</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>d</name><operator>-&gt;</operator><name>w</name></name></expr></argument>, <argument><expr><name><name>d</name><operator>-&gt;</operator><name>h</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>glMatrixMode</name><argument_list>(<argument><expr><name>GL_PROJECTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>glLoadIdentity</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>glOrtho</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>d</name><operator>-&gt;</operator><name>w</name></name></expr></argument>, <argument><expr><name><name>d</name><operator>-&gt;</operator><name>h</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>glMatrixMode</name><argument_list>(<argument><expr><name>GL_MODELVIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>glLoadIdentity</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>ogl</name><operator>-&gt;</operator><name>backbuffer</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>ogl</name><operator>-&gt;</operator><name>backbuffer</name></name> <operator>=</operator> <call><name>_al_ogl_create_backbuffer</name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>gp2xwiz_create_display_ogl</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>h</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>w</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>h</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>set_gfx_mode</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>ALLEGRO_DISPLAY_GP2XWIZ_OGL</name> <modifier>*</modifier></type><name>d</name> <init>= <expr><call><name>al_calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof <name/></sizeof>*<name>d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name> <init>= <expr><operator>(</operator><name>void</name><operator>*</operator><operator>)</operator><name>d</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_OGL_EXTRAS</name> <modifier>*</modifier></type><name>ogl</name> <init>= <expr><call><name>al_calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof <name/></sizeof>*<name>ogl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>EGLint</name></type> <name>numConfigs</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>display</name><operator>-&gt;</operator><name>ogl_extras</name></name> <operator>=</operator> <name>ogl</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>ALLEGRO_SYSTEM_GP2XWIZ</name> <modifier>*</modifier></type><name>system</name> <init>= <expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><call><name>al_get_system_driver</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>display</name><operator>-&gt;</operator><name>w</name></name> <operator>=</operator> <literal type="number">320</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>display</name><operator>-&gt;</operator><name>h</name></name> <operator>=</operator> <literal type="number">240</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>display</name><operator>-&gt;</operator><name>vt</name></name> <operator>=</operator> <call><name>_al_display_gp2xwiz_opengl_driver</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>display</name><operator>-&gt;</operator><name>refresh_rate</name></name> <operator>=</operator> <literal type="number">60</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>display</name><operator>-&gt;</operator><name>flags</name></name> <operator>=</operator> <call><name>al_get_new_display_flags</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>display</name><operator>-&gt;</operator><name>flags</name></name> <operator>|=</operator> <name>ALLEGRO_OPENGL</name></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_CFG_OPENGLES2</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><name><name>display</name><operator>-&gt;</operator><name>flags</name></name> <operator>|=</operator> <name>ALLEGRO_PROGRAMMABLE_PIPELINE</name></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_CFG_OPENGLES</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><name><name>display</name><operator>-&gt;</operator><name>flags</name></name> <operator>|=</operator> <name>ALLEGRO_OPENGL_ES_PROFILE</name></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><name><name>display</name><operator>-&gt;</operator><name>flags</name></name> <operator>|=</operator> <name>ALLEGRO_FULLSCREEN</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>ALLEGRO_DISPLAY_GP2XWIZ_OGL</name> <modifier>*</modifier><modifier>*</modifier></type><name>add</name></decl>;</decl_stmt>

<expr_stmt><expr><name>add</name> <operator>=</operator> <call><name>_al_vector_alloc_back</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>system</name><operator>-&gt;</operator><name>system</name><operator>.</operator><name>displays</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>add</name> <operator>=</operator> <name>d</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_event_source_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>display</name><operator>-&gt;</operator><name>es</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>EGLint</name></type> <name><name>attrib_list</name><index>[]</index></name> <init>=

<expr><block>{

<expr><name>EGL_SURFACE_TYPE</name></expr>, <expr><name>EGL_WINDOW_BIT</name></expr>,

<expr><name>EGL_RED_SIZE</name></expr>, <expr><literal type="number">5</literal></expr>,

<expr><name>EGL_GREEN_SIZE</name></expr>, <expr><literal type="number">6</literal></expr>,

<expr><name>EGL_BLUE_SIZE</name></expr>, <expr><literal type="number">5</literal></expr>,

<expr><name>EGL_DEPTH_SIZE</name></expr>, <expr><literal type="number">16</literal></expr>,

<expr><name>EGL_NONE</name></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>EGLint</name></type> <name>majorVersion</name></decl>, <decl><type ref="prev"/><name>minorVersion</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>nanoGL_Init</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>hNativeWnd</name></name> <operator>=</operator> <call><name>OS_CreateWindow</name><argument_list>()</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>egl_display</name></name> <operator>=</operator> <call><name>eglGetDisplay</name><argument_list>(<argument><expr><name>EGL_DEFAULT_DISPLAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>eglInitialize</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>egl_display</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>majorVersion</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>minorVersion</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"EGL Version: %d.%d\n"</literal></expr></argument>, <argument><expr><name>majorVersion</name></expr></argument>, <argument><expr><name>minorVersion</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>eglChooseConfig</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>egl_display</name></name></expr></argument>, <argument><expr><name>attrib_list</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>d</name><operator>-&gt;</operator><name>egl_config</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>numConfigs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>egl_surface</name></name> <operator>=</operator> <call><name>eglCreateWindowSurface</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>egl_display</name></name></expr></argument>, <argument><expr><name><name>d</name><operator>-&gt;</operator><name>egl_config</name></name></expr></argument>, <argument><expr><name><name>d</name><operator>-&gt;</operator><name>hNativeWnd</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>d</name><operator>-&gt;</operator><name>egl_context</name></name> <operator>=</operator> <call><name>eglCreateContext</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>egl_display</name></name></expr></argument>, <argument><expr><name><name>d</name><operator>-&gt;</operator><name>egl_config</name></name></expr></argument>, <argument><expr><name>EGL_NO_CONTEXT</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>eglMakeCurrent</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>egl_display</name></name></expr></argument>, <argument><expr><name><name>d</name><operator>-&gt;</operator><name>egl_surface</name></name></expr></argument>, <argument><expr><name><name>d</name><operator>-&gt;</operator><name>egl_surface</name></name></expr></argument>, <argument><expr><name><name>d</name><operator>-&gt;</operator><name>egl_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"GP2X Wiz window created.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Calling _al_ogl_manage_extensions\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_ogl_manage_extensions</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Calling _al_ogl_set_extensions\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_ogl_set_extensions</name><argument_list>(<argument><expr><name><name>ogl</name><operator>-&gt;</operator><name>extension_api</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>setup_gl</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>set_gfx_mode</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Display created successfully\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>display</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>gp2xwiz_destroy_display_ogl</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>d</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_SYSTEM_GP2XWIZ</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><call><name>al_get_system_driver</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_DISPLAY_GP2XWIZ_OGL</name> <modifier>*</modifier></type><name>wiz_disp</name> <init>= <expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name>d</name></expr></init></decl>;</decl_stmt>

<while>while <condition>(<expr><name><name>d</name><operator>-&gt;</operator><name>bitmaps</name><operator>.</operator><name>_size</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier><modifier>*</modifier></type><name>bptr</name> <init>= <expr><call><name>_al_vector_ref_back</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>d</name><operator>-&gt;</operator><name>bitmaps</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>b</name> <init>= <expr><operator>*</operator><name>bptr</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>_al_convert_to_memory_bitmap</name><argument_list>(<argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></while>

<expr_stmt><expr><call><name>_al_ogl_unmanage_extensions</name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_vector_find_and_delete</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>s</name><operator>-&gt;</operator><name>system</name><operator>.</operator><name>displays</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>eglMakeCurrent</name><argument_list>(<argument><expr><name><name>wiz_disp</name><operator>-&gt;</operator><name>egl_display</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>wiz_disp</name><operator>-&gt;</operator><name>egl_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>eglDestroySurface</name><argument_list>(<argument><expr><name><name>wiz_disp</name><operator>-&gt;</operator><name>egl_display</name></name></expr></argument>, <argument><expr><name><name>wiz_disp</name><operator>-&gt;</operator><name>egl_surface</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>eglDestroyContext</name><argument_list>(<argument><expr><name><name>wiz_disp</name><operator>-&gt;</operator><name>egl_display</name></name></expr></argument>, <argument><expr><name><name>wiz_disp</name><operator>-&gt;</operator><name>egl_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>eglTerminate</name><argument_list>(<argument><expr><name><name>wiz_disp</name><operator>-&gt;</operator><name>egl_display</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_free</name><argument_list>(<argument><expr><name><name>wiz_disp</name><operator>-&gt;</operator><name>hNativeWnd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>nanoGL_Destroy</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_vector_free</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>d</name><operator>-&gt;</operator><name>bitmaps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_event_source_free</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>d</name><operator>-&gt;</operator><name>es</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_free</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>ogl_extras</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_free</name><argument_list>(<argument><expr><name><name>d</name><operator>-&gt;</operator><name>vertex_cache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_free</name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>set_gfx_mode</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>gp2xwiz_set_current_display_ogl</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>d</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>d</name></expr>;</expr_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>gp2xwiz_flip_display_ogl</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>d</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_DISPLAY_GP2XWIZ_OGL</name> <modifier>*</modifier></type><name>wiz_disp</name> <init>= <expr><operator>(</operator><name>ALLEGRO_DISPLAY_GP2XWIZ_OGL</name> <operator>*</operator><operator>)</operator><name>d</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>eglSwapBuffers</name><argument_list>(<argument><expr><name><name>wiz_disp</name><operator>-&gt;</operator><name>egl_display</name></name></expr></argument>, <argument><expr><name><name>wiz_disp</name><operator>-&gt;</operator><name>egl_surface</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>gp2xwiz_update_display_region_ogl</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>h</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>x</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>y</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>w</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>h</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gp2xwiz_flip_display_ogl</name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>gp2xwiz_acknowledge_resize_ogl</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>d</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>d</name></expr>;</expr_stmt>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>gp2xwiz_resize_display_ogl</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>h</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>d</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>w</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>h</name></expr>;</expr_stmt>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>gp2xwiz_is_compatible_bitmap_ogl</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>,

<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>display</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>bitmap</name></expr>;</expr_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>gp2xwiz_get_window_position_ogl</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>y</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>display</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>x</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>y</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>gp2xwiz_wait_for_vsync_ogl</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>display</name></expr>;</expr_stmt>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>ALLEGRO_DISPLAY_INTERFACE</name> <modifier>*</modifier></type><name>_al_display_gp2xwiz_opengl_driver</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>gp2xwiz_vt</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>gp2xwiz_vt</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>gp2xwiz_vt</name> <operator>=</operator> <call><name>al_calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof <name/></sizeof>*<name>gp2xwiz_vt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>create_display</name></name> <operator>=</operator> <name>gp2xwiz_create_display_ogl</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>destroy_display</name></name> <operator>=</operator> <name>gp2xwiz_destroy_display_ogl</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>set_current_display</name></name> <operator>=</operator> <name>gp2xwiz_set_current_display_ogl</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>flip_display</name></name> <operator>=</operator> <name>gp2xwiz_flip_display_ogl</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>update_display_region</name></name> <operator>=</operator> <name>gp2xwiz_update_display_region_ogl</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>acknowledge_resize</name></name> <operator>=</operator> <name>gp2xwiz_acknowledge_resize_ogl</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>create_bitmap</name></name> <operator>=</operator> <name>_al_ogl_create_bitmap</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>get_backbuffer</name></name> <operator>=</operator> <name>_al_ogl_get_backbuffer</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>set_target_bitmap</name></name> <operator>=</operator> <name>_al_ogl_set_target_bitmap</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>is_compatible_bitmap</name></name> <operator>=</operator> <name>gp2xwiz_is_compatible_bitmap_ogl</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>resize_display</name></name> <operator>=</operator> <name>gp2xwiz_resize_display_ogl</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>set_icons</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>set_window_title</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>set_window_position</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>get_window_position</name></name> <operator>=</operator> <name>gp2xwiz_get_window_position_ogl</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>set_window_constraints</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>get_window_constraints</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>set_display_flag</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>wait_for_vsync</name></name> <operator>=</operator> <name>gp2xwiz_wait_for_vsync_ogl</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_ogl_add_drawing_functions</name><argument_list>(<argument><expr><name>gp2xwiz_vt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>gp2xwiz_vt</name></expr>;</return>

</block_content>}</block></function>

</unit>
