<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\src\gp2xwiz\wiz_system.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/time.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/platform/aintunix.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_gp2xwiz.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/platform/aintwiz.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <name>ALLEGRO_SYSTEM_INTERFACE</name> <modifier>*</modifier></type><name>gp2xwiz_vt</name></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>ALLEGRO_SYSTEM</name> <modifier>*</modifier></type><name>gp2xwiz_initialize</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_SYSTEM_GP2XWIZ</name> <modifier>*</modifier></type><name>s</name></decl>;</decl_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>flags</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_unix_init_time</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>s</name> <operator>=</operator> <call><name>al_calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof <name/></sizeof>*<name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_vector_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>s</name><operator>-&gt;</operator><name>system</name><operator>.</operator><name>displays</name></name></expr></argument>, <argument><expr><sizeof>sizeof <argument_list>(<argument><expr><name>ALLEGRO_DISPLAY</name> <operator>*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>system</name><operator>.</operator><name>vt</name></name> <operator>=</operator> <name>gp2xwiz_vt</name></expr>;</expr_stmt>

<return>return <expr><operator>&amp;</operator><name><name>s</name><operator>-&gt;</operator><name>system</name></name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>gp2xwiz_shutdown_system</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_SYSTEM</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><call><name>al_get_system_driver</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_SYSTEM_GP2XWIZ</name> <modifier>*</modifier></type><name>sx</name> <init>= <expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name>s</name></expr></init></decl>;</decl_stmt>

<while>while <condition>(<expr><call><name>_al_vector_size</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>s</name><operator>-&gt;</operator><name>displays</name></name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier><modifier>*</modifier></type><name>dptr</name> <init>= <expr><call><name>_al_vector_ref</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>s</name><operator>-&gt;</operator><name>displays</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>d</name> <init>= <expr><operator>*</operator><name>dptr</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>al_destroy_display</name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></while>

<expr_stmt><expr><call><name>_al_vector_free</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>s</name><operator>-&gt;</operator><name>displays</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_free</name><argument_list>(<argument><expr><name>sx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>lc_exit</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>ALLEGRO_DISPLAY_INTERFACE</name> <modifier>*</modifier></type><name>gp2xwiz_get_display_driver</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>al_get_new_display_flags</name><argument_list>()</argument_list></call> <operator>&amp;</operator> <name>ALLEGRO_OPENGL</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><call><name>_al_display_gp2xwiz_opengl_driver</name><argument_list>()</argument_list></call></expr>;</return></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<return>return <expr><call><name>_al_display_gp2xwiz_framebuffer_driver</name><argument_list>()</argument_list></call></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>ALLEGRO_KEYBOARD_DRIVER</name> <modifier>*</modifier></type><name>gp2xwiz_get_keyboard_driver</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>ALLEGRO_MOUSE_DRIVER</name> <modifier>*</modifier></type><name>gp2xwiz_get_mouse_driver</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><name>NULL</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>ALLEGRO_JOYSTICK_DRIVER</name> <modifier>*</modifier></type><name>gp2xwiz_get_joystick_driver</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><name><name>_al_joystick_driver_list</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>driver</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>gp2xwiz_get_num_video_adapters</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><literal type="number">1</literal></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>gp2xwiz_get_monitor_info</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>adapter</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MONITOR_INFO</name> <modifier>*</modifier></type><name>info</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>adapter</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>x1</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>y1</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>x2</name></name> <operator>=</operator> <literal type="number">320</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>info</name><operator>-&gt;</operator><name>y2</name></name> <operator>=</operator> <literal type="number">240</literal></expr>;</expr_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>gp2xwiz_get_cursor_position</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>ret_x</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>ret_y</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>ret_x</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>ret_y</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>gp2xwiz_inhibit_screensaver</name><parameter_list>(<parameter><decl><type><name>bool</name></type> <name>inhibit</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>inhibit</name></expr>;</expr_stmt>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>gp2xwiz_get_num_display_modes</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><literal type="number">1</literal></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>ALLEGRO_DISPLAY_MODE</name> <modifier>*</modifier></type><name>gp2xwiz_get_display_mode</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>,

<parameter><decl><type><name>ALLEGRO_DISPLAY_MODE</name> <modifier>*</modifier></type><name>mode</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>index</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ASSERT</name><argument_list>(<argument><expr><name>index</name> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>mode</name><operator>-&gt;</operator><name>width</name></name> <operator>=</operator> <literal type="number">320</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>mode</name><operator>-&gt;</operator><name>height</name></name> <operator>=</operator> <literal type="number">240</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>mode</name><operator>-&gt;</operator><name>format</name></name> <operator>=</operator> <name>ALLEGRO_PIXEL_FORMAT_RGB_565</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>mode</name><operator>-&gt;</operator><name>refresh_rate</name></name> <operator>=</operator> <literal type="number">60</literal></expr>;</expr_stmt>

<return>return <expr><name>mode</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>ALLEGRO_SYSTEM_INTERFACE</name> <modifier>*</modifier></type><name>_al_system_gp2xwiz_driver</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>gp2xwiz_vt</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>gp2xwiz_vt</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>gp2xwiz_vt</name> <operator>=</operator> <call><name>al_calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><sizeof>sizeof <name/></sizeof>*<name>gp2xwiz_vt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>id</name></name> <operator>=</operator> <name>ALLEGRO_SYSTEM_ID_GP2XWIZ</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>initialize</name></name> <operator>=</operator> <name>gp2xwiz_initialize</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>get_display_driver</name></name> <operator>=</operator> <name>gp2xwiz_get_display_driver</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>get_keyboard_driver</name></name> <operator>=</operator> <name>gp2xwiz_get_keyboard_driver</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>get_mouse_driver</name></name> <operator>=</operator> <name>gp2xwiz_get_mouse_driver</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>get_joystick_driver</name></name> <operator>=</operator> <name>gp2xwiz_get_joystick_driver</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>get_num_display_modes</name></name> <operator>=</operator> <name>gp2xwiz_get_num_display_modes</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>get_display_mode</name></name> <operator>=</operator> <name>gp2xwiz_get_display_mode</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>shutdown_system</name></name> <operator>=</operator> <name>gp2xwiz_shutdown_system</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>get_num_video_adapters</name></name> <operator>=</operator> <name>gp2xwiz_get_num_video_adapters</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>get_monitor_info</name></name> <operator>=</operator> <name>gp2xwiz_get_monitor_info</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>get_cursor_position</name></name> <operator>=</operator> <name>gp2xwiz_get_cursor_position</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>get_path</name></name> <operator>=</operator> <name>_al_unix_get_path</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>inhibit_screensaver</name></name> <operator>=</operator> <name>gp2xwiz_inhibit_screensaver</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>get_num_display_formats</name></name> <operator>=</operator> <name>gp2xwiz_get_num_display_formats</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>get_time</name></name> <operator>=</operator> <name>_al_unix_get_time</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>rest</name></name> <operator>=</operator> <name>_al_unix_rest</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>gp2xwiz_vt</name><operator>-&gt;</operator><name>init_timeout</name></name> <operator>=</operator> <name>_al_unix_init_timeout</name></expr>;</expr_stmt>

<return>return <expr><name>gp2xwiz_vt</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>_al_register_system_interfaces</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_SYSTEM_INTERFACE</name> <modifier>*</modifier><modifier>*</modifier></type><name>add</name></decl>;</decl_stmt>

<expr_stmt><expr><name>add</name> <operator>=</operator> <call><name>_al_vector_alloc_back</name><argument_list>(<argument><expr><operator>&amp;</operator><name>_al_system_interfaces</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>add</name> <operator>=</operator> <call><name>_al_system_gp2xwiz_driver</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
