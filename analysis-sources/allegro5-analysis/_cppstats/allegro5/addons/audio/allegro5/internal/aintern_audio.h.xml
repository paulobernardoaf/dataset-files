<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\addons\audio\allegro5\internal\aintern_audio.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_list.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_vector.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../allegro_audio.h"</cpp:file></cpp:include>

<struct>struct <name>ALLEGRO_AUDIO_RECORDER</name> <block>{

<decl_stmt><decl><type><name>ALLEGRO_EVENT_SOURCE</name></type> <name>source</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_THREAD</name> <modifier>*</modifier></type><name>thread</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_MUTEX</name> <modifier>*</modifier></type><name>mutex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_COND</name> <modifier>*</modifier></type><name>cond</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_AUDIO_DEPTH</name></type> <name>depth</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_CHANNEL_CONF</name></type> <name>chan_conf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>frequency</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>fragments</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>fragment_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>samples</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>fragment_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>sample_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>volatile</specifier> <name>bool</name></type> <name>is_recording</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>extra</name></decl>;</decl_stmt>

}</block>;</struct>

<typedef>typedef <type><enum>enum <name>ALLEGRO_AUDIO_DRIVER_ENUM</name>

<block>{

<decl><name>ALLEGRO_AUDIO_DRIVER_AUTODETECT</name> <init>= <expr><literal type="number">0x20000</literal></expr></init></decl>,

<decl><name>ALLEGRO_AUDIO_DRIVER_OPENAL</name> <init>= <expr><literal type="number">0x20001</literal></expr></init></decl>,

<decl><name>ALLEGRO_AUDIO_DRIVER_ALSA</name> <init>= <expr><literal type="number">0x20002</literal></expr></init></decl>,

<decl><name>ALLEGRO_AUDIO_DRIVER_DSOUND</name> <init>= <expr><literal type="number">0x20003</literal></expr></init></decl>,

<decl><name>ALLEGRO_AUDIO_DRIVER_OSS</name> <init>= <expr><literal type="number">0x20004</literal></expr></init></decl>,

<decl><name>ALLEGRO_AUDIO_DRIVER_AQUEUE</name> <init>= <expr><literal type="number">0x20005</literal></expr></init></decl>,

<decl><name>ALLEGRO_AUDIO_DRIVER_PULSEAUDIO</name> <init>= <expr><literal type="number">0x20006</literal></expr></init></decl>,

<decl><name>ALLEGRO_AUDIO_DRIVER_OPENSL</name> <init>= <expr><literal type="number">0x20007</literal></expr></init></decl>,

<decl><name>ALLEGRO_AUDIO_DRIVER_SDL</name> <init>= <expr><literal type="number">0x20008</literal></expr></init></decl>

}</block></enum></type> <name>ALLEGRO_AUDIO_DRIVER_ENUM</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_AUDIO_DRIVER</name></name></type> <name>ALLEGRO_AUDIO_DRIVER</name>;</typedef>

<struct>struct <name>ALLEGRO_AUDIO_DRIVER</name> <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>specifier</name></decl>;</decl_stmt>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>open</name>)<parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>close</name>)<parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>allocate_voice</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_VOICE</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>deallocate_voice</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_VOICE</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>load_voice</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_VOICE</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>unload_voice</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_VOICE</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>start_voice</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_VOICE</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>stop_voice</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_VOICE</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>voice_is_playing</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ALLEGRO_VOICE</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>unsigned</name> <name>int</name></type> (<modifier>*</modifier><name>get_voice_position</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ALLEGRO_VOICE</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>set_voice_position</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_VOICE</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>int</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>allocate_recorder</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ALLEGRO_AUDIO_RECORDER</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>deallocate_recorder</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ALLEGRO_AUDIO_RECORDER</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

}</block>;</struct>

<decl_stmt><decl><type><specifier>extern</specifier> <name>ALLEGRO_AUDIO_DRIVER</name> <modifier>*</modifier></type><name>_al_kcm_driver</name></decl>;</decl_stmt>

<function_decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>_al_voice_update</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_VOICE</name> <modifier>*</modifier></type><name>voice</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MUTEX</name> <modifier>*</modifier></type><name>mutex</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>samples</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> <name>_al_kcm_set_voice_playing</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_VOICE</name> <modifier>*</modifier></type><name>voice</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MUTEX</name> <modifier>*</modifier></type><name>mutex</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>

<struct>struct <name>ALLEGRO_VOICE</name> <block>{

<decl_stmt><decl><type><name>ALLEGRO_AUDIO_DEPTH</name></type> <name>depth</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_CHANNEL_CONF</name></type> <name>chan_conf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>frequency</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>buffer_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>num_buffers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_SAMPLE_INSTANCE</name> <modifier>*</modifier></type><name>attached_stream</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>is_streaming</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_MUTEX</name> <modifier>*</modifier></type><name>mutex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_COND</name> <modifier>*</modifier></type><name>cond</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>_AL_LIST_ITEM</name> <modifier>*</modifier></type><name>dtor_item</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_AUDIO_DRIVER</name> <modifier>*</modifier></type><name>driver</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>extra</name></decl>;</decl_stmt>

}</block>;</struct>

<typedef>typedef <type><union>union <block>{

<decl_stmt><decl><type><name>float</name> <modifier>*</modifier></type><name>f32</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>u24</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>s24</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name> <modifier>*</modifier></type><name>u16</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>s16</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>u8</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int8_t</name> <modifier>*</modifier></type><name>s8</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl>;</decl_stmt>

}</block></union></type> <name>any_buffer_t</name>;</typedef>

<struct>struct <name>ALLEGRO_SAMPLE</name> <block>{

<decl_stmt><decl><type><name>ALLEGRO_AUDIO_DEPTH</name></type> <name>depth</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_CHANNEL_CONF</name></type> <name>chan_conf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>frequency</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>len</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>any_buffer_t</name></type> <name>buffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>free_buf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>_AL_LIST_ITEM</name> <modifier>*</modifier></type><name>dtor_item</name></decl>;</decl_stmt>

}</block>;</struct>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>stream_reader_t</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>vbuf</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>samples</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_AUDIO_DEPTH</name></type> <name>buffer_depth</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>dest_maxc</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <type><struct>struct <block>{

<union>union <block>{

<decl_stmt><decl><type><name>ALLEGRO_MIXER</name> <modifier>*</modifier></type><name>mixer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_VOICE</name> <modifier>*</modifier></type><name>voice</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl>;</decl_stmt>

}</block> <decl><name>u</name></decl>;</union>

<decl_stmt><decl><type><name>bool</name></type> <name>is_voice</name></decl>;</decl_stmt>

}</block></struct></type> <name>sample_parent_t</name>;</typedef>

<struct>struct <name>ALLEGRO_SAMPLE_INSTANCE</name> <block>{

<decl_stmt><decl><type><name>ALLEGRO_EVENT_SOURCE</name></type> <name>es</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_SAMPLE</name></type> <name>spl_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>volatile</specifier> <name>bool</name></type> <name>is_playing</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_PLAYMODE</name></type> <name>loop</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>speed</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>gain</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>pan</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>pos</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>pos_bresenham_error</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>loop_start</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>loop_end</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>step</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>step_denom</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name> <modifier>*</modifier></type><name>matrix</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>is_mixer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>stream_reader_t</name></type> <name>spl_read</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_MUTEX</name> <modifier>*</modifier></type><name>mutex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>sample_parent_t</name></type> <name>parent</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>_AL_LIST_ITEM</name> <modifier>*</modifier></type><name>dtor_item</name></decl>;</decl_stmt>

}</block>;</struct>

<function_decl><type><name>void</name></type> <name>_al_kcm_destroy_sample</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_SAMPLE_INSTANCE</name> <modifier>*</modifier></type><name>sample</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>unregister</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_kcm_stream_set_mutex</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_SAMPLE_INSTANCE</name> <modifier>*</modifier></type><name>stream</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MUTEX</name> <modifier>*</modifier></type><name>mutex</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_kcm_detach_from_parent</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_SAMPLE_INSTANCE</name> <modifier>*</modifier></type><name>spl</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <function_decl><type><name>size_t</name></type> (<modifier>*</modifier><name>stream_callback_t</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_AUDIO_STREAM</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>unload_feeder_t</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_AUDIO_STREAM</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>rewind_feeder_t</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_AUDIO_STREAM</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>seek_feeder_t</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_AUDIO_STREAM</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>double</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>double</name></type> (<modifier>*</modifier><name>get_feeder_position_t</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_AUDIO_STREAM</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>double</name></type> (<modifier>*</modifier><name>get_feeder_length_t</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_AUDIO_STREAM</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>set_feeder_loop_t</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_AUDIO_STREAM</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>double</name></type></decl></parameter>, <parameter><decl><type><name>double</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<struct>struct <name>ALLEGRO_AUDIO_STREAM</name> <block>{

<decl_stmt><decl><type><name>ALLEGRO_SAMPLE_INSTANCE</name></type> <name>spl</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>buf_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>main_buffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>pending_bufs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>used_bufs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>volatile</specifier> <name>bool</name></type> <name>is_draining</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>consumed_fragments</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_THREAD</name> <modifier>*</modifier></type><name>feed_thread</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_MUTEX</name> <modifier>*</modifier></type><name>feed_thread_started_mutex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_COND</name> <modifier>*</modifier></type><name>feed_thread_started_cond</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>feed_thread_started</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>volatile</specifier> <name>bool</name></type> <name>quit_feed_thread</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unload_feeder_t</name></type> <name>unload_feeder</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>rewind_feeder_t</name></type> <name>rewind_feeder</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>seek_feeder_t</name></type> <name>seek_feeder</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>get_feeder_position_t</name></type> <name>get_feeder_position</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>get_feeder_length_t</name></type> <name>get_feeder_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>set_feeder_loop_t</name></type> <name>set_feeder_loop</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>stream_callback_t</name></type> <name>feeder</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>_AL_LIST_ITEM</name> <modifier>*</modifier></type><name>dtor_item</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>extra</name></decl>;</decl_stmt>

}</block>;</struct>

<function_decl><type><name>bool</name></type> <name>_al_kcm_refill_stream</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_AUDIO_STREAM</name> <modifier>*</modifier></type><name>stream</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>postprocess_callback_t</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>samples</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>userdata</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<struct>struct <name>ALLEGRO_MIXER</name> <block>{

<decl_stmt><decl><type><name>ALLEGRO_SAMPLE_INSTANCE</name></type> <name>ss</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_MIXER_QUALITY</name></type> <name>quality</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>postprocess_callback_t</name></type> <name>postprocess_callback</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>pp_callback_userdata</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>_AL_VECTOR</name></type> <name>streams</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>_AL_LIST_ITEM</name> <modifier>*</modifier></type><name>dtor_item</name></decl>;</decl_stmt>

}</block>;</struct>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>_al_kcm_mixer_rejig_sample_matrix</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MIXER</name> <modifier>*</modifier></type><name>mixer</name></decl></parameter>,

<parameter><decl><type><name>ALLEGRO_SAMPLE_INSTANCE</name> <modifier>*</modifier></type><name>spl</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>_al_kcm_mixer_read</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>source</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>samples</name></decl></parameter>,

<parameter><decl><type><name>ALLEGRO_AUDIO_DEPTH</name></type> <name>buffer_depth</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>dest_maxc</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><enum>enum <block>{

<decl><name>ALLEGRO_NO_ERROR</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>ALLEGRO_INVALID_PARAM</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>ALLEGRO_INVALID_OBJECT</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>ALLEGRO_GENERIC_ERROR</name> <init>= <expr><literal type="number">255</literal></expr></init></decl>

}</block></enum></type> <name>AL_ERROR_ENUM</name>;</typedef>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>_al_set_error</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>error</name></decl></parameter>, <parameter><decl><type><name>char</name><modifier>*</modifier></type> <name>string</name></decl></parameter>)</parameter_list>;</function_decl>

<expr_stmt><expr><call><name>ALLEGRO_KCM_AUDIO_FUNC</name><argument_list>(<argument><expr><name>void</name><operator>*</operator></expr></argument>, <argument><expr><name>_al_kcm_feed_stream</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_THREAD</name> <operator>*</operator><name>self</name><operator>,</operator> <name>void</name> <operator>*</operator><name>vstream</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function_decl><type><name>void</name></type> <name>_al_kcm_emit_stream_events</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_AUDIO_STREAM</name> <modifier>*</modifier></type><name>stream</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_kcm_init_destructors</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_kcm_shutdown_destructors</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>_AL_LIST_ITEM</name> <modifier>*</modifier></type><name>_al_kcm_register_destructor</name><parameter_list>(<parameter><decl><type><name>char</name> <specifier>const</specifier> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>object</name></decl></parameter>,

<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>func</name>)<parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_kcm_unregister_destructor</name><parameter_list>(<parameter><decl><type><name>_AL_LIST_ITEM</name> <modifier>*</modifier></type><name>dtor_item</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_kcm_foreach_destructor</name><parameter_list>(

<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>callback</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>object</name></decl></parameter>, <parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>func</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>udata</name></decl></parameter>)</parameter_list></function_decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>userdata</name></decl></parameter>)</parameter_list>;</function_decl>

<expr_stmt><expr><call><name>ALLEGRO_KCM_AUDIO_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>_al_kcm_shutdown_default_mixer</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_KCM_AUDIO_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_CHANNEL_CONF</name></expr></argument>, <argument><expr><name>_al_count_to_channel_conf</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name> <name>num_channels</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_KCM_AUDIO_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_AUDIO_DEPTH</name></expr></argument>, <argument><expr><name>_al_word_size_to_depth_conf</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name> <name>word_size</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_KCM_AUDIO_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>_al_emit_audio_event</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name> <name>event_type</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</unit>
