<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\addons\font\allegro5\allegro_font.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>(</operator><name>defined</name> <name>ALLEGRO_MINGW32</name><operator>)</operator> <operator>||</operator> <operator>(</operator><name>defined</name> <name>ALLEGRO_MSVC</name><operator>)</operator> <operator>||</operator> <operator>(</operator><name>defined</name> <name>ALLEGRO_BCC32</name><operator>)</operator></expr></cpp:if>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_STATICLINK</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_FONT_SRC</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_ALLEGRO_FONT_DLL</name></cpp:macro> <cpp:value>__declspec(dllexport)</cpp:value></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_ALLEGRO_FONT_DLL</name></cpp:macro> <cpp:value>__declspec(dllimport)</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_ALLEGRO_FONT_DLL</name></cpp:macro></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>ALLEGRO_MSVC</name></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_FONT_FUNC</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>args</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_ALLEGRO_FONT_DLL type __cdecl name args</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_FONT_METHOD</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>args</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>type (__cdecl *name) args</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_FONT_FUNCPTR</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>args</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>extern _ALLEGRO_FONT_DLL type (__cdecl *name) args</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_FONT_PRINTFUNC</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>args</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>ALLEGRO_FONT_FUNC(type, name, args)</cpp:value></cpp:define>

<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><name>defined</name> <name>ALLEGRO_MINGW32</name></expr></cpp:elif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_FONT_FUNC</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>args</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>extern type name args</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_FONT_METHOD</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>args</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>type (*name) args</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_FONT_FUNCPTR</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>args</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>extern _ALLEGRO_FONT_DLL type (*name) args</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_FONT_PRINTFUNC</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>args</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>ALLEGRO_FONT_FUNC(type, name, args) __attribute__ ((format (printf, a, b)))</cpp:value></cpp:define>

<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><name>defined</name> <name>ALLEGRO_BCC32</name></expr></cpp:elif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_FONT_FUNC</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>args</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>extern _ALLEGRO_FONT_DLL type name args</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_FONT_METHOD</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>args</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>type (*name) args</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_FONT_FUNCPTR</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>args</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>extern _ALLEGRO_FONT_DLL type (*name) args</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_FONT_PRINTFUNC</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>args</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>ALLEGRO_FONT_FUNC(type, name, args)</cpp:value></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_FONT_FUNC</name></cpp:macro> <cpp:value>AL_FUNC</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_FONT_METHOD</name></cpp:macro> <cpp:value>AL_METHOD</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_FONT_FUNCPTR</name></cpp:macro> <cpp:value>AL_FUNCPTR</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_FONT_PRINTFUNC</name></cpp:macro> <cpp:value>AL_PRINTFUNC</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_FONT</name></name></type> <name>ALLEGRO_FONT</name>;</typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_UNSTABLE</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_INTERNAL_UNSTABLE</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_FONT_SRC</name></expr></argument>)</argument_list></call></expr></cpp:if>

<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_GLYPH</name></name></type> <name>ALLEGRO_GLYPH</name>;</typedef>

<struct>struct <name>ALLEGRO_GLYPH</name>

<block>{

<decl_stmt><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>y</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>w</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>h</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>kerning</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>offset_x</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>offset_y</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>advance</name></decl>;</decl_stmt>

}</block>;</struct>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<enum>enum <block>{

<decl><name>ALLEGRO_NO_KERNING</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>,

<decl><name>ALLEGRO_ALIGN_LEFT</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>ALLEGRO_ALIGN_CENTRE</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>ALLEGRO_ALIGN_CENTER</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>ALLEGRO_ALIGN_RIGHT</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>ALLEGRO_ALIGN_INTEGER</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

}</block>;</enum>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_register_font_loader</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><name>ext</name><operator>,</operator> <name>ALLEGRO_FONT</name> <operator>*</operator><operator>(</operator><operator>*</operator><name>load</name><operator>)</operator><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><name>filename</name><operator>,</operator> <name>int</name> <name>size</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_FONT</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_load_bitmap_font</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><name>filename</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_FONT</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_load_bitmap_font_flags</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><name>filename</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_FONT</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_load_font</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><name>filename</name><operator>,</operator> <name>int</name> <name>size</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_FONT</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_grab_font_from_bitmap</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_BITMAP</name> <operator>*</operator><name>bmp</name><operator>,</operator> <name>int</name> <name>n</name><operator>,</operator> <specifier>const</specifier> <name>int</name> <name><name>ranges</name><index>[]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_FONT</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_create_builtin_font</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_ustr</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_FONT</name> <operator>*</operator><name>font</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>,</operator> <name>float</name> <name>x</name><operator>,</operator> <name>float</name> <name>y</name><operator>,</operator> <name>int</name> <name>flags</name><operator>,</operator> <name>ALLEGRO_USTR</name> <specifier>const</specifier> <operator>*</operator><name>ustr</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_text</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_FONT</name> <operator>*</operator><name>font</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>,</operator> <name>float</name> <name>x</name><operator>,</operator> <name>float</name> <name>y</name><operator>,</operator> <name>int</name> <name>flags</name><operator>,</operator> <name>char</name> <specifier>const</specifier> <operator>*</operator><name>text</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_justified_text</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_FONT</name> <operator>*</operator><name>font</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>,</operator> <name>float</name> <name>x1</name><operator>,</operator> <name>float</name> <name>x2</name><operator>,</operator> <name>float</name> <name>y</name><operator>,</operator> <name>float</name> <name>diff</name><operator>,</operator> <name>int</name> <name>flags</name><operator>,</operator> <name>char</name> <specifier>const</specifier> <operator>*</operator><name>text</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_justified_ustr</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_FONT</name> <operator>*</operator><name>font</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>,</operator> <name>float</name> <name>x1</name><operator>,</operator> <name>float</name> <name>x2</name><operator>,</operator> <name>float</name> <name>y</name><operator>,</operator> <name>float</name> <name>diff</name><operator>,</operator> <name>int</name> <name>flags</name><operator>,</operator> <name>ALLEGRO_USTR</name> <specifier>const</specifier> <operator>*</operator><name>text</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_PRINTFUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_textf</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_FONT</name> <operator>*</operator><name>font</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>,</operator> <name>float</name> <name>x</name><operator>,</operator> <name>float</name> <name>y</name><operator>,</operator> <name>int</name> <name>flags</name><operator>,</operator> <name>char</name> <specifier>const</specifier> <operator>*</operator><name>format</name><operator>,</operator> <operator>...</operator><operator>)</operator></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_PRINTFUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_justified_textf</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_FONT</name> <operator>*</operator><name>font</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>,</operator> <name>float</name> <name>x1</name><operator>,</operator> <name>float</name> <name>x2</name><operator>,</operator> <name>float</name> <name>y</name><operator>,</operator> <name>float</name> <name>diff</name><operator>,</operator> <name>int</name> <name>flags</name><operator>,</operator> <name>char</name> <specifier>const</specifier> <operator>*</operator><name>format</name><operator>,</operator> <operator>...</operator><operator>)</operator></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_text_width</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_FONT</name> <operator>*</operator><name>f</name><operator>,</operator> <specifier>const</specifier> <name>char</name> <operator>*</operator><name>str</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_ustr_width</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_FONT</name> <operator>*</operator><name>f</name><operator>,</operator> <specifier>const</specifier> <name>ALLEGRO_USTR</name> <operator>*</operator><name>ustr</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_font_line_height</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_FONT</name> <operator>*</operator><name>f</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_font_ascent</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_FONT</name> <operator>*</operator><name>f</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_font_descent</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_FONT</name> <operator>*</operator><name>f</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_destroy_font</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_FONT</name> <operator>*</operator><name>f</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_get_ustr_dimensions</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_FONT</name> <operator>*</operator><name>f</name><operator>,</operator>

<name>ALLEGRO_USTR</name> <specifier>const</specifier> <operator>*</operator><name>text</name><operator>,</operator>

<name>int</name> <operator>*</operator><name>bbx</name><operator>,</operator> <name>int</name> <operator>*</operator><name>bby</name><operator>,</operator> <name>int</name> <operator>*</operator><name>bbw</name><operator>,</operator> <name>int</name> <operator>*</operator><name>bbh</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_get_text_dimensions</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_FONT</name> <operator>*</operator><name>f</name><operator>,</operator>

<name>char</name> <specifier>const</specifier> <operator>*</operator><name>text</name><operator>,</operator>

<name>int</name> <operator>*</operator><name>bbx</name><operator>,</operator> <name>int</name> <operator>*</operator><name>bby</name><operator>,</operator> <name>int</name> <operator>*</operator><name>bbw</name><operator>,</operator> <name>int</name> <operator>*</operator><name>bbh</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_init_font_addon</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_is_font_addon_initialized</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_shutdown_font_addon</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>uint32_t</name></expr></argument>, <argument><expr><name>al_get_allegro_font_version</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_font_ranges</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_FONT</name> <operator>*</operator><name>font</name><operator>,</operator>

<name>int</name> <name>ranges_count</name><operator>,</operator> <name>int</name> <operator>*</operator><name>ranges</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_glyph</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_FONT</name> <operator>*</operator><name>font</name><operator>,</operator>

<name>ALLEGRO_COLOR</name> <name>color</name><operator>,</operator> <name>float</name> <name>x</name><operator>,</operator> <name>float</name> <name>y</name><operator>,</operator> <name>int</name> <name>codepoint</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_glyph_width</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_FONT</name> <operator>*</operator><name>f</name><operator>,</operator>

<name>int</name> <name>codepoint</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_get_glyph_dimensions</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_FONT</name> <operator>*</operator><name>f</name><operator>,</operator>

<name>int</name> <name>codepoint</name><operator>,</operator> <name>int</name> <operator>*</operator><name>bbx</name><operator>,</operator> <name>int</name> <operator>*</operator><name>bby</name><operator>,</operator> <name>int</name> <operator>*</operator><name>bbw</name><operator>,</operator> <name>int</name> <operator>*</operator><name>bbh</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_glyph_advance</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_FONT</name> <operator>*</operator><name>f</name><operator>,</operator>

<name>int</name> <name>codepoint1</name><operator>,</operator> <name>int</name> <name>codepoint2</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_UNSTABLE</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_INTERNAL_UNSTABLE</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_FONT_SRC</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_get_glyph</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_FONT</name> <operator>*</operator><name>f</name><operator>,</operator> <name>int</name> <name>prev_codepoint</name><operator>,</operator> <name>int</name> <name>codepoint</name><operator>,</operator> <name>ALLEGRO_GLYPH</name> <operator>*</operator><name>glyph</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_multiline_text</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_FONT</name> <operator>*</operator><name>font</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>,</operator> <name>float</name> <name>x</name><operator>,</operator> <name>float</name> <name>y</name><operator>,</operator> <name>float</name> <name>max_width</name><operator>,</operator> <name>float</name> <name>line_height</name><operator>,</operator> <name>int</name> <name>flags</name><operator>,</operator> <specifier>const</specifier> <name>char</name> <operator>*</operator><name>text</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_multiline_textf</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_FONT</name> <operator>*</operator><name>font</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>,</operator> <name>float</name> <name>x</name><operator>,</operator> <name>float</name> <name>y</name><operator>,</operator> <name>float</name> <name>max_width</name><operator>,</operator> <name>float</name> <name>line_height</name><operator>,</operator> <name>int</name> <name>flags</name><operator>,</operator> <specifier>const</specifier> <name>char</name> <operator>*</operator><name>format</name><operator>,</operator> <operator>...</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_multiline_ustr</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_FONT</name> <operator>*</operator><name>font</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>,</operator> <name>float</name> <name>x</name><operator>,</operator> <name>float</name> <name>y</name><operator>,</operator> <name>float</name> <name>max_width</name><operator>,</operator> <name>float</name> <name>line_height</name><operator>,</operator> <name>int</name> <name>flags</name><operator>,</operator> <specifier>const</specifier> <name>ALLEGRO_USTR</name> <operator>*</operator><name>text</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_do_multiline_text</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_FONT</name> <operator>*</operator><name>font</name><operator>,</operator>

<name>float</name> <name>max_width</name><operator>,</operator> <specifier>const</specifier> <name>char</name> <operator>*</operator><name>text</name><operator>,</operator>

<macro><name>bool</name> <argument_list>(<argument>*cb</argument>)</argument_list></macro><operator>(</operator><name>int</name> <name>line_num</name><operator>,</operator> <specifier>const</specifier> <name>char</name> <operator>*</operator><name>line</name><operator>,</operator> <name>int</name> <name>size</name><operator>,</operator> <name>void</name> <operator>*</operator><name>extra</name><operator>)</operator><operator>,</operator>

<name>void</name> <operator>*</operator><name>extra</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_do_multiline_ustr</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_FONT</name> <operator>*</operator><name>font</name><operator>,</operator>

<name>float</name> <name>max_width</name><operator>,</operator> <specifier>const</specifier> <name>ALLEGRO_USTR</name> <operator>*</operator><name>ustr</name><operator>,</operator>

<macro><name>bool</name> <argument_list>(<argument>*cb</argument>)</argument_list></macro><operator>(</operator><name>int</name> <name>line_num</name><operator>,</operator> <specifier>const</specifier> <name>ALLEGRO_USTR</name> <operator>*</operator><name>line</name><operator>,</operator> <name>void</name> <operator>*</operator><name>extra</name><operator>)</operator><operator>,</operator>

<name>void</name> <operator>*</operator><name>extra</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_set_fallback_font</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_FONT</name> <operator>*</operator><name>font</name><operator>,</operator>

<name>ALLEGRO_FONT</name> <operator>*</operator><name>fallback</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_FONT_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_FONT</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_get_fallback_font</name></expr></argument>, <argument><expr><operator>(</operator>

<name>ALLEGRO_FONT</name> <operator>*</operator><name>font</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
