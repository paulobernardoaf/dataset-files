<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\addons\acodec\acodec.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro_acodec.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro_audio.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_acodec_cfg.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"acodec.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name></type> <name>acodec_inited</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

<function><type><name>uint32_t</name></type> <name>al_get_allegro_acodec_version</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><name>ALLEGRO_VERSION_INT</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>al_init_acodec_addon</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>bool</name></type> <name>ret</name> <init>= <expr><name>true</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>ret</name> <operator>&amp;=</operator> <call><name>al_register_sample_loader</name><argument_list>(<argument><expr><literal type="string">".wav"</literal></expr></argument>, <argument><expr><name>_al_load_wav</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>&amp;=</operator> <call><name>al_register_sample_saver</name><argument_list>(<argument><expr><literal type="string">".wav"</literal></expr></argument>, <argument><expr><name>_al_save_wav</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>&amp;=</operator> <call><name>al_register_audio_stream_loader</name><argument_list>(<argument><expr><literal type="string">".wav"</literal></expr></argument>, <argument><expr><name>_al_load_wav_audio_stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>&amp;=</operator> <call><name>al_register_sample_loader_f</name><argument_list>(<argument><expr><literal type="string">".wav"</literal></expr></argument>, <argument><expr><name>_al_load_wav_f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>&amp;=</operator> <call><name>al_register_sample_saver_f</name><argument_list>(<argument><expr><literal type="string">".wav"</literal></expr></argument>, <argument><expr><name>_al_save_wav_f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>&amp;=</operator> <call><name>al_register_audio_stream_loader_f</name><argument_list>(<argument><expr><literal type="string">".wav"</literal></expr></argument>, <argument><expr><name>_al_load_wav_audio_stream_f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>&amp;=</operator> <call><name>al_register_sample_loader</name><argument_list>(<argument><expr><literal type="string">".voc"</literal></expr></argument>, <argument><expr><name>_al_load_voc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>&amp;=</operator> <call><name>al_register_sample_loader_f</name><argument_list>(<argument><expr><literal type="string">".voc"</literal></expr></argument>, <argument><expr><name>_al_load_voc_f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_CFG_ACODEC_FLAC</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><name>ret</name> <operator>&amp;=</operator> <call><name>al_register_sample_loader</name><argument_list>(<argument><expr><literal type="string">".flac"</literal></expr></argument>, <argument><expr><name>_al_load_flac</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>&amp;=</operator> <call><name>al_register_audio_stream_loader</name><argument_list>(<argument><expr><literal type="string">".flac"</literal></expr></argument>, <argument><expr><name>_al_load_flac_audio_stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>&amp;=</operator> <call><name>al_register_sample_loader_f</name><argument_list>(<argument><expr><literal type="string">".flac"</literal></expr></argument>, <argument><expr><name>_al_load_flac_f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>&amp;=</operator> <call><name>al_register_audio_stream_loader_f</name><argument_list>(<argument><expr><literal type="string">".flac"</literal></expr></argument>, <argument><expr><name>_al_load_flac_audio_stream_f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_CFG_ACODEC_MODAUDIO</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><name>ret</name> <operator>&amp;=</operator> <call><name>_al_register_dumb_loaders</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_CFG_ACODEC_VORBIS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><name>ret</name> <operator>&amp;=</operator> <call><name>al_register_sample_loader</name><argument_list>(<argument><expr><literal type="string">".ogg"</literal></expr></argument>, <argument><expr><name>_al_load_ogg_vorbis</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>&amp;=</operator> <call><name>al_register_audio_stream_loader</name><argument_list>(<argument><expr><literal type="string">".ogg"</literal></expr></argument>, <argument><expr><name>_al_load_ogg_vorbis_audio_stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>&amp;=</operator> <call><name>al_register_sample_loader_f</name><argument_list>(<argument><expr><literal type="string">".ogg"</literal></expr></argument>, <argument><expr><name>_al_load_ogg_vorbis_f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>&amp;=</operator> <call><name>al_register_audio_stream_loader_f</name><argument_list>(<argument><expr><literal type="string">".ogg"</literal></expr></argument>, <argument><expr><name>_al_load_ogg_vorbis_audio_stream_f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_CFG_ACODEC_OPUS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><name>ret</name> <operator>&amp;=</operator> <call><name>al_register_sample_loader</name><argument_list>(<argument><expr><literal type="string">".opus"</literal></expr></argument>, <argument><expr><name>_al_load_ogg_opus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>&amp;=</operator> <call><name>al_register_audio_stream_loader</name><argument_list>(<argument><expr><literal type="string">".opus"</literal></expr></argument>, <argument><expr><name>_al_load_ogg_opus_audio_stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>&amp;=</operator> <call><name>al_register_sample_loader_f</name><argument_list>(<argument><expr><literal type="string">".opus"</literal></expr></argument>, <argument><expr><name>_al_load_ogg_opus_f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>&amp;=</operator> <call><name>al_register_audio_stream_loader_f</name><argument_list>(<argument><expr><literal type="string">".opus"</literal></expr></argument>, <argument><expr><name>_al_load_ogg_opus_audio_stream_f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_CFG_ACODEC_MP3</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><name>ret</name> <operator>&amp;=</operator> <call><name>al_register_sample_loader</name><argument_list>(<argument><expr><literal type="string">".mp3"</literal></expr></argument>, <argument><expr><name>_al_load_mp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>&amp;=</operator> <call><name>al_register_audio_stream_loader</name><argument_list>(<argument><expr><literal type="string">".mp3"</literal></expr></argument>, <argument><expr><name>_al_load_mp3_audio_stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>&amp;=</operator> <call><name>al_register_sample_loader_f</name><argument_list>(<argument><expr><literal type="string">".mp3"</literal></expr></argument>, <argument><expr><name>_al_load_mp3_f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>&amp;=</operator> <call><name>al_register_audio_stream_loader_f</name><argument_list>(<argument><expr><literal type="string">".mp3"</literal></expr></argument>, <argument><expr><name>_al_load_mp3_audio_stream_f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><name>acodec_inited</name> <operator>=</operator> <name>ret</name></expr>;</expr_stmt>

<return>return <expr><name>ret</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>al_is_acodec_addon_initialized</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><name>acodec_inited</name></expr>;</return>

</block_content>}</block></function>

</unit>
