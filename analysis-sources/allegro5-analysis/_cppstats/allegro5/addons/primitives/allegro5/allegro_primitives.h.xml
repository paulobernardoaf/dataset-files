<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\addons\primitives\allegro5\allegro_primitives.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;allegro5/allegro.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>(</operator><name>defined</name> <name>ALLEGRO_MINGW32</name><operator>)</operator> <operator>||</operator> <operator>(</operator><name>defined</name> <name>ALLEGRO_MSVC</name><operator>)</operator> <operator>||</operator> <operator>(</operator><name>defined</name> <name>ALLEGRO_BCC32</name><operator>)</operator></expr></cpp:if>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_STATICLINK</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_PRIMITIVES_SRC</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_ALLEGRO_PRIM_DLL</name></cpp:macro> <cpp:value>__declspec(dllexport)</cpp:value></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_ALLEGRO_PRIM_DLL</name></cpp:macro> <cpp:value>__declspec(dllimport)</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_ALLEGRO_PRIM_DLL</name></cpp:macro></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>defined</name> <name>ALLEGRO_MSVC</name></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_PRIM_FUNC</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>args</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_ALLEGRO_PRIM_DLL type __cdecl name args</cpp:value></cpp:define>

<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><name>defined</name> <name>ALLEGRO_MINGW32</name></expr></cpp:elif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_PRIM_FUNC</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>args</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>extern type name args</cpp:value></cpp:define>

<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><name>defined</name> <name>ALLEGRO_BCC32</name></expr></cpp:elif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_PRIM_FUNC</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>args</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>extern _ALLEGRO_PRIM_DLL type name args</cpp:value></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_PRIM_FUNC</name></cpp:macro> <cpp:value>AL_FUNC</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal>

<block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><enum>enum <name>ALLEGRO_PRIM_TYPE</name>

<block>{

<decl><name>ALLEGRO_PRIM_LINE_LIST</name></decl>,

<decl><name>ALLEGRO_PRIM_LINE_STRIP</name></decl>,

<decl><name>ALLEGRO_PRIM_LINE_LOOP</name></decl>,

<decl><name>ALLEGRO_PRIM_TRIANGLE_LIST</name></decl>,

<decl><name>ALLEGRO_PRIM_TRIANGLE_STRIP</name></decl>,

<decl><name>ALLEGRO_PRIM_TRIANGLE_FAN</name></decl>,

<decl><name>ALLEGRO_PRIM_POINT_LIST</name></decl>,

<decl><name>ALLEGRO_PRIM_NUM_TYPES</name></decl>

}</block></enum></type> <name>ALLEGRO_PRIM_TYPE</name>;</typedef>

<enum>enum

<block>{

<decl><name>ALLEGRO_PRIM_MAX_USER_ATTR</name> <init>= <expr><name>_ALLEGRO_PRIM_MAX_USER_ATTR</name></expr></init></decl>

}</block>;</enum>

<typedef>typedef <type><enum>enum <name>ALLEGRO_PRIM_ATTR</name>

<block>{

<decl><name>ALLEGRO_PRIM_POSITION</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>ALLEGRO_PRIM_COLOR_ATTR</name></decl>,

<decl><name>ALLEGRO_PRIM_TEX_COORD</name></decl>,

<decl><name>ALLEGRO_PRIM_TEX_COORD_PIXEL</name></decl>,

<decl><name>ALLEGRO_PRIM_USER_ATTR</name></decl>,

<decl><name>ALLEGRO_PRIM_ATTR_NUM</name> <init>= <expr><name>ALLEGRO_PRIM_USER_ATTR</name> <operator>+</operator> <name>ALLEGRO_PRIM_MAX_USER_ATTR</name></expr></init></decl>

}</block></enum></type> <name>ALLEGRO_PRIM_ATTR</name>;</typedef>

<typedef>typedef <type><enum>enum <name>ALLEGRO_PRIM_STORAGE</name>

<block>{

<decl><name>ALLEGRO_PRIM_FLOAT_2</name></decl>,

<decl><name>ALLEGRO_PRIM_FLOAT_3</name></decl>,

<decl><name>ALLEGRO_PRIM_SHORT_2</name></decl>,

<decl><name>ALLEGRO_PRIM_FLOAT_1</name></decl>,

<decl><name>ALLEGRO_PRIM_FLOAT_4</name></decl>,

<decl><name>ALLEGRO_PRIM_UBYTE_4</name></decl>,

<decl><name>ALLEGRO_PRIM_SHORT_4</name></decl>,

<decl><name>ALLEGRO_PRIM_NORMALIZED_UBYTE_4</name></decl>,

<decl><name>ALLEGRO_PRIM_NORMALIZED_SHORT_2</name></decl>,

<decl><name>ALLEGRO_PRIM_NORMALIZED_SHORT_4</name></decl>,

<decl><name>ALLEGRO_PRIM_NORMALIZED_USHORT_2</name></decl>,

<decl><name>ALLEGRO_PRIM_NORMALIZED_USHORT_4</name></decl>,

<decl><name>ALLEGRO_PRIM_HALF_FLOAT_2</name></decl>,

<decl><name>ALLEGRO_PRIM_HALF_FLOAT_4</name></decl>

}</block></enum></type> <name>ALLEGRO_PRIM_STORAGE</name>;</typedef>

<typedef>typedef <type><enum>enum <name>ALLEGRO_LINE_JOIN</name>

<block>{

<decl><name>ALLEGRO_LINE_JOIN_NONE</name></decl>,

<decl><name>ALLEGRO_LINE_JOIN_BEVEL</name></decl>,

<decl><name>ALLEGRO_LINE_JOIN_ROUND</name></decl>,

<decl><name>ALLEGRO_LINE_JOIN_MITER</name></decl>,

<decl><name>ALLEGRO_LINE_JOIN_MITRE</name> <init>= <expr><name>ALLEGRO_LINE_JOIN_MITER</name></expr></init></decl>

}</block></enum></type> <name>ALLEGRO_LINE_JOIN</name>;</typedef>

<typedef>typedef <type><enum>enum <name>ALLEGRO_LINE_CAP</name>

<block>{

<decl><name>ALLEGRO_LINE_CAP_NONE</name></decl>,

<decl><name>ALLEGRO_LINE_CAP_SQUARE</name></decl>,

<decl><name>ALLEGRO_LINE_CAP_ROUND</name></decl>,

<decl><name>ALLEGRO_LINE_CAP_TRIANGLE</name></decl>,

<decl><name>ALLEGRO_LINE_CAP_CLOSED</name></decl>

}</block></enum></type> <name>ALLEGRO_LINE_CAP</name>;</typedef>

<typedef>typedef <type><enum>enum <name>ALLEGRO_PRIM_BUFFER_FLAGS</name>

<block>{

<decl><name>ALLEGRO_PRIM_BUFFER_STREAM</name> <init>= <expr><literal type="number">0x01</literal></expr></init></decl>,

<decl><name>ALLEGRO_PRIM_BUFFER_STATIC</name> <init>= <expr><literal type="number">0x02</literal></expr></init></decl>,

<decl><name>ALLEGRO_PRIM_BUFFER_DYNAMIC</name> <init>= <expr><literal type="number">0x04</literal></expr></init></decl>,

<decl><name>ALLEGRO_PRIM_BUFFER_READWRITE</name> <init>= <expr><literal type="number">0x08</literal></expr></init></decl>

}</block></enum></type> <name>ALLEGRO_PRIM_BUFFER_FLAGS</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_VERTEX_CACHE_SIZE</name></cpp:macro> <cpp:value>256</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_PRIM_QUALITY</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define>

<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_VERTEX_ELEMENT</name></name></type> <name>ALLEGRO_VERTEX_ELEMENT</name>;</typedef>

<struct>struct <name>ALLEGRO_VERTEX_ELEMENT</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>attribute</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>storage</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>offset</name></decl>;</decl_stmt>

}</block>;</struct>

<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_VERTEX_DECL</name></name></type> <name>ALLEGRO_VERTEX_DECL</name>;</typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_ALLEGRO_VERTEX_DEFINED</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_ALLEGRO_VERTEX_DEFINED</name></cpp:macro></cpp:define>

<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_VERTEX</name></name></type> <name>ALLEGRO_VERTEX</name>;</typedef>

<struct>struct <name>ALLEGRO_VERTEX</name> <block>{

<decl_stmt><decl><type><name>float</name></type> <name>x</name></decl>, <decl><type ref="prev"/><name>y</name></decl>, <decl><type ref="prev"/><name>z</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>u</name></decl>, <decl><type ref="prev"/><name>v</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_COLOR</name></type> <name>color</name></decl>;</decl_stmt>

}</block>;</struct>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_VERTEX_BUFFER</name></name></type> <name>ALLEGRO_VERTEX_BUFFER</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_INDEX_BUFFER</name></name></type> <name>ALLEGRO_INDEX_BUFFER</name>;</typedef>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>uint32_t</name></expr></argument>, <argument><expr><name>al_get_allegro_primitives_version</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_init_primitives_addon</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_is_primitives_addon_initialized</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_shutdown_primitives_addon</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_draw_prim</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>void</name><operator>*</operator> <name>vtxs</name><operator>,</operator> <specifier>const</specifier> <name>ALLEGRO_VERTEX_DECL</name><operator>*</operator> <name>decl</name><operator>,</operator> <name>ALLEGRO_BITMAP</name><operator>*</operator> <name>texture</name><operator>,</operator> <name>int</name> <name>start</name><operator>,</operator> <name>int</name> <name>end</name><operator>,</operator> <name>int</name> <name>type</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_draw_indexed_prim</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>void</name><operator>*</operator> <name>vtxs</name><operator>,</operator> <specifier>const</specifier> <name>ALLEGRO_VERTEX_DECL</name><operator>*</operator> <name>decl</name><operator>,</operator> <name>ALLEGRO_BITMAP</name><operator>*</operator> <name>texture</name><operator>,</operator> <specifier>const</specifier> <name>int</name><operator>*</operator> <name>indices</name><operator>,</operator> <name>int</name> <name>num_vtx</name><operator>,</operator> <name>int</name> <name>type</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_draw_vertex_buffer</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_VERTEX_BUFFER</name><operator>*</operator> <name>vertex_buffer</name><operator>,</operator> <name>ALLEGRO_BITMAP</name><operator>*</operator> <name>texture</name><operator>,</operator> <name>int</name> <name>start</name><operator>,</operator> <name>int</name> <name>end</name><operator>,</operator> <name>int</name> <name>type</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_draw_indexed_buffer</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_VERTEX_BUFFER</name><operator>*</operator> <name>vertex_buffer</name><operator>,</operator> <name>ALLEGRO_BITMAP</name><operator>*</operator> <name>texture</name><operator>,</operator> <name>ALLEGRO_INDEX_BUFFER</name><operator>*</operator> <name>index_buffer</name><operator>,</operator> <name>int</name> <name>start</name><operator>,</operator> <name>int</name> <name>end</name><operator>,</operator> <name>int</name> <name>type</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_VERTEX_DECL</name><operator>*</operator></expr></argument>, <argument><expr><name>al_create_vertex_decl</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_VERTEX_ELEMENT</name><operator>*</operator> <name>elements</name><operator>,</operator> <name>int</name> <name>stride</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_destroy_vertex_decl</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_VERTEX_DECL</name><operator>*</operator> <name>decl</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_VERTEX_BUFFER</name><operator>*</operator></expr></argument>, <argument><expr><name>al_create_vertex_buffer</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_VERTEX_DECL</name><operator>*</operator> <name>decl</name><operator>,</operator> <specifier>const</specifier> <name>void</name><operator>*</operator> <name>initial_data</name><operator>,</operator> <name>int</name> <name>num_vertices</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_destroy_vertex_buffer</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_VERTEX_BUFFER</name><operator>*</operator> <name>buffer</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name><operator>*</operator></expr></argument>, <argument><expr><name>al_lock_vertex_buffer</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_VERTEX_BUFFER</name><operator>*</operator> <name>buffer</name><operator>,</operator> <name>int</name> <name>offset</name><operator>,</operator> <name>int</name> <name>length</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_unlock_vertex_buffer</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_VERTEX_BUFFER</name><operator>*</operator> <name>buffer</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_vertex_buffer_size</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_VERTEX_BUFFER</name><operator>*</operator> <name>buffer</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_INDEX_BUFFER</name><operator>*</operator></expr></argument>, <argument><expr><name>al_create_index_buffer</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name> <name>index_size</name><operator>,</operator> <specifier>const</specifier> <name>void</name><operator>*</operator> <name>initial_data</name><operator>,</operator> <name>int</name> <name>num_indices</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_destroy_index_buffer</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_INDEX_BUFFER</name><operator>*</operator> <name>buffer</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name><operator>*</operator></expr></argument>, <argument><expr><name>al_lock_index_buffer</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_INDEX_BUFFER</name><operator>*</operator> <name>buffer</name><operator>,</operator> <name>int</name> <name>offset</name><operator>,</operator> <name>int</name> <name>length</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_unlock_index_buffer</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_INDEX_BUFFER</name><operator>*</operator> <name>buffer</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_index_buffer_size</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_INDEX_BUFFER</name><operator>*</operator> <name>buffer</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_triangulate_polygon</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>float</name><operator>*</operator> <name>vertices</name><operator>,</operator> <name>size_t</name> <name>vertex_stride</name><operator>,</operator> <specifier>const</specifier> <name>int</name><operator>*</operator> <name>vertex_counts</name><operator>,</operator> <call><call><name>void</name> <argument_list>(<argument><expr><operator>*</operator><name>emit_triangle</name></expr></argument>)</argument_list></call><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>int</name></expr></argument>, <argument><expr><name>int</name></expr></argument>, <argument><expr><name>void</name><operator>*</operator></expr></argument>)</argument_list></call><operator>,</operator> <name>void</name><operator>*</operator> <name>userdata</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_soft_triangle</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_VERTEX</name><operator>*</operator> <name>v1</name><operator>,</operator> <name>ALLEGRO_VERTEX</name><operator>*</operator> <name>v2</name><operator>,</operator> <name>ALLEGRO_VERTEX</name><operator>*</operator> <name>v3</name><operator>,</operator> <name>uintptr_t</name> <name>state</name><operator>,</operator>

<call><call><name>void</name> <argument_list>(<argument><expr><operator>*</operator><name>init</name></expr></argument>)</argument_list></call><argument_list>(<argument><expr><name>uintptr_t</name></expr></argument>, <argument><expr><name>ALLEGRO_VERTEX</name><operator>*</operator></expr></argument>, <argument><expr><name>ALLEGRO_VERTEX</name><operator>*</operator></expr></argument>, <argument><expr><name>ALLEGRO_VERTEX</name><operator>*</operator></expr></argument>)</argument_list></call><operator>,</operator>

<call><call><name>void</name> <argument_list>(<argument><expr><operator>*</operator><name>first</name></expr></argument>)</argument_list></call><argument_list>(<argument><expr><name>uintptr_t</name></expr></argument>, <argument><expr><name>int</name></expr></argument>, <argument><expr><name>int</name></expr></argument>, <argument><expr><name>int</name></expr></argument>, <argument><expr><name>int</name></expr></argument>)</argument_list></call><operator>,</operator>

<call><call><name>void</name> <argument_list>(<argument><expr><operator>*</operator><name>step</name></expr></argument>)</argument_list></call><argument_list>(<argument><expr><name>uintptr_t</name></expr></argument>, <argument><expr><name>int</name></expr></argument>)</argument_list></call><operator>,</operator>

<call><call><name>void</name> <argument_list>(<argument><expr><operator>*</operator><name>draw</name></expr></argument>)</argument_list></call><argument_list>(<argument><expr><name>uintptr_t</name></expr></argument>, <argument><expr><name>int</name></expr></argument>, <argument><expr><name>int</name></expr></argument>, <argument><expr><name>int</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_soft_line</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_VERTEX</name><operator>*</operator> <name>v1</name><operator>,</operator> <name>ALLEGRO_VERTEX</name><operator>*</operator> <name>v2</name><operator>,</operator> <name>uintptr_t</name> <name>state</name><operator>,</operator>

<call><call><name>void</name> <argument_list>(<argument><expr><operator>*</operator><name>first</name></expr></argument>)</argument_list></call><argument_list>(<argument><expr><name>uintptr_t</name></expr></argument>, <argument><expr><name>int</name></expr></argument>, <argument><expr><name>int</name></expr></argument>, <argument><expr><name>ALLEGRO_VERTEX</name><operator>*</operator></expr></argument>, <argument><expr><name>ALLEGRO_VERTEX</name><operator>*</operator></expr></argument>)</argument_list></call><operator>,</operator>

<call><call><name>void</name> <argument_list>(<argument><expr><operator>*</operator><name>step</name></expr></argument>)</argument_list></call><argument_list>(<argument><expr><name>uintptr_t</name></expr></argument>, <argument><expr><name>int</name></expr></argument>)</argument_list></call><operator>,</operator>

<call><call><name>void</name> <argument_list>(<argument><expr><operator>*</operator><name>draw</name></expr></argument>)</argument_list></call><argument_list>(<argument><expr><name>uintptr_t</name></expr></argument>, <argument><expr><name>int</name></expr></argument>, <argument><expr><name>int</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_line</name></expr></argument>, <argument><expr><operator>(</operator><name>float</name> <name>x1</name><operator>,</operator> <name>float</name> <name>y1</name><operator>,</operator> <name>float</name> <name>x2</name><operator>,</operator> <name>float</name> <name>y2</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>,</operator> <name>float</name> <name>thickness</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_triangle</name></expr></argument>, <argument><expr><operator>(</operator><name>float</name> <name>x1</name><operator>,</operator> <name>float</name> <name>y1</name><operator>,</operator> <name>float</name> <name>x2</name><operator>,</operator> <name>float</name> <name>y2</name><operator>,</operator> <name>float</name> <name>x3</name><operator>,</operator> <name>float</name> <name>y3</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>,</operator> <name>float</name> <name>thickness</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_rectangle</name></expr></argument>, <argument><expr><operator>(</operator><name>float</name> <name>x1</name><operator>,</operator> <name>float</name> <name>y1</name><operator>,</operator> <name>float</name> <name>x2</name><operator>,</operator> <name>float</name> <name>y2</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>,</operator> <name>float</name> <name>thickness</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_rounded_rectangle</name></expr></argument>, <argument><expr><operator>(</operator><name>float</name> <name>x1</name><operator>,</operator> <name>float</name> <name>y1</name><operator>,</operator> <name>float</name> <name>x2</name><operator>,</operator> <name>float</name> <name>y2</name><operator>,</operator> <name>float</name> <name>rx</name><operator>,</operator> <name>float</name> <name>ry</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>,</operator> <name>float</name> <name>thickness</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_calculate_arc</name></expr></argument>, <argument><expr><operator>(</operator><name>float</name><operator>*</operator> <name>dest</name><operator>,</operator> <name>int</name> <name>stride</name><operator>,</operator> <name>float</name> <name>cx</name><operator>,</operator> <name>float</name> <name>cy</name><operator>,</operator> <name>float</name> <name>rx</name><operator>,</operator> <name>float</name> <name>ry</name><operator>,</operator> <name>float</name> <name>start_theta</name><operator>,</operator> <name>float</name> <name>delta_theta</name><operator>,</operator> <name>float</name> <name>thickness</name><operator>,</operator> <name>int</name> <name>num_points</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_circle</name></expr></argument>, <argument><expr><operator>(</operator><name>float</name> <name>cx</name><operator>,</operator> <name>float</name> <name>cy</name><operator>,</operator> <name>float</name> <name>r</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>,</operator> <name>float</name> <name>thickness</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_ellipse</name></expr></argument>, <argument><expr><operator>(</operator><name>float</name> <name>cx</name><operator>,</operator> <name>float</name> <name>cy</name><operator>,</operator> <name>float</name> <name>rx</name><operator>,</operator> <name>float</name> <name>ry</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>,</operator> <name>float</name> <name>thickness</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_arc</name></expr></argument>, <argument><expr><operator>(</operator><name>float</name> <name>cx</name><operator>,</operator> <name>float</name> <name>cy</name><operator>,</operator> <name>float</name> <name>r</name><operator>,</operator> <name>float</name> <name>start_theta</name><operator>,</operator> <name>float</name> <name>delta_theta</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>,</operator> <name>float</name> <name>thickness</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_elliptical_arc</name></expr></argument>, <argument><expr><operator>(</operator><name>float</name> <name>cx</name><operator>,</operator> <name>float</name> <name>cy</name><operator>,</operator> <name>float</name> <name>rx</name><operator>,</operator> <name>float</name> <name>ry</name><operator>,</operator> <name>float</name> <name>start_theta</name><operator>,</operator> <name>float</name> <name>delta_theta</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>,</operator> <name>float</name> <name>thickness</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_pieslice</name></expr></argument>, <argument><expr><operator>(</operator><name>float</name> <name>cx</name><operator>,</operator> <name>float</name> <name>cy</name><operator>,</operator> <name>float</name> <name>r</name><operator>,</operator> <name>float</name> <name>start_theta</name><operator>,</operator> <name>float</name> <name>delta_theta</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>,</operator> <name>float</name> <name>thickness</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_calculate_spline</name></expr></argument>, <argument><expr><operator>(</operator><name>float</name><operator>*</operator> <name>dest</name><operator>,</operator> <name>int</name> <name>stride</name><operator>,</operator> <name>float</name> <name><name>points</name><index>[<expr><literal type="number">8</literal></expr>]</index></name><operator>,</operator> <name>float</name> <name>thickness</name><operator>,</operator> <name>int</name> <name>num_segments</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_spline</name></expr></argument>, <argument><expr><operator>(</operator><name>float</name> <name><name>points</name><index>[<expr><literal type="number">8</literal></expr>]</index></name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>,</operator> <name>float</name> <name>thickness</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_calculate_ribbon</name></expr></argument>, <argument><expr><operator>(</operator><name>float</name><operator>*</operator> <name>dest</name><operator>,</operator> <name>int</name> <name>dest_stride</name><operator>,</operator> <specifier>const</specifier> <name>float</name> <operator>*</operator><name>points</name><operator>,</operator> <name>int</name> <name>points_stride</name><operator>,</operator> <name>float</name> <name>thickness</name><operator>,</operator> <name>int</name> <name>num_segments</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_ribbon</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>float</name> <operator>*</operator><name>points</name><operator>,</operator> <name>int</name> <name>points_stride</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>,</operator> <name>float</name> <name>thickness</name><operator>,</operator> <name>int</name> <name>num_segments</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_filled_triangle</name></expr></argument>, <argument><expr><operator>(</operator><name>float</name> <name>x1</name><operator>,</operator> <name>float</name> <name>y1</name><operator>,</operator> <name>float</name> <name>x2</name><operator>,</operator> <name>float</name> <name>y2</name><operator>,</operator> <name>float</name> <name>x3</name><operator>,</operator> <name>float</name> <name>y3</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_filled_rectangle</name></expr></argument>, <argument><expr><operator>(</operator><name>float</name> <name>x1</name><operator>,</operator> <name>float</name> <name>y1</name><operator>,</operator> <name>float</name> <name>x2</name><operator>,</operator> <name>float</name> <name>y2</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_filled_ellipse</name></expr></argument>, <argument><expr><operator>(</operator><name>float</name> <name>cx</name><operator>,</operator> <name>float</name> <name>cy</name><operator>,</operator> <name>float</name> <name>rx</name><operator>,</operator> <name>float</name> <name>ry</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_filled_circle</name></expr></argument>, <argument><expr><operator>(</operator><name>float</name> <name>cx</name><operator>,</operator> <name>float</name> <name>cy</name><operator>,</operator> <name>float</name> <name>r</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_filled_pieslice</name></expr></argument>, <argument><expr><operator>(</operator><name>float</name> <name>cx</name><operator>,</operator> <name>float</name> <name>cy</name><operator>,</operator> <name>float</name> <name>r</name><operator>,</operator> <name>float</name> <name>start_theta</name><operator>,</operator> <name>float</name> <name>delta_theta</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_filled_rounded_rectangle</name></expr></argument>, <argument><expr><operator>(</operator><name>float</name> <name>x1</name><operator>,</operator> <name>float</name> <name>y1</name><operator>,</operator> <name>float</name> <name>x2</name><operator>,</operator> <name>float</name> <name>y2</name><operator>,</operator> <name>float</name> <name>rx</name><operator>,</operator> <name>float</name> <name>ry</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_polyline</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>float</name><operator>*</operator> <name>vertices</name><operator>,</operator> <name>int</name> <name>vertex_stride</name><operator>,</operator> <name>int</name> <name>vertex_count</name><operator>,</operator> <name>int</name> <name>join_style</name><operator>,</operator> <name>int</name> <name>cap_style</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>,</operator> <name>float</name> <name>thickness</name><operator>,</operator> <name>float</name> <name>miter_limit</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_polygon</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>float</name><operator>*</operator> <name>vertices</name><operator>,</operator> <name>int</name> <name>vertex_count</name><operator>,</operator> <name>int</name> <name>join_style</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>,</operator> <name>float</name> <name>thickness</name><operator>,</operator> <name>float</name> <name>miter_limit</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_filled_polygon</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>float</name><operator>*</operator> <name>vertices</name><operator>,</operator> <name>int</name> <name>vertex_count</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ALLEGRO_PRIM_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_filled_polygon_with_holes</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>float</name><operator>*</operator> <name>vertices</name><operator>,</operator> <specifier>const</specifier> <name>int</name><operator>*</operator> <name>vertex_counts</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>color</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
