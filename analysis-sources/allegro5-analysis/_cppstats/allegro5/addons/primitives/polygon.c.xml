<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\addons\primitives\polygon.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro_primitives.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_prim.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;math.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_MSVC</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>hypotf</name><parameter_list>(<parameter><type><name>x</name></type></parameter>, <parameter><type><name>y</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_hypotf((x), (y))</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><specifier>static</specifier> <name>void</name></type> <name>polygon_push_triangle_callback</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>i0</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i1</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i2</name></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>user_data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_PRIM_VERTEX_CACHE</name><modifier>*</modifier></type> <name>cache</name> <init>= <expr><operator>(</operator><name>ALLEGRO_PRIM_VERTEX_CACHE</name><operator>*</operator><operator>)</operator><name>user_data</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>float</name><modifier>*</modifier></type> <name>vertices</name> <init>= <expr><operator>(</operator><specifier>const</specifier> <name>float</name><operator>*</operator><operator>)</operator><name><name>cache</name><operator>-&gt;</operator><name>user_data</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>float</name><modifier>*</modifier></type> <name>v0</name> <init>= <expr><name>vertices</name> <operator>+</operator> <operator>(</operator><name>i0</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>float</name><modifier>*</modifier></type> <name>v1</name> <init>= <expr><name>vertices</name> <operator>+</operator> <operator>(</operator><name>i1</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>float</name><modifier>*</modifier></type> <name>v2</name> <init>= <expr><name>vertices</name> <operator>+</operator> <operator>(</operator><name>i2</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>_al_prim_cache_push_triangle</name><argument_list>(<argument><expr><name>cache</name></expr></argument>, <argument><expr><name>v0</name></expr></argument>, <argument><expr><name>v1</name></expr></argument>, <argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>al_draw_polygon</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>vertices</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>vertex_count</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>join_style</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_COLOR</name></type> <name>color</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>thickness</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>miter_limit</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>al_draw_polyline</name><argument_list>(<argument><expr><name>vertices</name></expr></argument>, <argument><expr><literal type="number">2</literal> <operator>*</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>float</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>vertex_count</name></expr></argument>, <argument><expr><name>join_style</name></expr></argument>,

<argument><expr><name>ALLEGRO_LINE_CAP_CLOSED</name></expr></argument>, <argument><expr><name>color</name></expr></argument>, <argument><expr><name>thickness</name></expr></argument>, <argument><expr><name>miter_limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>al_draw_filled_polygon</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>vertices</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>vertex_count</name></decl></parameter>,

<parameter><decl><type><name>ALLEGRO_COLOR</name></type> <name>color</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_PRIM_VERTEX_CACHE</name></type> <name>cache</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>vertex_counts</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>_al_prim_cache_init_ex</name><argument_list>(<argument><expr><operator>&amp;</operator><name>cache</name></expr></argument>, <argument><expr><name>ALLEGRO_PRIM_VERTEX_CACHE_TRIANGLE</name></expr></argument>, <argument><expr><name>color</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>*</operator><operator>)</operator><name>vertices</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vertex_counts</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>vertex_count</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>vertex_counts</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>al_triangulate_polygon</name><argument_list>(<argument><expr><name>vertices</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>float</name></expr></argument>)</argument_list></sizeof> <operator>*</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>vertex_counts</name></expr></argument>,

<argument><expr><name>polygon_push_triangle_callback</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>cache</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_prim_cache_flush</name><argument_list>(<argument><expr><operator>&amp;</operator><name>cache</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>al_draw_filled_polygon_with_holes</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>vertices</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int</name> <modifier>*</modifier></type><name>vertex_counts</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_COLOR</name></type> <name>color</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_PRIM_VERTEX_CACHE</name></type> <name>cache</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>_al_prim_cache_init_ex</name><argument_list>(<argument><expr><operator>&amp;</operator><name>cache</name></expr></argument>, <argument><expr><name>ALLEGRO_PRIM_VERTEX_CACHE_TRIANGLE</name></expr></argument>, <argument><expr><name>color</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>*</operator><operator>)</operator><name>vertices</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_triangulate_polygon</name><argument_list>(<argument><expr><name>vertices</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>float</name></expr></argument>)</argument_list></sizeof> <operator>*</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>vertex_counts</name></expr></argument>,

<argument><expr><name>polygon_push_triangle_callback</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>cache</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_prim_cache_flush</name><argument_list>(<argument><expr><operator>&amp;</operator><name>cache</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
