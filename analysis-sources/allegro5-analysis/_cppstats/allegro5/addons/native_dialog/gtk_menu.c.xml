<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\addons\native_dialog\gtk_menu.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;gtk/gtk.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro_native_dialog.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_native_dialog.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_native_dialog_cfg.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gtk_dialog.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gtk_xgtk.h"</cpp:file></cpp:include>

<macro><name>ALLEGRO_DEBUG_CHANNEL</name><argument_list>(<argument><literal type="string">"menu"</literal></argument>)</argument_list></macro>

<typedef>typedef <type><name><name>struct</name> <name>ARGS</name></name></type> <name>ARGS</name>;</typedef>

<struct>struct <name>ARGS</name>

<block>{

<decl_stmt><decl><type><name>ARGS_BASE</name></type> <name>base</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>gtk_window</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

}</block>;</struct>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>build_menu</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>gmenu</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>amenu</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>clear_menu_extras</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>extra</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>index</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>extra</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>item</name></expr>)</condition><block type="pseudo"><block_content> 

<expr_stmt><expr><name><name>item</name><operator>-&gt;</operator><name>extra1</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>menu</name><operator>-&gt;</operator><name>extra1</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>bool</name></type> <name>make_menu_item_args</name><parameter_list>(<parameter><decl><type><name>ARGS</name> <modifier>*</modifier></type><name>args</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>_al_gtk_init_args</name><argument_list>(<argument><expr><name>args</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>args</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>args</name><operator>-&gt;</operator><name>item</name></name> <operator>=</operator> <name>item</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>args</name><operator>-&gt;</operator><name>i</name></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>menuitem_response</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>menu_item</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>menu_item</name><operator>-&gt;</operator><name>parent</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>_al_emit_menu_event</name><argument_list>(<argument><expr><name><name>menu_item</name><operator>-&gt;</operator><name>parent</name><operator>-&gt;</operator><name>display</name></name></expr></argument>, <argument><expr><name><name>menu_item</name><operator>-&gt;</operator><name>unique_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>checkbox_on_toggle</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>gtk_check_menu_item_get_active</name><argument_list>(<argument><expr><name><name>item</name><operator>-&gt;</operator><name>extra1</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>item</name><operator>-&gt;</operator><name>flags</name></name> <operator>|=</operator> <name>ALLEGRO_MENU_ITEM_CHECKED</name></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else <block>{<block_content>

<expr_stmt><expr><name><name>item</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;=</operator> <operator>~</operator><name>ALLEGRO_MENU_ITEM_CHECKED</name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>destroy_pixbuf</name><parameter_list>(<parameter><decl><type><name>guchar</name> <modifier>*</modifier></type><name>pixels</name></decl></parameter>, <parameter><decl><type><name>gpointer</name></type> <name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>data</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_free</name><argument_list>(<argument><expr><name>pixels</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>GtkWidget</name> <modifier>*</modifier></type><name>build_menu_item</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>aitem</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>gitem</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>aitem</name><operator>-&gt;</operator><name>caption</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>gitem</name> <operator>=</operator> <call><name>gtk_separator_menu_item_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else <block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_USTR</name> <modifier>*</modifier></type><name>caption</name> <init>= <expr><call><name>al_ustr_dup</name><argument_list>(<argument><expr><name><name>aitem</name><operator>-&gt;</operator><name>caption</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>al_ustr_find_replace_cstr</name><argument_list>(<argument><expr><name>caption</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"_"</literal></expr></argument>, <argument><expr><literal type="string">"\x01\x02"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_ustr_find_replace_cstr</name><argument_list>(<argument><expr><name>caption</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"&amp;"</literal></expr></argument>, <argument><expr><literal type="string">"_"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_ustr_find_replace_cstr</name><argument_list>(<argument><expr><name>caption</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"\x01\x02"</literal></expr></argument>, <argument><expr><literal type="string">"__"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>aitem</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>ALLEGRO_MENU_ITEM_CHECKBOX</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>gitem</name> <operator>=</operator> <call><name>gtk_check_menu_item_new_with_mnemonic</name><argument_list>(<argument><expr><call><name>al_cstr</name><argument_list>(<argument><expr><name>caption</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_check_menu_item_set_active</name><argument_list>(<argument><expr><call><name>GTK_CHECK_MENU_ITEM</name><argument_list>(<argument><expr><name>gitem</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>aitem</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>ALLEGRO_MENU_ITEM_CHECKED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>g_signal_connect_swapped</name> <argument_list>(<argument><expr><name>gitem</name></expr></argument>, <argument><expr><literal type="string">"toggled"</literal></expr></argument>, <argument><expr><call><name>G_CALLBACK</name><argument_list>(<argument><expr><name>checkbox_on_toggle</name></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><operator>(</operator><name>gpointer</name><operator>)</operator> <name>aitem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else <block>{<block_content>

<expr_stmt><expr><name>gitem</name> <operator>=</operator> <call><name>gtk_image_menu_item_new_with_mnemonic</name><argument_list>(<argument><expr><call><name>al_cstr</name><argument_list>(<argument><expr><name>caption</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>aitem</name><operator>-&gt;</operator><name>icon</name></name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>w</name> <init>= <expr><call><name>al_get_bitmap_width</name><argument_list>(<argument><expr><name><name>aitem</name><operator>-&gt;</operator><name>icon</name></name></expr></argument>)</argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name>h</name> <init>= <expr><call><name>al_get_bitmap_height</name><argument_list>(<argument><expr><name><name>aitem</name><operator>-&gt;</operator><name>icon</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>stride</name> <init>= <expr><name>w</name> <operator>*</operator> <literal type="number">4</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>, <decl><type ref="prev"/><name>y</name></decl>, <decl><type ref="prev"/><name>i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GdkPixbuf</name> <modifier>*</modifier></type><name>pixbuf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>data</name> <init>= <expr><call><name>al_malloc</name><argument_list>(<argument><expr><name>stride</name> <operator>*</operator> <name>h</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>data</name></expr>)</condition> <block>{<block_content>

<for>for <control>(<init><expr><name>y</name> <operator>=</operator> <literal type="number">0</literal></expr><operator>,</operator> <expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>y</name> <operator>&lt;</operator> <name>h</name></expr>;</condition> <incr><expr><operator>++</operator><name>y</name></expr></incr>)</control> <block>{<block_content>

<for>for <control>(<init><expr><name>x</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>x</name> <operator>&lt;</operator> <name>w</name></expr>;</condition> <incr><expr><operator>++</operator><name>x</name></expr><operator>,</operator> <expr><name>i</name> <operator>+=</operator> <literal type="number">4</literal></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>al_unmap_rgba</name><argument_list>(<argument><expr><call><name>al_get_pixel</name><argument_list>(<argument><expr><name><name>aitem</name><operator>-&gt;</operator><name>icon</name></name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>y</name></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>data</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>data</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>data</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>data</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name></expr></argument>

)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></for>

<expr_stmt><expr><name>pixbuf</name> <operator>=</operator> <call><name>gdk_pixbuf_new_from_data</name> <argument_list>(<argument><expr><name>data</name></expr></argument>, <argument><expr><name>GDK_COLORSPACE_RGB</name></expr></argument>, <argument><expr><name>TRUE</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>,

<argument><expr><name>w</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>destroy_pixbuf</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>aitem</name><operator>-&gt;</operator><name>extra2</name></name> <operator>=</operator> <call><name>gtk_image_new_from_pixbuf</name><argument_list>(<argument><expr><name>pixbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_image_menu_item_set_image</name><argument_list>(<argument><expr><call><name>GTK_IMAGE_MENU_ITEM</name><argument_list>(<argument><expr><name>gitem</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>aitem</name><operator>-&gt;</operator><name>extra2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>g_object_unref</name><argument_list>(<argument><expr><name>pixbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>al_ustr_free</name><argument_list>(<argument><expr><name>caption</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_widget_set_sensitive</name><argument_list>(<argument><expr><name>gitem</name></expr></argument>, <argument><expr><operator>!</operator><operator>(</operator><name><name>aitem</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>ALLEGRO_MENU_ITEM_DISABLED</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>aitem</name><operator>-&gt;</operator><name>extra1</name></name> <operator>=</operator> <name>gitem</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>aitem</name><operator>-&gt;</operator><name>popup</name></name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>gsubmenu</name> <init>= <expr><call><name>gtk_menu_new</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>build_menu</name><argument_list>(<argument><expr><name>gsubmenu</name></expr></argument>, <argument><expr><name><name>aitem</name><operator>-&gt;</operator><name>popup</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>aitem</name><operator>-&gt;</operator><name>popup</name><operator>-&gt;</operator><name>extra1</name></name> <operator>=</operator> <name>gsubmenu</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_widget_show</name><argument_list>(<argument><expr><name>gsubmenu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_menu_item_set_submenu</name><argument_list>(<argument><expr><call><name>GTK_MENU_ITEM</name><argument_list>(<argument><expr><name>gitem</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>gsubmenu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if <condition>(<expr><name><name>aitem</name><operator>-&gt;</operator><name>id</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>g_signal_connect_swapped</name> <argument_list>(<argument><expr><name>gitem</name></expr></argument>, <argument><expr><literal type="string">"activate"</literal></expr></argument>,

<argument><expr><call><name>G_CALLBACK</name><argument_list>(<argument><expr><name>menuitem_response</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>(</operator><name>gpointer</name><operator>)</operator> <name>aitem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>gtk_widget_show</name><argument_list>(<argument><expr><name>gitem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>gitem</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>build_menu</name><parameter_list>(<parameter><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>gmenu</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>amenu</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>_al_vector_size</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>amenu</name><operator>-&gt;</operator><name>items</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>aitem</name> <init>= <expr><operator>*</operator> <operator>(</operator><name>ALLEGRO_MENU_ITEM</name> <operator>*</operator><operator>*</operator><operator>)</operator> <call><name>_al_vector_ref</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>amenu</name><operator>-&gt;</operator><name>items</name></name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>gitem</name> <init>= <expr><call><name>build_menu_item</name><argument_list>(<argument><expr><name>aitem</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>gtk_menu_shell_append</name><argument_list>(<argument><expr><call><name>GTK_MENU_SHELL</name><argument_list>(<argument><expr><name>gmenu</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>gitem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>_al_init_menu</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>menu</name></expr>;</expr_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>_al_init_popup_menu</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>_al_init_menu</name><argument_list>(<argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>gboolean</name></type> <name>do_destroy_menu</name><parameter_list>(<parameter><decl><type><name>gpointer</name></type> <name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ARGS</name> <modifier>*</modifier></type><name>args</name> <init>= <expr><call><name>_al_gtk_lock_args</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>gtk_widget_destroy</name><argument_list>(<argument><expr><name><name>args</name><operator>-&gt;</operator><name>menu</name><operator>-&gt;</operator><name>extra1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>args</name><operator>-&gt;</operator><name>menu</name><operator>-&gt;</operator><name>extra1</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<return>return <expr><call><name>_al_gtk_release_args</name><argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>_al_destroy_menu</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ARGS</name></type> <name>args</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>menu</name><operator>-&gt;</operator><name>extra1</name></name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>true</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>_al_gtk_init_args</name><argument_list>(<argument><expr><operator>&amp;</operator><name>args</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>args</name><operator>.</operator><name>menu</name></name> <operator>=</operator> <name>menu</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_gtk_wait_for_args</name><argument_list>(<argument><expr><name>do_destroy_menu</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_walk_over_menu</name><argument_list>(<argument><expr><name>menu</name></expr></argument>, <argument><expr><name>clear_menu_extras</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>gboolean</name></type> <name>do_insert_menu_item_at</name><parameter_list>(<parameter><decl><type><name>gpointer</name></type> <name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ARGS</name> <modifier>*</modifier></type><name>args</name> <init>= <expr><call><name>_al_gtk_lock_args</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>args</name><operator>-&gt;</operator><name>item</name><operator>-&gt;</operator><name>extra1</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>args</name><operator>-&gt;</operator><name>item</name><operator>-&gt;</operator><name>extra1</name></name> <operator>=</operator> <call><name>build_menu_item</name><argument_list>(<argument><expr><name><name>args</name><operator>-&gt;</operator><name>item</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>gtk_menu_shell_insert</name><argument_list>(<argument><expr><call><name>GTK_MENU_SHELL</name><argument_list>(<argument><expr><name><name>args</name><operator>-&gt;</operator><name>item</name><operator>-&gt;</operator><name>parent</name><operator>-&gt;</operator><name>extra1</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>args</name><operator>-&gt;</operator><name>item</name><operator>-&gt;</operator><name>extra1</name></name></expr></argument>, <argument><expr><name><name>args</name><operator>-&gt;</operator><name>i</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>_al_gtk_release_args</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>_al_insert_menu_item_at</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>parent</name><operator>-&gt;</operator><name>extra1</name></name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>ARGS</name></type> <name>args</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>_al_gtk_init_args</name><argument_list>(<argument><expr><operator>&amp;</operator><name>args</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>args</name><operator>.</operator><name>item</name></name> <operator>=</operator> <name>item</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>args</name><operator>.</operator><name>i</name></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_gtk_wait_for_args</name><argument_list>(<argument><expr><name>do_insert_menu_item_at</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>gboolean</name></type> <name>do_destroy_menu_item_at</name><parameter_list>(<parameter><decl><type><name>gpointer</name></type> <name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ARGS</name> <modifier>*</modifier></type><name>args</name> <init>= <expr><call><name>_al_gtk_lock_args</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>gtk_widget_destroy</name><argument_list>(<argument><expr><call><name>GTK_WIDGET</name><argument_list>(<argument><expr><name><name>args</name><operator>-&gt;</operator><name>item</name><operator>-&gt;</operator><name>extra1</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>args</name><operator>-&gt;</operator><name>item</name><operator>-&gt;</operator><name>extra1</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<return>return <expr><call><name>_al_gtk_release_args</name><argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>_al_destroy_menu_item_at</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>extra1</name></name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>ARGS</name></type> <name>args</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>make_menu_item_args</name><argument_list>(<argument><expr><operator>&amp;</operator><name>args</name></expr></argument>, <argument><expr><name>item</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>_al_gtk_wait_for_args</name><argument_list>(<argument><expr><name>do_destroy_menu_item_at</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>popup</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>_al_walk_over_menu</name><argument_list>(<argument><expr><name><name>item</name><operator>-&gt;</operator><name>popup</name></name></expr></argument>, <argument><expr><name>clear_menu_extras</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>gboolean</name></type> <name>do_update_menu_item_at</name><parameter_list>(<parameter><decl><type><name>gpointer</name></type> <name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ARGS</name> <modifier>*</modifier></type><name>args</name> <init>= <expr><call><name>_al_gtk_lock_args</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>gitem</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>gtk_widget_destroy</name><argument_list>(<argument><expr><name><name>args</name><operator>-&gt;</operator><name>item</name><operator>-&gt;</operator><name>extra1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>args</name><operator>-&gt;</operator><name>item</name><operator>-&gt;</operator><name>extra1</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name>gitem</name> <operator>=</operator> <call><name>build_menu_item</name><argument_list>(<argument><expr><name><name>args</name><operator>-&gt;</operator><name>item</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_menu_shell_insert</name><argument_list>(<argument><expr><call><name>GTK_MENU_SHELL</name><argument_list>(<argument><expr><name><name>args</name><operator>-&gt;</operator><name>item</name><operator>-&gt;</operator><name>parent</name><operator>-&gt;</operator><name>extra1</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>gitem</name></expr></argument>, <argument><expr><name><name>args</name><operator>-&gt;</operator><name>i</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>_al_gtk_release_args</name><argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>_al_update_menu_item_at</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU_ITEM</name> <modifier>*</modifier></type><name>item</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>item</name><operator>-&gt;</operator><name>extra1</name></name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>ARGS</name></type> <name>args</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>make_menu_item_args</name><argument_list>(<argument><expr><operator>&amp;</operator><name>args</name></expr></argument>, <argument><expr><name>item</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>_al_gtk_wait_for_args</name><argument_list>(<argument><expr><name>do_update_menu_item_at</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>gboolean</name></type> <name>do_show_display_menu</name><parameter_list>(<parameter><decl><type><name>gpointer</name></type> <name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ARGS</name> <modifier>*</modifier></type><name>args</name> <init>= <expr><call><name>_al_gtk_lock_args</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>args</name><operator>-&gt;</operator><name>menu</name><operator>-&gt;</operator><name>extra1</name></name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>menu_bar</name> <init>= <expr><call><name>gtk_menu_bar_new</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>build_menu</name><argument_list>(<argument><expr><name>menu_bar</name></expr></argument>, <argument><expr><name><name>args</name><operator>-&gt;</operator><name>menu</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>vbox</name> <init>= <expr><call><name>gtk_bin_get_child</name><argument_list>(<argument><expr><call><name>GTK_BIN</name><argument_list>(<argument><expr><name><name>args</name><operator>-&gt;</operator><name>gtk_window</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>gtk_box_pack_start</name><argument_list>(<argument><expr><call><name>GTK_BOX</name><argument_list>(<argument><expr><name>vbox</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>menu_bar</name></expr></argument>, <argument><expr><name>FALSE</name></expr></argument>, <argument><expr><name>FALSE</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_widget_show</name><argument_list>(<argument><expr><name>menu_bar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>args</name><operator>-&gt;</operator><name>menu</name><operator>-&gt;</operator><name>extra1</name></name> <operator>=</operator> <name>menu_bar</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>gtk_widget_show</name><argument_list>(<argument><expr><call><name>gtk_widget_get_parent</name><argument_list>(<argument><expr><name><name>args</name><operator>-&gt;</operator><name>menu</name><operator>-&gt;</operator><name>extra1</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>_al_gtk_release_args</name><argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>_al_show_display_menu</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>gtk_window</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ARGS</name></type> <name>args</name></decl>;</decl_stmt>

<expr_stmt><expr><name>gtk_window</name> <operator>=</operator> <call><name>_al_gtk_get_window</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>gtk_window</name></expr>)</condition> <block>{<block_content>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>_al_gtk_init_args</name><argument_list>(<argument><expr><operator>&amp;</operator><name>args</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>args</name><operator>.</operator><name>gtk_window</name></name> <operator>=</operator> <name>gtk_window</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>args</name><operator>.</operator><name>menu</name></name> <operator>=</operator> <name>menu</name></expr>;</expr_stmt>

<return>return <expr><call><name>_al_gtk_wait_for_args</name><argument_list>(<argument><expr><name>do_show_display_menu</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>args</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>gboolean</name></type> <name>do_hide_display_menu</name><parameter_list>(<parameter><decl><type><name>gpointer</name></type> <name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ARGS</name> <modifier>*</modifier></type><name>args</name> <init>= <expr><call><name>_al_gtk_lock_args</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>gtk_widget_destroy</name><argument_list>(<argument><expr><call><name>GTK_WIDGET</name><argument_list>(<argument><expr><name><name>args</name><operator>-&gt;</operator><name>menu</name><operator>-&gt;</operator><name>extra1</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>args</name><operator>-&gt;</operator><name>menu</name><operator>-&gt;</operator><name>extra1</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<return>return <expr><call><name>_al_gtk_release_args</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>_al_hide_display_menu</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>gtk_window</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ARGS</name></type> <name>args</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>gtk_window</name> <operator>=</operator> <call><name>_al_gtk_get_window</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>_al_gtk_init_args</name><argument_list>(<argument><expr><operator>&amp;</operator><name>args</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>false</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>args</name><operator>.</operator><name>gtk_window</name></name> <operator>=</operator> <name>gtk_window</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>args</name><operator>.</operator><name>menu</name></name> <operator>=</operator> <name>menu</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_gtk_wait_for_args</name><argument_list>(<argument><expr><name>do_hide_display_menu</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_walk_over_menu</name><argument_list>(<argument><expr><name>menu</name></expr></argument>, <argument><expr><name>clear_menu_extras</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>true</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>popop_on_hide</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <name>menu</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>position_func</name><parameter_list>(<parameter><decl><type><name>GtkMenu</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>, <parameter><decl><type><name>gint</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>gint</name> <modifier>*</modifier></type><name>y</name></decl></parameter>, <parameter><decl><type><name>gboolean</name> <modifier>*</modifier></type><name>push_in</name></decl></parameter>, <parameter><decl><type><name>gpointer</name></type> <name>user_data</name></decl></parameter>)</parameter_list> <block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>menu</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>x</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>y</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>push_in</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><operator>(</operator><operator>(</operator><name>bool</name><operator>*</operator><operator>)</operator><name>user_data</name><operator>)</operator> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>gboolean</name></type> <name>do_show_popup_menu</name><parameter_list>(<parameter><decl><type><name>gpointer</name></type> <name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ARGS</name> <modifier>*</modifier></type><name>args</name> <init>= <expr><operator>(</operator><name>ARGS</name> <operator>*</operator><operator>)</operator> <name>data</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>_al_gtk_lock_args</name><argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>args</name><operator>-&gt;</operator><name>menu</name><operator>-&gt;</operator><name>extra1</name></name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>GtkWidget</name> <modifier>*</modifier></type><name>menu</name> <init>= <expr><call><name>gtk_menu_new</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>build_menu</name><argument_list>(<argument><expr><name>menu</name></expr></argument>, <argument><expr><name><name>args</name><operator>-&gt;</operator><name>menu</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>gtk_widget_show</name><argument_list>(<argument><expr><name>menu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>args</name><operator>-&gt;</operator><name>menu</name><operator>-&gt;</operator><name>extra1</name></name> <operator>=</operator> <name>menu</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>g_signal_connect_swapped</name> <argument_list>(<argument><expr><name>menu</name></expr></argument>, <argument><expr><literal type="string">"hide"</literal></expr></argument>,

<argument><expr><call><name>G_CALLBACK</name><argument_list>(<argument><expr><name>popop_on_hide</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>(</operator><name>gpointer</name><operator>)</operator> <name><name>args</name><operator>-&gt;</operator><name>menu</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>position_called</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>gtk_menu_popup</name><argument_list>(<argument><expr><name><name>args</name><operator>-&gt;</operator><name>menu</name><operator>-&gt;</operator><name>extra1</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>position_func</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>position_called</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,

<argument><expr><call><name>gtk_get_current_event_time</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>position_called</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>ALLEGRO_DEBUG</name><argument_list>(<argument><expr><literal type="string">"Position canary not called, most likely the menu didn't show "</literal>

<literal type="string">"up due to outstanding mouse events.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>args</name><operator>-&gt;</operator><name>base</name><operator>.</operator><name>response</name></name> <operator>=</operator> <name>position_called</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>_al_gtk_release_args</name><argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>FALSE</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>bool</name></type> <name>_al_show_popup_menu</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_MENU</name> <modifier>*</modifier></type><name>menu</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ARGS</name></type> <name>args</name></decl>;</decl_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>display</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>_al_gtk_init_args</name><argument_list>(<argument><expr><operator>&amp;</operator><name>args</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>args</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<return>return <expr><name>false</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>args</name><operator>.</operator><name>gtk_window</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>args</name><operator>.</operator><name>menu</name></name> <operator>=</operator> <name>menu</name></expr>;</expr_stmt>

<return>return <expr><call><name>_al_gtk_wait_for_args</name><argument_list>(<argument><expr><name>do_show_popup_menu</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>args</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>_al_get_menu_display_height</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

</unit>
