<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\include\allegro5\display.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/bitmap.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/color.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/events.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<enum>enum <block>{

<decl><name>ALLEGRO_WINDOWED</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">0</literal></expr></init></decl>,

<decl><name>ALLEGRO_FULLSCREEN</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></init></decl>,

<decl><name>ALLEGRO_OPENGL</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">2</literal></expr></init></decl>,

<decl><name>ALLEGRO_DIRECT3D_INTERNAL</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">3</literal></expr></init></decl>,

<decl><name>ALLEGRO_RESIZABLE</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">4</literal></expr></init></decl>,

<decl><name>ALLEGRO_FRAMELESS</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">5</literal></expr></init></decl>,

<decl><name>ALLEGRO_NOFRAME</name> <init>= <expr><name>ALLEGRO_FRAMELESS</name></expr></init></decl>, 

<decl><name>ALLEGRO_GENERATE_EXPOSE_EVENTS</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal></expr></init></decl>,

<decl><name>ALLEGRO_OPENGL_3_0</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">7</literal></expr></init></decl>,

<decl><name>ALLEGRO_OPENGL_FORWARD_COMPATIBLE</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">8</literal></expr></init></decl>,

<decl><name>ALLEGRO_FULLSCREEN_WINDOW</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">9</literal></expr></init></decl>,

<decl><name>ALLEGRO_MINIMIZED</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">10</literal></expr></init></decl>,

<decl><name>ALLEGRO_PROGRAMMABLE_PIPELINE</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">11</literal></expr></init></decl>,

<decl><name>ALLEGRO_GTK_TOPLEVEL_INTERNAL</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">12</literal></expr></init></decl>,

<decl><name>ALLEGRO_MAXIMIZED</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">13</literal></expr></init></decl>,

<decl><name>ALLEGRO_OPENGL_ES_PROFILE</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">14</literal></expr></init></decl>,

}</block>;</enum>

<enum>enum <name>ALLEGRO_DISPLAY_OPTIONS</name> <block>{

<decl><name>ALLEGRO_RED_SIZE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>ALLEGRO_GREEN_SIZE</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>ALLEGRO_BLUE_SIZE</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>ALLEGRO_ALPHA_SIZE</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,

<decl><name>ALLEGRO_RED_SHIFT</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

<decl><name>ALLEGRO_GREEN_SHIFT</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,

<decl><name>ALLEGRO_BLUE_SHIFT</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,

<decl><name>ALLEGRO_ALPHA_SHIFT</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>,

<decl><name>ALLEGRO_ACC_RED_SIZE</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,

<decl><name>ALLEGRO_ACC_GREEN_SIZE</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>,

<decl><name>ALLEGRO_ACC_BLUE_SIZE</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>,

<decl><name>ALLEGRO_ACC_ALPHA_SIZE</name> <init>= <expr><literal type="number">11</literal></expr></init></decl>,

<decl><name>ALLEGRO_STEREO</name> <init>= <expr><literal type="number">12</literal></expr></init></decl>,

<decl><name>ALLEGRO_AUX_BUFFERS</name> <init>= <expr><literal type="number">13</literal></expr></init></decl>,

<decl><name>ALLEGRO_COLOR_SIZE</name> <init>= <expr><literal type="number">14</literal></expr></init></decl>,

<decl><name>ALLEGRO_DEPTH_SIZE</name> <init>= <expr><literal type="number">15</literal></expr></init></decl>,

<decl><name>ALLEGRO_STENCIL_SIZE</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>,

<decl><name>ALLEGRO_SAMPLE_BUFFERS</name> <init>= <expr><literal type="number">17</literal></expr></init></decl>,

<decl><name>ALLEGRO_SAMPLES</name> <init>= <expr><literal type="number">18</literal></expr></init></decl>,

<decl><name>ALLEGRO_RENDER_METHOD</name> <init>= <expr><literal type="number">19</literal></expr></init></decl>,

<decl><name>ALLEGRO_FLOAT_COLOR</name> <init>= <expr><literal type="number">20</literal></expr></init></decl>,

<decl><name>ALLEGRO_FLOAT_DEPTH</name> <init>= <expr><literal type="number">21</literal></expr></init></decl>,

<decl><name>ALLEGRO_SINGLE_BUFFER</name> <init>= <expr><literal type="number">22</literal></expr></init></decl>,

<decl><name>ALLEGRO_SWAP_METHOD</name> <init>= <expr><literal type="number">23</literal></expr></init></decl>,

<decl><name>ALLEGRO_COMPATIBLE_DISPLAY</name> <init>= <expr><literal type="number">24</literal></expr></init></decl>,

<decl><name>ALLEGRO_UPDATE_DISPLAY_REGION</name> <init>= <expr><literal type="number">25</literal></expr></init></decl>,

<decl><name>ALLEGRO_VSYNC</name> <init>= <expr><literal type="number">26</literal></expr></init></decl>,

<decl><name>ALLEGRO_MAX_BITMAP_SIZE</name> <init>= <expr><literal type="number">27</literal></expr></init></decl>,

<decl><name>ALLEGRO_SUPPORT_NPOT_BITMAP</name> <init>= <expr><literal type="number">28</literal></expr></init></decl>,

<decl><name>ALLEGRO_CAN_DRAW_INTO_BITMAP</name> <init>= <expr><literal type="number">29</literal></expr></init></decl>,

<decl><name>ALLEGRO_SUPPORT_SEPARATE_ALPHA</name> <init>= <expr><literal type="number">30</literal></expr></init></decl>,

<decl><name>ALLEGRO_AUTO_CONVERT_BITMAPS</name> <init>= <expr><literal type="number">31</literal></expr></init></decl>,

<decl><name>ALLEGRO_SUPPORTED_ORIENTATIONS</name> <init>= <expr><literal type="number">32</literal></expr></init></decl>,

<decl><name>ALLEGRO_OPENGL_MAJOR_VERSION</name> <init>= <expr><literal type="number">33</literal></expr></init></decl>,

<decl><name>ALLEGRO_OPENGL_MINOR_VERSION</name> <init>= <expr><literal type="number">34</literal></expr></init></decl>,

<decl><name>ALLEGRO_DISPLAY_OPTIONS_COUNT</name></decl>

}</block>;</enum>

<enum>enum

<block>{

<decl><name>ALLEGRO_DONTCARE</name></decl>,

<decl><name>ALLEGRO_REQUIRE</name></decl>,

<decl><name>ALLEGRO_SUGGEST</name></decl>

}</block>;</enum>

<enum>enum <name>ALLEGRO_DISPLAY_ORIENTATION</name>

<block>{

<decl><name>ALLEGRO_DISPLAY_ORIENTATION_UNKNOWN</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>ALLEGRO_DISPLAY_ORIENTATION_0_DEGREES</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>ALLEGRO_DISPLAY_ORIENTATION_90_DEGREES</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>ALLEGRO_DISPLAY_ORIENTATION_180_DEGREES</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

<decl><name>ALLEGRO_DISPLAY_ORIENTATION_270_DEGREES</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,

<decl><name>ALLEGRO_DISPLAY_ORIENTATION_PORTRAIT</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,

<decl><name>ALLEGRO_DISPLAY_ORIENTATION_LANDSCAPE</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>,

<decl><name>ALLEGRO_DISPLAY_ORIENTATION_ALL</name> <init>= <expr><literal type="number">15</literal></expr></init></decl>,

<decl><name>ALLEGRO_DISPLAY_ORIENTATION_FACE_UP</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>,

<decl><name>ALLEGRO_DISPLAY_ORIENTATION_FACE_DOWN</name> <init>= <expr><literal type="number">32</literal></expr></init></decl>

}</block>;</enum>

<enum>enum

<block>{

<decl><name>_ALLEGRO_PRIM_MAX_USER_ATTR</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>

}</block>;</enum>

<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_DISPLAY</name></name></type> <name>ALLEGRO_DISPLAY</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_NEW_WINDOW_TITLE_MAX_SIZE</name></cpp:macro> <cpp:value>255</cpp:value></cpp:define>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_set_new_display_refresh_rate</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name> <name>refresh_rate</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_set_new_display_flags</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_new_display_refresh_rate</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_new_display_flags</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_set_new_window_title</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><name>title</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_get_new_window_title</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_display_width</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_display_height</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_display_format</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_display_refresh_rate</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_display_flags</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_display_orientation</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name><operator>*</operator> <name>display</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_set_display_flag</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>,</operator> <name>int</name> <name>flag</name><operator>,</operator> <name>bool</name> <name>onoff</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_DISPLAY</name><operator>*</operator></expr></argument>, <argument><expr><name>al_create_display</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name> <name>w</name><operator>,</operator> <name>int</name> <name>h</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_destroy_display</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_DISPLAY</name><operator>*</operator></expr></argument>, <argument><expr><name>al_get_current_display</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_set_target_bitmap</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_BITMAP</name> <operator>*</operator><name>bitmap</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_set_target_backbuffer</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_BITMAP</name><operator>*</operator></expr></argument>, <argument><expr><name>al_get_backbuffer</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_BITMAP</name><operator>*</operator></expr></argument>, <argument><expr><name>al_get_target_bitmap</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_acknowledge_resize</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_resize_display</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>,</operator> <name>int</name> <name>width</name><operator>,</operator> <name>int</name> <name>height</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_flip_display</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_update_display_region</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name> <name>x</name><operator>,</operator> <name>int</name> <name>y</name><operator>,</operator> <name>int</name> <name>width</name><operator>,</operator> <name>int</name> <name>height</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_is_compatible_bitmap</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_BITMAP</name> <operator>*</operator><name>bitmap</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_wait_for_vsync</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_EVENT_SOURCE</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_get_display_event_source</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_set_display_icon</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>,</operator> <name>ALLEGRO_BITMAP</name> <operator>*</operator><name>icon</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_set_display_icons</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>,</operator> <name>int</name> <name>num_icons</name><operator>,</operator> <name>ALLEGRO_BITMAP</name> <operator>*</operator><name><name>icons</name><index>[]</index></name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_new_display_adapter</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_set_new_display_adapter</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name> <name>adapter</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_set_new_window_position</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name> <name>x</name><operator>,</operator> <name>int</name> <name>y</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_get_new_window_position</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name> <operator>*</operator><name>x</name><operator>,</operator> <name>int</name> <operator>*</operator><name>y</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_set_window_position</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>,</operator> <name>int</name> <name>x</name><operator>,</operator> <name>int</name> <name>y</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_get_window_position</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>,</operator> <name>int</name> <operator>*</operator><name>x</name><operator>,</operator> <name>int</name> <operator>*</operator><name>y</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_set_window_constraints</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>,</operator> <name>int</name> <name>min_w</name><operator>,</operator> <name>int</name> <name>min_h</name><operator>,</operator> <name>int</name> <name>max_w</name><operator>,</operator> <name>int</name> <name>max_h</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_get_window_constraints</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>,</operator> <name>int</name> <operator>*</operator><name>min_w</name><operator>,</operator> <name>int</name> <operator>*</operator><name>min_h</name><operator>,</operator> <name>int</name> <operator>*</operator><name>max_w</name><operator>,</operator> <name>int</name> <operator>*</operator><name>max_h</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_apply_window_constraints</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>,</operator> <name>bool</name> <name>onoff</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_set_window_title</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>,</operator> <specifier>const</specifier> <name>char</name> <operator>*</operator><name>title</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_set_new_display_option</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name> <name>option</name><operator>,</operator> <name>int</name> <name>value</name><operator>,</operator> <name>int</name> <name>importance</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_new_display_option</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name> <name>option</name><operator>,</operator> <name>int</name> <operator>*</operator><name>importance</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_reset_new_display_options</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_set_display_option</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>,</operator> <name>int</name> <name>option</name><operator>,</operator> <name>int</name> <name>value</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_display_option</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>,</operator> <name>int</name> <name>option</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_hold_bitmap_drawing</name></expr></argument>, <argument><expr><operator>(</operator><name>bool</name> <name>hold</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_is_bitmap_drawing_held</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_acknowledge_drawing_halt</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_acknowledge_drawing_resume</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_UNSTABLE</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_INTERNAL_UNSTABLE</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_SRC</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_backup_dirty_bitmaps</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
