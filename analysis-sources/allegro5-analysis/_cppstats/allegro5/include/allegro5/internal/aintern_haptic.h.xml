<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\include\allegro5\internal\aintern_haptic.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/haptic.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_driver.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_events.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal>

<block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_INTERNAL_UNSTABLE</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_SRC</name></expr></argument>)</argument_list></call></expr></cpp:if>

<typedef>typedef <type><struct>struct <name>ALLEGRO_HAPTIC_DRIVER</name>

<block>{

<decl_stmt><decl><type><name>int</name></type> <name>hapdrv_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>hapdrv_name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>hapdrv_desc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>hapdrv_ascii_name</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>init_haptic</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>exit_haptic</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>is_mouse_haptic</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_MOUSE</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>is_joystick_haptic</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_JOYSTICK</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>is_keyboard_haptic</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_KEYBOARD</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>is_display_haptic</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>is_touch_input_haptic</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_TOUCH_INPUT</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>ALLEGRO_HAPTIC</name> <operator>*</operator></expr></argument>, <argument><expr><name>get_from_mouse</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_MOUSE</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>ALLEGRO_HAPTIC</name> <operator>*</operator></expr></argument>, <argument><expr><name>get_from_joystick</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_JOYSTICK</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>ALLEGRO_HAPTIC</name> <operator>*</operator></expr></argument>, <argument><expr><name>get_from_keyboard</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_KEYBOARD</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>ALLEGRO_HAPTIC</name> <operator>*</operator></expr></argument>, <argument><expr><name>get_from_display</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>ALLEGRO_HAPTIC</name> <operator>*</operator></expr></argument>, <argument><expr><name>get_from_touch_input</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_TOUCH_INPUT</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>get_active</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_HAPTIC</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>get_capabilities</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_HAPTIC</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>double</name></expr></argument>, <argument><expr><name>get_gain</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_HAPTIC</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>set_gain</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_HAPTIC</name> <operator>*</operator><operator>,</operator> <name>double</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>get_max_effects</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_HAPTIC</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>is_effect_ok</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_HAPTIC</name> <operator>*</operator><operator>,</operator> <name>ALLEGRO_HAPTIC_EFFECT</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>upload_effect</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_HAPTIC</name> <operator>*</operator><operator>,</operator> <name>ALLEGRO_HAPTIC_EFFECT</name> <operator>*</operator><operator>,</operator>

<name>ALLEGRO_HAPTIC_EFFECT_ID</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>play_effect</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_HAPTIC_EFFECT_ID</name> <operator>*</operator><operator>,</operator> <name>int</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>stop_effect</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_HAPTIC_EFFECT_ID</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>is_effect_playing</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_HAPTIC_EFFECT_ID</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>release_effect</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_HAPTIC_EFFECT_ID</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>release</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_HAPTIC</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>double</name></expr></argument>, <argument><expr><name>get_autocenter</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_HAPTIC</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_METHOD</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>set_autocenter</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_HAPTIC</name> <operator>*</operator><operator>,</operator> <name>double</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

}</block></struct></type> <name>ALLEGRO_HAPTIC_DRIVER</name>;</typedef>

<enum>enum <name>ALLEGRO_HAPTIC_PARENT</name>

<block>{

<decl><name>_AL_HAPTIC_FROM_JOYSTICK</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,

<decl><name>_AL_HAPTIC_FROM_MOUSE</name></decl>,

<decl><name>_AL_HAPTIC_FROM_KEYBOARD</name></decl>,

<decl><name>_AL_HAPTIC_FROM_DISPLAY</name></decl>,

<decl><name>_AL_HAPTIC_FROM_TOUCH_INPUT</name></decl>

}</block>;</enum>

<struct>struct <name>ALLEGRO_HAPTIC</name>

<block>{

<decl_stmt><decl><type><name><name>enum</name> <name>ALLEGRO_HAPTIC_PARENT</name></name></type> <name>from</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>device</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>gain</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>autocenter</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_HAPTIC_DRIVER</name> <modifier>*</modifier></type><name>driver</name></decl>;</decl_stmt>

}</block>;</struct>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>_AL_DRIVER_INFO</name></type> <name><name>_al_haptic_driver_list</name><index>[]</index></name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_AL_BEGIN_HAPTIC_DRIVER_LIST</name></cpp:macro> <cpp:value>const _AL_DRIVER_INFO _al_haptic_driver_list[] = {</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_AL_END_HAPTIC_DRIVER_LIST</name></cpp:macro> <cpp:value>{ 0, NULL, false } };</cpp:value></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_HAPTIC_DRIVER</name></name></type> <name>ALLEGRO_HAPTIC_DRIVER</name>;</typedef>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
