<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\include\allegro5\internal\aintern_direct3d.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/platform/alplatf.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro_direct3d.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/platform/aintwin.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><struct>struct <name>ALLEGRO_BITMAP_EXTRA_D3D</name>

<block>{

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>texture_w</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>texture_h</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>LPDIRECT3DTEXTURE9</name></type> <name>video_texture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>LPDIRECT3DTEXTURE9</name></type> <name>system_texture</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>system_format</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>initialized</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>is_backbuffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>D3DLOCKED_RECT</name></type> <name>locked_rect</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>ALLEGRO_DISPLAY_D3D</name></name> <modifier>*</modifier></type><name>display</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>IDirect3DSurface9</name> <modifier>*</modifier></type><name>render_target</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>dirty</name></decl>;</decl_stmt>

}</block></struct></type> <name>ALLEGRO_BITMAP_EXTRA_D3D</name>;</typedef>

<typedef>typedef <type><struct>struct <name>ALLEGRO_DISPLAY_D3D</name>

<block>{

<decl_stmt><decl><type><name>ALLEGRO_DISPLAY_WIN</name></type> <name>win_display</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>bool</name></type> <name>es_inited</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>LPDIRECT3DDEVICE9</name></type> <name>device</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>LPDIRECT3DSURFACE9</name></type> <name>render_target</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>do_reset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>reset_done</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>reset_success</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_BITMAP</name></type> <name>backbuffer_bmp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_BITMAP_EXTRA_D3D</name></type> <name>backbuffer_bmp_extra</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_BITMAP</name><modifier>*</modifier></type> <name>target_bitmap</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>device_lost</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>suppress_lost_events</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>faux_fullscreen</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>supports_separate_alpha_blend</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>TCHAR</name> <modifier>*</modifier></type><name>device_name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>format</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>D3DFORMAT</name></type> <name>depth_stencil_format</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>samples</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>single_buffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>vsync</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>blender_state_op</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>blender_state_src</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>blender_state_dst</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>blender_state_alpha_op</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>blender_state_alpha_src</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>blender_state_alpha_dst</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>RECT</name></type> <name>scissor_state</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_CFG_SHADER_HLSL</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>LPD3DXEFFECT</name></type> <name>effect</name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

}</block></struct></type> <name>ALLEGRO_DISPLAY_D3D</name>;</typedef>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>_al_d3d_set_blender</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY_D3D</name> <operator>*</operator><name>disp</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function_decl><type><name>void</name></type> <name>_al_d3d_destroy_bitmap</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_d3d_update_render_state</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_CFG_SHADER_HLSL</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>bool</name></type> <name>_al_hlsl_set_projview_matrix</name><parameter_list>(<parameter><decl><type><name>LPD3DXEFFECT</name></type> <name>effect</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>ALLEGRO_TRANSFORM</name> <modifier>*</modifier></type><name>t</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_CFG_D3DX9</name></expr></argument>)</argument_list></call></expr></cpp:if>
<typedef>typedef <function_decl><type><name>HRESULT</name></type> (<name>WINAPI</name> <modifier>*</modifier><name>_ALLEGRO_D3DXLSFLSPROC</name>)<parameter_list>(<parameter><decl><type><name>LPDIRECT3DSURFACE9</name></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>PALETTEENTRY</name><modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>RECT</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>LPDIRECT3DSURFACE9</name></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>PALETTEENTRY</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>RECT</name><modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><name>DWORD</name></type></decl></parameter>, <parameter><decl><type><name>D3DCOLOR</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>HRESULT</name></type> (<name>WINAPI</name> <modifier>*</modifier><name>_ALLEGRO_D3DXCREATEEFFECTPROC</name>)<parameter_list>(<parameter><decl><type><name>LPDIRECT3DDEVICE9</name></type></decl></parameter>, <parameter><decl><type><name>LPCVOID</name></type></decl></parameter>, <parameter><decl><type><name>UINT</name></type></decl></parameter>,

<parameter><decl><type><name>CONST</name> <name>D3DXMACRO</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>LPD3DXINCLUDE</name></type></decl></parameter>, <parameter><decl><type><name>DWORD</name></type></decl></parameter>, <parameter><decl><type><name>LPD3DXEFFECTPOOL</name></type></decl></parameter>, <parameter><decl><type><name>LPD3DXEFFECT</name><modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><name>LPD3DXBUFFER</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><name>bool</name></type> <name>_al_load_d3dx9_module</name><parameter_list>()</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_unload_d3dx9_module</name><parameter_list>()</parameter_list>;</function_decl>

<decl_stmt><decl><type><specifier>extern</specifier> <name>_ALLEGRO_D3DXLSFLSPROC</name></type> <name>_al_imp_D3DXLoadSurfaceFromSurface</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>_ALLEGRO_D3DXCREATEEFFECTPROC</name></type> <name>_al_imp_D3DXCreateEffect</name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
