<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\include\allegro5\internal\aintern_opengl.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/opengl/gl_ext.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_bitmap.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_display.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<enum>enum <block>{

<decl><name>_ALLEGRO_OPENGL_VERSION_0</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, 

<decl><name>_ALLEGRO_OPENGL_VERSION_1_0</name> <init>= <expr><literal type="number">0x01000000</literal></expr></init></decl>,

<decl><name>_ALLEGRO_OPENGL_VERSION_1_1</name> <init>= <expr><literal type="number">0x01010000</literal></expr></init></decl>,

<decl><name>_ALLEGRO_OPENGL_VERSION_1_2</name> <init>= <expr><literal type="number">0x01020000</literal></expr></init></decl>,

<decl><name>_ALLEGRO_OPENGL_VERSION_1_2_1</name> <init>= <expr><literal type="number">0x01020100</literal></expr></init></decl>,

<decl><name>_ALLEGRO_OPENGL_VERSION_1_3</name> <init>= <expr><literal type="number">0x01030000</literal></expr></init></decl>,

<decl><name>_ALLEGRO_OPENGL_VERSION_1_4</name> <init>= <expr><literal type="number">0x01040000</literal></expr></init></decl>,

<decl><name>_ALLEGRO_OPENGL_VERSION_1_5</name> <init>= <expr><literal type="number">0x01050000</literal></expr></init></decl>,

<decl><name>_ALLEGRO_OPENGL_VERSION_2_0</name> <init>= <expr><literal type="number">0x02000000</literal></expr></init></decl>,

<decl><name>_ALLEGRO_OPENGL_VERSION_2_1</name> <init>= <expr><literal type="number">0x02010000</literal></expr></init></decl>,

<decl><name>_ALLEGRO_OPENGL_VERSION_3_0</name> <init>= <expr><literal type="number">0x03000000</literal></expr></init></decl>,

<decl><name>_ALLEGRO_OPENGL_VERSION_3_1</name> <init>= <expr><literal type="number">0x03010000</literal></expr></init></decl>,

<decl><name>_ALLEGRO_OPENGL_VERSION_3_2</name> <init>= <expr><literal type="number">0x03020000</literal></expr></init></decl>,

<decl><name>_ALLEGRO_OPENGL_VERSION_3_3</name> <init>= <expr><literal type="number">0x03030000</literal></expr></init></decl>,

<decl><name>_ALLEGRO_OPENGL_VERSION_4_0</name> <init>= <expr><literal type="number">0x04000000</literal></expr></init></decl>

}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_MAX_OPENGL_FBOS</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>

<enum>enum <block>{

<decl><name>FBO_INFO_UNUSED</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>FBO_INFO_TRANSIENT</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>, 

<decl><name>FBO_INFO_PERSISTENT</name> <init>= <expr><literal type="number">2</literal></expr></init></decl> 

}</block>;</enum>

<typedef>typedef <type><struct>struct <name>ALLEGRO_FBO_BUFFERS</name>

<block>{

<decl_stmt><decl><type><name>GLuint</name></type> <name>depth_buffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>dw</name></decl>, <name>dh</name>, <name>depth</name>;</decl_stmt>

<decl_stmt><decl><type><name>GLuint</name></type> <name>multisample_buffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>mw</name></decl>, <name>mh</name>, <name>samples</name>;</decl_stmt>

}</block></struct></type> <name>ALLEGRO_FBO_BUFFERS</name>;</typedef>

<typedef>typedef <type><struct>struct <name>ALLEGRO_FBO_INFO</name>

<block>{

<decl_stmt><decl><type><name>int</name></type> <name>fbo_state</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLuint</name></type> <name>fbo</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_FBO_BUFFERS</name></type> <name>buffers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>owner</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>last_use_time</name></decl>;</decl_stmt>

}</block></struct></type> <name>ALLEGRO_FBO_INFO</name>;</typedef>

<typedef>typedef <type><struct>struct <name>ALLEGRO_BITMAP_EXTRA_OPENGL</name>

<block>{

<decl_stmt><decl><type><name>int</name></type> <name>true_w</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>true_h</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLuint</name></type> <name>texture</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>ALLEGRO_FBO_INFO</name> <modifier>*</modifier></type><name>fbo_info</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>lock_buffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>lock_proxy</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>left</name></decl>, <name>top</name>, <name>right</name>, <name>bottom</name>;</decl_stmt> 

<decl_stmt><decl><type><name>bool</name></type> <name>is_backbuffer</name></decl>;</decl_stmt> 

}</block></struct></type> <name>ALLEGRO_BITMAP_EXTRA_OPENGL</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OPENGL_INFO</name> <block>{

<decl_stmt><decl><type><name>uint32_t</name></type> <name>version</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>max_texture_size</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>is_voodoo3_and_under</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>is_voodoo</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>is_matrox_g200</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>is_ati_rage_pro</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>is_ati_radeon_7000</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>is_ati_r200_chip</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>is_mesa_driver</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>is_intel_hd_graphics_3000</name></decl>;</decl_stmt>

}</block></struct></type> <name>OPENGL_INFO</name>;</typedef>

<typedef>typedef <type><struct>struct <name>ALLEGRO_OGL_VARLOCS</name>

<block>{

<decl_stmt><decl><type><name>GLint</name></type> <name>pos_loc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLint</name></type> <name>color_loc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLint</name></type> <name>projview_matrix_loc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLint</name></type> <name>texcoord_loc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLint</name></type> <name>use_tex_loc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLint</name></type> <name>tex_loc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLint</name></type> <name>use_tex_matrix_loc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLint</name></type> <name>tex_matrix_loc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLint</name></type> <name>alpha_test_loc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLint</name></type> <name>alpha_func_loc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLint</name></type> <name>alpha_test_val_loc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLint</name></type> <name><name>user_attr_loc</name><index>[<expr><name>_ALLEGRO_PRIM_MAX_USER_ATTR</name></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>ALLEGRO_OGL_VARLOCS</name>;</typedef>

<typedef>typedef <type><struct>struct <name>ALLEGRO_OGL_EXTRAS</name>

<block>{

<decl_stmt><decl><type><name>ALLEGRO_OGL_EXT_LIST</name> <modifier>*</modifier></type><name>extension_list</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_OGL_EXT_API</name> <modifier>*</modifier></type><name>extension_api</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OPENGL_INFO</name></type> <name>ogl_info</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>opengl_target</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>backbuffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>is_shared</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_FBO_INFO</name></type> <name><name>fbos</name><index>[<expr><name>ALLEGRO_MAX_OPENGL_FBOS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLuint</name></type> <name>program_object</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_OGL_VARLOCS</name></type> <name>varlocs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLuint</name></type> <name>vao</name></decl>, <name>vbo</name>;</decl_stmt>

}</block></struct></type> <name>ALLEGRO_OGL_EXTRAS</name>;</typedef>

<typedef>typedef <type><struct>struct <name>ALLEGRO_OGL_BITMAP_VERTEX</name>

<block>{

<decl_stmt><decl><type><name>float</name></type> <name>x</name></decl>, <name>y</name>, <name>z</name>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>tx</name></decl>, <name>ty</name>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>r</name></decl>, <name>g</name>, <name>b</name>, <name>a</name>;</decl_stmt>

}</block></struct></type> <name>ALLEGRO_OGL_BITMAP_VERTEX</name>;</typedef>

<function_decl><type><name>int</name></type> <name>_al_ogl_look_for_an_extension</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>GLubyte</name> <modifier>*</modifier></type><name>extensions</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_ogl_set_extensions</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_OGL_EXT_API</name> <modifier>*</modifier></type><name>ext</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_ogl_manage_extensions</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>disp</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_ogl_unmanage_extensions</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>disp</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>_al_ogl_get_glformat</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>format</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>component</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>_al_ogl_create_bitmap</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>h</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>format</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_ogl_upload_bitmap_memory</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>format</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_CFG_OPENGLES</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>ALLEGRO_LOCKED_REGION</name> <modifier>*</modifier></type><name>_al_ogl_lock_region_new</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>h</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>format</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_ogl_unlock_region_new</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<function_decl><type><name>ALLEGRO_LOCKED_REGION</name> <modifier>*</modifier></type><name>_al_ogl_lock_region_gles</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>h</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>format</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_ogl_unlock_region_gles</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>int</name></type> <name>_al_ogl_pixel_alignment</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>pixel_size</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>compressed</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>GLint</name></type> <name>_al_ogl_bind_framebuffer</name><parameter_list>(<parameter><decl><type><name>GLint</name></type> <name>fbo</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_ogl_reset_fbo_info</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_FBO_INFO</name> <modifier>*</modifier></type><name>info</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> <name>_al_ogl_create_persistent_fbo</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>ALLEGRO_FBO_INFO</name> <modifier>*</modifier></type><name>_al_ogl_persist_fbo</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>,

<parameter><decl><type><name>ALLEGRO_FBO_INFO</name> <modifier>*</modifier></type><name>transient_fbo_info</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_ogl_setup_fbo</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> <name>_al_ogl_setup_fbo_non_backbuffer</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>,

<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_ogl_del_fbo</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_FBO_INFO</name> <modifier>*</modifier></type><name>info</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_ogl_setup_gl</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>d</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_ogl_set_target_bitmap</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_ogl_unset_target_bitmap</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_ogl_finalize_fbo</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_ogl_setup_bitmap_clipping</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>_al_ogl_get_backbuffer</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>d</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>ALLEGRO_BITMAP</name><modifier>*</modifier></type> <name>_al_ogl_create_backbuffer</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>disp</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_ogl_destroy_backbuffer</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> <name>_al_ogl_resize_backbuffer</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>h</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_opengl_backup_dirty_bitmaps</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>flip</name></decl></parameter>)</parameter_list>;</function_decl>

<struct_decl>struct <name>ALLEGRO_DISPLAY_INTERFACE</name>;</struct_decl>

<function_decl><type><name>void</name></type> <name>_al_ogl_add_drawing_functions</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ALLEGRO_DISPLAY_INTERFACE</name></name> <modifier>*</modifier></type><name>vt</name></decl></parameter>)</parameter_list>;</function_decl>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>_al_opengl_set_blender</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>disp</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>char</name> <specifier>const</specifier> <operator>*</operator></expr></argument>, <argument><expr><name>_al_gl_error_string</name></expr></argument>, <argument><expr><operator>(</operator><name>GLenum</name> <name>e</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function_decl><type><name>void</name></type> <name>_al_ogl_update_render_state</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_CFG_SHADER_GLSL</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>bool</name></type> <name>_al_glsl_set_projview_matrix</name><parameter_list>(<parameter><decl><type><name>GLint</name></type> <name>projview_matrix_loc</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>ALLEGRO_TRANSFORM</name> <modifier>*</modifier></type><name>t</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_glsl_init_shaders</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_glsl_shutdown_shaders</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_glsl_unuse_shaders</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
