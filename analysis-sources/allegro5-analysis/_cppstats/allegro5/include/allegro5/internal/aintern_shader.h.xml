<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\include\allegro5\internal\aintern_shader.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_list.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/internal/aintern_vector.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_SHADER_INTERFACE</name></name></type> <name>ALLEGRO_SHADER_INTERFACE</name>;</typedef>

<struct>struct <name>ALLEGRO_SHADER_INTERFACE</name>

<block>{

<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>attach_shader_source</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_SHADER</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>,

<parameter><decl><type><name>ALLEGRO_SHADER_TYPE</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>source</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>build_shader</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_SHADER</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>use_shader</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_SHADER</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>dpy</name></decl></parameter>,

<parameter><decl><type><name>bool</name></type> <name>set_projview_matrix_from_display</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>unuse_shader</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_SHADER</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>dpy</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>destroy_shader</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_SHADER</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_lost_device</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_SHADER</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>on_reset_device</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_SHADER</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>set_shader_sampler</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_SHADER</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,

<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bitmap</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>unit</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>set_shader_matrix</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_SHADER</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>ALLEGRO_TRANSFORM</name> <modifier>*</modifier></type><name>matrix</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>set_shader_int</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_SHADER</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>set_shader_float</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_SHADER</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>f</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>set_shader_int_vector</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_SHADER</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>elem_size</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int</name> <modifier>*</modifier></type><name>i</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>num_elems</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>set_shader_float_vector</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_SHADER</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>elem_size</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>f</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>num_elems</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> (<modifier>*</modifier><name>set_shader_bool</name>)<parameter_list>(<parameter><decl><type><name>ALLEGRO_SHADER</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b</name></decl></parameter>)</parameter_list>;</function_decl>

}</block>;</struct>

<struct>struct <name>ALLEGRO_SHADER</name>

<block>{

<decl_stmt><decl><type><name>ALLEGRO_USTR</name> <modifier>*</modifier></type><name>vertex_copy</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_USTR</name> <modifier>*</modifier></type><name>pixel_copy</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_USTR</name> <modifier>*</modifier></type><name>log</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_SHADER_PLATFORM</name></type> <name>platform</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_SHADER_INTERFACE</name> <modifier>*</modifier></type><name>vt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>_AL_VECTOR</name></type> <name>bitmaps</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>_AL_LIST_ITEM</name> <modifier>*</modifier></type><name>dtor_item</name></decl>;</decl_stmt>

}</block>;</struct>

<function_decl><type><name>void</name></type> <name>_al_set_bitmap_shader_field</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bmp</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_SHADER</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_register_shader_bitmap</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_SHADER</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bmp</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_unregister_shader_bitmap</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_SHADER</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_BITMAP</name> <modifier>*</modifier></type><name>bmp</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>ALLEGRO_SHADER</name> <modifier>*</modifier></type><name>_al_create_default_shader</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>display_flags</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_CFG_SHADER_GLSL</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>ALLEGRO_SHADER</name> <modifier>*</modifier></type><name>_al_create_shader_glsl</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_SHADER_PLATFORM</name></type> <name>platform</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_set_shader_glsl</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_SHADER</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_CFG_SHADER_HLSL</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>ALLEGRO_SHADER</name> <modifier>*</modifier></type><name>_al_create_shader_hlsl</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_SHADER_PLATFORM</name></type> <name>platform</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_al_set_shader_hlsl</name><parameter_list>(<parameter><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl></parameter>, <parameter><decl><type><name>ALLEGRO_SHADER</name> <modifier>*</modifier></type><name>shader</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
