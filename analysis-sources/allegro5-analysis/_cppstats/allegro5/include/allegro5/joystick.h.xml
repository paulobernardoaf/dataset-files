<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\include\allegro5\joystick.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/base.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/events.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_AL_MAX_JOYSTICK_AXES</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_AL_MAX_JOYSTICK_STICKS</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_AL_MAX_JOYSTICK_BUTTONS</name></cpp:macro> <cpp:value>32</cpp:value></cpp:define>

<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_JOYSTICK</name></name></type> <name>ALLEGRO_JOYSTICK</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_JOYSTICK_STATE</name></name></type> <name>ALLEGRO_JOYSTICK_STATE</name>;</typedef>

<struct>struct <name>ALLEGRO_JOYSTICK_STATE</name>

<block>{

<struct>struct <block>{

<decl_stmt><decl><type><name>float</name></type> <name><name>axis</name><index>[<expr><name>_AL_MAX_JOYSTICK_AXES</name></expr>]</index></name></decl>;</decl_stmt> 

}</block> <decl><name><name>stick</name><index>[<expr><name>_AL_MAX_JOYSTICK_STICKS</name></expr>]</index></name></decl>;</struct>

<decl_stmt><decl><type><name>int</name></type> <name><name>button</name><index>[<expr><name>_AL_MAX_JOYSTICK_BUTTONS</name></expr>]</index></name></decl>;</decl_stmt> 

}</block>;</struct>

<enum>enum <name>ALLEGRO_JOYFLAGS</name>

<block>{

<decl><name>ALLEGRO_JOYFLAG_DIGITAL</name> <init>= <expr><literal type="number">0x01</literal></expr></init></decl>,

<decl><name>ALLEGRO_JOYFLAG_ANALOGUE</name> <init>= <expr><literal type="number">0x02</literal></expr></init></decl>

}</block>;</enum>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_install_joystick</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_uninstall_joystick</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_is_joystick_installed</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_reconfigure_joysticks</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_num_joysticks</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_JOYSTICK</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_get_joystick</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name> <name>joyn</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_release_joystick</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_JOYSTICK</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_get_joystick_active</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_JOYSTICK</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><specifier>const</specifier> <name>char</name><operator>*</operator></expr></argument>, <argument><expr><name>al_get_joystick_name</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_JOYSTICK</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_joystick_num_sticks</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_JOYSTICK</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_joystick_stick_flags</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_JOYSTICK</name> <operator>*</operator><operator>,</operator> <name>int</name> <name>stick</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><specifier>const</specifier> <name>char</name><operator>*</operator></expr></argument>, <argument><expr><name>al_get_joystick_stick_name</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_JOYSTICK</name> <operator>*</operator><operator>,</operator> <name>int</name> <name>stick</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_joystick_num_axes</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_JOYSTICK</name> <operator>*</operator><operator>,</operator> <name>int</name> <name>stick</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><specifier>const</specifier> <name>char</name><operator>*</operator></expr></argument>, <argument><expr><name>al_get_joystick_axis_name</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_JOYSTICK</name> <operator>*</operator><operator>,</operator> <name>int</name> <name>stick</name><operator>,</operator> <name>int</name> <name>axis</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_joystick_num_buttons</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_JOYSTICK</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><specifier>const</specifier> <name>char</name><operator>*</operator></expr></argument>, <argument><expr><name>al_get_joystick_button_name</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_JOYSTICK</name> <operator>*</operator><operator>,</operator> <name>int</name> <name>buttonn</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_get_joystick_state</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_JOYSTICK</name> <operator>*</operator><operator>,</operator> <name>ALLEGRO_JOYSTICK_STATE</name> <operator>*</operator><name>ret_state</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_EVENT_SOURCE</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_get_joystick_event_source</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
