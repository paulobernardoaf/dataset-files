<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\include\allegro5\platform\aldmc.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;io.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;fcntl.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_HAVE_INTTYPES_H</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_HAVE_STDINT_H</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LONG_LONG</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_STATICLINK</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_PLATFORM_STR</name></cpp:macro> <cpp:value>"DMC.s"</cpp:value></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_PLATFORM_STR</name></cpp:macro> <cpp:value>"DMC"</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_WINDOWS</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_I386</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_LITTLE_ENDIAN</name></cpp:macro></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ALLEGRO_USE_CONSOLE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_NO_MAGIC_MAIN</name></cpp:macro></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>(</operator><name>defined</name> <name>ALLEGRO_STATICLINK</name><operator>)</operator> <operator>||</operator> <operator>(</operator><name>defined</name> <name>ALLEGRO_SRC</name><operator>)</operator></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_AL_DLL</name></cpp:macro></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_AL_DLL</name></cpp:macro> <cpp:value>__declspec(dllimport)</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AL_VAR</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>name</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>extern _AL_DLL type name</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AL_ARRAY</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>name</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>extern _AL_DLL type name[]</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AL_FUNC</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>args</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>extern type name args</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AL_METHOD</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>args</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>type (*name) args</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AL_FUNCPTR</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>args</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>extern _AL_DLL type (*name) args</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>(</operator><name>defined</name> <name>ALLEGRO_SRC</name><operator>)</operator></expr></cpp:if>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>(</operator><operator>!</operator><name>defined</name> <name>S_IRUSR</name><operator>)</operator></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>S_IRUSR</name></cpp:macro> <cpp:value>S_IREAD</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>S_IWUSR</name></cpp:macro> <cpp:value>S_IWRITE</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><name>unsigned</name> <name>long</name></type> <name>_fsize_t</name>;</typedef>

<struct>struct <name>_wfinddata_t</name> <block>{

<decl_stmt><decl><type><name>unsigned</name></type> <name>attrib</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>time_t</name></type> <name>time_create</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>time_t</name></type> <name>time_access</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>time_t</name></type> <name>time_write</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>_fsize_t</name></type> <name>size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>wchar_t</name></type> <name><name>name</name><index>[<expr><literal type="number">260</literal></expr>]</index></name></decl>;</decl_stmt> 

}</block>;</struct>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_EXTRA_HEADER</name></cpp:macro> <cpp:value>"allegro5/platform/alwin.h"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_INTERNAL_HEADER</name></cpp:macro> <cpp:value>"allegro5/platform/aintwin.h"</cpp:value></cpp:define>

</unit>
