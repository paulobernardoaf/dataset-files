<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\include\allegro5\mouse.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/base.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/events.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ALLEGRO_MOUSE_MAX_EXTRA_AXES</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_MOUSE</name></name></type> <name>ALLEGRO_MOUSE</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>ALLEGRO_MOUSE_STATE</name></name></type> <name>ALLEGRO_MOUSE_STATE</name>;</typedef>

<struct>struct <name>ALLEGRO_MOUSE_STATE</name>

<block>{

<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>y</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>z</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>w</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>more_axes</name><index>[<expr><name>ALLEGRO_MOUSE_MAX_EXTRA_AXES</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>buttons</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>pressure</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>ALLEGRO_DISPLAY</name></name> <modifier>*</modifier></type><name>display</name></decl>;</decl_stmt>

}</block>;</struct>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_is_mouse_installed</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_install_mouse</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_uninstall_mouse</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name>AL_FUNC</name><argument_list>(<argument>unsigned int</argument>, <argument>al_get_mouse_num_buttons</argument>, <argument>(void)</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

<macro><name>AL_FUNC</name><argument_list>(<argument>unsigned int</argument>, <argument>al_get_mouse_num_axes</argument>, <argument>(void)</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_set_mouse_xy</name></expr></argument>, <argument><expr><operator>(</operator>struct <name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>,</operator> <name>int</name> <name>x</name><operator>,</operator> <name>int</name> <name>y</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_set_mouse_z</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name> <name>z</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_set_mouse_w</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name> <name>w</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_set_mouse_axis</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name> <name>axis</name><operator>,</operator> <name>int</name> <name>value</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_get_mouse_state</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_MOUSE_STATE</name> <operator>*</operator><name>ret_state</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_mouse_button_down</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_MOUSE_STATE</name> <operator>*</operator><name>state</name><operator>,</operator> <name>int</name> <name>button</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_mouse_state_axis</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>ALLEGRO_MOUSE_STATE</name> <operator>*</operator><name>state</name><operator>,</operator> <name>int</name> <name>axis</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_get_mouse_cursor_position</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name> <operator>*</operator><name>ret_x</name><operator>,</operator> <name>int</name> <operator>*</operator><name>ret_y</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_grab_mouse</name></expr></argument>, <argument><expr><operator>(</operator>struct <name>ALLEGRO_DISPLAY</name> <operator>*</operator><name>display</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>bool</name></expr></argument>, <argument><expr><name>al_ungrab_mouse</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_set_mouse_wheel_precision</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name> <name>precision</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><name>al_get_mouse_wheel_precision</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>ALLEGRO_EVENT_SOURCE</name> <operator>*</operator></expr></argument>, <argument><expr><name>al_get_mouse_event_source</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
