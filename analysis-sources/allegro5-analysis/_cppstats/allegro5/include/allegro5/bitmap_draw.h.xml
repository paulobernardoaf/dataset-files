<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\include\allegro5\bitmap_draw.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/bitmap.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<enum>enum <block>{

<decl><name>ALLEGRO_FLIP_HORIZONTAL</name> <init>= <expr><literal type="number">0x00001</literal></expr></init></decl>,

<decl><name>ALLEGRO_FLIP_VERTICAL</name> <init>= <expr><literal type="number">0x00002</literal></expr></init></decl>

}</block>;</enum>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_bitmap</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_BITMAP</name> <operator>*</operator><name>bitmap</name><operator>,</operator> <name>float</name> <name>dx</name><operator>,</operator> <name>float</name> <name>dy</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_bitmap_region</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_BITMAP</name> <operator>*</operator><name>bitmap</name><operator>,</operator> <name>float</name> <name>sx</name><operator>,</operator> <name>float</name> <name>sy</name><operator>,</operator> <name>float</name> <name>sw</name><operator>,</operator> <name>float</name> <name>sh</name><operator>,</operator> <name>float</name> <name>dx</name><operator>,</operator> <name>float</name> <name>dy</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_scaled_bitmap</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_BITMAP</name> <operator>*</operator><name>bitmap</name><operator>,</operator> <name>float</name> <name>sx</name><operator>,</operator> <name>float</name> <name>sy</name><operator>,</operator> <name>float</name> <name>sw</name><operator>,</operator> <name>float</name> <name>sh</name><operator>,</operator> <name>float</name> <name>dx</name><operator>,</operator> <name>float</name> <name>dy</name><operator>,</operator> <name>float</name> <name>dw</name><operator>,</operator> <name>float</name> <name>dh</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_rotated_bitmap</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_BITMAP</name> <operator>*</operator><name>bitmap</name><operator>,</operator> <name>float</name> <name>cx</name><operator>,</operator> <name>float</name> <name>cy</name><operator>,</operator> <name>float</name> <name>dx</name><operator>,</operator> <name>float</name> <name>dy</name><operator>,</operator> <name>float</name> <name>angle</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_scaled_rotated_bitmap</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_BITMAP</name> <operator>*</operator><name>bitmap</name><operator>,</operator> <name>float</name> <name>cx</name><operator>,</operator> <name>float</name> <name>cy</name><operator>,</operator> <name>float</name> <name>dx</name><operator>,</operator> <name>float</name> <name>dy</name><operator>,</operator> <name>float</name> <name>xscale</name><operator>,</operator> <name>float</name> <name>yscale</name><operator>,</operator> <name>float</name> <name>angle</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_tinted_bitmap</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_BITMAP</name> <operator>*</operator><name>bitmap</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>tint</name><operator>,</operator> <name>float</name> <name>dx</name><operator>,</operator> <name>float</name> <name>dy</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_tinted_bitmap_region</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_BITMAP</name> <operator>*</operator><name>bitmap</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>tint</name><operator>,</operator> <name>float</name> <name>sx</name><operator>,</operator> <name>float</name> <name>sy</name><operator>,</operator> <name>float</name> <name>sw</name><operator>,</operator> <name>float</name> <name>sh</name><operator>,</operator> <name>float</name> <name>dx</name><operator>,</operator> <name>float</name> <name>dy</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_tinted_scaled_bitmap</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_BITMAP</name> <operator>*</operator><name>bitmap</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>tint</name><operator>,</operator> <name>float</name> <name>sx</name><operator>,</operator> <name>float</name> <name>sy</name><operator>,</operator> <name>float</name> <name>sw</name><operator>,</operator> <name>float</name> <name>sh</name><operator>,</operator> <name>float</name> <name>dx</name><operator>,</operator> <name>float</name> <name>dy</name><operator>,</operator> <name>float</name> <name>dw</name><operator>,</operator> <name>float</name> <name>dh</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_tinted_rotated_bitmap</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_BITMAP</name> <operator>*</operator><name>bitmap</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>tint</name><operator>,</operator> <name>float</name> <name>cx</name><operator>,</operator> <name>float</name> <name>cy</name><operator>,</operator> <name>float</name> <name>dx</name><operator>,</operator> <name>float</name> <name>dy</name><operator>,</operator> <name>float</name> <name>angle</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_tinted_scaled_rotated_bitmap</name></expr></argument>, <argument><expr><operator>(</operator><name>ALLEGRO_BITMAP</name> <operator>*</operator><name>bitmap</name><operator>,</operator> <name>ALLEGRO_COLOR</name> <name>tint</name><operator>,</operator> <name>float</name> <name>cx</name><operator>,</operator> <name>float</name> <name>cy</name><operator>,</operator> <name>float</name> <name>dx</name><operator>,</operator> <name>float</name> <name>dy</name><operator>,</operator> <name>float</name> <name>xscale</name><operator>,</operator> <name>float</name> <name>yscale</name><operator>,</operator> <name>float</name> <name>angle</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AL_FUNC</name><argument_list>(<argument><expr><name>void</name></expr></argument>, <argument><expr><name>al_draw_tinted_scaled_rotated_bitmap_region</name></expr></argument>, <argument><expr><operator>(</operator>

<name>ALLEGRO_BITMAP</name> <operator>*</operator><name>bitmap</name><operator>,</operator>

<name>float</name> <name>sx</name><operator>,</operator> <name>float</name> <name>sy</name><operator>,</operator> <name>float</name> <name>sw</name><operator>,</operator> <name>float</name> <name>sh</name><operator>,</operator>

<name>ALLEGRO_COLOR</name> <name>tint</name><operator>,</operator>

<name>float</name> <name>cx</name><operator>,</operator> <name>float</name> <name>cy</name><operator>,</operator> <name>float</name> <name>dx</name><operator>,</operator> <name>float</name> <name>dy</name><operator>,</operator> <name>float</name> <name>xscale</name><operator>,</operator> <name>float</name> <name>yscale</name><operator>,</operator>

<name>float</name> <name>angle</name><operator>,</operator> <name>int</name> <name>flags</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
