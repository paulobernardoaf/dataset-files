<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\examples\ex_winfull.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common.c"</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>argv</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>win</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>full</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_EVENT_QUEUE</name> <modifier>*</modifier></type><name>events</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_EVENT</name></type> <name>event</name></decl>;</decl_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>argc</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>argv</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>al_init</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>abort_example</name><argument_list>(<argument><expr><literal type="string">"Could not init Allegro.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>al_install_keyboard</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>al_get_num_video_adapters</name><argument_list>()</argument_list></call> <operator>&lt;</operator> <literal type="number">2</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>abort_example</name><argument_list>(<argument><expr><literal type="string">"This example requires multiple video adapters.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>al_set_new_display_adapter</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_set_new_display_flags</name><argument_list>(<argument><expr><name>ALLEGRO_WINDOWED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>win</name> <operator>=</operator> <call><name>al_create_display</name><argument_list>(<argument><expr><literal type="number">640</literal></expr></argument>, <argument><expr><literal type="number">480</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>win</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>abort_example</name><argument_list>(<argument><expr><literal type="string">"Error creating windowed display on adapter 1 "</literal>

<literal type="string">"(do you have multiple adapters?)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>al_set_new_display_adapter</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_set_new_display_flags</name><argument_list>(<argument><expr><name>ALLEGRO_FULLSCREEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>full</name> <operator>=</operator> <call><name>al_create_display</name><argument_list>(<argument><expr><literal type="number">640</literal></expr></argument>, <argument><expr><literal type="number">480</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>full</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>abort_example</name><argument_list>(<argument><expr><literal type="string">"Error creating fullscreen display on adapter 0\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>events</name> <operator>=</operator> <call><name>al_create_event_queue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_register_event_source</name><argument_list>(<argument><expr><name>events</name></expr></argument>, <argument><expr><call><name>al_get_keyboard_event_source</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<while>while <condition>(<expr><operator>!</operator><call><name>al_is_event_queue_empty</name><argument_list>(<argument><expr><name>events</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>al_get_next_event</name><argument_list>(<argument><expr><name>events</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>event</name><operator>.</operator><name>type</name></name> <operator>==</operator> <name>ALLEGRO_EVENT_KEY_DOWN</name> <operator>&amp;&amp;</operator>

<name><name>event</name><operator>.</operator><name>keyboard</name><operator>.</operator><name>keycode</name></name> <operator>==</operator> <name>ALLEGRO_KEY_ESCAPE</name></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>done</name>;</goto></block_content></block></if></if_stmt>

</block_content>}</block></while>

<expr_stmt><expr><call><name>al_set_target_backbuffer</name><argument_list>(<argument><expr><name>full</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_clear_to_color</name><argument_list>(<argument><expr><call><name>al_map_rgb</name><argument_list>(<argument><expr><call><name>rand</name><argument_list>()</argument_list></call><operator>%</operator><literal type="number">255</literal></expr></argument>, <argument><expr><call><name>rand</name><argument_list>()</argument_list></call><operator>%</operator><literal type="number">255</literal></expr></argument>, <argument><expr><call><name>rand</name><argument_list>()</argument_list></call><operator>%</operator><literal type="number">255</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_flip_display</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_set_target_backbuffer</name><argument_list>(<argument><expr><name>win</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_clear_to_color</name><argument_list>(<argument><expr><call><name>al_map_rgb</name><argument_list>(<argument><expr><call><name>rand</name><argument_list>()</argument_list></call><operator>%</operator><literal type="number">255</literal></expr></argument>, <argument><expr><call><name>rand</name><argument_list>()</argument_list></call><operator>%</operator><literal type="number">255</literal></expr></argument>, <argument><expr><call><name>rand</name><argument_list>()</argument_list></call><operator>%</operator><literal type="number">255</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_flip_display</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_rest</name><argument_list>(<argument><expr><literal type="number">0.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></while>

<label><name>done</name>:</label>

<expr_stmt><expr><call><name>al_destroy_event_queue</name><argument_list>(<argument><expr><name>events</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_destroy_display</name><argument_list>(<argument><expr><name>win</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_destroy_display</name><argument_list>(<argument><expr><name>full</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

</unit>
