<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\allegro5-analysis\_cppstats\allegro5\examples\ex_stream_seek.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro_font.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro_image.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro_audio.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro_acodec.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"allegro5/allegro_primitives.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common.c"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>ALLEGRO_DISPLAY</name> <modifier>*</modifier></type><name>display</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_TIMER</name> <modifier>*</modifier></type><name>timer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_EVENT_QUEUE</name> <modifier>*</modifier></type><name>queue</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_FONT</name> <modifier>*</modifier></type><name>basic_font</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_AUDIO_STREAM</name> <modifier>*</modifier></type><name>music_stream</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>stream_filename</name> <init>= <expr><literal type="string">"data/welcome.wav"</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>slider_pos</name> <init>= <expr><literal type="number">0.0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>loop_start</name></decl>, <decl><type ref="prev"/><name>loop_end</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>mouse_button</name><index>[<expr><literal type="number">16</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>exiting</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>void</name></type> <name>initialize</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>al_init</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>abort_example</name><argument_list>(<argument><expr><literal type="string">"Could not init Allegro.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>open_log</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_init_primitives_addon</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_init_image_addon</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_init_font_addon</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>al_install_keyboard</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>abort_example</name><argument_list>(<argument><expr><literal type="string">"Could not init keyboard!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>al_install_mouse</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>abort_example</name><argument_list>(<argument><expr><literal type="string">"Could not init mouse!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>al_init_acodec_addon</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>al_install_audio</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>abort_example</name><argument_list>(<argument><expr><literal type="string">"Could not init sound!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>al_reserve_samples</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>abort_example</name><argument_list>(<argument><expr><literal type="string">"Could not set up voice and mixer.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>init_platform_specific</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>display</name> <operator>=</operator> <call><name>al_create_display</name><argument_list>(<argument><expr><literal type="number">640</literal></expr></argument>, <argument><expr><literal type="number">228</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>display</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>abort_example</name><argument_list>(<argument><expr><literal type="string">"Could not create display!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>basic_font</name> <operator>=</operator> <call><name>al_load_font</name><argument_list>(<argument><expr><literal type="string">"data/font.tga"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>basic_font</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>abort_example</name><argument_list>(<argument><expr><literal type="string">"Could not load font!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>timer</name> <operator>=</operator> <call><name>al_create_timer</name><argument_list>(<argument><expr><literal type="number">1.000</literal> <operator>/</operator> <literal type="number">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>timer</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>abort_example</name><argument_list>(<argument><expr><literal type="string">"Could not init timer!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>queue</name> <operator>=</operator> <call><name>al_create_event_queue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>queue</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>abort_example</name><argument_list>(<argument><expr><literal type="string">"Could not create event queue!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>al_register_event_source</name><argument_list>(<argument><expr><name>queue</name></expr></argument>, <argument><expr><call><name>al_get_keyboard_event_source</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_register_event_source</name><argument_list>(<argument><expr><name>queue</name></expr></argument>, <argument><expr><call><name>al_get_mouse_event_source</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_register_event_source</name><argument_list>(<argument><expr><name>queue</name></expr></argument>, <argument><expr><call><name>al_get_display_event_source</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_register_event_source</name><argument_list>(<argument><expr><name>queue</name></expr></argument>, <argument><expr><call><name>al_get_timer_event_source</name><argument_list>(<argument><expr><name>timer</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>logic</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>double</name></type> <name>w</name> <init>= <expr><call><name>al_get_display_width</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">20</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>pos</name> <init>= <expr><call><name>al_get_audio_stream_position_secs</name><argument_list>(<argument><expr><name>music_stream</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>len</name> <init>= <expr><call><name>al_get_audio_stream_length_secs</name><argument_list>(<argument><expr><name>music_stream</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>slider_pos</name> <operator>=</operator> <name>w</name> <operator>*</operator> <operator>(</operator><name>pos</name> <operator>/</operator> <name>len</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>print_time</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>t</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>hours</name></decl>, <decl><type ref="prev"/><name>minutes</name></decl>;</decl_stmt>

<expr_stmt><expr><name>hours</name> <operator>=</operator> <operator>(</operator><name>int</name><operator>)</operator><name>t</name> <operator>/</operator> <literal type="number">3600</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t</name> <operator>-=</operator> <name>hours</name> <operator>*</operator> <literal type="number">3600</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>minutes</name> <operator>=</operator> <operator>(</operator><name>int</name><operator>)</operator><name>t</name> <operator>/</operator> <literal type="number">60</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>t</name> <operator>-=</operator> <name>minutes</name> <operator>*</operator> <literal type="number">60</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_draw_textf</name><argument_list>(<argument><expr><name>basic_font</name></expr></argument>, <argument><expr><call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>y</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"%02d:%02d:%05.2f"</literal></expr></argument>, <argument><expr><name>hours</name></expr></argument>, <argument><expr><name>minutes</name></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>render</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>double</name></type> <name>pos</name> <init>= <expr><call><name>al_get_audio_stream_position_secs</name><argument_list>(<argument><expr><name>music_stream</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>length</name> <init>= <expr><call><name>al_get_audio_stream_length_secs</name><argument_list>(<argument><expr><name>music_stream</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>w</name> <init>= <expr><call><name>al_get_display_width</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">20</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>loop_start_pos</name> <init>= <expr><name>w</name> <operator>*</operator> <operator>(</operator><name>loop_start</name> <operator>/</operator> <name>length</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>loop_end_pos</name> <init>= <expr><name>w</name> <operator>*</operator> <operator>(</operator><name>loop_end</name> <operator>/</operator> <name>length</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_COLOR</name></type> <name>c</name> <init>= <expr><call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>al_clear_to_color</name><argument_list>(<argument><expr><call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_set_blender</name><argument_list>(<argument><expr><name>ALLEGRO_ADD</name></expr></argument>, <argument><expr><name>ALLEGRO_ONE</name></expr></argument>, <argument><expr><name>ALLEGRO_INVERSE_ALPHA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_draw_textf</name><argument_list>(<argument><expr><name>basic_font</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"Playing %s"</literal></expr></argument>, <argument><expr><name>stream_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>print_time</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><name>pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_draw_textf</name><argument_list>(<argument><expr><name>basic_font</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"/"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>print_time</name><argument_list>(<argument><expr><literal type="number">110</literal></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><name>length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_draw_filled_rectangle</name><argument_list>(<argument><expr><literal type="number">10.0</literal></expr></argument>, <argument><expr><literal type="number">48.0</literal> <operator>+</operator> <literal type="number">7.0</literal></expr></argument>, <argument><expr><literal type="number">10.0</literal> <operator>+</operator> <name>w</name></expr></argument>, <argument><expr><literal type="number">48.0</literal> <operator>+</operator> <literal type="number">9.0</literal></expr></argument>, <argument><expr><call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_draw_line</name><argument_list>(<argument><expr><literal type="number">10.0</literal> <operator>+</operator> <name>loop_start_pos</name></expr></argument>, <argument><expr><literal type="number">46.0</literal></expr></argument>, <argument><expr><literal type="number">10.0</literal> <operator>+</operator> <name>loop_start_pos</name></expr></argument>, <argument><expr><literal type="number">66.0</literal></expr></argument>, <argument><expr><call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">168</literal></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_draw_line</name><argument_list>(<argument><expr><literal type="number">10.0</literal> <operator>+</operator> <name>loop_end_pos</name></expr></argument>, <argument><expr><literal type="number">46.0</literal></expr></argument>, <argument><expr><literal type="number">10.0</literal> <operator>+</operator> <name>loop_end_pos</name></expr></argument>, <argument><expr><literal type="number">66.0</literal></expr></argument>, <argument><expr><call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">255</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_draw_filled_rectangle</name><argument_list>(<argument><expr><literal type="number">10.0</literal> <operator>+</operator> <name>slider_pos</name> <operator>-</operator> <literal type="number">2.0</literal></expr></argument>, <argument><expr><literal type="number">48.0</literal></expr></argument>, <argument><expr><literal type="number">10.0</literal> <operator>+</operator> <name>slider_pos</name> <operator>+</operator> <literal type="number">2.0</literal></expr></argument>, <argument><expr><literal type="number">64.0</literal></expr></argument>,

<argument><expr><call><name>al_map_rgb</name><argument_list>(<argument><expr><literal type="number">224</literal></expr></argument>, <argument><expr><literal type="number">224</literal></expr></argument>, <argument><expr><literal type="number">224</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_draw_textf</name><argument_list>(<argument><expr><name>basic_font</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">96</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"Drag the slider to seek."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_draw_textf</name><argument_list>(<argument><expr><name>basic_font</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">120</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"Middle-click to set loop start."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_draw_textf</name><argument_list>(<argument><expr><name>basic_font</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">144</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"Right-click to set loop end."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_draw_textf</name><argument_list>(<argument><expr><name>basic_font</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">168</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"Left/right arrows to seek."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_draw_textf</name><argument_list>(<argument><expr><name>basic_font</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">192</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="string">"Space to pause."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_flip_display</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>myexit</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>bool</name></type> <name>playing</name></decl>;</decl_stmt>

<expr_stmt><expr><name>playing</name> <operator>=</operator> <call><name>al_get_audio_stream_playing</name><argument_list>(<argument><expr><name>music_stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>playing</name> <operator>&amp;&amp;</operator> <name>music_stream</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>al_drain_audio_stream</name><argument_list>(<argument><expr><name>music_stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>al_destroy_audio_stream</name><argument_list>(<argument><expr><name>music_stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>maybe_fiddle_sliders</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>double</name></type> <name>seek_pos</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>w</name> <init>= <expr><call><name>al_get_display_width</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">20</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>mx</name> <operator>&gt;=</operator> <literal type="number">10</literal> <operator>&amp;&amp;</operator> <name>mx</name> <operator>&lt;</operator> <literal type="number">10</literal> <operator>+</operator> <name>w</name> <operator>&amp;&amp;</operator> <name>my</name> <operator>&gt;=</operator> <literal type="number">48</literal> <operator>&amp;&amp;</operator> <name>my</name> <operator>&lt;</operator> <literal type="number">64</literal><operator>)</operator></expr>)</condition> <block>{<block_content>

<return>return;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>seek_pos</name> <operator>=</operator> <call><name>al_get_audio_stream_length_secs</name><argument_list>(<argument><expr><name>music_stream</name></expr></argument>)</argument_list></call> <operator>*</operator> <operator>(</operator><operator>(</operator><name>mx</name> <operator>-</operator> <literal type="number">10</literal><operator>)</operator> <operator>/</operator> <name>w</name><operator>)</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>mouse_button</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>al_seek_audio_stream_secs</name><argument_list>(<argument><expr><name>music_stream</name></expr></argument>, <argument><expr><name>seek_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if <condition>(<expr><name><name>mouse_button</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>loop_end</name> <operator>=</operator> <name>seek_pos</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_set_audio_stream_loop_secs</name><argument_list>(<argument><expr><name>music_stream</name></expr></argument>, <argument><expr><name>loop_start</name></expr></argument>, <argument><expr><name>loop_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if <condition>(<expr><name><name>mouse_button</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>loop_start</name> <operator>=</operator> <name>seek_pos</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_set_audio_stream_loop_secs</name><argument_list>(<argument><expr><name>music_stream</name></expr></argument>, <argument><expr><name>loop_start</name></expr></argument>, <argument><expr><name>loop_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>event_handler</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ALLEGRO_EVENT</name> <modifier>*</modifier></type> <name>event</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<switch>switch <condition>(<expr><name><name>event</name><operator>-&gt;</operator><name>type</name></name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>ALLEGRO_EVENT_DISPLAY_CLOSE</name></expr>:</case>

<expr_stmt><expr><name>exiting</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>ALLEGRO_EVENT_KEY_CHAR</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><name><name>event</name><operator>-&gt;</operator><name>keyboard</name><operator>.</operator><name>keycode</name></name> <operator>==</operator> <name>ALLEGRO_KEY_LEFT</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>double</name></type> <name>pos</name> <init>= <expr><call><name>al_get_audio_stream_position_secs</name><argument_list>(<argument><expr><name>music_stream</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>pos</name> <operator>-=</operator> <literal type="number">5.0</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>pos</name> <operator>&lt;</operator> <literal type="number">0.0</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>pos</name> <operator>=</operator> <literal type="number">0.0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>al_seek_audio_stream_secs</name><argument_list>(<argument><expr><name>music_stream</name></expr></argument>, <argument><expr><name>pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if <condition>(<expr><name><name>event</name><operator>-&gt;</operator><name>keyboard</name><operator>.</operator><name>keycode</name></name> <operator>==</operator> <name>ALLEGRO_KEY_RIGHT</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>double</name></type> <name>pos</name> <init>= <expr><call><name>al_get_audio_stream_position_secs</name><argument_list>(<argument><expr><name>music_stream</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>pos</name> <operator>+=</operator> <literal type="number">5.0</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>al_seek_audio_stream_secs</name><argument_list>(<argument><expr><name>music_stream</name></expr></argument>, <argument><expr><name>pos</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>log_printf</name><argument_list>(<argument><expr><literal type="string">"seek error!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if>

<if type="elseif">else if <condition>(<expr><name><name>event</name><operator>-&gt;</operator><name>keyboard</name><operator>.</operator><name>keycode</name></name> <operator>==</operator> <name>ALLEGRO_KEY_SPACE</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>bool</name></type> <name>playing</name></decl>;</decl_stmt>

<expr_stmt><expr><name>playing</name> <operator>=</operator> <call><name>al_get_audio_stream_playing</name><argument_list>(<argument><expr><name>music_stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>playing</name> <operator>=</operator> <operator>!</operator><name>playing</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_set_audio_stream_playing</name><argument_list>(<argument><expr><name>music_stream</name></expr></argument>, <argument><expr><name>playing</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if <condition>(<expr><name><name>event</name><operator>-&gt;</operator><name>keyboard</name><operator>.</operator><name>keycode</name></name> <operator>==</operator> <name>ALLEGRO_KEY_ESCAPE</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>exiting</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<break>break;</break>

<case>case <expr><name>ALLEGRO_EVENT_MOUSE_BUTTON_DOWN</name></expr>:</case>

<expr_stmt><expr><name><name>mouse_button</name><index>[<expr><name><name>event</name><operator>-&gt;</operator><name>mouse</name><operator>.</operator><name>button</name></name></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>maybe_fiddle_sliders</name><argument_list>(<argument><expr><name><name>event</name><operator>-&gt;</operator><name>mouse</name><operator>.</operator><name>x</name></name></expr></argument>, <argument><expr><name><name>event</name><operator>-&gt;</operator><name>mouse</name><operator>.</operator><name>y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>ALLEGRO_EVENT_MOUSE_AXES</name></expr>:</case>

<expr_stmt><expr><call><name>maybe_fiddle_sliders</name><argument_list>(<argument><expr><name><name>event</name><operator>-&gt;</operator><name>mouse</name><operator>.</operator><name>x</name></name></expr></argument>, <argument><expr><name><name>event</name><operator>-&gt;</operator><name>mouse</name><operator>.</operator><name>y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>ALLEGRO_EVENT_MOUSE_BUTTON_UP</name></expr>:</case>

<expr_stmt><expr><name><name>mouse_button</name><index>[<expr><name><name>event</name><operator>-&gt;</operator><name>mouse</name><operator>.</operator><name>button</name></name></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>ALLEGRO_EVENT_MOUSE_LEAVE_DISPLAY</name></expr>:</case>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>mouse_button</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></for>

<break>break;</break>

<case>case <expr><name>ALLEGRO_EVENT_TIMER</name></expr>:</case>

<expr_stmt><expr><call><name>logic</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>render</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>ALLEGRO_EVENT_AUDIO_STREAM_FINISHED</name></expr>:</case>

<expr_stmt><expr><call><name>log_printf</name><argument_list>(<argument><expr><literal type="string">"Stream finished.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></switch>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name><name>argv</name><index>[]</index></name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>ALLEGRO_CONFIG</name> <modifier>*</modifier></type><name>config</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_EVENT</name></type> <name>event</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>buffer_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>samples</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>s</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ALLEGRO_PLAYMODE</name></type> <name>playmode</name> <init>= <expr><name>ALLEGRO_PLAYMODE_LOOP</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>initialize</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>argc</name> <operator>&gt;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>stream_filename</name> <operator>=</operator> <name><name>argv</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>buffer_count</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>samples</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>config</name> <operator>=</operator> <call><name>al_load_config_file</name><argument_list>(<argument><expr><literal type="string">"ex_stream_seek.cfg"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>config</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>s</name> <operator>=</operator> <call><name>al_get_config_value</name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><literal type="string">"buffer_count"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>buffer_count</name> <operator>=</operator> <call><name>atoi</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>s</name> <operator>=</operator> <call><name>al_get_config_value</name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><literal type="string">"samples"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>samples</name> <operator>=</operator> <call><name>atoi</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>s</name> <operator>=</operator> <call><name>al_get_config_value</name><argument_list>(<argument><expr><name>config</name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><literal type="string">"playmode"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>strcmp</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><literal type="string">"loop"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>playmode</name> <operator>=</operator> <name>ALLEGRO_PLAYMODE_LOOP</name></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if <condition>(<expr><operator>!</operator><call><name>strcmp</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><literal type="string">"once"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>playmode</name> <operator>=</operator> <name>ALLEGRO_PLAYMODE_ONCE</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>al_destroy_config</name><argument_list>(<argument><expr><name>config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>buffer_count</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>buffer_count</name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>samples</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>samples</name> <operator>=</operator> <literal type="number">1024</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>music_stream</name> <operator>=</operator> <call><name>al_load_audio_stream</name><argument_list>(<argument><expr><name>stream_filename</name></expr></argument>, <argument><expr><name>buffer_count</name></expr></argument>, <argument><expr><name>samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>music_stream</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>abort_example</name><argument_list>(<argument><expr><literal type="string">"Stream error!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>al_register_event_source</name><argument_list>(<argument><expr><name>queue</name></expr></argument>, <argument><expr><call><name>al_get_audio_stream_event_source</name><argument_list>(<argument><expr><name>music_stream</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>loop_start</name> <operator>=</operator> <literal type="number">0.0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>loop_end</name> <operator>=</operator> <call><name>al_get_audio_stream_length_secs</name><argument_list>(<argument><expr><name>music_stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_set_audio_stream_loop_secs</name><argument_list>(<argument><expr><name>music_stream</name></expr></argument>, <argument><expr><name>loop_start</name></expr></argument>, <argument><expr><name>loop_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_set_audio_stream_playmode</name><argument_list>(<argument><expr><name>music_stream</name></expr></argument>, <argument><expr><name>playmode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_attach_audio_stream_to_mixer</name><argument_list>(<argument><expr><name>music_stream</name></expr></argument>, <argument><expr><call><name>al_get_default_mixer</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_start_timer</name><argument_list>(<argument><expr><name>timer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<while>while <condition>(<expr><operator>!</operator><name>exiting</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>al_wait_for_event</name><argument_list>(<argument><expr><name>queue</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>event_handler</name><argument_list>(<argument><expr><operator>&amp;</operator><name>event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></while>

<expr_stmt><expr><call><name>myexit</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>al_destroy_display</name><argument_list>(<argument><expr><name>display</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>close_log</name><argument_list>(<argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

</unit>
