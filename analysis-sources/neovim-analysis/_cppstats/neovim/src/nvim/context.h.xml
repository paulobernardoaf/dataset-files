<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\neovim-analysis\_cppstats\neovim\src\nvim\context.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;msgpack.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/api/private/defs.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/lib/kvec.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>msgpack_sbuffer</name></type> <name>regs</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>msgpack_sbuffer</name></type> <name>jumps</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>msgpack_sbuffer</name></type> <name>bufs</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>msgpack_sbuffer</name></type> <name>gvars</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>Array</name></type> <name>funcs</name></decl>;</decl_stmt> 

}</block></struct></type> <name>Context</name>;</typedef>

<typedef>typedef <macro><name>kvec_t</name><argument_list>(<argument>Context</argument>)</argument_list></macro> <expr_stmt><expr><name>ContextVec</name></expr>;</expr_stmt></typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MSGPACK_SBUFFER_INIT</name></cpp:macro> <cpp:value>(msgpack_sbuffer) { .size = 0, .data = NULL, .alloc = 0, }</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CONTEXT_INIT</name></cpp:macro> <cpp:value>(Context) { .regs = MSGPACK_SBUFFER_INIT, .jumps = MSGPACK_SBUFFER_INIT, .bufs = MSGPACK_SBUFFER_INIT, .gvars = MSGPACK_SBUFFER_INIT, .funcs = ARRAY_DICT_INIT, }</cpp:value></cpp:define>

<typedef>typedef <type><enum>enum <block>{

<decl><name>kCtxRegs</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>, 

<decl><name>kCtxJumps</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>, 

<decl><name>kCtxBufs</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>, 

<decl><name>kCtxGVars</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>, 

<decl><name>kCtxSFuncs</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>, 

<decl><name>kCtxFuncs</name> <init>= <expr><literal type="number">32</literal></expr></init></decl>, 

}</block></enum></type> <name>ContextTypeFlags</name>;</typedef>

<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>kCtxAll</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>INCLUDE_GENERATED_DECLARATIONS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"context.h.generated.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
