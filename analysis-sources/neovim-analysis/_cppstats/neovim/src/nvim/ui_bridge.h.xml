<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\neovim-analysis\_cppstats\neovim\src\nvim\ui_bridge.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;uv.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/ui.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/event/defs.h"</cpp:file></cpp:include>

<typedef>typedef <type><name><name>struct</name> <name>ui_bridge_data</name></name></type> <name>UIBridgeData</name>;</typedef>

<typedef>typedef <function_decl><type><name>void</name></type>(<modifier>*</modifier><name>ui_main_fn</name>)<parameter_list>(<parameter><decl><type><name>UIBridgeData</name> <modifier>*</modifier></type><name>bridge</name></decl></parameter>, <parameter><decl><type><name>UI</name> <modifier>*</modifier></type><name>ui</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<struct>struct <name>ui_bridge_data</name> <block>{

<decl_stmt><decl><type><name>UI</name></type> <name>bridge</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>UI</name> <modifier>*</modifier></type><name>ui</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>event_scheduler</name></type> <name>scheduler</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uv_thread_t</name></type> <name>ui_thread</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ui_main_fn</name></type> <name>ui_main</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uv_mutex_t</name></type> <name>mutex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uv_cond_t</name></type> <name>cond</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>ready</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>stopped</name></decl>;</decl_stmt>

}</block>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CONTINUE</name><parameter_list>(<parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { UIBridgeData *d = (UIBridgeData *)b; uv_mutex_lock(&amp;d-&gt;mutex); d-&gt;ready = true; uv_cond_signal(&amp;d-&gt;cond); uv_mutex_unlock(&amp;d-&gt;mutex); } while (0)</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>INCLUDE_GENERATED_DECLARATIONS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ui_bridge.h.generated.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
