<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\neovim-analysis\_cppstats\neovim\src\nvim\search.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdbool.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/vim.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/buffer_defs.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/eval/typval.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/normal.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/os/time.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FIND_ANY</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FIND_DEFINE</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CHECK_PATH</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ACTION_SHOW</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ACTION_GOTO</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ACTION_SPLIT</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ACTION_SHOW_ALL</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ACTION_EXPAND</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SEARCH_REV</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SEARCH_ECHO</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SEARCH_MSG</name></cpp:macro> <cpp:value>0x0c</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SEARCH_NFMSG</name></cpp:macro> <cpp:value>0x08</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SEARCH_OPT</name></cpp:macro> <cpp:value>0x10</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SEARCH_HIS</name></cpp:macro> <cpp:value>0x20</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SEARCH_END</name></cpp:macro> <cpp:value>0x40</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SEARCH_NOOF</name></cpp:macro> <cpp:value>0x80</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SEARCH_START</name></cpp:macro> <cpp:value>0x100</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SEARCH_MARK</name></cpp:macro> <cpp:value>0x200</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SEARCH_KEEP</name></cpp:macro> <cpp:value>0x400</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SEARCH_PEEK</name></cpp:macro> <cpp:value>0x800</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SEARCH_COL</name></cpp:macro> <cpp:value>0x1000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FM_BACKWARD</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FM_FORWARD</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FM_BLOCKSTOP</name></cpp:macro> <cpp:value>0x04</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FM_SKIPCOMM</name></cpp:macro> <cpp:value>0x08</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RE_SEARCH</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RE_SUBST</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RE_BOTH</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RE_LAST</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 

<typedef>typedef <type><struct>struct <name>soffset</name> <block>{

<decl_stmt><decl><type><name>char</name></type> <name>dir</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>bool</name></type> <name>line</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>bool</name></type> <name>end</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int64_t</name></type> <name>off</name></decl>;</decl_stmt> 

}</block></struct></type> <name>SearchOffset</name>;</typedef>

<typedef>typedef <type><struct>struct <name>spat</name> <block>{

<decl_stmt><decl><type><name>char_u</name> <modifier>*</modifier></type><name>pat</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>bool</name></type> <name>magic</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>bool</name></type> <name>no_scs</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>Timestamp</name></type> <name>timestamp</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>SearchOffset</name></type> <name>off</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>dict_T</name> <modifier>*</modifier></type><name>additional_data</name></decl>;</decl_stmt> 

}</block></struct></type> <name>SearchPattern</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>linenr_T</name></type> <name>sa_stop_lnum</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>proftime_T</name> <modifier>*</modifier></type><name>sa_tm</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>sa_timed_out</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>sa_wrapped</name></decl>;</decl_stmt> 

}</block></struct></type> <name>searchit_arg_T</name>;</typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>INCLUDE_GENERATED_DECLARATIONS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"search.h.generated.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
