<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\neovim-analysis\_cppstats\neovim\src\nvim\cursor_shape.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/types.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/api/private/defs.h"</cpp:file></cpp:include>

<typedef>typedef <type><enum>enum <block>{

<decl><name>SHAPE_IDX_N</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, 

<decl><name>SHAPE_IDX_V</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>, 

<decl><name>SHAPE_IDX_I</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>, 

<decl><name>SHAPE_IDX_R</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>, 

<decl><name>SHAPE_IDX_C</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>, 

<decl><name>SHAPE_IDX_CI</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>, 

<decl><name>SHAPE_IDX_CR</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>, 

<decl><name>SHAPE_IDX_O</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>, 

<decl><name>SHAPE_IDX_VE</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>, 

<decl><name>SHAPE_IDX_CLINE</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>, 

<decl><name>SHAPE_IDX_STATUS</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>, 

<decl><name>SHAPE_IDX_SDRAG</name> <init>= <expr><literal type="number">11</literal></expr></init></decl>, 

<decl><name>SHAPE_IDX_VSEP</name> <init>= <expr><literal type="number">12</literal></expr></init></decl>, 

<decl><name>SHAPE_IDX_VDRAG</name> <init>= <expr><literal type="number">13</literal></expr></init></decl>, 

<decl><name>SHAPE_IDX_MORE</name> <init>= <expr><literal type="number">14</literal></expr></init></decl>, 

<decl><name>SHAPE_IDX_MOREL</name> <init>= <expr><literal type="number">15</literal></expr></init></decl>, 

<decl><name>SHAPE_IDX_SM</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>, 

<decl><name>SHAPE_IDX_COUNT</name> <init>= <expr><literal type="number">17</literal></expr></init></decl>

}</block></enum></type> <name>ModeShape</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{

<decl><name>SHAPE_BLOCK</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, 

<decl><name>SHAPE_HOR</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>, 

<decl><name>SHAPE_VER</name> <init>= <expr><literal type="number">2</literal></expr></init></decl> 

}</block></enum></type> <name>CursorShape</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MSHAPE_NUMBERED</name></cpp:macro> <cpp:value>1000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MSHAPE_HIDE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHAPE_MOUSE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHAPE_CURSOR</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 

<typedef>typedef <type><struct>struct <name>cursor_entry</name> <block>{

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>full_name</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>CursorShape</name></type> <name>shape</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>mshape</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>percentage</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>long</name></type> <name>blinkwait</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>long</name></type> <name>blinkon</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>long</name></type> <name>blinkoff</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>id</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>id_lm</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>char</name></type> <name>used_for</name></decl>;</decl_stmt> 

}</block></struct></type> <name>cursorentry_T</name>;</typedef>

<decl_stmt><decl><type><specifier>extern</specifier> <name>cursorentry_T</name></type> <name><name>shape_table</name><index>[<expr><name>SHAPE_IDX_COUNT</name></expr>]</index></name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>INCLUDE_GENERATED_DECLARATIONS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cursor_shape.h.generated.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
