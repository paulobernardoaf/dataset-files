<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\neovim-analysis\_cppstats\neovim\src\nvim\hardcopy.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include> 

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/globals.h"</cpp:file></cpp:include> 

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/types.h"</cpp:file></cpp:include> 

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/ex_cmds_defs.h"</cpp:file></cpp:include> 

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>uint32_t</name></type> <name>fg_color</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>bg_color</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>TriState</name></type> <name>bold</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>TriState</name></type> <name>italic</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>TriState</name></type> <name>underline</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>undercurl</name></decl>;</decl_stmt>

}</block></struct></type> <name>prt_text_attr_T</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>int</name></type> <name>n_collated_copies</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>n_uncollated_copies</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>duplex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>chars_per_line</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>lines_per_page</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>has_color</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>prt_text_attr_T</name></type> <name>number</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>modec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>do_syntax</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>user_abort</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char_u</name> <modifier>*</modifier></type><name>jobname</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char_u</name> <modifier>*</modifier></type><name>outfile</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char_u</name> <modifier>*</modifier></type><name>arguments</name></decl>;</decl_stmt>

}</block></struct></type> <name>prt_settings_T</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>hasnum</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>number</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char_u</name> <modifier>*</modifier></type><name>string</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>strlen</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>present</name></decl>;</decl_stmt>

}</block></struct></type> <name>option_table_T</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPT_PRINT_TOP</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPT_PRINT_BOT</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPT_PRINT_LEFT</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPT_PRINT_RIGHT</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPT_PRINT_HEADERHEIGHT</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPT_PRINT_SYNTAX</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPT_PRINT_NUMBER</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPT_PRINT_WRAP</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPT_PRINT_DUPLEX</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPT_PRINT_PORTRAIT</name></cpp:macro> <cpp:value>9</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPT_PRINT_PAPER</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPT_PRINT_COLLATE</name></cpp:macro> <cpp:value>11</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPT_PRINT_JOBSPLIT</name></cpp:macro> <cpp:value>12</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPT_PRINT_FORMFEED</name></cpp:macro> <cpp:value>13</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPT_PRINT_NUM_OPTIONS</name></cpp:macro> <cpp:value>14</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRT_UNIT_NONE</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRT_UNIT_PERC</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRT_UNIT_INCH</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRT_UNIT_MM</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRT_UNIT_POINT</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRT_UNIT_NAMES</name></cpp:macro> <cpp:value>{"pc", "in", "mm", "pt"}</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRINT_NUMBER_WIDTH</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>INCLUDE_GENERATED_DECLARATIONS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"hardcopy.h.generated.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
