<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\neovim-analysis\_cppstats\neovim\src\nvim\extmark.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/buffer_defs.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/extmark_defs.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/marktree.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>EXTERN</name> <name>int</name> <name>extmark_splice_pending</name></type> <name>INIT</name><argument_list>(<argument><expr><operator>=</operator> <literal type="number">0</literal></expr></argument>)</argument_list></decl>;</decl_stmt>

<typedef>typedef <type><struct>struct

<block>{

<decl_stmt><decl><type><name>uint64_t</name></type> <name>ns_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>mark_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>row</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>colnr_T</name></type> <name>col</name></decl>;</decl_stmt>

}</block></struct></type> <name>ExtmarkInfo</name>;</typedef>

<typedef>typedef <macro><name>kvec_t</name><argument_list>(<argument>ExtmarkInfo</argument>)</argument_list></macro> <expr_stmt><expr><name>ExtmarkArray</name></expr>;</expr_stmt></typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>int</name></type> <name>start_row</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>colnr_T</name></type> <name>start_col</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>oldextent_row</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>colnr_T</name></type> <name>oldextent_col</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>newextent_row</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>colnr_T</name></type> <name>newextent_col</name></decl>;</decl_stmt>

}</block></struct></type> <name>ExtmarkSplice</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>int</name></type> <name>start_row</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>start_col</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>extent_row</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>extent_col</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>new_row</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>new_col</name></decl>;</decl_stmt>

}</block></struct></type> <name>ExtmarkMove</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>uint64_t</name></type> <name>mark</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>old_row</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>colnr_T</name></type> <name>old_col</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>row</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>colnr_T</name></type> <name>col</name></decl>;</decl_stmt>

}</block></struct></type> <name>ExtmarkSavePos</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{

<decl><name>kExtmarkSplice</name></decl>,

<decl><name>kExtmarkMove</name></decl>,

<decl><name>kExtmarkUpdate</name></decl>,

<decl><name>kExtmarkSavePos</name></decl>,

<decl><name>kExtmarkClear</name></decl>,

}</block></enum></type> <name>UndoObjectType</name>;</typedef>

<struct>struct <name>undo_object</name> <block>{

<decl_stmt><decl><type><name>UndoObjectType</name></type> <name>type</name></decl>;</decl_stmt>

<union>union <block>{

<decl_stmt><decl><type><name>ExtmarkSplice</name></type> <name>splice</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ExtmarkMove</name></type> <name>move</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ExtmarkSavePos</name></type> <name>savepos</name></decl>;</decl_stmt>

}</block> <decl><name>data</name></decl>;</union>

}</block>;</struct>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>int</name></type> <name>start_row</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>start_col</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>end_row</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>end_col</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>attr_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VirtText</name> <modifier>*</modifier></type><name>virt_text</name></decl>;</decl_stmt>

}</block></struct></type> <name>HlRange</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>MarkTreeIter</name></type> <name><name>itr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>

<macro><name>kvec_t</name><argument_list>(<argument>HlRange</argument>)</argument_list></macro> <expr_stmt><expr><name>active</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>top_row</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>row</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>col_until</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>current</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VirtText</name> <modifier>*</modifier></type><name>virt_text</name></decl>;</decl_stmt>

}</block></struct></type> <name>DecorationRedrawState</name>;</typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>INCLUDE_GENERATED_DECLARATIONS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"extmark.h.generated.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
