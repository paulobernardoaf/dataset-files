<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\neovim-analysis\_cppstats_featurelocations\neovim\src\tree_sitter\reduce_action.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>TREE_SITTER_REDUCE_ACTION_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TREE_SITTER_REDUCE_ACTION_H_</name></cpp:macro></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"./array.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tree_sitter/api.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>uint32_t</name></type> <name>count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>TSSymbol</name></type> <name>symbol</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>dynamic_precedence</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>short</name></type> <name>production_id</name></decl>;</decl_stmt>
}</block></struct></type> <name>ReduceAction</name>;</typedef>

<typedef>typedef <macro><name>Array</name><argument_list>(<argument>ReduceAction</argument>)</argument_list></macro> <expr_stmt><expr><name>ReduceActionSet</name></expr>;</expr_stmt></typedef>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>ts_reduce_action_set_add</name><parameter_list>(<parameter><decl><type><name>ReduceActionSet</name> <modifier>*</modifier></type><name>self</name></decl></parameter>,
<parameter><decl><type><name>ReduceAction</name></type> <name>new_action</name></decl></parameter>)</parameter_list> <block>{<block_content>
<for>for <control>(<init><decl><type><name>uint32_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>self</name><operator>-&gt;</operator><name>size</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>ReduceAction</name></type> <name>action</name> <init>= <expr><name><name>self</name><operator>-&gt;</operator><name>contents</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name><name>action</name><operator>.</operator><name>symbol</name></name> <operator>==</operator> <name><name>new_action</name><operator>.</operator><name>symbol</name></name> <operator>&amp;&amp;</operator> <name><name>action</name><operator>.</operator><name>count</name></name> <operator>==</operator> <name><name>new_action</name><operator>.</operator><name>count</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>array_push</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>new_action</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
