<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\neovim-analysis\_cppstats_featurelocations\neovim\src\tree_sitter\api.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>TREE_SITTER_API_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TREE_SITTER_API_H_</name></cpp:macro></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdbool.h&gt;</cpp:file></cpp:include>












<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TREE_SITTER_LANGUAGE_VERSION</name></cpp:macro> <cpp:value>11</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TREE_SITTER_MIN_COMPATIBLE_LANGUAGE_VERSION</name></cpp:macro> <cpp:value>9</cpp:value></cpp:define>





<typedef>typedef <type><name>uint16_t</name></type> <name>TSSymbol</name>;</typedef>
<typedef>typedef <type><name>uint16_t</name></type> <name>TSFieldId</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>TSLanguage</name></name></type> <name>TSLanguage</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>TSParser</name></name></type> <name>TSParser</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>TSTree</name></name></type> <name>TSTree</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>TSQuery</name></name></type> <name>TSQuery</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>TSQueryCursor</name></name></type> <name>TSQueryCursor</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{
<decl><name>TSInputEncodingUTF8</name></decl>,
<decl><name>TSInputEncodingUTF16</name></decl>,
}</block></enum></type> <name>TSInputEncoding</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{
<decl><name>TSSymbolTypeRegular</name></decl>,
<decl><name>TSSymbolTypeAnonymous</name></decl>,
<decl><name>TSSymbolTypeAuxiliary</name></decl>,
}</block></enum></type> <name>TSSymbolType</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>uint32_t</name></type> <name>row</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>column</name></decl>;</decl_stmt>
}</block></struct></type> <name>TSPoint</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>TSPoint</name></type> <name>start_point</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>TSPoint</name></type> <name>end_point</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>start_byte</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>end_byte</name></decl>;</decl_stmt>
}</block></struct></type> <name>TSRange</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>payload</name></decl>;</decl_stmt>
<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>read</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>payload</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>byte_index</name></decl></parameter>, <parameter><decl><type><name>TSPoint</name></type> <name>position</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>bytes_read</name></decl></parameter>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><name>TSInputEncoding</name></type> <name>encoding</name></decl>;</decl_stmt>
}</block></struct></type> <name>TSInput</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{
<decl><name>TSLogTypeParse</name></decl>,
<decl><name>TSLogTypeLex</name></decl>,
}</block></enum></type> <name>TSLogType</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>payload</name></decl>;</decl_stmt>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>log</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>payload</name></decl></parameter>, <parameter><decl><type><name>TSLogType</name></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
}</block></struct></type> <name>TSLogger</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>uint32_t</name></type> <name>start_byte</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>old_end_byte</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>new_end_byte</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>TSPoint</name></type> <name>start_point</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>TSPoint</name></type> <name>old_end_point</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>TSPoint</name></type> <name>new_end_point</name></decl>;</decl_stmt>
}</block></struct></type> <name>TSInputEdit</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>context</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>TSTree</name> <modifier>*</modifier></type><name>tree</name></decl>;</decl_stmt>
}</block></struct></type> <name>TSNode</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>tree</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>context</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>TSTreeCursor</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>TSNode</name></type> <name>node</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>index</name></decl>;</decl_stmt>
}</block></struct></type> <name>TSQueryCapture</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>uint32_t</name></type> <name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>pattern_index</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>capture_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>TSQueryCapture</name> <modifier>*</modifier></type><name>captures</name></decl>;</decl_stmt>
}</block></struct></type> <name>TSQueryMatch</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{
<decl><name>TSQueryPredicateStepTypeDone</name></decl>,
<decl><name>TSQueryPredicateStepTypeCapture</name></decl>,
<decl><name>TSQueryPredicateStepTypeString</name></decl>,
}</block></enum></type> <name>TSQueryPredicateStepType</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>TSQueryPredicateStepType</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>value_id</name></decl>;</decl_stmt>
}</block></struct></type> <name>TSQueryPredicateStep</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{
<decl><name>TSQueryErrorNone</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>TSQueryErrorSyntax</name></decl>,
<decl><name>TSQueryErrorNodeType</name></decl>,
<decl><name>TSQueryErrorField</name></decl>,
<decl><name>TSQueryErrorCapture</name></decl>,
}</block></enum></type> <name>TSQueryError</name>;</typedef>








<function_decl><type><name>TSParser</name> <modifier>*</modifier></type><name>ts_parser_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>ts_parser_delete</name><parameter_list>(<parameter><decl><type><name>TSParser</name> <modifier>*</modifier></type><name>parser</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>bool</name></type> <name>ts_parser_set_language</name><parameter_list>(<parameter><decl><type><name>TSParser</name> <modifier>*</modifier></type><name>self</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>TSLanguage</name> <modifier>*</modifier></type><name>language</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><specifier>const</specifier> <name>TSLanguage</name> <modifier>*</modifier></type><name>ts_parser_language</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>TSParser</name> <modifier>*</modifier></type><name>self</name></decl></parameter>)</parameter_list>;</function_decl>
























<function_decl><type><name>bool</name></type> <name>ts_parser_set_included_ranges</name><parameter_list>(
<parameter><decl><type><name>TSParser</name> <modifier>*</modifier></type><name>self</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>TSRange</name> <modifier>*</modifier></type><name>ranges</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>length</name></decl></parameter>
)</parameter_list>;</function_decl>








<function_decl><type><specifier>const</specifier> <name>TSRange</name> <modifier>*</modifier></type><name>ts_parser_included_ranges</name><parameter_list>(
<parameter><decl><type><specifier>const</specifier> <name>TSParser</name> <modifier>*</modifier></type><name>self</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>length</name></decl></parameter>
)</parameter_list>;</function_decl>







































<function_decl><type><name>TSTree</name> <modifier>*</modifier></type><name>ts_parser_parse</name><parameter_list>(
<parameter><decl><type><name>TSParser</name> <modifier>*</modifier></type><name>self</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>TSTree</name> <modifier>*</modifier></type><name>old_tree</name></decl></parameter>,
<parameter><decl><type><name>TSInput</name></type> <name>input</name></decl></parameter>
)</parameter_list>;</function_decl>







<function_decl><type><name>TSTree</name> <modifier>*</modifier></type><name>ts_parser_parse_string</name><parameter_list>(
<parameter><decl><type><name>TSParser</name> <modifier>*</modifier></type><name>self</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>TSTree</name> <modifier>*</modifier></type><name>old_tree</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>string</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>length</name></decl></parameter>
)</parameter_list>;</function_decl>







<function_decl><type><name>TSTree</name> <modifier>*</modifier></type><name>ts_parser_parse_string_encoding</name><parameter_list>(
<parameter><decl><type><name>TSParser</name> <modifier>*</modifier></type><name>self</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>TSTree</name> <modifier>*</modifier></type><name>old_tree</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>string</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>length</name></decl></parameter>,
<parameter><decl><type><name>TSInputEncoding</name></type> <name>encoding</name></decl></parameter>
)</parameter_list>;</function_decl>










<function_decl><type><name>void</name></type> <name>ts_parser_reset</name><parameter_list>(<parameter><decl><type><name>TSParser</name> <modifier>*</modifier></type><name>self</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>void</name></type> <name>ts_parser_set_timeout_micros</name><parameter_list>(<parameter><decl><type><name>TSParser</name> <modifier>*</modifier></type><name>self</name></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type> <name>timeout</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>uint64_t</name></type> <name>ts_parser_timeout_micros</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>TSParser</name> <modifier>*</modifier></type><name>self</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>void</name></type> <name>ts_parser_set_cancellation_flag</name><parameter_list>(<parameter><decl><type><name>TSParser</name> <modifier>*</modifier></type><name>self</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>size_t</name> <modifier>*</modifier></type><name>flag</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><specifier>const</specifier> <name>size_t</name> <modifier>*</modifier></type><name>ts_parser_cancellation_flag</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>TSParser</name> <modifier>*</modifier></type><name>self</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>void</name></type> <name>ts_parser_set_logger</name><parameter_list>(<parameter><decl><type><name>TSParser</name> <modifier>*</modifier></type><name>self</name></decl></parameter>, <parameter><decl><type><name>TSLogger</name></type> <name>logger</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>TSLogger</name></type> <name>ts_parser_logger</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>TSParser</name> <modifier>*</modifier></type><name>self</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>void</name></type> <name>ts_parser_print_dot_graphs</name><parameter_list>(<parameter><decl><type><name>TSParser</name> <modifier>*</modifier></type><name>self</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>file</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>TSTree</name> <modifier>*</modifier></type><name>ts_tree_copy</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>TSTree</name> <modifier>*</modifier></type><name>self</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>ts_tree_delete</name><parameter_list>(<parameter><decl><type><name>TSTree</name> <modifier>*</modifier></type><name>self</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>TSNode</name></type> <name>ts_tree_root_node</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>TSTree</name> <modifier>*</modifier></type><name>self</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><specifier>const</specifier> <name>TSLanguage</name> <modifier>*</modifier></type><name>ts_tree_language</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>TSTree</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>void</name></type> <name>ts_tree_edit</name><parameter_list>(<parameter><decl><type><name>TSTree</name> <modifier>*</modifier></type><name>self</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>TSInputEdit</name> <modifier>*</modifier></type><name>edit</name></decl></parameter>)</parameter_list>;</function_decl>















<function_decl><type><name>TSRange</name> <modifier>*</modifier></type><name>ts_tree_get_changed_ranges</name><parameter_list>(
<parameter><decl><type><specifier>const</specifier> <name>TSTree</name> <modifier>*</modifier></type><name>old_tree</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>TSTree</name> <modifier>*</modifier></type><name>new_tree</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>length</name></decl></parameter>
)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>ts_tree_print_dot_graph</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>TSTree</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>FILE</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ts_node_type</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>TSSymbol</name></type> <name>ts_node_symbol</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>uint32_t</name></type> <name>ts_node_start_byte</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>TSPoint</name></type> <name>ts_node_start_point</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>uint32_t</name></type> <name>ts_node_end_byte</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>TSPoint</name></type> <name>ts_node_end_point</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>char</name> <modifier>*</modifier></type><name>ts_node_string</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>bool</name></type> <name>ts_node_is_null</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>bool</name></type> <name>ts_node_is_named</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>bool</name></type> <name>ts_node_is_missing</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>bool</name></type> <name>ts_node_is_extra</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>bool</name></type> <name>ts_node_has_changes</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>bool</name></type> <name>ts_node_has_error</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>TSNode</name></type> <name>ts_node_parent</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>TSNode</name></type> <name>ts_node_child</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>uint32_t</name></type> <name>ts_node_child_count</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>TSNode</name></type> <name>ts_node_named_child</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>uint32_t</name></type> <name>ts_node_named_child_count</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>TSNode</name></type> <name>ts_node_child_by_field_name</name><parameter_list>(
<parameter><decl><type><name>TSNode</name></type> <name>self</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>field_name</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>field_name_length</name></decl></parameter>
)</parameter_list>;</function_decl>







<function_decl><type><name>TSNode</name></type> <name>ts_node_child_by_field_id</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>, <parameter><decl><type><name>TSFieldId</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>TSNode</name></type> <name>ts_node_next_sibling</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>TSNode</name></type> <name>ts_node_prev_sibling</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>TSNode</name></type> <name>ts_node_next_named_sibling</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>TSNode</name></type> <name>ts_node_prev_named_sibling</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>TSNode</name></type> <name>ts_node_first_child_for_byte</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>TSNode</name></type> <name>ts_node_first_named_child_for_byte</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>TSNode</name></type> <name>ts_node_descendant_for_byte_range</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>TSNode</name></type> <name>ts_node_descendant_for_point_range</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>, <parameter><decl><type><name>TSPoint</name></type></decl></parameter>, <parameter><decl><type><name>TSPoint</name></type></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>TSNode</name></type> <name>ts_node_named_descendant_for_byte_range</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>TSNode</name></type> <name>ts_node_named_descendant_for_point_range</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>, <parameter><decl><type><name>TSPoint</name></type></decl></parameter>, <parameter><decl><type><name>TSPoint</name></type></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>void</name></type> <name>ts_node_edit</name><parameter_list>(<parameter><decl><type><name>TSNode</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>TSInputEdit</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>bool</name></type> <name>ts_node_eq</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>, <parameter><decl><type><name>TSNode</name></type></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>TSTreeCursor</name></type> <name>ts_tree_cursor_new</name><parameter_list>(<parameter><decl><type><name>TSNode</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>ts_tree_cursor_delete</name><parameter_list>(<parameter><decl><type><name>TSTreeCursor</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>ts_tree_cursor_reset</name><parameter_list>(<parameter><decl><type><name>TSTreeCursor</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>TSNode</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>TSNode</name></type> <name>ts_tree_cursor_current_node</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>TSTreeCursor</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ts_tree_cursor_current_field_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>TSTreeCursor</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>TSFieldId</name></type> <name>ts_tree_cursor_current_field_id</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>TSTreeCursor</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>bool</name></type> <name>ts_tree_cursor_goto_parent</name><parameter_list>(<parameter><decl><type><name>TSTreeCursor</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>bool</name></type> <name>ts_tree_cursor_goto_next_sibling</name><parameter_list>(<parameter><decl><type><name>TSTreeCursor</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>bool</name></type> <name>ts_tree_cursor_goto_first_child</name><parameter_list>(<parameter><decl><type><name>TSTreeCursor</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>int64_t</name></type> <name>ts_tree_cursor_goto_first_child_for_byte</name><parameter_list>(<parameter><decl><type><name>TSTreeCursor</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>TSTreeCursor</name></type> <name>ts_tree_cursor_copy</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>TSTreeCursor</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
















<function_decl><type><name>TSQuery</name> <modifier>*</modifier></type><name>ts_query_new</name><parameter_list>(
<parameter><decl><type><specifier>const</specifier> <name>TSLanguage</name> <modifier>*</modifier></type><name>language</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>source</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>source_len</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>error_offset</name></decl></parameter>,
<parameter><decl><type><name>TSQueryError</name> <modifier>*</modifier></type><name>error_type</name></decl></parameter>
)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>ts_query_delete</name><parameter_list>(<parameter><decl><type><name>TSQuery</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>uint32_t</name></type> <name>ts_query_pattern_count</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>TSQuery</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>uint32_t</name></type> <name>ts_query_capture_count</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>TSQuery</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>uint32_t</name></type> <name>ts_query_string_count</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>TSQuery</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>uint32_t</name></type> <name>ts_query_start_byte_for_pattern</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>TSQuery</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

















<function_decl><type><specifier>const</specifier> <name>TSQueryPredicateStep</name> <modifier>*</modifier></type><name>ts_query_predicates_for_pattern</name><parameter_list>(
<parameter><decl><type><specifier>const</specifier> <name>TSQuery</name> <modifier>*</modifier></type><name>self</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>pattern_index</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>length</name></decl></parameter>
)</parameter_list>;</function_decl>






<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ts_query_capture_name_for_id</name><parameter_list>(
<parameter><decl><type><specifier>const</specifier> <name>TSQuery</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>id</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>length</name></decl></parameter>
)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ts_query_string_value_for_id</name><parameter_list>(
<parameter><decl><type><specifier>const</specifier> <name>TSQuery</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>id</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>length</name></decl></parameter>
)</parameter_list>;</function_decl>








<function_decl><type><name>void</name></type> <name>ts_query_disable_capture</name><parameter_list>(<parameter><decl><type><name>TSQuery</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>void</name></type> <name>ts_query_disable_pattern</name><parameter_list>(<parameter><decl><type><name>TSQuery</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type></decl></parameter>)</parameter_list>;</function_decl>























<function_decl><type><name>TSQueryCursor</name> <modifier>*</modifier></type><name>ts_query_cursor_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>ts_query_cursor_delete</name><parameter_list>(<parameter><decl><type><name>TSQueryCursor</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>ts_query_cursor_exec</name><parameter_list>(<parameter><decl><type><name>TSQueryCursor</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>TSQuery</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>TSNode</name></type></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>ts_query_cursor_set_byte_range</name><parameter_list>(<parameter><decl><type><name>TSQueryCursor</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ts_query_cursor_set_point_range</name><parameter_list>(<parameter><decl><type><name>TSQueryCursor</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>TSPoint</name></type></decl></parameter>, <parameter><decl><type><name>TSPoint</name></type></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>bool</name></type> <name>ts_query_cursor_next_match</name><parameter_list>(<parameter><decl><type><name>TSQueryCursor</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>TSQueryMatch</name> <modifier>*</modifier></type><name>match</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ts_query_cursor_remove_match</name><parameter_list>(<parameter><decl><type><name>TSQueryCursor</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>bool</name></type> <name>ts_query_cursor_next_capture</name><parameter_list>(
<parameter><decl><type><name>TSQueryCursor</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>TSQueryMatch</name> <modifier>*</modifier></type><name>match</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>capture_index</name></decl></parameter>
)</parameter_list>;</function_decl>








<function_decl><type><name>uint32_t</name></type> <name>ts_language_symbol_count</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>TSLanguage</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ts_language_symbol_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>TSLanguage</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>TSSymbol</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>TSSymbol</name></type> <name>ts_language_symbol_for_name</name><parameter_list>(
<parameter><decl><type><specifier>const</specifier> <name>TSLanguage</name> <modifier>*</modifier></type><name>self</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>string</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>length</name></decl></parameter>,
<parameter><decl><type><name>bool</name></type> <name>is_named</name></decl></parameter>
)</parameter_list>;</function_decl>




<function_decl><type><name>uint32_t</name></type> <name>ts_language_field_count</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>TSLanguage</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ts_language_field_name_for_id</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>TSLanguage</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>TSFieldId</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>TSFieldId</name></type> <name>ts_language_field_id_for_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>TSLanguage</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>TSSymbolType</name></type> <name>ts_language_symbol_type</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>TSLanguage</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>TSSymbol</name></type></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>uint32_t</name></type> <name>ts_language_version</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>TSLanguage</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
