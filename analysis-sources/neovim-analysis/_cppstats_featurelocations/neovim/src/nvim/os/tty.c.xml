<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\neovim-analysis\_cppstats_featurelocations\neovim\src\nvim\os\tty.c">






<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/os/os.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/os/tty.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>INCLUDE_GENERATED_DECLARATIONS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"os/tty.c.generated.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>ENABLE_VIRTUAL_TERMINAL_PROCESSING</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ENABLE_VIRTUAL_TERMINAL_PROCESSING</name></cpp:macro> <cpp:value>0x0004</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>





<function><type><name>void</name></type> <name>os_tty_guess_term</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>term</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>out_fd</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>bool</name></type> <name>winpty</name> <init>= <expr><operator>(</operator><call><name>os_getenv</name><argument_list>(<argument><expr><literal type="string">"NVIM"</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <name>NULL</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>winpty</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>term</name> <operator>=</operator> <literal type="string">"win32con"</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>uv_set_vterm_state</name><argument_list>(<argument><expr><name>UV_UNSUPPORTED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return;</return>
</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>conemu_ansi</name> <init>= <expr><call><name>strequal</name><argument_list>(<argument><expr><call><name>os_getenv</name><argument_list>(<argument><expr><literal type="string">"ConEmuANSI"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="string">"ON"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>vtp</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>HANDLE</name></type> <name>handle</name> <init>= <expr><operator>(</operator><name>HANDLE</name><operator>)</operator><call><name>_get_osfhandle</name><argument_list>(<argument><expr><name>out_fd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>DWORD</name></type> <name>dwMode</name></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>handle</name> <operator>!=</operator> <name>INVALID_HANDLE_VALUE</name> <operator>&amp;&amp;</operator> <call><name>GetConsoleMode</name><argument_list>(<argument><expr><name>handle</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>dwMode</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>dwMode</name> <operator>|=</operator> <name>ENABLE_VIRTUAL_TERMINAL_PROCESSING</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>SetConsoleMode</name><argument_list>(<argument><expr><name>handle</name></expr></argument>, <argument><expr><name>dwMode</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>vtp</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>*</operator><name>term</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>vtp</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>term</name> <operator>=</operator> <literal type="string">"vtpcon"</literal></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>conemu_ansi</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>term</name> <operator>=</operator> <literal type="string">"conemu"</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>term</name> <operator>=</operator> <literal type="string">"win32con"</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>conemu_ansi</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>uv_set_vterm_state</name><argument_list>(<argument><expr><name>UV_SUPPORTED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
