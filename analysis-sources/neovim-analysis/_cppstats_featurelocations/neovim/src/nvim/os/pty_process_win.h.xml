<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\neovim-analysis\_cppstats_featurelocations\neovim\src\nvim\os\pty_process_win.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>NVIM_OS_PTY_PROCESS_WIN_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NVIM_OS_PTY_PROCESS_WIN_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;uv.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;winpty.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/event/process.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/lib/queue.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/os/pty_conpty_win.h"</cpp:file></cpp:include>

<typedef>typedef <type><enum>enum <block>{
<decl><name>kWinpty</name></decl>,
<decl><name>kConpty</name></decl>
}</block></enum></type> <name>PtyType</name>;</typedef>

<typedef>typedef <type><struct>struct <name>pty_process</name> <block>{
<decl_stmt><decl><type><name>Process</name></type> <name>process</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>term_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>width</name></decl>, <name>height</name>;</decl_stmt>
<union>union <block>{
<decl_stmt><decl><type><name>winpty_t</name> <modifier>*</modifier></type><name>winpty</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>conpty_t</name> <modifier>*</modifier></type><name>conpty</name></decl>;</decl_stmt>
}</block> <decl><name>object</name></decl>;</union>
<decl_stmt><decl><type><name>PtyType</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>HANDLE</name></type> <name>finish_wait</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>HANDLE</name></type> <name>process_handle</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uv_timer_t</name></type> <name>wait_eof_timer</name></decl>;</decl_stmt>
}</block></struct></type> <name>PtyProcess</name>;</typedef>


<typedef>typedef <type><struct>struct <name>arg_node</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>arg</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>QUEUE</name></type> <name>node</name></decl>;</decl_stmt> 
}</block></struct></type> <name>ArgNode</name>;</typedef>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>PtyProcess</name></type> <name>pty_process_init</name><parameter_list>(<parameter><decl><type><name>Loop</name> <modifier>*</modifier></type><name>loop</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PtyProcess</name></type> <name>rv</name></decl>;</decl_stmt>
<expr_stmt><expr><name><name>rv</name><operator>.</operator><name>process</name></name> <operator>=</operator> <call><name>process_init</name><argument_list>(<argument><expr><name>loop</name></expr></argument>, <argument><expr><name>kProcessTypePty</name></expr></argument>, <argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>rv</name><operator>.</operator><name>term_name</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>rv</name><operator>.</operator><name>width</name></name> <operator>=</operator> <literal type="number">80</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>rv</name><operator>.</operator><name>height</name></name> <operator>=</operator> <literal type="number">24</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>rv</name><operator>.</operator><name>object</name><operator>.</operator><name>winpty</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>rv</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>kWinpty</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>rv</name><operator>.</operator><name>finish_wait</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>rv</name><operator>.</operator><name>process_handle</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<return>return <expr><name>rv</name></expr>;</return>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>INCLUDE_GENERATED_DECLARATIONS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"os/pty_process_win.h.generated.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
