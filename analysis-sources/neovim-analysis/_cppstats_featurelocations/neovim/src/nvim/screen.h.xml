<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\neovim-analysis\_cppstats_featurelocations\neovim\src\nvim\screen.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>NVIM_SCREEN_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NVIM_SCREEN_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdbool.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/types.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/buffer_defs.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/grid_defs.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/pos.h"</cpp:file></cpp:include>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VALID</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INVERTED</name></cpp:macro> <cpp:value>20</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INVERTED_ALL</name></cpp:macro> <cpp:value>25</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REDRAW_TOP</name></cpp:macro> <cpp:value>30</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SOME_VALID</name></cpp:macro> <cpp:value>35</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NOT_VALID</name></cpp:macro> <cpp:value>40</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CLEAR</name></cpp:macro> <cpp:value>50</cpp:value></cpp:define> 








<decl_stmt><decl><type><name>EXTERN</name> <name>ScreenGrid</name> <name>default_grid</name></type> <name>INIT</name><argument_list>(<argument><expr><operator>=</operator> <name>SCREEN_GRID_INIT</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEFAULT_GRID_HANDLE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 


<typedef>typedef <type><struct>struct <block>{
<enum>enum <block>{
<decl><name>kStlClickDisabled</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, 
<decl><name>kStlClickTabSwitch</name></decl>, 
<decl><name>kStlClickTabClose</name></decl>, 
<decl><name>kStlClickFuncRun</name></decl>, 
}</block> <decl><name>type</name></decl>;</enum> 
<decl_stmt><decl><type><name>int</name></type> <name>tabnr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>func</name></decl>;</decl_stmt> 
}</block></struct></type> <name>StlClickDefinition</name>;</typedef>


<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>StlClickDefinition</name></type> <name>def</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>start</name></decl>;</decl_stmt> 
}</block></struct></type> <name>StlClickRecord</name>;</typedef>


<decl_stmt><decl><type><specifier>extern</specifier> <name>StlClickDefinition</name> <modifier>*</modifier></type><name>tab_page_click_defs</name></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>extern</specifier> <name>long</name></type> <name>tab_page_click_defs_size</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>W_ENDCOL</name><parameter_list>(<parameter><type><name>wp</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(wp-&gt;w_wincol + wp-&gt;w_width)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>W_ENDROW</name><parameter_list>(<parameter><type><name>wp</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(wp-&gt;w_winrow + wp-&gt;w_height)</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>INCLUDE_GENERATED_DECLARATIONS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"screen.h.generated.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
