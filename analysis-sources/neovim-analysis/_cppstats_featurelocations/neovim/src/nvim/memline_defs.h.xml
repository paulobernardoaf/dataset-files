<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\neovim-analysis\_cppstats_featurelocations\neovim\src\nvim\memline_defs.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>NVIM_MEMLINE_DEFS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NVIM_MEMLINE_DEFS_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/memfile_defs.h"</cpp:file></cpp:include>






<typedef>typedef <type><struct>struct <name>info_pointer</name> <block>{
<decl_stmt><decl><type><name>blocknr_T</name></type> <name>ip_bnum</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>linenr_T</name></type> <name>ip_low</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>linenr_T</name></type> <name>ip_high</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>ip_index</name></decl>;</decl_stmt> 
}</block></struct></type> <name>infoptr_T</name>;</typedef> 

<typedef>typedef <type><struct>struct <name>ml_chunksize</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>mlcs_numlines</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>long</name></type> <name>mlcs_totalsize</name></decl>;</decl_stmt>
}</block></struct></type> <name>chunksize_T</name>;</typedef>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ML_CHNK_ADDLINE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ML_CHNK_DELLINE</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ML_CHNK_UPDLINE</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>
















<typedef>typedef <type><struct>struct <name>memline</name> <block>{
<decl_stmt><decl><type><name>linenr_T</name></type> <name>ml_line_count</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>memfile_T</name> <modifier>*</modifier></type><name>ml_mfp</name></decl>;</decl_stmt> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ML_EMPTY</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ML_LINE_DIRTY</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ML_LOCKED_DIRTY</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ML_LOCKED_POS</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define> 
<decl_stmt><decl><type><name>int</name></type> <name>ml_flags</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>infoptr_T</name> <modifier>*</modifier></type><name>ml_stack</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>ml_stack_top</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>ml_stack_size</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>linenr_T</name></type> <name>ml_line_lnum</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char_u</name> <modifier>*</modifier></type><name>ml_line_ptr</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>bhdr_T</name> <modifier>*</modifier></type><name>ml_locked</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>linenr_T</name></type> <name>ml_locked_low</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>linenr_T</name></type> <name>ml_locked_high</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>ml_locked_lineadd</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>chunksize_T</name> <modifier>*</modifier></type><name>ml_chunksize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ml_numchunks</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ml_usedchunks</name></decl>;</decl_stmt>
}</block></struct></type> <name>memline_T</name>;</typedef>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
