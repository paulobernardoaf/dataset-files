<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\neovim-analysis\_cppstats_featurelocations\neovim\src\nvim\api\private\handle.c">


<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/vim.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/map.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/api/private/handle.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HANDLE_INIT</name><parameter_list>(<parameter><type><name>name</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>name##_handles = pmap_new(handle_T)()</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HANDLE_IMPL</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>name</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>static PMap(handle_T) *name##_handles = NULL; type *handle_get_##name(handle_T handle) { return pmap_get(handle_T)(name##_handles, handle); } void handle_register_##name(type *name) { pmap_put(handle_T)(name##_handles, name-&gt;handle, name); } void handle_unregister_##name(type *name) { pmap_del(handle_T)(name##_handles, name-&gt;handle); }</cpp:value></cpp:define>

















<macro><name>HANDLE_IMPL</name><argument_list>(<argument>buf_T</argument>, <argument>buffer</argument>)</argument_list></macro>
<macro><name>HANDLE_IMPL</name><argument_list>(<argument>win_T</argument>, <argument>window</argument>)</argument_list></macro>
<macro><name>HANDLE_IMPL</name><argument_list>(<argument>tabpage_T</argument>, <argument>tabpage</argument>)</argument_list></macro>

<function><type><name>void</name></type> <name>handle_init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>HANDLE_INIT</name><argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HANDLE_INIT</name><argument_list>(<argument><expr><name>window</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HANDLE_INIT</name><argument_list>(<argument><expr><name>tabpage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
