<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\neovim-analysis\_cppstats_featurelocations\neovim\src\nvim\mark_defs.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>NVIM_MARK_DEFS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NVIM_MARK_DEFS_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/pos.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/os/time.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nvim/eval/typval.h"</cpp:file></cpp:include>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EXTRA_MARKS</name></cpp:macro> <cpp:value>('9' - '0' + 1)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NMARKS</name></cpp:macro> <cpp:value>('z' - 'a' + 1)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NGLOBALMARKS</name></cpp:macro> <cpp:value>(NMARKS + EXTRA_MARKS)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NLOCALMARKS</name></cpp:macro> <cpp:value>(NMARKS + 3)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JUMPLISTSIZE</name></cpp:macro> <cpp:value>100</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAGSTACKSIZE</name></cpp:macro> <cpp:value>20</cpp:value></cpp:define>


<typedef>typedef <type><struct>struct <name>filemark</name> <block>{
<decl_stmt><decl><type><name>pos_T</name></type> <name>mark</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>fnum</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>Timestamp</name></type> <name>timestamp</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>dict_T</name> <modifier>*</modifier></type><name>additional_data</name></decl>;</decl_stmt> 
}</block></struct></type> <name>fmark_T</name>;</typedef>


<typedef>typedef <type><struct>struct <name>xfilemark</name> <block>{
<decl_stmt><decl><type><name>fmark_T</name></type> <name>fmark</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char_u</name> <modifier>*</modifier></type><name>fname</name></decl>;</decl_stmt> 
}</block></struct></type> <name>xfmark_T</name>;</typedef>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
